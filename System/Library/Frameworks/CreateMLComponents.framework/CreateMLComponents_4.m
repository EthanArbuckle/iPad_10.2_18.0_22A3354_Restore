void sub_22AB89FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14[3];
  uint64_t v15;

  OUTLINED_FUNCTION_12();
  v14[2] = v1;
  v15 = v0;
  v14[1] = v2;
  v4 = v3;
  v5 = *(_QWORD *)(v1 + 24);
  v14[0] = *(_QWORD *)(v1 + 16);
  v7 = type metadata accessor for TreeInnerNode.CodingKeys(255, v14[0], v5, v6);
  MEMORY[0x22E2E4D80](&unk_22ABFF3F0, v7);
  v8 = sub_22ABDFD58();
  v9 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v14 - v11;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_22ABE02B0();
  v13 = v15;
  sub_22ABDFD34();
  if (!v13)
  {
    OUTLINED_FUNCTION_9_95();
    OUTLINED_FUNCTION_3_109();
    OUTLINED_FUNCTION_13_84();
    OUTLINED_FUNCTION_8_97();
    OUTLINED_FUNCTION_8_97();
    OUTLINED_FUNCTION_8_97();
    OUTLINED_FUNCTION_3_109();
    OUTLINED_FUNCTION_3_109();
    sub_22ABDFCF8();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  OUTLINED_FUNCTION_16();
}

void sub_22AB8A200()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v5 = type metadata accessor for TreeLeaf.CodingKeys(255, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v4);
  MEMORY[0x22E2E4D80](&unk_22ABFF440, v5);
  v6 = *(_QWORD *)(sub_22ABDFD58() - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_16_75();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_22ABE02B0();
  sub_22ABDFD4C();
  if (!v0)
  {
    OUTLINED_FUNCTION_9_95();
    OUTLINED_FUNCTION_14_77();
    sub_22ABDFD4C();
    OUTLINED_FUNCTION_13_84();
    OUTLINED_FUNCTION_14_77();
    sub_22ABDFCF8();
  }
  OUTLINED_FUNCTION_19_62(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_16();
}

void sub_22AB8A330()
{
  sub_22AB89478();
}

void sub_22AB8A350()
{
  sub_22AB89E7C();
}

uint64_t sub_22AB8A368(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  if (a1 == 0xD000000000000011 && a2 == 0x800000022ABE7390 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6E6F4374696C7073 && a2 == 0xEE006E6F69746964;
    if (v5 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x6C6968437373656CLL && a2 == 0xEE007865646E4964;
      if (v6 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x800000022ABE73B0 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x800000022ABE73D0 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v7 = a1 == 1852399975 && a2 == 0xE400000000000000;
        if (v7 || (sub_22ABDFF68() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v8 = a1 == 0x6769655765736162 && a2 == 0xEA00000000007468;
          if (v8 || (sub_22ABDFF68() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x7265766F63 && a2 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v10 = sub_22ABDFF68();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              return 7;
            else
              return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_22AB8A6BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22AB8A6F4 + 4 * byte_22ABFEEB0[a1]))(0xD000000000000011, 0x800000022ABE7390);
}

uint64_t sub_22AB8A6F4()
{
  return 0x6E6F4374696C7073;
}

uint64_t sub_22AB8A718()
{
  return 0x6C6968437373656CLL;
}

uint64_t sub_22AB8A75C()
{
  return 1852399975;
}

uint64_t sub_22AB8A76C()
{
  return 0x6769655765736162;
}

uint64_t sub_22AB8A788()
{
  return 0x7265766F63;
}

uint64_t sub_22AB8A79C()
{
  unsigned __int8 *v0;

  return sub_22AB8A6BC(*v0);
}

uint64_t sub_22AB8A7A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AB8A368(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AB8A7D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA946B8();
  *a1 = result;
  return result;
}

uint64_t sub_22AB8A800(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABFF3F0, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AB8A834(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABFF3F0, a1);
  return sub_22ABE02F8();
}

void sub_22AB8A868()
{
  sub_22AB89FE8();
}

void sub_22AB8A880()
{
  sub_22AB89690();
}

uint64_t sub_22AB8A8A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6769655765736162 && a2 == 0xEA00000000007468;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7265766F63 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_22AB8A9E8(char a1)
{
  if (!a1)
    return 0x65756C6176;
  if (a1 == 1)
    return 0x6769655765736162;
  return 0x7265766F63;
}

uint64_t sub_22AB8AA3C()
{
  char *v0;

  return sub_22AB8A9E8(*v0);
}

uint64_t sub_22AB8AA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AB8A8A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AB8AA74(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABFF440, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AB8AAA8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABFF440, a1);
  return sub_22ABE02F8();
}

void sub_22AB8AADC()
{
  sub_22AB8A200();
}

void sub_22AB8AAF4()
{
  sub_22AB89B60();
}

uint64_t type metadata accessor for Tree.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Tree.CodingKeys);
}

uint64_t type metadata accessor for TreeNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TreeNode);
}

uint64_t type metadata accessor for TreeLeaf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TreeLeaf);
}

uint64_t type metadata accessor for TreeInnerNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TreeInnerNode);
}

uint64_t type metadata accessor for TreeLeaf.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TreeLeaf.CodingKeys);
}

uint64_t type metadata accessor for TreeInnerNode.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TreeInnerNode.CodingKeys);
}

uint64_t sub_22AB8AB5C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22AB8ABA8 + 4 * byte_22ABFEEBD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22AB8ABDC + 4 * byte_22ABFEEB8[v4]))();
}

uint64_t sub_22AB8ABDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB8ABE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AB8ABECLL);
  return result;
}

uint64_t sub_22AB8ABF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AB8AC00);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22AB8AC04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB8AC0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB8AC18(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22AB8AC64 + 4 * byte_22ABFEEC7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22AB8AC98 + 4 * byte_22ABFEEC2[v4]))();
}

uint64_t sub_22AB8AC98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB8ACA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AB8ACA8);
  return result;
}

uint64_t sub_22AB8ACB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AB8ACBCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22AB8ACC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB8ACC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB8ACD4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AB8AD20 + 4 * byte_22ABFEED1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AB8AD54 + 4 * byte_22ABFEECC[v4]))();
}

uint64_t sub_22AB8AD54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB8AD5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AB8AD64);
  return result;
}

uint64_t sub_22AB8AD70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AB8AD78);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AB8AD7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB8AD84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB8AD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  result = type metadata accessor for TreeInnerNode(319, v4, v5, a4);
  if (v8 <= 0x3F)
  {
    result = type metadata accessor for TreeLeaf(319, v4, v5, v7);
    if (v9 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22AB8AE2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  int v15;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  const void *v38;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = v7 + 8;
  v10 = *(_QWORD *)(v6 + 64);
  v11 = v10 + 7;
  v12 = v10 + v7;
  if (*(_DWORD *)(v6 + 84))
    v13 = *(_QWORD *)(v6 + 64);
  else
    v13 = v10 + 1;
  if (((v12 + (v12 & ~(unint64_t)v7)) & ~(unint64_t)v7) + v13 <= ((v12 + ((v12 + ((v7 + 8 + ((((((v10 + 7 + ((v7 + 8) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v7)) & ~(unint64_t)v7)) & ~(unint64_t)v7) + v13)
    v14 = ((v12
          + ((v12
            + ((v7
              + 8
              + ((((((v10 + 7 + ((v7 + 8) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v7)) & ~(unint64_t)v7)) & ~(unint64_t)v7)
        + v13;
  else
    v14 = ((v12 + (v12 & ~(unint64_t)v7)) & ~(unint64_t)v7) + v13;
  v15 = v7 & 0x100000;
  if (v8 > 7 || v15 != 0 || v14 + 1 > 0x18)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    v19 = *((unsigned __int8 *)a2 + v14);
    if (v19 >= 2)
    {
      if (v14 <= 3)
        v20 = v14;
      else
        v20 = 4;
      __asm { BR              X14 }
    }
    v21 = ~v8;
    if (v19 == 1)
    {
      v22 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
      v22(a1, a2, *(_QWORD *)(a3 + 16));
      v23 = ((unint64_t)a2 + v12) & v21;
      v22((uint64_t *)(((unint64_t)v4 + v12) & v21), (uint64_t *)v23, v5);
      if (__swift_getEnumTagSinglePayload((v12 + v23) & v21, 1, v5))
      {
        memcpy((void *)((v12 + (((unint64_t)v4 + v12) & v21)) & v21), (const void *)((v12 + v23) & v21), v13);
      }
      else
      {
        v22((uint64_t *)((v12 + (((unint64_t)v4 + v12) & v21)) & v21), (uint64_t *)((v12 + v23) & v21), v5);
        __swift_storeEnumTagSinglePayload((v12 + (((unint64_t)v4 + v12) & v21)) & v21, 0, 1, v5);
      }
      *((_BYTE *)v4 + v14) = 1;
    }
    else
    {
      *a1 = *a2;
      v24 = ((unint64_t)a1 + v8 + 8) & v21;
      v25 = ((unint64_t)a2 + v8 + 8) & v21;
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v26(v24, v25, v5);
      v27 = (_QWORD *)((v11 + v24) & 0xFFFFFFFFFFFFF8);
      v28 = (_QWORD *)((v11 + v25) & 0xFFFFFFFFFFFFF8);
      *v27 = *v28;
      v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFF8);
      v30 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFF8);
      *v29 = *v30;
      v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
      v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v31 = *v32;
      v33 = ((unint64_t)v31 + v9) & v21;
      v34 = ((unint64_t)v32 + v9) & v21;
      v26(v33, v34, v5);
      v35 = (v12 + v33) & v21;
      v36 = (v12 + v34) & v21;
      v26(v35, v36, v5);
      v37 = (void *)((v12 + v35) & v21);
      v38 = (const void *)((v12 + v36) & v21);
      if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v5))
      {
        memcpy(v37, v38, v13);
      }
      else
      {
        v26((uint64_t)v37, (uint64_t)v38, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v5);
      }
      v4 = a1;
      *((_BYTE *)a1 + v14) = 0;
    }
  }
  return v4;
}

uint64_t sub_22AB8B15C(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  void (*v20)(uint64_t, uint64_t);

  v2 = a1;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = v5 + 8;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = v7 + 7;
  v9 = v7 + v5;
  v10 = (v7
       + v5
       + ((v7
         + v5
         + ((v5
           + 8
           + ((((((v7 + 7 + ((v5 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & ~v5)) & ~v5;
  if (!*(_DWORD *)(v4 + 84))
    ++v7;
  v11 = v10 + v7;
  v12 = ((v9 + (v9 & ~v5)) & ~v5) + v7;
  if (v12 > v11)
    v11 = v12;
  v13 = *(unsigned __int8 *)(a1 + v11);
  if (v13 >= 2)
  {
    if (v11 <= 3)
      v14 = v11;
    else
      v14 = 4;
    __asm { BR              X15 }
  }
  v15 = ~v5;
  if (v13 == 1)
  {
    v20 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  }
  else
  {
    v16 = (a1 + v5 + 8) & v15;
    v20 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v20(v16, v3);
    v2 = (v6 + ((((((v8 + v16) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v15;
  }
  v20(v2, v3);
  v17 = (v9 + v2) & v15;
  v20(v17, v3);
  v18 = (v9 + v17) & v15;
  result = __swift_getEnumTagSinglePayload(v18, 1, v3);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v20)(v18, v3);
  return result;
}

_QWORD *sub_22AB8B340(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD *, _QWORD *, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  const void *v34;
  size_t __n;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v7 + 8;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v9 + 7;
  v11 = v9 + v7;
  if (*(_DWORD *)(v6 + 84))
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = v9 + 1;
  __n = v12;
  if (((v11 + (v11 & ~v7)) & ~v7) + v12 <= ((v9
                                            + v7
                                            + ((v9
                                              + v7
                                              + ((v7
                                                + 8
                                                + ((((((v9 + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                                  + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v7)) & ~v7)
                                          + v12)
    v13 = ((v9
          + v7
          + ((v9
            + v7
            + ((v7
              + 8
              + ((((((v9 + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v7)) & ~v7)
        + v12;
  else
    v13 = ((v11 + (v11 & ~v7)) & ~v7) + v12;
  v14 = *((unsigned __int8 *)a2 + v13);
  if (v14 >= 2)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X14 }
  }
  v16 = ~v7;
  if (v14 == 1)
  {
    v17 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16);
    v17(a1, a2, v5);
    v18 = ((unint64_t)a2 + v11) & v16;
    v17((_QWORD *)(((unint64_t)a1 + v11) & v16), (_QWORD *)v18, v5);
    if (__swift_getEnumTagSinglePayload((v11 + v18) & v16, 1, v5))
    {
      memcpy((void *)((v11 + (((unint64_t)a1 + v11) & v16)) & v16), (const void *)((v11 + v18) & v16), __n);
      v19 = 1;
    }
    else
    {
      v17((_QWORD *)((v11 + (((unint64_t)a1 + v11) & v16)) & v16), (_QWORD *)((v11 + v18) & v16), v5);
      v19 = 1;
      __swift_storeEnumTagSinglePayload((v11 + (((unint64_t)a1 + v11) & v16)) & v16, 0, 1, v5);
    }
  }
  else
  {
    *a1 = *a2;
    v20 = ((unint64_t)a1 + v7 + 8) & v16;
    v21 = ((unint64_t)a2 + v7 + 8) & v16;
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v22(v20, v21, v5);
    v23 = (_QWORD *)((v10 + v20) & 0xFFFFFFFFFFFFF8);
    v24 = (_QWORD *)((v10 + v21) & 0xFFFFFFFFFFFFF8);
    *v23 = *v24;
    v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
    *v25 = *v26;
    v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v27 = *v28;
    v29 = ((unint64_t)v27 + v8) & v16;
    v30 = ((unint64_t)v28 + v8) & v16;
    v22(v29, v30, v5);
    v31 = (v11 + v29) & v16;
    v32 = (v11 + v30) & v16;
    v22(v31, v32, v5);
    v33 = (void *)((v11 + v31) & v16);
    v34 = (const void *)((v11 + v32) & v16);
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v5))
    {
      memcpy(v33, v34, __n);
    }
    else
    {
      v22((uint64_t)v33, (uint64_t)v34, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v5);
    }
    v19 = 0;
  }
  *((_BYTE *)a1 + v13) = v19;
  return a1;
}

_QWORD *sub_22AB8B634(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  void (*v23)(_QWORD *, _QWORD *, uint64_t);
  unint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  const void *v41;
  size_t __n;
  uint64_t v44;
  uint64_t v45;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v8 = *(_QWORD *)(v6 + 64);
    v44 = v8 + 7;
    v45 = v7 + 8;
    v9 = v8 + v7;
    if (*(_DWORD *)(v6 + 84))
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = v8 + 1;
    __n = v10;
    if (((v9 + (v9 & ~v7)) & ~v7) + v10 <= ((v8
                                            + v7
                                            + ((v8
                                              + v7
                                              + ((v7
                                                + 8
                                                + ((((((v8 + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                                  + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v7)) & ~v7)
                                          + v10)
      v11 = ((v8
            + v7
            + ((v8
              + v7
              + ((v7
                + 8
                + ((((((v8 + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v7)) & ~v7)
          + v10;
    else
      v11 = ((v9 + (v9 & ~v7)) & ~v7) + v10;
    v12 = *((unsigned __int8 *)a1 + v11);
    if (v12 >= 2)
    {
      if (v11 <= 3)
        v13 = v11;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    v14 = ~v7;
    if (v12 == 1)
    {
      v15 = *(void (**)(_QWORD *, uint64_t))(v6 + 8);
      v15(a1, v5);
      v16 = (uint64_t)a1 + v9;
    }
    else
    {
      v17 = ((unint64_t)a1 + v7 + 8) & v14;
      v15 = *(void (**)(_QWORD *, uint64_t))(v6 + 8);
      v15((_QWORD *)v17, v5);
      v18 = (v45 + ((((((v44 + v17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v14;
      v15((_QWORD *)v18, v5);
      v16 = v9 + v18;
    }
    v19 = v16 & v14;
    v15((_QWORD *)(v16 & v14), v5);
    v20 = (v9 + v19) & v14;
    if (!__swift_getEnumTagSinglePayload(v20, 1, v5))
      v15((_QWORD *)v20, v5);
    v21 = *((unsigned __int8 *)a2 + v11);
    if (v21 >= 2)
    {
      if (v11 <= 3)
        v22 = v11;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    if (v21 == 1)
    {
      v23 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16);
      v23(a1, a2, v5);
      v24 = ((unint64_t)a2 + v9) & v14;
      v23((_QWORD *)(((unint64_t)a1 + v9) & v14), (_QWORD *)v24, v5);
      if (__swift_getEnumTagSinglePayload((v9 + v24) & v14, 1, v5))
      {
        memcpy((void *)((v9 + (((unint64_t)a1 + v9) & v14)) & v14), (const void *)((v9 + v24) & v14), __n);
        v25 = 1;
      }
      else
      {
        v23((_QWORD *)((v9 + (((unint64_t)a1 + v9) & v14)) & v14), (_QWORD *)((v9 + v24) & v14), v5);
        v25 = 1;
        __swift_storeEnumTagSinglePayload((v9 + (((unint64_t)a1 + v9) & v14)) & v14, 0, 1, v5);
      }
    }
    else
    {
      *a1 = *a2;
      v26 = (char *)a2 + v7;
      v27 = ((unint64_t)a1 + v7 + 8) & v14;
      v28 = (unint64_t)(v26 + 8) & v14;
      v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v29(v27, v28, v5);
      v30 = (_QWORD *)((v44 + v27) & 0xFFFFFFFFFFFFF8);
      v31 = (_QWORD *)((v44 + v28) & 0xFFFFFFFFFFFFF8);
      *v30 = *v31;
      v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFF8);
      v33 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFF8);
      *v32 = *v33;
      v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
      v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v34 = *v35;
      v36 = ((unint64_t)v34 + v45) & v14;
      v37 = ((unint64_t)v35 + v45) & v14;
      v29(v36, v37, v5);
      v38 = (v9 + v36) & v14;
      v39 = (v9 + v37) & v14;
      v29(v38, v39, v5);
      v40 = (void *)((v9 + v38) & v14);
      v41 = (const void *)((v9 + v39) & v14);
      if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v5))
      {
        memcpy(v40, v41, __n);
      }
      else
      {
        v29((uint64_t)v40, (uint64_t)v41, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v5);
      }
      v25 = 0;
    }
    *((_BYTE *)a1 + v11) = v25;
  }
  return a1;
}

_QWORD *sub_22AB8BA58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD *, _QWORD *, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  const void *v34;
  size_t __n;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v7 + 8;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v9 + 7;
  v11 = v9 + v7;
  if (*(_DWORD *)(v6 + 84))
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = v9 + 1;
  __n = v12;
  if (((v11 + (v11 & ~v7)) & ~v7) + v12 <= ((v9
                                            + v7
                                            + ((v9
                                              + v7
                                              + ((v7
                                                + 8
                                                + ((((((v9 + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                                  + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v7)) & ~v7)
                                          + v12)
    v13 = ((v9
          + v7
          + ((v9
            + v7
            + ((v7
              + 8
              + ((((((v9 + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v7)) & ~v7)
        + v12;
  else
    v13 = ((v11 + (v11 & ~v7)) & ~v7) + v12;
  v14 = *((unsigned __int8 *)a2 + v13);
  if (v14 >= 2)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X14 }
  }
  v16 = ~v7;
  if (v14 == 1)
  {
    v17 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32);
    v17(a1, a2, v5);
    v18 = ((unint64_t)a2 + v11) & v16;
    v17((_QWORD *)(((unint64_t)a1 + v11) & v16), (_QWORD *)v18, v5);
    if (__swift_getEnumTagSinglePayload((v11 + v18) & v16, 1, v5))
    {
      memcpy((void *)((v11 + (((unint64_t)a1 + v11) & v16)) & v16), (const void *)((v11 + v18) & v16), __n);
      v19 = 1;
    }
    else
    {
      v17((_QWORD *)((v11 + (((unint64_t)a1 + v11) & v16)) & v16), (_QWORD *)((v11 + v18) & v16), v5);
      v19 = 1;
      __swift_storeEnumTagSinglePayload((v11 + (((unint64_t)a1 + v11) & v16)) & v16, 0, 1, v5);
    }
  }
  else
  {
    *a1 = *a2;
    v20 = ((unint64_t)a1 + v7 + 8) & v16;
    v21 = ((unint64_t)a2 + v7 + 8) & v16;
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v22(v20, v21, v5);
    v23 = (_QWORD *)((v10 + v20) & 0xFFFFFFFFFFFFF8);
    v24 = (_QWORD *)((v10 + v21) & 0xFFFFFFFFFFFFF8);
    *v23 = *v24;
    v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
    *v25 = *v26;
    v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v27 = *v28;
    v29 = ((unint64_t)v27 + v8) & v16;
    v30 = ((unint64_t)v28 + v8) & v16;
    v22(v29, v30, v5);
    v31 = (v11 + v29) & v16;
    v32 = (v11 + v30) & v16;
    v22(v31, v32, v5);
    v33 = (void *)((v11 + v31) & v16);
    v34 = (const void *)((v11 + v32) & v16);
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v5))
    {
      memcpy(v33, v34, __n);
    }
    else
    {
      v22((uint64_t)v33, (uint64_t)v34, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v5);
    }
    v19 = 0;
  }
  *((_BYTE *)a1 + v13) = v19;
  return a1;
}

_QWORD *sub_22AB8BD4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  void (*v23)(_QWORD *, _QWORD *, uint64_t);
  unint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  const void *v41;
  size_t __n;
  uint64_t v44;
  uint64_t v45;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v8 = *(_QWORD *)(v6 + 64);
    v44 = v8 + 7;
    v45 = v7 + 8;
    v9 = v8 + v7;
    if (*(_DWORD *)(v6 + 84))
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = v8 + 1;
    __n = v10;
    if (((v9 + (v9 & ~v7)) & ~v7) + v10 <= ((v8
                                            + v7
                                            + ((v8
                                              + v7
                                              + ((v7
                                                + 8
                                                + ((((((v8 + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                                  + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v7)) & ~v7)
                                          + v10)
      v11 = ((v8
            + v7
            + ((v8
              + v7
              + ((v7
                + 8
                + ((((((v8 + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v7)) & ~v7)
          + v10;
    else
      v11 = ((v9 + (v9 & ~v7)) & ~v7) + v10;
    v12 = *((unsigned __int8 *)a1 + v11);
    if (v12 >= 2)
    {
      if (v11 <= 3)
        v13 = v11;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    v14 = ~v7;
    if (v12 == 1)
    {
      v15 = *(void (**)(_QWORD *, uint64_t))(v6 + 8);
      v15(a1, v5);
      v16 = (uint64_t)a1 + v9;
    }
    else
    {
      v17 = ((unint64_t)a1 + v7 + 8) & v14;
      v15 = *(void (**)(_QWORD *, uint64_t))(v6 + 8);
      v15((_QWORD *)v17, v5);
      v18 = (v45 + ((((((v44 + v17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v14;
      v15((_QWORD *)v18, v5);
      v16 = v9 + v18;
    }
    v19 = v16 & v14;
    v15((_QWORD *)(v16 & v14), v5);
    v20 = (v9 + v19) & v14;
    if (!__swift_getEnumTagSinglePayload(v20, 1, v5))
      v15((_QWORD *)v20, v5);
    v21 = *((unsigned __int8 *)a2 + v11);
    if (v21 >= 2)
    {
      if (v11 <= 3)
        v22 = v11;
      else
        v22 = 4;
      __asm { BR              X12 }
    }
    if (v21 == 1)
    {
      v23 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32);
      v23(a1, a2, v5);
      v24 = ((unint64_t)a2 + v9) & v14;
      v23((_QWORD *)(((unint64_t)a1 + v9) & v14), (_QWORD *)v24, v5);
      if (__swift_getEnumTagSinglePayload((v9 + v24) & v14, 1, v5))
      {
        memcpy((void *)((v9 + (((unint64_t)a1 + v9) & v14)) & v14), (const void *)((v9 + v24) & v14), __n);
        v25 = 1;
      }
      else
      {
        v23((_QWORD *)((v9 + (((unint64_t)a1 + v9) & v14)) & v14), (_QWORD *)((v9 + v24) & v14), v5);
        v25 = 1;
        __swift_storeEnumTagSinglePayload((v9 + (((unint64_t)a1 + v9) & v14)) & v14, 0, 1, v5);
      }
    }
    else
    {
      *a1 = *a2;
      v26 = (char *)a2 + v7;
      v27 = ((unint64_t)a1 + v7 + 8) & v14;
      v28 = (unint64_t)(v26 + 8) & v14;
      v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
      v29(v27, v28, v5);
      v30 = (_QWORD *)((v44 + v27) & 0xFFFFFFFFFFFFF8);
      v31 = (_QWORD *)((v44 + v28) & 0xFFFFFFFFFFFFF8);
      *v30 = *v31;
      v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFF8);
      v33 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFF8);
      *v32 = *v33;
      v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
      v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v34 = *v35;
      v36 = ((unint64_t)v34 + v45) & v14;
      v37 = ((unint64_t)v35 + v45) & v14;
      v29(v36, v37, v5);
      v38 = (v9 + v36) & v14;
      v39 = (v9 + v37) & v14;
      v29(v38, v39, v5);
      v40 = (void *)((v9 + v38) & v14);
      v41 = (const void *)((v9 + v39) & v14);
      if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v5))
      {
        memcpy(v40, v41, __n);
      }
      else
      {
        v29((uint64_t)v40, (uint64_t)v41, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v5);
      }
      v25 = 0;
    }
    *((_BYTE *)a1 + v11) = v25;
  }
  return a1;
}

uint64_t sub_22AB8C170(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  unsigned int v19;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = (v5
      + v4
      + ((v5
        + v4
        + ((v4
          + 8
          + ((((((v5 + ((v4 + 8) & ~v4) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v4)) & ~v4)) & ~v4;
  v7 = *(_DWORD *)(v3 + 84) == 0;
  v8 = (v5 + v4 + ((v5 + v4) & ~v4)) & ~v4;
  if (v7)
    v9 = v5 + 1;
  else
    v9 = v5;
  v10 = v6 + v9;
  v11 = v8 + v9;
  if (v11 <= v10)
    v12 = v10;
  else
    v12 = v11;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_25;
  v13 = v12 + 1;
  v14 = 8 * (v12 + 1);
  if ((v12 + 1) <= 3)
  {
    v17 = ((a2 + ~(-1 << v14) - 254) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v17 < 2)
    {
LABEL_25:
      v19 = *(unsigned __int8 *)(a1 + v12);
      if (v19 >= 2)
        return (v19 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_25;
LABEL_18:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if (!(_DWORD)v13)
    return (v18 + 255);
  if (v13 > 3)
    LODWORD(v13) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AB8C294 + 4 * byte_22ABFEEFE[(v13 - 1)]))();
}

void sub_22AB8C2E0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  size_t v14;
  char v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = (v7
      + v6
      + ((v7
        + v6
        + ((v6
          + 8
          + ((((((v7 + ((v6 + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v6)) & ~v6)) & ~v6;
  v9 = *(_DWORD *)(v5 + 84) == 0;
  v10 = (v7 + v6 + ((v7 + v6) & ~v6)) & ~v6;
  if (v9)
    v11 = v7 + 1;
  else
    v11 = v7;
  v12 = v8 + v11;
  v13 = v10 + v11;
  if (v13 <= v12)
    v13 = v12;
  v14 = v13 + 1;
  v15 = 8 * (v13 + 1);
  if (a3 < 0xFF)
  {
    v16 = 0;
  }
  else if (v14 <= 3)
  {
    v18 = ((a3 + ~(-1 << v15) - 254) >> v15) + 1;
    if (HIWORD(v18))
    {
      v16 = 4u;
    }
    else if (v18 >= 0x100)
    {
      v16 = 2;
    }
    else
    {
      v16 = v18 > 1;
    }
  }
  else
  {
    v16 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v17 = a2 - 255;
  if (v14 < 4)
  {
    if ((_DWORD)v13 != -1)
    {
      v19 = v17 & ~(-1 << v15);
      bzero(a1, v14);
      if ((_DWORD)v14 == 3)
      {
        *a1 = v19;
        *((_BYTE *)a1 + 2) = BYTE2(v19);
      }
      else if ((_DWORD)v14 == 2)
      {
        *a1 = v19;
      }
      else
      {
        *(_BYTE *)a1 = v19;
      }
    }
  }
  else
  {
    bzero(a1, v13 + 1);
    *(_DWORD *)a1 = v17;
  }
  __asm { BR              X10 }
}

uint64_t sub_22AB8C4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  if (*(_DWORD *)(v2 + 84))
    v5 = *(_QWORD *)(v2 + 64);
  else
    v5 = v4 + 1;
  v6 = ((v4
       + v3
       + ((v4
         + v3
         + ((v3
           + 8
           + ((((((v4 + ((v3 + 8) & ~v3) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v3)) & ~v3)) & ~v3)
     + v5;
  v7 = ((v4 + v3 + ((v4 + v3) & ~v3)) & ~v3) + v5;
  if (v7 <= v6)
    v8 = v6;
  else
    v8 = v7;
  if (*(unsigned __int8 *)(a1 + v8) < 2u)
    return *(unsigned __int8 *)(a1 + v8);
  if (v8 <= 3)
    v9 = v8;
  else
    v9 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AB8C58C + 4 * byte_22ABFEF0C[v9]))();
}

_BYTE *sub_22AB8C5D4(_BYTE *result, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  size_t v8;
  char v9;
  int v10;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  if (*(_DWORD *)(v3 + 84))
    v6 = *(_QWORD *)(v3 + 64);
  else
    v6 = v5 + 1;
  v7 = ((v5
       + v4
       + ((v5
         + v4
         + ((v4
           + 8
           + ((((((v5 + ((v4 + 8) & ~v4) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v4)) & ~v4)) & ~v4)
     + v6;
  v8 = ((v5 + v4 + ((v5 + v4) & ~v4)) & ~v4) + v6;
  if (v8 <= v7)
    v8 = v7;
  if (a2 > 1)
  {
    if (v8 <= 3)
      v9 = ((a2 - 2) >> (8 * v8)) + 2;
    else
      v9 = 2;
    result[v8] = v9;
    if (v8 >= 4)
      v10 = 4;
    else
      v10 = v8;
    bzero(result, v8);
    __asm { BR              X10 }
  }
  result[v8] = a2;
  return result;
}

uint64_t sub_22AB8C708()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = sub_22ABDF5D8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_22AB8C7B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  const void *v32;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = v6 + 8;
  v9 = *(_QWORD *)(v5 + 64);
  v10 = v9 + 7;
  v11 = v9 + v6;
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = v9 + 1;
  v13 = v6 & 0x100000;
  if (v7 > 7
    || v13 != 0
    || ((v11
       + ((v11
         + ((v7
           + 8
           + ((((((v9 + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & ~v7)) & ~v7)
     + v12 > 0x18)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v16 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v17 = ~v7;
    *a1 = *a2;
    v18 = ((unint64_t)a1 + v7 + 8) & ~v7;
    v19 = ((unint64_t)a2 + v7 + 8) & ~v7;
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v20(v18, v19, v4);
    v21 = (_QWORD *)((v10 + v18) & 0xFFFFFFFFFFFFF8);
    v22 = (_QWORD *)((v10 + v19) & 0xFFFFFFFFFFFFF8);
    *v21 = *v22;
    v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFF8);
    *v23 = *v24;
    v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v25 = *v26;
    v27 = ((unint64_t)v25 + v8) & v17;
    v28 = ((unint64_t)v26 + v8) & v17;
    v20(v27, v28, v4);
    v29 = (v11 + v27) & v17;
    v30 = (v11 + v28) & v17;
    v20(v29, v30, v4);
    v31 = (void *)((v11 + v29) & v17);
    v32 = (const void *)((v11 + v30) & v17);
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v4))
    {
      memcpy(v31, v32, v12);
    }
    else
    {
      v20((uint64_t)v31, (uint64_t)v32, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_22AB8C99C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 8 + a1) & ~v4;
  v12 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v12(v5, v2);
  v6 = *(_QWORD *)(v3 + 64);
  v7 = (v4 + 8 + ((((((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v4;
  v12(v7, v2);
  v8 = v6 + v4;
  v9 = (v8 + v7) & ~v4;
  v12(v9, v2);
  v10 = (v8 + v9) & ~v4;
  result = __swift_getEnumTagSinglePayload(v10, 1, v2);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v2);
  return result;
}

_QWORD *sub_22AB8CA90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  size_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  size_t v23;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64);
  v11 = (_QWORD *)((v10 + 7 + v7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + v6 + 8) & ~v6;
  v18 = ((unint64_t)v16 + v6 + 8) & ~v6;
  v9(v17, v18, v4);
  v19 = (v10 + v6 + v17) & ~v6;
  v20 = (v10 + v6 + v18) & ~v6;
  v9(v19, v20, v4);
  v21 = (void *)((v10 + v6 + v19) & ~v6);
  v22 = (const void *)((v10 + v6 + v20) & ~v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v23 = v10;
    else
      v23 = v10 + 1;
    memcpy(v21, v22, v23);
  }
  else
  {
    v9((uint64_t)v21, (uint64_t)v22, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_22AB8CBF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  size_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  int EnumTagSinglePayload;
  size_t v24;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64);
  v11 = (_QWORD *)((v10 + 7 + v7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + v6 + 8) & ~v6;
  v18 = ((unint64_t)v16 + v6 + 8) & ~v6;
  v9(v17, v18, v4);
  v19 = (v10 + v6 + v17) & ~v6;
  v20 = (v10 + v6 + v18) & ~v6;
  v9(v19, v20, v4);
  v21 = (void *)((v10 + v6 + v19) & ~v6);
  v22 = (const void *)((v10 + v6 + v20) & ~v6);
  LODWORD(v6) = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v4);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v4);
  if ((_DWORD)v6)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v21, v22, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v4);
      return a1;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      v9((uint64_t)v21, (uint64_t)v22, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v21, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v24 = v10;
  else
    v24 = v10 + 1;
  memcpy(v21, v22, v24);
  return a1;
}

_QWORD *sub_22AB8CD9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  size_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  size_t v23;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64);
  v11 = (_QWORD *)((v10 + 7 + v7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + v6 + 8) & ~v6;
  v18 = ((unint64_t)v16 + v6 + 8) & ~v6;
  v9(v17, v18, v4);
  v19 = (v10 + v6 + v17) & ~v6;
  v20 = (v10 + v6 + v18) & ~v6;
  v9(v19, v20, v4);
  v21 = (void *)((v10 + v6 + v19) & ~v6);
  v22 = (const void *)((v10 + v6 + v20) & ~v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v23 = v10;
    else
      v23 = v10 + 1;
    memcpy(v21, v22, v23);
  }
  else
  {
    v9((uint64_t)v21, (uint64_t)v22, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_22AB8CF00(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  size_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  int EnumTagSinglePayload;
  size_t v24;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64);
  v11 = (_QWORD *)((v10 + 7 + v7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + v6 + 8) & ~v6;
  v18 = ((unint64_t)v16 + v6 + 8) & ~v6;
  v9(v17, v18, v4);
  v19 = (v10 + v6 + v17) & ~v6;
  v20 = (v10 + v6 + v18) & ~v6;
  v9(v19, v20, v4);
  v21 = (void *)((v10 + v6 + v19) & ~v6);
  v22 = (const void *)((v10 + v6 + v20) & ~v6);
  LODWORD(v6) = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v4);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v4);
  if ((_DWORD)v6)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v21, v22, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v4);
      return a1;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      v9((uint64_t)v21, (uint64_t)v22, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v21, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v24 = v10;
  else
    v24 = v10 + 1;
  memcpy(v21, v22, v24);
  return a1;
}

uint64_t sub_22AB8D0A8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v14;
  int v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if ((_DWORD)v6)
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = v7 + 1;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_21;
  v11 = v8
      + ((v7
        + v9
        + ((v7
          + v9
          + ((v9
            + 8
            + ((((((v7 + ((v9 + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & ~v9)) & ~v9);
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v14 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v14))
    {
      v13 = *(_DWORD *)(a1 + v11);
      if (!v13)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v14 > 0xFF)
    {
      v13 = *(unsigned __int16 *)(a1 + v11);
      if (!*(_WORD *)(a1 + v11))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v14 < 2)
    {
LABEL_21:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload((a1 + v9 + 8) & ~v9, v6, v4);
      return 0;
    }
  }
  v13 = *(unsigned __int8 *)(a1 + v11);
  if (!*(_BYTE *)(a1 + v11))
    goto LABEL_21;
LABEL_14:
  v15 = (v13 - 1) << v12;
  if (v11 > 3)
    v15 = 0;
  if (!(_DWORD)v11)
    return (v6 + v15 + 1);
  if (v11 > 3)
    LODWORD(v11) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AB8D1A8 + 4 * byte_22ABFEF15[(v11 - 1)]))();
}

void sub_22AB8D204(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = (v9
       + v8
       + ((v9
         + v8
         + ((v8
           + 8
           + ((((((v9 + ((v8 + 8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & ~v8)) & ~v8;
  if (!v7)
    ++v9;
  v11 = v9 + v10;
  v12 = 8 * (v9 + v10);
  v13 = a3 >= v7;
  v14 = a3 - v7;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v17 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v17))
      {
        v15 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v15 = 2;
      }
      else
      {
        v15 = v17 > 1;
      }
    }
    else
    {
      v15 = 1u;
    }
  }
  else
  {
    v15 = 0;
  }
  if (v7 < a2)
  {
    v16 = ~v7 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v18 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v18;
          *((_BYTE *)a1 + 2) = BYTE2(v18);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v18;
        }
        else
        {
          *(_BYTE *)a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_22AB8D408()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = sub_22ABDF5D8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_22AB8D4A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  size_t v12;
  int v13;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v18;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  if (*(_DWORD *)(v6 + 84))
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = v7 + 1;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || ((v11 + (v11 & ~v9)) & ~v9) + v12 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, *(_QWORD *)(a3 + 16));
    v18 = ((unint64_t)a2 + v11) & v10;
    v17((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)v18, v5);
    if (__swift_getEnumTagSinglePayload((v11 + v18) & v10, 1, v5))
    {
      memcpy((void *)((v11 + (((unint64_t)v4 + v11) & v10)) & v10), (const void *)((v11 + v18) & v10), v12);
    }
    else
    {
      v17((uint64_t *)((v11 + (((unint64_t)v4 + v11) & v10)) & v10), (uint64_t *)((v11 + v18) & v10), v5);
      __swift_storeEnumTagSinglePayload((v11 + (((unint64_t)v4 + v11) & v10)) & v10, 0, 1, v5);
    }
  }
  return v4;
}

uint64_t sub_22AB8D5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t (*v11)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  v11(a1, v3);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  v8 = (v5 + v6 + a1) & ~v6;
  v11(v8, v3);
  v9 = (v7 + v8) & ~v6;
  result = __swift_getEnumTagSinglePayload(v9, 1, v3);
  if (!(_DWORD)result)
    return v11(v9, v3);
  return result;
}

uint64_t sub_22AB8D684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  size_t v11;
  size_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v11, v5);
  if (__swift_getEnumTagSinglePayload((v8 + v9 + v11) & ~v9, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v12 = v8;
    else
      v12 = v8 + 1;
    memcpy((void *)((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9), (const void *)((v10 + v11) & ~v9), v12);
  }
  else
  {
    v7((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, (v10 + v11) & ~v9, v5);
    __swift_storeEnumTagSinglePayload((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_22AB8D76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  const void *v11;
  int EnumTagSinglePayload;
  int v13;
  size_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  v11 = (const void *)((v8 + v9 + ((v8 + v9 + a2) & ~v9)) & ~v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9, 1, v5);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(size_t, const void *, uint64_t))(v6 + 16))((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, v11, v5);
      __swift_storeEnumTagSinglePayload((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v13)
    {
      v7((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, (uint64_t)v11, v5);
      return a1;
    }
    (*(void (**)(size_t, uint64_t))(v6 + 8))((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v14 = v8;
  else
    v14 = v8 + 1;
  memcpy((void *)((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9), v11, v14);
  return a1;
}

uint64_t sub_22AB8D898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  size_t v11;
  size_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7((v8 + v9 + a1) & ~v9, v11, v5);
  if (__swift_getEnumTagSinglePayload((v8 + v9 + v11) & ~v9, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v12 = v8;
    else
      v12 = v8 + 1;
    memcpy((void *)((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9), (const void *)((v10 + v11) & ~v9), v12);
  }
  else
  {
    v7((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, (v10 + v11) & ~v9, v5);
    __swift_storeEnumTagSinglePayload((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_22AB8D980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  uint64_t v9;
  size_t v10;
  const void *v11;
  int EnumTagSinglePayload;
  int v13;
  size_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = v8 + v9;
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  v11 = (const void *)((v8 + v9 + ((v8 + v9 + a2) & ~v9)) & ~v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v8 + v9 + ((v8 + v9 + a1) & ~v9)) & ~v9, 1, v5);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(size_t, const void *, uint64_t))(v6 + 32))((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, v11, v5);
      __swift_storeEnumTagSinglePayload((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v13)
    {
      v7((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, (uint64_t)v11, v5);
      return a1;
    }
    (*(void (**)(size_t, uint64_t))(v6 + 8))((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v14 = v8;
  else
    v14 = v8 + 1;
  memcpy((void *)((v10 + ((v8 + v9 + a1) & ~v9)) & ~v9), v11, v14);
  return a1;
}

uint64_t sub_22AB8DAAC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v13;
  int v14;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if ((_DWORD)v6)
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = v7 + 1;
  if (!a2)
    return 0;
  v9 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_21;
  v10 = v8
      + ((v7
        + *(unsigned __int8 *)(v5 + 80)
        + ((v7 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v13 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v13 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v13 < 2)
    {
LABEL_21:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_21;
LABEL_14:
  v14 = (v12 - 1) << v11;
  if (v10 > 3)
    v14 = 0;
  if (!(_DWORD)v10)
    return (v6 + v14 + 1);
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AB8DB7C + 4 * byte_22ABFEF23[(v10 - 1)]))();
}

void sub_22AB8DBC8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  size_t v10;
  char v11;
  BOOL v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (v8
      + *(unsigned __int8 *)(v6 + 80)
      + ((v8 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!v7)
    ++v8;
  v10 = v8 + v9;
  v11 = 8 * (v8 + v9);
  v12 = a3 >= v7;
  v13 = a3 - v7;
  if (v13 != 0 && v12)
  {
    if (v10 <= 3)
    {
      v16 = ((v13 + ~(-1 << v11)) >> v11) + 1;
      if (HIWORD(v16))
      {
        v14 = 4u;
      }
      else if (v16 >= 0x100)
      {
        v14 = 2;
      }
      else
      {
        v14 = v16 > 1;
      }
    }
    else
    {
      v14 = 1u;
    }
  }
  else
  {
    v14 = 0;
  }
  if (v7 < a2)
  {
    v15 = ~v7 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v17 = v15 & ~(-1 << v11);
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v10 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for Tree(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Tree);
}

void sub_22AB8DD9C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB8DDAC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB8DDBC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB8DDCC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB8DDDC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB8DDEC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB8DDFC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB8DE0C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB8DE1C()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_3_109()
{
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_4_99@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a1 + 8))(*(_QWORD *)(v1 - 168), *(_QWORD *)(v1 - 160));
}

uint64_t OUTLINED_FUNCTION_6_114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_7_101()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_8_97()
{
  return sub_22ABDFD34();
}

void OUTLINED_FUNCTION_9_95()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

uint64_t OUTLINED_FUNCTION_10_82()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_11_90()
{
  return sub_22ABDFC74();
}

uint64_t OUTLINED_FUNCTION_12_82(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

void OUTLINED_FUNCTION_13_84()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
}

uint64_t OUTLINED_FUNCTION_17_72()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_62@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_20_59()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_25_48()
{
  uint64_t v0;
  uint64_t v1;

  return sub_22A9A1A28(v0, v1 - 120);
}

uint64_t sub_22AB8DF3C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22AB8DFCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  _QWORD *v17;
  _QWORD *v18;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 95) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
    *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_BYTE *)(v12 + 72) = *(_BYTE *)(v13 + 72);
    v14 = ((unint64_t)v10 + 95) & 0xFFFFFFFFFFFFFFF8;
    v15 = ((unint64_t)v11 + 95) & 0xFFFFFFFFFFFFFFF8;
    v16 = *(_OWORD *)v15;
    *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
    *(_OWORD *)v14 = v16;
    v17 = (_QWORD *)((v14 + 31) & 0xFFFFFFFFFFFFF8);
    v18 = (_QWORD *)((v15 + 31) & 0xFFFFFFFFFFFFF8);
    *v17 = *v18;
    *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_22AB8E160(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_22AB8E1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  *(_BYTE *)(v9 + 72) = *(_BYTE *)(v10 + 72);
  v11 = ((unint64_t)v7 + 95) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v8 + 95) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_QWORD *)(v11 + 16) = v13;
  v14 = (_QWORD *)((v11 + 31) & 0xFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v12 + 31) & 0xFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22AB8E310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v8 = (unint64_t)v7 + 95;
  v9 = ((v6 + a1) & 0xFFFFFFFFFFFFFFF8) + 15;
  *(_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8) = *v7;
  v10 = ((v6 + a1) & 0xFFFFFFFFFFFFFFF8) + 95;
  swift_retain();
  swift_release();
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v11 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v11;
  swift_retain();
  swift_release();
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v11 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v11 + 24);
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v11 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v11 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v11 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v11 + 56);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v11 + 64);
  *(_BYTE *)(v9 + 72) = *(_BYTE *)(v11 + 72);
  v12 = (_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
  v13 = v8 & 0xFFFFFFFFFFFFFFF8;
  *v12 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  v12[1] = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  v12[2] = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 16);
  v14 = (_QWORD *)(((v10 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + 31) & 0xFFFFFFFFFFFFF8);
  *v14 = *v15;
  swift_retain();
  swift_release();
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22AB8E480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  _QWORD *v14;
  _QWORD *v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = v6 + a1;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 15;
  v10 = *(_QWORD *)v8;
  v8 += 95;
  *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8) = v10;
  v11 = (v7 & 0xFFFFFFFFFFFFFFF8) + 95;
  memcpy((void *)(((v7 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), (const void *)(v9 & 0xFFFFFFFFFFFFFFF8), 0x49uLL);
  v12 = v11 & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_OWORD *)v12 = v13;
  v14 = (_QWORD *)(((v11 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((v8 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AB8E530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v8 = (unint64_t)v7 + 95;
  v9 = ((v6 + a1) & 0xFFFFFFFFFFFFFFF8) + 15;
  *(_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8) = *v7;
  v10 = ((v6 + a1) & 0xFFFFFFFFFFFFFFF8) + 95;
  swift_release();
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v11 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v11;
  swift_release();
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v11 + 8);
  swift_release();
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v11 + 24);
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v11 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v11 + 40);
  swift_release();
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v11 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v11 + 56);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v11 + 64);
  *(_BYTE *)(v9 + 72) = *(_BYTE *)(v11 + 72);
  v12 = (_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
  *v12 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  v12[1] = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  v12[2] = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 16);
  v13 = (_QWORD *)(((v10 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((v8 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8);
  *v13 = *v14;
  swift_release();
  *(_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_22AB8E670(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 95) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_22AB8E704 + 4 * byte_22ABFF4E0[v11]))();
  }
}

void sub_22AB8E784(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 95) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 95) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 95) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_22AB8E888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
        v9 = a2 ^ 0x80000000;
      else
        v9 = (a2 - 1);
      *v8 = v9;
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t type metadata accessor for NewtonOptimizer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NewtonOptimizer);
}

void sub_22AB8E920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  void (*v8)(uint64_t);
  double *v9;
  void (*v10[4])(uint64_t);

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v4 = 0;
    v5 = a2 + 32;
    do
    {
      v6 = v4 + 1;
      v7 = *(double *)(v5 + 8 * v4) + *(double *)(v5 + 8 * v4);
      v8 = sub_22AB8E9A8(v10, v4, v4);
      *v9 = v7 + *v9;
      ((void (*)(void (**)(uint64_t), _QWORD))v8)(v10, 0);
      v4 = v6;
    }
    while (v2 != v6);
  }
}

void (*sub_22AB8E9A8(void (**a1)(uint64_t a1), uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t *v3;
  void (*result)(uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = (void (*)(uint64_t))malloc(0x30uLL);
  v8 = result;
  *a1 = result;
  if ((v3[2] & 1) != 0)
  {
    v9 = a3 * *v3;
    if ((unsigned __int128)(a3 * (__int128)*v3) >> 64 == v9 >> 63)
    {
      if (!__OFADD__(v9, a2))
      {
        sub_22AAEAD7C((uint64_t)result, v9 + a2);
        *((_QWORD *)v8 + 5) = v10;
        return sub_22AB8EA94;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  v11 = v3[1];
  v12 = a2 * v11;
  if ((unsigned __int128)(a2 * (__int128)v11) >> 64 != (a2 * v11) >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!__OFADD__(v12, a3))
  {
    sub_22AAEAD7C((uint64_t)result, v12 + a3);
    *((_QWORD *)v8 + 4) = v13;
    return sub_22AB8EA70;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_22AB8EA70(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  OUTLINED_FUNCTION_5_92(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 32));
  OUTLINED_FUNCTION_0_2(v1);
}

void sub_22AB8EA94(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  OUTLINED_FUNCTION_5_92(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 40));
  OUTLINED_FUNCTION_0_2(v1);
}

uint64_t sub_22AB8EAB8(uint64_t a1, int *a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;

  v7 = OUTLINED_FUNCTION_2_108(a1, (uint64_t)a2);
  v8 = sub_22AB5B76C(v7, 0.0);
  v9 = a2[13];
  swift_release();
  *(_QWORD *)(v3 + v9) = v8;
  v10 = sub_22AB5B76C(v7, 0.0);
  v11 = a2[12];
  swift_release();
  *(_QWORD *)(v3 + v11) = v10;
  v12 = v3 + a2[10];
  *(double *)(v12 + 64) = a3;
  *(_QWORD *)(v12 + 56) = 0;
  swift_retain();
  swift_release();
  *(_QWORD *)v12 = a1;
  v13 = *(_QWORD *)(v12 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(v12 + 8) = v10;
  result = v7 * v7;
  if ((unsigned __int128)(v7 * (__int128)v7) >> 64 == (v7 * v7) >> 63)
  {
    v15 = sub_22AB5B76C(result, 0.0);
    swift_release();
    *(_QWORD *)(v12 + 16) = v7;
    *(_QWORD *)(v12 + 24) = v7;
    *(_BYTE *)(v12 + 32) = 1;
    *(_QWORD *)(v12 + 40) = v15;
    result = OUTLINED_FUNCTION_3_110();
    if (!v13)
    {
      sub_22A99CE8C();
      result = OUTLINED_FUNCTION_6_115();
      *(_QWORD *)(v12 + 48) = v18;
      if ((~v18 & 0x7FF0000000000000) == 0)
      {
        sub_22AACB4A0();
        v16 = OUTLINED_FUNCTION_53();
        return OUTLINED_FUNCTION_1_95(v16, v17);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22AB8EC38(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1 + *(int *)(a1 + 40));
  result = (*(uint64_t (**)(uint64_t *, _QWORD))(*(_QWORD *)(a1 + 24) + 56))(v3, *(_QWORD *)(a1 + 16));
  v5 = v1 + *(int *)(a1 + 44);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(v5 + 8) = v8;
  v9 = *(_QWORD *)(v5 + 16);
  v7 = __OFADD__(v9, 1);
  v10 = v9 + 1;
  if (v7)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v5 + 16) = v10;
  if ((~v3[7] & 0x7FF0000000000000) != 0)
  {
    v13 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
    swift_retain();
    sub_22AB926A4(v3, v13);
    swift_release();
    swift_retain();
    sub_22AB8E920((uint64_t)v3, v13);
    return swift_release();
  }
  else
  {
    sub_22AACB4A0();
    v11 = swift_allocError();
    *v12 = 0;
    return swift_willThrow(v11);
  }
}

uint64_t sub_22AB8ED2C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = UnsafeVectorPointer<A>.maximumAbsoluteValue.getter(*a1, a1[1], a1[2]);
  *a2 = v4;
  return result;
}

uint64_t sub_22AB8ED5C()
{
  return sub_22AB8F308();
}

uint64_t sub_22AB8ED78(const void *a1, int *a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  OUTLINED_FUNCTION_2_108((uint64_t)a1, (uint64_t)a2);
  v5 = (void *)(v2 + a2[10]);
  sub_22AB8F768((uint64_t)a1);
  swift_release();
  swift_release();
  swift_release();
  memcpy(v5, a1, 0x49uLL);
  v6 = OUTLINED_FUNCTION_4_100();
  v7 = a2[13];
  swift_release();
  *(_QWORD *)(v2 + v7) = v6;
  v8 = OUTLINED_FUNCTION_4_100();
  v9 = a2[12];
  result = swift_release();
  *(_QWORD *)(v2 + v9) = v8;
  return result;
}

uint64_t sub_22AB8EE30(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_22AB8EF10(a1);
  if (!v2)
  {
    sub_22AB8F104();
    OUTLINED_FUNCTION_3_110();
    v5 = v1 + a1[10];
    sub_22A99CE8C();
    result = OUTLINED_FUNCTION_6_115();
    *(_QWORD *)(v5 + 48) = v12;
    if ((~v12 & 0x7FF0000000000000) != 0)
    {
      v8 = a1[11];
      v9 = *(_QWORD *)(v1 + v8);
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        __break(1u);
      else
        *(_QWORD *)(v1 + v8) = v11;
    }
    else
    {
      sub_22AACB4A0();
      v6 = OUTLINED_FUNCTION_53();
      return OUTLINED_FUNCTION_1_95(v6, v7);
    }
  }
  return result;
}

uint64_t sub_22AB8EF10(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;

  v3 = v1;
  v5 = v1 + a1[10];
  v6 = *(char **)(v5 + 40);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = sub_22AB8F540((uint64_t)v6);
  v7 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  result = v7 * v8;
  if ((unsigned __int128)(v7 * (__int128)v8) >> 64 != (v7 * v8) >> 63)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  cblas_dscal_NEWLAPACK();
  *(_QWORD *)(v5 + 40) = v6;
  v10 = *(_QWORD *)(v5 + 8);
  v11 = a1[12];
  swift_retain();
  v12 = swift_release();
  v18 = (uint64_t)&v18;
  *(_QWORD *)(v3 + v11) = v10;
  v13 = *(_BYTE *)(v5 + 32);
  v20 = v7;
  v21 = v8;
  v22 = v13;
  v23 = v6;
  MEMORY[0x24BDAC7A8](v12);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(qword_2540E77F8);
  DenseMatrix.withUnsafeMutableMatrixPointer<A>(_:)((uint64_t (*)(_BYTE *))sub_22AB8F554);
  result = swift_release();
  if (!v2)
  {
    *(_BYTE *)(v5 + 72) = v19;
    v14 = *(_QWORD *)(v3 + v11);
    v15 = (uint64_t *)(v3 + a1[13]);
    swift_retain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
    DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB8F570, v14, v16);
    swift_release();
    v17 = *v15;
    swift_retain();
    result = swift_release();
    *(_QWORD *)v5 = v17;
  }
  return result;
}

uint64_t sub_22AB8F104()
{
  uint64_t result;
  char v1;
  uint64_t v2;
  char *v3;
  char v4;
  double v5;

  sub_22A99CE8C();
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  if (v5 <= 4.93038066e-32)
  {
    v1 = 0;
LABEL_6:
    sub_22AACB4A0();
    v2 = swift_allocError();
    *v3 = v1;
    return swift_willThrow(v2);
  }
  result = DenseVector.withUnsafeVectorPointer<A>(_:)();
  if (v4 != 1)
  {
    v1 = 1;
    goto LABEL_6;
  }
  return result;
}

_QWORD *sub_22AB8F1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD v6[4];

  v6[2] = a1;
  type metadata accessor for NewtonOptimizer(0, a3, a4, a4);
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
  return DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB8F588, (uint64_t)v6, v4);
}

BOOL sub_22AB8F27C@<W0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  _BOOL8 result;

  result = sub_22ABAB7D0(a3, a1, a2);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_22AB8F2BC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_22A9F4300(*a1, a1[1], a1[2]);
  *a2 = v4;
  return result;
}

uint64_t sub_22AB8F2EC()
{
  return sub_22AB8F308();
}

uint64_t sub_22AB8F308()
{
  swift_getKeyPath();
  swift_getAtKeyPath();
  return swift_release();
}

_QWORD *sub_22AB8F37C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;

  v4 = a2 * a3;
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 == (a2 * a3) >> 63)
  {
    if (v4)
    {
      if ((~*result & 0x7FF0000000000000) == 0)
      {
        v5 = 0;
LABEL_13:
        *a4 = v5;
        return result;
      }
      if (v4 != a3)
      {
        v6 = 0;
        do
        {
          v7 = result[a3 + v6 / 8] & 0x7FF0000000000000;
          v8 = v7 == 0x7FF0000000000000;
          v5 = v7 != 0x7FF0000000000000;
          v8 = v8 || a3 * (8 * a2 - 16) == v6;
          v6 += 8 * a3;
        }
        while (!v8);
        goto LABEL_13;
      }
    }
    v5 = 1;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_22AB8F3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = v2 + *(int *)(a1 + 40);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 32);
  v6 = *(_QWORD *)(v3 + 40);
  v7 = *(_QWORD *)(v3 + 64);
  v8 = *(_BYTE *)(v3 + 72);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v3 + 16);
  *(_BYTE *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(v3 + 48);
  *(_QWORD *)(a2 + 64) = v7;
  *(_BYTE *)(a2 + 72) = v8;
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_22AB8F464(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_22AB8F478(uint64_t a1, double *a2, int *a3)
{
  return sub_22AB8EAB8(a1, a3, *a2);
}

uint64_t sub_22AB8F494(void *__src, int *a2)
{
  _BYTE v4[80];

  memcpy(v4, __src, 0x49uLL);
  return sub_22AB8ED78(v4, a2);
}

uint64_t sub_22AB8F4E4(int *a1)
{
  return sub_22AB8EE30(a1);
}

unint64_t sub_22AB8F500()
{
  unint64_t result;

  result = qword_255B1AC20;
  if (!qword_255B1AC20)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE13E0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_255B1AC20);
  }
  return result;
}

char *sub_22AB8F540(uint64_t a1)
{
  return sub_22AB8F5A0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_22AB8F554(uint64_t a1)
{
  uint64_t *v1;

  return sub_22AB8F1FC(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_22AB8F570()
{
  return sub_22AB9B0DC();
}

BOOL sub_22AB8F588@<W0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_22AB8F27C(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

char *sub_22AB8F5A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[8 * v8] <= v12)
      memmove(v10 + 32, v13, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    sub_22AB8F6A0(a4 + 32, v8, v12);
  }
  swift_release();
  return v10;
}

void *sub_22AB8F6A0(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[8 * a2] <= __src || &__src[8 * a2] <= __dst))
    return memcpy(__dst, __src, 8 * a2);
  result = (void *)sub_22ABDFB9C();
  __break(1u);
  return result;
}

uint64_t sub_22AB8F768(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t OUTLINED_FUNCTION_2_108(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a2 + 24) + 32))(*(_QWORD *)(v2 + 16));
}

uint64_t OUTLINED_FUNCTION_3_110()
{
  uint64_t v0;

  return sub_22AB8EC38(v0);
}

uint64_t OUTLINED_FUNCTION_4_100()
{
  uint64_t v0;

  return sub_22AB5B76C(v0, 0.0);
}

uint64_t OUTLINED_FUNCTION_5_92@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;

  return a1(v1, 0);
}

uint64_t OUTLINED_FUNCTION_6_115()
{
  return DenseVector.withUnsafeVectorPointer<A>(_:)();
}

uint64_t PreprocessingUpdatableSupervisedEstimator.preprocessor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t PreprocessingUpdatableSupervisedEstimator.preprocessor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*PreprocessingUpdatableSupervisedEstimator.preprocessor.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t PreprocessingUpdatableSupervisedEstimator.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t PreprocessingUpdatableSupervisedEstimator.estimator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*PreprocessingUpdatableSupervisedEstimator.estimator.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void PreprocessingUpdatableSupervisedEstimator.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for PreprocessingUpdatableSupervisedEstimator();
}

uint64_t sub_22AB8F8BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_79(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

void type metadata accessor for PreprocessingUpdatableSupervisedEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void PreprocessingUpdatableSupervisedEstimator.makeTransformer()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v11 = *(_QWORD *)(v10 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = *(_QWORD *)(a1 + 16);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  v17 = v16 - v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16 - v15, v3, v13);
  OUTLINED_FUNCTION_79(v9, v3 + *(int *)(a1 + 52), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v5, v11);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  swift_getAssociatedConformanceWitness();
  ComposedTransformer.init(_:_:)(v17, v13, a2);
}

void sub_22AB8FA58()
{
  OUTLINED_FUNCTION_3();
}

uint64_t PreprocessingUpdatableSupervisedEstimator.preprocessed<A>(from:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7[11] = a6;
  v7[12] = v6;
  v7[9] = a3;
  v7[10] = a5;
  v7[7] = a1;
  v7[8] = a2;
  v7[13] = a4[4];
  v9 = a4[2];
  v7[14] = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_22ABDF0F8();
  v7[15] = v11;
  v7[16] = a4[5];
  v7[17] = a4[3];
  v12 = OUTLINED_FUNCTION_72_14();
  v7[18] = v12;
  v13 = sub_22ABDFA10();
  v7[19] = v13;
  v14 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v11);
  v7[20] = v14;
  v15 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v13);
  v7[21] = v15;
  v7[2] = v11;
  v7[3] = v13;
  v7[4] = v14;
  v7[5] = v15;
  v16 = sub_22ABDF7E8();
  v7[22] = v16;
  v7[23] = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2620], v16);
  v17 = sub_22ABDF7B8();
  v7[24] = v17;
  v7[25] = *(_QWORD *)(v17 - 8);
  v7[26] = OUTLINED_FUNCTION_0_0();
  v7[27] = *(_QWORD *)(v13 - 8);
  v7[28] = OUTLINED_FUNCTION_0_0();
  v7[29] = *(_QWORD *)(v16 - 8);
  v7[30] = OUTLINED_FUNCTION_0_0();
  v7[31] = type metadata accessor for AnnotatedFeature(255, AssociatedTypeWitness, v12, v18);
  v7[32] = sub_22ABDFA10();
  v7[33] = OUTLINED_FUNCTION_0_0();
  v7[34] = *(_QWORD *)(v9 - 8);
  v7[35] = OUTLINED_FUNCTION_0_0();
  v19 = sub_22ABDF7B8();
  v7[36] = v19;
  v7[37] = *(_QWORD *)(v19 - 8);
  v7[38] = OUTLINED_FUNCTION_0_0();
  v7[39] = swift_getAssociatedTypeWitness();
  v20 = sub_22ABDFA10();
  v7[40] = v20;
  v7[41] = *(_QWORD *)(v20 - 8);
  v7[42] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22AB8FCC0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t KeyPath;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v14 = v0[36];
  v18 = v0[35];
  v19 = v0[40];
  v17 = v0[34];
  v1 = v0[16];
  v2 = v0[17];
  v3 = v0[13];
  v4 = v0[14];
  v5 = v0[11];
  v15 = v0[37];
  v16 = v0[12];
  v6 = v0[10];
  sub_22ABDEEB8();
  v7 = (_QWORD *)swift_task_alloc();
  *v7 = v4;
  v7[1] = v2;
  v7[2] = v6;
  v7[3] = v3;
  v7[4] = v1;
  v7[5] = v5;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_28_0();
  v9 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v9[2] = v4;
  v9[3] = v2;
  v9[4] = v6;
  v9[5] = v3;
  v9[6] = v1;
  v9[7] = v5;
  v9[8] = KeyPath;
  v0[43] = MEMORY[0x22E2E4D80](MEMORY[0x24BEE25B0], v14);
  sub_22ABDFBC0();
  swift_release();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
  v0[44] = (uint64_t)v10;
  OUTLINED_FUNCTION_51_0(v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v16, v4);
  v11 = (_QWORD *)swift_task_alloc();
  v0[45] = (uint64_t)v11;
  v12 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v19);
  *v11 = v0;
  v11[1] = sub_22AB8FE60;
  return Transformer.applied<A>(to:eventHandler:)(v0[42], v0[8], v0[9], v0[14], v0[40], v0[13], v12);
}

uint64_t sub_22AB8FE60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 368) = v1;
  swift_task_dealloc();
  v6 = v4[34];
  v5 = v4[35];
  v7 = v4[14];
  if (!v1)
    v4[47] = a1;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22AB8FEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t KeyPath;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v16 = *(void (**)(uint64_t, uint64_t))(v0 + 352);
  v22 = *(_QWORD *)(v0 + 328);
  v23 = *(_QWORD *)(v0 + 320);
  v24 = *(_QWORD *)(v0 + 336);
  v25 = *(_QWORD *)(v0 + 304);
  v14 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 216);
  v17 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 200);
  v19 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  sub_22ABDEEB8();
  v7 = (_QWORD *)swift_task_alloc();
  *v7 = v4;
  v7[1] = v1;
  v7[2] = v5;
  v7[3] = v3;
  v7[4] = v2;
  v7[5] = v6;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_28_0();
  v9 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v9[2] = v4;
  v9[3] = v1;
  v9[4] = v5;
  v9[5] = v3;
  v9[6] = v2;
  v9[7] = v6;
  v9[8] = KeyPath;
  sub_22ABDFBC0();
  swift_release();
  v16(v25, v14);
  sub_22ABE0178();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  swift_bridgeObjectRelease();
  sub_22ABDEEB8();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  v10 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v10[2] = v4;
  v10[3] = v1;
  v10[4] = v5;
  v10[5] = v3;
  v10[6] = v2;
  v10[7] = v6;
  v11 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v11[2] = v4;
  v11[3] = v1;
  v11[4] = v5;
  v11[5] = v3;
  v11[6] = v2;
  v11[7] = v6;
  v11[8] = sub_22AB906B8;
  v11[9] = v10;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE25B0], v19);
  sub_22ABDFBC0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v21);
  v12 = sub_22ABDF764();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

uint64_t sub_22AB90244()
{
  uint64_t v0;

  OUTLINED_FUNCTION_75_6();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_46_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AB902D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB903F4(a1, a2, a3, (uint64_t (*)(uint64_t))AnnotatedFeature.feature.getter);
}

uint64_t sub_22AB902F0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v5 = (char *)&v11 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - v4, a1, AssociatedTypeWitness, v3);
  v7 = swift_getAssociatedTypeWitness();
  v9 = type metadata accessor for AnnotatedFeature(0, AssociatedTypeWitness, v7, v8);
  return AnnotatedFeature.feature.setter((uint64_t)v5, v9);
}

uint64_t sub_22AB903D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AB903F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  v5 = OUTLINED_FUNCTION_72_14();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for AnnotatedFeature(0, v5, AssociatedTypeWitness, v7);
  return a4(v8);
}

uint64_t sub_22AB90484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB903F4(a1, a2, a3, (uint64_t (*)(uint64_t))AnnotatedFeature.annotation.getter);
}

uint64_t sub_22AB904A0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v5 = (char *)&v11 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - v4, a1, AssociatedTypeWitness, v3);
  v7 = swift_getAssociatedTypeWitness();
  v9 = type metadata accessor for AnnotatedFeature(0, v7, AssociatedTypeWitness, v8);
  return AnnotatedFeature.annotation.setter((uint64_t)v5, v9);
}

uint64_t sub_22AB90584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v16 - v8;
  v10 = swift_getAssociatedTypeWitness();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v16 - v12, a1, v10, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, AssociatedTypeWitness);
  return AnnotatedFeature.init(feature:annotation:)((uint64_t)v13, (uint64_t)v9, v10, AssociatedTypeWitness, a3);
}

uint64_t sub_22AB906A8()
{
  return swift_deallocObject();
}

uint64_t sub_22AB906B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AB90584(a1, a2, a3);
}

uint64_t sub_22AB906C8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_22AB90788()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AB907AC(uint64_t a1)
{
  uint64_t v1;

  return sub_22AB906C8(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 64));
}

uint64_t PreprocessingUpdatableSupervisedEstimator.fitted<A>(toPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v10 = a5[2];
  v8[10] = v10;
  v8[11] = *(_QWORD *)(v10 - 8);
  v8[12] = OUTLINED_FUNCTION_0_0();
  v11 = a5[3];
  v8[13] = v11;
  v8[14] = *(_QWORD *)(v11 - 8);
  v8[15] = OUTLINED_FUNCTION_0_0();
  v8[16] = *(_QWORD *)(a5[5] + 8);
  v12 = OUTLINED_FUNCTION_65_2();
  v8[17] = v12;
  v8[18] = *(_QWORD *)(v12 - 8);
  v8[19] = OUTLINED_FUNCTION_23_0();
  v8[20] = swift_task_alloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AB9088C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v1 = v0[16];
  OUTLINED_FUNCTION_58_12(v0[15], v0[14]);
  v4 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 40)
                                                                                              + *(_QWORD *)(v1 + 40));
  v2 = (_QWORD *)swift_task_alloc();
  v0[21] = v2;
  *v2 = v0;
  v2[1] = sub_22AB90910;
  return v4(v0[20], v0[3], v0[4], v0[5], v0[7], v0[8], v0[13], v0[16]);
}

uint64_t sub_22AB90910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  v2 = *(_QWORD *)(v1 + 112);
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v3 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

#error "22AB909D8: call analysis failed (funcsize=23)"

uint64_t sub_22AB909DC()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_46_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_5_0(v0);
}

uint64_t sub_22AB909FC()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableSupervisedEstimator.fitted<A, B>(toPreprocessed:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v9[11] = v16;
  v9[12] = v8;
  v9[9] = a8;
  v9[10] = v15;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  v11 = a6[2];
  v9[13] = v11;
  v9[14] = *(_QWORD *)(v11 - 8);
  v9[15] = OUTLINED_FUNCTION_0_0();
  v12 = a6[3];
  v9[16] = v12;
  v9[17] = *(_QWORD *)(v12 - 8);
  v9[18] = OUTLINED_FUNCTION_0_0();
  v9[19] = *(_QWORD *)(a6[5] + 8);
  v13 = OUTLINED_FUNCTION_65_2();
  v9[20] = v13;
  v9[21] = *(_QWORD *)(v13 - 8);
  v9[22] = OUTLINED_FUNCTION_23_0();
  v9[23] = swift_task_alloc();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AB90B08()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = v0[19];
  OUTLINED_FUNCTION_58_12(v0[18], v0[17]);
  v3 = **(int **)(v1 + 48) + *(_QWORD *)(v1 + 48);
  v2 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_22AB90B98;
  __asm { BR              X8 }
}

uint64_t sub_22AB90B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  v2 = *(_QWORD *)(v1 + 136);
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v3 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

#error "22AB90C60: call analysis failed (funcsize=23)"

uint64_t sub_22AB90C64()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_46_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_5_0(v0);
}

uint64_t sub_22AB90C84()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableSupervisedEstimator.fitted<A>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_75_6();
  OUTLINED_FUNCTION_21_57();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  v1[3] = v5;
  v6 = (_QWORD *)swift_task_alloc();
  v1[8] = v6;
  v7 = OUTLINED_FUNCTION_8_70(v6, (uint64_t)sub_22AB90D18);
  return OUTLINED_FUNCTION_7_102(v7, v8, v9, v10, v11, v12);
}

uint64_t sub_22AB90D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 80) = v0;
  OUTLINED_FUNCTION_62_2();
  if (v0)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AB90D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 80);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_51_36();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_10(v2);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v4;
    v5 = OUTLINED_FUNCTION_72_14();
    v6 = OUTLINED_FUNCTION_72_14();
    type metadata accessor for AnnotatedFeature(255, v5, v6, v7);
    v8 = OUTLINED_FUNCTION_27_62();
    v9 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2440], v8);
    *v4 = v0;
    v4[1] = sub_22AB90E70;
    return PreprocessingUpdatableSupervisedEstimator.fitted<A>(toPreprocessed:eventHandler:)(*(_QWORD *)(v0 + 24), v0 + 16, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 48), v8, v9);
  }
}

uint64_t sub_22AB90E70()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AB90EBC()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_51_36();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_1_3(v0);
}

uint64_t sub_22AB90EE0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51_36();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableSupervisedEstimator.fitted<A, B>(to:validateOn:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_75_6();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v1[10] = v18;
  v1[11] = v0;
  v1[8] = v4;
  v1[9] = v12;
  v1[6] = v8;
  v1[7] = v6;
  v1[4] = v13;
  v1[5] = v14;
  v15 = (_QWORD *)swift_task_alloc();
  v1[12] = v15;
  *v15 = v1;
  v15[1] = sub_22AB90F9C;
  return PreprocessingUpdatableSupervisedEstimator.preprocessed<A>(from:eventHandler:)(v11, v9, v7, v5, v3, v17);
}

uint64_t sub_22AB90F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v3 + 104) = v2;
  *(_QWORD *)(v3 + 112) = v0;
  OUTLINED_FUNCTION_62_2();
  if (v0)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AB90FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 112);
  sub_22ABDF1DC();
  if (v1)
  {
    swift_release();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_2_18(v2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v4;
    *v4 = v0;
    v4[1] = sub_22AB9106C;
    return PreprocessingUpdatableSupervisedEstimator.preprocessed<A>(from:eventHandler:)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
}

uint64_t sub_22AB9106C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v2 + 128) = v1;
  *(_QWORD *)(v2 + 136) = v0;
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AB910B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 136);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_30_52();
    OUTLINED_FUNCTION_13_4();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return v2();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 24) = v4;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v5;
    v6 = OUTLINED_FUNCTION_72_14();
    v7 = OUTLINED_FUNCTION_72_14();
    type metadata accessor for AnnotatedFeature(255, v6, v7, v8);
    v9 = OUTLINED_FUNCTION_27_62();
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE2440], v9);
    *v5 = v0;
    v5[1] = sub_22AB911EC;
    return PreprocessingUpdatableSupervisedEstimator.fitted<A, B>(toPreprocessed:validateOn:eventHandler:)(*(_QWORD *)(v0 + 32), v0 + 16, v0 + 24, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD **)(v0 + 64), v9, v9);
  }
}

uint64_t sub_22AB911EC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AB91238()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_30_52();
  OUTLINED_FUNCTION_13_4();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_1_3(v0);
}

uint64_t sub_22AB91260()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AB9128C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30_52();
  OUTLINED_FUNCTION_13_4();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableSupervisedEstimator.update<A>(_:withPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v8[12] = a7;
  v8[13] = v7;
  v8[10] = a5;
  v8[11] = a6;
  v8[8] = a3;
  v8[9] = a4;
  v8[6] = a1;
  v8[7] = a2;
  v9 = *(_QWORD *)(a5 + 24);
  v8[14] = v9;
  v8[15] = *(_QWORD *)(v9 - 8);
  v8[16] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AB91308()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;

  v1 = v0[10];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[15] + 16))(v0[16], v0[13] + *(int *)(v1 + 52), v0[14]);
  v2 = *(_QWORD *)(v1 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(v1 + 32);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[2] = v2;
  v0[3] = AssociatedTypeWitness;
  v0[4] = v4;
  OUTLINED_FUNCTION_27_44(AssociatedConformanceWitness);
}

uint64_t sub_22AB913B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t);

  v4 = v3 + *(int *)(a1 + 52);
  v5 = (_QWORD *)OUTLINED_FUNCTION_17_27();
  v2[17] = v5;
  *v5 = v2;
  v5[1] = sub_22AB91410;
  return v7(v4, v2[7], v2[8], v2[9], v2[11], v2[12], v2[14], v1);
}

uint64_t sub_22AB91410()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 120);
  v3 = *v1;
  *(_QWORD *)(v3 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t PreprocessingUpdatableSupervisedEstimator.update<A>(_:with:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_75_6();
  OUTLINED_FUNCTION_21_57();
  v1[10] = v2;
  v1[11] = v0;
  v1[8] = v3;
  v1[9] = v4;
  v1[7] = v5;
  v6 = *(_QWORD *)(v2 + 24);
  v1[12] = v6;
  v1[13] = *(_QWORD *)(v6 - 8);
  v1[14] = OUTLINED_FUNCTION_0_0();
  v7 = (_QWORD *)swift_task_alloc();
  v1[15] = v7;
  v8 = OUTLINED_FUNCTION_8_70(v7, (uint64_t)sub_22AB91500);
  return OUTLINED_FUNCTION_7_102(v8, v9, v10, v11, v12, v13);
}

uint64_t sub_22AB91500(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  OUTLINED_FUNCTION_62_2();
  if (v1)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_4();
  }
}

uint64_t sub_22AB91570()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;

  OUTLINED_FUNCTION_23_5();
  v1 = v0[17];
  sub_22ABDF1DC();
  if (!v1)
  {
    v4 = v0[16];
    v5 = v0[10];
    OUTLINED_FUNCTION_79(v0[14], v0[11] + *(int *)(v5 + 52), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 16));
    v0[6] = v4;
    v6 = *(_QWORD *)(v5 + 16);
    v7 = OUTLINED_FUNCTION_28_44();
    v8 = *(_QWORD *)(v5 + 32);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[2] = v6;
    v0[3] = v7;
    v0[4] = v8;
    OUTLINED_FUNCTION_27_44(AssociatedConformanceWitness);
  }
  swift_release();
  swift_task_dealloc();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_5_0(v2);
}

uint64_t sub_22AB91630(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v13)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t);

  v5 = v4 + *(int *)(a1 + 52);
  v6 = (_QWORD *)OUTLINED_FUNCTION_17_27();
  v2[18] = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = OUTLINED_FUNCTION_28_44();
  type metadata accessor for AnnotatedFeature(255, AssociatedTypeWitness, v8, v9);
  v10 = OUTLINED_FUNCTION_27_62();
  v11 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2440], v10);
  *v6 = v2;
  v6[1] = sub_22AB916F0;
  return v13(v5, v3, v2[8], v2[9], v10, v11, v2[12], v1);
}

uint64_t sub_22AB916F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_35_37();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AB91754()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_28_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_1_3(v0);
}

uint64_t sub_22AB91784()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void PreprocessingUpdatableSupervisedEstimator.encode(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTransformer();
}

uint64_t sub_22AB91854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v2 + *(int *)(a1 + 52), v1, v4, v3);
}

void PreprocessingUpdatableSupervisedEstimator.decode(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v11 = v5;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_27_10();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v4, v10);
    OUTLINED_FUNCTION_37_5();
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_17_54(v11, a3);
  }
  OUTLINED_FUNCTION_16();
}

void PreprocessingUpdatableSupervisedEstimator.encodeWithOptimizer(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTransformer();
}

uint64_t sub_22AB91A48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32))(v1 + *(int *)(a1 + 52), v5, v3, v2);
}

void PreprocessingUpdatableSupervisedEstimator.decodeWithOptimizer(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v9 = v5;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_27_10();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v4, v11);
    OUTLINED_FUNCTION_37_5();
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_17_54(v9, a3);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AB91BA8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B72C0;
  return PreprocessingUpdatableSupervisedEstimator.update<A>(_:with:eventHandler:)();
}

void sub_22AB91C3C()
{
  PreprocessingUpdatableSupervisedEstimator.encodeWithOptimizer(_:to:)();
}

void sub_22AB91C50(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PreprocessingUpdatableSupervisedEstimator.decodeWithOptimizer(from:)(a1, a2, a3);
}

uint64_t sub_22AB91C64()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B785C;
  return PreprocessingUpdatableSupervisedEstimator.fitted<A>(to:eventHandler:)();
}

uint64_t sub_22AB91CFC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B785C;
  return PreprocessingUpdatableSupervisedEstimator.fitted<A, B>(to:validateOn:eventHandler:)();
}

void sub_22AB91DAC()
{
  PreprocessingUpdatableSupervisedEstimator.encode(_:to:)();
}

void sub_22AB91DC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PreprocessingUpdatableSupervisedEstimator.decode(from:)(a1, a2, a3);
}

void sub_22AB91E98()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AB91EA4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessingUpdatableSupervisedEstimator<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AB91ED0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22AB91EF4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AB91FD0 + 4 * byte_22ABFF5D0[v21 - 1]))();
}

void sub_22AB92044(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t OUTLINED_FUNCTION_7_102(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  return PreprocessingUpdatableSupervisedEstimator.preprocessed<A>(from:eventHandler:)(a1, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_27_62()
{
  return sub_22ABDF758();
}

uint64_t OUTLINED_FUNCTION_28_44()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_30_52()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_35_37()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[13] + 8))(v0[14], v0[12]);
}

uint64_t OUTLINED_FUNCTION_51_36()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_53_33()
{
  return 48;
}

void sub_22AB922A4(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4, uint64_t a5)
{
  sub_22AB922B8(a1, a2, a3, a4, a5);
}

void sub_22AB922B8(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *(*v33)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = v5;
  v33 = a3;
  v34 = a5;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a2 + 16);
  if (v11 >= v10)
    v12 = *(_QWORD *)(a1 + 16);
  else
    v12 = *(_QWORD *)(a2 + 16);
  v39 = MEMORY[0x24BEE4AF8];
  sub_22AB4CE30();
  v13 = v39;
  v30 = v11;
  v31 = v10;
  v27 = v5;
  v28 = a2;
  v29 = a1;
  v26 = v12;
  if (v12)
  {
    v14 = (uint64_t *)(a1 + 32);
    v15 = v10;
    v16 = a2 + 32;
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_30_8();
    v17 = v15;
    v32 = a4;
    while (v17)
    {
      if (!v11)
        goto LABEL_23;
      OUTLINED_FUNCTION_36_45(*v14, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38);
      OUTLINED_FUNCTION_35_38();
      v40 = v6;
      v18 = *(_QWORD *)(v6 + 16);
      v6 = v18 + 1;
      if (v18 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        OUTLINED_FUNCTION_75_18();
        v13 = v40;
      }
      --v11;
      *(_QWORD *)(v13 + 16) = v6;
      *(_QWORD *)(v13 + 8 * v18 + 32) = v35;
      --v17;
      v16 += 8;
      ++v14;
      if (!--v12)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_30_8();
LABEL_13:
    v20 = v30;
    v19 = v31;
    if (v31 <= v30)
    {
LABEL_21:
      OUTLINED_FUNCTION_27_7();
      swift_bridgeObjectRelease();
      swift_release();
      OUTLINED_FUNCTION_72_1();
      return;
    }
    v21 = v29 + 32;
    v22 = v26;
    while (v22 < v19)
    {
      if (v20 == v22)
        goto LABEL_21;
      if (v22 >= v20)
        goto LABEL_25;
      OUTLINED_FUNCTION_36_45(*(_QWORD *)(v21 + 8 * v22), v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38);
      OUTLINED_FUNCTION_35_38();
      v41 = v6;
      v24 = *(_QWORD *)(v6 + 16);
      v23 = *(_QWORD *)(v6 + 24);
      v6 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        OUTLINED_FUNCTION_75_18();
        v13 = v41;
      }
      ++v22;
      *(_QWORD *)(v13 + 16) = v6;
      *(_QWORD *)(v13 + 8 * v24 + 32) = v35;
      v20 = v30;
      v19 = v31;
      if (v31 == v22)
        goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

double sub_22AB924B8@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v3;
  uint64_t v4;
  double result;

  v3 = a1[1];
  *(_OWORD *)a3 = *a1;
  *(_OWORD *)(a3 + 16) = v3;
  *(_OWORD *)(a3 + 32) = a1[2];
  *(_QWORD *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = 0;
  *(_BYTE *)(a3 + 136) = 0;
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a3 + 64) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a3 + 72) = v4;
  *(_QWORD *)(a3 + 80) = 0;
  *(_QWORD *)(a3 + 88) = 0;
  *(_BYTE *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 104) = v4;
  *(_QWORD *)(a3 + 112) = 0x7FF8000000000000;
  result = 0.0;
  *(_OWORD *)(a3 + 144) = 0u;
  *(_OWORD *)(a3 + 160) = 0u;
  *(_QWORD *)(a3 + 176) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + 184) = 0;
  *(_QWORD *)(a3 + 192) = 0;
  *(_BYTE *)(a3 + 200) = 0;
  *(_QWORD *)(a3 + 208) = v4;
  *(_QWORD *)(a3 + 216) = 0;
  *(_QWORD *)(a3 + 224) = 0;
  *(_BYTE *)(a3 + 232) = 0;
  *(_QWORD *)(a3 + 240) = v4;
  *(_QWORD *)(a3 + 248) = v4;
  *(_QWORD *)(a3 + 256) = v4;
  *(_QWORD *)(a3 + 264) = v4;
  *(_QWORD *)(a3 + 272) = v4;
  *(_QWORD *)(a3 + 280) = v4;
  *(_BYTE *)(a3 + 288) = 0;
  *(_QWORD *)(a3 + 48) = a2;
  *(_QWORD *)(a3 + 56) = 11;
  return result;
}

double sub_22AB9252C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v3;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a3 + 128) = 0;
  *(_QWORD *)(a3 + 136) = 0;
  v5 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a3 + 144) = 0;
  *(_QWORD *)(a3 + 64) = 11;
  *(_QWORD *)(a3 + 72) = v5;
  *(_QWORD *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 80) = v5;
  *(_BYTE *)(a3 + 104) = 0;
  *(_QWORD *)(a3 + 112) = v5;
  *(_QWORD *)(a3 + 120) = 0x7FF8000000000000;
  result = 0.0;
  *(_OWORD *)(a3 + 152) = 0u;
  *(_OWORD *)(a3 + 168) = 0u;
  *(_QWORD *)(a3 + 184) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + 192) = 0;
  *(_QWORD *)(a3 + 200) = 0;
  *(_BYTE *)(a3 + 208) = 0;
  *(_QWORD *)(a3 + 216) = v5;
  *(_QWORD *)(a3 + 224) = 0;
  *(_QWORD *)(a3 + 232) = 0;
  *(_BYTE *)(a3 + 240) = 0;
  *(_QWORD *)(a3 + 248) = v5;
  *(_QWORD *)(a3 + 256) = v5;
  *(_QWORD *)(a3 + 264) = v5;
  *(_QWORD *)(a3 + 272) = v5;
  *(_QWORD *)(a3 + 280) = v5;
  *(_QWORD *)(a3 + 288) = v5;
  *(_BYTE *)(a3 + 296) = 0;
  *(_QWORD *)(a3 + 48) = v4;
  *(_QWORD *)(a3 + 56) = a2;
  return result;
}

double sub_22AB925AC@<D0>(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  double result;

  memcpy((void *)a3, __src, 0x48uLL);
  *(_QWORD *)(a3 + 144) = 0;
  *(_QWORD *)(a3 + 152) = 0;
  *(_BYTE *)(a3 + 160) = 0;
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a3 + 88) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a3 + 96) = v5;
  *(_QWORD *)(a3 + 104) = 0;
  *(_QWORD *)(a3 + 112) = 0;
  *(_BYTE *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = v5;
  *(_QWORD *)(a3 + 136) = 0x7FF8000000000000;
  result = 0.0;
  *(_OWORD *)(a3 + 168) = 0u;
  *(_OWORD *)(a3 + 184) = 0u;
  *(_QWORD *)(a3 + 208) = 0;
  *(_QWORD *)(a3 + 216) = 0;
  *(_QWORD *)(a3 + 200) = 0x3FF0000000000000;
  *(_BYTE *)(a3 + 224) = 0;
  *(_QWORD *)(a3 + 240) = 0;
  *(_QWORD *)(a3 + 248) = 0;
  *(_QWORD *)(a3 + 232) = v5;
  *(_BYTE *)(a3 + 256) = 0;
  *(_QWORD *)(a3 + 264) = v5;
  *(_QWORD *)(a3 + 272) = v5;
  *(_QWORD *)(a3 + 280) = v5;
  *(_QWORD *)(a3 + 288) = v5;
  *(_QWORD *)(a3 + 296) = v5;
  *(_QWORD *)(a3 + 304) = v5;
  *(_BYTE *)(a3 + 312) = 0;
  *(_QWORD *)(a3 + 72) = a2;
  *(_QWORD *)(a3 + 80) = 11;
  return result;
}

uint64_t sub_22AB92640(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  double *v3;
  double *v4;
  unint64_t v5;
  unint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v3 = (double *)(result + 32);
    v4 = (double *)(a2 + 32);
    v5 = *(_QWORD *)(result + 16);
    if (v2 >= v5)
      v6 = *(_QWORD *)(result + 16);
    else
      v6 = *(_QWORD *)(a2 + 16);
    if (v6 >= v2 - 1)
      v6 = v2 - 1;
    v7 = 0.0;
    while (v5 != v6)
    {
      v8 = *v3++;
      v9 = fabs(v8);
      v10 = *v4++;
      v7 = v7 + v9 * (v10 * v9);
      if (!--v2)
        return result;
    }
    __break(1u);
  }
  return result;
}

void sub_22AB926A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v6 = *a1;
    v5 = a1[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_22AB88498();
      v5 = v7;
    }
    v8 = 0;
    v9 = *(_QWORD *)(v6 + 16);
    while (v2 != v8)
    {
      if (v9 == v8)
        goto LABEL_12;
      if (v8 >= *(_QWORD *)(v5 + 16))
        goto LABEL_13;
      *(double *)(v5 + 8 * v8 + 32) = *(double *)(v5 + 8 * v8 + 32)
                                    + (*(double *)(a2 + 32 + 8 * v8) + *(double *)(a2 + 32 + 8 * v8))
                                    * *(double *)(v6 + 32 + 8 * v8);
      if (v2 == ++v8)
      {
        a1[1] = v5;
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
LABEL_10:
    OUTLINED_FUNCTION_38();
  }
}

uint64_t sub_22AB92758(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  double v9;

  v6 = *(_QWORD *)(v2 + 8);
  sub_22AB928B8();
  *(double *)(v2 + 152) = a2;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(v2 + 88) = a1;
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = sub_22AB882B4(v6, 0.0);
    swift_release();
    *(_QWORD *)(v2 + 96) = v8;
    result = (uint64_t)sub_22AB929E0();
    if (!v3)
    {
      MEMORY[0x24BDAC7A8](result);
      sub_22A99CE8C();
      swift_getKeyPath();
      DenseVector.withUnsafeVectorPointer<A>(_:)();
      swift_release();
      *(double *)(v2 + 200) = 1.0 / (v9 + 1.0 + fabs(*(double *)(v2 + 144)));
      sub_22AB92AE0();
      return sub_22AB92BAC();
    }
  }
  return result;
}

void sub_22AB928B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 80);
  if ((unsigned __int128)(v1 * (__int128)v2) >> 64 != (v1 * v2) >> 63)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = sub_22AB5B76C(v1 * v2, 0.0);
  swift_release();
  *(_QWORD *)(v0 + 208) = v1;
  *(_QWORD *)(v0 + 216) = v2;
  *(_BYTE *)(v0 + 224) = 1;
  *(_QWORD *)(v0 + 232) = v3;
  v4 = sub_22AB5B76C(v1 * v2, 0.0);
  swift_release();
  *(_QWORD *)(v0 + 240) = v1;
  *(_QWORD *)(v0 + 248) = v2;
  *(_BYTE *)(v0 + 256) = 1;
  *(_QWORD *)(v0 + 264) = v4;
  if (v1 < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = sub_22AB882B4(v1, 0.0);
  swift_release();
  *(_QWORD *)(v0 + 272) = v5;
  if ((v2 & 0x8000000000000000) == 0)
  {
    v6 = sub_22AB882B4(v2, 0.0);
    swift_release();
    *(_QWORD *)(v0 + 280) = v6;
    v7 = sub_22AB882B4(v2, 0.0);
    swift_release();
    *(_QWORD *)(v0 + 288) = v7;
    swift_release();
    *(_QWORD *)(v0 + 296) = MEMORY[0x24BEE4AF8];
    v8 = sub_22AB882B4(v1, 0.0);
    swift_release();
    *(_QWORD *)(v0 + 304) = v8;
    *(_BYTE *)(v0 + 312) = 0;
    return;
  }
LABEL_7:
  __break(1u);
}

_QWORD *sub_22AB929E0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD v10[6];
  char v11;
  _BYTE *v12;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  v12 = __dst;
  v10[2] = v0 + 11;
  v10[3] = sub_22AB9BC54;
  v10[4] = &v11;
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
  result = DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB9BC7C, (uint64_t)v10, v1);
  v3 = v0[22];
  v4 = __OFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  v0[22] = v5;
  v6 = v0[23];
  v4 = __OFADD__(v6, 1);
  v7 = v6 + 1;
  if (v4)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v0[23] = v7;
  if ((~v0[18] & 0x7FF0000000000000) == 0)
  {
    sub_22AACB4A0();
    v8 = swift_allocError();
    *v9 = 0;
    return (_QWORD *)swift_willThrow(v8);
  }
  return result;
}

void sub_22AB92AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  double v8;
  double v9;

  v1 = *(_QWORD *)(v0 + 72);
  swift_retain();
  sub_22AB926A4((uint64_t *)(v0 + 88), v1);
  swift_release();
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(double *)(v0 + 200);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_22AB88498();
      v2 = v5;
    }
    v6 = 0;
    v7 = *(_QWORD *)(v2 + 16);
    while (v6 < v7)
    {
      *(double *)(v2 + 8 * v6 + 32) = v4 * *(double *)(v2 + 8 * v6 + 32);
      if (v3 == ++v6)
      {
        *(_QWORD *)(v0 + 96) = v2;
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_8:
    v8 = *(double *)(v0 + 200);
    sub_22AB92640(*(_QWORD *)(v0 + 88), v1);
    *(double *)(v0 + 144) = v8 * (v9 + *(double *)(v0 + 144));
  }
}

uint64_t sub_22AB92BAC()
{
  uint64_t v0;
  uint64_t result;
  double v2;
  uint64_t v3;
  _BYTE *v4;
  double v5;

  sub_22A99CE8C();
  swift_getKeyPath();
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  result = swift_release();
  v2 = v5 / *(double *)(v0 + 200);
  *(double *)(v0 + 136) = v2;
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    sub_22AACB4A0();
    v3 = swift_allocError();
    *v4 = 1;
    return swift_willThrow(v3);
  }
  return result;
}

void sub_22AB92C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v0;
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v3 + 16);
  swift_retain();
  v5 = sub_22AB9AD5C(v4, v3);
  sub_22AB92DA0(v5);
  swift_release();
  if (!v1)
  {
    v6 = *(_QWORD *)(v2 + 96);
    sub_22AB92EE4(-*(double *)(v2 + 152));
    v7 = v6;
    swift_release();
    *(_QWORD *)(v2 + 296) = v7;
    swift_retain();
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
    DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB9B4D8, v7, v8);
    swift_release();
    *(_QWORD *)(v2 + 192) = *(_QWORD *)(v2 + 144);
    v9 = *(_QWORD *)(v2 + 96);
    swift_retain();
    swift_release();
    *(_QWORD *)(v2 + 304) = v9;
    sub_22AB929E0();
    sub_22AB92AE0();
  }
}

uint64_t sub_22AB92DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[384];
  _QWORD __src[48];
  _BYTE __dst[72];
  uint64_t v21;

  v2 = v1;
  v21 = *MEMORY[0x24BDAC8D0];
  memcpy(__dst, (const void *)v2, sizeof(__dst));
  v4 = *(_QWORD *)(v2 + 72);
  v6 = *(double *)(v2 + 144);
  v5 = *(double *)(v2 + 152);
  v7 = *(_QWORD *)(v2 + 88);
  v8 = *(_QWORD *)(v2 + 96);
  sub_22AB9B3E8((uint64_t)__dst);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22AB93FD8((uint64_t)__dst, v4, v7, v8, a1, (uint64_t)__src, v5, v6);
  __src[4] = *(_QWORD *)(v2 + 200);
  *(double *)(v2 + 152) = sub_22AB94208();
  v11 = *(_QWORD *)(v2 + 176);
  v13 = __OFADD__(v11, v12);
  v14 = v11 + v12;
  if (v13)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  *(_QWORD *)(v2 + 176) = v14;
  v15 = *(_QWORD *)(v2 + 184);
  v13 = __OFADD__(v15, v10);
  v16 = v15 + v10;
  if (v13)
    goto LABEL_7;
  *(_QWORD *)(v2 + 184) = v16;
  if ((v9 & 1) == 0)
    *(_BYTE *)(v2 + 160) = 1;
  memcpy(v18, __src, sizeof(v18));
  return sub_22AB9B434((uint64_t)v18);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_22AB92EE4(double a1)
{
  uint64_t v1;
  _QWORD v2[4];
  double v3;

  v3 = a1;
  v2[2] = &v3;
  swift_retain();
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
  DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB9BC68, (uint64_t)v2, v1);
}

void sub_22AB92F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38[41];

  v2 = *(_QWORD *)(v0 + 168);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
    goto LABEL_31;
  }
  v5 = v0;
  v6 = *(_QWORD *)(v0 + 80);
  if (!v6)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v4 == 0x8000000000000000 && v6 == -1)
    goto LABEL_34;
  v8 = v4 % v6;
  v9 = *(_QWORD *)(v0 + 264);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v0 + 264) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_22AB88498();
    v9 = v11;
    *(_QWORD *)(v0 + 264) = v11;
  }
  v12 = *(_QWORD *)(v0 + 240);
  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
  {
    v13 = v8 * v12;
    if ((unsigned __int128)(v8 * (__int128)v12) >> 64 != (v8 * v12) >> 63)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v14 = 1;
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 248);
    v13 = v8;
  }
  sub_22AB934D8(v9 + 32 + 8 * v13, v12, v14, v0);
  *(_QWORD *)(v0 + 264) = v9;
  v15 = *(_QWORD *)(v0 + 232);
  v16 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v0 + 232) = v15;
  if ((v16 & 1) == 0)
  {
    sub_22AB88498();
    v15 = v17;
    *(_QWORD *)(v0 + 232) = v17;
  }
  v18 = *(_QWORD *)(v0 + 208);
  if ((*(_BYTE *)(v0 + 224) & 1) != 0)
  {
    v19 = v8 * v18;
    if ((unsigned __int128)(v8 * (__int128)v18) >> 64 != (v8 * v18) >> 63)
    {
LABEL_36:
      __break(1u);
      return;
    }
    v20 = 1;
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 216);
    v19 = v8;
  }
  v21 = sub_22AB93530(v15 + 32 + 8 * v19, v18, v20, v0);
  *(_QWORD *)(v0 + 232) = v15;
  MEMORY[0x24BDAC7A8](v21);
  v35 = v0;
  v36 = v8;
  sub_22A99CE8C();
  swift_retain();
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  v22 = v1;
  swift_release();
  v23 = *(_QWORD *)(v0 + 280);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_22AB88498();
    v23 = v24;
  }
  if (v8 < 0)
    goto LABEL_32;
  if ((unint64_t)v8 >= *(_QWORD *)(v23 + 16))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(double *)(v23 + 8 * v8 + 32) = 1.0 / v37;
  *(_QWORD *)(v5 + 280) = v23;
  v25 = *(_QWORD *)(v5 + 96);
  swift_retain();
  v26 = swift_release();
  *(_QWORD *)(v5 + 272) = v25;
  MEMORY[0x24BDAC7A8](v26);
  v35 = v5;
  v36 = v8;
  v27 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
  DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB9BC14, (uint64_t)&v34, v27);
  memcpy(v38, (const void *)v5, 0x139uLL);
  if (sub_22AB93E40())
  {
    v28 = *(_QWORD *)&v38[34];
    v29 = *(_QWORD *)(*(_QWORD *)&v38[34] + 16);
    swift_retain();
    v30 = sub_22AB9AD5C(v29, v28);
    sub_22AB92DA0(v30);
    swift_release();
    if (v22)
      return;
  }
  else if (v38[19] < 1.0)
  {
    *(double *)(v5 + 152) = fmin(v38[19] * 1.25, 1.0);
  }
  v31 = -*(double *)(v5 + 152);
  v32 = swift_retain();
  sub_22AB92EE4(v31);
  v33 = v32;
  swift_release();
  swift_release();
  *(_QWORD *)(v5 + 296) = v33;
  swift_retain();
  DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB9B4D8, v33, v27);
  swift_release();
}

uint64_t sub_22AB932F0()
{
  uint64_t result;
  char v1;
  uint64_t v2;
  char *v3;
  double v4;

  sub_22A99CE8C();
  swift_getKeyPath();
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  swift_release();
  if (v4 <= 4.93038066e-32)
  {
    v1 = 0;
LABEL_6:
    sub_22AACB4A0();
    v2 = swift_allocError();
    *v3 = v1;
    return swift_willThrow(v2);
  }
  result = DenseVector.withUnsafeVectorPointer<A>(_:)();
  if (LOBYTE(v4) != 1)
  {
    v1 = 1;
    goto LABEL_6;
  }
  return result;
}

double sub_22AB9341C(double a1, double a2, double a3, double a4)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;

  v4 = a4 - (a2 - a1 + a2 - a1) + a3;
  v5 = (a2 - a1) * 3.0 - a4 - (a3 + a3);
  if (a2 >= a1)
    v6 = a1;
  else
    v6 = a2;
  v7 = 1.0;
  v8 = 0.0;
  if (a1 >= a2)
    v9 = 1.0;
  else
    v9 = 0.0;
  v10 = 32;
  do
  {
    v11 = (v7 + v8) * 0.5;
    v12 = v11 * (v11 * (v5 + v4 * v11) + a3) + a1;
    if (v12 < v6)
      v9 = (v7 + v8) * 0.5;
    if (v7 - v8 < 0.000001)
      break;
    if (v12 < v6)
      v6 = v11 * (v11 * (v5 + v4 * v11) + a3) + a1;
    if (v11 * (v5 + v5 + v4 * 3.0 * v11) + a3 <= 0.0)
      v8 = (v7 + v8) * 0.5;
    else
      v7 = (v7 + v8) * 0.5;
    --v10;
  }
  while (v10);
  return v9;
}

uint64_t sub_22AB934D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 < 0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v4 = 0;
    v5 = *(_QWORD *)(a4 + 296);
    v6 = v5 + 32;
    v7 = *(_QWORD *)(v5 + 16);
    while (v7 != v4)
    {
      if ((unsigned __int128)(v4 * (__int128)a3) >> 64 != (v4 * a3) >> 63)
        goto LABEL_9;
      *(_QWORD *)(result + 8 * v4 * a3) = *(_QWORD *)(v6 + 8 * v4);
      if (a2 == ++v4)
        return result;
    }
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_22AB93530(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a2 < 0)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v4 = 0;
    v5 = *(_QWORD *)(a4 + 96);
    v6 = v5 + 32;
    v7 = *(_QWORD *)(a4 + 304);
    v8 = v7 + 32;
    v9 = *(_QWORD *)(v5 + 16);
    v10 = *(_QWORD *)(v7 + 16);
    while (v9 != v4)
    {
      if (v10 == v4)
        goto LABEL_10;
      if ((unsigned __int128)(v4 * (__int128)a3) >> 64 != (v4 * a3) >> 63)
        goto LABEL_11;
      *(double *)(result + 8 * v4 * a3) = *(double *)(v6 + 8 * v4) - *(double *)(v8 + 8 * v4);
      if (a2 == ++v4)
        return result;
    }
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_22AB935A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = result;
  v8 = *(_QWORD *)(a4 + 208);
  if ((*(_BYTE *)(a4 + 224) & 1) == 0)
  {
    v9 = *(_QWORD *)(a4 + 216);
    goto LABEL_5;
  }
  if ((unsigned __int128)(a5 * (__int128)v8) >> 64 == (a5 * v8) >> 63)
  {
    v9 = 1;
    a5 *= v8;
LABEL_5:
    v10 = *(_QWORD *)(a4 + 232) + 8 * a5 + 32;
    swift_retain();
    sub_22AB93664(v7, a2, a3, v10, v8, v9);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_22AB93664(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  double v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  BOOL v15;

  if (a2 != a5)
    goto LABEL_28;
  v6 = a2 * a3;
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 != (a2 * a3) >> 63)
  {
    __break(1u);
    goto LABEL_26;
  }
  v7 = a2 * a6;
  if ((unsigned __int128)(a2 * (__int128)a6) >> 64 != (a2 * a6) >> 63)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    result = sub_22ABDFADC();
    __break(1u);
    return result;
  }
  if (!a3 || !a6)
    goto LABEL_27;
  v8 = v6 >= 0;
  if (a3 > 0)
    v8 = v6 < 1;
  v9 = 0.0;
  if (!v8)
  {
    v10 = 0;
    v11 = 0;
    v12 = a2 * a3;
    do
    {
      v13 = v10 + a3;
      if (__OFADD__(v10, a3))
        v13 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      if (a6 <= 0)
      {
        if (v7 >= v11)
          return result;
      }
      else if (v11 >= v7)
      {
        return result;
      }
      v14 = *(double *)(a4 + 8 * v11);
      if (__OFADD__(v11, a6))
        v11 = ((v11 + a6) >> 63) ^ 0x8000000000000000;
      else
        v11 += a6;
      v9 = v9 + *(double *)(result + 8 * v10) * v14;
      v15 = v13 >= v6;
      if (a3 > 0)
        v12 = a2 * a3;
      else
        v15 = v12 >= v13;
      v10 = v13;
    }
    while (!v15);
  }
  return result;
}

void sub_22AB93874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  _BYTE *v52;

  if (*(_QWORD *)(a4 + 80) >= *(_QWORD *)(a4 + 168))
    v5 = *(_QWORD *)(a4 + 168);
  else
    v5 = *(_QWORD *)(a4 + 80);
  if (v5 < 0)
  {
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    return;
  }
  if (v5)
  {
    v7 = 0;
    v52 = (_BYTE *)(a4 + 256);
    do
    {
      v8 = *(_QWORD *)(a4 + 80);
      v9 = a5 + v8;
      if (__OFADD__(a5, v8))
        goto LABEL_62;
      v10 = __OFSUB__(v9, v7);
      v11 = v9 - v7;
      if (v10)
        goto LABEL_63;
      if (!v8)
        goto LABEL_64;
      if (v11 == 0x8000000000000000 && v8 == -1)
        goto LABEL_67;
      v13 = v11 % v8;
      v14 = *(_QWORD *)(a4 + 240);
      if ((*v52 & 1) != 0)
      {
        v15 = v13 * v14;
        if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != (v13 * v14) >> 63)
          goto LABEL_68;
        v16 = 1;
      }
      else
      {
        v16 = *(_QWORD *)(a4 + 248);
        v15 = v11 % v8;
      }
      v17 = *(_QWORD *)(a4 + 264) + 32 + 8 * v15;
      sub_22AB56428(v13, *(_QWORD *)(a4 + 280));
      v19 = v18;
      swift_retain();
      sub_22AB93664(v17, v14, v16, a1, a2, a3);
      v21 = v20;
      v22 = *(_QWORD *)(a4 + 288);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(a4 + 288) = v22;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_22AB88498();
        v22 = v24;
      }
      if (v13 < 0)
        goto LABEL_65;
      if ((unint64_t)v13 >= *(_QWORD *)(v22 + 16))
        goto LABEL_66;
      *(double *)(v22 + 8 * v13 + 32) = v19 * v21;
      *(_QWORD *)(a4 + 288) = v22;
      swift_release();
      v25 = *(_QWORD *)(a4 + 208);
      if ((*(_BYTE *)(a4 + 224) & 1) != 0)
      {
        v26 = v13 * v25;
        if ((unsigned __int128)(v13 * (__int128)v25) >> 64 != (v13 * v25) >> 63)
          goto LABEL_69;
        v27 = 1;
      }
      else
      {
        v27 = *(_QWORD *)(a4 + 216);
        v26 = v13;
      }
      ++v7;
      v28 = *(_QWORD *)(a4 + 232) + 32 + 8 * v26;
      sub_22AB56428(v13, *(_QWORD *)(a4 + 288));
      v30 = -v29;
      swift_retain();
      sub_22AB93C30(v28, v25, v27, a1, a2, a3, v30);
      swift_release();
    }
    while (v5 != v7);
  }
  sub_22A9F36C0(a5, *(_QWORD *)(a4 + 208), *(_QWORD *)(a4 + 216), *(_BYTE *)(a4 + 224), *(_QWORD *)(a4 + 232), a1, a2, a3, a4, a5);
  if (*(_QWORD *)(a4 + 80) >= *(_QWORD *)(a4 + 168))
    v31 = *(_QWORD *)(a4 + 168);
  else
    v31 = *(_QWORD *)(a4 + 80);
  if (v31 < 0)
    goto LABEL_71;
  if (v31)
  {
    v32 = v31;
    while (v31 >= v32)
    {
      v33 = *(_QWORD *)(a4 + 80);
      v34 = a5 + v33;
      if (__OFADD__(a5, v33))
        goto LABEL_54;
      v10 = __OFSUB__(v34, --v32);
      v35 = v34 - v32;
      if (v10)
        goto LABEL_55;
      if (!v33)
        goto LABEL_56;
      if (v35 == 0x8000000000000000 && v33 == -1)
        goto LABEL_59;
      v37 = v35 % v33;
      if (v35 % v33 < 0)
        goto LABEL_57;
      v38 = *(_QWORD *)(a4 + 280);
      if ((unint64_t)v37 >= *(_QWORD *)(v38 + 16))
        goto LABEL_58;
      v39 = *(double *)(v38 + 8 * v37 + 32);
      v40 = *(_QWORD *)(a4 + 208);
      if ((*(_BYTE *)(a4 + 224) & 1) != 0)
      {
        v41 = v37 * v40;
        if ((unsigned __int128)(v37 * (__int128)v40) >> 64 != (v37 * v40) >> 63)
          goto LABEL_60;
        v42 = 1;
      }
      else
      {
        v42 = *(_QWORD *)(a4 + 216);
        v41 = v37;
      }
      v43 = *(_QWORD *)(a4 + 232) + 32 + 8 * v41;
      swift_retain();
      sub_22AB93664(v43, v40, v42, a1, a2, a3);
      v45 = v44;
      swift_release();
      v46 = *(_QWORD *)(a4 + 240);
      if ((*(_BYTE *)(a4 + 256) & 1) != 0)
      {
        v47 = v37 * v46;
        if ((unsigned __int128)(v37 * (__int128)v46) >> 64 != (v37 * v46) >> 63)
          goto LABEL_61;
        v48 = 1;
      }
      else
      {
        v48 = *(_QWORD *)(a4 + 248);
        v47 = v37;
      }
      v49 = *(_QWORD *)(a4 + 264) + 32 + 8 * v47;
      sub_22AB56428(v37, *(_QWORD *)(a4 + 288));
      v51 = v50 - v39 * v45;
      swift_retain();
      sub_22AB93C30(v49, v46, v48, a1, a2, a3, v51);
      swift_release();
      if (!v32)
        return;
    }
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
}

uint64_t sub_22AB93C30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  BOOL v15;

  if (a5 != a2)
    goto LABEL_28;
  v7 = a5 * a6;
  if ((unsigned __int128)(a5 * (__int128)a6) >> 64 != (a5 * a6) >> 63)
  {
    __break(1u);
    goto LABEL_26;
  }
  v8 = a5 * a3;
  if ((unsigned __int128)(a5 * (__int128)a3) >> 64 != (a5 * a3) >> 63)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    result = sub_22ABDFADC();
    __break(1u);
    return result;
  }
  if (!a3 || !a6)
    goto LABEL_27;
  v9 = v7 >= 0;
  if (a6 > 0)
    v9 = v7 < 1;
  if (!v9)
  {
    v10 = 0;
    v11 = 0;
    v12 = a5 * a6;
    do
    {
      v13 = v10 + a6;
      if (__OFADD__(v10, a6))
        v13 = (a6 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      if (a3 <= 0)
      {
        if (v8 >= v11)
          return result;
      }
      else if (v11 >= v8)
      {
        return result;
      }
      v14 = *(double *)(result + 8 * v11);
      if (__OFADD__(v11, a3))
        v11 = ((v11 + a3) >> 63) ^ 0x8000000000000000;
      else
        v11 += a3;
      *(double *)(a4 + 8 * v10) = *(double *)(a4 + 8 * v10) + v14 * a7;
      v15 = v13 >= v7;
      if (a6 > 0)
        v12 = a5 * a6;
      else
        v15 = v12 >= v13;
      v10 = v13;
    }
    while (!v15);
  }
  return result;
}

BOOL sub_22AB93E40()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  double v4;

  if ((*(_BYTE *)(v0 + 312) & 1) != 0 || !*(_QWORD *)(v0 + 168) || *(double *)(v0 + 192) < *(double *)(v0 + 144))
    return 1;
  sub_22A99CE8C();
  v2 = DenseVector.withUnsafeVectorPointer<A>(_:)();
  MEMORY[0x24BDAC7A8](v2);
  swift_getKeyPath();
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  v3 = swift_release();
  MEMORY[0x24BDAC7A8](v3);
  swift_getKeyPath();
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  swift_release();
  return v4 * 0.9 * v4 < v4 * v4;
}

uint64_t sub_22AB93FD8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  double v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  double v26;

  if (a7 < 0.000000001 || a7 > 25.0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = (a7 + -0.000000001) * 4.0 + a7;
  if (v12 < 0.000000001)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = result;
  v16 = *(_QWORD *)result;
  v17 = *(_QWORD *)(result + 8);
  v18 = *(_BYTE *)(result + 16);
  v24 = *(_OWORD *)(result + 24);
  v19 = *(_QWORD *)(result + 40);
  v22 = *(_QWORD *)(result + 56);
  v23 = *(_QWORD *)(result + 48);
  v20 = *(_QWORD *)(result + 64);
  sub_22AB9B3E8(result);
  sub_22A99CE8C();
  swift_retain();
  swift_retain();
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  result = swift_release();
  if (v26 < 1.0e-10)
  {
    result = sub_22AB9B938(v15);
    *(_OWORD *)a6 = xmmword_22ABFF700;
    *(_OWORD *)(a6 + 16) = xmmword_22ABFF710;
    *(_QWORD *)(a6 + 32) = 0x3FF0000000000000;
    *(_QWORD *)(a6 + 40) = 20;
    *(_QWORD *)(a6 + 48) = v16;
    *(_QWORD *)(a6 + 56) = v17;
    *(_BYTE *)(a6 + 64) = v18 & 1;
    *(_OWORD *)(a6 + 72) = v24;
    *(_QWORD *)(a6 + 88) = v19;
    *(_QWORD *)(a6 + 96) = v23;
    *(_QWORD *)(a6 + 104) = v22;
    *(_QWORD *)(a6 + 112) = v20;
    *(_QWORD *)(a6 + 120) = a2;
    *(_QWORD *)(a6 + 128) = a3;
    *(double *)(a6 + 136) = a8;
    *(_QWORD *)(a6 + 144) = a5;
    *(float64x2_t *)(a6 + 152) = vmulq_n_f64((float64x2_t)xmmword_22ABFF700, v26);
    *(_QWORD *)(a6 + 168) = 0x3E112E0BE826D695;
    *(double *)(a6 + 176) = a8;
    *(double *)(a6 + 184) = v26;
    *(_QWORD *)(a6 + 192) = 0x3E112E0BE826D695;
    *(double *)(a6 + 200) = a8;
    *(double *)(a6 + 208) = v26;
    *(double *)(a6 + 216) = a7;
    *(double *)(a6 + 224) = a8;
    *(_OWORD *)(a6 + 232) = xmmword_22ABFF720;
    *(double *)(a6 + 248) = v12;
    *(_QWORD *)(a6 + 256) = 0x4038FFFFFFFBB47DLL;
    *(_WORD *)(a6 + 264) = 256;
    *(_BYTE *)(a6 + 266) = 1;
    *(_QWORD *)(a6 + 272) = a3;
    *(_QWORD *)(a6 + 280) = a4;
    *(_QWORD *)(a6 + 288) = 0;
    *(_QWORD *)(a6 + 296) = 0;
    *(_BYTE *)(a6 + 304) = 0;
    *(_QWORD *)(a6 + 312) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(a6 + 320) = 0x7FF8000000000000;
    *(_QWORD *)(a6 + 328) = 0;
    *(_QWORD *)(a6 + 336) = 0;
    *(_BYTE *)(a6 + 344) = 0;
    *(double *)(a6 + 352) = a7;
    *(_BYTE *)(a6 + 360) = 0;
    *(_QWORD *)(a6 + 368) = 0;
    *(_QWORD *)(a6 + 376) = 0;
    return result;
  }
LABEL_10:
  __break(1u);
  return result;
}

double sub_22AB94208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  unsigned __int8 *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  char v32;
  double v33;
  uint64_t v34;
  char v35;
  double v36;
  double v37;
  double v38;
  double v39;
  int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  _QWORD v54[6];
  _BYTE v55[16];
  double *v56;
  uint64_t v57;
  unsigned __int8 *v58;
  uint64_t v59;
  const void *v60;
  double v61;
  double v62;
  _BYTE __dst[80];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 368);
  if (v2 >= *(_QWORD *)(v0 + 40))
  {
LABEL_42:
    if (qword_255B0D880 != -1)
      goto LABEL_51;
    goto LABEL_43;
  }
  v60 = (const void *)(v0 + 48);
  v57 = v0 + 280;
  v3 = *(double *)(v0 + 216);
  v59 = MEMORY[0x24BEE4AE0] + 8;
  v58 = (unsigned __int8 *)(v0 + 264);
  while (1)
  {
    v4 = *(double *)(v1 + 128);
    v62 = *(double *)(v1 + 144);
    v61 = v3;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v62);
    v56 = &v61;
    swift_retain();
    v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
    DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB9BC68, (uint64_t)v55, v5);
    v6 = *(_QWORD *)&v62;
    v62 = v4;
    swift_retain();
    DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB9B4D8, v6, v5);
    swift_release();
    v7 = v62;
    swift_release();
    *(double *)(v1 + 272) = v7;
    v8 = memcpy(__dst, v60, 0x48uLL);
    MEMORY[0x24BDAC7A8](v8);
    v56 = (double *)__dst;
    MEMORY[0x24BDAC7A8](v9);
    v54[2] = v1 + 272;
    v54[3] = sub_22AB9BC54;
    v54[4] = v10;
    DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB9BC7C, (uint64_t)v54, v5);
    *(_QWORD *)(v1 + 368) = v2 + 1;
    v11 = *(_QWORD *)(v1 + 376);
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    *(_QWORD *)(v1 + 376) = v13;
    v14 = *(_QWORD *)(v1 + 120);
    swift_retain();
    sub_22AB926A4((uint64_t *)(v1 + 272), v14);
    swift_release();
    v15 = sub_22AB92640(*(_QWORD *)(v1 + 272), v14);
    v17 = v16 + *(double *)(v1 + 328);
    *(double *)(v1 + 224) = v17;
    v18 = *(double *)(v1 + 32);
    if (v18 != 1.0)
    {
      *(double *)(v1 + 224) = v17 * v18;
      v62 = v18;
      MEMORY[0x24BDAC7A8](v15);
      v56 = &v62;
      DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB9BC68, (uint64_t)v55, v5);
    }
    v19 = v58;
    sub_22A99CE8C();
    DenseVector.withUnsafeVectorPointer<A>(_:)();
    v20 = v62;
    *(double *)(v1 + 232) = v62;
    v21 = *(double *)(v1 + 216);
    v22 = *(double *)(v1 + 152);
    v23 = *(double *)(v1 + 136) + v21 * v22;
    if ((sub_22AB9480C(v23) & 1) != 0)
    {
      *(double *)(v1 + 352) = v21;
      return v21;
    }
    if ((v19[1] & 1) == 0)
      goto LABEL_18;
    v24 = *(double *)(v1 + 224);
    if (v24 <= v23 && *(double *)(v1 + 160) <= v20)
    {
      v19[1] = 0;
LABEL_18:
      *(double *)&v34 = COERCE_DOUBLE(sub_22AB94A44());
      if ((v35 & 1) != 0)
      {
        v3 = *(double *)(v1 + 168);
        *(_BYTE *)(v1 + 266) = 0;
      }
      else
      {
        v3 = *(double *)&v34;
      }
      goto LABEL_23;
    }
    v25 = *(double *)(v1 + 176);
    if (v24 > v25 || v23 >= v24)
      goto LABEL_18;
    v27 = *(double *)(v1 + 192);
    v28 = *(double *)(v1 + 184) - v22;
    *(double *)(v1 + 176) = v25 - v22 * *(double *)(v1 + 168);
    *(double *)(v1 + 184) = v28;
    v29 = v22 * v27;
    v30 = *(double *)(v1 + 208);
    *(double *)(v1 + 200) = *(double *)(v1 + 200) - v29;
    *(double *)(v1 + 208) = v30 - v22;
    *(double *)(v1 + 224) = v24 - v21 * v22;
    *(double *)(v1 + 232) = v20 - v22;
    *(double *)&v31 = COERCE_DOUBLE(sub_22AB94A44());
    if ((v32 & 1) != 0)
    {
      v33 = *(double *)(v1 + 168);
      *(_BYTE *)(v1 + 266) = 0;
      v3 = v33;
    }
    else
    {
      v3 = *(double *)&v31;
      v33 = *(double *)(v1 + 168);
    }
    v36 = *(double *)(v1 + 152);
    v37 = *(double *)(v1 + 184);
    *(double *)(v1 + 176) = *(double *)(v1 + 176) + v33 * v36;
    *(double *)(v1 + 184) = v36 + v37;
    v38 = *(double *)(v1 + 200) + v36 * *(double *)(v1 + 192);
    v39 = v36 + *(double *)(v1 + 208);
    *(double *)(v1 + 200) = v38;
    *(double *)(v1 + 208) = v39;
LABEL_23:
    v40 = *v19;
    if (v40 == 1)
    {
      v41 = *(double *)(v1 + 192);
      v42 = *(double *)(v1 + 168);
      v43 = vabdd_f64(v41, v42);
      v44 = *(double *)(v1 + 256);
      *(double *)(v1 + 256) = v43;
      if (v41 >= v42)
        v45 = v42;
      else
        v45 = v41;
      if (v42 > v41)
        v46 = v42;
      else
        v46 = v41;
      if (v45 > v46)
        goto LABEL_49;
      v47 = v42 + (v41 - v42) * 0.5;
      if (v44 * 1.33333333 <= v43)
        v3 = v47;
    }
    else
    {
      v42 = *(double *)(v1 + 168);
      v46 = v3 + (v3 - v42) * 4.0;
      v45 = v42;
      if (v42 > v46)
        goto LABEL_50;
    }
    *(double *)(v1 + 240) = v45;
    *(double *)(v1 + 248) = v46;
    v48 = *(double *)(v1 + 24);
    if (v3 <= v48)
      v3 = *(double *)(v1 + 24);
    if (*(double *)(v1 + 16) < v3)
      v3 = *(double *)(v1 + 16);
    if ((v40 & (v46 - v45 <= v48)) != 0)
      v3 = v42;
    *(double *)(v1 + 216) = v3;
    v2 = *(_QWORD *)(v1 + 368);
    if (v2 >= *(_QWORD *)(v1 + 40))
      goto LABEL_42;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  swift_once();
LABEL_43:
  v49 = sub_22ABDE804();
  __swift_project_value_buffer(v49, (uint64_t)qword_255B47DC8);
  v50 = sub_22ABDE7EC();
  v51 = sub_22ABDF4C4();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v52 = 0;
    _os_log_impl(&dword_22A999000, v50, v51, "The optimizer reached the function evaluation limit when adjusting the step size.", v52, 2u);
    MEMORY[0x22E2E4E64](v52, -1, -1);
  }

  v21 = *(double *)(v1 + 168);
  *(double *)(v1 + 352) = v21;
  *(_BYTE *)(v1 + 360) = 1;
  return v21;
}

uint64_t sub_22AB94790(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  v3 = a2 * a3;
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 == (a2 * a3) >> 63)
  {
    if (!v3)
      return 1;
    if ((~*(_QWORD *)result & 0x7FF0000000000000) == 0)
      return 0;
    if (v3 != a3)
    {
      v4 = 0;
      v5 = result + 8 * a3;
      do
      {
        v6 = *(_QWORD *)(v5 + v4) & 0x7FF0000000000000;
        result = v6 != 0x7FF0000000000000;
        v7 = v6 == 0x7FF0000000000000 || a3 * (8 * a2 - 16) == v4;
        v4 += 8 * a3;
      }
      while (!v7);
    }
    else
    {
      return 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22AB9480C(double a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  const char *v11;
  char v12;
  uint64_t v13;

  v2 = v1;
  if (*(_BYTE *)(v1 + 264) == 1
    && ((v3 = *(double *)(v1 + 216), v3 <= *(double *)(v1 + 240)) || *(double *)(v1 + 248) <= v3)
    || *(_BYTE *)(v1 + 266) != 1)
  {
    if (qword_255B0D880 != -1)
      swift_once();
    v7 = sub_22ABDE804();
    __swift_project_value_buffer(v7, (uint64_t)qword_255B47DC8);
    v8 = sub_22ABDE7EC();
    v9 = sub_22ABDF4C4();
    if (!os_log_type_enabled(v8, v9))
      goto LABEL_19;
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = "Failed to find a suitable step size. Tolerances may be too small or dataset may be poorly scaled. This typical"
          "ly happens when the number of features is much larger than the number of training examples. Consider pruning f"
          "eatures manually or increasing the regularization value.";
    goto LABEL_18;
  }
  v4 = *(double *)(v1 + 216);
  if (*(double *)(v1 + 16) <= v4 && *(double *)(v1 + 224) <= a1 && *(double *)(v1 + 232) <= *(double *)(v1 + 152))
  {
LABEL_27:
    v12 = 1;
    goto LABEL_20;
  }
  v5 = *(double *)(v1 + 24);
  if ((v4 > v5 || *(double *)(v1 + 224) <= a1 && *(double *)(v1 + 152) > *(double *)(v1 + 232))
    && (!*(_BYTE *)(v1 + 264) || *(double *)(v1 + 248) - *(double *)(v1 + 240) > v5))
  {
    if (*(double *)(v1 + 224) > a1 || fabs(*(double *)(v1 + 232)) > -*(double *)(v1 + 160))
      return 0;
    goto LABEL_27;
  }
  if (qword_255B0D880 != -1)
    swift_once();
  v13 = sub_22ABDE804();
  __swift_project_value_buffer(v13, (uint64_t)qword_255B47DC8);
  v8 = sub_22ABDE7EC();
  v9 = sub_22ABDF4C4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = "Reached the minimum allowed step size.";
LABEL_18:
    _os_log_impl(&dword_22A999000, v8, v9, v11, v10, 2u);
    MEMORY[0x22E2E4E64](v10, -1, -1);
  }
LABEL_19:

  v12 = 0;
LABEL_20:
  *(_BYTE *)(v2 + 360) = v12;
  return 1;
}

uint64_t sub_22AB94A44()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  uint64_t v5;
  _BYTE *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  int v16;
  double v17;
  char v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;

  v1 = *(double *)(v0 + 216);
  v2 = *(double *)(v0 + 168);
  v3 = *(double *)(v0 + 184);
  if (v3 * (v1 - v2) >= 1.0e-10)
    return 0;
  v5 = v0;
  v6 = (_BYTE *)(v0 + 264);
  v7 = *(double *)(v0 + 176);
  v9 = *(double *)(v0 + 224);
  v8 = *(double *)(v0 + 232);
  v10 = (v7 - v9) / (v1 - v2);
  v11 = fabs(v8 + v3 + v10 * 3.0);
  v12 = fabs(v3);
  v13 = fabs(v8);
  if (v12 > v13)
    v14 = v12;
  else
    v14 = v13;
  if (v11 > v14)
    v14 = v11;
  if (v7 >= v9)
  {
    v24 = v14;
    v25 = v8 + v3 + v10 * 3.0;
    v16 = sub_22ABDF224();
    if (((sub_22ABDF224() ^ v16) & 1) != 0)
    {
      v18 = 1;
      *(_BYTE *)(v5 + 264) = 1;
      v17 = sub_22AB95008(v25, v24);
      goto LABEL_16;
    }
    if (v13 >= v12)
    {
      v17 = sub_22AB9516C();
      v18 = 1;
      goto LABEL_16;
    }
    v15 = sub_22AB95088(v25, v24);
  }
  else
  {
    *(_BYTE *)(v0 + 264) = 1;
    v15 = sub_22AB94F78(v8 + v3 + v10 * 3.0, v14, v10);
  }
  v17 = v15;
  v18 = 0;
LABEL_16:
  sub_22AB95224();
  v19 = *(double *)(v5 + 248);
  if (v17 < v19)
    v19 = v17;
  if (*(double *)(v5 + 240) > v19)
    v19 = *(double *)(v5 + 240);
  if ((v18 & 1) == 0 && *v6)
  {
    v20 = *(double *)(v5 + 192);
    v21 = *(double *)(v5 + 168);
    v22 = v21 + (v20 - v21) * 0.666666667;
    if (v22 > v19)
      v23 = v21 + (v20 - v21) * 0.666666667;
    else
      v23 = v19;
    if (v19 >= v22)
      v19 = v21 + (v20 - v21) * 0.666666667;
    if (v21 >= v20)
      v19 = v23;
  }
  return *(_QWORD *)&v19;
}

double sub_22AB94F78(double a1, double a2, double a3)
{
  double *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double result;
  double v11;
  double v12;
  double v13;
  double v14;

  v4 = v3[21];
  v5 = v3[23];
  v6 = v3[27];
  v7 = v3[29];
  v8 = sqrt(a1 / a2 * (a1 / a2) - v5 / a2 * (v7 / a2)) * a2;
  v9 = -v8;
  if (v6 >= v4)
    v9 = v8;
  result = v4 + (v6 - v4) * ((v9 - v5 + a1) / (v7 + v9 + v9 - v5));
  v11 = v4 + (v6 - v4) * (v5 / (v5 + a3) * 0.5);
  v12 = vabdd_f64(result, v4);
  v13 = vabdd_f64(v11, v4);
  v14 = (v11 + result) * 0.5;
  if (v12 >= v13)
    return v14;
  return result;
}

double sub_22AB95008(double a1, double a2)
{
  double *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double result;

  v3 = v2[21];
  v4 = v2[23];
  v5 = v2[27];
  v6 = v2[29];
  v7 = sqrt(a1 / a2 * (a1 / a2) - v4 / a2 * (v6 / a2)) * a2;
  v8 = -v7;
  if (v3 >= v5)
    v8 = v7;
  result = v5 + (v3 - v5) * ((v8 - v6 + a1) / (v4 + v8 + v8 - v6));
  if (vabdd_f64(v5 + (v3 - v5) * (v6 / (v6 - v4)), v5) >= vabdd_f64(result, v5))
    return v5 + (v3 - v5) * (v6 / (v6 - v4));
  return result;
}

double sub_22AB95088(double a1, double a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double result;
  double v12;
  double v13;
  double v14;
  _BOOL4 v15;

  v3 = *(double *)(v2 + 168);
  v4 = *(double *)(v2 + 184);
  v5 = *(double *)(v2 + 216);
  v6 = *(double *)(v2 + 232);
  v7 = a1 / a2 * (a1 / a2) - v4 / a2 * (v6 / a2);
  if (v7 < 0.0)
    v7 = 0.0;
  v8 = sqrt(v7) * a2;
  v9 = -v8;
  if (v3 >= v5)
    v9 = v8;
  if (fabs(v8) > 1.0e-10 || (v10 = (v9 - v6 + a1) / (v9 + v4 - v6 + v9), v10 >= 0.0))
  {
    if (v3 >= v5)
      result = *(double *)(v2 + 240);
    else
      result = *(double *)(v2 + 248);
  }
  else
  {
    result = v5 + (v3 - v5) * v10;
  }
  v12 = v5 + (v3 - v5) * (v6 / (v6 - v4));
  v13 = vabdd_f64(v5, result);
  v14 = vabdd_f64(v5, v12);
  if ((*(_BYTE *)(v2 + 264) & 1) != 0)
    v15 = v13 < v14;
  else
    v15 = v14 < v13;
  if (!v15)
    return v12;
  return result;
}

double sub_22AB9516C()
{
  uint64_t v0;
  double v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  v1 = *(double *)(v0 + 216);
  if ((*(_BYTE *)(v0 + 264) & 1) != 0)
  {
    v3 = *(double *)(v0 + 232);
    v4 = *(double *)(v0 + 192);
    v5 = *(double *)(v0 + 208);
    v6 = v4 - v1;
    v7 = v3 + v5 + (*(double *)(v0 + 224) - *(double *)(v0 + 200)) * 3.0 / (v4 - v1);
    v8 = fabs(v7);
    v9 = fabs(v5);
    v10 = fabs(v3);
    if (v9 <= v10)
      v9 = v10;
    if (v8 <= v9)
      v8 = v9;
    v11 = v8 * sqrt(v7 / v8 * (v7 / v8) - v5 / v8 * (v3 / v8));
    if (v4 >= v1)
      v12 = v11;
    else
      v12 = -v11;
    return v1 + v6 * ((v7 + v12 - v3) / (v5 + v12 + v12 - v3));
  }
  else if (*(double *)(v0 + 168) >= v1)
  {
    return *(double *)(v0 + 240);
  }
  else
  {
    return *(double *)(v0 + 248);
  }
}

void sub_22AB95224()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v1 = *(double *)(v0 + 224);
  v2 = *(double *)(v0 + 176);
  if (v2 >= v1)
  {
    v3 = *(_QWORD *)(v0 + 232);
    v4 = sub_22ABDF224();
    v5 = *(_QWORD *)(v0 + 184);
    if (((sub_22ABDF224() ^ v4) & 1) != 0)
    {
      *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 168);
      *(double *)(v0 + 200) = v2;
      *(_QWORD *)(v0 + 208) = v5;
    }
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 216);
    *(double *)(v0 + 176) = v1;
    *(_QWORD *)(v0 + 184) = v3;
  }
  else
  {
    *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 216);
    *(double *)(v0 + 200) = v1;
    *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 232);
  }
}

_QWORD *sub_22AB952AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD v8[8];

  v8[7] = a3;
  v8[2] = a4;
  v8[3] = a5;
  v8[4] = a6;
  v8[5] = a1;
  v8[6] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
  return DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AB9BB74, (uint64_t)v8, v6);
}

_QWORD *sub_22AB95320()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_2540E77F8);
  return DenseMatrix.withUnsafeMutableMatrixPointer<A>(_:)((uint64_t (*)(_BYTE *))sub_22AB9BB9C);
}

void sub_22AB953A0(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  const char *v6;
  uint64_t v7;
  NSObject *oslog;

  v2 = v1;
  if (*(double *)(v1 + 136) >= a1)
  {
    if (qword_255B0D880 != -1)
      swift_once();
    v7 = sub_22ABDE804();
    __swift_project_value_buffer(v7, (uint64_t)qword_255B47DC8);
    sub_22AB9AF64(v1);
    oslog = sub_22ABDE7EC();
    v4 = sub_22ABDF4C4();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 134217984;
      sub_22ABDF65C();
      sub_22AB9AE70(v2);
      v6 = "The optimizer failed to converge after %ld iterations.";
      goto LABEL_10;
    }
  }
  else
  {
    if (qword_255B0D880 != -1)
      swift_once();
    v3 = sub_22ABDE804();
    __swift_project_value_buffer(v3, (uint64_t)qword_255B47DC8);
    sub_22AB9AF64(v1);
    oslog = sub_22ABDE7EC();
    v4 = sub_22ABDF4B8();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 134217984;
      sub_22ABDF65C();
      sub_22AB9AE70(v2);
      v6 = "The optimizer converged after %ld iterations.";
LABEL_10:
      _os_log_impl(&dword_22A999000, oslog, v4, v6, v5, 0xCu);
      MEMORY[0x22E2E4E64](v5, -1, -1);

      return;
    }
  }
  sub_22AB9AE70(v2);

}

void LinearSupportVectorClassifier.Configuration.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 8) = 10;
  *(_QWORD *)(a1 + 16) = 0x3F847AE147AE147BLL;
  *(_BYTE *)(a1 + 24) = 1;
}

double LinearSupportVectorClassifier.configuration.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v3;
  uint64_t v4;
  char v5;

  result = *(double *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return result;
}

double LinearSupportVectorClassifier.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v3;
  uint64_t v4;
  char v5;

  result = *(double *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)v1 = *(_QWORD *)a1;
  *(_QWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  *(_BYTE *)(v1 + 24) = v5;
  return result;
}

uint64_t (*LinearSupportVectorClassifier.configuration.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LinearSupportVectorClassifier.labels.getter()
{
  return sub_22ABDEAEC();
}

uint64_t LinearSupportVectorClassifier.labels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*LinearSupportVectorClassifier.labels.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LinearSupportVectorClassifier.init(labels:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = *((_BYTE *)a2 + 24);
  sub_22ABDEAEC();
  v9 = OUTLINED_FUNCTION_99_8();
  result = OUTLINED_FUNCTION_23();
  if (v9 == 2)
  {
    *(_QWORD *)a3 = v5;
    *(_QWORD *)(a3 + 8) = v6;
    *(_QWORD *)(a3 + 16) = v7;
    *(_BYTE *)(a3 + 24) = v8;
    *(_QWORD *)(a3 + 32) = a1;
  }
  else
  {
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_99_8();
    OUTLINED_FUNCTION_23();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_23();
    sub_22ABDEDC8();
    sub_22A9B7B50();
    v11 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v12 = 0xD00000000000001DLL;
    *(_QWORD *)(v12 + 8) = 0x800000022ABFF720;
    *(_QWORD *)(v12 + 16) = 0;
    *(_QWORD *)(v12 + 24) = 0xE000000000000000;
    *(_BYTE *)(v12 + 32) = 5;
    return OUTLINED_FUNCTION_6_34(v11);
  }
  return result;
}

void LinearSupportVectorClassifier.fitted<A>(to:eventHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[9];
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[10];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86[48];
  _QWORD v87[2];
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;

  OUTLINED_FUNCTION_8_98();
  v71 = v2;
  v4 = v3;
  v6 = v5;
  v8 = (uint64_t)v7;
  v57 = v9;
  v58 = v10;
  v59 = v11;
  v90 = *MEMORY[0x24BDAC8D0];
  v12 = *(_QWORD *)(v0 + 8);
  v61 = *(unsigned __int8 *)(v0 + 24);
  v60 = *(_QWORD *)(v0 + 32);
  v13 = v7[3];
  v76 = v7[2];
  v77 = v13;
  v63 = v12;
  v64 = v13;
  v14 = v7[5];
  v73 = v7[4];
  v74 = v76;
  v78 = v5;
  v79 = v73;
  v16 = v7[6];
  v15 = v7[7];
  v80 = v14;
  v81 = v16;
  v72 = v14;
  v17 = v7[8];
  v18 = v7[9];
  v82 = v15;
  v83 = v17;
  v84 = v18;
  v85 = v3;
  KeyPath = swift_getKeyPath();
  v75[2] = v6;
  v75[3] = v14;
  v62 = v16;
  v75[4] = v16;
  v75[5] = v15;
  v68 = v17;
  v69 = v15;
  v75[6] = v17;
  v75[7] = v18;
  v67 = v18;
  v75[8] = v4;
  v75[9] = KeyPath;
  v20 = v73;
  v21 = sub_22ABDE8A0();
  v65 = v6;
  v66 = v4;
  v23 = sub_22A9C2540((uint64_t)sub_22AB9AE4C, (uint64_t)v75, v6, v21, MEMORY[0x24BEE4078], v4, MEMORY[0x24BEE40A8], v22);
  OUTLINED_FUNCTION_35_2();
  v86[0] = v23;
  v24 = v14;
  v25 = sub_22ABDF0F8();
  v26 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v25);
  sub_22ABC377C((uint64_t)v86, v25, v74, v26, v73, v24, (uint64_t)v87);
  if (!v1)
  {
    v52[8] = v8;
    v27 = OUTLINED_FUNCTION_27_7();
    v28 = v24;
    v56 = v52;
    v54 = v87[1];
    v55 = v87[0];
    v53 = v88;
    v70 = v89;
    MEMORY[0x24BDAC7A8](v27);
    OUTLINED_FUNCTION_11_68();
    v29 = v64;
    *(_QWORD *)(v30 - 80) = v74;
    *(_QWORD *)(v30 - 72) = v29;
    v31 = v66;
    *(_QWORD *)(v30 - 64) = v65;
    *(_QWORD *)(v30 - 56) = v20;
    v32 = v62;
    *(_QWORD *)(v30 - 48) = v24;
    *(_QWORD *)(v30 - 40) = v32;
    v34 = v68;
    v33 = v69;
    *(_QWORD *)(v30 - 32) = v69;
    *(_QWORD *)(v30 - 24) = v34;
    v35 = v33;
    *(_QWORD *)(v30 - 16) = v67;
    *(_QWORD *)(v30 - 8) = v31;
    v36 = swift_getKeyPath();
    OUTLINED_FUNCTION_80_23(v36, v37, v38, v39, v40, v41, v42, v43, v52[0]);
    MEMORY[0x24BDAC7A8](v44);
    OUTLINED_FUNCTION_11_68();
    v45 = v65;
    *(_QWORD *)(v46 - 64) = v65;
    *(_QWORD *)(v46 - 56) = v28;
    *(_QWORD *)(v46 - 48) = v32;
    *(_QWORD *)(v46 - 40) = v35;
    v47 = v67;
    *(_QWORD *)(v46 - 32) = v34;
    *(_QWORD *)(v46 - 24) = v47;
    *(_QWORD *)(v46 - 16) = v31;
    *(_QWORD *)(v46 - 8) = v48;
    v51 = sub_22A9C2540((uint64_t)sub_22AB9BC2C, v49, v45, v29, MEMORY[0x24BEE4078], v31, MEMORY[0x24BEE40A8], v50);
    v71 = 0;
    OUTLINED_FUNCTION_13_2();
    v87[0] = v51;
    OUTLINED_FUNCTION_84_18();
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_106();
  }
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_1_96();
}

void sub_22AB96A0C(void *__src@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t __dst[9];

  memcpy(__dst, __src, sizeof(__dst));
  v4 = __dst[1];
  v5 = sub_22AB5B76C(__dst[1], 0.5 / *v2);
  v6 = __OFSUB__(v4, 1);
  v7 = v4 - 1;
  if (v6)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_22AB88498();
    v8 = v9;
  }
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_8;
  if (v7 < *(_QWORD *)(v8 + 16))
  {
    *(_QWORD *)(v8 + 8 * v7 + 32) = 0;
    sub_22AB9B3E8((uint64_t)__dst);
    sub_22AB925AC(__dst, v8, a2);
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_22AB96ABC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const void *v28;
  uint64_t v29;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[11];
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];
  _BYTE v42[104];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  if (a7)
  {
    v35 = *a4;
    v34 = a4[1];
    v33 = *((unsigned __int8 *)a4 + 16);
    v32 = a4[3];
    v10 = *(_QWORD *)(v7 + 16);
    v12 = a1[3];
    v11 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v12);
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 32);
    OUTLINED_FUNCTION_50();
    v14 = v13(v12, v11);
    OUTLINED_FUNCTION_82_15(v14, (uint64_t)v41);
    if (v14 < 5)
    {
      v15 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      OUTLINED_FUNCTION_82_15(v15, (uint64_t)v38);
LABEL_7:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
LABEL_8:
      v37[10] = MEMORY[0x24BEE4B00];
      v23 = a1[3];
      v24 = a1[4];
      OUTLINED_FUNCTION_98_12(a1);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v24 + 24))(v37, v23, v24);
      v25 = v37[0];
      swift_release();
      OUTLINED_FUNCTION_13_4();
      v36 = v25;
      sub_22ABDEAEC();
      sub_22ABDEAEC();
      v29 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
      sub_22A99CE8C();
      sub_22A9C8D60(&qword_255B1AF30, qword_2540E7880, (uint64_t)&protocol conformance descriptor for DenseVector<A>);
      sub_22AA31548((uint64_t)&v36, a2, a3, v29, (uint64_t)v42);
      if (v33)
        v26 = v35;
      else
        v26 = v34;
      v43 = v32 + 32;
      v44 = v35;
      v45 = v34;
      v46 = v26;
      v47 = v33;
      OUTLINED_FUNCTION_64_21();
      sub_22AB9887C(v27, v28);
    }
    v16 = v41[3];
    v17 = v41[4];
    OUTLINED_FUNCTION_98_12(v41);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 32))(v16, v17) % 10;
    v19 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    OUTLINED_FUNCTION_82_15(v19, (uint64_t)v38);
    if (!v18)
      goto LABEL_7;
    v20 = v39;
    v21 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    v37[0] = v10;
    sub_22AB63B58((uint64_t)v37, v20, v21);
    LOBYTE(v20) = v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    if ((v20 & 1) != 0)
      goto LABEL_8;
    sub_22A9ADA48(a7);
  }
  OUTLINED_FUNCTION_12_4();
}

void LinearSupportVectorClassifier.fitted<A, B>(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104[9];
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[12];
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD v146[48];
  uint64_t v147;
  uint64_t v148;
  unsigned __int8 v149;
  uint64_t v150;
  uint64_t v151;

  OUTLINED_FUNCTION_8_98();
  v125 = v30;
  v130 = v31;
  v131 = v32;
  v34 = (uint64_t)v33;
  v111 = v35;
  v112 = v36;
  v118 = v37;
  v127 = v38;
  v113 = v39;
  v151 = *MEMORY[0x24BDAC8D0];
  v116 = *(_QWORD *)(v29 + 8);
  v115 = *(unsigned __int8 *)(v29 + 24);
  v114 = *(_QWORD *)(v29 + 32);
  v40 = v33[3];
  v134 = v33[2];
  v124 = v40;
  v135 = v40;
  v136 = v31;
  v137 = v41;
  v42 = v41;
  v43 = v33[5];
  v128 = v33[4];
  v129 = v134;
  v138 = v128;
  v139 = v43;
  v132 = v43;
  v44 = v33[7];
  v140 = v33[6];
  v45 = v140;
  v141 = v44;
  v46 = v33[9];
  v142 = v33[8];
  v47 = v142;
  v143 = v46;
  v144 = v32;
  v145 = a29;
  KeyPath = swift_getKeyPath();
  v133[2] = v130;
  v133[3] = v42;
  v119 = v42;
  v120 = v45;
  v133[4] = v43;
  v133[5] = v45;
  v122 = v44;
  v123 = v46;
  v133[6] = v44;
  v133[7] = v47;
  v126 = v47;
  v133[8] = v46;
  v133[9] = v131;
  v121 = a29;
  v133[10] = a29;
  v133[11] = KeyPath;
  v50 = v128;
  v49 = v129;
  v51 = sub_22ABDE8A0();
  v53 = sub_22A9C2540((uint64_t)sub_22AB9BC40, (uint64_t)v133, v130, v51, MEMORY[0x24BEE4078], v131, MEMORY[0x24BEE40A8], v52);
  OUTLINED_FUNCTION_72_1();
  v146[0] = v53;
  v125 = v51;
  v54 = sub_22ABDF0F8();
  v117 = (uint64_t *)MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v54);
  sub_22ABC377C((uint64_t)v146, v54, v129, (uint64_t)v117, v128, v132, (uint64_t)&v147);
  if (!v30)
  {
    v104[8] = v34;
    v55 = OUTLINED_FUNCTION_51_1();
    v108 = v104;
    v106 = v148;
    v107 = v147;
    v105 = v149;
    v109 = v150;
    MEMORY[0x24BDAC7A8](v55);
    OUTLINED_FUNCTION_6_116();
    v56 = v124;
    *(_QWORD *)(v57 - 96) = v49;
    *(_QWORD *)(v57 - 88) = v56;
    v59 = v130;
    v58 = v131;
    v60 = v119;
    v61 = v120;
    *(_QWORD *)(v57 - 80) = v130;
    *(_QWORD *)(v57 - 72) = v60;
    v62 = v132;
    *(_QWORD *)(v57 - 64) = v50;
    *(_QWORD *)(v57 - 56) = v62;
    v63 = v122;
    v64 = v123;
    *(_QWORD *)(v57 - 48) = v61;
    *(_QWORD *)(v57 - 40) = v63;
    *(_QWORD *)(v57 - 32) = v126;
    *(_QWORD *)(v57 - 24) = v64;
    v110 = 0;
    v65 = v121;
    *(_QWORD *)(v57 - 16) = v58;
    *(_QWORD *)(v57 - 8) = v65;
    v66 = swift_getKeyPath();
    OUTLINED_FUNCTION_80_23(v66, v67, v68, v69, v70, v71, v72, v73, v104[0]);
    MEMORY[0x24BDAC7A8](v74);
    OUTLINED_FUNCTION_6_116();
    *(_QWORD *)(v75 - 80) = v59;
    *(_QWORD *)(v75 - 72) = v60;
    v76 = v132;
    *(_QWORD *)(v75 - 64) = v132;
    *(_QWORD *)(v75 - 56) = v61;
    v77 = v125;
    v78 = v126;
    *(_QWORD *)(v75 - 48) = v63;
    *(_QWORD *)(v75 - 40) = v78;
    *(_QWORD *)(v75 - 32) = v64;
    *(_QWORD *)(v75 - 24) = v58;
    *(_QWORD *)(v75 - 16) = v65;
    *(_QWORD *)(v75 - 8) = v79;
    v80 = v110;
    v83 = sub_22A9C2540((uint64_t)sub_22AB9B4F8, v81, v60, v77, MEMORY[0x24BEE4078], v65, MEMORY[0x24BEE40A8], v82);
    OUTLINED_FUNCTION_3_26();
    v146[0] = v83;
    v84 = v54;
    v86 = v128;
    v85 = v129;
    sub_22ABC377C((uint64_t)v146, v84, v129, (uint64_t)v117, v128, v76, (uint64_t)&v147);
    if (!v80)
    {
      v87 = OUTLINED_FUNCTION_3_8();
      v117 = v104;
      v104[6] = v148;
      v104[7] = v147;
      v104[5] = v149;
      v125 = v150;
      MEMORY[0x24BDAC7A8](v87);
      OUTLINED_FUNCTION_6_116();
      v89 = v123;
      v88 = v124;
      *(_QWORD *)(v90 - 96) = v85;
      *(_QWORD *)(v90 - 88) = v88;
      v92 = v130;
      v91 = v131;
      v93 = v119;
      v94 = v120;
      *(_QWORD *)(v90 - 80) = v130;
      *(_QWORD *)(v90 - 72) = v93;
      *(_QWORD *)(v90 - 64) = v86;
      *(_QWORD *)(v90 - 56) = v76;
      v95 = v122;
      *(_QWORD *)(v90 - 48) = v94;
      *(_QWORD *)(v90 - 40) = v95;
      v96 = v126;
      *(_QWORD *)(v90 - 32) = v126;
      *(_QWORD *)(v90 - 24) = v89;
      v97 = v121;
      *(_QWORD *)(v90 - 16) = v91;
      *(_QWORD *)(v90 - 8) = v97;
      v98 = swift_getKeyPath();
      v117 = v104;
      MEMORY[0x24BDAC7A8](v98);
      OUTLINED_FUNCTION_6_116();
      *(_QWORD *)(v99 - 80) = v92;
      *(_QWORD *)(v99 - 72) = v93;
      *(_QWORD *)(v99 - 64) = v132;
      *(_QWORD *)(v99 - 56) = v94;
      *(_QWORD *)(v99 - 48) = v95;
      *(_QWORD *)(v99 - 40) = v96;
      *(_QWORD *)(v99 - 32) = v123;
      *(_QWORD *)(v99 - 24) = v91;
      *(_QWORD *)(v99 - 16) = v97;
      *(_QWORD *)(v99 - 8) = v100;
      v103 = sub_22A9C2540((uint64_t)sub_22AB9BC40, v101, v92, v124, MEMORY[0x24BEE4078], v91, MEMORY[0x24BEE40A8], v102);
      v127 = 0;
      OUTLINED_FUNCTION_3_26();
      v147 = v103;
      sub_22ABDF0F8();
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_106();
    }
    OUTLINED_FUNCTION_74_18();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_96();
}

uint64_t sub_22AB986A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v14 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_22AB5954C(v17, v18, v19, a2, v20, v21);
  if ((v23 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a2);
    v24 = sub_22ABDED80();
    v26 = v25;
    sub_22A9B7B50();
    v27 = swift_allocError();
    *(_QWORD *)v28 = 0xD00000000000001DLL;
    *(_QWORD *)(v28 + 8) = 0x800000022ABFF720;
    *(_QWORD *)(v28 + 16) = v24;
    *(_QWORD *)(v28 + 24) = v26;
    *(_BYTE *)(v28 + 32) = 3;
    result = swift_willThrow(v27);
    *a11 = v27;
  }
  else
  {
    *a3 = result;
  }
  return result;
}

void LinearSupportVectorClassifier.encode(_:to:)()
{
  OUTLINED_FUNCTION_85_18();
}

void sub_22AB98824()
{
  sub_22AA329FC();
}

void LinearSupportVectorClassifier.decode(from:)()
{
  sub_22AA32D44();
}

void sub_22AB98874()
{
  OUTLINED_FUNCTION_19_6();
}

void sub_22AB9887C(uint64_t a1, const void *a2)
{
  _BYTE __dst[97];

  memcpy(__dst, a2, sizeof(__dst));
  sub_22A99CE8C();
  OUTLINED_FUNCTION_85_18();
}

void sub_22AB98928(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  _QWORD *(*v11)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *(*v20)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *__return_ptr, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = sub_22AA325AC(v2, a1);
  if (!v1)
  {
    *(_QWORD *)(v4 - 352) = *(_QWORD *)(v4 + 56);
    *(_QWORD *)(v4 - 360) = *(_QWORD *)(v4 + 48);
    MEMORY[0x24BDAC7A8](v5);
    *(_QWORD *)(v4 - 368) = v3;
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8668);
    v7 = MEMORY[0x24BEE1778];
    v31 = sub_22A9C8D60(&qword_2540E8660, &qword_2540E8668, MEMORY[0x24BEE2B40]);
    KeyPath = swift_getKeyPath();
    swift_bridgeObjectRetain_n();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_50_9();
    OUTLINED_FUNCTION_72_21();
    sub_22AB922B8(v9, v10, v11, v12, KeyPath);
    v14 = v13;
    OUTLINED_FUNCTION_13_2();
    sub_22A9DC670(v14);
    MEMORY[0x24BDAC7A8](v15);
    OUTLINED_FUNCTION_4_81();
    *(_QWORD *)(v16 - 32) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v16 - 24) = v6;
    *(_QWORD *)(v16 - 16) = v7;
    *(_QWORD *)(v16 - 8) = v31;
    v17 = swift_getKeyPath();
    swift_retain();
    OUTLINED_FUNCTION_72_21();
    sub_22AB922B8(v18, v19, v20, v21, v17);
    OUTLINED_FUNCTION_15_10();
    sub_22A9DC9BC();
    OUTLINED_FUNCTION_72_21();
    sub_22A9DF098(v22, v23, v24, v25, v26);
    OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_2_1();
    v27 = *(_OWORD *)(v4 - 232);
    v28 = (_OWORD *)(v4 - 144);
    *v28 = *(_OWORD *)(v4 - 248);
    v28[1] = v27;
    v28[2] = *(_OWORD *)(v4 - 216);
    sub_22A9DE59C();
    v30 = v29;
    sub_22A9E0728(v4 - 144);
    *(_QWORD *)(v4 - 224) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(v4 - 248) = v30;
    sub_22AAF46F0(v4 - 248, *(_QWORD *)(v4 - 360), *(_QWORD *)(v4 - 352));
  }
  OUTLINED_FUNCTION_12_4();
}

uint64_t sub_22AB98B2C()
{
  uint64_t v0;

  LinearSupportVectorClassifier.fitted<A>(to:eventHandler:)();
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

#error "22AB98BC8: call analysis failed (funcsize=27)"

void sub_22AB98BF8()
{
  LinearSupportVectorClassifier.encode(_:to:)();
}

void sub_22AB98C0C()
{
  LinearSupportVectorClassifier.decode(from:)();
}

double LinearSupportVectorClassifier.makeTransformer()@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v13 = MEMORY[0x24BEE4AF8];
  v2 = a1[3];
  v3 = a1[6];
  v4 = a1[9];
  v5 = sub_22ABDEAEC();
  v6 = sub_22AB593D0(v5, v2, v3, v4);
  v10 = v7;
  v11 = v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85C8);
  sub_22A9C8D60((unint64_t *)&qword_2540E85D0, &qword_2540E85C8, MEMORY[0x24BEE12C8]);
  return sub_22AA31548((uint64_t)&v13, v11, v10, v8, a2);
}

void LinearSupportVectorClassifier.update<A>(_:with:eventHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[10];
  _QWORD v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_8_98();
  v49 = v3;
  v50 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v48 = v10;
  v12 = v11;
  v52 = *MEMORY[0x24BDAC8D0];
  v13 = *(_QWORD *)(v0 + 8);
  v14 = *(unsigned __int8 *)(v0 + 24);
  v15 = *(_QWORD *)(v0 + 32);
  v16 = sub_22ABDF1DC();
  if (!v1)
  {
    v34[10] = v7;
    v34[11] = v15;
    v35 = v14;
    v36 = v13;
    v34[9] = v9;
    v38 = v12;
    v47 = 0;
    MEMORY[0x24BDAC7A8](v16);
    OUTLINED_FUNCTION_11_68();
    v18 = v5[2];
    v17 = v5[3];
    *(_QWORD *)(v19 - 80) = v18;
    *(_QWORD *)(v19 - 72) = v17;
    v41 = v17;
    v21 = v5[5];
    v45 = v5[4];
    v20 = v45;
    v46 = v18;
    v22 = v49;
    *(_QWORD *)(v19 - 64) = v50;
    *(_QWORD *)(v19 - 56) = v20;
    v23 = v5[6];
    v24 = v5[7];
    *(_QWORD *)(v19 - 48) = v21;
    *(_QWORD *)(v19 - 40) = v23;
    v44 = v21;
    v26 = v5[8];
    v25 = v5[9];
    *(_QWORD *)(v19 - 32) = v24;
    *(_QWORD *)(v19 - 24) = v26;
    *(_QWORD *)(v19 - 16) = v25;
    *(_QWORD *)(v19 - 8) = v22;
    KeyPath = swift_getKeyPath();
    v34[8] = v5;
    v43 = v34;
    MEMORY[0x24BDAC7A8](KeyPath);
    v28 = v50;
    v33[2] = v50;
    v33[3] = v21;
    v39 = v25;
    v40 = v23;
    v33[4] = v23;
    v33[5] = v24;
    v42 = v24;
    v37 = v26;
    v33[6] = v26;
    v33[7] = v25;
    v33[8] = v22;
    v33[9] = v29;
    v30 = sub_22ABDE8A0();
    v32 = sub_22A9C2540((uint64_t)sub_22AB9BC2C, (uint64_t)v33, v28, v30, MEMORY[0x24BEE4078], v22, MEMORY[0x24BEE40A8], v31);
    OUTLINED_FUNCTION_72_1();
    v51 = v32;
    sub_22ABDF0F8();
    OUTLINED_FUNCTION_106();
  }
  OUTLINED_FUNCTION_1_96();
}

uint64_t sub_22AB99F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X7>, uint64_t *a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v28 = a4;
  v12 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v15 + 8);
  v17 = *(_QWORD *)(v15 + 16);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v18 = sub_22AB5954C(a1, v16, v17, a2, a3, a7);
  v20 = v19;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, a2);
    v22 = sub_22ABDED80();
    v24 = v23;
    sub_22A9B7B50();
    v25 = swift_allocError();
    *(_QWORD *)v26 = 0xD00000000000001DLL;
    *(_QWORD *)(v26 + 8) = 0x800000022ABFF720;
    *(_QWORD *)(v26 + 16) = v22;
    *(_QWORD *)(v26 + 24) = v24;
    *(_BYTE *)(v26 + 32) = 3;
    result = swift_willThrow(v25);
    *a9 = v25;
  }
  else
  {
    *v28 = v18;
  }
  return result;
}

void LinearSupportVectorClassifier.encodeWithOptimizer(_:to:)(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    OUTLINED_FUNCTION_85_18();
  sub_22ABDFADC();
  __break(1u);
}

void LinearSupportVectorClassifier.decodeWithOptimizer(from:)()
{
  sub_22AA32D44();
}

void sub_22AB9A2A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  if (!v1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(qword_255B12178);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v0, v4);
    v6 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16);
    v7 = sub_22AAEA4E4(&qword_255B15150, MEMORY[0x24BEE1400], (uint64_t)&unk_22ABFCCF8);
    v6(&v17, v3, v3, v7, v4, v5);
    v8 = v18;
    v9 = v19;
    v10 = v20;
    v15 = v21;
    v16 = v17;
    v11 = v22;
    v12 = v23;
    v13 = v24;
    OUTLINED_FUNCTION_95_9(v27);
    v14 = v26;
    *(_OWORD *)v2 = v25;
    *(_QWORD *)(v2 + 16) = v14;
    *(_OWORD *)(v2 + 24) = v16;
    *(_QWORD *)(v2 + 40) = v8;
    *(_QWORD *)(v2 + 48) = v9;
    *(_QWORD *)(v2 + 56) = v10;
    *(_OWORD *)(v2 + 64) = v15;
    *(_QWORD *)(v2 + 80) = v11;
    *(_QWORD *)(v2 + 88) = v12;
    *(_BYTE *)(v2 + 96) = v13;
  }
}

uint64_t sub_22AB9A410()
{
  uint64_t v0;

  LinearSupportVectorClassifier.update<A>(_:with:eventHandler:)();
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AB9A46C(uint64_t a1)
{
  LinearSupportVectorClassifier.encodeWithOptimizer(_:to:)(a1);
}

void sub_22AB9A480()
{
  LinearSupportVectorClassifier.decodeWithOptimizer(from:)();
}

double LinearSupportVectorClassifier.Configuration.penalty.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void LinearSupportVectorClassifier.Configuration.penalty.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*LinearSupportVectorClassifier.Configuration.penalty.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LinearSupportVectorClassifier.Configuration.maximumIterations.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t LinearSupportVectorClassifier.Configuration.maximumIterations.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*LinearSupportVectorClassifier.Configuration.maximumIterations.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

double LinearSupportVectorClassifier.Configuration.convergenceThreshold.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void LinearSupportVectorClassifier.Configuration.convergenceThreshold.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*LinearSupportVectorClassifier.Configuration.convergenceThreshold.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LinearSupportVectorClassifier.Configuration.scaleFeatures.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t LinearSupportVectorClassifier.Configuration.scaleFeatures.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*LinearSupportVectorClassifier.Configuration.scaleFeatures.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void LinearSupportVectorClassifier.Configuration.hash(into:)()
{
  sub_22ABE0274();
  sub_22ABE0250();
  sub_22ABE0274();
  sub_22ABE025C();
  OUTLINED_FUNCTION_38();
}

uint64_t static LinearSupportVectorClassifier.Configuration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;

  if (*(double *)a1 == *(double *)a2
    && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    && *(double *)(a1 + 16) == *(double *)(a2 + 16))
  {
    v4 = *(_BYTE *)(a2 + 24) ^ *(_BYTE *)(a1 + 24) ^ 1;
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_22AB9A5B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x79746C616E6570 && a2 == 0xE700000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000022ABE4D40 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000022ABE5A10 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616546656C616373 && a2 == 0xED00007365727574)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_22AB9A780(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AB9A7B4 + 4 * byte_22ABFF730[a1]))(0x79746C616E6570, 0xE700000000000000);
}

unint64_t sub_22AB9A7B4()
{
  return 0xD000000000000011;
}

unint64_t sub_22AB9A7D0()
{
  return 0xD000000000000014;
}

uint64_t sub_22AB9A7F0()
{
  return 0x616546656C616373;
}

uint64_t sub_22AB9A814()
{
  unsigned __int8 *v0;

  return sub_22AB9A780(*v0);
}

uint64_t sub_22AB9A848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AB9A5B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AB9A88C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9BFA58();
  *a1 = result;
  return result;
}

uint64_t sub_22AB9A8D0(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABFFA60, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AB9A904(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABFFA60, a1);
  return sub_22ABE02F8();
}

void LinearSupportVectorClassifier.Configuration.encode(to:)()
{
  OUTLINED_FUNCTION_104_8();
}

void sub_22AB9A978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  MEMORY[0x22E2E4D80](&unk_22ABFFA60, a1);
  v12 = sub_22ABDFD58();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&a9 - v14;
  *(_QWORD *)(v11 - 168) = *(_QWORD *)(v9 + 8);
  *(_DWORD *)(v11 - 172) = *(unsigned __int8 *)(v9 + 24);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v11 - 160) = 0;
  v16 = *(_QWORD *)(v11 - 72);
  sub_22ABDFD1C();
  if (!v16)
  {
    *(_BYTE *)(v11 - 160) = 1;
    sub_22ABDFD34();
    *(_BYTE *)(v11 - 160) = 2;
    sub_22ABDFD1C();
    *(_BYTE *)(v11 - 160) = 3;
    sub_22ABDFD10();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  OUTLINED_FUNCTION_1_33();
}

uint64_t LinearSupportVectorClassifier.Configuration.hashValue.getter()
{
  sub_22ABE0244();
  LinearSupportVectorClassifier.Configuration.hash(into:)();
  return sub_22ABE0280();
}

void LinearSupportVectorClassifier.Configuration.init(from:)()
{
  OUTLINED_FUNCTION_104_8();
}

void sub_22AB9AB78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  MEMORY[0x22E2E4D80](&unk_22ABFFA60, a1);
  v4 = sub_22ABDFCB0();
  MEMORY[0x24BDAC7A8](v4);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_22ABE0298();
  if (!v2)
  {
    v5 = *(_QWORD *)(v3 - 72);
    *(_BYTE *)(v3 - 160) = 0;
    sub_22ABDFC5C();
    v7 = v6;
    OUTLINED_FUNCTION_25_49(1);
    v8 = sub_22ABDFC74();
    OUTLINED_FUNCTION_25_49(2);
    sub_22ABDFC5C();
    v10 = v9;
    OUTLINED_FUNCTION_25_49(3);
    v11 = sub_22ABDFC50();
    OUTLINED_FUNCTION_20_32();
    *(_QWORD *)v5 = v7;
    *(_QWORD *)(v5 + 8) = v8;
    *(_QWORD *)(v5 + 16) = v10;
    *(_BYTE *)(v5 + 24) = v11 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  OUTLINED_FUNCTION_1_33();
}

uint64_t sub_22AB9ACBC()
{
  sub_22ABE0244();
  LinearSupportVectorClassifier.Configuration.hash(into:)();
  return sub_22ABE0280();
}

void sub_22AB9ACF4()
{
  LinearSupportVectorClassifier.Configuration.init(from:)();
}

void sub_22AB9AD28()
{
  LinearSupportVectorClassifier.Configuration.encode(to:)();
}

uint64_t sub_22AB9AD3C(uint64_t a1, uint64_t a2)
{
  return static LinearSupportVectorClassifier.Configuration.== infix(_:_:)(a1, a2) & 1;
}

uint64_t sub_22AB9AD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[3];

  sub_22AA03574(a1);
  v6 = v5;
  v9[0] = v7;
  v9[1] = a1;
  v9[2] = 1;
  sub_22AB9ADE8(v9, a2);
  *(_QWORD *)(v6 + 16) = a1;
  swift_release();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t *sub_22AB9ADE8(uint64_t *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = result[1];
  if (v2 < 0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (v2)
  {
    v3 = 0;
    v4 = *result;
    v5 = result[2];
    v6 = *(_QWORD *)(a2 + 16);
    while (v6 != v3)
    {
      if ((unsigned __int128)(v3 * (__int128)v5) >> 64 != (v3 * v5) >> 63)
        goto LABEL_9;
      *(double *)(v4 + 8 * v3 * v5) = -*(double *)(a2 + 32 + 8 * v3);
      if (v2 == ++v3)
        return result;
    }
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

void sub_22AB9AE4C()
{
  swift_getAtKeyPath();
  OUTLINED_FUNCTION_8_40();
}

uint64_t sub_22AB9AE70(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_22AB9AF64(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22ABDEAEC();
  swift_retain();
  return a1;
}

uint64_t sub_22AB9B058(uint64_t a1)
{
  swift_release();
  return a1;
}

void sub_22AB9B080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double *a8)
{
  uint64_t v8;

  sub_22AA8E5C8(a1, a2, a3, a4, a5, a6, a7, a8, *(uint64_t **)(v8 + 16));
  OUTLINED_FUNCTION_19_6();
}

_QWORD *sub_22AB9B0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_89_17();
  return sub_22AB952AC(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_22AB9B0B8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB9B138(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))UnsafeVectorPointer<A>.maximumAbsoluteValue.getter);
}

uint64_t sub_22AB9B0DC()
{
  return sub_22AB9B1BC();
}

uint64_t sub_22AB9B0F8(uint64_t result, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  if (a2 < 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v4 = 0;
    while (1)
    {
      v5 = v4 * a3;
      if ((unsigned __int128)(v4 * (__int128)a3) >> 64 != (v4 * a3) >> 63)
        break;
      ++v4;
      *(double *)(result + 8 * v5) = *(double *)(result + 8 * v5) * a4;
      if (a2 == v4)
        return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_22AB9B138(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a4(*a1, a1[1], a1[2], *(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(*(_QWORD *)(a3 + a2 - 8) + 16));
}

double sub_22AB9B158()
{
  double v1;

  sub_22A99CE8C();
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  return v1;
}

uint64_t sub_22AB9B1BC()
{
  sub_22A99CE8C();
  return DenseVector.withUnsafeVectorPointer<A>(_:)();
}

uint64_t sub_22AB9B230(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  if ((unsigned __int128)(a5 * (__int128)a6) >> 64 != (a5 * a6) >> 63)
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 != (a2 * a3) >> 63)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v6 = 0.0;
  if (a5 * a6 && a2 * a3)
  {
    v7 = 0;
    v8 = 0;
    do
    {
      v6 = v6 + *(double *)(a4 + v8) * *(double *)(result + v7);
      v9 = a6 * (8 * a5 - 8) == v8;
      v8 += 8 * a6;
      v9 = v9 || a3 * (8 * a2 - 8) == v7;
      v7 += 8 * a3;
    }
    while (!v9);
  }
  return result;
}

double sub_22AB9B2B4@<D0>(double *a1@<X8>)
{
  return OUTLINED_FUNCTION_16_76(a1);
}

uint64_t sub_22AB9B2C8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AB9B35C(uint64_t a1, uint64_t a2, uint64_t a3, double *a4)
{
  return sub_22AB9B0F8(a1, a2, a3, *a4);
}

void sub_22AB9B374(double *a1@<X8>)
{
  uint64_t v1;
  double v3;

  v3 = sub_22AB9B158();
  if (!v1)
    *a1 = v3;
}

void sub_22AB9B39C(double *a1@<X8>)
{
  OUTLINED_FUNCTION_15_81(a1);
}

uint64_t sub_22AB9B3B0()
{
  return sub_22AB9B1BC();
}

uint64_t sub_22AB9B3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_22AB9B35C(a1, a2, a3, *(double **)(v3 + 16));
}

uint64_t sub_22AB9B3E8(uint64_t a1)
{
  swift_retain();
  swift_retain();
  sub_22ABDEAEC();
  swift_retain();
  return a1;
}

uint64_t sub_22AB9B434(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_22AB9B4D8()
{
  return sub_22AB9B1BC();
}

void sub_22AB9B4F8()
{
  swift_getAtKeyPath();
  OUTLINED_FUNCTION_8_40();
}

uint64_t sub_22AB9B51C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_22AB986A4(a1, v3[3], a3, v3[7], v3[8], v3[9], v3[10], v3[11], v3[12], v3[13], a2);
}

uint64_t sub_22AB9B568@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_22AB99F54(a1, v3[3], v3[7], a3, v3[8], v3[9], v3[10], v3[11], a2);
}

void type metadata accessor for LinearSupportVectorClassifier.Configuration.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AB9B5B8()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AB9B5C8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for LinearSupportVectorClassifier<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22AB9B5F4()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AB9B604()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AB9B60C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AB9B648(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AB9B6A0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AB9B6F0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AB9B730(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LinearSupportVectorClassifier()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AB9B784(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AB9B7D0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

void type metadata accessor for LinearSupportVectorClassifier.Configuration()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AB9B824(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22AB9B870 + 4 * byte_22ABFF739[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22AB9B8A4 + 4 * byte_22ABFF734[v4]))();
}

uint64_t sub_22AB9B8A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB9B8AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AB9B8B4);
  return result;
}

uint64_t sub_22AB9B8C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AB9B8C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22AB9B8CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB9B8D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AB9B8E0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB9B8F0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB9B900()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB9B910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_89_17();
  sub_22AB93C30(v0, v1, v2, v3, v4, v5, 1.0);
  OUTLINED_FUNCTION_8_40();
}

uint64_t sub_22AB9B938(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

void sub_22AB9B988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_89_17();
  sub_22AB93C30(v0, v1, v2, v3, v4, v5, -1.0);
  OUTLINED_FUNCTION_8_40();
}

uint64_t sub_22AB9B9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v10;

  result = sub_22AB9B230(a1, a2, a3, a4, a5, a6);
  if (!v7)
    *a7 = v10;
  return result;
}

uint64_t sub_22AB9B9D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_89_17();
  return sub_22AB9B9B0(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_22AB9B9F0(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_22AA6D37C(v3);
  return a1;
}

uint64_t sub_22AB9BA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_22AB94790(a1, a2, a3);
  if (!v4)
    *a4 = result & 1;
  return result;
}

double sub_22AB9BAC8@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  swift_getAtKeyPath();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_22AB9BB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v9;

  result = sub_22AB935A8(a1, a2, a3, a4, a5);
  if (!v6)
    *a6 = v9;
  return result;
}

uint64_t sub_22AB9BB3C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = sub_22A9C6AE8(&v5, *a1, a1[1]);
  v4 = v5;
  *a2 = result;
  a2[1] = v4;
  return result;
}

void sub_22AB9BB74()
{
  sub_22AB95320();
  OUTLINED_FUNCTION_19_6();
}

uint64_t sub_22AB9BB9C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 24))(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), a1, *(_QWORD *)(v1 + 16) + 56);
}

uint64_t sub_22AB9BBD8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB9B138(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))UnsafeVectorPointer<A>.squaredMagnitude.getter);
}

uint64_t sub_22AB9BBFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  return sub_22AB9BB14(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

void sub_22AB9BC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_22AB93874(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

void sub_22AB9BC2C()
{
  sub_22AB9AE4C();
}

void sub_22AB9BC40()
{
  sub_22AB9B4F8();
}

void sub_22AB9BC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double *a8)
{
  sub_22AB9B080(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_22AB9BC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB9B3D0(a1, a2, a3);
}

_QWORD *sub_22AB9BC7C()
{
  return sub_22AB9B0A0();
}

void *OUTLINED_FUNCTION_2_109(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x139uLL);
}

double OUTLINED_FUNCTION_4_101()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v3 = v2 + 8 * v0;
  result = *(double *)(v1 + 32) * *(double *)(v3 + 32);
  *(double *)(v3 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_93()
{
  return swift_release();
}

double OUTLINED_FUNCTION_12_83()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  double result;

  v3 = v1 + 8 * v0;
  result = v2 * *(double *)(v3 + 32);
  *(double *)(v3 + 32) = result;
  return result;
}

double OUTLINED_FUNCTION_13_85@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v4 = v2 + 8 * v1;
  result = *(double *)(v4 + 32)
         + (*(double *)(v3 + 8 * v1 + 32) + *(double *)(v3 + 8 * v1 + 32)) * *(double *)(a1 + 8 * v1);
  *(double *)(v4 + 32) = result;
  return result;
}

double OUTLINED_FUNCTION_14_78@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  result = *(double *)(v2 + 32)
         + (*(double *)(v3 + 8 * v1 + 32) + *(double *)(v3 + 8 * v1 + 32)) * *(double *)(a1 + 8 * v1);
  *(double *)(v2 + 32) = result;
  return result;
}

void OUTLINED_FUNCTION_15_81(double *a1@<X8>)
{
  sub_22AB9B374(a1);
}

double OUTLINED_FUNCTION_16_76@<D0>(double *a1@<X8>)
{
  return sub_22AB9BAC8(a1);
}

uint64_t OUTLINED_FUNCTION_25_49@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 160) = a1;
  return v1 - 160;
}

__n128 OUTLINED_FUNCTION_29_44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  *(_OWORD *)(v3 + 624) = *(_OWORD *)(v3 + 944);
  *(_BYTE *)(v3 + 640) = v4;
  *(_QWORD *)(v3 + 648) = a1;
  result = *(__n128 *)(v3 + 976);
  v6 = *(_OWORD *)(v3 + 992);
  *(__n128 *)(v3 + 656) = result;
  *(_OWORD *)(v3 + 672) = v6;
  *(_QWORD *)(v3 + 688) = a2;
  *(_BYTE *)(v3 + 696) = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_35_38()
{
  return swift_getAtKeyPath();
}

_QWORD *OUTLINED_FUNCTION_36_45@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *(*a10)(uint64_t *__return_ptr, uint64_t *), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  a14 = a1;
  a15 = v15;
  return a10(&a12, &a14);
}

void OUTLINED_FUNCTION_39_45()
{
  sub_22AB88498();
}

uint64_t OUTLINED_FUNCTION_40_40()
{
  return swift_bridgeObjectRelease();
}

double OUTLINED_FUNCTION_41_40(double a1, double a2, double a3)
{
  double v3;
  double v4;
  double v5;

  return sub_22AB9341C(v4, v5, a3, v3);
}

_QWORD *OUTLINED_FUNCTION_44_36(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return DenseVector.withUnsafeMutableVectorPointer<A>(_:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_45_31()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_46_38()
{
  return DenseVector.withUnsafeVectorPointer<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_47_32()
{
  uint64_t v0;

  return sub_22AB9AE70(v0 + 384);
}

uint64_t OUTLINED_FUNCTION_51_37()
{
  uint64_t v0;

  return sub_22AB9AE70(v0 + 992);
}

uint64_t OUTLINED_FUNCTION_52_27()
{
  return DenseVector.withUnsafeVectorPointer<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_53_34()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_54_27()
{
  uint64_t v0;

  return sub_22AB9AE70(v0 + 912);
}

void OUTLINED_FUNCTION_56_24(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 - 16) = v1;
}

uint64_t OUTLINED_FUNCTION_63_25()
{
  return swift_bridgeObjectRelease();
}

double OUTLINED_FUNCTION_65_28(double a1)
{
  uint64_t v1;
  double result;

  result = -a1;
  *(double *)(v1 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_67_21()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_70_18()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_74_18()
{
  return swift_release();
}

void OUTLINED_FUNCTION_75_18()
{
  sub_22AB4CE30();
}

void OUTLINED_FUNCTION_76_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_22AB593D4(a1, a2, v3, v2, v4);
}

_QWORD *OUTLINED_FUNCTION_77_17(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return DenseVector.withUnsafeMutableVectorPointer<A>(_:)(a1, a2, a3);
}

_QWORD *OUTLINED_FUNCTION_78_18(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return DenseVector.withUnsafeMutableVectorPointer<A>(_:)(a1, a2, a3);
}

void OUTLINED_FUNCTION_79_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  *(_QWORD *)(v9 + 16) = &a9;
}

void OUTLINED_FUNCTION_80_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  *(_QWORD *)(v9 + 96) = &a9;
}

uint64_t OUTLINED_FUNCTION_82_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22A9A1A28(v2, a2);
}

uint64_t OUTLINED_FUNCTION_83_21()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_84_18()
{
  return sub_22ABDF0F8();
}

void OUTLINED_FUNCTION_85_18()
{
  type metadata accessor for LinearSupportVectorClassifierModel();
}

void OUTLINED_FUNCTION_86_16()
{
  double v0;

  sub_22AB953A0(v0);
}

uint64_t OUTLINED_FUNCTION_88_14()
{
  return 16;
}

uint64_t OUTLINED_FUNCTION_92_10()
{
  return swift_release();
}

__n128 OUTLINED_FUNCTION_93_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_94_11()
{
  uint64_t v0;

  return sub_22AB5B76C(v0, 0.0);
}

uint64_t OUTLINED_FUNCTION_95_9(uint64_t result)
{
  return sub_22AA6D37C(result);
}

_QWORD *OUTLINED_FUNCTION_98_12(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_99_8()
{
  return sub_22ABDF278();
}

void OUTLINED_FUNCTION_101_9()
{
  sub_22AB88498();
}

void OUTLINED_FUNCTION_102_6(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  sub_22AA8E048(a1, a2, v3, a3);
}

uint64_t OUTLINED_FUNCTION_103_7()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_104_8()
{
  type metadata accessor for LinearSupportVectorClassifier.Configuration.CodingKeys();
}

uint64_t FullyConnectedNetworkRegressor.makeTransformer()@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v4 = *((_DWORD *)v2 + 2);
  v5 = v2[2];
  v6 = *((_DWORD *)v2 + 6);
  v7 = v2[4];
  v8 = v2[5];
  v13 = *v2;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  v18 = v8;
  v19 = *((_OWORD *)v2 + 3);
  v9 = a1[2];
  v10 = a1[3];
  v11 = a1[4];
  sub_22ABDEAEC();
  return sub_22AB3FD5C((uint64_t)&v13, MEMORY[0x24BEE4AF8], 0, v9, v10, v11, a2);
}

uint64_t FullyConnectedNetworkRegressor.update<A>(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD *v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;

  *(_QWORD *)(v8 + 360) = a6;
  *(_QWORD *)(v8 + 368) = a7;
  *(_QWORD *)(v8 + 344) = a4;
  *(_QWORD *)(v8 + 352) = a5;
  *(_QWORD *)(v8 + 328) = a2;
  *(_QWORD *)(v8 + 336) = a3;
  *(_QWORD *)(v8 + 320) = a1;
  v11 = sub_22ABDDA0C();
  *(_QWORD *)(v8 + 376) = v11;
  *(_QWORD *)(v8 + 384) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 392) = OUTLINED_FUNCTION_0_0();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F248);
  *(_QWORD *)(v8 + 400) = v12;
  *(_QWORD *)(v8 + 408) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 416) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v8 + 424) = *(_QWORD *)(a5 + 16);
  *(_QWORD *)(v8 + 432) = *(_QWORD *)(a5 + 24);
  v13 = sub_22ABDE8A0();
  *(_QWORD *)(v8 + 440) = v13;
  *(_QWORD *)(v8 + 448) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 456) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v8 + 464) = type metadata accessor for AnnotatedFeature(255, v13, MEMORY[0x24BEE14E8], v14);
  sub_22ABDF5D8();
  *(_QWORD *)(v8 + 472) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v8 + 480) = *(_QWORD *)(a6 - 8);
  *(_QWORD *)(v8 + 488) = OUTLINED_FUNCTION_0_0();
  v15 = v7[1];
  *(_OWORD *)(v8 + 16) = *v7;
  *(_OWORD *)(v8 + 32) = v15;
  v16 = v7[3];
  *(_OWORD *)(v8 + 48) = v7[2];
  *(_OWORD *)(v8 + 64) = v16;
  return swift_task_switch();
}

uint64_t sub_22AB9C1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  _QWORD *v27;
  uint64_t KeyPath;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t inited;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 16))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 360));
  v1 = sub_22ABDF11C();
  *(_QWORD *)(v0 + 496) = v1;
  *(_QWORD *)(v0 + 304) = v1;
  v2 = sub_22ABDF0F8();
  v3 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v2);
  if ((sub_22ABDF434() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_22A9B7B50();
    v4 = swift_allocError();
    *(_QWORD *)v5 = 0xD000000000000026;
    *(_QWORD *)(v5 + 8) = 0x800000022ABE7570;
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v5 + 24) = 0;
    *(_BYTE *)(v5 + 32) = 2;
    swift_willThrow(v4);
    OUTLINED_FUNCTION_1_97();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    v40 = *(uint64_t (**)(void))(v0 + 8);
    return v40();
  }
  v6 = *(_QWORD *)(v0 + 424);
  v7 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 320);
  v10 = *(_QWORD *)(v8 + 32);
  v64 = v3;
  v65 = v2;
  v60 = type metadata accessor for FullyConnectedNetworkRegressorModel(0, v6, v7, v10);
  v63 = v10;
  v66 = *(int *)(v60 + 48);
  if (*(_QWORD *)(*(_QWORD *)(v9 + v66) + 16))
  {
    v11 = v7;
    v12 = v6;
    v62 = v8;
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 464);
    v13 = *(_QWORD *)(v0 + 472);
    *(_QWORD *)(v0 + 296) = v1;
    sub_22ABDF404();
    result = __swift_getEnumTagSinglePayload(v13, 1, v14);
    if ((_DWORD)result == 1)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    v16 = *(_QWORD *)(v0 + 464);
    v17 = *(_QWORD *)(v0 + 472);
    v19 = *(_QWORD *)(v0 + 448);
    v18 = *(_QWORD *)(v0 + 456);
    v20 = *(_QWORD *)(v0 + 440);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v17, v20);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v17, v16);
    v21 = sub_22ABDE84C();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + v66) = v21;
    v12 = *(_QWORD *)(v0 + 424);
    v11 = *(_QWORD *)(v0 + 432);
    v62 = *(_QWORD *)(v0 + 352);
  }
  v22 = *(_QWORD *)(v0 + 440);
  v24 = *(_QWORD *)(v0 + 360);
  v23 = *(_QWORD *)(v0 + 368);
  v25 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 160) = v25;
  v26 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v26;
  *(_QWORD *)(v0 + 288) = v1;
  v27 = (_QWORD *)swift_task_alloc();
  *v27 = v12;
  v27[1] = v24;
  v27[2] = v11;
  v27[3] = v63;
  v27[4] = v23;
  v61 = v1;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_11_3();
  v29 = (_QWORD *)swift_task_alloc();
  v29[2] = v24;
  v29[3] = v63;
  v29[4] = v23;
  v29[5] = KeyPath;
  v31 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AB81970, (uint64_t)v29, v65, v22, MEMORY[0x24BEE4078], v64, MEMORY[0x24BEE40A8], v30);
  swift_release();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 264) = v31;
  v32 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkRegressor<A>, v62);
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v32);
  sub_22AA3E434();
  v34 = *(_QWORD *)(v0 + 424);
  v33 = *(_QWORD *)(v0 + 432);
  v35 = *(_QWORD *)(v0 + 400);
  v37 = *(_QWORD *)(v0 + 360);
  v36 = *(_QWORD *)(v0 + 368);
  swift_bridgeObjectRelease();
  v38 = (_QWORD *)swift_task_alloc();
  v38[2] = v34;
  v38[3] = v37;
  v38[4] = v33;
  v38[5] = v63;
  v38[6] = v36;
  v38[7] = v0 + 16;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  v41 = sub_22A9C2540((uint64_t)sub_22AB9CB40, (uint64_t)v38, v37, v35, v39, v36, MEMORY[0x24BEE3F20], v0 + 272);
  v42 = *(_QWORD *)(v0 + 416);
  v43 = *(_QWORD *)(v0 + 320);
  OUTLINED_FUNCTION_11_3();
  *(_QWORD *)(v0 + 280) = v41;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F250);
  v45 = sub_22A9C2940();
  sub_22AB7A264(v44, v45, v42);
  swift_bridgeObjectRelease();
  result = sub_22AB40364(v42, v60);
  v46 = *(int *)(v60 + 52);
  *(_DWORD *)(v0 + 548) = v46;
  v47 = *(_QWORD *)(v43 + v46);
  v48 = __OFADD__(v47, 1);
  v49 = v47 + 1;
  if (v48)
  {
    __break(1u);
    goto LABEL_14;
  }
  v50 = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v43 + v46) = v49;
  v51 = *(_QWORD *)(v0 + 392);
  if (!v50)
  {
    v57 = *(_QWORD *)(v0 + 408);
    v58 = *(_QWORD *)(v0 + 376);
    v59 = *(_QWORD *)(v0 + 384);
    OUTLINED_FUNCTION_6_117();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v51, v58);
    OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
    OUTLINED_FUNCTION_1_97();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    v40 = *(uint64_t (**)(void))(v0 + 8);
    return v40();
  }
  v52 = *(_QWORD *)(v0 + 336);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F260);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  strcpy((char *)(inited + 32), "training_loss");
  *(_WORD *)(inited + 46) = -4864;
  sub_22A9A9840(v52);
  sub_22ABDD9AC();
  *(double *)(inited + 48) = *(float *)(v0 + 544);
  sub_22A9ADA0C();
  *(_QWORD *)(v0 + 504) = sub_22ABDEAC8();
  v54 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 96) = v54;
  v55 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 128) = v55;
  *(_QWORD *)(v0 + 312) = v61;
  v56 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v56;
  *v56 = v0;
  v56[1] = sub_22AB9C7F4;
  return sub_22AB79B70(*(_QWORD *)(v0 + 320), v0 + 312, *(_QWORD *)(v0 + 352), v65, v64);
}

uint64_t sub_22AB9C7F4(double a1, double a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 520) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    *(double *)(v6 + 528) = a2;
    *(double *)(v6 + 536) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_22AB9C880()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  char v17;
  uint64_t v18;

  v1 = *(double *)(v0 + 536);
  v2 = *(double *)(v0 + 528);
  v3 = *(int *)(v0 + 548);
  v14 = *(_QWORD *)(v0 + 400);
  v15 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 392);
  v13 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 376);
  v6 = *(void (**)(_QWORD *))(v0 + 336);
  v7 = *(_QWORD *)(v0 + 320);
  swift_isUniquelyReferenced_nonNull_native();
  sub_22A9C3750(0x676E696E69617274, 0xEE00726F7272655FLL, v1);
  OUTLINED_FUNCTION_5_94();
  swift_isUniquelyReferenced_nonNull_native();
  v16[0] = v16;
  sub_22A9C3750(0xD000000000000012, 0x800000022ABE2580, v2);
  OUTLINED_FUNCTION_5_94();
  v8 = *(_QWORD *)(v7 + v3);
  sub_22A9C2C80(v16);
  v10 = v9;
  swift_bridgeObjectRelease();
  v16[0] = 0xD00000000000001ELL;
  v16[1] = 0x800000022ABE7550;
  v16[2] = v8;
  v16[3] = v8;
  v17 = 0;
  v18 = v10;
  v6(v16);
  sub_22A9ADA48((uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v5);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  OUTLINED_FUNCTION_1_97();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AB9CA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  sub_22A9ADA48(*(_QWORD *)(v0 + 336));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AB9CAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, _QWORD *a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t result;

  v10 = type metadata accessor for FullyConnectedNetworkRegressor(0, a2, a3, a4);
  result = sub_22AB79FC8(a1, v10, a6);
  if (v6)
    *a5 = v6;
  return result;
}

uint64_t sub_22AB9CB40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_22AB9CAC8(a1, v3[2], v3[4], v3[5], a2, a3);
}

uint64_t sub_22AB9CB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A99DE80;
  return FullyConnectedNetworkRegressor.update<A>(_:with:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t sub_22AB9CBFC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkRegressor<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_94()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_6_117()
{
  return swift_bridgeObjectRelease();
}

void SupervisedTemporalEstimator.fitted<A, B>(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_1_98();
  v1 = OUTLINED_FUNCTION_25();
  v2 = (_QWORD *)OUTLINED_FUNCTION_25_2(v1);
  *v2 = v0;
  v2[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_5_95();
  __asm { BR              X8 }
}

void SupervisedTemporalEstimator.fitted<A, B, C>(to:validateOn:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_1_98();
  OUTLINED_FUNCTION_27_58(*(_QWORD *)(v1 + 48));
  v2 = swift_task_alloc();
  v3 = (_QWORD *)OUTLINED_FUNCTION_25_2(v2);
  *v3 = v0;
  v3[1] = sub_22A9ABF58;
  __asm { BR              X8 }
}

void UpdatableSupervisedTemporalEstimator.update<A, B>(_:with:)()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_1_98();
  v1 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_5_95();
  __asm { BR              X8 }
}

uint64_t dispatch thunk of SupervisedTemporalEstimator.fitted<A, B>(to:eventHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_3_111();
  v1 = OUTLINED_FUNCTION_25();
  v2 = (_QWORD *)OUTLINED_FUNCTION_25_2(v1);
  *v2 = v0;
  v2[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_4_102();
  return v5(v3, v4);
}

uint64_t dispatch thunk of SupervisedTemporalEstimator.fitted<A, B, C>(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_1_98();
  OUTLINED_FUNCTION_27_58(*(_QWORD *)(a13 + 48));
  v18 = swift_task_alloc();
  v19 = (_QWORD *)OUTLINED_FUNCTION_25_2(v18);
  *v19 = v13;
  v19[1] = sub_22A9ABF58;
  return v21(v17, v16, v15, v14, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t dispatch thunk of SupervisedTemporalEstimator.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of SupervisedTemporalEstimator.decode(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of UpdatableSupervisedTemporalEstimator.makeTransformer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UpdatableSupervisedTemporalEstimator.update<A, B>(_:with:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_3_111();
  v1 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_4_102();
  return v4(v2, v3);
}

uint64_t dispatch thunk of UpdatableSupervisedTemporalEstimator.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of UpdatableSupervisedTemporalEstimator.decodeWithOptimizer(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t PreprocessingTemporalEstimator.preprocessor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t PreprocessingTemporalEstimator.preprocessor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*PreprocessingTemporalEstimator.preprocessor.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t PreprocessingTemporalEstimator.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t PreprocessingTemporalEstimator.estimator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*PreprocessingTemporalEstimator.estimator.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void PreprocessingTemporalEstimator.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for PreprocessingTemporalEstimator();
}

uint64_t sub_22AB9D11C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for PreprocessingTemporalEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t PreprocessingTemporalEstimator.preprocessed<A>(from:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8[10] = a7;
  v8[11] = v7;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a2;
  v8[7] = a3;
  v8[5] = a1;
  v11 = *(_QWORD *)(a4 + 16);
  v8[12] = v11;
  v8[13] = *(_QWORD *)(v11 - 8);
  v8[14] = OUTLINED_FUNCTION_0_0();
  v8[15] = *(_QWORD *)(a4 + 32);
  v12 = OUTLINED_FUNCTION_65_2();
  v13 = OUTLINED_FUNCTION_16_30(v12);
  v8[19] = OUTLINED_FUNCTION_50_12(v13);
  v14 = OUTLINED_FUNCTION_29_20();
  v8[20] = v14;
  v8[21] = *(_QWORD *)(v14 - 8);
  v8[22] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v8[23] = OUTLINED_FUNCTION_0_0();
  v8[24] = *(_QWORD *)(a5 - 8);
  v8[25] = OUTLINED_FUNCTION_0_0();
  v15 = OUTLINED_FUNCTION_29_20();
  v8[26] = v15;
  v8[27] = *(_QWORD *)(v15 - 8);
  v8[28] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AB9D260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t (*v12)(void);

  v3 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v0 + 232) = AssociatedTypeWitness;
  *(_QWORD *)(v0 + 240) = type metadata accessor for PreprocessedFeatureSequence(0, AssociatedTypeWitness, v6, v7);
  *(_QWORD *)(v0 + 16) = sub_22ABDE9F0();
  OUTLINED_FUNCTION_27_8(v2, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_22ABDEE58();
  v8 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 160);
  swift_getAssociatedConformanceWitness();
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1)
  {
    OUTLINED_FUNCTION_15_30();
    OUTLINED_FUNCTION_46_13();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    return OUTLINED_FUNCTION_8_31(v1, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_18_31();
    OUTLINED_FUNCTION_33_19();
    v11 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_13_39(v11);
    return OUTLINED_FUNCTION_10_29(v12);
  }
}

uint64_t sub_22AB9D3A8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t AssociatedConformanceWitness;

  v2 = (_QWORD *)*v1;
  v2[32] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_30_0(v2[13]);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_4();
  }
  else
  {
    v5 = v2[18];
    v4 = v2[19];
    v6 = v2[17];
    (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
    OUTLINED_FUNCTION_27_8(v5, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    v7 = (_QWORD *)swift_task_alloc();
    v2[33] = v7;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *v7 = v2;
    v7[1] = sub_22AB9D4CC;
    return PreprocessedFeatureSequence.init<A>(_:)((uint64_t)(v2 + 3), v2[18], v2[29], v2[16], AssociatedConformanceWitness);
  }
}

uint64_t sub_22AB9D4CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AB9D530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t (*v9)(void);

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  sub_22ABDF0F8();
  sub_22ABDF0C8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  swift_getAssociatedConformanceWitness();
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
  {
    OUTLINED_FUNCTION_15_30();
    OUTLINED_FUNCTION_46_13();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    return OUTLINED_FUNCTION_8_31(v4, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_18_31();
    OUTLINED_FUNCTION_33_19();
    v8 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_13_39(v8);
    return OUTLINED_FUNCTION_10_29(v9);
  }
}

uint64_t PreprocessingTemporalEstimator.fitted(toPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v8 = a5[2];
  v6[9] = v8;
  v6[10] = *(_QWORD *)(v8 - 8);
  v6[11] = OUTLINED_FUNCTION_0_0();
  v9 = a5[3];
  v6[12] = v9;
  v6[13] = *(_QWORD *)(v9 - 8);
  v6[14] = OUTLINED_FUNCTION_0_0();
  v6[15] = a5[5];
  v10 = OUTLINED_FUNCTION_65_2();
  v11 = OUTLINED_FUNCTION_16_30(v10);
  v6[19] = OUTLINED_FUNCTION_50_12(v11);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AB9D6E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[7];
  v2 = v0[4];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[13] + 16))(v0[14], v0[8] + *(int *)(v1 + 52), v0[12]);
  v0[2] = v2;
  v3 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  v0[20] = v3;
  v0[21] = *(_QWORD *)(v1 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = type metadata accessor for PreprocessedFeatureSequence(255, AssociatedTypeWitness, v5, v6);
  v8 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v8);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessedFeatureSequence<A>, v7);
  *v3 = v0;
  v3[1] = sub_22AB9D7F8;
  __asm { BR              X8 }
}

uint64_t sub_22AB9D7F8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_17_1();
  v4 = v2[13];
  v3 = v2[14];
  v5 = v2[12];
  *v6 = *v1;
  v2[22] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AB9D86C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  v4 = v0[11];
  v5 = v0[9];
  v6 = v0[3];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[10] + 16))(v4, v0[8], v5);
  OUTLINED_FUNCTION_27_8(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  swift_getAssociatedConformanceWitness();
  ComposedTemporalTransformer.init(_:_:)(v4, v5, v6);
}

uint64_t sub_22AB9D914()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PreprocessingTemporalEstimator.fitted<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v17;

  v9[5] = a5;
  v9[6] = v8;
  v9[3] = a3;
  v9[4] = a4;
  v9[2] = a1;
  v17 = (_QWORD *)swift_task_alloc();
  v9[7] = v17;
  *v17 = v9;
  v17[1] = sub_22AB9D9F4;
  return PreprocessingTemporalEstimator.preprocessed<A>(from:eventHandler:)(a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_22AB9D9F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AB9DA54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 72);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_72_0();
    return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_22AA42BE4;
    return PreprocessingTemporalEstimator.fitted(toPreprocessed:eventHandler:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40));
  }
}

void PreprocessingTemporalEstimator.encode(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTemporalTransformer();
}

uint64_t sub_22AB9DB70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(v2 + *(int *)(a1 + 52), v1, v4, v3);
}

uint64_t PreprocessingTemporalEstimator.decode(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a3;
  v25 = *(_QWORD *)(a2 + 16);
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v26 = v6 - v5;
  v8 = *(_QWORD *)(v7 + 40);
  v9 = *(_QWORD *)(v7 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - v16;
  v23 = v3;
  v18 = v27;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v8 + 40))(a1, v9, v8, v15);
  if (!v18)
  {
    v20 = v25;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v23, v25);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    ComposedTemporalTransformer.init(_:_:)(v26, v20, v24);
  }
  return result;
}

uint64_t sub_22AB9DD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_22A9B72C0;
  return PreprocessingTemporalEstimator.fitted<A>(to:eventHandler:)(a1, a2, a3, a4, a8, a5, a6, a7);
}

void sub_22AB9DDF0()
{
  PreprocessingTemporalEstimator.encode(_:to:)();
}

uint64_t sub_22AB9DE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return PreprocessingTemporalEstimator.decode(from:)(a1, a2, a3);
}

void sub_22AB9DF24()
{
  OUTLINED_FUNCTION_3();
}

void TemporalTransformer.appending<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[2];

  v7 = v5;
  v24[0] = a5;
  v24[1] = a4;
  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_9_15();
  v15 = type metadata accessor for EstimatorToTemporalAdaptor(0, v12, v14, v13);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v24 - v17;
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_33();
  v22 = v21 - v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v21 - v20, v7, a2);
  OUTLINED_FUNCTION_27_8(v6, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  EstimatorToTemporalAdaptor.init(_:)(v6, a3, (uint64_t)v18);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for EstimatorToTemporalAdaptor<A>, v15);
  PreprocessingTemporalEstimator.init(_:_:)(v22, a2, v24[0]);
}

void sub_22AB9E03C()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AB9E0F8()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AB9E104(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AB9E1E0 + 4 * byte_22ABFFBD0[v21 - 1]))();
}

void sub_22AB9E254(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_22AB9E448(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v42 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B123D0);
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v39 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v38 = (char *)v35 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v37 = (char *)v35 - v12;
  v43 = a4 >> 1;
  v44 = a3;
  v13 = __OFSUB__(a4 >> 1, a3);
  v14 = (a4 >> 1) - a3;
  if (v13)
    goto LABEL_19;
  if (v14)
  {
    v50 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    if (v14 < 0)
    {
LABEL_20:
      __break(1u);
      return;
    }
    v35[1] = v4;
    v36 = v14;
    v15 = 0;
    v16 = (uint64_t)v37;
    while (!__OFADD__(v15, 1))
    {
      if (v44 + v15 >= v43 || v15 >= v14)
        goto LABEL_18;
      v48 = v15 + 1;
      v49 = v15;
      sub_22A9CF800(v42 + *(_QWORD *)(v40 + 72) * (v44 + v15), v16, &qword_255B123D0);
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A18);
      v19 = *(int *)(v18 + 48);
      v20 = v41;
      v21 = *(int *)(v41 + 48);
      v22 = v38;
      v23 = &v38[v21];
      v45 = &v38[v21];
      v46 = v16 + v21;
      v47 = v18;
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
      v26(v22, v16, v24);
      v27 = *(_QWORD *)(v16 + v19);
      *(_QWORD *)&v22[v19] = v27;
      v26(v23, v46, v24);
      v28 = *(int *)(v20 + 48);
      v29 = (uint64_t)v39;
      v30 = &v39[v28];
      v31 = *(int *)(v47 + 48);
      v32 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      v32(v39, v22, v24);
      *(_QWORD *)(v29 + v31) = v27;
      v32(v30, v45, v24);
      sub_22A9CF82C(v29, &qword_255B123D0);
      sub_22A9CF82C(v16, &qword_255B123D0);
      v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4CE30();
        v33 = v50;
      }
      v34 = *(_QWORD *)(v33 + 16);
      if (v34 >= *(_QWORD *)(v33 + 24) >> 1)
      {
        sub_22AB4CE30();
        v33 = v50;
      }
      *(_QWORD *)(v33 + 16) = v34 + 1;
      *(_QWORD *)(v33 + 8 * v34 + 32) = v27;
      v15 = v49 + 1;
      v14 = v36;
      if (v48 == v36)
        return;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

void sub_22AB9E700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  unint64_t v30;
  unint64_t v31;
  _BYTE *v32;
  void (*v33)(_BYTE *, unint64_t, uint64_t);
  void (*v34)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(_BYTE *, unint64_t, uint64_t);
  void (*v48)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  _BYTE *v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _BYTE v63[16];
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  _BYTE *v70;
  _BYTE *v71;
  _BYTE *v72;
  _BYTE *v73;
  unint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  _BYTE *v90;
  uint64_t v91;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B123D0);
  v81 = *(_QWORD *)(v4 - 8);
  v82 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v89 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v68 = &v63[-v7];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  MEMORY[0x24BDAC7A8](v8);
  v72 = &v63[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v67 = &v63[-v11];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v71 = &v63[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v66 = &v63[-v16];
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A18);
  v84 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v90 = &v63[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v78 = &v63[-v19];
  MEMORY[0x24BDAC7A8](v20);
  v76 = &v63[-v21];
  MEMORY[0x24BDAC7A8](v22);
  v69 = &v63[-v23];
  v75 = __swift_instantiateConcreteTypeFromMangledName(qword_255B1B138);
  MEMORY[0x24BDAC7A8](v75);
  v70 = &v63[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v25);
  v65 = &v63[-v26];
  MEMORY[0x24BDAC7A8](v27);
  v64 = &v63[-v28];
  v29 = *(_BYTE **)(a1 + 16);
  v30 = *(_QWORD *)(a2 + 16);
  if (v30 >= (unint64_t)v29)
    v31 = *(_QWORD *)(a1 + 16);
  else
    v31 = *(_QWORD *)(a2 + 16);
  v91 = MEMORY[0x24BEE4AF8];
  sub_22AB4D484();
  v83 = a2;
  v80 = v13;
  v73 = v29;
  v74 = v30;
  v77 = a1;
  if (v31)
  {
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v32 = 0;
    v85 = v31;
    while (v29 != v32)
    {
      sub_22A9CF800(a1+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(_QWORD *)(v84 + 72) * (_QWORD)v32, (uint64_t)v90, &qword_255B11A18);
      if ((_BYTE *)v30 == v32)
        goto LABEL_31;
      v33 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v13 + 16);
      v29 = v72;
      v33(v72, a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * (_QWORD)v32, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v12);
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v12) == 1)
        goto LABEL_34;
      v34 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32);
      v35 = v71;
      v34(v71, v29, v12);
      v36 = v70;
      v88 = &v70[*(int *)(v75 + 48)];
      v37 = v88;
      sub_22AA2550C((uint64_t)v90, (uint64_t)v70, &qword_255B11A18);
      v34(v37, v35, v12);
      v38 = *(int *)(v79 + 48);
      v39 = *(_QWORD *)&v36[v38];
      v40 = v89;
      v86 = &v89[*(int *)(v82 + 48)];
      v87 = v39;
      v41 = v76;
      v33(v76, (unint64_t)v36, v12);
      v42 = v12;
      v43 = v78;
      v34(v78, v41, v42);
      v44 = v43;
      v12 = v42;
      v34(v40, v44, v42);
      v33(v86, (unint64_t)v88, v42);
      *(_QWORD *)&v40[v38] = v87;
      sub_22A9CF82C((uint64_t)v36, qword_255B1B138);
      v45 = v91;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4D484();
        v45 = v91;
      }
      v29 = v73;
      v31 = v85;
      v46 = *(_QWORD *)(v45 + 16);
      a1 = v77;
      a2 = v83;
      if (v46 >= *(_QWORD *)(v45 + 24) >> 1)
      {
        sub_22AB4D484();
        v45 = v91;
      }
      ++v32;
      *(_QWORD *)(v45 + 16) = v46 + 1;
      sub_22AA2550C((uint64_t)v89, v45+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(_QWORD *)(v81 + 72) * v46, &qword_255B123D0);
      v13 = v80;
      v30 = v74;
      if ((_BYTE *)v31 == v32)
        goto LABEL_16;
    }
    __break(1u);
LABEL_31:
    __break(1u);
  }
  else
  {
    sub_22ABDEAEC();
    sub_22ABDEAEC();
LABEL_16:
    if ((unint64_t)v29 <= v30)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v31 < (unint64_t)v29)
    {
      sub_22A9CF800(a1+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(_QWORD *)(v84 + 72) * v31, (uint64_t)v69, &qword_255B11A18);
      if (v30 == v31)
      {
        v29 = v67;
        __swift_storeEnumTagSinglePayload((uint64_t)v67, 1, 1, v12);
LABEL_28:
        sub_22A9CF82C((uint64_t)v69, &qword_255B11A18);
        sub_22A9CF82C((uint64_t)v29, &qword_2540E8570);
        goto LABEL_29;
      }
      v29 = v67;
      if (v31 >= v30)
        goto LABEL_33;
      v47 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v13 + 16);
      v47(v67, a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v31, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v12);
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v12) == 1)
        goto LABEL_28;
      v85 = v31;
      v48 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32);
      v49 = v66;
      v48(v66, v29, v12);
      v50 = v75;
      v51 = v65;
      v52 = &v65[*(int *)(v75 + 48)];
      sub_22AA2550C((uint64_t)v69, (uint64_t)v65, &qword_255B11A18);
      v48(v52, v49, v12);
      v53 = v64;
      sub_22AA2550C((uint64_t)v51, (uint64_t)v64, qword_255B1B138);
      v54 = *(int *)(v79 + 48);
      v55 = *(_BYTE **)&v53[v54];
      v89 = &v53[*(int *)(v50 + 48)];
      v90 = v55;
      v56 = v68;
      v57 = &v68[*(int *)(v82 + 48)];
      v58 = v76;
      v47(v76, (unint64_t)v53, v12);
      v59 = v78;
      v48(v78, v58, v12);
      v48(v56, v59, v12);
      v47(v57, (unint64_t)v89, v12);
      *(_QWORD *)&v56[v54] = v90;
      sub_22A9CF82C((uint64_t)v53, qword_255B1B138);
      v60 = v91;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4D484();
        v60 = v91;
      }
      v29 = v73;
      v61 = *(_QWORD *)(v60 + 16);
      a2 = v83;
      v13 = v80;
      a1 = v77;
      v62 = v85;
      if (v61 >= *(_QWORD *)(v60 + 24) >> 1)
      {
        sub_22AB4D484();
        v60 = v91;
      }
      v31 = v62 + 1;
      *(_QWORD *)(v60 + 16) = v61 + 1;
      sub_22AA2550C((uint64_t)v68, v60+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(_QWORD *)(v81 + 72) * v61, &qword_255B123D0);
      v30 = v74;
      if (v29 == (_BYTE *)v31)
        goto LABEL_29;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  sub_22A9CF82C((uint64_t)v90, &qword_255B11A18);
  sub_22A9CF82C((uint64_t)v29, &qword_2540E8570);
  __break(1u);
}

void sub_22AB9EF28(uint64_t a1, uint64_t a2, double (*a3)(uint64_t, char *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  double v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  double (*v57)(uint64_t, char *);
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v57 = a3;
  v58 = a4;
  v6 = sub_22ABDDA0C();
  v54 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v47 - v10;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B130);
  MEMORY[0x24BDAC7A8](v56);
  v53 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v49 = (char *)&v47 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v48 = (uint64_t)&v47 - v15;
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a2 + 16);
  v60 = v17;
  if (v17 >= v16)
    v18 = v16;
  else
    v18 = v17;
  v61 = MEMORY[0x24BEE4AF8];
  sub_22AB4CE64();
  v55 = v16;
  v59 = a2;
  if (v18)
  {
    v52 = v8;
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v19 = 0;
    v20 = v6;
    v21 = v54;
    v51 = a1;
    while (v16 != v19)
    {
      v22 = v18;
      v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      v24 = *(_QWORD *)(v21 + 72) * v19;
      v25 = a1 + v23 + v24;
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
      v27 = v20;
      v28 = v52;
      v26(v52, v25, v27);
      if (v60 == v19)
        goto LABEL_29;
      v29 = v59 + v23 + v24;
      v30 = (uint64_t)v53;
      v31 = &v53[*(int *)(v56 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v53, v28, v27);
      v26(v31, v29, v27);
      v32 = v57(v30, v31);
      sub_22A9CF82C(v30, &qword_255B1B130);
      v33 = v61;
      v20 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4CE64();
        v33 = v61;
      }
      v18 = v22;
      v34 = *(_QWORD *)(v33 + 16);
      v21 = v54;
      if (v34 >= *(_QWORD *)(v33 + 24) >> 1)
      {
        sub_22AB4CE64();
        v33 = v61;
      }
      ++v19;
      *(_QWORD *)(v33 + 16) = v34 + 1;
      *(double *)(v33 + 8 * v34 + 32) = v32;
      a1 = v51;
      v16 = v55;
      if (v22 == v19)
        goto LABEL_15;
    }
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v20 = v6;
    v21 = v54;
LABEL_15:
    v35 = v60;
    if (v16 <= v60)
    {
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v36 = (uint64_t)v49;
    while (v18 < v16)
    {
      v37 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      v38 = *(_QWORD *)(v21 + 72) * v18;
      v39 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
      v39(v50, a1 + v37 + v38, v20);
      if (v35 == v18)
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v50, v20);
        goto LABEL_27;
      }
      if (v18 >= v35)
        goto LABEL_31;
      v40 = v59 + v37 + v38;
      v41 = v56;
      v42 = v36 + *(int *)(v56 + 48);
      (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v36, v50, v20);
      v39((char *)v42, v40, v20);
      v43 = v48;
      sub_22AA2550C(v36, v48, &qword_255B1B130);
      v44 = v57(v43, (char *)(v43 + *(int *)(v41 + 48)));
      sub_22A9CF82C(v43, &qword_255B1B130);
      v45 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4CE64();
        v45 = v61;
      }
      v46 = *(_QWORD *)(v45 + 16);
      v35 = v60;
      if (v46 >= *(_QWORD *)(v45 + 24) >> 1)
      {
        sub_22AB4CE64();
        v45 = v61;
      }
      ++v18;
      *(_QWORD *)(v45 + 16) = v46 + 1;
      *(double *)(v45 + 8 * v46 + 32) = v44;
      v16 = v55;
      if (v55 == v18)
        goto LABEL_27;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_22AB9F39C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  _QWORD *v18;
  _QWORD v19[5];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v25 = sub_22ABDF7B8();
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v24 = (char *)v19 - v8;
  v26 = sub_22ABDFA10();
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v23 = (char *)v19 - v9;
  v21 = a1;
  sub_22ABDEEB8();
  v10 = a2[3];
  v20 = a2[2];
  v29 = v20;
  v30 = v10;
  v11 = a2[4];
  v12 = a2[5];
  v31 = a3;
  v32 = v11;
  v19[3] = v11;
  v13 = a2[6];
  v14 = a2[7];
  v33 = v12;
  v34 = v13;
  v16 = a2[8];
  v15 = a2[9];
  v35 = v14;
  v36 = v16;
  v37 = v15;
  v38 = a4;
  v39 = 0;
  KeyPath = swift_getKeyPath();
  v18 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v19[4] = v10;
  v18[2] = v10;
  v18[3] = a3;
  v19[1] = a3;
  v18[4] = v12;
  v18[5] = v13;
  v19[2] = v14;
  v18[6] = v14;
  v18[7] = v16;
  v18[8] = v15;
  v18[9] = a4;
  v22 = a4;
  v18[10] = KeyPath;
  OUTLINED_FUNCTION_23_9();
}

void sub_22AB9F524()
{
  uint64_t v0;

  sub_22ABDFBC0();
  swift_release();
  OUTLINED_FUNCTION_73_12(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 224) + 8));
  OUTLINED_FUNCTION_23_9();
}

uint64_t sub_22AB9F570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_22ABDEF48();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 216) + 8))(v3, v2);
  if ((*(_BYTE *)(v6 - 96) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x24BDAC7A8](result);
    v8 = *(_QWORD *)(v6 - 288);
    v14[2] = *(_QWORD *)(v6 - 280);
    v14[3] = v8;
    v9 = *(_QWORD *)(v6 - 296);
    v15 = *(_QWORD *)(v6 - 312);
    v16 = v9;
    v17 = v1;
    v18 = v0;
    v19 = *(_QWORD *)(v6 - 304);
    v20 = v5;
    v10 = *(_QWORD *)(v6 - 264);
    v21 = v4;
    v22 = v10;
    v23 = v11;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A18);
    return sub_22AA726CC((void (*)(char *, uint64_t))sub_22ABA39A0, (uint64_t)v14, v15, v12, MEMORY[0x24BEE4078], v10, MEMORY[0x24BEE40A8], v13);
  }
  return result;
}

uint64_t sub_22AB9F680(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, uint64_t a6)
{
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v12[2];
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v8 = a4[2];
  v12[1] = a4[1];
  v14 = v8;
  v9 = a4[4];
  v15 = a4[3];
  v13 = a5;
  v16 = v9;
  v17 = a6;
  v18 = a2;
  v19 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  return sub_22A9C2540((uint64_t)sub_22ABA38DC, (uint64_t)v12, a5, MEMORY[0x24BEE3F88], v10, a6, MEMORY[0x24BEE3F20], (uint64_t)&v20);
}

void sub_22AB9F728(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v8 = OUTLINED_FUNCTION_68_5();
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22A9C6B68(a1, (uint64_t)v10);
  v14 = a2;
  v15 = a3;
  sub_22A9C6C74();
  sub_22ABDD580();
  sub_22A9C6CFC((uint64_t)v10);
  v11 = a4[2];
  v16 = a4[1];
  v17 = v11;
  v12 = a4[4];
  v18 = a4[3];
  v19 = v12;
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t sub_22AB9F7E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;

  v2 = v1 + *(int *)(a1 + 84);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  result = OUTLINED_FUNCTION_106_0(v2, 1, v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    sub_22ABDD76C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22AB9F84C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = 0.0;
    v4 = 0.0;
    do
    {
      v5 = v4;
      v6 = *(double *)(a1 + 32 + 8 * v2++);
      v7 = v6 - v3;
      v4 = v5 + v7;
      v3 = v5 + v7 - v5 - v7;
    }
    while (v1 != v2);
    *(double *)&result = v4 / (double)v1;
  }
  else
  {
    *(double *)&result = 0.0;
  }
  return result;
}

uint64_t sub_22AB9F8A8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;

  v7 = *a1;
  v8 = a1[1];
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  a4(v7, v8, a3, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

float TimeSeriesClassifier.configuration.getter@<S0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  float result;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;
  __int128 v7;

  result = *(float *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_DWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_BYTE *)(v1 + 64);
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v7;
  *(float *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  return result;
}

float TimeSeriesClassifier.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  float result;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;
  __int128 v7;

  result = *(float *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_DWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_BYTE *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v7;
  *(float *)(v1 + 32) = result;
  *(_QWORD *)(v1 + 40) = v3;
  *(_DWORD *)(v1 + 48) = v4;
  *(_QWORD *)(v1 + 56) = v5;
  *(_BYTE *)(v1 + 64) = v6;
  return result;
}

uint64_t (*TimeSeriesClassifier.configuration.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TimeSeriesClassifier.labels.getter()
{
  return sub_22ABDEAEC();
}

uint64_t TimeSeriesClassifier.labels.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*TimeSeriesClassifier.labels.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

float TimeSeriesClassifier.init(labels:configuration:)@<S0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  float result;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  __int128 v8;

  result = *(float *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_DWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_BYTE *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 16) = v8;
  *(float *)(a3 + 32) = result;
  *(_QWORD *)(a3 + 40) = v4;
  *(_DWORD *)(a3 + 48) = v5;
  *(_QWORD *)(a3 + 56) = v6;
  *(_BYTE *)(a3 + 64) = v7;
  *(_QWORD *)(a3 + 72) = a1;
  return result;
}

uint64_t TimeSeriesClassifier.fitted<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 144) = a6;
  *(_QWORD *)(v8 + 152) = a7;
  *(_QWORD *)(v8 + 128) = a4;
  *(_QWORD *)(v8 + 136) = a5;
  *(_QWORD *)(v8 + 112) = a2;
  *(_QWORD *)(v8 + 120) = a3;
  *(_QWORD *)(v8 + 104) = a1;
  v9 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v8 + 160) = *(_OWORD *)v7;
  *(_OWORD *)(v8 + 176) = v9;
  v10 = *(_QWORD *)(v7 + 40);
  LODWORD(v9) = *(_DWORD *)(v7 + 48);
  *(_DWORD *)(v8 + 240) = *(_DWORD *)(v7 + 32);
  *(_DWORD *)(v8 + 244) = v9;
  v11 = *(_QWORD *)(v7 + 56);
  *(_QWORD *)(v8 + 192) = v10;
  *(_QWORD *)(v8 + 200) = v11;
  *(_BYTE *)(v8 + 248) = *(_BYTE *)(v7 + 64);
  *(_QWORD *)(v8 + 208) = *(_QWORD *)(v7 + 72);
  return swift_task_switch();
}

void sub_22AB9FA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  v12 = *(_QWORD *)(v10 + 200);
  v11 = *(_QWORD *)(v10 + 208);
  v13 = *(_BYTE *)(v10 + 248);
  v14 = *(_QWORD *)(v10 + 192);
  v15 = *(_OWORD *)(v10 + 176);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)(v10 + 160);
  v17 = *(_DWORD *)(v10 + 240);
  v16 = *(_DWORD *)(v10 + 244);
  v18 = *(_QWORD *)(v10 + 136);
  *(_OWORD *)(v10 + 32) = v15;
  *(_DWORD *)(v10 + 48) = v17;
  *(_QWORD *)(v10 + 56) = v14;
  *(_DWORD *)(v10 + 64) = v16;
  *(_QWORD *)(v10 + 72) = v12;
  *(_BYTE *)(v10 + 80) = v13;
  *(_QWORD *)(v10 + 88) = v11;
  v19 = sub_22ABDE8A0();
  type metadata accessor for AnnotatedFeature(0, v19, *(_QWORD *)(v18 + 24), v20);
  v21 = sub_22ABDF068();
  *(_QWORD *)(v10 + 216) = v21;
  *(_QWORD *)(v10 + 96) = v21;
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 224) = v22;
  v23 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v23);
  *v22 = v10;
  v22[1] = sub_22AB9FB6C;
  TimeSeriesClassifier.fitted<A, B>(to:validateOn:eventHandler:)(*(_QWORD *)(v10 + 104), *(_QWORD *)(v10 + 112), v10 + 96, *(_QWORD *)(v10 + 120), *(_QWORD *)(v10 + 128), *(_QWORD **)(v10 + 136), *(_QWORD *)(v10 + 144), v23, a9, a10);
}

uint64_t sub_22AB9FB6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_23();
  if (v0)
    return swift_task_switch();
  else
    return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_22AB9FBD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void TimeSeriesClassifier.fitted<A, B>(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10[61] = a9;
  v10[62] = a10;
  v10[59] = a7;
  v10[60] = a8;
  v10[57] = a5;
  v10[58] = a6;
  v10[55] = a3;
  v10[56] = a4;
  v10[53] = a1;
  v10[54] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10218);
  v10[63] = OUTLINED_FUNCTION_0_0();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B123D0);
  v10[64] = v12;
  v10[65] = *(_QWORD *)(v12 - 8);
  v10[66] = OUTLINED_FUNCTION_0_0();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v10[67] = v13;
  v10[68] = *(_QWORD *)(v13 - 8);
  v10[69] = OUTLINED_FUNCTION_28_7();
  v10[70] = OUTLINED_FUNCTION_29_8();
  v10[71] = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A10);
  v10[72] = OUTLINED_FUNCTION_28_7();
  v10[73] = OUTLINED_FUNCTION_29_8();
  v14 = sub_22ABDD544();
  v10[74] = v14;
  v10[75] = *(_QWORD *)(v14 - 8);
  v10[76] = OUTLINED_FUNCTION_0_0();
  v15 = a6[2];
  v10[77] = v15;
  v16 = a6[3];
  v10[78] = v16;
  v17 = a6[4];
  v10[79] = v17;
  v18 = a6[5];
  v10[80] = v18;
  v19 = a6[6];
  v10[81] = v19;
  v20 = a6[7];
  v10[82] = v20;
  v21 = a6[8];
  v10[83] = v21;
  v22 = a6[9];
  v10[84] = v22;
  v10[2] = v15;
  v10[3] = v16;
  v10[4] = v17;
  v10[5] = v18;
  v10[6] = v19;
  v10[7] = v20;
  v10[8] = v21;
  v10[9] = v22;
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t sub_22AB9FD28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  *(_QWORD *)(v4 + 680) = a1;
  *(_QWORD *)(v4 + 688) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v4 + 696) = OUTLINED_FUNCTION_77_4();
  *(_QWORD *)(v4 + 704) = OUTLINED_FUNCTION_89_5();
  *(_QWORD *)(v4 + 712) = OUTLINED_FUNCTION_89_5();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A18);
  *(_QWORD *)(v4 + 720) = v6;
  *(_QWORD *)(v4 + 728) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 736) = OUTLINED_FUNCTION_77_4();
  *(_QWORD *)(v4 + 744) = OUTLINED_FUNCTION_89_5();
  v7 = sub_22ABDDA0C();
  *(_QWORD *)(v4 + 752) = v7;
  *(_QWORD *)(v4 + 760) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 768) = OUTLINED_FUNCTION_77_4();
  *(_QWORD *)(v4 + 776) = OUTLINED_FUNCTION_89_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10FE8);
  *(_QWORD *)(v4 + 784) = OUTLINED_FUNCTION_0_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  *(_QWORD *)(v4 + 792) = OUTLINED_FUNCTION_77_4();
  *(_QWORD *)(v4 + 800) = OUTLINED_FUNCTION_89_5();
  *(_QWORD *)(v4 + 808) = OUTLINED_FUNCTION_89_5();
  v8 = sub_22ABDE8A0();
  *(_QWORD *)(v4 + 816) = v8;
  v10 = type metadata accessor for AnnotatedFeature(255, v8, v3, v9);
  *(_QWORD *)(v4 + 824) = v10;
  v11 = sub_22ABDF5D8();
  *(_QWORD *)(v4 + 832) = v11;
  *(_QWORD *)(v4 + 840) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v4 + 848) = swift_task_alloc();
  *(_QWORD *)(v4 + 856) = swift_task_alloc();
  *(_QWORD *)(v4 + 864) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 872) = OUTLINED_FUNCTION_28_7();
  *(_QWORD *)(v4 + 880) = OUTLINED_FUNCTION_29_8();
  *(_QWORD *)(v4 + 888) = *(_QWORD *)(v1 - 8);
  *(_QWORD *)(v4 + 896) = OUTLINED_FUNCTION_0_0();
  v12 = *(_OWORD *)(v2 + 16);
  *v5 = *(_OWORD *)v2;
  v5[1] = v12;
  *(_DWORD *)(v4 + 964) = *(_DWORD *)(v2 + 32);
  *(_QWORD *)(v4 + 936) = *(_QWORD *)(v2 + 40);
  *(_DWORD *)(v4 + 968) = *(_DWORD *)(v2 + 48);
  *(_QWORD *)(v4 + 944) = *(_QWORD *)(v2 + 56);
  *(_BYTE *)(v4 + 972) = *(_BYTE *)(v2 + 64);
  *(_QWORD *)(v4 + 952) = *(_QWORD *)(v2 + 72);
  return swift_task_switch();
}

uint64_t sub_22AB9FECC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  float v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t KeyPath;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  _QWORD *v83;
  _QWORD *v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;

  v1 = v0;
  v2 = v0[107];
  v3 = v0[103];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[111] + 16))(v0[112], v0[54], v0[59]);
  v4 = sub_22ABDF11C();
  v0[49] = v4;
  v5 = sub_22ABDF0F8();
  v6 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v5);
  sub_22ABDF404();
  OUTLINED_FUNCTION_106_0(v2, 1, v3);
  if (v7)
  {
    v8 = v0[105];
    OUTLINED_FUNCTION_25_16();
    OUTLINED_FUNCTION_73_12(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_42_34();
    *v10 = v9 - 34;
    v10[1] = 0x800000022ABFFC30;
    v10[2] = 0;
    v10[3] = 0;
    OUTLINED_FUNCTION_3_112(v11, (uint64_t)v10, 2);
  }
  else
  {
    v12 = v0[107];
    v13 = v0[103];
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[108] + 32);
    v14(v1[110], v12, v13);
    v15 = *(_QWORD *)(sub_22ABDE84C() + 16);
    swift_bridgeObjectRelease();
    v16 = v1[110];
    if (v15 == 2)
    {
      v17 = sub_22ABDE84C();
      if (!*(_QWORD *)(v17 + 16))
      {
        __break(1u);
        JUMPOUT(0x22ABA1D28);
      }
      v18 = v1[113];
      v19 = *(_QWORD *)(v17 + 32);
      swift_bridgeObjectRelease();
      if (v19 >= v18)
      {
        v77 = v6;
        v35 = sub_22ABDE84C();
        if (*(_QWORD *)(v35 + 16) < 2uLL)
        {
          __break(1u);
          JUMPOUT(0x22ABA1E2CLL);
        }
        v36 = v1[106];
        v37 = v1[103];
        v38 = *(_QWORD *)(v35 + 40);
        v85 = *(__n128 *)(v1 + 77);
        v82 = *(_OWORD *)(v1 + 83);
        v79 = *(__n128 *)(v1 + 59);
        v80 = *(_OWORD *)(v1 + 61);
        swift_bridgeObjectRelease();
        v1[48] = v4;
        v39 = OUTLINED_FUNCTION_21_69();
        OUTLINED_FUNCTION_41_41(v39, v79, v85);
        *(_OWORD *)(v40 + 80) = v82;
        *(_OWORD *)(v40 + 96) = v80;
        *(_QWORD *)(v40 + 112) = v38;
        MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v5);
        sub_22ABDEF00();
        swift_task_dealloc();
        OUTLINED_FUNCTION_106_0(v36, 1, v37);
        if (v7)
        {
          v86 = (uint64_t)(v1 + 40);
          v41 = *((float *)v1 + 242);
          v42 = v1[117];
          v43 = v1[116];
          v44 = v1[106];
          v45 = v1[105];
          v46 = v1[104];
          v81 = v1[102];
          v47 = v1[84];
          v78 = v1[83];
          v76 = v1[82];
          v48 = v1[81];
          v49 = v1[80];
          v72 = v1[79];
          v83 = v1;
          v50 = v1[78];
          v74 = v49;
          v75 = v83[62];
          v73 = v83[61];
          v51 = v83[60];
          v71 = v83[77];
          v52 = v83[59];
          v84 = (_QWORD *)v83[58];
          (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
          powf((float)(v41 * 0.01) / v41, 1.0 / (float)v43);
          sub_22AA0AEEC(v42, 0.0);
          v53 = sub_22ABDEAEC();
          sub_22AB593D0(v53, v50, v48, v47);
          v83[47] = v4;
          v54 = (_QWORD *)OUTLINED_FUNCTION_3_79();
          *v54 = v71;
          v54[1] = v50;
          v54[2] = v52;
          v54[3] = v51;
          v54[4] = v72;
          v54[5] = v74;
          v54[6] = v48;
          v54[7] = v76;
          v54[8] = v78;
          v54[9] = v47;
          v54[10] = v73;
          v54[11] = v75;
          KeyPath = swift_getKeyPath();
          OUTLINED_FUNCTION_17();
          v56 = (_QWORD *)OUTLINED_FUNCTION_3_79();
          v56[2] = v52;
          v56[3] = v51;
          v56[4] = v74;
          v56[5] = v48;
          v56[6] = v76;
          v56[7] = v78;
          v56[8] = v47;
          v56[9] = v73;
          v56[10] = v75;
          v56[11] = KeyPath;
          v58 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AAE8678, (uint64_t)v56, v5, v81, MEMORY[0x24BEE4078], v77, MEMORY[0x24BEE40A8], v57);
          swift_release();
          OUTLINED_FUNCTION_17();
          v83[40] = v58;
          v59 = OUTLINED_FUNCTION_59_18();
          v60 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v59);
          sub_22AB9F39C(v86, v84, v59, v60);
        }
        v61 = v1[110];
        v62 = v1[109];
        v63 = v1[108];
        v64 = v1[106];
        v65 = v1[103];
        OUTLINED_FUNCTION_25_16();
        v14(v62, v64, v65);
        v66 = sub_22ABDE84C();
        sub_22A9B7B50();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_42_34();
        *v67 = v66;
        v67[1] = v68;
        v67[2] = 0x800000022ABE2EF0;
        v67[3] = 0;
        OUTLINED_FUNCTION_3_112(v69, (uint64_t)v67, 6);
        v70 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
        v70(v62, v65);
        v70(v61, v65);
      }
      else
      {
        v20 = v1[113];
        v21 = v1[110];
        v22 = v1[108];
        v23 = v1[103];
        OUTLINED_FUNCTION_25_16();
        v24 = sub_22ABDE84C();
        sub_22ABDF7A0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_42_34();
        v87 = v25 - 17;
        v1[50] = v20;
        sub_22ABDFD7C();
        sub_22ABDEDC8();
        OUTLINED_FUNCTION_2_1();
        sub_22ABDEDC8();
        sub_22A9B7B50();
        v26 = OUTLINED_FUNCTION_53();
        *v27 = v24;
        v27[1] = v87;
        v27[2] = 0x800000022ABE16C0;
        v27[3] = 0;
        OUTLINED_FUNCTION_3_112(v26, (uint64_t)v27, 6);
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      }
    }
    else
    {
      v28 = v1[108];
      v29 = v1[103];
      OUTLINED_FUNCTION_25_16();
      v30 = sub_22ABDE84C();
      sub_22A9B7B50();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_42_34();
      *v31 = v30;
      v31[1] = v32;
      v31[2] = 0x800000022ABE2EF0;
      v31[3] = 0;
      OUTLINED_FUNCTION_3_112(v33, (uint64_t)v31, 6);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v16, v29);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_1((uint64_t (*)(void))v1[1]);
}

uint64_t sub_22ABA1F04(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  sub_22ABDE8A0();
  result = sub_22ABDE84C();
  if (*(_QWORD *)(result + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(result + 40);
    swift_bridgeObjectRelease();
    return v4 != a2;
  }
  return result;
}

void sub_22ABA1F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_22ABE8E30;
  sub_22AB593D4(a2, a3, a5, a10, a13);
}

uint64_t sub_22ABA1FE8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  sub_22ABDEAEC();
  sub_22ABDE81C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22ABA2064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  _QWORD v16[2];

  v16[0] = a3;
  v16[1] = a4;
  v6 = sub_22ABDE8A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - v8;
  v10 = sub_22ABDDA0C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v9, a1, v6, v12);
  sub_22AA5A180((uint64_t)v9, a2, (uint64_t)v14);
  sub_22ABDD8BC();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

void sub_22ABA2170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15;
  uint64_t v16;

  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_22ABDDA0C();
  MEMORY[0x24BDAC7A8](v16);
  sub_22AB593D4(a2, a3, a5, a10, a13);
}

uint64_t sub_22ABA2238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = sub_22ABDD538();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  sub_22ABDD8EC();
  sub_22ABDD8BC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

double sub_22ABA22B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  double v20;
  float v22[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14980);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LSTMFCN(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22ABDDA0C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v22 - v15;
  sub_22A9C6B68(a3, (uint64_t)v9);
  sub_22A9C6C74();
  sub_22ABDD7E4();
  sub_22A9C6CFC((uint64_t)v9);
  v17 = *MEMORY[0x24BE6B9C8];
  v18 = sub_22ABDD550();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v6, v17, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v18);
  sub_22ABDD5C8();
  sub_22A9CF82C((uint64_t)v6, &qword_255B14980);
  sub_22ABDD9AC();
  v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v13, v10);
  v20 = v22[3];
  v19(v16, v10);
  return v20;
}

uint64_t sub_22ABA24B0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, void (*a6)(_QWORD *), double a7, double a8)
{
  uint64_t v8;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  _QWORD v21[3];
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v15 = *(_QWORD *)(v8 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E240);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE9FB0;
  strcpy((char *)(inited + 32), "training_loss");
  *(_WORD *)(inited + 46) = -4864;
  v17 = MEMORY[0x24BEE13C8];
  *(double *)(inited + 48) = a7;
  *(_QWORD *)(inited + 72) = v17;
  *(_QWORD *)(inited + 80) = 0xD000000000000011;
  *(_QWORD *)(inited + 88) = 0x800000022ABE1590;
  *(_QWORD *)(inited + 120) = v17;
  *(double *)(inited + 96) = a8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
  sub_22A9ADA0C();
  v25 = sub_22ABDEAC8();
  if ((a3 & 1) == 0)
  {
    v22 = v17;
    v21[0] = a2;
    sub_22AAF46F0((uint64_t)v21, 0x69746164696C6176, 0xEF73736F6C5F6E6FLL);
  }
  if ((a5 & 1) == 0)
  {
    v22 = v17;
    v21[0] = a4;
    sub_22AAF46F0((uint64_t)v21, 0xD000000000000013, 0x800000022ABE35D0);
  }
  v21[0] = 0xD000000000000014;
  v21[1] = 0x800000022ABFFC30;
  v21[2] = a1;
  v22 = v15;
  v23 = 0;
  v24 = v25;
  a6(v21);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22ABA2678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, _DWORD *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v12 = *(_QWORD *)(a2 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_22AB5954C(v13, v16, v17, a2, v18, v19);
  if ((v21 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, a2);
    v22 = sub_22ABDED80();
    v24 = v23;
    sub_22A9B7B50();
    v25 = swift_allocError();
    *(_QWORD *)v26 = 0xD000000000000014;
    *(_QWORD *)(v26 + 8) = 0x800000022ABFFC30;
    *(_QWORD *)(v26 + 16) = v22;
    *(_QWORD *)(v26 + 24) = v24;
    *(_BYTE *)(v26 + 32) = 3;
    result = swift_willThrow(v25);
    *a9 = v25;
  }
  else
  {
    if (result < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (result <= 0x7FFFFFFF)
    {
      *a3 = result;
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_22ABA27AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_22ABDE8A0();
  result = sub_22ABDE84C();
  *a1 = result;
  return result;
}

unint64_t sub_22ABA27E8@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result;

  result = sub_22A9B7C8C(*a2, *a1);
  *a3 = result;
  return result;
}

uint64_t sub_22ABA2818(uint64_t *a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *a3;
  v5 = *a1;
  sub_22AB637E4();
  v6 = *a2;
  v7 = sub_22AB63820(v4, *a2);
  *(_QWORD *)(v6 + 8 * v4 + 32) = v5;
  return nullsub_1(v7, v8);
}

uint64_t sub_22ABA2864@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a3;
  v25 = a2;
  sub_22ABDE8A0();
  result = sub_22ABDE84C();
  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v24 = a4;
  v15 = *(_QWORD *)(result + 32);
  swift_bridgeObjectRelease();
  result = sub_22ABDE84C();
  if (*(_QWORD *)(result + 16) < 2uLL)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v23 = a5;
  v16 = *(_QWORD *)(result + 40);
  result = swift_bridgeObjectRelease();
  if (!__OFSUB__(a1, v15))
  {
    v21 = a6;
    v20[1] = a9;
    v20[2] = a10;
    v22 = a1 - v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v17 = swift_allocObject();
    v20[3] = v20;
    *(_OWORD *)(v17 + 16) = xmmword_22ABE9FB0;
    *(_QWORD *)(v17 + 32) = a1;
    *(_QWORD *)(v17 + 40) = v16;
    MEMORY[0x24BDAC7A8](v17);
    MEMORY[0x24BDAC7A8](v18);
    sub_22ABDEAEC();
    v19 = v21;
    sub_22ABDE81C();
    swift_bridgeObjectRelease();
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A18);
    *(_QWORD *)(v19 + *(int *)(result + 48)) = v22;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_22ABA2A54(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;

  v13 = sub_22ABDE8A0();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v13);
  result = sub_22AA3EF20();
  if (a8 < a6)
    goto LABEL_24;
  if (a6 != a8)
  {
    if (a7 < 0)
    {
LABEL_25:
      __break(1u);
      return result;
    }
    while (a6 < a8)
    {
      if (a7)
      {
        v15 = 0;
        v16 = a4[2];
        while (a7 != v15)
        {
          if (v16)
          {
            v17 = a4[4];
            v18 = a6 * v17;
            if ((unsigned __int128)(a6 * (__int128)v17) >> 64 != (a6 * v17) >> 63)
              goto LABEL_20;
            if (v16 != 1)
            {
              v19 = a4[5];
              v20 = v15 * v19;
              if ((unsigned __int128)(v15 * (__int128)v19) >> 64 != (v15 * v19) >> 63)
                goto LABEL_21;
              v21 = __OFADD__(v18, v20);
              v18 += v20;
              if (v21)
                goto LABEL_22;
            }
          }
          else
          {
            v18 = 0;
          }
          ++v15;
          *(_DWORD *)(a1 + 4 * v18) = 0;
          if (a7 == v15)
            goto LABEL_17;
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        break;
      }
LABEL_17:
      if (++a6 == a8)
        return result;
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  return result;
}

void sub_22ABA2BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int v23;

  MEMORY[0x24BDAC7A8](a1);
  if (v11 < 0)
    goto LABEL_25;
  if (v11)
  {
    if (a6 < 0)
    {
LABEL_26:
      __break(1u);
      return;
    }
    v12 = 0;
    v21 = v11;
    while (v12 != v11)
    {
      if (a6)
      {
        v13 = 0;
        v14 = a10[2];
        while (a6 != v13)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_22ABE9FB0;
          *(_QWORD *)(inited + 32) = v12;
          *(_QWORD *)(inited + 40) = v13;
          sub_22AA3EF1C();
          swift_bridgeObjectRelease();
          sub_22AA10574();
          sub_22ABDEA50();
          if (v14)
          {
            v16 = a10[4];
            v17 = v12 * v16;
            if ((unsigned __int128)(v12 * (__int128)v16) >> 64 != (v12 * v16) >> 63)
              goto LABEL_21;
            if (v14 != 1)
            {
              v18 = a10[5];
              v19 = v13 * v18;
              if ((unsigned __int128)(v13 * (__int128)v18) >> 64 != (v13 * v18) >> 63)
                goto LABEL_22;
              v20 = __OFADD__(v17, v19);
              v17 += v19;
              if (v20)
                goto LABEL_23;
            }
          }
          else
          {
            v17 = 0;
          }
          ++v13;
          *(_DWORD *)(a7 + 4 * v17) = v23;
          if (a6 == v13)
            goto LABEL_18;
        }
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        break;
      }
LABEL_18:
      ++v12;
      v11 = v21;
      if (v12 == v21)
        return;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
}

void sub_22ABA2DA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;

  v39 = a1;
  v40 = a3;
  v37 = a2;
  v42 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14980);
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22ABDDA0C();
  v35 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F548);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = &v23[*(int *)(v21 + 48)];
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v38(v13, a2, v10);
  sub_22AA2545C((unint64_t *)&qword_255B0DAF8, &qword_2540E8568, MEMORY[0x24BDBFCD0]);
  v36 = v24;
  sub_22ABDE8F4();
  v34 = *(void (**)(char *, uint64_t))(v11 + 8);
  v34(v13, v10);
  v25 = v35;
  v33 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v33(v19, v17, v14);
  v26 = sub_22ABDD718();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v26);
  sub_22AA06710((uint64_t)v23, (uint64_t)v32, (uint64_t)v19, (uint64_t)v9, v40);
  sub_22A9CF82C((uint64_t)v9, &qword_255B0F3B0);
  v27 = *(void (**)(char *, uint64_t))(v25 + 8);
  v27(v19, v14);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11A10);
  v38(v13, v37 + *(int *)(v28 + 36), v10);
  sub_22ABDE8F4();
  v34(v13, v10);
  v33(v19, v17, v14);
  v29 = *MEMORY[0x24BE6B9C8];
  v30 = sub_22ABDD550();
  v31 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v41, v29, v30);
  __swift_storeEnumTagSinglePayload(v31, 0, 1, v30);
  sub_22ABDD5C8();
  sub_22A9CF82C(v31, &qword_255B14980);
  v27(v19, v14);
  sub_22A9CF82C((uint64_t)v23, &qword_255B0F548);
}

uint64_t sub_22ABA3128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A99E4B4;
  return TimeSeriesClassifier.fitted<A>(to:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

void sub_22ABA31C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v16;
  uint64_t v18;
  _QWORD *v19;

  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_22A99DE80;
  TimeSeriesClassifier.fitted<A, B>(to:validateOn:eventHandler:)(a1, a2, a3, a4, a5, v19, a6, a7, a8, v18);
}

uint64_t sub_22ABA3270(uint64_t a1)
{
  uint64_t v1;

  return sub_22ABA1F04(a1, *(_QWORD *)(v1 + 112)) & 1;
}

uint64_t sub_22ABA32B0()
{
  return sub_22ABA3328();
}

void sub_22ABA32CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_22ABA2064(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 56), a2);
  OUTLINED_FUNCTION_46_39();
}

uint64_t sub_22ABA330C()
{
  return sub_22ABA3328();
}

uint64_t sub_22ABA3328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_16_77();
  return v7(v1, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), v2, v3, v4, v5, v6);
}

void sub_22ABA3364()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16) >= 2uLL)
    OUTLINED_FUNCTION_22_62();
}

void sub_22ABA3488()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B123D0);
  v15 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v16 = (uint64_t)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = *v0;
  v4 = *(_QWORD *)(*v0 + 16);
  if (v4 >= 2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_21;
    while (1)
    {
      v5 = 0;
      *v0 = v3;
      while (1)
      {
        v17 = 0;
        MEMORY[0x22E2E4E7C](&v17, 8);
        v6 = (v17 * (unsigned __int128)v4) >> 64;
        if (v4 > v17 * v4)
        {
          v7 = -(uint64_t)v4 % v4;
          if (v7 > v17 * v4)
          {
            do
            {
              v17 = 0;
              MEMORY[0x22E2E4E7C](&v17, 8);
            }
            while (v7 > v17 * v4);
            v6 = (v17 * (unsigned __int128)v4) >> 64;
          }
        }
        v8 = v5 + v6;
        if (__OFADD__(v5, v6))
          break;
        if (v5 != v8)
        {
          v9 = *(_QWORD *)(v3 + 16);
          if (v5 >= v9)
            goto LABEL_18;
          v10 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
          v11 = *(_QWORD *)(v15 + 72);
          sub_22A9CF800(v3 + v10 + v11 * v5, v16, &qword_255B123D0);
          if (v8 >= v9)
            goto LABEL_19;
          *v0 = v3;
          sub_22ABA3844(v3 + v10 + v11 * v8, v3 + v10 + v11 * v5);
          if (v8 >= *(_QWORD *)(*v0 + 16))
            goto LABEL_20;
          sub_22ABA388C(v16, *v0 + v10 + v11 * v8);
          v3 = *v0;
        }
        ++v5;
        if ((uint64_t)v4-- <= 2)
          return;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      sub_22AB5D848();
      v3 = v13;
    }
  }
}

double sub_22ABA3644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_16_77();
  return sub_22ABA22B0(v1, v2, *(_QWORD *)(v0 + 112));
}

void sub_22ABA3674()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABA3684()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22ABA368C(_QWORD *a1, _QWORD *a2)
{
  memcpy(a1, a2, 0x41uLL);
  a1[9] = a2[9];
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22ABA36C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v3 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v3;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22ABA3744(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22ABA37A4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 72);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22ABA37E4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for TimeSeriesClassifier()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22ABA3844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B123D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_22ABA388C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B123D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_22ABA38D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_22ABA2DA8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_22ABA38DC(uint64_t a1@<X0>, uint64_t *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t *v3;

  sub_22ABA2678(a1, v3[3], a3, v3[7], v3[8], v3[9], v3[10], v3[11], a2);
  OUTLINED_FUNCTION_46_39();
}

uint64_t sub_22ABA391C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24);
}

uint64_t sub_22ABA3928()
{
  return 80;
}

void *sub_22ABA3934(const void *a1, void *a2)
{
  return OUTLINED_FUNCTION_7_103(a2, a1);
}

uint64_t sub_22ABA3944()
{
  return 88;
}

BOOL sub_22ABA3950(_QWORD *a1, _QWORD *a2)
{
  return *a2 == *a1;
}

uint64_t sub_22ABA3964()
{
  return sub_22ABDF2FC();
}

void *sub_22ABA396C(_QWORD *a1, _QWORD *a2)
{
  *a2 = a1[10];
  return OUTLINED_FUNCTION_7_103(a2 + 1, a1);
}

uint64_t sub_22ABA397C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_22ABA39A0(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_22ABA2864(v1[12], v1[2], v1[3], v1[4], v1[5], a1, v1[8], v1[9], v1[10], v1[11]);
  OUTLINED_FUNCTION_46_39();
}

uint64_t sub_22ABA39E0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t *v4;

  return sub_22ABA2A54(a1, a2, a3, a4, v4[12], v4[13], v4[14], v4[15]);
}

void sub_22ABA3A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_22ABA2BD4(a1, a2, a3, a4, *(_QWORD *)(v4 + 96), *(_QWORD *)(v4 + 104), *(_QWORD *)(v4 + 112), *(_QWORD *)(v4 + 120), *(_QWORD *)(v4 + 128), *(_QWORD **)(v4 + 136));
}

uint64_t sub_22ABA3A60(uint64_t *a1, uint64_t a2)
{
  return sub_22AA25550(a1, a2);
}

uint64_t OUTLINED_FUNCTION_3_112@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  uint64_t v3;

  *(_BYTE *)(a2 + 32) = a3;
  *(_QWORD *)(v3 - 240) = a1;
  return swift_willThrow(a1);
}

void *OUTLINED_FUNCTION_7_103@<X0>(void *__dst@<X1>, const void *a2@<X8>)
{
  return memcpy(__dst, a2, 0x50uLL);
}

uint64_t OUTLINED_FUNCTION_15_82()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_16_77()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 56);
}

uint64_t OUTLINED_FUNCTION_20_60()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21_69()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_22_62()
{
  JUMPOUT(0x22E2E4E7CLL);
}

uint64_t OUTLINED_FUNCTION_23_65()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_25_50()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_26_61()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_28_45()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_32_43()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_36_46(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  __n128 a71;
  __n128 result;

  result = a71;
  a1[1] = a71;
  return result;
}

__n128 OUTLINED_FUNCTION_41_41(uint64_t a1, __n128 a2, __n128 a3)
{
  uint64_t v3;
  __n128 result;

  *(__n128 *)(a1 + 16) = a3;
  *(__n128 *)(a1 + 32) = a2;
  result = *(__n128 *)&STACK[0x230];
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v3 - 256);
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_43_28()
{
  return swift_bridgeObjectRelease();
}

uint64_t RobustScaler.quantileRange.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_5_20();
  return OUTLINED_FUNCTION_81(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t RobustScaler.quantileRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22ABDECCC();
  return OUTLINED_FUNCTION_81(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*RobustScaler.quantileRange.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t RobustScaler.init(quantileRange:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_5_20();
  return OUTLINED_FUNCTION_81(a2, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 32));
}

void RobustScaler.fitted<A>(to:eventHandler:)(_QWORD *a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v33 = a4;
  v7 = a1[2];
  v8 = sub_22ABDF5D8();
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - v10;
  v26 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_87();
  v32 = v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  v29 = (char *)&v25 - v15;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v25 - v17;
  v34 = v7;
  v35 = a2;
  v19 = a1[4];
  v36 = a1[3];
  v37 = v19;
  v31 = v19;
  v30 = a1[5];
  v38 = v30;
  v39 = a3;
  v40 = sub_22ABDEEAC();
  v20 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v20);
  sub_22AA3BB08();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7) != 1)
  {
    v23 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v23(v18, v11, v7);
    sub_22ABDECCC();
    sub_22ABDFAF4();
    if ((sub_22AA2F904() & 1) == 0)
      sub_22AA2F98C(0x6353747375626F52, 0xEC00000072656C61);
    v24 = v32;
    v23((char *)v32, v18, v7);
    RobustScaler.Transformer.init(median:interQuartileRange:)(v24, v7, v33);
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
  sub_22A9B7B50();
  v21 = swift_allocError();
  *(_QWORD *)v22 = 0xD000000000000013;
  *(_QWORD *)(v22 + 8) = 0x800000022ABE75A0;
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  *(_BYTE *)(v22 + 32) = 2;
  swift_willThrow(v21);
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22ABA3E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 16);
  OUTLINED_FUNCTION_24_11(a2, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, v4);
}

void RobustScaler.Transformer.init(median:interQuartileRange:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for RobustScaler.Transformer();
}

uint64_t sub_22ABA3F50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for RobustScaler.Transformer()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22ABA3F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;

  RobustScaler.fitted<A>(to:eventHandler:)(a7, a5, a6, a1);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v7 + 8));
}

uint64_t RobustScaler.Transformer.median.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_31_2(a1, a2);
}

uint64_t RobustScaler.Transformer.median.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*RobustScaler.Transformer.median.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t RobustScaler.Transformer.interQuartileRange.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_31_2(a1, a2);
}

uint64_t RobustScaler.Transformer.interQuartileRange.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*RobustScaler.Transformer.interQuartileRange.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t RobustScaler.Transformer.applied(to:eventHandler:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  char v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a2);
  OUTLINED_FUNCTION_0();
  v25 = v6;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v24 - v14;
  v24 = v16;
  OUTLINED_FUNCTION_23_13(v16, v17);
  OUTLINED_FUNCTION_23_13((uint64_t)v15, v2);
  v18 = OUTLINED_FUNCTION_42_10();
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  OUTLINED_FUNCTION_14_28();
  if ((v18 & 1) != 0)
  {
    OUTLINED_FUNCTION_23_13((uint64_t)v15, v3);
    OUTLINED_FUNCTION_44_13();
    sub_22ABDFB0C();
    OUTLINED_FUNCTION_14_28();
  }
  OUTLINED_FUNCTION_23_13((uint64_t)v12, v3 + *(int *)(a1 + 52));
  v20 = OUTLINED_FUNCTION_42_10();
  v19(v12, v8);
  v21 = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v25, v3, a1);
  if ((v20 & 1) == 0)
    return OUTLINED_FUNCTION_37_14();
  OUTLINED_FUNCTION_23_13((uint64_t)v15, v21 + *(int *)(a1 + 52));
  v22 = sub_22ABDEBB8();
  OUTLINED_FUNCTION_14_28();
  result = OUTLINED_FUNCTION_37_14();
  if ((v22 & 1) == 0)
  {
    OUTLINED_FUNCTION_23_13((uint64_t)v15, v3 + *(int *)(a1 + 52));
    OUTLINED_FUNCTION_44_13();
    sub_22ABDEB94();
    return OUTLINED_FUNCTION_14_28();
  }
  return result;
}

void RobustScaler.Transformer.hash(into:)()
{
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_38();
}

uint64_t static RobustScaler.Transformer.== infix(_:_:)()
{
  if ((sub_22ABDECFC() & 1) != 0)
    type metadata accessor for RobustScaler.Transformer();
  return 0;
}

uint64_t sub_22ABA42EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E616964656DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000022ABE7610)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22ABA43D0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000012;
  else
    return 0x6E616964656DLL;
}

uint64_t sub_22ABA4408()
{
  char *v0;

  return sub_22ABA43D0(*v0);
}

uint64_t sub_22ABA441C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22ABA42EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22ABA444C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22AC00008, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22ABA4480(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22AC00008, a1);
  return sub_22ABE02F8();
}

uint64_t RobustScaler.Transformer.hashValue.getter()
{
  sub_22ABE0244();
  RobustScaler.Transformer.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22ABA44F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  RobustScaler.Transformer.applied(to:eventHandler:)(a5, a1);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v5 + 8));
}

uint64_t sub_22ABA4540()
{
  sub_22ABE0244();
  RobustScaler.Transformer.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22ABA4580()
{
  return static RobustScaler.Transformer.== infix(_:_:)();
}

uint64_t RobustScaler.Transformer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  return 0;
}

void RobustScaler.Transformer.encode(to:)()
{
  OUTLINED_FUNCTION_21_70();
}

void sub_22ABA46AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  MEMORY[0x22E2E4D80](&unk_22AC00008, a1);
  v11 = sub_22ABDFD58();
  v12 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&a9 - v14;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v10 - 112) = 0;
  OUTLINED_FUNCTION_9_13();
  v16 = *(_QWORD *)(v10 - 72);
  sub_22ABDFD4C();
  if (!v16)
  {
    *(_BYTE *)(v10 - 112) = 1;
    OUTLINED_FUNCTION_9_13();
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for RobustScaler.Transformer.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22ABA47AC()
{
  RobustScaler.Transformer.encode(to:)();
}

void RobustScaler.Transformer.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[14];

  v10[0] = a2;
  v10[3] = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_87();
  v10[2] = v3;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v4);
  v10[5] = (char *)v10 - v5;
  v10[10] = v6;
  v10[11] = v7;
  v10[12] = v8;
  v10[13] = v9;
  OUTLINED_FUNCTION_21_70();
}

void sub_22ABA4848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 - 120) = MEMORY[0x22E2E4D80](&unk_22AC00008, a1);
  v6 = sub_22ABDFCB0();
  *(_QWORD *)(v5 - 128) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for RobustScaler.Transformer();
}

void sub_22ABA48B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v13 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&a9 - v15;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  *(_QWORD *)(v11 - 136) = v10;
  v17 = *(_QWORD *)(v11 - 72);
  sub_22ABE0298();
  if (v17)
  {
    OUTLINED_FUNCTION_8_0();
  }
  else
  {
    *(_QWORD *)(v11 - 120) = v13;
    v18 = *(_QWORD *)(v11 - 176);
    *(_QWORD *)(v11 - 72) = a1;
    v19 = *(_QWORD *)(v11 - 168);
    *(_BYTE *)(v11 - 112) = 0;
    sub_22ABDFC8C();
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    v21 = *(_QWORD *)(v11 - 152);
    v22 = *(_QWORD *)(v11 - 144);
    *(_QWORD *)(v11 - 152) = v20;
    v20(v16, v21, v22);
    *(_BYTE *)(v11 - 112) = 1;
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_3_15();
    v23 = *(_QWORD *)(v11 - 72);
    (*(void (**)(char *, uint64_t, _QWORD))(v11 - 152))(&v16[*(int *)(v23 + 52)], v18, *(_QWORD *)(v11 - 144));
    v24 = *(_QWORD *)(v11 - 120);
    OUTLINED_FUNCTION_24_11(*(_QWORD *)(v11 - 192), (uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
    OUTLINED_FUNCTION_8_0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v23);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22ABA4A20()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABA4A30()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABA4A40(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  RobustScaler.Transformer.init(from:)(*(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_22ABA4A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[5];
  uint64_t v29;

  v27 = a2;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  v26 = v5;
  v6 = sub_22ABDE324();
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_87();
  v23 = v8;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v2 + *(int *)(a1 + 52), v12, v14);
  sub_22A99CE8C();
  OUTLINED_FUNCTION_12_29();
  v17 = 1.0 / *(double *)v28;
  sub_22ABDEB88();
  OUTLINED_FUNCTION_12_29();
  sub_22AA25620(v17, -*(double *)v28);
  v19 = v23;
  v18 = v24;
  v20 = v25;
  OUTLINED_FUNCTION_24_11(v23, (uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
  memset(v28, 0, sizeof(v28));
  v29 = 0;
  v21 = v26;
  sub_22ABDE3CC();
  sub_22AB314C8(v19, v21, v28, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v20);
}

uint64_t sub_22ABA4C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22ABA4A60(a1, a2);
}

void type metadata accessor for RobustScaler()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22ABA4C64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  void (*v16)(_QWORD *, _QWORD *, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  v12 = (v11 & v10) + v7;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    v16 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16);
    v16(a1, a2, *(_QWORD *)(a3 + 16));
    v16((_QWORD *)(((unint64_t)a1 + v11) & v10), (_QWORD *)(((unint64_t)a2 + v11) & v10), v5);
  }
  OUTLINED_FUNCTION_38();
}

void sub_22ABA4D0C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_103();
  OUTLINED_FUNCTION_6_118(v0, v1);
  OUTLINED_FUNCTION_0_101();
  OUTLINED_FUNCTION_38();
}

void sub_22ABA4D3C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_103();
  OUTLINED_FUNCTION_6_118(v0, v1);
  OUTLINED_FUNCTION_0_101();
  OUTLINED_FUNCTION_38();
}

void sub_22ABA4D6C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_103();
  OUTLINED_FUNCTION_6_118(v0, v1);
  OUTLINED_FUNCTION_0_101();
  OUTLINED_FUNCTION_38();
}

void sub_22ABA4D9C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_103();
  OUTLINED_FUNCTION_6_118(v0, v1);
  OUTLINED_FUNCTION_0_101();
  OUTLINED_FUNCTION_38();
}

uint64_t sub_22ABA4DCC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22ABA4E8C + 4 * byte_22ABFFD90[(v8 - 1)]))();
}

void sub_22ABA4ED8(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~*(unsigned __int8 *)(v6 + 80)) + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if (v8)
      {
        v15 = v13 & ~(-1 << v9);
        OUTLINED_FUNCTION_104();
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          *(_BYTE *)(a1 + 2) = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      OUTLINED_FUNCTION_104();
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_22ABA5074(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22ABA50C0 + 4 * byte_22ABFFDA3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22ABA50F4 + 4 * byte_22ABFFD9E[v4]))();
}

uint64_t sub_22ABA50F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABA50FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22ABA5104);
  return result;
}

uint64_t sub_22ABA5110(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22ABA5118);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22ABA511C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABA5124(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22ABA5130()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABA5140()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABA5150()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_101()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(unint64_t, unint64_t, uint64_t);

  return v4((*(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v3 + 80) + v1) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80), (*(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v3 + 80) + v0) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80), v2);
}

uint64_t OUTLINED_FUNCTION_6_118(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void OUTLINED_FUNCTION_21_70()
{
  type metadata accessor for RobustScaler.Transformer.CodingKeys();
}

__n128 BoostedTreeRegressor.configuration.getter@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __n128 result;

  v3 = v2 + *(int *)(a1 + 32);
  v4 = *(_BYTE *)(v3 + 56);
  v5 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v3 + 40);
  *(_BYTE *)(a2 + 56) = v4;
  result = *(__n128 *)(v3 + 64);
  *(__n128 *)(a2 + 64) = result;
  *(_QWORD *)(a2 + 80) = v5;
  return result;
}

double sub_22ABA51F0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  __int128 v14;
  uint64_t v15;

  v5 = type metadata accessor for BoostedTreeRegressor(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  BoostedTreeRegressor.configuration.getter(v5, (uint64_t)&v9);
  v6 = v13;
  v7 = v15;
  *(_QWORD *)a4 = v9;
  *(_OWORD *)(a4 + 8) = v10;
  *(_OWORD *)(a4 + 24) = v11;
  *(_OWORD *)(a4 + 40) = v12;
  *(_BYTE *)(a4 + 56) = v6;
  result = *(double *)&v14;
  *(_OWORD *)(a4 + 64) = v14;
  *(_QWORD *)(a4 + 80) = v7;
  return result;
}

double sub_22ABA5268(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  __int128 v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a4 + a3 - 8);
  v5 = *((_BYTE *)a1 + 56);
  v6 = a1[10];
  v10 = *a1;
  v7 = *(_OWORD *)(a1 + 3);
  v11 = *(_OWORD *)(a1 + 1);
  v12 = v7;
  v13 = *(_OWORD *)(a1 + 5);
  v14 = v5;
  v15 = *((_OWORD *)a1 + 4);
  v16 = v6;
  v8 = type metadata accessor for BoostedTreeRegressor(0, v4, a3, a4);
  *(_QWORD *)&result = BoostedTreeRegressor.configuration.setter((uint64_t)&v10, v8).n128_u64[0];
  return result;
}

__n128 BoostedTreeRegressor.configuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  v3 = *(_BYTE *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = v2 + *(int *)(a2 + 32);
  *(_QWORD *)v5 = *(_QWORD *)a1;
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(a1 + 40);
  *(_BYTE *)(v5 + 56) = v3;
  result = *(__n128 *)(a1 + 64);
  *(__n128 *)(v5 + 64) = result;
  *(_QWORD *)(v5 + 80) = v4;
  return result;
}

void (*BoostedTreeRegressor.configuration.modify(_QWORD *a1, uint64_t a2))(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = malloc(0x68uLL);
  *a1 = v5;
  v5[11] = a2;
  v5[12] = v2;
  BoostedTreeRegressor.configuration.getter(a2, (uint64_t)v5);
  return sub_22ABA5374;
}

void sub_22ABA5374(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[7];
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *a1;
  v3 = (*a1)[1];
  v2 = (*a1)[2];
  v5 = (*a1)[3];
  v4 = (*a1)[4];
  v7 = (*a1)[5];
  v6 = (*a1)[6];
  v8 = *((_BYTE *)*a1 + 56);
  v10 = (*a1)[8];
  v9 = (*a1)[9];
  v11 = (*a1)[11];
  v12 = (*a1)[10];
  v13[0] = **a1;
  v13[1] = v3;
  v13[2] = v2;
  v13[3] = v5;
  v13[4] = v4;
  v13[5] = v7;
  v13[6] = v6;
  v14 = v8;
  v15 = v10;
  v16 = v9;
  v17 = v12;
  BoostedTreeRegressor.configuration.setter((uint64_t)v13, v11);
  free(v1);
}

uint64_t BoostedTreeRegressor.annotationColumnID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_37_9();
  return OUTLINED_FUNCTION_81(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t BoostedTreeRegressor.annotationColumnID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_37_9();
  return OUTLINED_FUNCTION_81(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*BoostedTreeRegressor.annotationColumnID.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t BoostedTreeRegressor.featureColumnNames.getter()
{
  return sub_22ABDEAEC();
}

void BoostedTreeRegressor.featureColumnNames.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  OUTLINED_FUNCTION_21();
}

uint64_t (*BoostedTreeRegressor.featureColumnNames.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t BoostedTreeRegressor.init(annotationColumnName:featureColumnNames:configuration:)@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  v12 = a2[5];
  v13 = a2[6];
  v14 = *((_BYTE *)a2 + 56);
  v15 = a2[8];
  v16 = a2[9];
  v17 = a2[10];
  sub_22ABDD3D0();
  result = type metadata accessor for BoostedTreeRegressor(0, a3, v18, v19);
  *(_QWORD *)(a4 + *(int *)(result + 28)) = a1;
  v21 = a4 + *(int *)(result + 32);
  *(_QWORD *)v21 = v7;
  *(_QWORD *)(v21 + 8) = v8;
  *(_QWORD *)(v21 + 16) = v9;
  *(_QWORD *)(v21 + 24) = v10;
  *(_QWORD *)(v21 + 32) = v11;
  *(_QWORD *)(v21 + 40) = v12;
  *(_QWORD *)(v21 + 48) = v13;
  *(_BYTE *)(v21 + 56) = v14;
  *(_QWORD *)(v21 + 64) = v15;
  *(_QWORD *)(v21 + 72) = v16;
  *(_QWORD *)(v21 + 80) = v17;
  return result;
}

uint64_t type metadata accessor for BoostedTreeRegressor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BoostedTreeRegressor);
}

uint64_t BoostedTreeRegressor.fitted(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0ECF8);
  v7[9] = OUTLINED_FUNCTION_0_0();
  v8 = sub_22ABDD2EC();
  v7[10] = v8;
  v7[11] = *(_QWORD *)(v8 - 8);
  v7[12] = OUTLINED_FUNCTION_0_0();
  v9 = sub_22ABDD400();
  v7[13] = v9;
  v7[14] = *(_QWORD *)(v9 - 8);
  v7[15] = OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22ABA55F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;

  v1 = v0[3];
  v2 = *(_QWORD *)(v0[8] + *(int *)(v0[7] + 28));
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v1;
  sub_22ABDEAEC();
  v4 = sub_22A9FC144((uint64_t (*)(void))sub_22ABA6C54, v3, v2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_99(0x800000022AC00040, (uint64_t)&v58);
  if (!v59)
  {
    OUTLINED_FUNCTION_51_1();
    OUTLINED_FUNCTION_81_1();
    sub_22A9B7B50();
    v10 = OUTLINED_FUNCTION_53();
    *v11 = 0xD000000000000014;
    v11[1] = 0x800000022AC00040;
    OUTLINED_FUNCTION_13_25(v10, (uint64_t)v11, 0xD000000000000064);
    goto LABEL_2;
  }
  v56 = v4;
  v54 = v60;
  v7 = *(_QWORD *)(v0[7] + 16);
  sub_22ABDD3C4();
  v8 = sub_22ABDD3B8();
  sub_22AB7B508(v8, v9, 0xD000000000000014, 0x800000022AC00040);
  v46 = v7;
  v12 = v0[15];
  v52 = v0[13];
  v14 = v0[9];
  v13 = v0[10];
  v48 = v0[14];
  v50 = v0[4];
  OUTLINED_FUNCTION_30();
  v15 = sub_22ABDD3B8();
  MEMORY[0x22E2E15A0](v15);
  OUTLINED_FUNCTION_30();
  sub_22AAED660();
  v16 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v16(v12, v52);
  sub_22A9BCAEC(v50, v14);
  if (__swift_getEnumTagSinglePayload(v14, 1, v13) != 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[11] + 32))(v0[12], v0[9], v0[10]);
    v23 = v56;
    OUTLINED_FUNCTION_8_99(0x800000022AC00040, (uint64_t)&v58);
    if (v12)
    {
      OUTLINED_FUNCTION_3_75();
      OUTLINED_FUNCTION_51_1();
      swift_release();
      swift_release();
    }
    else
    {
      v30 = v59;
      v31 = v61;
      v32 = v0[12];
      if (v59)
      {
        v51 = v58;
        v53 = v60;
        sub_22AB7AF88(v0[8], 0xD000000000000014, 0x800000022AC00040, v46);
        v37 = v0[15];
        v49 = v0[10];
        v41 = v0[8];
        v42 = v0[7];
        v43 = v0[13];
        v47 = v0[11];
        v44 = v0[12];
        v45 = (void (*)(uint64_t *))v0[5];
        v38 = sub_22ABDD3B8();
        MEMORY[0x22E2E15A0](v38);
        swift_bridgeObjectRelease();
        sub_22AAED660();
        v16(v37, v43);
        OUTLINED_FUNCTION_0_102((__n128 *)(v41 + *(int *)(v42 + 32)));
        v62 = v40;
        v63 = v39;
        LOBYTE(v64) = v54;
        v65 = v16;
        v66 = v51;
        v67 = v30;
        v68 = v53;
        v69 = v31;
        BaseTreeRegressor.fitted(trainingFeatures:trainingAnnotations:validationFeatures:validationAnnotations:eventHandler:)((uint64_t)&v62, (uint64_t)&v66, v45, v57);
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v44, v49);
        OUTLINED_FUNCTION_3_26();
        OUTLINED_FUNCTION_72_1();
        swift_release();
        OUTLINED_FUNCTION_81_1();
        v24 = v57[1];
        v55 = v57[0];
        v25 = v57[2];
        goto LABEL_9;
      }
      v33 = v0[10];
      v34 = v0[11];
      OUTLINED_FUNCTION_51_1();
      OUTLINED_FUNCTION_3_26();
      OUTLINED_FUNCTION_72_1();
      swift_release();
      sub_22A9B7B50();
      v35 = OUTLINED_FUNCTION_53();
      *v36 = 0xD000000000000014;
      v36[1] = 0x800000022AC00040;
      OUTLINED_FUNCTION_13_25(v35, (uint64_t)v36, 0xD00000000000006ELL);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
LABEL_2:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  v17 = v0[8];
  v18 = v0[6];
  v19 = v0[7];
  v20 = v0[5];
  sub_22A9BCB34(v0[9]);
  OUTLINED_FUNCTION_0_102((__n128 *)(v17 + *(int *)(v19 + 32)));
  v66 = v22;
  v67 = v21;
  v68 = v54;
  v69 = v19;
  BaseTreeRegressor.fitted(features:annotations:eventHandler:)((uint64_t)&v66, v20, v18, &v62);
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_81_1();
  v23 = v56;
  v24 = v63;
  v55 = v62;
  v25 = v64;
LABEL_9:
  swift_retain();
  v26 = sub_22ABDD3B8();
  v28 = v27;
  if ((sub_22AA2F904() & 1) == 0)
    sub_22AA2F98C(0xD000000000000012, 0x800000022ABE6470);
  v29 = (uint64_t *)v0[2];
  OUTLINED_FUNCTION_21_3();
  *v29 = v26;
  v29[1] = v28;
  v29[2] = v23;
  v29[3] = v55;
  v29[4] = v24;
  v29[5] = v25;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void BoostedTreeRegressor.encode(_:to:)(uint64_t a1, uint64_t a2)
{
  sub_22ABA661C(a1, a2);
}

void BoostedTreeRegressor.decode(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_22AB4C00C(a1, &v29);
  if (!v4)
  {
    v7 = v31;
    v8 = v33;
    v25 = v29;
    v26 = v32;
    v23 = a3;
    v24 = v34;
    v9 = (uint64_t *)(v3 + *(int *)(a2 + 32));
    v10 = *v9;
    v11 = v9[2];
    v27 = v9[1];
    v28 = v30;
    v12 = v9[3];
    v13 = v9[4];
    v15 = v9[5];
    v14 = v9[6];
    v16 = *((_BYTE *)v9 + 56);
    v17 = v9[8];
    v18 = v9[9];
    v19 = v9[10];
    swift_retain();
    v20 = OUTLINED_FUNCTION_6_119();
    OUTLINED_FUNCTION_23_66(v20);
    v21 = OUTLINED_FUNCTION_6_119();
    OUTLINED_FUNCTION_23_66(v21);
    OUTLINED_FUNCTION_35_2();
    v29 = v10;
    v30 = v27;
    v31 = v11;
    v32 = v12;
    v33 = v13;
    v34 = v15;
    v35 = v14;
    v36 = v16;
    v37 = v17;
    v38 = v18;
    v39 = v19;
    v22 = swift_retain();
    sub_22A9F53AC(v22, v26, 0);
    OUTLINED_FUNCTION_35_2();
    *v23 = v25;
    v23[1] = v28;
    v23[2] = v7;
    v23[3] = v26;
    v23[4] = v8;
    v23[5] = v24;
  }
}

void (*sub_22ABA5D10(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BoostedTreeRegressor.annotationColumnID.modify();
  return sub_22A9B4798;
}

uint64_t sub_22ABA5D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_22A99DE80;
  return BoostedTreeRegressor.fitted(to:validateOn:eventHandler:)(a1, a2, a3, a4, a5, a6);
}

void sub_22ABA5DE4(uint64_t a1, uint64_t a2)
{
  BoostedTreeRegressor.encodeWithOptimizer(_:to:)(a1, a2);
}

void sub_22ABA5DF8(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BoostedTreeRegressor.decode(from:)(a1, a2, a3);
}

uint64_t BoostedTreeRegressor.makeTransformer()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  type metadata accessor for XGBooster();
  swift_allocObject();
  v2 = sub_22AB7C374(0, 0);
  sub_22A9F53AC(v2, 0, 1);
  OUTLINED_FUNCTION_37_9();
  result = sub_22ABDD3B8();
  *a1 = result;
  a1[1] = v4;
  a1[2] = MEMORY[0x24BEE4AF8];
  a1[3] = 0;
  a1[4] = v2;
  a1[5] = 0;
  return result;
}

uint64_t BoostedTreeRegressor.update(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[8] = a5;
  v6[9] = v5;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  v7 = sub_22ABDD400();
  v6[10] = v7;
  v6[11] = *(_QWORD *)(v7 - 8);
  v6[12] = OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22ABA5FAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[2];
  char v41;
  uint64_t v42;

  v1 = v0[4];
  v4 = *(_QWORD *)(v1 + 24);
  v2 = (uint64_t *)(v1 + 24);
  v3 = v4;
  if (v4)
  {
    v5 = *(_QWORD *)(v0[4] + 16);
  }
  else
  {
    v5 = sub_22ABA6338(v0[5], v0[8]);
    v18 = v0[4];
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + 16) = v5;
    v20 = *(_QWORD *)(v5 + 16);
    if (v20)
    {
      v3 = 0;
      v21 = (unsigned __int8 *)(v5 + 56);
      while (1)
      {
        v22 = *((_QWORD *)v21 - 1);
        if (*v21 >= 4u)
          v22 = 1;
        v23 = __OFADD__(v3, v22);
        v3 += v22;
        if (v23)
          break;
        v21 += 32;
        if (!--v20)
          goto LABEL_19;
      }
      __break(1u);
      goto LABEL_21;
    }
    v3 = 0;
LABEL_19:
    *v2 = v3;
  }
  sub_22AAEADEC(v5, 0xD000000000000014, 0x800000022AC00040, (uint64_t)&v33);
  v6 = v34;
  v7 = v35;
  if (!(_QWORD)v34)
  {
    swift_release();
    sub_22A9B7B50();
    v24 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v25 = 0xD000000000000014;
    *(_QWORD *)(v25 + 8) = 0x800000022AC00040;
    *(_QWORD *)(v25 + 16) = 0xD000000000000064;
    *(_QWORD *)(v25 + 24) = 0x800000022ABE2470;
    v26 = 4;
LABEL_16:
    *(_BYTE *)(v25 + 32) = v26;
    swift_willThrow(v24);
    swift_task_dealloc();
    v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
  v8 = v33;
  if ((_QWORD)v34 == v3)
  {
    v9 = BYTE8(v34);
    v11 = v0[11];
    v10 = v0[12];
    v31 = v0[10];
    v32 = v0[6];
    v12 = v0[9] + *(int *)(v0[8] + 32);
    v13 = *(_BYTE *)(v12 + 56);
    v14 = *(_QWORD *)(v12 + 80);
    v33 = *(_QWORD *)v12;
    v15 = *(_OWORD *)(v12 + 24);
    v34 = *(_OWORD *)(v12 + 8);
    v35 = v15;
    v36 = *(_OWORD *)(v12 + 40);
    v37 = v13;
    v38 = *(_OWORD *)(v12 + 64);
    v39 = v14;
    v40[0] = v8;
    v40[1] = v3;
    v41 = v9;
    v42 = v7;
    OUTLINED_FUNCTION_37_9();
    v16 = sub_22ABDD3B8();
    MEMORY[0x22E2E15A0](v16);
    swift_bridgeObjectRelease();
    v17 = sub_22AAED660();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v31);
    BaseTreeRegressor.update(_:features:annotations:eventHandler:)(v2, (uint64_t)v40, v17, v32);
    OUTLINED_FUNCTION_72_1();
    OUTLINED_FUNCTION_21_3();
    swift_task_dealloc();
    v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(result + 32) = v8;
  if ((unsigned __int128)(v8 * (__int128)v6) >> 64 == (v8 * v6) >> 63)
  {
    v27 = result;
    *(_QWORD *)(result + 40) = v8 * v6;
    v33 = 0;
    *(_QWORD *)&v34 = 0xE000000000000000;
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v33 = 0x6465746365707845;
    *(_QWORD *)&v34 = 0xE900000000000020;
    v0[2] = v3;
    OUTLINED_FUNCTION_20_61();
    OUTLINED_FUNCTION_19_63();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_19_63();
    v0[3] = v6;
    OUTLINED_FUNCTION_20_61();
    OUTLINED_FUNCTION_19_63();
    OUTLINED_FUNCTION_51_1();
    swift_release();
    v29 = v33;
    v28 = v34;
    sub_22A9B7B50();
    v24 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v25 = v27;
    *(_QWORD *)(v25 + 8) = v29;
    *(_QWORD *)(v25 + 16) = v28;
    *(_QWORD *)(v25 + 24) = 0;
    v26 = 6;
    goto LABEL_16;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_22ABA6338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  v3 = *(_QWORD *)(v2 + *(int *)(a2 + 28));
  v6[2] = a1;
  sub_22ABDEAEC();
  v4 = sub_22A9FC144((uint64_t (*)(void))sub_22ABA6C38, (uint64_t)v6, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22ABA63A0(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[3];
  uint64_t *v17;

  v17 = a3;
  v4 = sub_22ABDD400();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = *a1;
  v9 = a1[1];
  sub_22ABDD250();
  if ((v11 & 1) == 0)
  {
    v16[0] = v7;
    v16[1] = v5;
    v16[2] = v4;
    OUTLINED_FUNCTION_41_5();
  }
  sub_22A9FA7DC();
  v12 = OUTLINED_FUNCTION_53();
  *(_QWORD *)v13 = 0xD000000000000014;
  *(_QWORD *)(v13 + 8) = 0x800000022AC00040;
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = v9;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)(v13 + 48) = 0u;
  *(_BYTE *)(v13 + 64) = 0;
  v14 = sub_22ABDEAEC();
  result = swift_willThrow(v14);
  *v17 = v12;
  return result;
}

void sub_22ABA6568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_22ABDD3E8();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 120) + 8))(v0, *(_QWORD *)(v3 - 112));
  sub_22ABE0304();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  sub_22ABDEDC8();
  v4 = *(_QWORD *)(v3 - 96);
  v5 = *(_QWORD *)(v3 - 88);
  sub_22A9B7B50();
  OUTLINED_FUNCTION_53();
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = v2 | 0x8000000000000000;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 32) = 4;
  JUMPOUT(0x22ABA64E4);
}

void BoostedTreeRegressor.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2)
{
  sub_22ABA661C(a1, a2);
}

void sub_22ABA661C(uint64_t a1, uint64_t a2)
{
  sub_22AB4BDC0(a2);
}

void BoostedTreeRegressor.decodeWithOptimizer(from:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_22AB4C00C(a1, a2);
}

uint64_t sub_22ABA667C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A99E4B4;
  return BoostedTreeRegressor.update(_:with:eventHandler:)(a1, a2, a3, a4, a5);
}

void sub_22ABA66F8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  BoostedTreeRegressor.decodeWithOptimizer(from:)(a1, a2);
}

_UNKNOWN **sub_22ABA670C()
{
  return &protocol witness table for TreeRegressorModel;
}

uint64_t sub_22ABA6718(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for BoostedTreeRegressor<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22ABA674C()
{
  return 8;
}

_QWORD *sub_22ABA6758(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_22ABA6764()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD3C4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22ABA67E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD3C4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 32);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    memcpy((char *)a1 + v8, (char *)a2 + v8, 0x58uLL);
    sub_22ABDEAEC();
  }
  return a1;
}

uint64_t sub_22ABA688C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22ABA68D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  memcpy((void *)(a1 + v7), (const void *)(a2 + v7), 0x58uLL);
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22ABA694C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  return a1;
}

uint64_t sub_22ABA6A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  memcpy((void *)(a1 + v7), (const void *)(a2 + v7), 0x58uLL);
  return a1;
}

uint64_t sub_22ABA6A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  v10 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  return a1;
}

uint64_t sub_22ABA6B3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22ABA6B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_37_9();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_22ABA6BC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22ABA6BCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_37_9();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
    OUTLINED_FUNCTION_21();
  }
}

uint64_t sub_22ABA6C38(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_22ABA63A0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_22ABA6C54(uint64_t *a1, uint64_t *a2)
{
  return sub_22ABA6C38(a1, a2);
}

__n128 OUTLINED_FUNCTION_0_102@<Q0>(__n128 *a1@<X8>)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_6_119()
{
  return 0x74656D5F6C617665;
}

uint64_t OUTLINED_FUNCTION_8_99@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22AAEADEC(v2, 0xD000000000000014, a1, a2);
}

uint64_t OUTLINED_FUNCTION_17_73()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_19_63()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_20_61()
{
  return sub_22ABDFD7C();
}

id OUTLINED_FUNCTION_23_66(uint64_t a1)
{
  return sub_22AB7B960(a1);
}

char *sub_22ABA6D0C(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_22ABDD8B0();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  }
  return v4;
}

uint64_t sub_22ABA6DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22ABDD8B0();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 24), v5);
}

char *sub_22ABA6E34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_22ABDD8B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *sub_22ABA6EC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_22ABDD8B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *sub_22ABA6F4C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_22ABDD8B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *sub_22ABA6FD8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_22ABDD8B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

uint64_t sub_22ABA7064()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22ABA7070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_7_104();
  return __swift_getEnumTagSinglePayload(v4 + *(int *)(a3 + 20), v3, v6);
}

uint64_t sub_22ABA70A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22ABA70B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = OUTLINED_FUNCTION_7_104();
  return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), v4, v4, v7);
}

uint64_t type metadata accessor for SpatialConvolution()
{
  uint64_t result;

  result = qword_255B1B3E8;
  if (!qword_255B1B3E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22ABA7128()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD8B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22ABA71A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10FE8);
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_33();
  v3 = v2 - v1;
  sub_22ABDDA0C();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  type metadata accessor for SpatialConvolution();
  sub_22ABDD8B0();
  sub_22ABDD7FC();
  sub_22ABDD970();
  v6 = sub_22ABDD4D8();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v6);
  sub_22ABDD8D4();
  OUTLINED_FUNCTION_1_99();
  OUTLINED_FUNCTION_2_110();
  sub_22ABDD8C8();
  OUTLINED_FUNCTION_1_99();
  OUTLINED_FUNCTION_2_110();
  sub_22ABDD7FC();
  OUTLINED_FUNCTION_1_99();
  OUTLINED_FUNCTION_2_110();
  sub_22ABDD8C8();
  return OUTLINED_FUNCTION_1_99();
}

uint64_t sub_22ABA734C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x656C616373 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x74756C6F766E6F63 && a2 == 0xEC000000316E6F69;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x74756C6F766E6F63 && a2 == 0xEC000000326E6F69)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_22ABA74B8(char a1)
{
  if (a1)
    return 0x74756C6F766E6F63;
  else
    return 0x656C616373;
}

void sub_22ABA751C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B450);
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_33();
  v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABA7AB4();
  sub_22ABE02B0();
  sub_22ABDFD34();
  if (!v1)
  {
    type metadata accessor for SpatialConvolution();
    sub_22ABDD8B0();
    sub_22A9BED8C(&qword_255B14B38, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BE58], MEMORY[0x24BE6BE68]);
    OUTLINED_FUNCTION_5_96();
    OUTLINED_FUNCTION_5_96();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v4);
  OUTLINED_FUNCTION_16();
}

void sub_22ABA7664(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;

  v18 = a2;
  v22 = sub_22ABDD8B0();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - v8;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B440);
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v23 = type metadata accessor for SpatialConvolution();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_33();
  v13 = (uint64_t *)(v12 - v11);
  *(_QWORD *)(v12 - v11) = 3;
  v14 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_22ABA7AB4();
  sub_22ABE0298();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    v17[1] = v3;
    v26 = 0;
    *v13 = sub_22ABDFC74();
    v25 = 1;
    sub_22A9BED8C(&qword_255B14B00, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BE58], MEMORY[0x24BE6BE70]);
    v15 = v22;
    OUTLINED_FUNCTION_3_113();
    v16 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v16((char *)v13 + *(int *)(v23 + 20), v9, v15);
    v24 = 2;
    OUTLINED_FUNCTION_3_113();
    OUTLINED_FUNCTION_0_103();
    v16((char *)v13 + *(int *)(v23 + 24), v6, v15);
    sub_22ABA7AF0((uint64_t)v13, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    sub_22ABA7B34((uint64_t)v13);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22ABA78E0()
{
  char *v0;

  return sub_22ABA74B8(*v0);
}

uint64_t sub_22ABA78E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22ABA734C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22ABA790C()
{
  sub_22ABA7AB4();
  return sub_22ABE02EC();
}

uint64_t sub_22ABA7934()
{
  sub_22ABA7AB4();
  return sub_22ABE02F8();
}

void sub_22ABA7960(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22ABA7664(a1, a2);
}

void sub_22ABA7974(_QWORD *a1)
{
  sub_22ABA751C(a1);
}

uint64_t sub_22ABA7988()
{
  sub_22A9BED8C(&qword_255B14CD8, (uint64_t (*)(uint64_t))type metadata accessor for SpatialConvolution, (uint64_t)&unk_22AC001D8);
  return sub_22ABDD82C();
}

uint64_t sub_22ABA79D8()
{
  sub_22A9BED8C(&qword_255B14CD8, (uint64_t (*)(uint64_t))type metadata accessor for SpatialConvolution, (uint64_t)&unk_22AC001D8);
  return sub_22ABDD844();
}

uint64_t sub_22ABA7A30()
{
  return sub_22A9BED8C(&qword_255B1B428, (uint64_t (*)(uint64_t))type metadata accessor for SpatialConvolution, (uint64_t)&unk_22AC0016C);
}

uint64_t sub_22ABA7A5C()
{
  return sub_22A9BED8C(&qword_255B1B430, (uint64_t (*)(uint64_t))type metadata accessor for SpatialConvolution, (uint64_t)&unk_22AC0013C);
}

uint64_t sub_22ABA7A88()
{
  return sub_22A9BED8C(&qword_255B1B438, (uint64_t (*)(uint64_t))type metadata accessor for SpatialConvolution, (uint64_t)&unk_22AC00114);
}

unint64_t sub_22ABA7AB4()
{
  unint64_t result;

  result = qword_255B1B448;
  if (!qword_255B1B448)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC002FC, &type metadata for SpatialConvolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1B448);
  }
  return result;
}

uint64_t sub_22ABA7AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SpatialConvolution();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22ABA7B34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SpatialConvolution();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for SpatialConvolution.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22ABA7BBC + 4 * byte_22AC000F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22ABA7BF0 + 4 * byte_22AC000F0[v4]))();
}

uint64_t sub_22ABA7BF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABA7BF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22ABA7C00);
  return result;
}

uint64_t sub_22ABA7C0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22ABA7C14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22ABA7C18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABA7C20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpatialConvolution.CodingKeys()
{
  return &type metadata for SpatialConvolution.CodingKeys;
}

unint64_t sub_22ABA7C40()
{
  unint64_t result;

  result = qword_255B1B458;
  if (!qword_255B1B458)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC002D4, &type metadata for SpatialConvolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1B458);
  }
  return result;
}

unint64_t sub_22ABA7C80()
{
  unint64_t result;

  result = qword_255B1B460;
  if (!qword_255B1B460)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC00244, &type metadata for SpatialConvolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1B460);
  }
  return result;
}

unint64_t sub_22ABA7CC0()
{
  unint64_t result;

  result = qword_255B1B468;
  if (!qword_255B1B468)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC0026C, &type metadata for SpatialConvolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1B468);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_103()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_2_110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_3_113()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_5_96()
{
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_7_104()
{
  return sub_22ABDD8B0();
}

CVPixelBufferRef sub_22ABA7D64(void *a1, OSType a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  double Width;
  double v10;
  double Height;
  CVPixelBufferRef result;
  CVPixelBufferRef v13;
  uint64_t v14;
  uint64_t v15;
  CVPixelBufferRef pixelBufferOut[2];
  CGRect v17;
  CGRect v18;

  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  pixelBufferOut[0] = 0;
  objc_msgSend(a1, sel_extent);
  Width = CGRectGetWidth(v17);
  v10 = Width;
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(a1, sel_extent);
  Height = CGRectGetHeight(v18);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  if (Height >= 9.22337204e18)
    goto LABEL_17;
  result = (CVPixelBufferRef)CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], (uint64_t)v10, (uint64_t)Height, a2, 0, pixelBufferOut);
  v13 = pixelBufferOut[0];
  if ((_DWORD)result)
  {
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22A9B7B50();
    v14 = swift_allocError();
    *(_QWORD *)v15 = a3;
    *(_QWORD *)(v15 + 8) = a4;
    *(_QWORD *)(v15 + 16) = 0xD000000000000029;
    *(_QWORD *)(v15 + 24) = 0x800000022ABE7630;
    *(_BYTE *)(v15 + 32) = 4;
    swift_willThrow(v14);

    return v13;
  }
  if (pixelBufferOut[0])
  {
    objc_msgSend(v4, sel_render_toCVPixelBuffer_, a1, pixelBufferOut[0]);
    return v13;
  }
  __break(1u);
  return result;
}

CVPixelBufferRef sub_22ABA7F9C()
{
  uint64_t v0;
  CVPixelBufferRef v1;
  CGColorSpace *v2;
  double Width;
  double Height;
  CGColorSpaceRef DeviceRGB;
  uint64_t inited;
  void **v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  const __CFDictionary *v14;
  CVReturn v16;
  CVPixelBufferRef v17;
  CVPixelBufferRef v18;
  CVPixelBufferRef result;
  CVPixelBufferRef v20;
  __CVBuffer *v21;
  CGColorSpace *v22;
  CVPixelBufferRef v23[10];
  CGRect v24;
  CGRect v25;

  v23[9] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  v1 = (CVPixelBufferRef)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v0);
  v2 = (CGColorSpace *)-[__CVBuffer imageByApplyingCGOrientation:](v1, sel_imageByApplyingCGOrientation_, 7);
  -[CGColorSpace extent](v2, sel_extent);
  Width = CGRectGetWidth(v24);
  -[CGColorSpace extent](v2, sel_extent);
  Height = CGRectGetHeight(v25);
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B470);
  inited = swift_initStackObject();
  v7 = (void **)MEMORY[0x24BDC55E8];
  *(_OWORD *)(inited + 16) = xmmword_22ABE9FB0;
  v8 = *v7;
  v9 = (void *)*MEMORY[0x24BDBD270];
  *(_QWORD *)(inited + 32) = *v7;
  *(_QWORD *)(inited + 40) = v9;
  v10 = (void *)*MEMORY[0x24BDC55E0];
  *(_QWORD *)(inited + 48) = *MEMORY[0x24BDC55E0];
  *(_QWORD *)(inited + 56) = v9;
  type metadata accessor for CFString(0);
  v11 = v9;
  v12 = v8;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B478);
  sub_22ABA826C();
  sub_22ABDEAC8();
  v14 = (const __CFDictionary *)sub_22ABDEAA4();
  swift_bridgeObjectRelease();
  v23[0] = 0;
  if (Width <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((*(_QWORD *)&Width & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&Height & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_16;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  if (Height >= 9.22337204e18)
    goto LABEL_18;
  v16 = CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], (uint64_t)Width, (uint64_t)Height, 0x20u, v14, v23);
  v17 = v23[0];
  if (v16)
  {
    v18 = v23[0];
    v17 = 0;
LABEL_13:

    return v17;
  }
  result = (CVPixelBufferRef)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_init);
  if (v17)
  {
    v20 = result;
    v21 = v17;
    v22 = DeviceRGB;
    -[__CVBuffer render:toCVPixelBuffer:bounds:colorSpace:](v20, sel_render_toCVPixelBuffer_bounds_colorSpace_, v2, v21, v22, 0.0, 0.0, Width, Height);

    v18 = v2;
    v1 = v20;
    v2 = v22;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

unint64_t sub_22ABA826C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B0D9A8;
  if (!qword_255B0D9A8)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x22E2E4D80](&unk_22ABE8D60, v1);
    atomic_store(result, (unint64_t *)&qword_255B0D9A8);
  }
  return result;
}

double RandomImageNoiseGenerator.intensity.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void RandomImageNoiseGenerator.intensity.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*RandomImageNoiseGenerator.intensity.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

CreateMLComponents::RandomImageNoiseGenerator __swiftcall RandomImageNoiseGenerator.init(intensity:)(CreateMLComponents::RandomImageNoiseGenerator intensity)
{
  CreateMLComponents::RandomImageNoiseGenerator *v1;

  v1->intensity = intensity.intensity;
  return intensity;
}

id RandomImageNoiseGenerator.applied(to:eventHandler:)(void *a1)
{
  id result;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  sub_22A9A2DBC();
  result = OUTLINED_FUNCTION_0_104();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = result;
  result = OUTLINED_FUNCTION_0_104();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v4 = result;
  result = sub_22A9A2DF8();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = result;
  result = objc_msgSend(v3, sel_outputImage);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = result;
  OUTLINED_FUNCTION_2_111(v4, sel_setValue_forKey_);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF638]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 1.0);
  OUTLINED_FUNCTION_1_100();

  v8 = (void *)sub_22ABDF218();
  OUTLINED_FUNCTION_1_100();

  v9 = objc_msgSend(a1, sel_imageByClampingToExtent);
  objc_msgSend(v5, sel_setValue_forKey_, v9, *MEMORY[0x24BDBF928]);

  result = objc_msgSend(v4, sel_outputImage);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v10 = result;
  OUTLINED_FUNCTION_2_111(v5, sel_setValue_forKey_);

  result = objc_msgSend(v5, sel_outputImage);
  if (result)
  {
    v11 = result;
    objc_msgSend(a1, sel_extent);
    v12 = objc_msgSend(v11, sel_imageByCroppingToRect_);

    return v12;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_22ABA84EC(id *a1, void **a2)
{
  uint64_t v2;

  *a1 = RandomImageNoiseGenerator.applied(to:eventHandler:)(*a2);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v2 + 8));
}

ValueMetadata *type metadata accessor for RandomImageNoiseGenerator()
{
  return &type metadata for RandomImageNoiseGenerator;
}

id OUTLINED_FUNCTION_0_104()
{
  return sub_22A9A2DF8();
}

id OUTLINED_FUNCTION_2_111(id a1, SEL a2)
{
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(a1, a2, v3, v2);
}

uint64_t sub_22ABA855C()
{
  return sub_22AA3EF20();
}

void sub_22ABA8590(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v10 = a3[2];
  if (v10)
  {
    sub_22ABDEAEC();
    v11 = sub_22ABDF074();
    *(_QWORD *)(v11 + 16) = v10;
    bzero((void *)(v11 + 32), 8 * v10);
    v12 = a3;
  }
  else
  {
    v11 = sub_22ABDF074();
    *(_QWORD *)(v11 + 16) = 1;
    *(_QWORD *)(v11 + 32) = 0;
    v12 = &unk_24F4B9128;
  }
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_QWORD *)(a5 + 32) = v12;
  *(_QWORD *)(a5 + 40) = v11;
  *(_BYTE *)(a5 + 48) = 0;
}

uint64_t sub_22ABA8648(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, void (*a5)(_BYTE *))
{
  _BYTE v11[56];

  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABA8590(a1, a2, a3, a4, (uint64_t)v11);
  a5(v11);
  return sub_22ABA8714((uint64_t)v11);
}

uint64_t sub_22ABA86E8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;

  return sub_22ABA8648(a1, a2, a3, a4, *(void (**)(_BYTE *))(v4 + 40));
}

uint64_t sub_22ABA8714(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22ABA8760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 1;
  v3 = (uint64_t *)(v1 + 32);
  v4 = 1;
  while (1)
  {
    v5 = *v3++;
    result = v4 * v5;
    if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
      break;
    v4 = result;
    if (!--v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_22ABA87A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if ((*(_BYTE *)(v2 + 48) & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_0_105();
  }
  else
  {
    v9 = (_QWORD *)v2;
    v10 = *(_QWORD *)(v2 + 40);
    sub_22ABDEAEC();
    sub_22AB88B5C();
    v11 = *(_QWORD *)(v2 + 16);
    if ((sub_22ABC5840(0, v11) & 1) != 0)
    {
      v12 = OUTLINED_FUNCTION_0_105();
      __swift_storeEnumTagSinglePayload(v12, v13, v14, v15);
      return swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v11 + 16))
    {
      v17 = *v9;
      v18 = v9[1];
      v19 = v9[3];
      v20 = *(_QWORD *)(a1 + 16);
      sub_22AA3EF1C(v10, v17, v18, v11, v19, v20, *(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease();
      v5 = a2;
      v6 = 0;
      v7 = 1;
      v8 = v20;
    }
    else
    {
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(a1 + 16);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a2, *v9, v21);
      v5 = a2;
      v6 = 0;
      v7 = 1;
      v8 = v21;
    }
  }
  return __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
}

uint64_t sub_22ABA88B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22ABA88F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22ABA8954(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t sub_22ABA89F8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t sub_22ABA8A5C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22ABA8A9C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ScalarSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScalarSequence);
}

void sub_22ABA8AF8()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_105()
{
  uint64_t v0;

  return v0;
}

double LinearRegressor.Configuration.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = xmmword_22ABF8AF0;
  *(_QWORD *)(a1 + 16) = 25;
  result = 1.0;
  *(_OWORD *)(a1 + 24) = xmmword_22ABF8B00;
  *(_QWORD *)(a1 + 40) = 10;
  *(_WORD *)(a1 + 48) = 1;
  return result;
}

void LinearRegressor.Configuration.optimizationStrategy.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 49);
}

void LinearRegressor.configuration.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = *((_BYTE *)v1 + 48);
  v9 = *((_BYTE *)v1 + 49);
  sub_22A99CE8C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = 10;
  *(_BYTE *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 49) = v9;
  OUTLINED_FUNCTION_8_100();
}

double sub_22ABA8BB4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  double result;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  char v12;

  LinearRegressor.configuration.getter((uint64_t)&v7);
  v2 = v8;
  v3 = v10;
  v4 = v11;
  v5 = v12;
  *(_OWORD *)a1 = v7;
  *(_QWORD *)(a1 + 16) = v2;
  result = *(double *)&v9;
  *(_OWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 49) = v5;
  return result;
}

void sub_22ABA8C44(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  char v10;

  v1 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 5);
  v3 = *((_BYTE *)a1 + 48);
  v4 = *((_BYTE *)a1 + 49);
  v5 = *a1;
  v6 = v1;
  v7 = *(__int128 *)((char *)a1 + 24);
  v8 = v2;
  v9 = v3;
  v10 = v4;
  LinearRegressor.configuration.setter((uint64_t *)&v5);
}

void LinearRegressor.configuration.setter(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  OUTLINED_FUNCTION_35_39();
  *(_QWORD *)v1 = v6;
  *(_QWORD *)(v1 + 8) = v7;
  *(_QWORD *)(v1 + 16) = v8;
  *(_QWORD *)(v1 + 24) = v4;
  *(_QWORD *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 40) = 10;
  *(_BYTE *)(v1 + 48) = v2;
  *(_BYTE *)(v1 + 49) = v3;
  OUTLINED_FUNCTION_8_100();
}

void (*LinearRegressor.configuration.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void (*result)(uint64_t **);

  v5 = malloc(0x48uLL);
  *a1 = v5;
  v5[7] = a2;
  v5[8] = v2;
  v6 = *v2;
  v7 = v2[1];
  v8 = v2[2];
  v9 = v2[3];
  v10 = v2[4];
  LOBYTE(a1) = *((_BYTE *)v2 + 48);
  v11 = *((_BYTE *)v2 + 49);
  sub_22A99CE8C();
  *v5 = v6;
  v5[1] = v7;
  v5[2] = v8;
  v5[3] = v9;
  v5[4] = v10;
  v5[5] = 10;
  result = sub_22ABA8D74;
  *((_BYTE *)v5 + 48) = (_BYTE)a1;
  *((_BYTE *)v5 + 49) = v11;
  return result;
}

void sub_22ABA8D74(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9[6];
  char v10;
  char v11;

  v1 = *a1;
  v2 = (*a1)[1];
  v3 = (*a1)[2];
  v5 = (*a1)[3];
  v4 = (*a1)[4];
  v6 = (*a1)[5];
  v7 = *((_BYTE *)*a1 + 48);
  v8 = *((_BYTE *)*a1 + 49);
  v9[0] = **a1;
  v9[1] = v2;
  v9[2] = v3;
  v9[3] = v5;
  v9[4] = v4;
  v9[5] = v6;
  v10 = v7;
  v11 = v8;
  LinearRegressor.configuration.setter(v9);
  free(v1);
}

void LinearRegressor.init(configuration:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  OUTLINED_FUNCTION_35_39();
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = 10;
  *(_BYTE *)(a2 + 48) = v2;
  *(_BYTE *)(a2 + 49) = v3;
  OUTLINED_FUNCTION_8_100();
}

uint64_t LinearRegressor.fitted<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  OUTLINED_FUNCTION_5_97(a1, a2, a3, a4, a5, a6, a7);
  return OUTLINED_FUNCTION_13_29();
}

#error "22ABA8EC8: call analysis failed (funcsize=98)"

uint64_t sub_22ABA8FDC()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_11_91();
  swift_bridgeObjectRelease();
  if (v0)
    return OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_13_4();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_5_31(v2);
}

uint64_t sub_22ABA9030()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22ABA905C()
{
  sub_22ABAAF14();
}

uint64_t sub_22ABA9070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 40) = a5;
  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 24) = a3;
  *(_QWORD *)(v7 + 32) = a4;
  *(_QWORD *)(v7 + 16) = a1;
  *(_OWORD *)(v7 + 56) = *(_OWORD *)a2;
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)v6;
  *(_QWORD *)(v7 + 96) = *(_QWORD *)(v6 + 16);
  *(_OWORD *)(v7 + 104) = *(_OWORD *)(v6 + 24);
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v6 + 40);
  *(_BYTE *)(v7 + 129) = *(_BYTE *)(v6 + 48);
  *(_BYTE *)(v7 + 130) = *(_BYTE *)(v6 + 49);
  return OUTLINED_FUNCTION_13_29();
}

uint64_t sub_22ABA90D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43[9];

  v9 = *(_BYTE *)(v8 + 130);
  v10 = *(_BYTE *)(v8 + 129);
  v11 = *(_QWORD *)(v8 + 120);
  v12 = *(_QWORD *)(v8 + 96);
  v13 = *(_QWORD *)(v8 + 72);
  v14 = *(_BYTE *)(v8 + 128);
  v15 = *(_QWORD *)(v8 + 32);
  v16 = *(_QWORD *)(v8 + 40);
  v17 = *(_QWORD *)(v8 + 24);
  v34 = *(_OWORD *)(v8 + 80);
  v35 = v12;
  v36 = *(_OWORD *)(v8 + 104);
  v37 = v11;
  LOBYTE(v38) = v10;
  BYTE1(v38) = v9;
  v32 = *(_OWORD *)(v8 + 56);
  LOBYTE(v33) = v14;
  BaseLinearRegressor.fitted(features:annotations:eventHandler:)((uint64_t)&v32, v17, v15, v16, a5, a6, a7, a8, v28, v30, v32, *((uint64_t *)&v32 + 1), v33, v13, v34, *((uint64_t *)&v34 + 1), v12, v36, *((uint64_t *)&v36 + 1),
    v11,
    v38,
    v39,
    v40,
    v41);
  sub_22AA6BBE4((uint64_t)v43, (uint64_t)&v34);
  v18 = v34;
  v19 = v35;
  v21 = v36;
  v20 = v37;
  v22 = v38;
  v23 = v39;
  v24 = v40;
  v31 = v41;
  v29 = v42;
  if ((sub_22AA2F904() & 1) == 0)
    sub_22AA2F98C(0x65527261656E694CLL, 0xEF726F7373657267);
  v25 = *(_QWORD *)(v8 + 16);
  *(_OWORD *)v25 = v18;
  *(_QWORD *)(v25 + 16) = v19;
  *(_OWORD *)(v25 + 24) = v21;
  *(_QWORD *)(v25 + 40) = v20;
  *(_QWORD *)(v25 + 48) = v22;
  *(_QWORD *)(v25 + 56) = v23;
  *(_QWORD *)(v25 + 64) = v24;
  *(_QWORD *)(v25 + 72) = v31;
  *(_BYTE *)(v25 + 80) = v29;
  v26 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_18_72(v26);
}

uint64_t LinearRegressor.fitted<A, B>(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v9 + 232) = v11;
  *(_QWORD *)(v9 + 240) = v12;
  *(_QWORD *)(v9 + 216) = a7;
  *(_QWORD *)(v9 + 224) = a8;
  *(_QWORD *)(v9 + 200) = a5;
  *(_QWORD *)(v9 + 208) = a6;
  *(_QWORD *)(v9 + 184) = a3;
  *(_QWORD *)(v9 + 192) = a4;
  *(_QWORD *)(v9 + 168) = a1;
  *(_QWORD *)(v9 + 176) = a2;
  *(_OWORD *)(v9 + 248) = *(_OWORD *)v8;
  *(_QWORD *)(v9 + 264) = *(_QWORD *)(v8 + 16);
  *(_OWORD *)(v9 + 272) = *(_OWORD *)(v8 + 24);
  *(_QWORD *)(v9 + 288) = *(_QWORD *)(v8 + 40);
  *(_BYTE *)(v9 + 66) = *(_BYTE *)(v8 + 48);
  *(_BYTE *)(v9 + 67) = *(_BYTE *)(v8 + 49);
  return swift_task_switch();
}

uint64_t sub_22ABA92A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD **)(v0 + 208);
  v6 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v7 = v5[2];
  *v6 = v7;
  v6[1] = v3;
  v6[2] = v4;
  v8 = v5[3];
  v6[3] = v8;
  v9 = v5[4];
  v6[4] = v9;
  v6[5] = v2;
  v6[6] = v1;
  v10 = OUTLINED_FUNCTION_50_32();
  OUTLINED_FUNCTION_46_0();
  v11 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v11[2] = v3;
  v11[3] = v4;
  v11[4] = v9;
  v11[5] = v2;
  v11[6] = v1;
  v11[7] = v10;
  v12 = sub_22ABDE8A0();
  v14 = sub_22A9C2540((uint64_t)sub_22AB819F4, (uint64_t)v11, v3, v12, MEMORY[0x24BEE4078], v2, MEMORY[0x24BEE40A8], v13);
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_46_0();
  *(_QWORD *)(v0 + 136) = v14;
  v15 = sub_22ABDF0F8();
  v16 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v15);
  v69 = v7;
  v70 = v9;
  v71 = v8;
  sub_22ABC377C(v0 + 136, v15, v7, v16, v8, v9, (uint64_t)&v72);
  v62 = v16;
  v18 = *(_QWORD *)(v0 + 232);
  v17 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 216);
  v19 = *(_QWORD *)(v0 + 224);
  v60 = v15;
  swift_bridgeObjectRelease();
  v55 = v73;
  v56 = v72;
  v54 = v74;
  v66 = v75;
  *(_QWORD *)(v0 + 296) = v75;
  v21 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  *v21 = v69;
  v21[1] = v20;
  v21[2] = v19;
  v21[3] = v71;
  v21[4] = v9;
  v21[5] = v18;
  v21[6] = v17;
  KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  v23 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v23[2] = v20;
  v23[3] = v19;
  v23[4] = v9;
  v23[5] = v18;
  v23[6] = v17;
  v23[7] = KeyPath;
  v25 = sub_22A9C2540((uint64_t)sub_22AB819F4, (uint64_t)v23, v20, v69, MEMORY[0x24BEE4078], v18, MEMORY[0x24BEE40A8], v24);
  OUTLINED_FUNCTION_13_2();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 152) = v25;
  v26 = (_QWORD *)swift_task_alloc();
  v26[2] = v69;
  v26[3] = v20;
  v26[4] = v19;
  v26[5] = v71;
  v26[6] = v9;
  v26[7] = v18;
  v26[8] = v17;
  v53 = sub_22ABDF0F8();
  v52 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v53);
  v65 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22ABA9984, (uint64_t)v26, v53, MEMORY[0x24BEE13C8], MEMORY[0x24BEE4078], v52, MEMORY[0x24BEE40A8], v27);
  *(_QWORD *)(v0 + 304) = v65;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_3();
  v28 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  *v28 = v69;
  v28[1] = v20;
  v28[2] = v19;
  v28[3] = v71;
  v28[4] = v9;
  v28[5] = v18;
  v28[6] = v17;
  v29 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v30 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v30[2] = v20;
  v30[3] = v19;
  v30[4] = v9;
  v30[5] = v18;
  v30[6] = v17;
  v30[7] = v29;
  v32 = sub_22A9C2540((uint64_t)sub_22AAA6F2C, (uint64_t)v30, v19, v12, MEMORY[0x24BEE4078], v17, MEMORY[0x24BEE40A8], v31);
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_17();
  *(_QWORD *)(v0 + 144) = v32;
  sub_22ABC377C(v0 + 144, v60, v69, v62, v71, v9, (uint64_t)&v72);
  v68 = *(_BYTE *)(v0 + 67);
  v67 = *(_BYTE *)(v0 + 66);
  v34 = *(_QWORD *)(v0 + 272);
  v33 = *(_QWORD *)(v0 + 280);
  v63 = *(_QWORD *)(v0 + 264);
  v64 = *(_QWORD *)(v0 + 288);
  v36 = *(_QWORD *)(v0 + 248);
  v35 = *(_QWORD *)(v0 + 256);
  v38 = *(_QWORD *)(v0 + 232);
  v37 = *(_QWORD *)(v0 + 240);
  v39 = *(_QWORD *)(v0 + 216);
  v40 = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRelease();
  v59 = v73;
  v61 = v72;
  v58 = v74;
  v57 = v75;
  *(_QWORD *)(v0 + 312) = v75;
  v41 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  *v41 = v69;
  v41[1] = v39;
  v51 = v38;
  v41[2] = v40;
  v41[3] = v71;
  v41[4] = v70;
  v41[5] = v38;
  v41[6] = v37;
  v42 = swift_getKeyPath();
  OUTLINED_FUNCTION_13_3();
  v43 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v43[2] = v39;
  v43[3] = v40;
  v43[4] = v70;
  v43[5] = v38;
  v43[6] = v37;
  v43[7] = v42;
  v45 = sub_22A9C2540((uint64_t)sub_22AB819F4, (uint64_t)v43, v40, v69, MEMORY[0x24BEE4078], v37, MEMORY[0x24BEE40A8], v44);
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_13_3();
  *(_QWORD *)(v0 + 160) = v45;
  v46 = (_QWORD *)swift_task_alloc();
  v46[2] = v69;
  v46[3] = v39;
  v46[4] = v40;
  v46[5] = v71;
  v46[6] = v70;
  v46[7] = v51;
  v46[8] = v37;
  v48 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22ABA9984, (uint64_t)v46, v53, MEMORY[0x24BEE13C8], MEMORY[0x24BEE4078], v52, MEMORY[0x24BEE40A8], v47);
  *(_QWORD *)(v0 + 320) = v48;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_3();
  *(_QWORD *)(v0 + 16) = v36;
  *(_QWORD *)(v0 + 24) = v35;
  *(_QWORD *)(v0 + 32) = v63;
  *(_QWORD *)(v0 + 40) = v34;
  *(_QWORD *)(v0 + 48) = v33;
  *(_QWORD *)(v0 + 56) = v64;
  *(_BYTE *)(v0 + 64) = v67;
  *(_QWORD *)(v0 + 104) = v56;
  *(_BYTE *)(v0 + 65) = v68;
  *(_QWORD *)(v0 + 112) = v55;
  *(_BYTE *)(v0 + 120) = v54;
  *(_QWORD *)(v0 + 72) = v61;
  *(_QWORD *)(v0 + 128) = v66;
  *(_QWORD *)(v0 + 80) = v59;
  *(_BYTE *)(v0 + 88) = v58;
  *(_QWORD *)(v0 + 96) = v57;
  v49 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v49;
  *v49 = v0;
  v49[1] = sub_22ABA98A8;
  return sub_22ABA9A20(*(_QWORD *)(v0 + 168), v0 + 104, v65, v0 + 72, v48, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
}

uint64_t sub_22ABA98A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);

  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_8();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_release();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v3();
}

uint64_t sub_22ABA9950()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_13_4();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22ABA9984()
{
  sub_22ABA99EC();
}

void sub_22ABA9998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_29_45();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_9_96(v1, v2, v3);
  sub_22A99CE8C();
  OUTLINED_FUNCTION_24_53();
  OUTLINED_FUNCTION_9_14();
}

void sub_22ABA99EC()
{
  sub_22ABA9998();
}

uint64_t sub_22ABA9A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 + 48) = a7;
  *(_QWORD *)(v9 + 56) = a8;
  *(_QWORD *)(v9 + 32) = a5;
  *(_QWORD *)(v9 + 40) = a6;
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a3;
  *(_OWORD *)(v9 + 64) = *(_OWORD *)a2;
  *(_BYTE *)(v9 + 160) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(v9 + 80) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)a4;
  *(_BYTE *)(v9 + 161) = *(_BYTE *)(a4 + 16);
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(a4 + 24);
  *(_OWORD *)(v9 + 112) = *(_OWORD *)v8;
  *(_QWORD *)(v9 + 128) = *(_QWORD *)(v8 + 16);
  *(_OWORD *)(v9 + 136) = *(_OWORD *)(v8 + 24);
  *(_QWORD *)(v9 + 152) = *(_QWORD *)(v8 + 40);
  *(_BYTE *)(v9 + 162) = *(_BYTE *)(v8 + 48);
  *(_BYTE *)(v9 + 163) = *(_BYTE *)(v8 + 49);
  return OUTLINED_FUNCTION_13_29();
}

uint64_t sub_22ABA9A98()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  OUTLINED_FUNCTION_42_35();
  BaseLinearRegressor.fitted(trainingFeatures:trainingAnnotations:validationFeatures:validationAnnotations:eventHandler:)();
  sub_22AA6BBE4((uint64_t)&v3, *(_QWORD *)(v0 + 16));
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v1();
}

void LinearRegressor.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_28_46(a1, a2, a3);
  sub_22AA6C480();
}

#error "22ABA9C28: call analysis failed (funcsize=8)"

uint64_t sub_22ABA9C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9B55C4;
  return LinearRegressor.fitted<A>(to:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t sub_22ABA9CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v14;
  uint64_t v17;

  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v14;
  *v14 = v7;
  v14[1] = sub_22A9B24D4;
  return LinearRegressor.fitted<A, B>(to:validateOn:eventHandler:)(a1, a2, a3, a4, a5, v17, a6, a7);
}

void sub_22ABA9D7C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  LinearRegressor.encode(_:to:)(a1, a2, a3);
}

uint64_t sub_22ABA9D90()
{
  return LinearRegressor.decode(from:)();
}

double LinearRegressor.makeTransformer()@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = a1[2];
  v11 = sub_22ABDF068();
  v5 = sub_22ABDF0F8();
  v7 = a1[3];
  v6 = a1[4];
  v8 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v5);
  return LinearRegressorModel.init<A>(coefficients:)((uint64_t)&v11, v4, v5, v7, v6, v8, v9, a2);
}

uint64_t LinearRegressor.update<A>(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  OUTLINED_FUNCTION_5_97(a1, a2, a3, a4, a5, a6, a7);
  return OUTLINED_FUNCTION_13_29();
}

#error "22ABA9ED8: call analysis failed (funcsize=97)"

void sub_22ABA9FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_29_45();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_9_96(v1, v2, v3);
  sub_22A99CE8C();
  OUTLINED_FUNCTION_24_53();
  OUTLINED_FUNCTION_9_14();
}

uint64_t sub_22ABAA03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 32) = a4;
  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a3;
  *(_OWORD *)(v6 + 48) = *(_OWORD *)a2;
  *(_BYTE *)(v6 + 120) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(v6 + 64) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(v6 + 72) = *(_OWORD *)v5;
  *(_QWORD *)(v6 + 88) = *(_QWORD *)(v5 + 16);
  *(_OWORD *)(v6 + 96) = *(_OWORD *)(v5 + 24);
  *(_QWORD *)(v6 + 112) = *(_QWORD *)(v5 + 40);
  *(_BYTE *)(v6 + 121) = *(_BYTE *)(v5 + 48);
  *(_BYTE *)(v6 + 122) = *(_BYTE *)(v5 + 49);
  return OUTLINED_FUNCTION_13_29();
}

uint64_t sub_22ABAA098()
{
  uint64_t v0;

  OUTLINED_FUNCTION_42_35();
  BaseLinearRegressor.update(_:features:annotations:eventHandler:)();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void LinearRegressor.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v6 = *(_BYTE *)(a1 + 80);
    v8 = *(_QWORD *)(a1 + 64);
    v7 = *(_QWORD *)(a1 + 72);
    v10 = *(_QWORD *)(a1 + 48);
    v9 = *(_QWORD *)(a1 + 56);
    v11 = *(_QWORD *)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    v14 = *(_QWORD *)(a1 + 16);
    v13 = *(_QWORD *)(a1 + 24);
    v23 = *(_QWORD *)a1;
    v24 = v4;
    v25 = v14;
    v26 = v13;
    v27 = v11;
    v28 = v12;
    v20 = v10;
    v21 = v9;
    v29 = v10;
    v30 = v9;
    v22 = v8;
    v31 = v8;
    v32 = v7;
    v34 = v7;
    v33 = v6;
    OUTLINED_FUNCTION_28_46(a1, a2, a3);
    sub_22AA6C480();
    if (!v3)
    {
      v23 = v4;
      v24 = v14;
      v25 = v13;
      v26 = v11;
      LOBYTE(v27) = v12 & 1;
      v28 = v20;
      v29 = v21;
      v30 = v22;
      v31 = v34;
      LOBYTE(v32) = v6 & 1;
      v15 = *(_QWORD *)(a2 + 24);
      v16 = *(_QWORD *)(a2 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(a2, v15);
      v17 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_255B12178);
      v19 = sub_22AAEA4E4(&qword_255B15140, MEMORY[0x24BEE13D8], (uint64_t)&unk_22ABFCD38);
      v17(&v23, v18, v19, v15, v16);
    }
  }
  else
  {
    sub_22ABDFADC();
    __break(1u);
  }
}

void LinearRegressor.decodeWithOptimizer(from:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  sub_22AA6C6D0(a1, a2[2], a2[3], a2[4], a3, a4, a5, a6, v21, v22, v23, v25, v26, v28, v29, *((uint64_t *)&v29 + 1), v30, v31, v32,
    v33);
  if (!v7)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255B12178);
    v11 = *(_QWORD *)(a1 + 24);
    v12 = *(_QWORD *)(a1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
    v13 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 16);
    v14 = sub_22AAEA4E4(&qword_255B15150, MEMORY[0x24BEE1400], (uint64_t)&unk_22ABFCCF8);
    v13(&v29, v10, v10, v14, v11, v12);
    v15 = v30;
    v16 = v31;
    v17 = v32;
    v24 = v33;
    v27 = v29;
    v18 = v34;
    v19 = v35;
    v20 = v36;
    sub_22AA6D37C(v38);
    *(_QWORD *)a7 = v37;
    *(_OWORD *)(a7 + 8) = v27;
    *(_QWORD *)(a7 + 24) = v15;
    *(_QWORD *)(a7 + 32) = v16;
    *(_QWORD *)(a7 + 40) = v17;
    *(_OWORD *)(a7 + 48) = v24;
    *(_QWORD *)(a7 + 64) = v18;
    *(_QWORD *)(a7 + 72) = v19;
    *(_BYTE *)(a7 + 80) = v20;
  }
}

double sub_22ABAA44C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LinearRegressor.makeTransformer()(a1, a2);
}

uint64_t sub_22ABAA460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9B55C4;
  return LinearRegressor.update<A>(_:with:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

void sub_22ABAA4F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  LinearRegressor.encodeWithOptimizer(_:to:)(a1, a2, a3);
}

void sub_22ABAA508(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  LinearRegressor.decodeWithOptimizer(from:)(a1, a2, a3, a4, a5, a6, a7);
}

double LinearRegressor.Configuration.l2Penalty.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void LinearRegressor.Configuration.l2Penalty.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*LinearRegressor.Configuration.l2Penalty.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

double LinearRegressor.Configuration.l1Penalty.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void LinearRegressor.Configuration.l1Penalty.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*LinearRegressor.Configuration.l1Penalty.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LinearRegressor.Configuration.maximumIterations.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t LinearRegressor.Configuration.maximumIterations.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*LinearRegressor.Configuration.maximumIterations.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

double LinearRegressor.Configuration.stepSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void LinearRegressor.Configuration.stepSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*LinearRegressor.Configuration.stepSize.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

double LinearRegressor.Configuration.convergenceThreshold.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void LinearRegressor.Configuration.convergenceThreshold.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*LinearRegressor.Configuration.convergenceThreshold.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LinearRegressor.Configuration.earlyStopIterationCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t LinearRegressor.Configuration.earlyStopIterationCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*LinearRegressor.Configuration.earlyStopIterationCount.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LinearRegressor.Configuration.scaleFeatures.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t LinearRegressor.Configuration.scaleFeatures.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*LinearRegressor.Configuration.scaleFeatures.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void sub_22ABAA5FC(_BYTE *a1@<X8>)
{
  LinearRegressor.Configuration.optimizationStrategy.getter(a1);
}

_BYTE *sub_22ABAA654(char *a1)
{
  char v2;

  v2 = *a1;
  return LinearRegressor.Configuration.optimizationStrategy.setter(&v2);
}

_BYTE *LinearRegressor.Configuration.optimizationStrategy.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = *result;
  return result;
}

_BYTE *(*LinearRegressor.Configuration.optimizationStrategy.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 49);
  return sub_22AAE9728;
}

uint64_t LinearRegressor.Configuration.hash(into:)()
{
  sub_22ABE0274();
  sub_22ABE0274();
  sub_22ABE0250();
  sub_22ABE0274();
  sub_22ABE0274();
  sub_22ABE0250();
  sub_22ABE025C();
  return sub_22ABE0250();
}

BOOL static LinearRegressor.Configuration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = 0;
  if ((vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24))))), 0xFuLL))) & 1) == 0&& *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)&& *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)&& ((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) == 0)
  {
    return *(unsigned __int8 *)(a1 + 49) == *(unsigned __int8 *)(a2 + 49);
  }
  return result;
}

uint64_t sub_22ABAA7E8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22ABAA824 + 4 * byte_22AC00470[a1]))(0x746C616E6550326CLL, 0xE900000000000079);
}

uint64_t sub_22ABAA824()
{
  return 0x746C616E6550316CLL;
}

unint64_t sub_22ABAA838()
{
  return 0xD000000000000011;
}

uint64_t sub_22ABAA854()
{
  return 0x657A695370657473;
}

unint64_t sub_22ABAA86C()
{
  return 0xD000000000000014;
}

uint64_t sub_22ABAA8E0()
{
  unsigned __int8 *v0;

  return sub_22ABAA7E8(*v0);
}

uint64_t sub_22ABAA8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AAE9870(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22ABAA920@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA946B8();
  *a1 = result;
  return result;
}

uint64_t sub_22ABAA950(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22AC00770, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22ABAA984(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22AC00770, a1);
  return sub_22ABE02F8();
}

void LinearRegressor.Configuration.encode(to:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v4 = type metadata accessor for LinearRegressor.Configuration.CodingKeys(255, a2[2], a2[3], a2[4]);
  MEMORY[0x22E2E4D80](&unk_22AC00770, v4);
  v5 = sub_22ABDFD58();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - v7;
  v9 = *(_QWORD *)(v2 + 16);
  v15 = *(_QWORD *)(v2 + 40);
  v16 = v9;
  LODWORD(v9) = *(unsigned __int8 *)(v2 + 48);
  v13 = *(unsigned __int8 *)(v2 + 49);
  v14 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  v26 = 0;
  v10 = v17;
  sub_22ABDFD1C();
  if (!v10)
  {
    v11 = v13;
    v25 = 1;
    OUTLINED_FUNCTION_4_65();
    v24 = 2;
    OUTLINED_FUNCTION_15_55();
    v23 = 3;
    OUTLINED_FUNCTION_4_65();
    v22 = 4;
    OUTLINED_FUNCTION_4_65();
    v21 = 5;
    OUTLINED_FUNCTION_15_55();
    v20 = 6;
    sub_22ABDFD10();
    v19 = v11;
    v18 = 7;
    sub_22AAEA558();
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  OUTLINED_FUNCTION_1_61();
}

uint64_t LinearRegressor.Configuration.hashValue.getter()
{
  sub_22ABE0244();
  LinearRegressor.Configuration.hash(into:)();
  return sub_22ABE0280();
}

void LinearRegressor.Configuration.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v22;

  v7 = type metadata accessor for LinearRegressor.Configuration.CodingKeys(255, a2, a3, a4);
  MEMORY[0x22E2E4D80](&unk_22AC00770, v7);
  v8 = sub_22ABDFCB0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE0298();
  if (!v5)
  {
    OUTLINED_FUNCTION_15_83();
    v11 = v10;
    OUTLINED_FUNCTION_15_83();
    v13 = v12;
    v14 = OUTLINED_FUNCTION_1_90();
    OUTLINED_FUNCTION_15_83();
    v16 = v15;
    OUTLINED_FUNCTION_15_83();
    v18 = v17;
    v19 = OUTLINED_FUNCTION_1_90();
    v20 = sub_22ABDFC50();
    sub_22AAEA594();
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_15_49(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    *(_QWORD *)a5 = v11;
    *(_QWORD *)(a5 + 8) = v13;
    *(_QWORD *)(a5 + 16) = v14;
    *(_QWORD *)(a5 + 24) = v16;
    *(_QWORD *)(a5 + 32) = v18;
    *(_QWORD *)(a5 + 40) = v19;
    *(_BYTE *)(a5 + 48) = v20 & 1;
    *(_BYTE *)(a5 + 49) = v22;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_1_61();
}

uint64_t sub_22ABAAEA4()
{
  sub_22ABE0244();
  LinearRegressor.Configuration.hash(into:)();
  return sub_22ABE0280();
}

void sub_22ABAAEDC(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  LinearRegressor.Configuration.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

void sub_22ABAAEFC(_QWORD *a1, uint64_t *a2)
{
  LinearRegressor.Configuration.encode(to:)(a1, a2);
}

void sub_22ABAAF14()
{
  sub_22ABA9FE8();
}

uint64_t type metadata accessor for LinearRegressor.Configuration.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LinearRegressor.Configuration.CodingKeys);
}

uint64_t sub_22ABAAF44(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 16) + 8) + 8);
}

void sub_22ABAAF58()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABAAF68(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for LinearRegressor<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22ABAAF94()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for LinearRegressor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LinearRegressor);
}

uint64_t type metadata accessor for LinearRegressor.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LinearRegressor.Configuration);
}

uint64_t sub_22ABAAFE4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22ABAB030 + 4 * byte_22AC0047D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22ABAB064 + 4 * byte_22AC00478[v4]))();
}

uint64_t sub_22ABAB064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABAB06C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22ABAB074);
  return result;
}

uint64_t sub_22ABAB080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22ABAB088);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22ABAB08C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABAB094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22ABAB0A0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABAB0B0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABAB0C0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_3_114()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_104(uint64_t (*a1)(void))
{
  return a1();
}

__n128 OUTLINED_FUNCTION_5_97(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  __n128 result;

  *(_QWORD *)(v8 + 160) = a6;
  *(_QWORD *)(v8 + 168) = a7;
  *(_QWORD *)(v8 + 144) = a4;
  *(_QWORD *)(v8 + 152) = a5;
  *(_QWORD *)(v8 + 128) = a2;
  *(_QWORD *)(v8 + 136) = a3;
  *(_QWORD *)(v8 + 120) = a1;
  *(_OWORD *)(v8 + 176) = *(_OWORD *)v7;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v7 + 16);
  result = *(__n128 *)(v7 + 24);
  *(__n128 *)(v8 + 200) = result;
  *(_QWORD *)(v8 + 216) = *(_QWORD *)(v7 + 40);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v7 + 48);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v7 + 49);
  return result;
}

uint64_t OUTLINED_FUNCTION_6_120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;

  *(_QWORD *)(v22 + 224) = a22;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_9_96@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

uint64_t OUTLINED_FUNCTION_10_83(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va;

  va_start(va, a11);
  return sub_22ABC377C(v14, v15, v11, a1, v12, v13, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_11_91()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 248) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_14_79(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  a1[2] = v10;
  a1[3] = v13;
  a1[4] = v11;
  a1[5] = v12;
  a1[6] = a10;
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_15_83()
{
  return sub_22ABDFC5C();
}

uint64_t OUTLINED_FUNCTION_16_78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  a1[3] = v2;
  a1[4] = v3;
  a1[5] = v4;
  return sub_22ABDE8A0();
}

uint64_t OUTLINED_FUNCTION_18_72(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_23_67(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  return sub_22A9C2540(a1, v10, v8, v11, a5, v9, a7, a8);
}

uint64_t OUTLINED_FUNCTION_24_53()
{
  return sub_22ABDEA50();
}

_QWORD *OUTLINED_FUNCTION_25_51(_QWORD *result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *result = v2[2];
  result[1] = v1;
  result[2] = v2[3];
  result[3] = v2[4];
  result[4] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_26_62()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = v0;
  return sub_22ABDF0F8();
}

__n128 OUTLINED_FUNCTION_27_63(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_46(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return type metadata accessor for LinearRegressorModel(0, a3[2], a3[3], a3[4]);
}

uint64_t OUTLINED_FUNCTION_30_53(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  return sub_22A9C2540(a1, v10, v9, v8, a5, a6, a7, a8);
}

unint64_t OUTLINED_FUNCTION_35_39()
{
  return sub_22A99CE8C();
}

_QWORD *OUTLINED_FUNCTION_37_43(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v3;
  result[3] = v1;
  result[4] = v2;
  result[5] = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_39_46(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = a1;
  return swift_bridgeObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_49_27(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *result = v1;
  result[1] = v5;
  result[2] = v2;
  result[3] = v3;
  result[4] = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_50_32()
{
  return swift_getKeyPath();
}

uint64_t OUTLINED_FUNCTION_52_28()
{
  return 24;
}

uint64_t OUTLINED_FUNCTION_53_35()
{
  return swift_release();
}

uint64_t TabularEstimator<>.fitted(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_0_106();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_2_112();
  return OUTLINED_FUNCTION_4_105(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t TabularEstimator<>.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;

  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return v9(a1, AssociatedTypeWitness, a5, v7, v8);
}

uint64_t TabularEstimator.fitted(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_0_106();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ABF58;
  OUTLINED_FUNCTION_2_112();
  return OUTLINED_FUNCTION_4_105(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t TabularEstimator<>.decode(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(AssociatedTypeWitness, AssociatedTypeWitness, a4, v7, v8);
}

uint64_t UpdatableTabularEstimator.update(_:with:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_0_106();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_2_112();
  return v2();
}

uint64_t dispatch thunk of TabularEstimator.fitted(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ABF58;
  OUTLINED_FUNCTION_6_121();
  return v2();
}

uint64_t dispatch thunk of TabularEstimator.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of TabularEstimator.decode(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of UpdatableTabularEstimator.makeTransformer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UpdatableTabularEstimator.update(_:with:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  OUTLINED_FUNCTION_6_121();
  return v2();
}

uint64_t dispatch thunk of UpdatableTabularEstimator.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return dispatch thunk of TabularEstimator.encode(_:to:)(a1, a2, a3, a4);
}

uint64_t dispatch thunk of UpdatableTabularEstimator.decodeWithOptimizer(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of TabularEstimator.decode(from:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_0_106()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_4_105(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

BOOL sub_22ABAB7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v5 != a3 || v5 < v4 || *(_BYTE *)(a1 + 32) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (a3 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (a3 > 0x7FFFFFFF)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v4 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v3 = (_QWORD *)a1;
  if (v4 >= a3)
    v8 = a3;
  else
    v8 = *(_QWORD *)(a1 + 16);
  sub_22AA36240();
  v9 = log2((double)v8 / 26.0);
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
    goto LABEL_42;
  if (v9 <= -9.22337204e18)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (__OFADD__((uint64_t)v9, 1))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v10 = ((uint64_t)v9 + 1) & ~(((uint64_t)v9 + 1) >> 63);
  v11 = 3 * v8 * v10;
  if ((unsigned __int128)(3 * v8 * (__int128)v10) >> 64 != v11 >> 63)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v12 = __OFADD__(v11, 11 * v8);
  v13 = v11 + 11 * v8;
  if (v12)
  {
LABEL_47:
    __break(1u);
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v13 <= 1)
    v14 = 1;
  else
    v14 = v13;
  sub_22AA0B174(0, v14);
  sub_22ABDEAEC();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    OUTLINED_FUNCTION_1_102();
  v3 = (_QWORD *)*v3;
  OUTLINED_FUNCTION_0_107();
  dgelsd_NEWLAPACK();
  swift_bridgeObjectRelease();
  if (0.0 <= -2147483650.0)
    goto LABEL_48;
  if (0.0 < 2147483650.0)
  {
    sub_22AA0AEEC((int)0.0, 0.0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22AA36240();
    sub_22ABDEAEC();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22AA36240();
    sub_22ABDEAEC();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      OUTLINED_FUNCTION_1_102();
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_0_107();
    dgelsd_NEWLAPACK();
    OUTLINED_FUNCTION_33_50();
    OUTLINED_FUNCTION_33_50();
    OUTLINED_FUNCTION_33_50();
    LODWORD(v3) = 0;
    return (int)v3 > 0;
  }
LABEL_49:
  __break(1u);
  swift_once();
  v15 = sub_22ABDE804();
  __swift_project_value_buffer(v15, (uint64_t)qword_255B47DC8);
  v16 = sub_22ABDE7EC();
  v17 = sub_22ABDF4C4();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_22A999000, v16, v17, "The optimization process failed to find a solution.", v18, 2u);
    MEMORY[0x22E2E4E64](v18, -1, -1);
  }

  return (int)v3 > 0;
}

uint64_t OUTLINED_FUNCTION_0_107()
{
  uint64_t v0;

  return v0 - 76;
}

uint64_t sub_22ABABBC8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v15;
  void (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_22ABDE468();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_3_23();
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_22AB4D24C();
    OUTLINED_FUNCTION_23_2();
    v8 = a1 + v7;
    v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
    v17 = *(_QWORD *)(v4 + 72);
    v9 = *MEMORY[0x24BE62F00];
    v18 = v4;
    v15 = *MEMORY[0x24BE62F00];
    do
    {
      v16(v1, v8, v3);
      v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v1, v3);
      if (v10 == v9)
      {
        OUTLINED_FUNCTION_19_30(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 96));
        v11 = *v1;
      }
      else
      {
        OUTLINED_FUNCTION_19_30(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        v11 = 0;
      }
      v6 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4D24C();
        v6 = v19;
      }
      v12 = *(_QWORD *)(v6 + 16);
      if (v12 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_22AB4D24C();
        v6 = v19;
      }
      *(_QWORD *)(v6 + 16) = v12 + 1;
      v13 = v6 + 16 * v12;
      v9 = v15;
      *(_QWORD *)(v13 + 32) = v11;
      *(_BYTE *)(v13 + 40) = v10 != v15;
      v4 = v18;
      v8 += v17;
      --v5;
    }
    while (v5);
  }
  return v6;
}

uint64_t sub_22ABABD78(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return sub_22ABDEAEC();
  }
  __break(1u);
  return result;
}

void sub_22ABABDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  void (*v52)(_QWORD *, unint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  void (*v78)(uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  int64_t *v86;
  uint64_t v87;
  int64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[5];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _QWORD v111[14];
  uint64_t v112;

  OUTLINED_FUNCTION_4_4();
  a19 = v22;
  a20 = v23;
  v24 = v20;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v31 = OUTLINED_FUNCTION_31_43();
  OUTLINED_FUNCTION_180_0();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (uint64_t *)((char *)v95 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = OUTLINED_FUNCTION_26_63();
  v96 = *(_QWORD *)(v97 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_0();
  v37 = OUTLINED_FUNCTION_13_86(v36);
  OUTLINED_FUNCTION_40_1(v37, (uint64_t)&v112);
  v95[2] = v38;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v40);
  v106 = (uint64_t)v95 - v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v42);
  v100 = (uint64_t)v95 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = OUTLINED_FUNCTION_19_64();
  v104 = *(_QWORD *)(v44 - 8);
  v105 = v44;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v45);
  v47 = (void *)OUTLINED_FUNCTION_97_9(v46, v95[0]);
  OUTLINED_FUNCTION_39_12(v47);
  v48 = (unint64_t)v111;
  v98 = v30;
  *(_QWORD *)&v99 = v28;
  sub_22AA1E26C();
  v49 = *(_QWORD *)(v26 + 16);
  v101 = v24;
  v102 = v49;
  if (v49)
  {
    v109 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_136_3();
    OUTLINED_FUNCTION_42_36();
    v50 = v109;
    v95[0] = v26;
    v51 = (uint64_t *)(v26 + 32);
    v48 = *MEMORY[0x24BE62EF8];
    LODWORD(v107) = *MEMORY[0x24BE62F00];
    v52 = *(void (**)(_QWORD *, unint64_t, uint64_t))(v21 + 104);
    do
    {
      v54 = *v51++;
      v53 = v54;
      if ((unint64_t)(v54 + 1) > 1)
      {
        *v34 = v53;
        v55 = v107;
      }
      else
      {
        *(_BYTE *)v34 = 0;
        v55 = v48;
      }
      v52(v34, v55, v31);
      v109 = v50;
      v57 = *(_QWORD *)(v50 + 16);
      v56 = *(_QWORD *)(v50 + 24);
      if (v57 >= v56 >> 1)
      {
        OUTLINED_FUNCTION_91_5(v56);
        OUTLINED_FUNCTION_41_42();
        v50 = v109;
      }
      *(_QWORD *)(v50 + 16) = v57 + 1;
      OUTLINED_FUNCTION_66_12(v50+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v57, (uint64_t)v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
      --v49;
    }
    while (v49);
    v26 = v95[0];
  }
  OUTLINED_FUNCTION_131_4();
  if (v58 && (OUTLINED_FUNCTION_163_1(), v59 = sub_22AA03688(), (v60 & 1) != 0))
    v61 = *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v59);
  else
    v61 = 0;
  v109 = 0x65706168736572;
  v110 = 0xE700000000000000;
  OUTLINED_FUNCTION_9_97();
  v108 = v61;
  OUTLINED_FUNCTION_72_22();
  OUTLINED_FUNCTION_76_21();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_53_36();
  if (v62)
  {
    v63 = v109;
    v64 = v110;
    v65 = v99;
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_220();
    v66 = sub_22AA03688();
    if ((v67 & 1) != 0)
    {
      v68 = v66;
      v69 = v111[5];
      v70 = OUTLINED_FUNCTION_3_35();
      OUTLINED_FUNCTION_36_47();
      OUTLINED_FUNCTION_159_1(v69 + v71 * v68, (uint64_t)&a15);
      v72 = OUTLINED_FUNCTION_38_1();
    }
    else
    {
      v70 = OUTLINED_FUNCTION_3_35();
      v72 = OUTLINED_FUNCTION_69_9();
    }
    OUTLINED_FUNCTION_57_3(v72, v73);
    OUTLINED_FUNCTION_51_1();
    OUTLINED_FUNCTION_3_35();
    v74 = OUTLINED_FUNCTION_69_9();
    OUTLINED_FUNCTION_106_0(v74, v75, v70);
    if (v76)
      goto LABEL_31;
    v77 = OUTLINED_FUNCTION_258();
    v78(v77);
    OUTLINED_FUNCTION_198_0();
    sub_22ABDE750();
    OUTLINED_FUNCTION_2_1();
    v107 = v63;
    v100 = v64;
    sub_22AA1DE90();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
    OUTLINED_FUNCTION_251();
    v80 = *(_QWORD *)(v79 + 72);
    OUTLINED_FUNCTION_192();
    v81 = OUTLINED_FUNCTION_8_101();
    *(_OWORD *)(v81 + 16) = xmmword_22ABE9FB0;
    v82 = (_QWORD *)(v81 + v63);
    *v82 = 120;
    v82[1] = 0xE100000000000000;
    OUTLINED_FUNCTION_47_3();
    sub_22ABDE558();
    v83 = (_QWORD *)((char *)v82 + v80);
    *v83 = 0x6570616873;
    v83[1] = 0xE500000000000000;
    v84 = v102;
    if (!v102)
    {
LABEL_27:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
      v90 = OUTLINED_FUNCTION_33_2();
      v99 = xmmword_22ABE8E30;
      *(_OWORD *)(v90 + 16) = xmmword_22ABE8E30;
      *(_QWORD *)(v90 + 32) = v84;
      sub_22ABDE57C();
      OUTLINED_FUNCTION_29_46();
      sub_22ABDEAC8();
      __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
      OUTLINED_FUNCTION_28_47();
      *(_OWORD *)(OUTLINED_FUNCTION_8_101() + 16) = v99;
      OUTLINED_FUNCTION_138_3();
      OUTLINED_FUNCTION_49(v95[1], v106, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 16));
      OUTLINED_FUNCTION_39_17();
      sub_22ABDE420();
      v91 = v95[4];
      OUTLINED_FUNCTION_163_1();
      OUTLINED_FUNCTION_253();
      OUTLINED_FUNCTION_219();
      OUTLINED_FUNCTION_82_8(v91, *(uint64_t (**)(uint64_t, _QWORD))(v96 + 8));
      OUTLINED_FUNCTION_84_19(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v103, v105);
      OUTLINED_FUNCTION_3();
      return;
    }
    v98 = v64;
    *(_QWORD *)&v99 = v81;
    v109 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_136_3();
    OUTLINED_FUNCTION_247();
    v85 = v109;
    v86 = (int64_t *)(v26 + 32);
    while (1)
    {
      v88 = *v86++;
      v87 = v88;
      if (v88 < (uint64_t)0xFFFFFFFF80000000)
        break;
      if (v87 > 0x7FFFFFFF)
        goto LABEL_29;
      v109 = v85;
      v89 = *(_QWORD *)(v85 + 16);
      v65 = v89 + 1;
      if (v89 >= *(_QWORD *)(v85 + 24) >> 1)
      {
        OUTLINED_FUNCTION_106_6();
        v85 = v109;
      }
      *(_QWORD *)(v85 + 16) = v65;
      *(_DWORD *)(v85 + 4 * v89 + 32) = v87;
      if (!--v84)
      {
        v84 = v102;
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
  }
  v92 = OUTLINED_FUNCTION_3_35();
  OUTLINED_FUNCTION_11_14(v100, v93, v94, v92);
LABEL_31:
  __break(1u);
}

void sub_22ABAC418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, _QWORD);
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  uint64_t v78;
  int64_t *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  int64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, _QWORD);
  uint64_t (*v103)(uint64_t, _QWORD);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;

  OUTLINED_FUNCTION_4_4();
  a19 = v23;
  a20 = v24;
  v115 = v25;
  v27 = v26;
  v29 = v28;
  v30 = OUTLINED_FUNCTION_26_63();
  v31 = OUTLINED_FUNCTION_231(v30);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_0();
  v111 = OUTLINED_FUNCTION_13_86(v33);
  v110 = *(_QWORD *)(v111 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_23_8();
  OUTLINED_FUNCTION_175_0();
  MEMORY[0x24BDAC7A8](v35);
  v37 = OUTLINED_FUNCTION_17_74((uint64_t)&v107 - v36);
  OUTLINED_FUNCTION_33_16();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_87();
  v122 = v39;
  OUTLINED_FUNCTION_4_0();
  v41 = MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v107 - v42;
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_23_8();
  v48 = v46 - v47;
  MEMORY[0x24BDAC7A8](v49);
  v51 = (uint64_t *)((char *)&v107 - v50);
  v52 = OUTLINED_FUNCTION_19_19();
  OUTLINED_FUNCTION_40_1(v52, (uint64_t)&a15);
  v116 = v53;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v54);
  v56 = (void *)OUTLINED_FUNCTION_97_9(v55, v107);
  v114 = v20;
  OUTLINED_FUNCTION_39_12(v56);
  OUTLINED_FUNCTION_173_0();
  OUTLINED_FUNCTION_53_36();
  if (!v57)
    goto LABEL_44;
  v109 = v32;
  OUTLINED_FUNCTION_16_13();
  v117 = v29;
  v118 = v27;
  v58 = OUTLINED_FUNCTION_153_1();
  v108 = v22;
  if ((v59 & 1) != 0)
  {
    v60 = v58;
    v61 = *(_QWORD *)(v20 + 56);
    v62 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_36_47();
    OUTLINED_FUNCTION_239(v61 + v63 * v60);
    v64 = (uint64_t)v51;
    v65 = 0;
  }
  else
  {
    v62 = OUTLINED_FUNCTION_3_35();
    v64 = OUTLINED_FUNCTION_145_3();
  }
  OUTLINED_FUNCTION_56_1(v64, v65);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_3_35();
  v66 = OUTLINED_FUNCTION_145_3();
  OUTLINED_FUNCTION_106_0(v66, v67, v62);
  if (v68)
    goto LABEL_45;
  OUTLINED_FUNCTION_116_6();
  OUTLINED_FUNCTION_57_17(v119, v69, v70);
  OUTLINED_FUNCTION_235();
  if (!*(_QWORD *)(v20 + 16))
  {
LABEL_46:
    OUTLINED_FUNCTION_56_1(v48, 1);
LABEL_47:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_16_13();
  v71 = OUTLINED_FUNCTION_153_1();
  if ((v72 & 1) != 0)
  {
    v73 = OUTLINED_FUNCTION_110_8(v71, *(_QWORD *)(v20 + 56));
    sub_22AA20444(v73, v48);
    v74 = 0;
  }
  else
  {
    v74 = 1;
  }
  OUTLINED_FUNCTION_56_1(v48, v74);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_106_0(v48, 1, v62);
  if (v68)
    goto LABEL_47;
  v75 = *(_QWORD *)v48;
  OUTLINED_FUNCTION_50_9();
  sub_22AA203C0(v48);
  v76 = (uint64_t)v112;
  *v112 = 0;
  v77 = *(void (**)(uint64_t))(v21 + 104);
  LODWORD(v121) = *MEMORY[0x24BE62EF8];
  *(_QWORD *)&v120 = v77;
  v77(v76);
  v51 = *(int64_t **)(v75 + 16);
  v78 = sub_22AA0AF6C(v76, (uint64_t)v51);
  if (v51)
  {
    if ((unint64_t)v51 > *(_QWORD *)(v115 + 16))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      v104 = OUTLINED_FUNCTION_3_35();
      OUTLINED_FUNCTION_11_14((uint64_t)v51, v105, v106, v104);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v79 = 0;
    v48 = v115 + 32;
    while (1)
    {
      v80 = *(_QWORD *)(v48 + 8 * (_QWORD)v79);
      if ((v80 & 0x8000000000000000) != 0)
        break;
      if (v80 >= *(_QWORD *)(v75 + 16))
        goto LABEL_39;
      if ((*(_BYTE *)(v75 + 32 + 16 * v80 + 8) & 1) != 0)
      {
        *v43 = 0;
        ((void (*)(_BYTE *, _QWORD, uint64_t))v120)(v43, v121, v37);
      }
      else
      {
        v81 = v122;
        sub_22ABDE45C();
        OUTLINED_FUNCTION_66_12((uint64_t)v43, v81, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB5D7C8();
        v78 = v82;
      }
      if ((unint64_t)v79 >= *(_QWORD *)(v78 + 16))
        goto LABEL_40;
      OUTLINED_FUNCTION_66_12(v78+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * (_QWORD)v79, (uint64_t)v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40));
      v79 = (int64_t *)((char *)v79 + 1);
      if (v51 == v79)
        goto LABEL_23;
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
LABEL_23:
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_16_13();
  v83 = v113;
  sub_22ABDE750();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_220();
  v84 = *(_QWORD *)v37;
  if (*(_QWORD *)(*(_QWORD *)v37 + 16))
  {
    OUTLINED_FUNCTION_130_2();
    v85 = sub_22AA03688();
    v86 = v115;
    if ((v87 & 1) != 0)
      v88 = *(_QWORD *)(*(_QWORD *)(v84 + 56) + 8 * v85);
    else
      v88 = 0;
  }
  else
  {
    v88 = 0;
    v86 = v115;
  }
  v124 = 0x736F70736E617274;
  v125 = 0xE900000000000065;
  OUTLINED_FUNCTION_9_97();
  v123 = v88;
  OUTLINED_FUNCTION_72_22();
  OUTLINED_FUNCTION_76_21();
  OUTLINED_FUNCTION_23();
  v89 = v124;
  v122 = v125;
  sub_22AA1DE90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
  v91 = *(_QWORD *)(*(_QWORD *)(v90 - 8) + 72);
  OUTLINED_FUNCTION_122_7();
  v92 = OUTLINED_FUNCTION_8_101();
  *(_OWORD *)(v92 + 16) = xmmword_22ABE9FB0;
  v121 = v92;
  v93 = (_QWORD *)(v92 + v88);
  *(_QWORD *)&v120 = v90;
  *v93 = 120;
  v93[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_16_23();
  sub_22ABDE558();
  v94 = (_QWORD *)((char *)v93 + v91);
  *v94 = 1836213616;
  v94[1] = 0xE400000000000000;
  v95 = *(_QWORD *)(v86 + 16);
  if (v95)
  {
    v118 = v89;
    v124 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_136_3();
    OUTLINED_FUNCTION_247();
    v96 = v124;
    v51 = (int64_t *)(v86 + 32);
    v117 = v95;
    while (1)
    {
      v97 = *v51++;
      v48 = v97;
      if (v97 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_41;
      if (v48 > 0x7FFFFFFF)
        goto LABEL_42;
      v124 = v96;
      v98 = *(_QWORD *)(v96 + 16);
      if (v98 >= *(_QWORD *)(v96 + 24) >> 1)
      {
        OUTLINED_FUNCTION_106_6();
        v96 = v124;
      }
      *(_QWORD *)(v96 + 16) = v98 + 1;
      *(_DWORD *)(v96 + 4 * v98 + 32) = v48;
      if (!--v95)
      {
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_220();
        v83 = v113;
        v95 = v117;
        goto LABEL_37;
      }
    }
  }
  OUTLINED_FUNCTION_2_1();
LABEL_37:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v99 = OUTLINED_FUNCTION_33_2();
  v120 = xmmword_22ABE8E30;
  *(_OWORD *)(v99 + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(v99 + 32) = v95;
  sub_22ABDE57C();
  OUTLINED_FUNCTION_29_46();
  sub_22ABDEAC8();
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  OUTLINED_FUNCTION_28_47();
  *(_OWORD *)(OUTLINED_FUNCTION_60_26() + 16) = v120;
  v100 = v110;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 16))(v108, v83, v111);
  OUTLINED_FUNCTION_124_1();
  sub_22ABDE420();
  OUTLINED_FUNCTION_105_6();
  OUTLINED_FUNCTION_130_2();
  OUTLINED_FUNCTION_100_7();
  sub_22AA1FA24();
  v101 = OUTLINED_FUNCTION_77_18();
  OUTLINED_FUNCTION_82_8(v101, v102);
  OUTLINED_FUNCTION_48_2(v83, *(uint64_t (**)(uint64_t, uint64_t))(v100 + 8));
  OUTLINED_FUNCTION_83_9();
  OUTLINED_FUNCTION_82_8(v119, v103);
  OUTLINED_FUNCTION_3();
}

void sub_22ABACB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, _QWORD);
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int16 v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _DWORD *v97;
  unsigned int *v98;
  uint64_t v99;
  _BYTE *v100;
  void (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  unsigned int *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  char *v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  void (*v123)(uint64_t, _BYTE *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  __n128 *v134;
  uint64_t v135;
  uint64_t (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t (*v138)(uint64_t, _QWORD);
  uint64_t (*v139)(uint64_t, _QWORD);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  _BYTE *v145;
  _BYTE *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;

  OUTLINED_FUNCTION_4_4();
  a20 = v25;
  a21 = v26;
  v158 = v27;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v150 = OUTLINED_FUNCTION_26_63();
  OUTLINED_FUNCTION_180_0();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_0();
  v38 = OUTLINED_FUNCTION_13_86(v37);
  OUTLINED_FUNCTION_40_1(v38, (uint64_t)&v173);
  v149 = v39;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_28_1();
  v164 = OUTLINED_FUNCTION_17_74(v42);
  OUTLINED_FUNCTION_118_6();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v45);
  v165 = (char *)&v143 - v46;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_28_1();
  v49 = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_87();
  v163 = v51;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_188_0();
  MEMORY[0x24BDAC7A8](v53);
  v55 = (char *)&v143 - v54;
  v153 = OUTLINED_FUNCTION_19_19();
  v152 = *(_QWORD *)(v153 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v56);
  v160 = (uint64_t)&v143 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = v21;
  OUTLINED_FUNCTION_39_12(&v170);
  sub_22AA1E26C();
  v154 = v31;
  v155 = v29;
  sub_22AA1E26C();
  OUTLINED_FUNCTION_53_36();
  if (!v58)
    goto LABEL_66;
  v147 = v24;
  OUTLINED_FUNCTION_39_17();
  v156 = v35;
  v157 = v33;
  v59 = sub_22AA03688();
  if ((v60 & 1) != 0)
  {
    v61 = v59;
    v62 = v172;
    v63 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_36_47();
    OUTLINED_FUNCTION_120_4(v62 + v64 * v61);
    v65 = (uint64_t)v55;
    v66 = 0;
  }
  else
  {
    v63 = OUTLINED_FUNCTION_3_35();
    v65 = OUTLINED_FUNCTION_151_1();
  }
  OUTLINED_FUNCTION_70_3(v65, v66);
  v67 = v49;
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_35();
  v68 = OUTLINED_FUNCTION_151_1();
  OUTLINED_FUNCTION_106_0(v68, v69, v63);
  if (v70)
    goto LABEL_67;
  OUTLINED_FUNCTION_116_6();
  OUTLINED_FUNCTION_57_17(v160, v71, v72);
  OUTLINED_FUNCTION_117_4();
  if (!v171)
  {
LABEL_68:
    OUTLINED_FUNCTION_70_3(v22, 1);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  OUTLINED_FUNCTION_22_21();
  v73 = OUTLINED_FUNCTION_112_6();
  v55 = v165;
  if ((v74 & 1) != 0)
  {
    OUTLINED_FUNCTION_169_0(v73, v172);
    v75 = 0;
  }
  else
  {
    v75 = 1;
  }
  __swift_storeEnumTagSinglePayload(v22, v75, 1, v63);
  OUTLINED_FUNCTION_23();
  v76 = OUTLINED_FUNCTION_218();
  OUTLINED_FUNCTION_106_0(v76, v77, v63);
  if (v70)
    goto LABEL_69;
  OUTLINED_FUNCTION_178(*(_QWORD *)v22, (uint64_t)&a17);
  OUTLINED_FUNCTION_217();
  if (!v171)
  {
LABEL_70:
    OUTLINED_FUNCTION_70_3(v163, 1);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  OUTLINED_FUNCTION_22_21();
  v78 = OUTLINED_FUNCTION_112_6();
  if ((v79 & 1) != 0)
  {
    v80 = OUTLINED_FUNCTION_110_8(v78, v172);
    v81 = (uint64_t *)v163;
    OUTLINED_FUNCTION_221(v80);
    v82 = 0;
  }
  else
  {
    v82 = 1;
    v81 = (uint64_t *)v163;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v81, v82, 1, v63);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_106_0((uint64_t)v81, 1, v63);
  if (v70)
    goto LABEL_71;
  v83 = *v81;
  OUTLINED_FUNCTION_22_21();
  v84 = (uint64_t)v81;
  v85 = v83;
  sub_22AA203C0(v84);
  sub_22ABBFED0(v83);
  if ((v86 & 0x100) == 0)
  {
    if ((v86 & 1) != 0)
    {
      OUTLINED_FUNCTION_1_58();
      OUTLINED_FUNCTION_31_10();
      v143 = 497;
      OUTLINED_FUNCTION_193_0();
      OUTLINED_FUNCTION_156_3();
      goto LABEL_74;
    }
    v87 = *(_QWORD *)(v83 + 16);
    v88 = v87 - 1;
    OUTLINED_FUNCTION_116_6();
    v91 = __OFADD__(v87 - 1, v90);
    v92 = v87 - 1 + v90;
    if (!v91)
    {
      v93 = v89;
      v91 = __OFSUB__(v92, v89);
      v94 = v92 - (_QWORD)v89;
      if (v91)
      {
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      v91 = __OFSUB__(v94, v158);
      v95 = v94 - v158;
      if (v91)
      {
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
      if (v95)
      {
        v22 = MEMORY[0x24BEE4AF8];
        sub_22AA36130();
        v169 = v96;
        if (!v87)
        {
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        if (*(_QWORD *)(v85 + 16) < v88)
        {
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        v97 = (_DWORD *)MEMORY[0x24BE62F00];
        v98 = (unsigned int *)MEMORY[0x24BE62EF8];
        if (v87 == 1)
        {
          OUTLINED_FUNCTION_3_8();
        }
        else
        {
          v144 = v93;
          v167 = v22;
          OUTLINED_FUNCTION_42_36();
          v99 = v167;
          LODWORD(v163) = *v97;
          v162 = *v98;
          v143 = v85;
          v100 = (_BYTE *)(v85 + 40);
          v101 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 104);
          v102 = v164;
          do
          {
            if ((*v100 & 1) != 0)
            {
              *v55 = 0;
              v103 = v162;
            }
            else
            {
              *(_QWORD *)v55 = *((_QWORD *)v100 - 1);
              v103 = v163;
            }
            v101(v55, v103, v102);
            OUTLINED_FUNCTION_195(v67, (uint64_t)v55);
            v167 = v99;
            v104 = v67;
            v105 = *(_QWORD *)(v99 + 16);
            if (v105 >= *(_QWORD *)(v99 + 24) >> 1)
            {
              OUTLINED_FUNCTION_41_42();
              v102 = v164;
              v99 = v167;
            }
            *(_QWORD *)(v99 + 16) = v105 + 1;
            OUTLINED_FUNCTION_23_2();
            OUTLINED_FUNCTION_195(v99 + v106 + *(_QWORD *)(v23 + 72) * v105, v104);
            v100 += 16;
            --v88;
            v55 = v165;
            v67 = v104;
          }
          while (v88);
          OUTLINED_FUNCTION_1_58();
          v93 = v144;
        }
        sub_22A9A08E0();
        v22 = MEMORY[0x24BE62EF8];
        v109 = (unsigned int *)MEMORY[0x24BE62F00];
        if (__OFADD__(v93, v158))
          goto LABEL_63;
        v55 = (char *)sub_22ABABD78((uint64_t)&v93[v158], v161);
        v111 = v110;
        v93 = v112;
        v114 = v113;
        OUTLINED_FUNCTION_23();
        v115 = (v114 >> 1) - (_QWORD)v93;
        if (__OFSUB__(v114 >> 1, v93))
        {
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        if (v115)
        {
          v165 = (char *)(v114 >> 1);
          v167 = MEMORY[0x24BEE4AF8];
          OUTLINED_FUNCTION_42_36();
          if ((v115 & 0x8000000000000000) != 0)
          {
LABEL_65:
            __break(1u);
LABEL_66:
            v140 = OUTLINED_FUNCTION_3_35();
            OUTLINED_FUNCTION_11_14((uint64_t)v55, v141, v142, v140);
LABEL_67:
            __break(1u);
            goto LABEL_68;
          }
          v144 = v55;
          v163 = v23;
          v55 = (char *)v167;
          v162 = *v109;
          LODWORD(v161) = *(_DWORD *)v22;
          v116 = (_BYTE *)(v111 + 16 * (_QWORD)v93 + 8);
          v117 = v146;
          v118 = v145;
          v120 = v164;
          v119 = v165;
          while ((uint64_t)v93 < (uint64_t)v119)
          {
            if ((*v116 & 1) != 0)
            {
              *v117 = 0;
              v121 = &a17;
            }
            else
            {
              *(_QWORD *)v117 = *((_QWORD *)v116 - 1);
              v121 = (uint64_t *)&a19;
            }
            v122 = v163;
            (*(void (**)(_BYTE *, _QWORD, uint64_t))(v163 + 104))(v117, *((unsigned int *)v121 - 64), v120);
            v123 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v122 + 32);
            v123((uint64_t)v118, v117, v120);
            v167 = (uint64_t)v55;
            v22 = *((_QWORD *)v55 + 2);
            if (v22 >= *((_QWORD *)v55 + 3) >> 1)
            {
              OUTLINED_FUNCTION_41_42();
              v117 = v146;
              v55 = (char *)v167;
            }
            *((_QWORD *)v55 + 2) = v22 + 1;
            OUTLINED_FUNCTION_23_2();
            v123((uint64_t)&v55[v124 + *(_QWORD *)(v122 + 72) * v22], v118, v120);
            ++v93;
            v116 += 16;
            v119 = v165;
            if (v165 == v93)
              goto LABEL_47;
          }
          __break(1u);
          goto LABEL_56;
        }
LABEL_47:
        swift_unknownObjectRelease();
        v107 = &v169;
        sub_22A9A08E0();
      }
      else
      {
        OUTLINED_FUNCTION_3_8();
        OUTLINED_FUNCTION_1_58();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FB98);
        v107 = (_QWORD *)((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
        v108 = swift_allocObject();
        *(_OWORD *)(v108 + 16) = xmmword_22ABE8E30;
        sub_22ABDE45C();
        v169 = v108;
      }
      OUTLINED_FUNCTION_216();
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_131_4();
      if (v125 && (v126 = OUTLINED_FUNCTION_206(), (v127 & 1) != 0))
        v128 = *(_QWORD *)(v107[7] + 8 * v126);
      else
        v128 = 0;
      v167 = 0x726568746167;
      v168 = 0xE600000000000000;
      OUTLINED_FUNCTION_9_97();
      v166 = v128;
      sub_22ABDFD7C();
      sub_22ABDEDC8();
      OUTLINED_FUNCTION_23();
      v22 = v168;
      sub_22AA1DE90();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
      v129 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768) - 8) + 72);
      OUTLINED_FUNCTION_122_7();
      v130 = OUTLINED_FUNCTION_8_101();
      *(_OWORD *)(v130 + 16) = xmmword_22ABEDF90;
      v131 = &v93[v130];
      *(_QWORD *)v131 = 120;
      *((_QWORD *)v131 + 1) = 0xE100000000000000;
      OUTLINED_FUNCTION_54_4();
      OUTLINED_FUNCTION_228();
      v132 = &v93[v130 + v129];
      *(_QWORD *)v132 = 0x73656369646E69;
      *((_QWORD *)v132 + 1) = 0xE700000000000000;
      v55 = v155;
      OUTLINED_FUNCTION_54_4();
      OUTLINED_FUNCTION_228();
      v133 = &v93[2 * v129 + v130];
      *(_QWORD *)v133 = 0x69645F6863746162;
      *((_QWORD *)v133 + 1) = 0xEA0000000000736DLL;
      if (v158 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (v158 <= 0x7FFFFFFF)
        {
          OUTLINED_FUNCTION_160_2();
          OUTLINED_FUNCTION_29_46();
          OUTLINED_FUNCTION_79_19();
          __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
          OUTLINED_FUNCTION_28_47();
          v134 = (__n128 *)OUTLINED_FUNCTION_59_25();
          OUTLINED_FUNCTION_249(v134, (__n128)xmmword_22ABE8E30);
          OUTLINED_FUNCTION_202();
          v135 = v159;
          OUTLINED_FUNCTION_37_7(v148, v159, v136);
          OUTLINED_FUNCTION_16_23();
          sub_22ABDE420();
          OUTLINED_FUNCTION_203();
          OUTLINED_FUNCTION_261();
          OUTLINED_FUNCTION_244();
          v137 = OUTLINED_FUNCTION_14_50();
          OUTLINED_FUNCTION_82_8(v137, v138);
          OUTLINED_FUNCTION_28_4(v135, *(uint64_t (**)(uint64_t, uint64_t))(v129 + 8));
          OUTLINED_FUNCTION_83_9();
          OUTLINED_FUNCTION_82_8(v160, v139);
          OUTLINED_FUNCTION_3();
          return;
        }
        goto LABEL_60;
      }
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
LABEL_72:
  OUTLINED_FUNCTION_1_58();
  OUTLINED_FUNCTION_31_10();
  v143 = 494;
  OUTLINED_FUNCTION_193_0();
  OUTLINED_FUNCTION_156_3();
LABEL_74:
  OUTLINED_FUNCTION_252();
  __break(1u);
}

void sub_22ABAD644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t (**v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (**v31)(uint64_t, uint64_t);
  uint64_t (**v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (**v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, _QWORD);
  unsigned int *v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t *v77;
  void (*v78)(uint64_t, _BYTE *, uint64_t);
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t *v89;
  void (*v90)(uint64_t (**)(uint64_t, uint64_t), uint64_t (**)(uint64_t, uint64_t), uint64_t);
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (**v107)(uint64_t, uint64_t);
  unint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  int64_t *v114;
  int64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t (*v122)(uint64_t, _QWORD);
  uint64_t (*v123)(uint64_t, _QWORD);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t (**v140)(uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  __int128 v147;
  char *v148;
  uint64_t (**v149)(uint64_t, uint64_t);
  _BYTE *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;

  OUTLINED_FUNCTION_4_4();
  a19 = v25;
  a20 = v26;
  v137 = v27;
  v146 = v28;
  v30 = v29;
  v32 = v31;
  v33 = OUTLINED_FUNCTION_26_63();
  OUTLINED_FUNCTION_180_0();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v127 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = OUTLINED_FUNCTION_51_12();
  v134 = *(_QWORD *)(v135 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_28_1();
  v40 = OUTLINED_FUNCTION_17_74(v39);
  OUTLINED_FUNCTION_33_16();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_12_0();
  v149 = v43;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v44);
  v148 = (char *)&v127 - v45;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_28_1();
  v128 = v48;
  v139 = OUTLINED_FUNCTION_19_64();
  v138 = *(_QWORD *)(v139 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_39_1((uint64_t)&v127 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v52);
  v53 = (void *)OUTLINED_FUNCTION_223();
  v136 = v20;
  OUTLINED_FUNCTION_39_12(v53);
  OUTLINED_FUNCTION_238();
  OUTLINED_FUNCTION_53_36();
  if (!v54)
  {
LABEL_73:
    v124 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_11_14(v24, v125, v126, v124);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v130 = v36;
  v131 = v23;
  OUTLINED_FUNCTION_124_1();
  v140 = v32;
  v141 = v30;
  v55 = sub_22AA03688();
  v132 = v33;
  if ((v56 & 1) != 0)
  {
    v57 = v55;
    v58 = v154;
    v59 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_36_47();
    OUTLINED_FUNCTION_120_4(v58 + v60 * v57);
    v61 = v24;
    v62 = 0;
  }
  else
  {
    v59 = OUTLINED_FUNCTION_3_35();
    v61 = OUTLINED_FUNCTION_151_1();
  }
  OUTLINED_FUNCTION_79_8(v61, v62);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3_35();
  OUTLINED_FUNCTION_106_0(v24, 1, v59);
  v63 = v146;
  if (v64)
    goto LABEL_74;
  *(_QWORD *)&v147 = *(_QWORD *)v24;
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_117_4();
  if (!v153)
  {
LABEL_75:
    OUTLINED_FUNCTION_79_8(v145, 1);
LABEL_76:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_22_21();
  v65 = OUTLINED_FUNCTION_112_6();
  if ((v66 & 1) != 0)
  {
    v67 = OUTLINED_FUNCTION_103_8(v65);
    v68 = v145;
    OUTLINED_FUNCTION_221(v67);
    v69 = 0;
  }
  else
  {
    v69 = 1;
    v68 = v145;
  }
  OUTLINED_FUNCTION_79_8(v68, v69);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_106_0(v68, 1, v59);
  if (v64)
    goto LABEL_76;
  OUTLINED_FUNCTION_116_6();
  OUTLINED_FUNCTION_57_17(v143, v70, v71);
  sub_22AA203C0(v68);
  v24 = *(_QWORD *)(v147 + 16);
  v72 = (unsigned int *)MEMORY[0x24BE62F00];
  if ((v137 & 1) == 0)
  {
    if (!v24)
    {
      OUTLINED_FUNCTION_260();
      goto LABEL_53;
    }
    v83 = 0;
    v84 = v63[2];
    v148 = (char *)(v147 + 32);
    OUTLINED_FUNCTION_147_2();
    v85 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (!v84)
        goto LABEL_32;
      if (v63[4] != v83)
      {
        if (v84 == 1)
          goto LABEL_32;
        if (v63[5] != v83)
          break;
      }
LABEL_41:
      if (++v83 == v24)
      {
LABEL_51:
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
    }
    if (v84 != 2)
    {
      v86 = 6;
      do
      {
        v87 = v86 - 3;
        if (__OFADD__(v86 - 4, 1))
          goto LABEL_71;
        if (v63[v86] == v83)
          goto LABEL_41;
        ++v86;
      }
      while (v87 != v84);
    }
LABEL_32:
    if (v83 >= *(_QWORD *)(v147 + 16))
      goto LABEL_72;
    v88 = &v148[16 * v83];
    if ((v88[8] & 1) != 0)
    {
      *v22 = 0;
      v89 = &a16;
    }
    else
    {
      *(_QWORD *)v22 = *(_QWORD *)v88;
      v89 = &a17;
    }
    (*(void (**)(uint64_t (**)(uint64_t, uint64_t), _QWORD, uint64_t))(v21 + 104))((uint64_t (**)(uint64_t, uint64_t))v22, *((unsigned int *)v89 - 64), v40);
    v90 = *(void (**)(uint64_t (**)(uint64_t, uint64_t), uint64_t (**)(uint64_t, uint64_t), uint64_t))(v21 + 32);
    v90(v149, (uint64_t (**)(uint64_t, uint64_t))v22, v40);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_242();
      v85 = v94;
    }
    v91 = *(_QWORD *)(v85 + 16);
    if (v91 >= *(_QWORD *)(v85 + 24) >> 1)
    {
      OUTLINED_FUNCTION_242();
      v85 = v95;
    }
    *(_QWORD *)(v85 + 16) = v91 + 1;
    OUTLINED_FUNCTION_74_19();
    v90((uint64_t (**)(uint64_t, uint64_t))(v92 + v93 * v91), v149, v40);
    v63 = v146;
    goto LABEL_41;
  }
  if (v24)
  {
    v151 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_136_3();
    OUTLINED_FUNCTION_42_36();
    v73 = v151;
    OUTLINED_FUNCTION_147_2();
    v74 = (_BYTE *)(v147 + 40);
    v149 = *(uint64_t (***)(uint64_t, uint64_t))(v21 + 104);
    v75 = v129;
    v76 = v128;
    do
    {
      if ((*v74 & 1) != 0)
      {
        *v75 = 0;
        v77 = &a16;
      }
      else
      {
        *(_QWORD *)v75 = *((_QWORD *)v74 - 1);
        v77 = &a17;
      }
      ((void (*)(_BYTE *, _QWORD, uint64_t))v149)(v75, *((unsigned int *)v77 - 64), v40);
      v78 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v21 + 32);
      v78((uint64_t)v76, v75, v40);
      v151 = v73;
      v80 = *(_QWORD *)(v73 + 16);
      v79 = *(_QWORD *)(v73 + 24);
      if (v80 >= v79 >> 1)
      {
        OUTLINED_FUNCTION_165_1(v79);
        OUTLINED_FUNCTION_41_42();
        v75 = v129;
        v73 = v151;
      }
      *(_QWORD *)(v73 + 16) = v80 + 1;
      OUTLINED_FUNCTION_74_19();
      v78(v81 + v82 * v80, v76, v40);
      v74 += 16;
      --v24;
    }
    while (v24);
    OUTLINED_FUNCTION_260();
    v63 = v146;
    v72 = (unsigned int *)MEMORY[0x24BE62F00];
  }
  else
  {
    OUTLINED_FUNCTION_260();
    v73 = MEMORY[0x24BEE4AF8];
  }
  v22 = (_BYTE *)v63[2];
  if (v22)
  {
    v96 = *v72;
    v97 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v21 + 104);
    OUTLINED_FUNCTION_39_17();
    v24 = 0;
    v98 = v148;
    while (1)
    {
      v99 = v63[v24 + 4];
      *v98 = 1;
      v97(v98, v96, v40);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB5D7C8();
        v73 = v102;
      }
      v98 = v148;
      if ((v99 & 0x8000000000000000) != 0)
        break;
      if (v99 >= *(_QWORD *)(v73 + 16))
        goto LABEL_70;
      ++v24;
      OUTLINED_FUNCTION_74_19();
      OUTLINED_FUNCTION_66_12(v100 + v101 * v99, (uint64_t)v98, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40));
      if (v22 == (_BYTE *)v24)
        goto LABEL_51;
    }
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
LABEL_53:
  OUTLINED_FUNCTION_29();
  sub_22ABDE750();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_225();
  if (*(_QWORD *)(*(_QWORD *)v24 + 16) && (OUTLINED_FUNCTION_206(), (v103 & 1) != 0))
    OUTLINED_FUNCTION_205();
  else
    v22 = 0;
  v151 = 0x656375646572;
  v152 = 0xE600000000000000;
  OUTLINED_FUNCTION_9_97();
  v150 = v22;
  OUTLINED_FUNCTION_72_22();
  OUTLINED_FUNCTION_76_21();
  OUTLINED_FUNCTION_23();
  v104 = v151;
  v148 = (char *)v152;
  sub_22AA1DE90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
  v106 = *(_QWORD *)(v105 - 8);
  v107 = *(uint64_t (***)(uint64_t, uint64_t))(v106 + 72);
  v108 = (*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
  v109 = OUTLINED_FUNCTION_8_101();
  *(_OWORD *)(v109 + 16) = xmmword_22ABEDF90;
  v110 = (_QWORD *)(v109 + v108);
  *v110 = 120;
  v110[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_22_21();
  sub_22ABDE558();
  v111 = (uint64_t (**)(uint64_t, uint64_t))((char *)v107 + v109 + v108);
  *v111 = 1936029793;
  v111[1] = 0xE400000000000000;
  *(_QWORD *)&v147 = v111;
  v112 = v146;
  v149 = (uint64_t (**)(uint64_t, uint64_t))v146[2];
  if (v149)
  {
    v140 = v107;
    v141 = v105;
    v144 = v109;
    v145 = v104;
    v151 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_136_3();
    OUTLINED_FUNCTION_247();
    v113 = v151;
    v114 = v112 + 4;
    v107 = v149;
    while (1)
    {
      v115 = *v114++;
      v24 = v115;
      if (v115 < (uint64_t)0xFFFFFFFF80000000)
        break;
      if (v24 > 0x7FFFFFFF)
        goto LABEL_68;
      v151 = v113;
      v117 = *(_QWORD *)(v113 + 16);
      v116 = *(_QWORD *)(v113 + 24);
      if (v117 >= v116 >> 1)
      {
        OUTLINED_FUNCTION_165_1(v116);
        sub_22AB4D280();
        v113 = v151;
      }
      *(_QWORD *)(v113 + 16) = v117 + 1;
      *(_DWORD *)(v113 + 4 * v117 + 32) = v24;
      v107 = (uint64_t (**)(uint64_t, uint64_t))((char *)v107 - 1);
      if (!v107)
      {
        OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_225();
        OUTLINED_FUNCTION_220();
        goto LABEL_66;
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_30();
LABEL_66:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v118 = OUTLINED_FUNCTION_33_2();
  v147 = xmmword_22ABE8E30;
  *(_OWORD *)(v118 + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(v118 + 32) = v149;
  sub_22ABDE57C();
  v119 = (_QWORD *)((char *)v110 + 2 * (_QWORD)v107);
  *v119 = 0x6D69645F7065656BLL;
  v119[1] = 0xE900000000000073;
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_29_46();
  sub_22ABDEAC8();
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  OUTLINED_FUNCTION_28_47();
  *(_OWORD *)(OUTLINED_FUNCTION_60_26() + 16) = v147;
  OUTLINED_FUNCTION_202();
  OUTLINED_FUNCTION_49(v133, v142, v120);
  OUTLINED_FUNCTION_39_17();
  sub_22ABDE420();
  OUTLINED_FUNCTION_105_6();
  OUTLINED_FUNCTION_100_7();
  sub_22AA1FA24();
  v121 = OUTLINED_FUNCTION_77_18();
  OUTLINED_FUNCTION_82_8(v121, v122);
  OUTLINED_FUNCTION_59_8(v107[1]);
  OUTLINED_FUNCTION_83_9();
  OUTLINED_FUNCTION_82_8(v143, v123);
  OUTLINED_FUNCTION_3();
}

void sub_22ABAE078()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char **v56;
  int v57;
  char **v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t (*v103)(uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _DWORD *v128;
  _DWORD *v129;
  _BYTE *v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  _QWORD *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  _BYTE *v152;
  _QWORD *v153;
  BOOL v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  void (**v174)(uint64_t, uint64_t);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t i;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  _QWORD *v194;
  char *v195;
  int v196;
  int v197;
  char *v198;
  char *v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  _QWORD *v204;
  _BYTE *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(char **, uint64_t, char *);
  int v212;
  _BYTE *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char **v222;
  _QWORD *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231[4];

  OUTLINED_FUNCTION_4_4();
  v204 = v0;
  v190 = v3;
  v189 = v4;
  v6 = v5;
  v7 = 0;
  v8 = OUTLINED_FUNCTION_26_63();
  OUTLINED_FUNCTION_40_1(v8, (uint64_t)&v220);
  v187 = v9;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v226 = OUTLINED_FUNCTION_17_74(v11);
  v224 = *(_QWORD *)(v226 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_12_0();
  v223 = v16;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_12_0();
  v213 = v18;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B780);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&i - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = OUTLINED_FUNCTION_51_12();
  v203 = *(char **)(v24 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&i - v28;
  v30 = sub_22ABDE744();
  v219 = *(_QWORD *)(v30 - 8);
  v220 = v30;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_0();
  v225 = v32;
  v33 = OUTLINED_FUNCTION_144_1();
  v217 = *(_QWORD *)(v33 - 8);
  v218 = v33;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_0();
  v216 = v35;
  OUTLINED_FUNCTION_19_64();
  OUTLINED_FUNCTION_251();
  v227 = v36;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v39);
  v215 = (uint64_t)&i - v40;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_28_1();
  v214 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v45);
  v47 = (char *)&i - v46;
  v221 = OUTLINED_FUNCTION_125_5();
  OUTLINED_FUNCTION_33_16();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_0();
  v222 = v49;
  v188 = v6;
  v50 = *(_QWORD *)(sub_22ABDE5E8() + 16);
  v202 = v2;
  v201 = v24;
  if (v50)
  {
    v198 = v47;
    v184 = v23;
    OUTLINED_FUNCTION_23_2();
    i = v51;
    v53 = v51 + v52;
    v212 = *MEMORY[0x24BE63058];
    v197 = *MEMORY[0x24BE63060];
    v196 = *MEMORY[0x24BE631E8];
    v209 = *(_QWORD *)(v1 + 72);
    v211 = *(void (**)(char **, uint64_t, char *))(v1 + 16);
    v54 = MEMORY[0x24BEE4AF8];
    v228 = MEMORY[0x24BEE4AF8];
    v23 = (char *)v221;
    v55 = v1;
    v210 = v1;
    v56 = v222;
    v195 = v29;
    do
    {
      v211(v56, v53, v23);
      v57 = (*(uint64_t (**)(char **, char *))(v55 + 88))(v56, v23);
      if (v57 == v212)
      {
        v58 = v56;
        v59 = v54;
        (*(void (**)(char **, char *))(v55 + 96))(v58, v23);
        v23 = *v58;
        v60 = v204[1];
        if (!*(_QWORD *)(v60 + 16))
        {
          v180 = OUTLINED_FUNCTION_3_35();
          v84 = OUTLINED_FUNCTION_11_14((uint64_t)v198, v181, v182, v180);
LABEL_124:
          OUTLINED_FUNCTION_255(v84, &qword_255B117B0);
          v229 = 0;
          v230 = 0xE000000000000000;
          sub_22ABDF7A0();
          swift_bridgeObjectRelease();
          v229 = 0x20726F736E6554;
          v230 = 0xE700000000000000;
          sub_22ABDEDC8();
          sub_22ABDEDC8();
          OUTLINED_FUNCTION_31_10();
          i = 35;
          OUTLINED_FUNCTION_156_3();
          goto LABEL_125;
        }
        v208 = v7;
        OUTLINED_FUNCTION_60_5();
        v61 = OUTLINED_FUNCTION_158_1();
        if ((v62 & 1) != 0)
        {
          v63 = v61;
          v64 = *(_QWORD *)(v60 + 56);
          v65 = OUTLINED_FUNCTION_3_35();
          OUTLINED_FUNCTION_36_47();
          v67 = v64 + v66 * v63;
          v68 = (uint64_t)v198;
          sub_22AA20444(v67, (uint64_t)v198);
          v69 = v68;
          v70 = 0;
        }
        else
        {
          v65 = OUTLINED_FUNCTION_3_35();
          v68 = (uint64_t)v198;
          v69 = OUTLINED_FUNCTION_256();
        }
        OUTLINED_FUNCTION_131_3(v69, v70);
        v81 = v200;
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_3_35();
        v82 = OUTLINED_FUNCTION_256();
        v84 = OUTLINED_FUNCTION_106_0(v82, v83, v65);
        if (v85)
          goto LABEL_124;
        sub_22A9AD754(v68, &qword_255B117B0);
        if (!*(_QWORD *)(v60 + 16))
          goto LABEL_115;
        OUTLINED_FUNCTION_60_5();
        v86 = OUTLINED_FUNCTION_158_1();
        if ((v87 & 1) != 0)
        {
          v88 = OUTLINED_FUNCTION_110_8(v86, *(_QWORD *)(v60 + 56));
          sub_22AA20444(v88, (uint64_t)v81);
          v89 = 0;
        }
        else
        {
          v89 = 1;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v81, v89, 1, v65);
        OUTLINED_FUNCTION_58_1();
        v90 = OUTLINED_FUNCTION_246();
        OUTLINED_FUNCTION_106_0(v90, v91, v65);
        if (v85)
          goto LABEL_116;
        v92 = *v81;
        OUTLINED_FUNCTION_16_13();
        sub_22AA203C0((uint64_t)v81);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v93 = v228;
        }
        else
        {
          OUTLINED_FUNCTION_126_4();
          v93 = v108;
        }
        v95 = *(_QWORD *)(v93 + 16);
        v94 = *(_QWORD *)(v93 + 24);
        v24 = v95 + 1;
        if (v95 >= v94 >> 1)
        {
          OUTLINED_FUNCTION_91_5(v94);
          sub_22AA36158();
          v93 = v109;
        }
        *(_QWORD *)(v93 + 16) = v24;
        v228 = v93;
        *(_QWORD *)(v93 + 8 * v95 + 32) = v92;
        if (!*(_QWORD *)(v60 + 16))
          goto LABEL_117;
        OUTLINED_FUNCTION_60_5();
        v96 = OUTLINED_FUNCTION_158_1();
        v2 = v202;
        v54 = v59;
        if ((v97 & 1) != 0)
        {
          v98 = OUTLINED_FUNCTION_110_8(v96, *(_QWORD *)(v60 + 56));
          OUTLINED_FUNCTION_159_1(v98, (uint64_t)v231);
          v99 = 0;
        }
        else
        {
          v99 = 1;
          v23 = v199;
        }
        v56 = v222;
        __swift_storeEnumTagSinglePayload((uint64_t)v23, v99, 1, v65);
        OUTLINED_FUNCTION_58_1();
        v100 = OUTLINED_FUNCTION_69_9();
        OUTLINED_FUNCTION_106_0(v100, v101, v65);
        if (v85)
          goto LABEL_118;
        OUTLINED_FUNCTION_59_5(v214, (uint64_t)&v23[*(int *)(v65 + 20)], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v227 + 16));
        OUTLINED_FUNCTION_198_0();
        OUTLINED_FUNCTION_58_1();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_92_11();
          v54 = v110;
        }
        OUTLINED_FUNCTION_138_3();
        v7 = v208;
        v29 = v195;
        if (*(_QWORD *)(v54 + 16) >= *(_QWORD *)(v54 + 24) >> 1)
        {
          OUTLINED_FUNCTION_92_11();
          v54 = v111;
        }
        v102 = OUTLINED_FUNCTION_82_16();
        OUTLINED_FUNCTION_59_5(v102, v214, v103);
      }
      else
      {
        if (v57 != v197)
        {
          OUTLINED_FUNCTION_31_10();
          i = 304;
          OUTLINED_FUNCTION_257();
          goto LABEL_125;
        }
        (*(void (**)(char **, char *))(v55 + 96))(v56, v23);
        (*(void (**)(uint64_t, char **, uint64_t))(v217 + 32))(v216, v56, v218);
        sub_22ABDE528();
        v23 = v203;
        v71 = (*((uint64_t (**)(char *, uint64_t))v203 + 11))(v29, v24);
        if (v71 != v196)
        {
          OUTLINED_FUNCTION_48_2((uint64_t)v29, *((uint64_t (**)(uint64_t, uint64_t))v23 + 1));
          OUTLINED_FUNCTION_31_10();
          i = 299;
          goto LABEL_122;
        }
        OUTLINED_FUNCTION_48_2((uint64_t)v29, *((uint64_t (**)(uint64_t, uint64_t))v23 + 12));
        v72 = swift_projectBox();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v219 + 16))(v225, v72, v220);
        swift_release();
        v73 = sub_22ABDE738();
        v74 = sub_22ABABBC8(v73);
        OUTLINED_FUNCTION_3_8();
        v75 = v54;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v76 = v228;
        }
        else
        {
          OUTLINED_FUNCTION_126_4();
          v76 = v104;
        }
        v78 = *(_QWORD *)(v76 + 16);
        v77 = *(_QWORD *)(v76 + 24);
        if (v78 >= v77 >> 1)
        {
          OUTLINED_FUNCTION_91_5(v77);
          sub_22AA36158();
          v76 = v105;
        }
        *(_QWORD *)(v76 + 16) = v78 + 1;
        v228 = v76;
        *(_QWORD *)(v76 + 8 * v78 + 32) = v74;
        sub_22ABDE72C();
        v54 = v75;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_92_11();
          v54 = v106;
        }
        v56 = v222;
        if (*(_QWORD *)(v54 + 16) >= *(_QWORD *)(v54 + 24) >> 1)
        {
          OUTLINED_FUNCTION_92_11();
          v54 = v107;
        }
        v79 = OUTLINED_FUNCTION_82_16();
        OUTLINED_FUNCTION_59_5(v79, v215, v80);
        (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v225, v220);
        (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v216, v218);
      }
      v53 += v209;
      --v50;
      v23 = (char *)v221;
      v55 = v210;
    }
    while (v50);
    OUTLINED_FUNCTION_1_58();
    v112 = v228;
    v23 = v184;
  }
  else
  {
    swift_bridgeObjectRelease();
    v54 = MEMORY[0x24BEE4AF8];
    v112 = MEMORY[0x24BEE4AF8];
  }
  v113 = v192;
  if (!*(_QWORD *)(v112 + 16))
    goto LABEL_127;
  v228 = v112;
  v221 = *(_QWORD *)(v112 + 32);
  sub_22AB4EDA0(v54);
  v114 = OUTLINED_FUNCTION_69_9();
  OUTLINED_FUNCTION_106_0(v114, v115, v2);
  if (v85)
    goto LABEL_126;
  OUTLINED_FUNCTION_59_5(v113, (uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v227 + 32));
  v225 = sub_22A99E9BC(1);
  v220 = v54;
  if (v117 != v118 >> 1)
  {
    v120 = v116;
    v121 = v117;
    v122 = v118 >> 1;
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_50_9();
    v123 = v227;
    v23 = v206;
    while (v121 < v122)
    {
      OUTLINED_FUNCTION_59_5((uint64_t)v23, v120 + *(_QWORD *)(v123 + 72) * v121, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 16));
      sub_22ABB4E78();
      OUTLINED_FUNCTION_209();
      OUTLINED_FUNCTION_209();
      v124 = v229;
      v125 = v231[0];
      OUTLINED_FUNCTION_24_18((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v123 + 8));
      if (v124 != v125)
        goto LABEL_119;
      ++v121;
      v119 = v207;
      if (v122 == v121)
        goto LABEL_52;
    }
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_50_9();
  v119 = v207;
LABEL_52:
  swift_unknownObjectRelease();
  v126 = v221;
  v127 = *(_QWORD *)(v221 + 16);
  v128 = (_DWORD *)MEMORY[0x24BE62F00];
  v129 = (_DWORD *)MEMORY[0x24BE62EF8];
  if (v127)
  {
    v229 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_42_36();
    v23 = (char *)v229;
    LODWORD(v225) = *v128;
    LODWORD(v222) = *v129;
    v130 = (_BYTE *)(v126 + 40);
    v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v224 + 104);
    v132 = v226;
    v133 = v224;
    do
    {
      v134 = (uint64_t)v213;
      if ((*v130 & 1) != 0)
      {
        *v213 = 0;
        v135 = v222;
      }
      else
      {
        *(_QWORD *)v213 = *((_QWORD *)v130 - 1);
        v135 = v225;
      }
      v131(v134, v135, v132);
      OUTLINED_FUNCTION_195(v119, v134);
      v229 = (uint64_t)v23;
      v137 = *((_QWORD *)v23 + 2);
      v136 = *((_QWORD *)v23 + 3);
      if (v137 >= v136 >> 1)
      {
        OUTLINED_FUNCTION_91_5(v136);
        OUTLINED_FUNCTION_41_42();
        v132 = v226;
        v23 = (char *)v229;
      }
      *((_QWORD *)v23 + 2) = v137 + 1;
      OUTLINED_FUNCTION_195((uint64_t)&v23[((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80))+ *(_QWORD *)(v133 + 72) * v137], v119);
      v130 += 16;
      --v127;
    }
    while (v127);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_63_1();
    swift_bridgeObjectRelease();
    v23 = (char *)MEMORY[0x24BEE4AF8];
  }
  v138 = v224;
  v139 = v189;
  if (v189 < 0)
    v139 = *((_QWORD *)v23 + 2) + v189;
  v140 = *(_QWORD *)(v228 + 16);
  if ((v190 & 1) != 0 && !v140)
    goto LABEL_113;
  v141 = v140 - 1;
  if (v140 != 1)
  {
    if (v140)
    {
      if ((v139 & 0x8000000000000000) == 0)
      {
        v142 = 0;
        v143 = *MEMORY[0x24BE62F00];
        LODWORD(v225) = *MEMORY[0x24BE62EF8];
        v221 = 16 * v139;
        v222 = (char **)(v228 + 40);
        v144 = v223;
        v145 = v226;
        while (1)
        {
          if (v139 >= *((_QWORD *)v23 + 2))
            goto LABEL_101;
          v146 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
          v147 = *(_QWORD *)(v138 + 72) * v139;
          (*(void (**)(_QWORD *, char *, uint64_t))(v138 + 16))(v144, &v23[v146 + v147], v145);
          if ((*(unsigned int (**)(_QWORD *, uint64_t))(v138 + 88))(v144, v145) != v143)
            break;
          OUTLINED_FUNCTION_204(*(uint64_t (**)(uint64_t, uint64_t))(v138 + 96));
          if (v142 + 1 < 0)
            goto LABEL_102;
          if ((unint64_t)(v142 + 1) >= *(_QWORD *)(v228 + 16))
            goto LABEL_104;
          v148 = *v223;
          v149 = v222[v142];
          v150 = *((_QWORD *)v149 + 2);
          if (!v150)
          {
            v154 = __OFADD__(v148, 1);
            v155 = v148 + 1;
            if (v154)
              goto LABEL_106;
            v156 = (uint64_t)v194;
            *v194 = v155;
            v138 = v224;
            OUTLINED_FUNCTION_171_0(v156);
            if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
            {
              OUTLINED_FUNCTION_200();
              v23 = v161;
            }
            v153 = v194;
            if (v139 >= *((_QWORD *)v23 + 2))
              goto LABEL_107;
            goto LABEL_91;
          }
          if (v139 >= v150)
            goto LABEL_105;
          v151 = &v149[v221];
          if ((v151[40] & 1) == 0)
          {
            v157 = *((_QWORD *)v151 + 4);
            v154 = __OFADD__(v148, v157);
            v158 = v148 + v157;
            v138 = v224;
            if (v154)
              goto LABEL_108;
            v159 = (uint64_t)v193;
            *v193 = v158;
            OUTLINED_FUNCTION_171_0(v159);
            if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
            {
              OUTLINED_FUNCTION_200();
              v23 = v162;
            }
            v153 = v193;
            if (v139 >= *((_QWORD *)v23 + 2))
              goto LABEL_109;
            goto LABEL_91;
          }
          v138 = v224;
LABEL_92:
          if (v141 == ++v142)
            goto LABEL_93;
        }
        OUTLINED_FUNCTION_204(*(uint64_t (**)(uint64_t, uint64_t))(v138 + 8));
        v152 = v205;
        *v205 = 0;
        (*(void (**)(_BYTE *))(v138 + 104))(v152);
        if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
        {
          OUTLINED_FUNCTION_200();
          v23 = v160;
        }
        v153 = v205;
        if (v139 >= *((_QWORD *)v23 + 2))
          goto LABEL_103;
LABEL_91:
        (*(void (**)(char *, _QWORD *, uint64_t))(v138 + 40))(&v23[v146 + v147], v153, v226);
        goto LABEL_92;
      }
LABEL_114:
      __break(1u);
LABEL_115:
      v178 = OUTLINED_FUNCTION_246();
      OUTLINED_FUNCTION_131_3(v178, v179);
LABEL_116:
      __break(1u);
LABEL_117:
      OUTLINED_FUNCTION_131_3((uint64_t)v199, 1);
LABEL_118:
      __break(1u);
LABEL_119:
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_31_10();
      for (i = 312; ; i = 309)
      {
LABEL_122:
        OUTLINED_FUNCTION_193_0();
        OUTLINED_FUNCTION_156_3();
LABEL_125:
        OUTLINED_FUNCTION_252();
        __break(1u);
LABEL_126:
        sub_22A9AD754((uint64_t)v23, &qword_255B1B780);
LABEL_127:
        OUTLINED_FUNCTION_31_10();
      }
    }
    goto LABEL_110;
  }
LABEL_93:
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_23();
  if (*(_QWORD *)(*v204 + 16) && (OUTLINED_FUNCTION_206(), (v163 & 1) != 0))
    OUTLINED_FUNCTION_205();
  else
    v141 = 0;
  v229 = 0x7461636E6F63;
  v230 = 0xE600000000000000;
  OUTLINED_FUNCTION_9_97();
  v231[0] = v141;
  sub_22ABDFD7C();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_63_1();
  sub_22AA1DE90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
  v165 = *(_QWORD *)(v164 - 8);
  v166 = *(_QWORD *)(v165 + 72);
  v167 = (*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80);
  v168 = OUTLINED_FUNCTION_250();
  *(_OWORD *)(v168 + 16) = xmmword_22ABEDF90;
  v169 = (_QWORD *)(v168 + v167);
  v170 = v168 + v167 + *(int *)(v164 + 48);
  *v169 = 0x7365756C6176;
  v169[1] = 0xE600000000000000;
  v171 = OUTLINED_FUNCTION_29_46();
  OUTLINED_FUNCTION_37_7(v170, v188, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 16));
  OUTLINED_FUNCTION_164_2((_QWORD *)((char *)v169 + v166));
  if (v139 < v172)
    goto LABEL_111;
  if (v139 > 0x7FFFFFFF)
  {
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  sub_22ABDE5AC();
  v173 = (_QWORD *)((char *)v169 + 2 * v166);
  *v173 = 0x61656C7265746E69;
  v173[1] = 0xEA00000000006576;
  OUTLINED_FUNCTION_213();
  sub_22ABDEAC8();
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  OUTLINED_FUNCTION_28_47();
  *(_OWORD *)(OUTLINED_FUNCTION_250() + 16) = xmmword_22ABE8E30;
  v174 = (void (**)(uint64_t, uint64_t))v203;
  v175 = v191;
  v176 = v201;
  OUTLINED_FUNCTION_66_12(v185, v191, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v203 + 2));
  OUTLINED_FUNCTION_16_13();
  sub_22ABDE420();
  v177 = v186;
  sub_22ABDE6B4();
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_82_8(v177, *(uint64_t (**)(uint64_t, _QWORD))(v187 + 8));
  v174[1](v175, v176);
  OUTLINED_FUNCTION_82_8(v192, *(uint64_t (**)(uint64_t, _QWORD))(v227 + 8));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_3();
}

void sub_22ABAF218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t);
  _BYTE *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, _QWORD);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100[10];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _QWORD v111[7];
  uint64_t v112;

  OUTLINED_FUNCTION_4_4();
  a19 = v24;
  a20 = v25;
  v26 = v21;
  v106 = v27;
  v29 = v28;
  v31 = v30;
  v32 = OUTLINED_FUNCTION_31_43();
  OUTLINED_FUNCTION_37_41();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)v100 - v35;
  OUTLINED_FUNCTION_51_12();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_0();
  v100[6] = v38;
  v39 = OUTLINED_FUNCTION_26_63();
  OUTLINED_FUNCTION_40_1(v39, (uint64_t)&a14);
  v100[8] = v40;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_0();
  v100[7] = v42;
  v43 = OUTLINED_FUNCTION_19_64();
  OUTLINED_FUNCTION_40_1(v43, (uint64_t)&a16);
  v101 = v44;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_154_2(v46, v100[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_23_8();
  OUTLINED_FUNCTION_188_0();
  MEMORY[0x24BDAC7A8](v48);
  v50 = (uint64_t *)((char *)v100 - v49);
  OUTLINED_FUNCTION_39_12(v111);
  sub_22AA1E26C();
  OUTLINED_FUNCTION_53_36();
  if (!v51)
    goto LABEL_30;
  v107 = v23;
  OUTLINED_FUNCTION_54_4();
  v102 = v31;
  v105 = v29;
  v52 = sub_22AA03688();
  if ((v53 & 1) != 0)
  {
    v54 = v52;
    v55 = v112;
    v56 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_36_47();
    v58 = v55 + v57 * v54;
    v26 = v21;
    sub_22AA20444(v58, (uint64_t)v50);
    v59 = (uint64_t)v50;
    v60 = 0;
  }
  else
  {
    v56 = OUTLINED_FUNCTION_3_35();
    v59 = OUTLINED_FUNCTION_167_1();
  }
  OUTLINED_FUNCTION_73_2(v59, v60);
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_3_35();
  v61 = OUTLINED_FUNCTION_167_1();
  OUTLINED_FUNCTION_106_0(v61, v62, v56);
  if (v63)
    goto LABEL_31;
  OUTLINED_FUNCTION_178(*v50, (uint64_t)&a18);
  OUTLINED_FUNCTION_208();
  if (!v111[2])
  {
LABEL_32:
    OUTLINED_FUNCTION_73_2(v22, 1);
LABEL_33:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_54_4();
  v64 = sub_22AA03688();
  if ((v65 & 1) != 0)
  {
    OUTLINED_FUNCTION_169_0(v64, v112);
    v66 = 0;
  }
  else
  {
    v66 = 1;
  }
  OUTLINED_FUNCTION_73_2(v22, v66);
  OUTLINED_FUNCTION_54();
  v67 = OUTLINED_FUNCTION_218();
  OUTLINED_FUNCTION_106_0(v67, v68, v56);
  if (v63)
    goto LABEL_33;
  OUTLINED_FUNCTION_57_17(v104, v22 + *(int *)(v56 + 20), *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v101 + 16));
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_131_4();
  if (v69 && (OUTLINED_FUNCTION_191(), v70 = sub_22AA03688(), (v71 & 1) != 0))
    v72 = *(_QWORD *)(v112 + 8 * v70);
  else
    v72 = 0;
  v109 = 0x78616D74666F73;
  v110 = 0xE700000000000000;
  OUTLINED_FUNCTION_9_97();
  v108 = v72;
  OUTLINED_FUNCTION_72_22();
  OUTLINED_FUNCTION_76_21();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_231(v109);
  v100[3] = v73;
  v100[5] = v26;
  sub_22AA1E4E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
  OUTLINED_FUNCTION_251();
  v22 = *(_QWORD *)(v74 + 72);
  v75 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  v76 = OUTLINED_FUNCTION_8_101();
  *(_OWORD *)(v76 + 16) = xmmword_22ABE9FB0;
  v77 = (_QWORD *)(v76 + v75);
  *v77 = 120;
  v77[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_16_13();
  OUTLINED_FUNCTION_227();
  OUTLINED_FUNCTION_164_2((_QWORD *)(v76 + v75 + v22));
  if (v106 < v78)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v106 > 0x7FFFFFFF)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    v97 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_11_14((uint64_t)v50, v98, v99, v97);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_22ABDE5AC();
  OUTLINED_FUNCTION_29_46();
  v79 = OUTLINED_FUNCTION_79_19();
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  v80 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_28_47() - 8) + 80);
  v81 = (v80 + 32) & ~v80;
  v82 = OUTLINED_FUNCTION_8_101();
  *(_OWORD *)(v82 + 16) = xmmword_22ABE8E30;
  v83 = v103;
  v84 = *(_QWORD *)(v103 + 16);
  if (v84)
  {
    v100[1] = v81;
    v100[2] = v82;
    v102 = v79;
    v109 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_42_36();
    v85 = v109;
    LODWORD(v106) = *MEMORY[0x24BE62F00];
    LODWORD(v105) = *MEMORY[0x24BE62EF8];
    v86 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 104);
    v87 = (_BYTE *)(v83 + 40);
    do
    {
      v88 = v107;
      if ((*v87 & 1) != 0)
      {
        *v107 = 0;
        v89 = v105;
      }
      else
      {
        *(_QWORD *)v107 = *((_QWORD *)v87 - 1);
        v89 = v106;
      }
      v86(v88, v89, v32);
      v90 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v90(v36, v88, v32);
      v109 = v85;
      v91 = *(_QWORD *)(v85 + 16);
      if (v91 >= *(_QWORD *)(v85 + 24) >> 1)
      {
        OUTLINED_FUNCTION_39_47();
        v85 = v109;
      }
      *(_QWORD *)(v85 + 16) = v91 + 1;
      OUTLINED_FUNCTION_185_0();
      v90((char *)(v92 + v93 * v91), v36, v32);
      v87 += 16;
      --v84;
    }
    while (v84);
    OUTLINED_FUNCTION_1_58();
  }
  else
  {
    OUTLINED_FUNCTION_63_1();
  }
  v94 = v104;
  OUTLINED_FUNCTION_89_18();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_54_4();
  OUTLINED_FUNCTION_142_2();
  OUTLINED_FUNCTION_105_6();
  OUTLINED_FUNCTION_191();
  sub_22ABDE6B4();
  OUTLINED_FUNCTION_170_0();
  v95 = OUTLINED_FUNCTION_77_18();
  OUTLINED_FUNCTION_82_8(v95, v96);
  OUTLINED_FUNCTION_82_8(v94, *(uint64_t (**)(uint64_t, _QWORD))(v101 + 8));
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22ABAF810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  void (*v39)(char *, _QWORD, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD);
  void (*v45)(_QWORD, _QWORD);
  uint64_t v46;
  void (*v47)(_QWORD, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  __n128 *v60;
  __n128 *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, _QWORD);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, _QWORD, uint64_t);
  uint64_t v72;
  char *v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  unsigned int v86;
  uint64_t v87;
  void (*v88)(_QWORD, _QWORD);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  OUTLINED_FUNCTION_4_4();
  v99 = v4;
  v100 = v5;
  v95 = v1;
  v81 = v6;
  v80 = v7;
  v93 = v8;
  v94 = v9;
  v70 = v10;
  v12 = v11;
  v14 = v13;
  v15 = OUTLINED_FUNCTION_26_63();
  OUTLINED_FUNCTION_40_1(v15, (uint64_t)&v97);
  v82 = v16;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  v19 = OUTLINED_FUNCTION_17_74((uint64_t)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_40_1(v19, (uint64_t)&v98);
  v83 = v20;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v21);
  v85.n128_u64[0] = (unint64_t)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = OUTLINED_FUNCTION_144_1();
  v23 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_126_3();
  MEMORY[0x24BDAC7A8](v25);
  v92 = (uint64_t)&v69 - v26;
  v27 = OUTLINED_FUNCTION_19_64();
  OUTLINED_FUNCTION_37_41();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = OUTLINED_FUNCTION_51_12();
  v90 = *(_QWORD *)(v31 - 8);
  v91 = v31;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v69 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v38 = (void *)OUTLINED_FUNCTION_223();
  OUTLINED_FUNCTION_39_12(v38);
  v76 = v14;
  v77 = v12;
  OUTLINED_FUNCTION_127_5();
  v86 = *MEMORY[0x24BE630B0];
  v39 = *(void (**)(char *, _QWORD, uint64_t))(v0 + 104);
  OUTLINED_FUNCTION_210(v40, v86);
  v41 = MEMORY[0x24BEE4AF8];
  v89 = v37;
  OUTLINED_FUNCTION_135_5();
  v42 = *(void (**)(char *, uint64_t))(v0 + 8);
  v43 = OUTLINED_FUNCTION_134_5();
  OUTLINED_FUNCTION_210(v43, *MEMORY[0x24BE630C0]);
  v44 = v88;
  OUTLINED_FUNCTION_135_5();
  OUTLINED_FUNCTION_134_5();
  v79 = v3;
  v45 = v44;
  sub_22ABDE720();
  v46 = v91;
  v47 = *(void (**)(_QWORD, uint64_t))(v90 + 8);
  v47(v45, v91);
  v88 = v47;
  v47(v89, v46);
  v48 = v86;
  v39(v30, v86, v27);
  sub_22AA1E4E0();
  OUTLINED_FUNCTION_134_5();
  v71 = v39;
  v39(v30, v48, v27);
  v49 = v70;
  OUTLINED_FUNCTION_135_5();
  v73 = v30;
  v78 = v27;
  v74 = v42;
  v42(v30, v27);
  v50 = *(_QWORD *)(v49 + 16);
  *(_QWORD *)v85.n128_u64[0] = v50;
  (*(void (**)(void))(v83 + 104))();
  if (v50)
  {
    v96 = v41;
    sub_22AB4D2F0();
    v41 = v96;
    v51 = v49 + 40;
    do
    {
      OUTLINED_FUNCTION_39_17();
      sub_22ABDE54C();
      v96 = v41;
      v53 = *(_QWORD *)(v41 + 16);
      v52 = *(_QWORD *)(v41 + 24);
      if (v53 >= v52 >> 1)
      {
        OUTLINED_FUNCTION_91_5(v52);
        sub_22AB4D2F0();
        v41 = v96;
      }
      v51 += 16;
      *(_QWORD *)(v41 + 16) = v53 + 1;
      OUTLINED_FUNCTION_23_2();
      OUTLINED_FUNCTION_59_5(v41 + v54 + *(_QWORD *)(v23 + 72) * v53, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32));
      --v50;
    }
    while (v50);
  }
  v96 = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B770);
  sub_22ABB4E34();
  v55 = v92;
  v56 = v84;
  v57 = v85.n128_u64[0];
  sub_22ABDE4EC();
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_82_8(v57, *(uint64_t (**)(uint64_t, _QWORD))(v83 + 8));
  v58 = v91;
  OUTLINED_FUNCTION_183_0(v56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  v59 = *(_QWORD **)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768) - 8) + 72);
  v60 = (__n128 *)OUTLINED_FUNCTION_8_101();
  v85 = (__n128)xmmword_22ABE9FB0;
  OUTLINED_FUNCTION_248(v60, (__n128)xmmword_22ABE9FB0);
  strcpy(0, "probabilities");
  MEMORY[0xE] = -4864;
  OUTLINED_FUNCTION_39_17();
  sub_22ABDE558();
  *v59 = 0x73657373616C63;
  v59[1] = 0xE700000000000000;
  OUTLINED_FUNCTION_59_5(v75, v55, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  sub_22ABDE5B8();
  OUTLINED_FUNCTION_29_46();
  v87 = OUTLINED_FUNCTION_79_19();
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  OUTLINED_FUNCTION_28_47();
  v61 = (__n128 *)OUTLINED_FUNCTION_68_23();
  OUTLINED_FUNCTION_249(v61, v85);
  v62 = v73;
  v63 = v78;
  v71(v73, v86, v78);
  OUTLINED_FUNCTION_54_4();
  v64 = v89;
  sub_22ABDE750();
  v74(v62, v63);
  sub_22ABDE420();
  v65 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v64, v79, v58);
  OUTLINED_FUNCTION_16_13();
  sub_22ABDE420();
  OUTLINED_FUNCTION_105_6();
  sub_22ABDE6B4();
  sub_22AA1FA24();
  v66 = OUTLINED_FUNCTION_77_18();
  OUTLINED_FUNCTION_82_8(v66, v67);
  OUTLINED_FUNCTION_24_18(v92, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  return OUTLINED_FUNCTION_183_0(v65);
}

void sub_22ABAFEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[4];
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD v83[15];

  OUTLINED_FUNCTION_4_4();
  a19 = v24;
  a20 = v25;
  v26 = v20;
  v28 = v27;
  v69 = OUTLINED_FUNCTION_31_43();
  v68[3] = *(_QWORD *)(v69 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_13_20();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_13_86((uint64_t)v68 - v31);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v32);
  v71 = (char *)v68 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = OUTLINED_FUNCTION_26_63();
  v73 = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v35);
  v72 = (char *)v68 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = OUTLINED_FUNCTION_19_64();
  v75 = *(_QWORD *)(v76 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_3_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v39);
  v41 = (_QWORD *)((char *)v68 - v40);
  OUTLINED_FUNCTION_39_12(v83);
  OUTLINED_FUNCTION_140_5();
  OUTLINED_FUNCTION_53_36();
  if (!v42)
  {
    v65 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_11_14((uint64_t)v41, v66, v67, v65);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v74 = v22;
  OUTLINED_FUNCTION_54_4();
  OUTLINED_FUNCTION_129_3();
  v70 = v34;
  if ((v43 & 1) != 0)
  {
    v26 = (_BYTE *)v83[7];
    v44 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_88_15(v44);
    v45 = (uint64_t)v41;
    v46 = 0;
  }
  else
  {
    v28 = OUTLINED_FUNCTION_3_35();
    v45 = OUTLINED_FUNCTION_167_1();
  }
  __swift_storeEnumTagSinglePayload(v45, v46, 1, v28);
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_3_35();
  OUTLINED_FUNCTION_106_0((uint64_t)v41, 1, v28);
  if (v47)
    goto LABEL_27;
  OUTLINED_FUNCTION_178(*v41, (uint64_t)&a16);
  OUTLINED_FUNCTION_208();
  if (!v83[2])
  {
LABEL_28:
    OUTLINED_FUNCTION_56_1(v21, 1);
LABEL_29:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_22_21();
  v48 = OUTLINED_FUNCTION_112_6();
  if ((v49 & 1) != 0)
  {
    OUTLINED_FUNCTION_104_9(v48);
    v50 = 0;
  }
  else
  {
    v50 = 1;
  }
  __swift_storeEnumTagSinglePayload(v21, v50, 1, v28);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_106_0(v21, 1, v28);
  if (v47)
    goto LABEL_29;
  OUTLINED_FUNCTION_44_37();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_131_4();
  if (v51 && (sub_22AA03688(), (v52 & 1) != 0))
    OUTLINED_FUNCTION_205();
  else
    v21 = 0;
  v81 = 1970038130;
  v82 = 0xE400000000000000;
  OUTLINED_FUNCTION_9_97();
  v80 = v21;
  OUTLINED_FUNCTION_72_22();
  OUTLINED_FUNCTION_76_21();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_67_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
  v54 = *(unsigned __int8 *)(*(_QWORD *)(v53 - 8) + 80);
  v55 = (v54 + 32) & ~v54;
  v56 = OUTLINED_FUNCTION_8_101();
  v79 = xmmword_22ABE8E30;
  *(_OWORD *)(v56 + 16) = xmmword_22ABE8E30;
  v57 = (_QWORD *)(v56 + v55);
  v58 = v56 + v55 + *(int *)(v53 + 48);
  *v57 = 120;
  v57[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_29_46();
  v59 = OUTLINED_FUNCTION_79_19();
  OUTLINED_FUNCTION_231(v59);
  v60 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  OUTLINED_FUNCTION_28_47();
  v61 = (__n128 *)OUTLINED_FUNCTION_23_68();
  OUTLINED_FUNCTION_176_0(v61);
  if (v58)
  {
    OUTLINED_FUNCTION_264();
    v81 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_42_36();
    v78 = *MEMORY[0x24BE62F00];
    OUTLINED_FUNCTION_65_29(*MEMORY[0x24BE62EF8]);
    do
    {
      if ((*v26 & 1) != 0)
      {
        *v23 = 0;
        v63 = v77;
      }
      else
      {
        *(_QWORD *)v23 = *((_QWORD *)v26 - 1);
        v63 = v78;
      }
      OUTLINED_FUNCTION_182_0(v62, v63);
      OUTLINED_FUNCTION_107_7();
      OUTLINED_FUNCTION_259();
      if (v64)
        OUTLINED_FUNCTION_39_47();
      v62 = OUTLINED_FUNCTION_47_33();
      v26 += 16;
      --v58;
      v23 = (_BYTE *)v28;
    }
    while (v58);
    OUTLINED_FUNCTION_1_58();
    OUTLINED_FUNCTION_141_4();
  }
  else
  {
    OUTLINED_FUNCTION_58_1();
  }
  OUTLINED_FUNCTION_57_20();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_99_9();
  OUTLINED_FUNCTION_105_6();
  OUTLINED_FUNCTION_177_1();
  OUTLINED_FUNCTION_240();
  OUTLINED_FUNCTION_82_8(v60, *(uint64_t (**)(uint64_t, _QWORD))(v73 + 8));
  OUTLINED_FUNCTION_121_6();
  OUTLINED_FUNCTION_3();
}

void sub_22ABB0370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[4];
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD v83[15];

  OUTLINED_FUNCTION_4_4();
  a19 = v24;
  a20 = v25;
  v26 = v20;
  v28 = v27;
  v69 = OUTLINED_FUNCTION_31_43();
  v68[3] = *(_QWORD *)(v69 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_13_20();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_13_86((uint64_t)v68 - v31);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v32);
  v71 = (char *)v68 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = OUTLINED_FUNCTION_26_63();
  v73 = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v35);
  v72 = (char *)v68 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = OUTLINED_FUNCTION_19_64();
  v75 = *(_QWORD *)(v76 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_3_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v39);
  v41 = (_QWORD *)((char *)v68 - v40);
  OUTLINED_FUNCTION_39_12(v83);
  OUTLINED_FUNCTION_140_5();
  OUTLINED_FUNCTION_53_36();
  if (!v42)
  {
    v65 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_11_14((uint64_t)v41, v66, v67, v65);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v74 = v22;
  OUTLINED_FUNCTION_54_4();
  OUTLINED_FUNCTION_129_3();
  v70 = v34;
  if ((v43 & 1) != 0)
  {
    v26 = (_BYTE *)v83[7];
    v44 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_88_15(v44);
    v45 = (uint64_t)v41;
    v46 = 0;
  }
  else
  {
    v28 = OUTLINED_FUNCTION_3_35();
    v45 = OUTLINED_FUNCTION_167_1();
  }
  __swift_storeEnumTagSinglePayload(v45, v46, 1, v28);
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_3_35();
  OUTLINED_FUNCTION_106_0((uint64_t)v41, 1, v28);
  if (v47)
    goto LABEL_27;
  OUTLINED_FUNCTION_178(*v41, (uint64_t)&a16);
  OUTLINED_FUNCTION_208();
  if (!v83[2])
  {
LABEL_28:
    OUTLINED_FUNCTION_56_1(v21, 1);
LABEL_29:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_22_21();
  v48 = OUTLINED_FUNCTION_112_6();
  if ((v49 & 1) != 0)
  {
    OUTLINED_FUNCTION_104_9(v48);
    v50 = 0;
  }
  else
  {
    v50 = 1;
  }
  __swift_storeEnumTagSinglePayload(v21, v50, 1, v28);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_106_0(v21, 1, v28);
  if (v47)
    goto LABEL_29;
  OUTLINED_FUNCTION_44_37();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_131_4();
  if (v51 && (OUTLINED_FUNCTION_73_17(), sub_22AA03688(), (v52 & 1) != 0))
    OUTLINED_FUNCTION_205();
  else
    v21 = 0;
  v81 = 0x64696F6D676973;
  v82 = 0xE700000000000000;
  OUTLINED_FUNCTION_9_97();
  v80 = v21;
  OUTLINED_FUNCTION_72_22();
  OUTLINED_FUNCTION_76_21();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_67_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
  v54 = *(unsigned __int8 *)(*(_QWORD *)(v53 - 8) + 80);
  v55 = (v54 + 32) & ~v54;
  v56 = OUTLINED_FUNCTION_8_101();
  v79 = xmmword_22ABE8E30;
  *(_OWORD *)(v56 + 16) = xmmword_22ABE8E30;
  v57 = (_QWORD *)(v56 + v55);
  v58 = v56 + v55 + *(int *)(v53 + 48);
  *v57 = 120;
  v57[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_22_21();
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_29_46();
  v59 = OUTLINED_FUNCTION_79_19();
  OUTLINED_FUNCTION_231(v59);
  v60 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  OUTLINED_FUNCTION_28_47();
  v61 = (__n128 *)OUTLINED_FUNCTION_23_68();
  OUTLINED_FUNCTION_176_0(v61);
  if (v58)
  {
    OUTLINED_FUNCTION_264();
    v81 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_42_36();
    v78 = *MEMORY[0x24BE62F00];
    OUTLINED_FUNCTION_65_29(*MEMORY[0x24BE62EF8]);
    do
    {
      if ((*v26 & 1) != 0)
      {
        *v23 = 0;
        v63 = v77;
      }
      else
      {
        *(_QWORD *)v23 = *((_QWORD *)v26 - 1);
        v63 = v78;
      }
      OUTLINED_FUNCTION_182_0(v62, v63);
      OUTLINED_FUNCTION_107_7();
      OUTLINED_FUNCTION_259();
      if (v64)
        OUTLINED_FUNCTION_39_47();
      v62 = OUTLINED_FUNCTION_47_33();
      v26 += 16;
      --v58;
      v23 = (_BYTE *)v28;
    }
    while (v58);
    OUTLINED_FUNCTION_1_58();
    OUTLINED_FUNCTION_141_4();
  }
  else
  {
    OUTLINED_FUNCTION_58_1();
  }
  OUTLINED_FUNCTION_57_20();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_99_9();
  OUTLINED_FUNCTION_105_6();
  OUTLINED_FUNCTION_73_17();
  OUTLINED_FUNCTION_177_1();
  OUTLINED_FUNCTION_240();
  OUTLINED_FUNCTION_82_8(v60, *(uint64_t (**)(uint64_t, _QWORD))(v73 + 8));
  OUTLINED_FUNCTION_121_6();
  OUTLINED_FUNCTION_3();
}

void sub_22ABB07FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t);
  void (*v28)(_BYTE *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, _QWORD);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[3];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(_BYTE *, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  _QWORD v110[15];

  OUTLINED_FUNCTION_4_4();
  a19 = v22;
  a20 = v23;
  v24 = v21;
  v26 = v25;
  v28 = v27;
  v100 = v29;
  v31 = v30;
  v93 = OUTLINED_FUNCTION_31_43();
  v92 = *(_QWORD *)(v93 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_23_8();
  v35 = (_BYTE *)(v33 - v34);
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_13_86((uint64_t)v91 - v37);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v38);
  v101 = (char *)v91 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = OUTLINED_FUNCTION_26_63();
  OUTLINED_FUNCTION_37_41();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_39_1((uint64_t)v91 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)v91 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = OUTLINED_FUNCTION_19_19();
  OUTLINED_FUNCTION_40_1(v46, (uint64_t)&a18);
  v102 = v47;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_154_2(v49, v91[0]);
  OUTLINED_FUNCTION_39_12(v110);
  OUTLINED_FUNCTION_238();
  v105 = v26;
  v106 = v28;
  sub_22AA1E26C();
  OUTLINED_FUNCTION_53_36();
  if (!v50)
  {
    v88 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_11_14((uint64_t)v45, v89, v90, v88);
LABEL_20:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_124_1();
  v104 = v31;
  v51 = sub_22AA03688();
  v99 = v20;
  if ((v52 & 1) != 0)
  {
    v53 = v51;
    v54 = v110[7];
    v55 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_36_47();
    sub_22AA20444(v54 + v56 * v53, (uint64_t)v45);
    v57 = (uint64_t)v45;
    v58 = 0;
  }
  else
  {
    v55 = OUTLINED_FUNCTION_3_35();
    v57 = OUTLINED_FUNCTION_218();
  }
  OUTLINED_FUNCTION_57_3(v57, v58);
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_3_35();
  v59 = OUTLINED_FUNCTION_218();
  OUTLINED_FUNCTION_106_0(v59, v60, v55);
  if (v61)
    goto LABEL_20;
  OUTLINED_FUNCTION_57_17(v103, (uint64_t)&v45[*(int *)(v55 + 20)], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v102 + 16));
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_131_4();
  v97 = v40;
  if (v62 && (v63 = sub_22AA03688(), (v64 & 1) != 0))
    v65 = *(_QWORD *)(*(_QWORD *)(v55 + 56) + 8 * v63);
  else
    v65 = 0;
  v108 = 1701603700;
  v109 = 0xE400000000000000;
  OUTLINED_FUNCTION_9_97();
  v107 = v65;
  OUTLINED_FUNCTION_72_22();
  OUTLINED_FUNCTION_76_21();
  OUTLINED_FUNCTION_63_1();
  v96 = v108;
  v95 = v109;
  v66 = v100;
  v98 = v24;
  sub_22AA1E4E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  v67 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768) - 8);
  v68 = *(_QWORD *)(v67 + 72);
  v69 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  v70 = OUTLINED_FUNCTION_8_101();
  *(_OWORD *)(v70 + 16) = xmmword_22ABE9FB0;
  v71 = (_QWORD *)(v70 + v69);
  *v71 = 120;
  v71[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_124_1();
  sub_22ABDE558();
  v72 = (_QWORD *)((char *)v71 + v68);
  *v72 = 1936745842;
  v72[1] = 0xE400000000000000;
  v73 = v105;
  OUTLINED_FUNCTION_16_23();
  sub_22ABDE558();
  OUTLINED_FUNCTION_29_46();
  v74 = OUTLINED_FUNCTION_79_19();
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  OUTLINED_FUNCTION_28_47();
  v94 = OUTLINED_FUNCTION_23_68();
  *(_OWORD *)(v94 + 16) = xmmword_22ABE8E30;
  v75 = *(_QWORD *)(v66 + 16);
  if (v75)
  {
    v91[0] = v73;
    v91[1] = v74;
    v108 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_136_3();
    OUTLINED_FUNCTION_42_36();
    v76 = v108;
    LODWORD(v105) = *MEMORY[0x24BE62F00];
    LODWORD(v104) = *MEMORY[0x24BE62EF8];
    v106 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v92 + 104);
    v77 = (_BYTE *)(v66 + 40);
    v78 = v91[2];
    v79 = v93;
    do
    {
      if ((*v77 & 1) != 0)
      {
        *v35 = 0;
        v80 = v104;
      }
      else
      {
        *(_QWORD *)v35 = *((_QWORD *)v77 - 1);
        v80 = v105;
      }
      v106(v35, v80, v79);
      OUTLINED_FUNCTION_101_10(v78, (uint64_t)v35);
      v108 = v76;
      v82 = *(_QWORD *)(v76 + 16);
      v81 = *(_QWORD *)(v76 + 24);
      if (v82 >= v81 >> 1)
      {
        OUTLINED_FUNCTION_165_1(v81);
        OUTLINED_FUNCTION_41_42();
        v76 = v108;
      }
      *(_QWORD *)(v76 + 16) = v82 + 1;
      OUTLINED_FUNCTION_185_0();
      OUTLINED_FUNCTION_101_10(v83 + v84 * v82, v78);
      v77 += 16;
      --v75;
    }
    while (v75);
  }
  v85 = v103;
  OUTLINED_FUNCTION_89_18();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_54_4();
  OUTLINED_FUNCTION_142_2();
  OUTLINED_FUNCTION_105_6();
  sub_22ABDE6B4();
  OUTLINED_FUNCTION_170_0();
  v86 = OUTLINED_FUNCTION_77_18();
  OUTLINED_FUNCTION_82_8(v86, v87);
  OUTLINED_FUNCTION_82_8(v85, *(uint64_t (**)(uint64_t, _QWORD))(v102 + 8));
  OUTLINED_FUNCTION_3();
}

void sub_22ABB0D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t *v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  int64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, uint64_t, _QWORD);
  unint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  _QWORD *v120;
  __n128 *v121;
  uint64_t (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t (*v124)(uint64_t, _QWORD);
  uint64_t (*v125)(uint64_t, _QWORD);
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int64_t v151;
  _BYTE *v152;
  uint64_t *v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  _BYTE v159[28];
  uint64_t v160;
  uint64_t v161;

  OUTLINED_FUNCTION_4_4();
  a20 = v25;
  a21 = v26;
  v138 = v27;
  v146 = v28;
  v154 = v29;
  v31 = v30;
  v33 = v32;
  v134 = OUTLINED_FUNCTION_26_63();
  v34 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  OUTLINED_FUNCTION_0();
  v36 = OUTLINED_FUNCTION_13_86(v35);
  OUTLINED_FUNCTION_40_1(v36, (uint64_t)&v160);
  v133 = v37;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_13_20();
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v130 - v40;
  v142 = OUTLINED_FUNCTION_19_19();
  v141 = *(_QWORD *)(v142 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_17_74((uint64_t)&v130 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_251();
  v150 = v44;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_188_0();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_12_0();
  v152 = (_BYTE *)v49;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v50);
  v153 = (uint64_t *)((char *)&v130 - v51);
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_39_1((uint64_t)&v130 - v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v55);
  v57 = (unint64_t)&v130 - v56;
  v139 = v21;
  OUTLINED_FUNCTION_39_12(&v158);
  OUTLINED_FUNCTION_173_0();
  OUTLINED_FUNCTION_53_36();
  if (!v58)
    goto LABEL_77;
  OUTLINED_FUNCTION_16_13();
  v143 = v33;
  v147 = v31;
  v59 = OUTLINED_FUNCTION_153_1();
  if ((v60 & 1) != 0)
  {
    v61 = v59;
    v62 = v21[7];
    OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_36_47();
    v64 = v62 + v63 * v61;
    v66 = v65;
    sub_22AA20444(v64, v57);
    v67 = OUTLINED_FUNCTION_38_1();
  }
  else
  {
    v66 = OUTLINED_FUNCTION_3_35();
    v67 = OUTLINED_FUNCTION_69_9();
  }
  OUTLINED_FUNCTION_57_3(v67, v68);
  v69 = v152;
  OUTLINED_FUNCTION_1_58();
  OUTLINED_FUNCTION_3_35();
  v70 = OUTLINED_FUNCTION_69_9();
  v136 = v66;
  OUTLINED_FUNCTION_106_0(v70, v71, v66);
  if (v86)
    goto LABEL_78;
  v72 = *(_QWORD *)v57;
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_198_0();
  v73 = (uint64_t)v144;
  *v144 = 0;
  v23 = *(_QWORD *)(v150 + 104);
  OUTLINED_FUNCTION_236(*MEMORY[0x24BE62EF8], (uint64_t)&a17);
  v74 = sub_22AA0AF6C(v73, *(_QWORD *)(v72 + 16) + 1);
  v57 = v154 + 1;
  if (__OFADD__(v154, 1))
    goto LABEL_61;
  v75 = (uint64_t *)v74;
  *v153 = v146;
  OUTLINED_FUNCTION_236(*MEMORY[0x24BE62F00], (uint64_t)v159);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    if ((v57 & 0x8000000000000000) == 0)
      goto LABEL_9;
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  while (2)
  {
    sub_22AB5D7C8();
    v75 = v126;
    if ((v57 & 0x8000000000000000) != 0)
      goto LABEL_63;
LABEL_9:
    if (v57 >= v75[2])
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    v149 = v23;
    v131 = v24;
    v135 = v41;
    v132 = v34;
    OUTLINED_FUNCTION_23_2();
    v23 = (uint64_t)v75 + v76;
    v34 = *(_QWORD *)(v77 + 72);
    v151 = v57;
    v78 = (uint64_t)v75 + v76 + v34 * v57;
    v57 = *(_QWORD *)(v77 + 40);
    OUTLINED_FUNCTION_233(v78, (uint64_t)v153);
    if ((v154 & 0x8000000000000000) != 0)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    if (*(_QWORD *)(v72 + 16) <= v154)
    {
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    v79 = (uint64_t *)(v72 + 16 * v154);
    if ((v79[5] & 1) != 0)
    {
      v80 = (uint64_t)v144;
      *v144 = 0;
      OUTLINED_FUNCTION_35_40(v80, (uint64_t)&a17);
      v81 = v154;
      v79 = &v161;
      v82 = v139;
      if (v75[2] > v154)
        goto LABEL_23;
      __break(1u);
    }
    v83 = v79[4];
    v84 = __OFSUB__(v83, v146);
    v85 = v83 - v146;
    v80 = (uint64_t)v144;
    v82 = v139;
    if (v84)
    {
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    if (!v138)
    {
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      break;
    }
    v86 = v85 == 0x8000000000000000 && v138 == -1;
    if (v86)
      goto LABEL_76;
    v87 = v85 / v138;
    v84 = __OFADD__(v87, 1);
    v88 = v87 + 1;
    if (v84)
      goto LABEL_74;
    *(_QWORD *)v144 = v88;
    OUTLINED_FUNCTION_35_40(v80, (uint64_t)v159);
    v81 = v154;
    if (v75[2] > v154)
    {
LABEL_23:
      OUTLINED_FUNCTION_233(v23 + v34 * v81, v80);
      v153 = v75;
      v89 = (char *)v75[2];
      if (v89)
      {
        v41 = 0;
        v24 = (_BYTE *)(v72 + 24);
        v90 = v154;
        while ((uint64_t)v41 >= v90)
        {
          if (v151 < (uint64_t)v41)
          {
            if ((unint64_t)v41 > *(_QWORD *)(v72 + 16))
              goto LABEL_59;
            if ((*v24 & 1) != 0)
            {
              *v22 = 0;
              OUTLINED_FUNCTION_35_40((uint64_t)v22, (uint64_t)&a17);
            }
            else
            {
              v94 = v22;
              v95 = v145;
              sub_22ABDE45C();
              v96 = (uint64_t)v94;
              v97 = v95;
              v22 = v94;
              v69 = v152;
              OUTLINED_FUNCTION_59_5(v96, v97, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v150 + 32));
            }
            v93 = (uint64_t)v22;
            if ((unint64_t)v41 >= v153[2])
              goto LABEL_60;
LABEL_38:
            OUTLINED_FUNCTION_233(v23, v93);
            v90 = v154;
          }
          ++v41;
          v23 += v34;
          v24 += 16;
          if (v89 == v41)
          {
            OUTLINED_FUNCTION_3_8();
            v82 = v139;
            goto LABEL_42;
          }
        }
        if ((unint64_t)v41 >= *(_QWORD *)(v72 + 16))
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          continue;
        }
        if ((v24[16] & 1) != 0)
        {
          *v69 = 0;
          OUTLINED_FUNCTION_35_40((uint64_t)v69, (uint64_t)&a17);
        }
        else
        {
          v91 = v148;
          sub_22ABDE45C();
          v92 = v91;
          v69 = v152;
          OUTLINED_FUNCTION_59_5((uint64_t)v152, v92, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v150 + 32));
        }
        v93 = (uint64_t)v69;
        if ((unint64_t)v41 >= v153[2])
          goto LABEL_58;
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_3_8();
LABEL_42:
      v98 = v82[1];
      v99 = (uint64_t)v135;
      v23 = v137;
      if (!*(_QWORD *)(v98 + 16))
        goto LABEL_79;
      v100 = *v82;
      OUTLINED_FUNCTION_16_23();
      v101 = OUTLINED_FUNCTION_33_38();
      if ((v102 & 1) != 0)
      {
        v103 = *(_QWORD *)(v98 + 56);
        v104 = v136;
        OUTLINED_FUNCTION_87_13(v101, v103);
        v105 = 0;
      }
      else
      {
        v105 = 1;
        v104 = v136;
      }
      OUTLINED_FUNCTION_57_3(v23, v105);
      OUTLINED_FUNCTION_1_58();
      v106 = OUTLINED_FUNCTION_151_1();
      OUTLINED_FUNCTION_106_0(v106, v107, v104);
      if (v86)
        goto LABEL_80;
      OUTLINED_FUNCTION_116_6();
      v108 = OUTLINED_FUNCTION_258();
      OUTLINED_FUNCTION_57_17(v108, v109, v110);
      OUTLINED_FUNCTION_117_4();
      OUTLINED_FUNCTION_89_18();
      OUTLINED_FUNCTION_3_8();
      if (*(_QWORD *)(v100 + 16) && (OUTLINED_FUNCTION_91_12(), v111 = sub_22AA03688(), (v112 & 1) != 0))
        v113 = *(_QWORD *)(*(_QWORD *)(v100 + 56) + 8 * v111);
      else
        v113 = 0;
      v156 = 0x5F676E6964696C73;
      v157 = 0xEF73776F646E6977;
      OUTLINED_FUNCTION_9_97();
      v155 = v113;
      OUTLINED_FUNCTION_72_22();
      OUTLINED_FUNCTION_76_21();
      OUTLINED_FUNCTION_23();
      v57 = v156;
      sub_22AA1DE90();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
      OUTLINED_FUNCTION_229();
      v116 = v115 & ~v114;
      v117 = OUTLINED_FUNCTION_8_101();
      *(_OWORD *)(v117 + 16) = xmmword_22ABF3ED0;
      v118 = (_QWORD *)(v117 + v116);
      *v118 = 120;
      v118[1] = 0xE100000000000000;
      v119 = v147;
      OUTLINED_FUNCTION_60_5();
      OUTLINED_FUNCTION_226();
      v23 = 0xE400000000000000;
      *(_QWORD *)((char *)v118 + 0x5F676E6964696C73) = 1936291937;
      *(_QWORD *)((char *)v118 + 0x5F676E6964696C7BLL) = 0xE400000000000000;
      if ((uint64_t)v154 <= 0x7FFFFFFF)
      {
        OUTLINED_FUNCTION_160_2();
        v120 = (_QWORD *)((char *)v118 - 0x4131232D372D271ALL);
        *v120 = 1702521203;
        v120[1] = 0xE400000000000000;
        if (v146 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v146 <= 0x7FFFFFFF)
          {
            OUTLINED_FUNCTION_160_2();
            *(_QWORD *)((char *)v118 + 0x1E364B3C2D3C4559) = 0x656469727473;
            *(_QWORD *)((char *)v118 + 0x1E364B3C2D3C4561) = 0xE600000000000000;
            if (v138 >= (uint64_t)0xFFFFFFFF80000000)
            {
              if (v138 <= 0x7FFFFFFF)
              {
                OUTLINED_FUNCTION_160_2();
                OUTLINED_FUNCTION_29_46();
                OUTLINED_FUNCTION_79_19();
                __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
                OUTLINED_FUNCTION_28_47();
                v121 = (__n128 *)OUTLINED_FUNCTION_59_25();
                OUTLINED_FUNCTION_249(v121, (__n128)xmmword_22ABE8E30);
                OUTLINED_FUNCTION_202();
                OUTLINED_FUNCTION_37_7((uint64_t)v131, v99, v122);
                OUTLINED_FUNCTION_16_23();
                sub_22ABDE420();
                OUTLINED_FUNCTION_203();
                OUTLINED_FUNCTION_91_12();
                OUTLINED_FUNCTION_261();
                OUTLINED_FUNCTION_244();
                v123 = OUTLINED_FUNCTION_14_50();
                OUTLINED_FUNCTION_82_8(v123, v124);
                OUTLINED_FUNCTION_28_4(v99, *(uint64_t (**)(uint64_t, uint64_t))(v119 + 8));
                OUTLINED_FUNCTION_83_9();
                OUTLINED_FUNCTION_82_8(v140, v125);
                OUTLINED_FUNCTION_3();
                return;
              }
              goto LABEL_71;
            }
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            goto LABEL_72;
          }
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    break;
  }
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  v127 = OUTLINED_FUNCTION_3_35();
  OUTLINED_FUNCTION_11_14(v57, v128, v129, v127);
LABEL_78:
  __break(1u);
LABEL_79:
  __swift_storeEnumTagSinglePayload(v23, 1, 1, v136);
LABEL_80:
  __break(1u);
}

void sub_22ABB16C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  int v47;
  int v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  void (*v53)(uint64_t, uint64_t);
  _BYTE *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_BYTE *, uint64_t, uint64_t);
  void (*v73)(uint64_t);
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, _QWORD);
  unint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  __n128 *v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t (*v110)(uint64_t, _QWORD);
  uint64_t (*v111)(uint64_t, _QWORD);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int v140;
  uint64_t *v141;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  OUTLINED_FUNCTION_4_4();
  v126 = v5;
  v134 = v6;
  v133 = v7;
  v9 = v8;
  v11 = v10;
  v12 = OUTLINED_FUNCTION_26_63();
  OUTLINED_FUNCTION_40_1(v12, (uint64_t)&v148);
  v124 = v13;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14C10);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_0();
  v18 = OUTLINED_FUNCTION_13_86(v17);
  OUTLINED_FUNCTION_40_1(v18, (uint64_t)&v147);
  v123 = v19;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_28_1();
  v138 = v22;
  v23 = OUTLINED_FUNCTION_19_64();
  OUTLINED_FUNCTION_40_1(v23, (uint64_t)&v149);
  v132 = v24;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_0();
  v137 = OUTLINED_FUNCTION_17_74(v26);
  OUTLINED_FUNCTION_118_6();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B18140);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v116 - v36;
  v38 = OUTLINED_FUNCTION_125_5();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_126_3();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_69_21();
  MEMORY[0x24BDAC7A8](v43);
  v44 = (void *)OUTLINED_FUNCTION_224();
  v135 = v0;
  OUTLINED_FUNCTION_39_12(v44);
  v139 = v11;
  v136 = v9;
  sub_22AA1E26C();
  v45 = v38;
  v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
  v130(v1, v133, v38);
  v46 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 88);
  v47 = v46(v1, v38);
  v48 = *MEMORY[0x24BE63058];
  v129 = v39;
  if (v47 == v48)
  {
    OUTLINED_FUNCTION_84_14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 96));
    OUTLINED_FUNCTION_127_5();
    OUTLINED_FUNCTION_63_1();
  }
  else
  {
    OUTLINED_FUNCTION_84_14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
  }
  sub_22ABB2164(v134, (uint64_t)v37);
  OUTLINED_FUNCTION_106_0((uint64_t)v37, 1, v45);
  v121 = v45;
  if (v49)
  {
    sub_22A9AD754((uint64_t)v37, &qword_255B18140);
  }
  else
  {
    v50 = v129;
    OUTLINED_FUNCTION_24_11(v4, (uint64_t)v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 32));
    v130(v3, v4, v45);
    if (v46(v3, v45) == v48)
    {
      OUTLINED_FUNCTION_84_14(v3, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 96));
      v51 = v135;
      OUTLINED_FUNCTION_14_80(&v146, v135);
      OUTLINED_FUNCTION_139_4();
      OUTLINED_FUNCTION_51_1();
      OUTLINED_FUNCTION_83_9();
      OUTLINED_FUNCTION_24_18(v4, v52);
      goto LABEL_11;
    }
    v53 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v53(v4, v45);
    v53(v3, v45);
  }
  v51 = v135;
LABEL_11:
  v54 = v136;
  v55 = v141;
  v56 = v51[1];
  v57 = v128;
  if (!*(_QWORD *)(v56 + 16))
  {
LABEL_45:
    v113 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_11_14((uint64_t)v55, v114, v115, v113);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_168_0();
  OUTLINED_FUNCTION_225();
  if ((v59 & 1) != 0)
  {
    v60 = v58;
    v61 = *(_QWORD *)(v56 + 56);
    v62 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_36_47();
    OUTLINED_FUNCTION_239(v61 + v63 * v60);
    v64 = (uint64_t)v55;
    v65 = 0;
  }
  else
  {
    v62 = OUTLINED_FUNCTION_3_35();
    v64 = OUTLINED_FUNCTION_145_3();
  }
  __swift_storeEnumTagSinglePayload(v64, v65, 1, v62);
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_3_35();
  v66 = OUTLINED_FUNCTION_145_3();
  OUTLINED_FUNCTION_106_0(v66, v67, v62);
  if (v49)
    goto LABEL_46;
  v68 = *v55;
  OUTLINED_FUNCTION_39_17();
  OUTLINED_FUNCTION_235();
  v69 = *(_QWORD *)(v68 + 16);
  if (v69)
  {
    v117 = v62;
    v144 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_42_36();
    v70 = v144;
    LODWORD(v141) = *MEMORY[0x24BE62F00];
    v140 = *MEMORY[0x24BE62EF8];
    v116 = v68;
    v55 = (uint64_t *)(v68 + 40);
    v71 = v137;
    do
    {
      if ((*(_BYTE *)v55 & 1) != 0)
      {
        *v9 = 0;
        v72 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 104);
        v72(v9, v140, v71);
      }
      else
      {
        *(_QWORD *)v9 = *(v55 - 1);
        v72 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 104);
        v72(v9, v141, v71);
      }
      v73 = *(void (**)(uint64_t))(v2 + 32);
      v74 = OUTLINED_FUNCTION_161_1();
      v73(v74);
      v144 = v70;
      v76 = *(_QWORD *)(v70 + 16);
      v75 = *(_QWORD *)(v70 + 24);
      if (v76 >= v75 >> 1)
      {
        OUTLINED_FUNCTION_91_5(v75);
        OUTLINED_FUNCTION_41_42();
        v71 = v137;
        v70 = v144;
      }
      *(_QWORD *)(v70 + 16) = v76 + 1;
      ((void (*)(unint64_t, uint64_t, uint64_t))v73)(v70+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v76, v57, v71);
      v55 += 2;
      --v69;
      v9 = v142;
    }
    while (v69);
    OUTLINED_FUNCTION_1_58();
    v54 = v136;
    v62 = v117;
    v77 = v141;
  }
  else
  {
    swift_bridgeObjectRelease();
    v77 = *MEMORY[0x24BE62F00];
    v72 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 104);
    v70 = MEMORY[0x24BEE4AF8];
  }
  v78 = *(_QWORD *)(v70 + 16);
  v79 = (uint64_t)v125;
  *v125 = v126;
  v72((_BYTE *)v79, v77, v137);
  v80 = OUTLINED_FUNCTION_18_36();
  v9 = v127;
  if ((v80 & 1) == 0)
  {
    OUTLINED_FUNCTION_200();
    v70 = v112;
  }
  v81 = v135;
  if (!v78)
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v78 > *(_QWORD *)(v70 + 16))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  OUTLINED_FUNCTION_57_17(v70+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * (v78 - 1), v79, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 40));
  v82 = v81[1];
  if (!*(_QWORD *)(v82 + 16))
  {
LABEL_47:
    OUTLINED_FUNCTION_79_8((uint64_t)v9, 1);
LABEL_48:
    __break(1u);
    return;
  }
  v83 = *v81;
  OUTLINED_FUNCTION_47_3();
  v84 = OUTLINED_FUNCTION_168_0();
  if ((v85 & 1) != 0)
  {
    OUTLINED_FUNCTION_87_13(v84, *(_QWORD *)(v82 + 56));
    v86 = 0;
  }
  else
  {
    v86 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v9, v86, 1, v62);
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_106_0((uint64_t)v9, 1, v62);
  if (v49)
    goto LABEL_48;
  OUTLINED_FUNCTION_116_6();
  v87 = OUTLINED_FUNCTION_258();
  OUTLINED_FUNCTION_57_17(v87, v88, v89);
  OUTLINED_FUNCTION_117_4();
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_23();
  if (*(_QWORD *)(v83 + 16) && (OUTLINED_FUNCTION_212(), v90 = sub_22AA03688(), (v91 & 1) != 0))
    v92 = *(_QWORD *)(*(_QWORD *)(v83 + 56) + 8 * v90);
  else
    v92 = 0;
  v144 = 0x7261656E696CLL;
  v145 = 0xE600000000000000;
  OUTLINED_FUNCTION_9_97();
  v143 = v92;
  sub_22ABDFD7C();
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_262();
  sub_22AA1DE90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
  OUTLINED_FUNCTION_122_7();
  v93 = OUTLINED_FUNCTION_8_101();
  *(_OWORD *)(v93 + 16) = xmmword_22ABE9FB0;
  v94 = &v54[v93];
  *v94 = 120;
  v94[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_60_5();
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_166_0();
  *v95 = v96;
  v95[1] = 0xE600000000000000;
  v97 = v119;
  v98 = v121;
  v99 = v130;
  v130(v119, v133, v121);
  sub_22ABDE5D0();
  v100 = OUTLINED_FUNCTION_29_46();
  v144 = OUTLINED_FUNCTION_222();
  v101 = v120;
  sub_22ABB2164(v134, v120);
  v102 = OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_106_0(v102, v103, v98);
  if (v49)
  {
    sub_22A9AD754(v101, &qword_255B18140);
  }
  else
  {
    v104 = v99;
    v99 = (void (*)(uint64_t, uint64_t, uint64_t))v129;
    v105 = v118;
    OUTLINED_FUNCTION_37_7(v118, v101, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 32));
    v104(v97, v105, v98);
    OUTLINED_FUNCTION_203();
    sub_22ABDE5D0();
    __swift_storeEnumTagSinglePayload(v101, 0, 1, v100);
    OUTLINED_FUNCTION_86_17(v101);
    OUTLINED_FUNCTION_28_4(v105, *((uint64_t (**)(uint64_t, uint64_t))v99 + 1));
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  OUTLINED_FUNCTION_28_47();
  v106 = (__n128 *)OUTLINED_FUNCTION_68_23();
  OUTLINED_FUNCTION_249(v106, (__n128)xmmword_22ABE8E30);
  OUTLINED_FUNCTION_202();
  v107 = v138;
  OUTLINED_FUNCTION_37_7(v122, v138, v108);
  OUTLINED_FUNCTION_16_13();
  OUTLINED_FUNCTION_262();
  sub_22ABDE420();
  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_212();
  OUTLINED_FUNCTION_100_7();
  OUTLINED_FUNCTION_240();
  v109 = OUTLINED_FUNCTION_14_50();
  OUTLINED_FUNCTION_82_8(v109, v110);
  OUTLINED_FUNCTION_28_4(v107, *((uint64_t (**)(uint64_t, uint64_t))v99 + 1));
  OUTLINED_FUNCTION_83_9();
  OUTLINED_FUNCTION_82_8(v131, v111);
  OUTLINED_FUNCTION_262();
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22ABB2164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B18140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_22ABB21AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int v51;
  int v52;
  unsigned int *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  void *v57;
  void (*v58)(uint64_t, uint64_t);
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t, _QWORD);
  unint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t, _QWORD);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;

  OUTLINED_FUNCTION_4_4();
  v153 = v4;
  v142 = v5;
  v150 = v6;
  v159 = v7;
  v160 = v8;
  v10 = v9;
  v12 = v11;
  v13 = OUTLINED_FUNCTION_26_63();
  OUTLINED_FUNCTION_40_1(v13, (uint64_t)&v169);
  v147 = v14;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14C10);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_0();
  v19 = OUTLINED_FUNCTION_13_86(v18);
  OUTLINED_FUNCTION_40_1(v19, (uint64_t)&v168);
  v145 = v20;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_28_1();
  v157 = v23;
  v24 = OUTLINED_FUNCTION_19_64();
  OUTLINED_FUNCTION_40_1(v24, (uint64_t)&v173);
  v156 = v25;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_0();
  v28 = OUTLINED_FUNCTION_17_74(v27);
  OUTLINED_FUNCTION_40_1(v28, (uint64_t)&v172);
  v151 = v29;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v139 - v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B18140);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v139 - v40;
  v42 = OUTLINED_FUNCTION_125_5();
  OUTLINED_FUNCTION_33_16();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_175_0();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_69_21();
  MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)&v139 - v48;
  v163 = v0;
  OUTLINED_FUNCTION_39_12(&v170);
  v162 = v12;
  v164 = v10;
  sub_22AA1E26C();
  v158 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v158(v49, v160, v42);
  v50 = *(_QWORD *)(v1 + 88);
  v51 = ((uint64_t (*)(char *, uint64_t))v50)(v49, v42);
  v52 = *MEMORY[0x24BE63058];
  if (v51 == *MEMORY[0x24BE63058])
  {
    OUTLINED_FUNCTION_28_4((uint64_t)v49, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    sub_22AA1E26C();
    OUTLINED_FUNCTION_2_1();
  }
  else
  {
    OUTLINED_FUNCTION_28_4((uint64_t)v49, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  v53 = (unsigned int *)v42;
  sub_22ABB2164(v159, (uint64_t)v41);
  v54 = OUTLINED_FUNCTION_69_9();
  OUTLINED_FUNCTION_106_0(v54, v55, v42);
  v140 = v1;
  if (v86)
  {
    sub_22A9AD754((uint64_t)v41, &qword_255B18140);
  }
  else
  {
    OUTLINED_FUNCTION_49(v2, (uint64_t)v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
    OUTLINED_FUNCTION_94_12(v3, v2);
    v56 = ((uint64_t (*)(uint64_t, uint64_t))v50)(v3, v42);
    if (v56 == v52)
    {
      OUTLINED_FUNCTION_59_8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
      OUTLINED_FUNCTION_138_3();
      OUTLINED_FUNCTION_14_80(v57, (const void *)v50);
      OUTLINED_FUNCTION_262();
      sub_22AA1E26C();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_84_19(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      goto LABEL_11;
    }
    v58 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    v58(v2, v42);
    v58(v3, v42);
  }
  OUTLINED_FUNCTION_138_3();
LABEL_11:
  v59 = v151;
  v60 = *(_QWORD *)(v50 + 8);
  if (!*(_QWORD *)(v60 + 16))
  {
LABEL_67:
    v136 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_11_14(v152, v137, v138, v136);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  OUTLINED_FUNCTION_22_21();
  v61 = OUTLINED_FUNCTION_112_6();
  if ((v62 & 1) != 0)
  {
    v63 = v61;
    v64 = *(_QWORD *)(v60 + 56);
    v65 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_36_47();
    OUTLINED_FUNCTION_159_1(v64 + v66 * v63, (uint64_t)&v171);
    v67 = OUTLINED_FUNCTION_38_1();
  }
  else
  {
    v65 = OUTLINED_FUNCTION_3_35();
    v63 = v152;
    v67 = OUTLINED_FUNCTION_69_9();
  }
  __swift_storeEnumTagSinglePayload(v67, v68, 1, v65);
  OUTLINED_FUNCTION_1_58();
  OUTLINED_FUNCTION_3_35();
  v69 = OUTLINED_FUNCTION_69_9();
  OUTLINED_FUNCTION_106_0(v69, v70, v65);
  if (v86)
    goto LABEL_68;
  v71 = *(_QWORD *)v63;
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_198_0();
  *v34 = 0;
  v72 = *MEMORY[0x24BE62EF8];
  v73 = (void (*)(uint64_t *, uint64_t, uint64_t))v59[13];
  OUTLINED_FUNCTION_172_0((uint64_t)v34, v72);
  v74 = sub_22AA0AF6C((uint64_t)v34, *(_QWORD *)(v71 + 16));
  if (!*(_QWORD *)(v71 + 16))
  {
    __break(1u);
LABEL_54:
    sub_22AB5D7C8();
    v75 = v135;
    goto LABEL_21;
  }
  v75 = v74;
  v152 = v42;
  v53 = (unsigned int *)MEMORY[0x24BE62F00];
  v76 = v161;
  if ((*(_BYTE *)(v71 + 40) & 1) != 0)
  {
    *v161 = 0;
  }
  else
  {
    *(_QWORD *)v161 = *(_QWORD *)(v71 + 32);
    v72 = *v53;
  }
  OUTLINED_FUNCTION_172_0((uint64_t)v76, v72);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_54;
LABEL_21:
  if (!*(_QWORD *)(v75 + 16))
  {
    __break(1u);
    goto LABEL_56;
  }
  OUTLINED_FUNCTION_23_2();
  v78 = v75 + v77;
  v79 = (void (*)(uint64_t, uint64_t *, uint64_t))v59[5];
  OUTLINED_FUNCTION_214(v75 + v77, (uint64_t)v161);
  *(_QWORD *)v34 = v150;
  v80 = *v53;
  OUTLINED_FUNCTION_172_0((uint64_t)v34, v80);
  if (*(_QWORD *)(v75 + 16) < 2uLL)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v81 = v59[9];
  OUTLINED_FUNCTION_214(v78 + v81, (uint64_t)v34);
  v82 = *(_QWORD *)(v71 + 16);
  if (v82 < 3)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if ((*(_BYTE *)(v71 + 72) & 1) == 0)
  {
    *(_QWORD *)v34 = *(_QWORD *)(v71 + 64);
    OUTLINED_FUNCTION_172_0((uint64_t)v34, v80);
    if (*(_QWORD *)(v75 + 16) < 3uLL)
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    OUTLINED_FUNCTION_214(v78 + 2 * v81, (uint64_t)v34);
    v82 = *(_QWORD *)(v71 + 16);
  }
  if (v82 < 4)
    goto LABEL_58;
  v83 = *(_QWORD *)(v71 + 80);
  v84 = *(_BYTE *)(v71 + 88);
  OUTLINED_FUNCTION_3_8();
  if ((v84 & 1) == 0)
  {
    v85 = v83 - v142;
    if (__OFSUB__(v83, v142))
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    if (!v153)
    {
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    v86 = v85 == 0x8000000000000000 && v153 == -1;
    if (v86)
      goto LABEL_66;
    v87 = v85 / v153;
    v88 = __OFADD__(v87, 1);
    v89 = v87 + 1;
    if (v88)
      goto LABEL_64;
    v90 = v141;
    *v141 = v89 & ~(v89 >> 63);
    v91 = v154;
    v73(v90, v80, v154);
    if (*(_QWORD *)(v75 + 16) < 4uLL)
    {
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    v79(v78 + 3 * v81, v90, v91);
  }
  v92 = v163[1];
  if (!*(_QWORD *)(v92 + 16))
  {
LABEL_69:
    OUTLINED_FUNCTION_196_0(v149);
LABEL_70:
    __break(1u);
    return;
  }
  v93 = *v163;
  OUTLINED_FUNCTION_16_13();
  v94 = OUTLINED_FUNCTION_153_1();
  v95 = v157;
  v96 = v153;
  v97 = v148;
  v98 = v149;
  if ((v99 & 1) != 0)
  {
    OUTLINED_FUNCTION_87_13(v94, *(_QWORD *)(v92 + 56));
    v100 = 0;
  }
  else
  {
    v100 = 1;
  }
  __swift_storeEnumTagSinglePayload(v98, v100, 1, v65);
  OUTLINED_FUNCTION_1_58();
  v101 = OUTLINED_FUNCTION_151_1();
  OUTLINED_FUNCTION_106_0(v101, v102, v65);
  if (v86)
    goto LABEL_70;
  OUTLINED_FUNCTION_116_6();
  v103 = OUTLINED_FUNCTION_258();
  OUTLINED_FUNCTION_57_17(v103, v104, v105);
  OUTLINED_FUNCTION_117_4();
  sub_22ABDE750();
  OUTLINED_FUNCTION_63_1();
  if (*(_QWORD *)(v93 + 16) && (v106 = sub_22AA03688(), (v107 & 1) != 0))
    v108 = *(_QWORD *)(*(_QWORD *)(v93 + 56) + 8 * v106);
  else
    v108 = 0;
  v166 = 1986948963;
  v167 = 0xE400000000000000;
  OUTLINED_FUNCTION_9_97();
  v165 = v108;
  sub_22ABDFD7C();
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_23();
  v161 = (_BYTE *)v166;
  sub_22AA1DE90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
  OUTLINED_FUNCTION_229();
  v111 = v110 & ~v109;
  v112 = swift_allocObject();
  *(_OWORD *)(v112 + 16) = xmmword_22AC00800;
  v113 = (_QWORD *)(v112 + v111);
  *v113 = 120;
  v113[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_16_13();
  OUTLINED_FUNCTION_227();
  OUTLINED_FUNCTION_166_0();
  *v114 = v115;
  v114[1] = 0xE600000000000000;
  v116 = v152;
  OUTLINED_FUNCTION_94_12(v97, v160);
  sub_22ABDE5D0();
  v117 = (_QWORD *)((char *)v113 + 2 * v95);
  *v117 = 0x73656469727473;
  v117[1] = 0xE700000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B101C0);
  v118 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v118 + 16) = xmmword_22ABE9FB0;
  *(_DWORD *)(v118 + 32) = 1;
  if (v96 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_59;
  if (v96 > 0x7FFFFFFF)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  *(_DWORD *)(v118 + 36) = v96;
  sub_22ABDE57C();
  v119 = (_QWORD *)((char *)v113 + 3 * v95);
  *v119 = 0x6E6F6974616C6964;
  v119[1] = 0xE900000000000073;
  sub_22ABDE57C();
  OUTLINED_FUNCTION_113_3();
  *v120 = 6578544;
  v120[1] = 0xE300000000000000;
  sub_22ABDE57C();
  OUTLINED_FUNCTION_113_3();
  *v121 = 0x657079745F646170;
  v121[1] = 0xE800000000000000;
  sub_22ABDE588();
  OUTLINED_FUNCTION_113_3();
  *v122 = 0x7370756F7267;
  v122[1] = 0xE600000000000000;
  sub_22ABDE5AC();
  v123 = OUTLINED_FUNCTION_29_46();
  v124 = OUTLINED_FUNCTION_222();
  v166 = v124;
  v125 = v143;
  sub_22ABB2164(v159, v143);
  OUTLINED_FUNCTION_106_0(v125, 1, v116);
  if (v86)
  {
    sub_22A9AD754(v125, &qword_255B18140);
  }
  else
  {
    v126 = v140;
    v127 = v139;
    OUTLINED_FUNCTION_49(v139, v125, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 32));
    OUTLINED_FUNCTION_94_12(v97, v127);
    OUTLINED_FUNCTION_105_6();
    sub_22ABDE5D0();
    v128 = OUTLINED_FUNCTION_38_1();
    __swift_storeEnumTagSinglePayload(v128, v129, 1, v123);
    OUTLINED_FUNCTION_86_17(v124);
    OUTLINED_FUNCTION_84_19(*(uint64_t (**)(uint64_t, uint64_t))(v126 + 8));
  }
  v130 = v147;
  v131 = v146;
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  OUTLINED_FUNCTION_28_47();
  *(_OWORD *)(OUTLINED_FUNCTION_8_101() + 16) = xmmword_22ABE8E30;
  v132 = v145;
  v133 = v157;
  OUTLINED_FUNCTION_59_5(v144, v157, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v145 + 16));
  OUTLINED_FUNCTION_54_4();
  OUTLINED_FUNCTION_190_0();
  OUTLINED_FUNCTION_253();
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_82_8(v131, *(uint64_t (**)(uint64_t, _QWORD))(v130 + 8));
  OUTLINED_FUNCTION_24_18(v133, *(uint64_t (**)(uint64_t, uint64_t))(v132 + 8));
  OUTLINED_FUNCTION_83_9();
  OUTLINED_FUNCTION_82_8(v155, v134);
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22ABB2DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  int v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  char v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  const void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86[120];

  v75 = a5;
  v76 = a6;
  v73 = a3;
  v74 = a4;
  v11 = OUTLINED_FUNCTION_26_63();
  v68 = *(_QWORD *)(v11 - 8);
  v69 = v11;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0();
  v67 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  v70 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OUTLINED_FUNCTION_18_73();
  v65 = *(_QWORD *)(v16 - 8);
  v66 = v16;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  v64 = (uint64_t)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_28_1();
  v79 = v20;
  v21 = OUTLINED_FUNCTION_125_5();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_87();
  v63 = v23;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_126_3();
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v62 - v27;
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_69_21();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v62 - v30;
  v78 = v6;
  OUTLINED_FUNCTION_39_12(v86);
  v71 = a2;
  v72 = a1;
  OUTLINED_FUNCTION_238();
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  OUTLINED_FUNCTION_58_14((uint64_t)v31, v73);
  v33 = OUTLINED_FUNCTION_181_0((uint64_t)v31);
  v34 = *MEMORY[0x24BE63058];
  v77 = v32;
  if (v33 == v34)
  {
    OUTLINED_FUNCTION_30_38((uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 96));
    OUTLINED_FUNCTION_127_5();
    OUTLINED_FUNCTION_63_1();
  }
  else
  {
    OUTLINED_FUNCTION_30_38((uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  }
  OUTLINED_FUNCTION_58_14(v8, v74);
  if (OUTLINED_FUNCTION_181_0(v8) == v34)
  {
    OUTLINED_FUNCTION_30_38(v8, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 96));
    OUTLINED_FUNCTION_14_80(&v85, v78);
    sub_22AA1E26C();
    OUTLINED_FUNCTION_58_1();
  }
  else
  {
    OUTLINED_FUNCTION_30_38(v8, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  }
  OUTLINED_FUNCTION_58_14((uint64_t)v28, v75);
  if (OUTLINED_FUNCTION_181_0((uint64_t)v28) == v34)
  {
    OUTLINED_FUNCTION_30_38((uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 96));
    v35 = v78;
    OUTLINED_FUNCTION_14_80(&v84, v78);
    OUTLINED_FUNCTION_140_5();
    OUTLINED_FUNCTION_54();
  }
  else
  {
    OUTLINED_FUNCTION_30_38((uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    v35 = v78;
  }
  OUTLINED_FUNCTION_58_14(v7, v76);
  if (OUTLINED_FUNCTION_181_0(v7) == v34)
  {
    OUTLINED_FUNCTION_30_38(v7, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 96));
    OUTLINED_FUNCTION_14_80(&v83, v35);
    OUTLINED_FUNCTION_139_4();
    OUTLINED_FUNCTION_51_1();
  }
  else
  {
    OUTLINED_FUNCTION_30_38(v7, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  }
  v36 = (uint64_t)v70;
  v37 = v35[1];
  OUTLINED_FUNCTION_29();
  sub_22AAE3FA0(v37, v36);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_3_35();
  v38 = OUTLINED_FUNCTION_246();
  result = OUTLINED_FUNCTION_106_0(v38, v39, v40);
  if (v42)
  {
    __break(1u);
  }
  else
  {
    sub_22AA1E058();
    sub_22AA203C0(v36);
    v43 = *v35;
    if (*(_QWORD *)(*v35 + 16) && (OUTLINED_FUNCTION_143_3(), v44 = sub_22AA03688(), (v45 & 1) != 0))
      v46 = *(_QWORD *)(*(_QWORD *)(v43 + 56) + 8 * v44);
    else
      v46 = 0;
    v81 = 0x6F6E5F6863746162;
    v82 = 0xEA00000000006D72;
    OUTLINED_FUNCTION_9_97();
    v80 = v46;
    sub_22ABDFD7C();
    v48 = v47;
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_63_1();
    v70 = (char *)v81;
    v62 = v82;
    sub_22AA1DE90();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
    v49 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768) - 8) + 72);
    OUTLINED_FUNCTION_192();
    v50 = OUTLINED_FUNCTION_8_101();
    *(_OWORD *)(v50 + 16) = xmmword_22ABF3EC0;
    v51 = (_QWORD *)(v50 + v48);
    *v51 = 120;
    v51[1] = 0xE100000000000000;
    OUTLINED_FUNCTION_29();
    sub_22ABDE558();
    OUTLINED_FUNCTION_215();
    *v52 = 1635018082;
    v52[1] = 0xE400000000000000;
    v53 = v63;
    v77(v63, v73, v21);
    OUTLINED_FUNCTION_90_16();
    OUTLINED_FUNCTION_215();
    *v54 = 0x616D6D6167;
    v54[1] = 0xE500000000000000;
    OUTLINED_FUNCTION_101_10(v53, v74);
    OUTLINED_FUNCTION_90_16();
    OUTLINED_FUNCTION_215();
    *v55 = 1851876717;
    v55[1] = 0xE400000000000000;
    OUTLINED_FUNCTION_101_10(v53, v75);
    OUTLINED_FUNCTION_90_16();
    OUTLINED_FUNCTION_215();
    *v56 = 0x65636E6169726176;
    v56[1] = 0xE800000000000000;
    OUTLINED_FUNCTION_101_10(v53, v76);
    OUTLINED_FUNCTION_90_16();
    v57 = (_QWORD *)((char *)v51 + 5 * v49);
    *v57 = 0x6E6F6C69737065;
    v57[1] = 0xE700000000000000;
    sub_22ABDE5A0();
    OUTLINED_FUNCTION_29_46();
    OUTLINED_FUNCTION_79_19();
    __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
    OUTLINED_FUNCTION_28_47();
    *(_OWORD *)(OUTLINED_FUNCTION_68_23() + 16) = xmmword_22ABE8E30;
    v58 = v65;
    v59 = v79;
    OUTLINED_FUNCTION_37_7(v64, v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 16));
    OUTLINED_FUNCTION_47_3();
    v60 = v70;
    sub_22ABDE420();
    v61 = v67;
    OUTLINED_FUNCTION_143_3();
    OUTLINED_FUNCTION_100_7();
    sub_22AA1FA24();
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v61, v69);
    OUTLINED_FUNCTION_28_4(v59, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
    return (uint64_t)v60;
  }
  return result;
}

void sub_22ABB3424()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  int v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  __n128 *v82;
  __n128 *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  _QWORD *v87;
  __n128 *v88;
  uint64_t v89;
  _QWORD *v90;
  __n128 *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  unint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t, uint64_t, uint64_t);
  __n128 *v122;
  uint64_t v123;
  char *v124;
  __n128 *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  void (*v129)(uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __n128 *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;

  OUTLINED_FUNCTION_4_4();
  v157 = v5;
  v158 = v6;
  v153 = v7;
  v150 = v8;
  v151 = v9;
  v11 = v10;
  OUTLINED_FUNCTION_51_12();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  v141 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_26_63();
  v143 = *(_QWORD *)(v14 - 8);
  v144 = v14;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0();
  v142 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14C10);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_0();
  v139 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_0();
  v160.n128_u64[0] = v20;
  v21 = OUTLINED_FUNCTION_19_64();
  v147 = *(_QWORD *)(v21 - 8);
  v148 = v21;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_0();
  v161 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B18140);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_87();
  v138 = v25;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v26);
  v140 = (unint64_t)&v133 - v27;
  OUTLINED_FUNCTION_4_0();
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v133 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v133 - v32;
  v34 = OUTLINED_FUNCTION_125_5();
  OUTLINED_FUNCTION_118_6();
  MEMORY[0x24BDAC7A8](v35);
  v135 = (uint64_t)&v133 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v37);
  v134 = (uint64_t)&v133 - v38;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_12_0();
  v146 = v40;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_12_0();
  *(_QWORD *)&v145 = v42;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_12_0();
  v155 = v44;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_175_0();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_69_21();
  MEMORY[0x24BDAC7A8](v47);
  v48 = (void *)OUTLINED_FUNCTION_224();
  v154 = v0;
  OUTLINED_FUNCTION_39_12(v48);
  v149 = v11;
  sub_22AA1E26C();
  v49 = v34;
  v156 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v156(v1, v150, v34);
  v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v34);
  v51 = *MEMORY[0x24BE63058];
  v159 = v49;
  v152 = v2;
  if (v50 == v51)
  {
    OUTLINED_FUNCTION_84_14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
    OUTLINED_FUNCTION_127_5();
    v49 = v159;
    OUTLINED_FUNCTION_63_1();
  }
  else
  {
    OUTLINED_FUNCTION_84_14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  sub_22ABB2164(v151, (uint64_t)v33);
  v52 = OUTLINED_FUNCTION_145_3();
  OUTLINED_FUNCTION_106_0(v52, v53, v49);
  if (v54)
  {
    sub_22A9AD754((uint64_t)v33, &qword_255B18140);
    v55 = v154;
    v56 = v152;
  }
  else
  {
    v56 = v152;
    OUTLINED_FUNCTION_24_11(v3, (uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 32));
    OUTLINED_FUNCTION_133_3();
    v57 = OUTLINED_FUNCTION_211();
    if (v57 == v51)
    {
      OUTLINED_FUNCTION_84_14(v4, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 96));
      v55 = v154;
      OUTLINED_FUNCTION_14_80(&v166, v154);
      sub_22AA1E26C();
      v49 = v159;
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_84_14(v3, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
    }
    else
    {
      v58 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v58(v3, v159);
      v58(v4, v159);
      v49 = v159;
      v55 = v154;
    }
  }
  sub_22ABB2164(v153, (uint64_t)v31);
  OUTLINED_FUNCTION_106_0((uint64_t)v31, 1, v49);
  if (v54)
  {
    sub_22A9AD754((uint64_t)v31, &qword_255B18140);
  }
  else
  {
    v59 = v155;
    OUTLINED_FUNCTION_24_11(v155, (uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32));
    v60 = v145;
    OUTLINED_FUNCTION_133_3();
    v61 = OUTLINED_FUNCTION_211();
    if (v61 == v51)
    {
      OUTLINED_FUNCTION_84_14(v60, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 96));
      OUTLINED_FUNCTION_14_80(&v165, v55);
      OUTLINED_FUNCTION_139_4();
      OUTLINED_FUNCTION_51_1();
      OUTLINED_FUNCTION_28_4(v59, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
    }
    else
    {
      v62 = v49;
      v63 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v63(v59, v62);
      v63(v60, v62);
    }
  }
  v64 = v160.n128_u64[0];
  v65 = v55[1];
  if (!*(_QWORD *)(v65 + 16))
  {
    v130 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_11_14(v64, v131, v132, v130);
LABEL_33:
    __break(1u);
    return;
  }
  v66 = *v55;
  OUTLINED_FUNCTION_16_13();
  v67 = OUTLINED_FUNCTION_153_1();
  if ((v68 & 1) != 0)
  {
    v69 = v67;
    v70 = *(_QWORD *)(v65 + 56);
    v71 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_36_47();
    sub_22AA20444(v70 + v72 * v69, v64);
    v73 = v64;
    v74 = 0;
  }
  else
  {
    v71 = OUTLINED_FUNCTION_3_35();
    v73 = v64;
    v74 = 1;
  }
  OUTLINED_FUNCTION_57_3(v73, v74);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_3_35();
  OUTLINED_FUNCTION_106_0(v64, 1, v71);
  if (v54)
    goto LABEL_33;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v147 + 16))(v161, v64 + *(int *)(v71 + 20), v148);
  sub_22AA203C0(v64);
  if (*(_QWORD *)(v66 + 16) && (v75 = sub_22AA03688(), (v76 & 1) != 0))
    v77 = *(_QWORD *)(*(_QWORD *)(v66 + 56) + 8 * v75);
  else
    v77 = 0;
  v163 = 1836348268;
  v164 = 0xE400000000000000;
  OUTLINED_FUNCTION_9_97();
  v162 = v77;
  sub_22ABDFD7C();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_63_1();
  v79 = v163;
  v78 = v164;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15118);
  v80 = OUTLINED_FUNCTION_33_2();
  v145 = xmmword_22ABEDF90;
  *(_OWORD *)(v80 + 16) = xmmword_22ABEDF90;
  *(_QWORD *)(v80 + 32) = 0;
  *(_BYTE *)(v80 + 40) = 1;
  *(_QWORD *)(v80 + 48) = 1;
  *(_BYTE *)(v80 + 56) = 0;
  *(_QWORD *)(v80 + 64) = v158;
  *(_BYTE *)(v80 + 72) = 0;
  v81 = v161;
  OUTLINED_FUNCTION_138_4();
  OUTLINED_FUNCTION_51_1();
  v163 = v79;
  v164 = v78;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_70_19();
  v82 = (__n128 *)OUTLINED_FUNCTION_33_2();
  v160 = (__n128)xmmword_22ABE9FB0;
  OUTLINED_FUNCTION_96_7(v82, (__n128)xmmword_22ABE9FB0);
  OUTLINED_FUNCTION_138_4();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_58_1();
  v155 = v79;
  v163 = v79;
  v164 = v78;
  v137 = v78;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_52_29();
  v83 = (__n128 *)OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_96_7(v83, v160);
  OUTLINED_FUNCTION_138_4();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_63_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  v84 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768) - 8) + 72);
  OUTLINED_FUNCTION_122_7();
  v136 = (__n128 *)OUTLINED_FUNCTION_8_101();
  OUTLINED_FUNCTION_248(v136, (__n128)xmmword_22ABF8860);
  *v81 = 120;
  v81[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_60_5();
  sub_22ABDE558();
  OUTLINED_FUNCTION_166_0();
  *v86 = v85 & 0xFFFFFFFFFFFFLL | 0x685F000000000000;
  v86[1] = 0xE900000000000068;
  v156(v146, v150, v159);
  sub_22ABDE5D0();
  v87 = (_QWORD *)((char *)v81 + 2 * v84);
  *v87 = 0x5F6C616974696E69;
  v87[1] = 0xE900000000000063;
  OUTLINED_FUNCTION_241();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v88 = (__n128 *)OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_189_0(v88);
  OUTLINED_FUNCTION_184_0(v89);
  v90 = (_QWORD *)((char *)v81 + 3 * v84);
  *v90 = 0x5F6C616974696E69;
  v90[1] = 0xE900000000000068;
  OUTLINED_FUNCTION_241();
  v91 = (__n128 *)OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_189_0(v91);
  OUTLINED_FUNCTION_184_0(v92);
  OUTLINED_FUNCTION_113_3();
  OUTLINED_FUNCTION_137_4();
  OUTLINED_FUNCTION_113_3();
  OUTLINED_FUNCTION_137_4();
  OUTLINED_FUNCTION_113_3();
  *v93 = 0xD000000000000014;
  v93[1] = 0x800000022ABE7890;
  OUTLINED_FUNCTION_73_17();
  sub_22ABDE588();
  v94 = (_QWORD *)((char *)v81 + 7 * v84);
  *v94 = 0x6F69746365726964;
  v94[1] = 0xE90000000000006ELL;
  sub_22ABDE588();
  OUTLINED_FUNCTION_113_3();
  *v95 = 0x735F74757074756FLL;
  v95[1] = 0xEF65636E65757165;
  sub_22ABDE594();
  v96 = OUTLINED_FUNCTION_29_46();
  v97 = v159;
  v162 = OUTLINED_FUNCTION_222();
  v98 = v140;
  sub_22ABB2164(v151, v140);
  v99 = OUTLINED_FUNCTION_106_0(v98, 1, v97);
  if (v54)
  {
    OUTLINED_FUNCTION_255(v99, &qword_255B18140);
    v100 = v152;
    v104 = v138;
    v103 = (void (*)(uint64_t))v156;
  }
  else
  {
    v100 = v152;
    v101 = v134;
    OUTLINED_FUNCTION_24_11(v134, v98, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 32));
    v102 = OUTLINED_FUNCTION_161_1();
    v103 = (void (*)(uint64_t))v156;
    ((void (*)(uint64_t))v156)(v102);
    OUTLINED_FUNCTION_174_0();
    OUTLINED_FUNCTION_155_2();
    sub_22AAF4564(v98, 0x695F746867696577, 0xE900000000000068);
    v97 = v159;
    OUTLINED_FUNCTION_84_14(v101, *(uint64_t (**)(uint64_t, uint64_t))(v100 + 8));
    v104 = v138;
  }
  sub_22ABB2164(v153, v104);
  v105 = OUTLINED_FUNCTION_106_0(v104, 1, v97);
  if (v54)
  {
    OUTLINED_FUNCTION_255(v105, &qword_255B18140);
  }
  else
  {
    v106 = v135;
    OUTLINED_FUNCTION_24_11(v135, v104, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 32));
    v107 = OUTLINED_FUNCTION_161_1();
    v103(v107);
    OUTLINED_FUNCTION_174_0();
    OUTLINED_FUNCTION_155_2();
    v96 = v97;
    OUTLINED_FUNCTION_86_17(v104);
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v106, v97);
  }
  v153 = v162;
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  v159 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_28_47() - 8) + 72);
  OUTLINED_FUNCTION_192();
  v108 = OUTLINED_FUNCTION_8_101();
  v152 = v108;
  *(_OWORD *)(v108 + 16) = v145;
  v109 = v108 + v96;
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FB98);
  v111 = OUTLINED_FUNCTION_31_43();
  v112 = *(_QWORD *)(v111 - 8);
  v113 = *(_QWORD *)(v112 + 72);
  v114 = *(unsigned __int8 *)(v112 + 80);
  v115 = (v114 + 32) & ~v114;
  v156 = (void (*)(uint64_t, uint64_t, uint64_t))v115;
  v157 = v114 | 7;
  v150 = v110;
  v116 = swift_allocObject();
  *(_OWORD *)(v116 + 16) = v145;
  v117 = v116 + v115;
  *(_BYTE *)(v116 + v115) = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v112 + 104))(v116 + v115, *MEMORY[0x24BE62EF8], v111);
  *(_QWORD *)(v117 + v113) = 1;
  OUTLINED_FUNCTION_40_41(v117 + v113);
  v118 = (_QWORD *)(v117 + 2 * v113);
  *v118 = v158;
  OUTLINED_FUNCTION_40_41((uint64_t)v118);
  v119 = v137;
  OUTLINED_FUNCTION_39_17();
  OUTLINED_FUNCTION_89_18();
  OUTLINED_FUNCTION_3_8();
  v151 = v109;
  v120 = v155;
  OUTLINED_FUNCTION_190_0();
  v146 = v109 + v159;
  v163 = v120;
  v164 = v119;
  OUTLINED_FUNCTION_39_17();
  OUTLINED_FUNCTION_70_19();
  *(_QWORD *)&v145 = v163;
  v140 = v164;
  v121 = (char *)v156;
  v149 = (char *)v156 + 2 * v113;
  v122 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_189_0(v122);
  v124 = &v121[v123];
  *(_QWORD *)&v121[v123] = 1;
  OUTLINED_FUNCTION_40_41((uint64_t)&v121[v123]);
  *(_QWORD *)&v124[v113] = v158;
  OUTLINED_FUNCTION_40_41((uint64_t)&v124[v113]);
  sub_22ABDE750();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_190_0();
  v159 = v151 + 2 * v159;
  v163 = v155;
  v164 = v119;
  OUTLINED_FUNCTION_39_17();
  OUTLINED_FUNCTION_52_29();
  v151 = v164;
  v125 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_189_0(v125);
  v127 = (char *)v156 + v126;
  *(_QWORD *)v127 = 1;
  OUTLINED_FUNCTION_40_41((uint64_t)v127);
  *(_QWORD *)&v127[v113] = v158;
  OUTLINED_FUNCTION_40_41((uint64_t)&v127[v113]);
  sub_22ABDE750();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_190_0();
  sub_22ABDE6B4();
  sub_22AA1FA24();
  OUTLINED_FUNCTION_230(v143);
  v128 = OUTLINED_FUNCTION_14_50();
  v129(v128);
  OUTLINED_FUNCTION_3();
}

void sub_22ABB40AC()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  int v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  _BYTE *v149;
  uint64_t v150;
  _BYTE *v151;
  uint64_t v152;
  void (*v153)(uint64_t, _BYTE *, uint64_t);
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _BYTE *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  uint64_t (*v190)(char *, uint64_t);
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  const void *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _BYTE *v205;
  uint64_t v206;
  _QWORD v207[2];
  uint64_t v208;
  uint64_t v209;
  _QWORD v210[15];

  OUTLINED_FUNCTION_4_4();
  v199 = v0;
  v203 = v2;
  v4 = v3;
  v188 = v5;
  v7 = v6;
  v181 = OUTLINED_FUNCTION_31_43();
  OUTLINED_FUNCTION_118_6();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_87();
  v205 = v9;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_28_1();
  v180 = v11;
  v12 = OUTLINED_FUNCTION_26_63();
  v186 = *(_QWORD *)(v12 - 8);
  v187 = v12;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0();
  v185 = v14;
  v15 = OUTLINED_FUNCTION_18_73();
  v16 = *(_QWORD *)(v15 - 8);
  v193 = v15;
  v194 = v16;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_87();
  v184 = v18;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_12_0();
  v175 = v20;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v170 - v22;
  v196 = sub_22ABDE744();
  v24 = *(_QWORD *)(v196 - 8);
  MEMORY[0x24BDAC7A8](v196);
  OUTLINED_FUNCTION_87();
  v176 = v25;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_28_1();
  v178 = v27;
  v195 = OUTLINED_FUNCTION_144_1();
  v202 = *(_QWORD *)(v195 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_87();
  v191 = v29;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_28_1();
  v32 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v33);
  v172 = (uint64_t)&v170 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_12_0();
  v174 = (uint64_t *)v36;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v37);
  v177 = (uint64_t)&v170 - v38;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_28_1();
  v41 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B18140);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_87();
  v192 = v43;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v170 - v45;
  v200 = OUTLINED_FUNCTION_19_19();
  v204 = *(_QWORD *)(v200 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_87();
  v197 = v48;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_12_0();
  v173 = v50;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v51);
  v171 = (uint64_t)&v170 - v52;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_28_1();
  v201 = v54;
  v183 = v4;
  v55 = sub_22ABDE5E8();
  sub_22AB4ED94(v55);
  OUTLINED_FUNCTION_3_8();
  v56 = OUTLINED_FUNCTION_125_5();
  v57 = OUTLINED_FUNCTION_167_1();
  OUTLINED_FUNCTION_106_0(v57, v58, v56);
  if (v59)
  {
    __break(1u);
    goto LABEL_52;
  }
  v190 = *(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v56 - 8) + 88);
  v60 = v190(v46, v56);
  v61 = *MEMORY[0x24BE63058];
  v179 = v1;
  v182 = v7;
  v189 = v61;
  if (v60 == v61)
  {
    v178 = v24;
    OUTLINED_FUNCTION_128_6();
    OUTLINED_FUNCTION_14_80(v210, v199);
    OUTLINED_FUNCTION_127_5();
    OUTLINED_FUNCTION_53_36();
    if (!v62)
    {
LABEL_53:
      v160 = OUTLINED_FUNCTION_3_35();
      OUTLINED_FUNCTION_11_14((uint64_t)v41, v161, v162, v160);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    OUTLINED_FUNCTION_16_23();
    v63 = OUTLINED_FUNCTION_33_38();
    if ((v64 & 1) != 0)
    {
      v65 = v63;
      v66 = v210[7];
      v67 = OUTLINED_FUNCTION_3_35();
      OUTLINED_FUNCTION_36_47();
      OUTLINED_FUNCTION_120_4(v66 + v68 * v65);
      v69 = (uint64_t)v41;
      v70 = 0;
    }
    else
    {
      v67 = OUTLINED_FUNCTION_3_35();
      v69 = OUTLINED_FUNCTION_151_1();
    }
    __swift_storeEnumTagSinglePayload(v69, v70, 1, v67);
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_106_0((uint64_t)v41, 1, v67);
    if (v59)
      goto LABEL_54;
    v198 = *(_QWORD *)v41;
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_117_4();
    if (!v210[2])
    {
LABEL_55:
      OUTLINED_FUNCTION_79_8(v177, 1);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    OUTLINED_FUNCTION_16_23();
    v81 = OUTLINED_FUNCTION_33_38();
    v80 = v178;
    if ((v82 & 1) != 0)
    {
      v83 = OUTLINED_FUNCTION_103_8(v81);
      v84 = v177;
      OUTLINED_FUNCTION_221(v83);
      v85 = 0;
      v41 = v199;
    }
    else
    {
      v85 = 1;
      v41 = v199;
      v84 = v177;
    }
    __swift_storeEnumTagSinglePayload(v84, v85, 1, v67);
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_106_0(v84, 1, v67);
    if (v59)
      goto LABEL_56;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v204 + 16))(v201, v84 + *(int *)(v67 + 20), v200);
    sub_22AA203C0(v84);
    OUTLINED_FUNCTION_63_1();
    v72 = v193;
  }
  else
  {
    if (v60 != *MEMORY[0x24BE63060])
    {
LABEL_61:
      OUTLINED_FUNCTION_31_10();
      v166 = 105;
LABEL_64:
      v170 = v166;
      OUTLINED_FUNCTION_257();
LABEL_74:
      OUTLINED_FUNCTION_252();
      __break(1u);
      return;
    }
    OUTLINED_FUNCTION_128_6();
    OUTLINED_FUNCTION_49(v32, (uint64_t)v46, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v202 + 32));
    sub_22ABDE528();
    v72 = v193;
    v71 = v194;
    if ((*(unsigned int (**)(char *, uint64_t))(v194 + 88))(v23, v193) != *MEMORY[0x24BE631E8])
    {
      OUTLINED_FUNCTION_24_18((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 8));
      OUTLINED_FUNCTION_31_10();
      v167 = 100;
      goto LABEL_66;
    }
    OUTLINED_FUNCTION_24_18((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 96));
    v73 = swift_projectBox();
    v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    v75 = v178;
    v76 = v24;
    v77 = v196;
    v74(v178, v73, v196);
    swift_release();
    v78 = sub_22ABDE738();
    v198 = sub_22ABABBC8(v78);
    OUTLINED_FUNCTION_54();
    sub_22ABDE72C();
    v79 = v77;
    v80 = v76;
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v79);
    OUTLINED_FUNCTION_84_19(*(uint64_t (**)(uint64_t, uint64_t))(v202 + 8));
    v41 = v199;
  }
  v86 = sub_22ABDE5E8();
  v87 = v192;
  sub_22AB4ED94(v86);
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_106_0(v87, 1, v56);
  if (v59)
  {
LABEL_52:
    OUTLINED_FUNCTION_80_24();
    __break(1u);
    goto LABEL_53;
  }
  v88 = v190((char *)v87, v56);
  if (v88 != v189)
  {
    if (v88 != *MEMORY[0x24BE63060])
    {
      OUTLINED_FUNCTION_80_24();
      OUTLINED_FUNCTION_31_10();
      v166 = 128;
      goto LABEL_64;
    }
    OUTLINED_FUNCTION_187_0();
    v100 = v202;
    OUTLINED_FUNCTION_49(v191, v87, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v202 + 32));
    v101 = v175;
    sub_22ABDE528();
    v102 = v194;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v194 + 88))(v101, v72) == *MEMORY[0x24BE631E8])
    {
      OUTLINED_FUNCTION_24_18(v101, *(uint64_t (**)(uint64_t, uint64_t))(v102 + 96));
      v103 = swift_projectBox();
      v104 = v176;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16))(v176, v103, v196);
      swift_release();
      v105 = sub_22ABDE738();
      v106 = sub_22ABABBC8(v105);
      OUTLINED_FUNCTION_3_8();
      v107 = sub_22A99EE4C(v198, v106);
      OUTLINED_FUNCTION_63_1();
      if ((v107 & 1) != 0)
      {
        sub_22ABDE72C();
        sub_22ABB4E78();
        OUTLINED_FUNCTION_98_13();
        OUTLINED_FUNCTION_98_13();
        v108 = v208;
        v109 = v207[0];
        v110 = OUTLINED_FUNCTION_14_50();
        OUTLINED_FUNCTION_243(v110, v111);
        if (v108 == v109)
        {
          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v104, v196);
          (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v191, v195);
          v41 = v199;
          goto LABEL_36;
        }
        OUTLINED_FUNCTION_80_24();
        OUTLINED_FUNCTION_31_10();
        v169 = 125;
        goto LABEL_72;
      }
      OUTLINED_FUNCTION_80_24();
      OUTLINED_FUNCTION_31_10();
      v168 = 122;
      goto LABEL_70;
    }
    OUTLINED_FUNCTION_80_24();
    OUTLINED_FUNCTION_24_18(v101, *(uint64_t (**)(uint64_t, uint64_t))(v102 + 8));
    OUTLINED_FUNCTION_31_10();
    v167 = 119;
LABEL_66:
    v170 = v167;
LABEL_73:
    OUTLINED_FUNCTION_193_0();
    OUTLINED_FUNCTION_156_3();
    goto LABEL_74;
  }
  OUTLINED_FUNCTION_187_0();
  OUTLINED_FUNCTION_14_80(&v208, v41);
  OUTLINED_FUNCTION_127_5();
  v89 = v209;
  if (!*(_QWORD *)(v209 + 16))
  {
LABEL_57:
    v163 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_11_14((uint64_t)v174, v164, v165, v163);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  OUTLINED_FUNCTION_16_23();
  v90 = OUTLINED_FUNCTION_33_38();
  if ((v91 & 1) != 0)
  {
    v92 = v90;
    v93 = *(_QWORD *)(v89 + 56);
    v94 = OUTLINED_FUNCTION_3_35();
    OUTLINED_FUNCTION_36_47();
    v96 = v93 + v95 * v92;
    v97 = v174;
    sub_22AA20444(v96, (uint64_t)v174);
    v98 = (uint64_t)v97;
    v99 = 0;
  }
  else
  {
    v94 = OUTLINED_FUNCTION_3_35();
    v97 = v174;
    v98 = OUTLINED_FUNCTION_256();
  }
  __swift_storeEnumTagSinglePayload(v98, v99, 1, v94);
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_3_35();
  v112 = OUTLINED_FUNCTION_256();
  OUTLINED_FUNCTION_106_0(v112, v113, v94);
  if (v59)
    goto LABEL_58;
  v114 = *v97;
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_254();
  v115 = sub_22A99EE4C(v198, v114);
  OUTLINED_FUNCTION_30();
  if ((v115 & 1) == 0)
  {
    OUTLINED_FUNCTION_80_24();
    OUTLINED_FUNCTION_31_10();
    v168 = 112;
LABEL_70:
    v170 = v168;
    OUTLINED_FUNCTION_193_0();
    OUTLINED_FUNCTION_156_3();
    goto LABEL_74;
  }
  if (!*(_QWORD *)(v89 + 16))
  {
LABEL_59:
    OUTLINED_FUNCTION_196_0(v172);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  OUTLINED_FUNCTION_16_23();
  v116 = OUTLINED_FUNCTION_33_38();
  if ((v117 & 1) != 0)
  {
    v118 = OUTLINED_FUNCTION_110_8(v116, *(_QWORD *)(v89 + 56));
    v119 = v172;
    OUTLINED_FUNCTION_239(v118);
    v120 = 0;
  }
  else
  {
    v120 = 1;
    v119 = v172;
  }
  __swift_storeEnumTagSinglePayload(v119, v120, 1, v94);
  OUTLINED_FUNCTION_63_1();
  v121 = OUTLINED_FUNCTION_145_3();
  OUTLINED_FUNCTION_106_0(v121, v122, v94);
  if (v59)
    goto LABEL_60;
  v123 = v119 + *(int *)(v94 + 20);
  v124 = v204;
  v125 = v171;
  OUTLINED_FUNCTION_49(v171, v123, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v204 + 16));
  OUTLINED_FUNCTION_235();
  OUTLINED_FUNCTION_63_1();
  sub_22ABB4E78();
  OUTLINED_FUNCTION_98_13();
  OUTLINED_FUNCTION_98_13();
  v127 = v206;
  v126 = v207[0];
  OUTLINED_FUNCTION_243(v125, *(uint64_t (**)(uint64_t, uint64_t))(v124 + 8));
  if (v126 != v127)
  {
    OUTLINED_FUNCTION_80_24();
    OUTLINED_FUNCTION_31_10();
    v169 = 115;
LABEL_72:
    v170 = v169;
    goto LABEL_73;
  }
LABEL_36:
  v128 = *(_QWORD *)v41;
  if (*(_QWORD *)(*(_QWORD *)v41 + 16) && (v129 = sub_22AA03688(), (v130 & 1) != 0))
    v131 = *(_QWORD *)(*(_QWORD *)(v128 + 56) + 8 * v129);
  else
    v131 = 0;
  strcpy((char *)v207, "element_wise");
  BYTE5(v207[1]) = 0;
  HIWORD(v207[1]) = -5120;
  OUTLINED_FUNCTION_9_97();
  v206 = v131;
  sub_22ABDFD7C();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_63_1();
  v195 = v207[1];
  v196 = v207[0];
  v132 = v198;
  v133 = v201;
  sub_22AA1E4E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B760);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B768);
  v135 = *(_QWORD *)(v134 - 8);
  v136 = *(_QWORD *)(v135 + 72);
  v137 = (*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
  v138 = OUTLINED_FUNCTION_8_101();
  *(_OWORD *)(v138 + 16) = xmmword_22ABE9FB0;
  v139 = (_QWORD *)(v138 + v137);
  v140 = (uint64_t)v139 + *(int *)(v134 + 48);
  *v139 = 120;
  v139[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_29_46();
  OUTLINED_FUNCTION_101_10(v140, v183);
  v141 = (_QWORD *)((char *)v139 + v136);
  v142 = (uint64_t)v139 + v136 + *(int *)(v134 + 48);
  *v141 = 121;
  v141[1] = 0xE100000000000000;
  OUTLINED_FUNCTION_101_10(v142, v203);
  v193 = sub_22ABDEAC8();
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  v143 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_28_47() - 8) + 80);
  v144 = (v143 + 32) & ~v143;
  v192 = OUTLINED_FUNCTION_8_101();
  *(_OWORD *)(v192 + 16) = xmmword_22ABE8E30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v204 + 16))(v197, v133, v200);
  v145 = *(_QWORD *)(v132 + 16);
  if (v145)
  {
    v191 = v144;
    v207[0] = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_42_36();
    v146 = v207[0];
    LODWORD(v203) = *MEMORY[0x24BE62F00];
    LODWORD(v202) = *MEMORY[0x24BE62EF8];
    v148 = v179;
    v147 = v180;
    v204 = *(_QWORD *)(v179 + 104);
    v149 = (_BYTE *)(v132 + 40);
    v150 = v181;
    do
    {
      v151 = v205;
      if ((*v149 & 1) != 0)
      {
        *v205 = 0;
        v152 = v202;
      }
      else
      {
        *(_QWORD *)v205 = *((_QWORD *)v149 - 1);
        v152 = v203;
      }
      ((void (*)(_BYTE *, uint64_t, uint64_t))v204)(v151, v152, v150);
      v153 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v148 + 32);
      v153((uint64_t)v147, v151, v150);
      v207[0] = v146;
      v155 = *(_QWORD *)(v146 + 16);
      v154 = *(_QWORD *)(v146 + 24);
      if (v155 >= v154 >> 1)
      {
        OUTLINED_FUNCTION_91_5(v154);
        OUTLINED_FUNCTION_41_42();
        v146 = v207[0];
      }
      *(_QWORD *)(v146 + 16) = v155 + 1;
      v153(v146+ ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80))+ *(_QWORD *)(v148 + 72) * v155, v147, v150);
      v149 += 16;
      --v145;
    }
    while (v145);
    OUTLINED_FUNCTION_80_24();
  }
  else
  {
    OUTLINED_FUNCTION_27_7();
  }
  v156 = v197;
  OUTLINED_FUNCTION_89_18();
  OUTLINED_FUNCTION_3_8();
  v157 = v156;
  v158 = v200;
  v159 = (void (*)(uint64_t, uint64_t))v194;
  ((void (*)(uint64_t, uint64_t))v194)(v157, v200);
  OUTLINED_FUNCTION_124_1();
  OUTLINED_FUNCTION_142_2();
  OUTLINED_FUNCTION_60_5();
  sub_22ABDE6B4();
  OUTLINED_FUNCTION_219();
  OUTLINED_FUNCTION_230(v186);
  v159(v201, v158);
  OUTLINED_FUNCTION_3();
}

unint64_t sub_22ABB4E34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B1B778;
  if (!qword_255B1B778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B1B770);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255B1B778);
  }
  return result;
}

unint64_t sub_22ABB4E78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B1B788;
  if (!qword_255B1B788)
  {
    v1 = sub_22ABDE60C();
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BE630D8], v1);
    atomic_store(result, (unint64_t *)&qword_255B1B788);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_8_101()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_9_97()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_13_86@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_22ABDE75C();
}

void *OUTLINED_FUNCTION_14_80(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t OUTLINED_FUNCTION_17_74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_22ABDE468();
}

uint64_t OUTLINED_FUNCTION_18_73()
{
  return sub_22ABDE75C();
}

uint64_t OUTLINED_FUNCTION_19_64()
{
  return sub_22ABDE60C();
}

uint64_t OUTLINED_FUNCTION_23_68()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_26_63()
{
  return sub_22ABDE714();
}

uint64_t OUTLINED_FUNCTION_28_47()
{
  return sub_22ABDE450();
}

uint64_t OUTLINED_FUNCTION_29_46()
{
  return sub_22ABDE600();
}

uint64_t OUTLINED_FUNCTION_31_43()
{
  return sub_22ABDE468();
}

uint64_t OUTLINED_FUNCTION_35_40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v3 - 272))(a1, *(unsigned int *)(a2 - 256), v2);
}

void OUTLINED_FUNCTION_39_47()
{
  sub_22AB4D2B4();
}

uint64_t OUTLINED_FUNCTION_40_41(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

void OUTLINED_FUNCTION_41_42()
{
  sub_22AB4D2B4();
}

void OUTLINED_FUNCTION_42_36()
{
  sub_22AB4D2B4();
}

uint64_t OUTLINED_FUNCTION_44_37()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 264) + 16))(*(_QWORD *)(v2 - 272), v0 + *(int *)(v1 + 20), *(_QWORD *)(v2 - 256));
}

uint64_t OUTLINED_FUNCTION_47_33()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(unint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 + 16) = v6;
  return v3(v1+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(_QWORD *)(v0 + 72) * v4, v5, v2);
}

uint64_t OUTLINED_FUNCTION_52_29()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_57_20()
{
  return sub_22ABDE750();
}

uint64_t OUTLINED_FUNCTION_59_25()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_60_26()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_65_29(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 248) = a1;
  *(_QWORD *)(v1 - 240) = *(_QWORD *)(*(_QWORD *)(v1 - 360) + 104);
}

void OUTLINED_FUNCTION_67_22()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 208);
  *(_QWORD *)(v0 - 320) = *(_QWORD *)(v0 - 216);
  *(_QWORD *)(v0 - 328) = v1;
  sub_22AA1E4E0();
}

uint64_t OUTLINED_FUNCTION_68_23()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_70_19()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_72_22()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_73_17()
{
  return 0x64696F6D676973;
}

uint64_t OUTLINED_FUNCTION_76_21()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_77_18()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_79_19()
{
  return sub_22ABDEAC8();
}

uint64_t OUTLINED_FUNCTION_80_24()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_82_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v0;
  return v2
       + ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 144) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 144) + 80))
       + *(_QWORD *)(*(_QWORD *)(v3 - 144) + 72) * v1;
}

uint64_t OUTLINED_FUNCTION_84_19@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_86_17(uint64_t a1)
{
  return sub_22AAF4564(a1, 1935763810, 0xE400000000000000);
}

uint64_t OUTLINED_FUNCTION_87_13@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return sub_22AA20444(a2 + *(_QWORD *)(v2 + 72) * a1, v3);
}

uint64_t OUTLINED_FUNCTION_88_15(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA20444(v3 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v1, v2);
}

uint64_t OUTLINED_FUNCTION_89_18()
{
  return sub_22ABDE750();
}

uint64_t OUTLINED_FUNCTION_90_16()
{
  return sub_22ABDE5D0();
}

uint64_t OUTLINED_FUNCTION_91_12()
{
  return 0x5F676E6964696C73;
}

void OUTLINED_FUNCTION_92_11()
{
  sub_22AA36144();
}

uint64_t OUTLINED_FUNCTION_94_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 392))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_96_7(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  unint64_t v3;

  a1[1] = a2;
  a1[2].n128_u64[0] = 1;
  a1[2].n128_u8[8] = 0;
  a1[3].n128_u64[0] = v3;
  a1[3].n128_u8[8] = 0;
  return v2;
}

uint64_t OUTLINED_FUNCTION_97_9@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 264) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return v2 - 200;
}

uint64_t OUTLINED_FUNCTION_98_13()
{
  return sub_22ABDEF78();
}

uint64_t OUTLINED_FUNCTION_99_9()
{
  return sub_22ABDE420();
}

uint64_t OUTLINED_FUNCTION_100_7()
{
  return sub_22ABDE6B4();
}

uint64_t OUTLINED_FUNCTION_101_10(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_103_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v1 + 56) + *(_QWORD *)(*(_QWORD *)(v2 - 8) + 72) * a1;
}

uint64_t OUTLINED_FUNCTION_104_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA20444(*(_QWORD *)(v1 + 56) + *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72) * a1, v2);
}

void OUTLINED_FUNCTION_106_6()
{
  sub_22AB4D280();
}

uint64_t OUTLINED_FUNCTION_107_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_110_8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return a2 + *(_QWORD *)(v2 + 72) * a1;
}

unint64_t OUTLINED_FUNCTION_112_6()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_117_4()
{
  uint64_t v0;

  return sub_22AA203C0(v0);
}

uint64_t OUTLINED_FUNCTION_120_4(uint64_t a1)
{
  uint64_t v1;

  return sub_22AA20444(a1, v1);
}

uint64_t OUTLINED_FUNCTION_121_6()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 264) + 8))(v0, *(_QWORD *)(v1 - 256));
}

uint64_t OUTLINED_FUNCTION_125_5()
{
  return sub_22ABDE5C4();
}

void OUTLINED_FUNCTION_126_4()
{
  sub_22AA36158();
}

void OUTLINED_FUNCTION_127_5()
{
  sub_22AA1E26C();
}

uint64_t OUTLINED_FUNCTION_128_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96);
  *(_QWORD *)(v0 + 160) = v4;
  return v4(v2, v3);
}

unint64_t OUTLINED_FUNCTION_129_3()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_130_2()
{
  return 0x736F70736E617274;
}

uint64_t OUTLINED_FUNCTION_133_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 192))(v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_134_5()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_135_5()
{
  return sub_22ABDE750();
}

uint64_t OUTLINED_FUNCTION_136_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_137_4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *v0 = v1;
  v0[1] = v2;
  return sub_22ABDE588();
}

void OUTLINED_FUNCTION_138_4()
{
  sub_22AA1E4E0();
}

void OUTLINED_FUNCTION_139_4()
{
  sub_22AA1E26C();
}

void OUTLINED_FUNCTION_140_5()
{
  sub_22AA1E26C();
}

uint64_t OUTLINED_FUNCTION_142_2()
{
  return sub_22ABDE420();
}

uint64_t OUTLINED_FUNCTION_143_3()
{
  return 0x6F6E5F6863746162;
}

uint64_t OUTLINED_FUNCTION_144_1()
{
  return sub_22ABDE534();
}

uint64_t OUTLINED_FUNCTION_145_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_147_2()
{
  _DWORD *v0;
  _DWORD *v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 272) = *v1;
  *(_DWORD *)(v2 - 280) = *v0;
}

uint64_t OUTLINED_FUNCTION_151_1()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_153_1()
{
  return sub_22AA03688();
}

void OUTLINED_FUNCTION_154_2(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 256) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_155_2()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

unint64_t OUTLINED_FUNCTION_158_1()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_159_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22AA20444(a1, *(_QWORD *)(a2 - 256));
}

uint64_t OUTLINED_FUNCTION_160_2()
{
  return sub_22ABDE5AC();
}

uint64_t OUTLINED_FUNCTION_161_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_162_0()
{
  return sub_22ABDE558();
}

uint64_t OUTLINED_FUNCTION_163_1()
{
  return 0x65706168736572;
}

void OUTLINED_FUNCTION_164_2(_QWORD *a1@<X8>)
{
  *a1 = 1936291937;
  a1[1] = 0xE400000000000000;
}

BOOL OUTLINED_FUNCTION_165_1@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_167_1()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_168_0()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_169_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return sub_22AA20444(a2 + *(_QWORD *)(v2 + 72) * a1, v3);
}

void OUTLINED_FUNCTION_170_0()
{
  sub_22AA1FA24();
}

uint64_t OUTLINED_FUNCTION_171_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 104))(a1, v1, *(_QWORD *)(v3 - 152));
}

uint64_t OUTLINED_FUNCTION_172_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void OUTLINED_FUNCTION_173_0()
{
  sub_22AA1E26C();
}

uint64_t OUTLINED_FUNCTION_174_0()
{
  return sub_22ABDE5D0();
}

__n128 OUTLINED_FUNCTION_176_0(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  *(_QWORD *)(v1 - 344) = a1;
  result = *(__n128 *)(v1 - 240);
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_177_1()
{
  return sub_22ABDE6B4();
}

uint64_t OUTLINED_FUNCTION_178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = a1;
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_181_0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_182_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 - 240))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_183_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 272))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_184_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 32) = v1;
  *(_QWORD *)(a1 + 40) = v2;
  return sub_22ABDE570();
}

uint64_t OUTLINED_FUNCTION_187_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 160))(v1, v2);
}

__n128 OUTLINED_FUNCTION_189_0(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[14];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_190_0()
{
  return sub_22ABDE420();
}

uint64_t OUTLINED_FUNCTION_191()
{
  return 0x78616D74666F73;
}

uint64_t OUTLINED_FUNCTION_195(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_196_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_198_0()
{
  uint64_t v0;

  return sub_22AA203C0(v0);
}

void OUTLINED_FUNCTION_200()
{
  sub_22AB5D7C8();
}

uint64_t OUTLINED_FUNCTION_204@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

unint64_t OUTLINED_FUNCTION_206()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_208()
{
  uint64_t v0;

  return sub_22AA203C0(v0);
}

uint64_t OUTLINED_FUNCTION_209()
{
  return sub_22ABDEF78();
}

uint64_t OUTLINED_FUNCTION_210(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(v3, a2, v4);
}

uint64_t OUTLINED_FUNCTION_211()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_212()
{
  return 0x7261656E696CLL;
}

uint64_t OUTLINED_FUNCTION_213()
{
  return sub_22ABDE594();
}

uint64_t OUTLINED_FUNCTION_214(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_216()
{
  return sub_22ABDE750();
}

uint64_t OUTLINED_FUNCTION_217()
{
  uint64_t v0;

  return sub_22AA203C0(v0);
}

uint64_t OUTLINED_FUNCTION_218()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_219()
{
  sub_22AA1FA24();
}

uint64_t OUTLINED_FUNCTION_221(uint64_t a1)
{
  uint64_t v1;

  return sub_22AA20444(a1, v1);
}

uint64_t OUTLINED_FUNCTION_222()
{
  return sub_22ABDEAC8();
}

uint64_t OUTLINED_FUNCTION_223()
{
  uint64_t v0;

  return v0 - 200;
}

uint64_t OUTLINED_FUNCTION_224()
{
  uint64_t v0;

  return v0 - 200;
}

uint64_t OUTLINED_FUNCTION_226()
{
  return sub_22ABDE558();
}

uint64_t OUTLINED_FUNCTION_227()
{
  return sub_22ABDE558();
}

uint64_t OUTLINED_FUNCTION_228()
{
  return sub_22ABDE558();
}

uint64_t OUTLINED_FUNCTION_230@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_231(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 336) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_232()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_233(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_235()
{
  uint64_t v0;

  return sub_22AA203C0(v0);
}

uint64_t OUTLINED_FUNCTION_236@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(void);

  *(_DWORD *)(a2 - 256) = a1;
  return v2();
}

void OUTLINED_FUNCTION_238()
{
  sub_22AA1E26C();
}

uint64_t OUTLINED_FUNCTION_239(uint64_t a1)
{
  uint64_t v1;

  return sub_22AA20444(a1, v1);
}

void OUTLINED_FUNCTION_240()
{
  sub_22AA1FA24();
}

void OUTLINED_FUNCTION_241()
{
  uint64_t v0;

  sub_22AA0B064(v0, 0.0);
}

void OUTLINED_FUNCTION_242()
{
  sub_22AA36130();
}

uint64_t OUTLINED_FUNCTION_243@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 200) = a2;
  return a2(a1, v3);
}

void OUTLINED_FUNCTION_244()
{
  sub_22AA1FA24();
}

uint64_t OUTLINED_FUNCTION_246()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_247()
{
  sub_22AB4D280();
}

__n128 *OUTLINED_FUNCTION_248(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

__n128 *OUTLINED_FUNCTION_249(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_250()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_252()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_253()
{
  return sub_22ABDE6B4();
}

uint64_t OUTLINED_FUNCTION_254()
{
  uint64_t v0;

  return sub_22AA203C0(v0);
}

uint64_t OUTLINED_FUNCTION_255(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_22A9AD754(v2, a2);
}

uint64_t OUTLINED_FUNCTION_256()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_258()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

void OUTLINED_FUNCTION_259()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 216) = v0;
}

uint64_t OUTLINED_FUNCTION_260()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_261()
{
  return sub_22ABDE6B4();
}

uint64_t OUTLINED_FUNCTION_262()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 384) = v0;
  *(_QWORD *)(v2 - 376) = v1;
}

void sub_22ABB5A30(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[26];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[8];
  _BYTE v50[8];
  _BYTE v51[8];
  uint64_t v52;
  uint64_t v53;

  v41[11] = a2;
  v4 = sub_22ABDE3D8();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v5);
  v6 = sub_22ABDE798();
  OUTLINED_FUNCTION_40_1(v6, (uint64_t)v51);
  OUTLINED_FUNCTION_4_2(v7);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v9);
  v10 = sub_22ABDE03C();
  OUTLINED_FUNCTION_40_1(v10, (uint64_t)v49);
  OUTLINED_FUNCTION_4_2(v11);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v13);
  v14 = sub_22ABDDC88();
  OUTLINED_FUNCTION_40_1(v14, (uint64_t)v50);
  OUTLINED_FUNCTION_4_2(v15);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_0();
  v41[14] = v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8530);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v19);
  v44 = sub_22ABDDC10();
  OUTLINED_FUNCTION_4_2(*(_QWORD *)(v44 - 8));
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v21);
  v22 = sub_22ABDE09C();
  OUTLINED_FUNCTION_40_1(v22, (uint64_t)&v53);
  OUTLINED_FUNCTION_4_2(v23);
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_0();
  v47 = v25;
  v26 = sub_22ABDE324();
  OUTLINED_FUNCTION_40_1(v26, (uint64_t)&v52);
  OUTLINED_FUNCTION_4_2(v27);
  MEMORY[0x24BDAC7A8](v28);
  v41[6] = (char *)v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v31 = *v2;
  v46 = v2[1];
  v43 = v2[2];
  v41[21] = (char *)v41 - v32;
  sub_22ABDE318();
  v48 = v31;
  v33 = a1[3];
  v42 = a1[2];
  swift_retain();
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8658);
  v35 = a1[4];
  v36 = a1[5];
  v37 = a1[6];
  v38 = a1[7];
  v40 = a1[8];
  v39 = a1[9];
  v41[25] = v39;
  sub_22ABB6634();
  v45 = v35;
  sub_22ABB62B4((uint64_t)&v48, v46, v43, v42, v33, v34, v35, v36, v37, v38, v40, v39);
}

uint64_t sub_22ABB5CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (!a1)
  {
    __break(1u);
    JUMPOUT(0x22ABB62B0);
  }
  v5 = OUTLINED_FUNCTION_6_122();
  v6 = *(_QWORD *)(v3 - 272);
  sub_22AB59C58(v5, v6);
  v7 = *(_QWORD *)(v3 - 224);
  if (__swift_getEnumTagSinglePayload(v6, 1, v7) == 1)
  {
    sub_22AA47E68(v6);
    type metadata accessor for SerializationError();
    sub_22A9D395C();
    swift_allocError();
    v9 = v8;
    *(_QWORD *)(v3 - 192) = 0;
    *(_QWORD *)(v3 - 184) = 0xE000000000000000;
    sub_22ABDF7A0();
    v10 = *(_QWORD *)(v3 - 184);
    *(_QWORD *)(v3 - 192) = *(_QWORD *)(v3 - 192);
    *(_QWORD *)(v3 - 184) = v10;
    sub_22ABDEDC8();
    *(_QWORD *)(v3 - 72) = OUTLINED_FUNCTION_6_122();
    type metadata accessor for MLMultiArrayDataType(0);
    sub_22ABDFA34();
    sub_22ABDEDC8();
    v11 = *(_QWORD *)(v3 - 184);
    *v9 = *(_QWORD *)(v3 - 192);
    v9[1] = v11;
    v12 = swift_storeEnumTagMultiPayload();
    swift_willThrow(v12);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 304) + 8))(*(_QWORD *)(v3 - 200), *(_QWORD *)(v3 - 288));
    return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 312) + 8))(*(_QWORD *)(v3 - 280), *(_QWORD *)(v3 - 296));
  }
  else
  {
    v14 = v1 / a1;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 320) + 32))(*(_QWORD *)(v3 - 328), v6, v7);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
    *(_QWORD *)(v3 - 216) = *(_QWORD *)(*(_QWORD *)(sub_22ABDDE68() - 8) + 72);
    *(_QWORD *)(v3 - 240) = v15;
    v16 = swift_allocObject();
    *(_OWORD *)(v3 - 272) = xmmword_22ABE8E30;
    *(_OWORD *)(v16 + 16) = xmmword_22ABE8E30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = *(_OWORD *)(v3 - 272);
    *(_QWORD *)(v17 + 32) = v14;
    sub_22ABDDB74();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2_113();
    v18 = *(_QWORD *)(v3 - 280);
    sub_22ABDE2C4();
    v19 = *(_QWORD *)(v3 - 344);
    if (swift_dynamicCastMetatype())
    {
      v20 = OUTLINED_FUNCTION_10_84();
      **(_QWORD **)(v3 - 424) = v20;
      OUTLINED_FUNCTION_4_106(v20, *MEMORY[0x24BE62B78]);
      OUTLINED_FUNCTION_8_102();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_22ABE9FB0;
      OUTLINED_FUNCTION_9_98();
      v21 = sub_22ABDDC04();
      OUTLINED_FUNCTION_5_98(v21, *MEMORY[0x24BE62578]);
      OUTLINED_FUNCTION_2_113();
      OUTLINED_FUNCTION_9_98();
      sub_22ABDDC7C();
    }
    else
    {
      if (!swift_dynamicCastMetatype())
        sub_22AB593D4(*(_QWORD *)(v3 - 208), *(_QWORD *)(v3 - 232), v19, *(_QWORD *)(v3 - 448), v2);
      v22 = OUTLINED_FUNCTION_10_84();
      **(_QWORD **)(v3 - 424) = v22;
      OUTLINED_FUNCTION_4_106(v22, *MEMORY[0x24BE62B70]);
      OUTLINED_FUNCTION_8_102();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_22ABE9FB0;
      OUTLINED_FUNCTION_9_98();
      v23 = sub_22ABDDB80();
      OUTLINED_FUNCTION_5_98(v23, *MEMORY[0x24BE62560]);
      OUTLINED_FUNCTION_2_113();
      OUTLINED_FUNCTION_9_98();
      sub_22ABDDC70();
    }
    OUTLINED_FUNCTION_2_113();
    sub_22ABDE300();
    sub_22ABDE258();
    sub_22ABDE228();
    sub_22ABDE2B8();
    sub_22ABDE2C4();
    sub_22ABDE2F4();
    sub_22ABDE300();
    sub_22ABDE240();
    sub_22ABDE270();
    v24 = *(_QWORD *)(v3 - 304);
    v25 = *(_QWORD *)(v3 - 392);
    v26 = *(_QWORD *)(v3 - 200);
    v27 = *(_QWORD *)(v3 - 288);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v25, v26, v27);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v3 - 384) + 104))(v25, *MEMORY[0x24BE63238], *(_QWORD *)(v3 - 376));
    sub_22ABDE288();
    v28 = *(_QWORD *)(v3 - 312);
    v29 = *(_QWORD *)(v3 - 400);
    v30 = *(_QWORD *)(v3 - 296);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v29, v18, v30);
    *(_OWORD *)(v3 - 176) = 0u;
    *(_OWORD *)(v3 - 160) = 0u;
    *(_OWORD *)(v3 - 144) = 0u;
    *(_OWORD *)(v3 - 128) = 0u;
    *(_OWORD *)(v3 - 112) = 0u;
    *(_QWORD *)(v3 - 96) = 0;
    v31 = *(_QWORD *)(v3 - 368);
    sub_22ABDE3CC();
    sub_22AB314C8(v29, v31, (_QWORD *)(v3 - 176), *(_QWORD *)(v3 - 360));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 320) + 8))(*(_QWORD *)(v3 - 328), *(_QWORD *)(v3 - 224));
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v27);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v18, v30);
  }
}

void sub_22ABB62B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_22ABDF35C();
  sub_22AB593D4(a2, a3, a5, a9, a12);
}

void sub_22ABB6620(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22ABB5A30(a1, a2);
}

unint64_t sub_22ABB6634()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540E8650;
  if (!qword_2540E8650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E8658);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2A60], v1);
    atomic_store(result, (unint64_t *)&qword_2540E8650);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_113()
{
  return sub_22ABDDE2C();
}

uint64_t OUTLINED_FUNCTION_4_106(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 440) + 104))(v2, a2, *(_QWORD *)(v3 - 432));
}

uint64_t OUTLINED_FUNCTION_5_98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 416) + 104))(v2, a2, *(_QWORD *)(v3 - 408));
}

uint64_t OUTLINED_FUNCTION_6_122()
{
  return sub_22ABDE8E8();
}

uint64_t OUTLINED_FUNCTION_8_102()
{
  return sub_22ABDE048();
}

uint64_t OUTLINED_FUNCTION_9_98()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_10_84()
{
  return sub_22ABDFA28();
}

id MLModelRegressorAdaptor.model.getter()
{
  id *v0;

  return *v0;
}

void MLModelRegressorAdaptor.init(contentsOf:configuration:)(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v7 = sub_22ABDD0E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A9BEDCC(0, &qword_255B10820);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v11 = a2;
  v12 = sub_22A9F66C8((uint64_t)v10, v11);
  if (v3)
  {

    OUTLINED_FUNCTION_20_52();
  }
  else
  {
    MLModelRegressorAdaptor.init(model:)(v12, &v14);

    OUTLINED_FUNCTION_20_52();
    v13 = v15;
    *(_OWORD *)a3 = v14;
    *(_QWORD *)(a3 + 16) = v13;
  }
  OUTLINED_FUNCTION_16();
}

void MLModelRegressorAdaptor.init(model:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v4 = a1;
  v5 = objc_msgSend(v4, sel_modelDescription);
  v6 = objc_msgSend(v5, sel_inputDescriptionsByName);

  sub_22A9BEDCC(0, (unint64_t *)&qword_255B108E8);
  v7 = OUTLINED_FUNCTION_44_32();

  if (*(_QWORD *)(v7 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_22AB4EE78(v7);
  v9 = v8;
  v11 = v10;
  swift_bridgeObjectRelease();
  if (!v9)
  {
LABEL_12:
    v19 = OUTLINED_FUNCTION_31_37();
    v20 = objc_msgSend(v19, sel_inputDescriptionsByName);

    v21 = OUTLINED_FUNCTION_44_32();
    v22 = *(_QWORD *)(v21 + 16);
    swift_bridgeObjectRelease();
    sub_22A9F77C0();
    v23 = OUTLINED_FUNCTION_53();
    *v24 = 1;
    v24[1] = v22;
    OUTLINED_FUNCTION_24_13(v23, (uint64_t)v24, 3);
    goto LABEL_13;
  }
  v12 = OUTLINED_FUNCTION_40_33();
  if (v12 != (id)5 && v12 != (id)2)
  {
    v25 = OUTLINED_FUNCTION_40_33();
    sub_22A9F77C0();
    v26 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v27 = 5;
    *(_QWORD *)(v27 + 8) = v25;
    *(_BYTE *)(v27 + 16) = 0;
    swift_willThrow(v26);

    OUTLINED_FUNCTION_2_1();
LABEL_13:
    v14 = v4;
    goto LABEL_14;
  }
  v14 = v11;
  v15 = OUTLINED_FUNCTION_31_37();
  v16 = objc_msgSend(v15, sel_outputDescriptionsByName);

  v17 = OUTLINED_FUNCTION_44_32();
  if (*(_QWORD *)(v17 + 16) == 1)
  {
    swift_bridgeObjectRelease();
    sub_22AB1BB6C();
    if (!v2)
    {
      v31 = v18;

      OUTLINED_FUNCTION_2_1();
      *a2 = v4;
      a2[1] = v14;
      a2[2] = v31;
      goto LABEL_15;
    }
    OUTLINED_FUNCTION_2_1();

  }
  else
  {

    v28 = *(_QWORD *)(v17 + 16);
    swift_bridgeObjectRelease();
    sub_22A9F77C0();
    v29 = OUTLINED_FUNCTION_53();
    *v30 = 1;
    v30[1] = v28;
    OUTLINED_FUNCTION_24_13(v29, (uint64_t)v30, 4);

    OUTLINED_FUNCTION_2_1();
  }

LABEL_14:
LABEL_15:
  OUTLINED_FUNCTION_16();
}

uint64_t MLModelRegressorAdaptor.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 96) = a1;
  *(_QWORD *)(v5 + 104) = a4;
  v6 = sub_22ABDE8A0();
  *(_QWORD *)(v5 + 112) = v6;
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  *(_OWORD *)(v5 + 136) = *(_OWORD *)v4;
  *(_QWORD *)(v5 + 152) = *(_QWORD *)(v4 + 16);
  return swift_task_switch();
}

uint64_t sub_22ABB6B1C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  _QWORD *v18;

  v1 = (void *)v0[18];
  v3 = v0[15];
  v2 = v0[16];
  v4 = v0[14];
  v5 = v0[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10778);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  v7 = objc_msgSend(v1, sel_name);
  v8 = sub_22ABDED50();
  v10 = v9;

  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  sub_22A9BEDCC(0, &qword_255B10788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v4);
  v11 = (void *)sub_22ABDF494();
  v12 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, v11);

  *(_QWORD *)(inited + 72) = sub_22A9BEDCC(0, &qword_255B10780);
  *(_QWORD *)(inited + 48) = v12;
  sub_22ABDEAC8();
  v13 = objc_allocWithZone(MEMORY[0x24BDBFF80]);
  v14 = sub_22A9F76E0();
  v0[20] = v14;
  v15 = v14;
  v16 = objc_allocWithZone(MEMORY[0x24BDC0018]);
  v17 = v15;
  v0[21] = objc_msgSend(v16, sel_init);
  v18 = (_QWORD *)swift_task_alloc();
  v0[22] = v18;
  *v18 = v0;
  v18[1] = sub_22ABB6D4C;
  return sub_22ABDF530();
}

uint64_t sub_22ABB6D4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v4 = *(void **)(v3 + 160);

  }
  return swift_task_switch();
}

uint64_t sub_22ABB6DC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  __n128 v4;
  uint64_t (*v5)(__n128);
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 192);
  sub_22ABB6EA4(*(void **)(v0 + 184));
  v3 = *(void **)(v0 + 160);
  if (v1)
  {

    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_16_79();
    v5 = *(uint64_t (**)(__n128))(v0 + 8);
  }
  else
  {
    v6 = v2;

    swift_unknownObjectRelease();
    swift_task_dealloc();
    v5 = *(uint64_t (**)(__n128))(v0 + 8);
    v4.n128_u64[0] = v6;
  }
  return v5(v4);
}

uint64_t sub_22ABB6E64()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);

  OUTLINED_FUNCTION_16_79();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22ABB6EA4(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  _OWORD *v6;

  v3 = objc_msgSend(*(id *)(v1 + 16), sel_name);
  if (!v3)
  {
    sub_22ABDED50();
    v3 = (id)sub_22ABDED2C();
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend(a1, sel_featureValueForName_, v3);

  if (v4)
  {
    objc_msgSend(v4, sel_doubleValue);

  }
  else
  {
    sub_22A9F77C0();
    v5 = OUTLINED_FUNCTION_53();
    *v6 = xmmword_22ABFA7F0;
    OUTLINED_FUNCTION_24_13(v5, (uint64_t)v6, 8);
  }
}

uint64_t sub_22ABB6F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v5 + 16) = a1;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v8;
  *v8 = v5;
  v8[1] = sub_22ABB6FE4;
  return MLModelRegressorAdaptor.applied(to:eventHandler:)(a2, v9, v10, a5);
}

uint64_t sub_22ABB6FE4(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(double **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void sub_22ABB7040(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  id v60;
  uint64_t v61;
  char *v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, _QWORD, uint64_t);
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD v89[5];
  uint64_t v90;
  uint64_t v91;

  v79 = a1;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0();
  v78 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B108E0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  v74 = v5;
  v73 = sub_22ABDDC64();
  v72 = *(_QWORD *)(v73 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v71 = v7;
  v8 = sub_22ABDDC88();
  v87 = *(_QWORD *)(v8 - 8);
  v88 = v8;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_87();
  v77 = v10;
  MEMORY[0x24BDAC7A8](v11);
  v86 = (char *)&v70 - v12;
  v13 = sub_22ABDE798();
  v84 = *(_QWORD *)(v13 - 8);
  v85 = (char *)v13;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_22ABDD0E8();
  v17 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v70 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v70 - v24;
  v82 = sub_22ABDE324();
  v80 = *(_QWORD *)(v82 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_87();
  v76 = v27;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v70 - v29;
  v31 = *(void **)v1;
  *(_QWORD *)&v83 = *(_QWORD *)(v1 + 8);
  v75 = *(id *)(v1 + 16);
  sub_22ABDE318();
  sub_22ABDE258();
  v32 = objc_msgSend(v31, sel_modelDescription);
  v33 = objc_msgSend(v32, sel_modelURL);

  sub_22ABDD0B8();
  sub_22ABDD064();
  v81 = v25;
  sub_22ABDD01C();
  sub_22ABDD0A0();
  v34 = *(_QWORD *)(v17 + 8);
  OUTLINED_FUNCTION_38_13((uint64_t)v19);
  sub_22ABDD0C4();
  OUTLINED_FUNCTION_38_13((uint64_t)v22);
  sub_22ABDDF94();
  (*(void (**)(char *, _QWORD, char *))(v84 + 104))(v16, *MEMORY[0x24BE632B0], v85);
  v35 = sub_22ABDE288();
  v36 = OUTLINED_FUNCTION_11_92(v35, sel_type);
  if (v36 != (id)5)
  {
    if (v36 == (id)2)
    {
      v84 = v34;
      v85 = v30;
      sub_22ABDDBF8();
      v37 = *(uint64_t (**)(void))(v87 + 104);
      LODWORD(v73) = *MEMORY[0x24BE62570];
      OUTLINED_FUNCTION_19_65(v37);
LABEL_12:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
      sub_22ABDDE68();
      v59 = OUTLINED_FUNCTION_9_99();
      v83 = xmmword_22ABE8E30;
      *(_OWORD *)(v59 + 16) = xmmword_22ABE8E30;
      v60 = OUTLINED_FUNCTION_11_92(v59, sel_name);
      sub_22ABDED50();

      v61 = v77;
      (*(void (**)(uint64_t, char *, uint64_t))(v87 + 16))(v77, v86, v88);
      OUTLINED_FUNCTION_2_114();
      v62 = v85;
      sub_22ABDE2C4();
      *(_OWORD *)(OUTLINED_FUNCTION_9_99() + 16) = v83;
      v63 = v75;
      v64 = objc_msgSend(v75, sel_name);
      sub_22ABDED50();

      sub_22ABDDBF8();
      v65 = v88;
      v74(v61, v73, v88);
      OUTLINED_FUNCTION_2_114();
      sub_22ABDE300();
      v66 = objc_msgSend(v63, sel_name);
      sub_22ABDED50();

      sub_22ABDE240();
      v67 = v80;
      v68 = v76;
      (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v76, v62, v82);
      memset(v89, 0, sizeof(v89));
      v90 = 0;
      v69 = v78;
      sub_22ABDE3CC();
      sub_22AB314C8(v68, v69, v89, v79);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v65);
      ((void (*)(char *, uint64_t))v84)(v81, v91);
      OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8));
      goto LABEL_13;
    }
    type metadata accessor for SerializationError();
    OUTLINED_FUNCTION_81_14();
    v49 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_4_107(v49, v50);
    goto LABEL_9;
  }
  v38 = v72;
  v39 = v71;
  v40 = v73;
  v41 = (uint64_t)v74;
  v42 = OUTLINED_FUNCTION_11_92(5, sel_multiArrayConstraint);
  if (!v42)
  {
    type metadata accessor for SerializationError();
    OUTLINED_FUNCTION_81_14();
    v53 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_4_107(v53, v54);
    v52 = v55 + 2;
LABEL_9:
    v56 = OUTLINED_FUNCTION_2_93(v51, v52);
    swift_willThrow(v56);
    goto LABEL_10;
  }
  v43 = v42;
  sub_22AB59960(v43, v41);
  if (__swift_getEnumTagSinglePayload(v41, 1, v40) != 1)
  {
    v84 = v34;
    v85 = v30;

    v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32);
    v58(v39, v41, v40);
    v58((uint64_t)v86, v39, v40);
    OUTLINED_FUNCTION_19_65(*(uint64_t (**)(void))(v87 + 104));
    LODWORD(v73) = *MEMORY[0x24BE62570];
    goto LABEL_12;
  }
  sub_22A9F7930(v41);
  type metadata accessor for SerializationError();
  OUTLINED_FUNCTION_81_14();
  v44 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_4_107(v44, v45);
  v48 = OUTLINED_FUNCTION_2_93(v47, v46 + 11);
  swift_willThrow(v48);

LABEL_10:
  v57 = v80;
  OUTLINED_FUNCTION_38_13((uint64_t)v81);
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
LABEL_13:
  OUTLINED_FUNCTION_16();
}

void sub_22ABB773C(uint64_t a1@<X8>)
{
  sub_22ABB7040(a1);
}

uint64_t sub_22ABB7754(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for MLModelRegressorAdaptor<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for MLModelRegressorAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MLModelRegressorAdaptor);
}

uint64_t OUTLINED_FUNCTION_2_114()
{
  return sub_22ABDDE2C();
}

uint64_t OUTLINED_FUNCTION_4_107(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_9_99()
{
  return swift_allocObject();
}

id OUTLINED_FUNCTION_11_92(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_16_79()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_19_65@<X0>(uint64_t (*a1)(void)@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 320) = a1;
  return a1();
}

void VideoReaderError.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_22ABDD0E8();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_1_103();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v2);
  sub_22ABB7A6C(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_22ABB78A8 + 4 * byte_22AC008B0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22ABB78A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v4 - 96) = 0;
  *(_QWORD *)(v4 - 88) = 0xE000000000000000;
  sub_22ABDF7A0();
  swift_bridgeObjectRelease();
  strcpy((char *)(v4 - 96), "Video file at ");
  *(_BYTE *)(v4 - 81) = -18;
  sub_22A9BED8C((unint64_t *)&qword_2540E89D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  sub_22ABDFD7C();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_6();
  v5 = *(_QWORD *)(v4 - 96);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v5;
}

uint64_t type metadata accessor for VideoReaderError()
{
  uint64_t result;

  result = qword_255B1B8D0;
  if (!qword_255B1B8D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22ABB7A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoReaderError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static VideoReaderError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = sub_22ABDD0E8();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_1_103();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B858);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 + *(int *)(v9 + 48) - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22ABB7A6C(a1, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22ABB7A6C(a2, (uint64_t)v10);
  v11 = (char *)sub_22ABB7BB8 + 4 * byte_22AC008B6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_22ABB7BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(uint64_t, uint64_t);

  sub_22ABB7A6C(v0, v3);
  if (OUTLINED_FUNCTION_0_108())
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    sub_22ABB7CD0(v0);
    v6 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v4, v1);
    v6 = MEMORY[0x22E2E133C](v3, v2);
    v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v7(v2, v1);
    v7(v3, v1);
    sub_22ABB7D10(v0);
  }
  return v6 & 1;
}

uint64_t sub_22ABB7CD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1B858);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22ABB7D10(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VideoReaderError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22ABB7D4C()
{
  return sub_22A9BED8C((unint64_t *)&qword_255B11678, (uint64_t (*)(uint64_t))type metadata accessor for VideoReaderError, (uint64_t)&protocol conformance descriptor for VideoReaderError);
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoReaderError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_22ABDD0E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for VideoReaderError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v3 = sub_22ABDD0E8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for VideoReaderError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_22ABDD0E8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for VideoReaderError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_22ABB7D10((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_22ABDD0E8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for VideoReaderError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_22ABDD0E8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for VideoReaderError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_22ABB7D10((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_22ABDD0E8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_22ABB80BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_108()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t Reshaper.shape.getter()
{
  return sub_22ABDEAEC();
}

uint64_t Reshaper.shape.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Reshaper.shape.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Reshaper.init(shape:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = (uint64_t *)(result + 32);
    v4 = 1;
    while (1)
    {
      v5 = *v3++;
      v6 = v4 * v5;
      if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
        break;
      v4 = v6;
      if (!--v2)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v6 = 1;
LABEL_7:
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

uint64_t Reshaper.applied(to:eventHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 8);
  sub_22ABDE8A0();
  result = sub_22ABDE84C();
  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 0;
    v5 = 1;
    do
    {
      v6 = *(_QWORD *)(result + 8 * v4 + 32);
      v7 = (unsigned __int128)(v5 * (__int128)v6) >> 64;
      v5 *= v6;
      if (v7 != v5 >> 63)
      {
        __break(1u);
        return result;
      }
      ++v4;
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
    if (v1 == v5)
      return sub_22ABDE87C();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (v1 == 1)
      return sub_22ABDE87C();
  }
  v8 = sub_22ABDE84C();
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  v9 = sub_22ABDEAEC();
  MEMORY[0x22E2E3298](v9, MEMORY[0x24BEE1768]);
  OUTLINED_FUNCTION_2_115();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_115();
  OUTLINED_FUNCTION_3_115();
  OUTLINED_FUNCTION_2_115();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_3_115();
  OUTLINED_FUNCTION_2_115();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  sub_22A9B7B50();
  v10 = swift_allocError();
  *(_QWORD *)v11 = v8;
  *(_QWORD *)(v11 + 8) = 0;
  *(_QWORD *)(v11 + 16) = 0xE000000000000000;
  *(_QWORD *)(v11 + 24) = 0;
  *(_BYTE *)(v11 + 32) = 6;
  return swift_willThrow(v10);
}

uint64_t Reshaper.applied<A>(_:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v9 = *v6;
  v10 = v6[1];
  v14[2] = *(_QWORD *)(a4 + 16);
  v14[3] = a5;
  v15 = *(_OWORD *)(a4 + 24);
  v16 = *(_QWORD *)(a4 + 40);
  v17 = a6;
  v18 = v9;
  v19 = v10;
  v20 = a2;
  v21 = a3;
  v11 = sub_22ABDE8A0();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  return sub_22A9C2540((uint64_t)sub_22ABB8500, (uint64_t)v14, a5, v11, v12, a6, MEMORY[0x24BEE3F20], (uint64_t)&v22);
}

void sub_22ABB8488()
{
  type metadata accessor for Reshaper();
}

uint64_t sub_22ABB84C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = Reshaper.applied(to:eventHandler:)();
  if (v0)
    **(_QWORD **)(v1 + 40) = v0;
  return result;
}

void sub_22ABB8500()
{
  sub_22ABB8488();
}

uint64_t static Reshaper.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  return sub_22A99EB90(*(_QWORD **)a1, *(_QWORD **)a2) & (v2 == v3);
}

uint64_t sub_22ABB8578(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6570616873 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22ABB864C(char a1)
{
  if ((a1 & 1) != 0)
    return 1702521203;
  else
    return 0x6570616873;
}

uint64_t sub_22ABB8678()
{
  char *v0;

  return sub_22ABB864C(*v0);
}

uint64_t sub_22ABB868C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22ABB8578(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22ABB86BC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22AC00BB0, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22ABB86F0(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22AC00BB0, a1);
  return sub_22ABE02F8();
}

void Reshaper.encode(to:)()
{
  OUTLINED_FUNCTION_4_108();
}

void sub_22ABB8758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  MEMORY[0x22E2E4D80](&unk_22AC00BB0, a1);
  v12 = sub_22ABDFD58();
  *(_QWORD *)(v11 - 128) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&a9 - v13;
  v15 = *v9;
  *(_QWORD *)(v11 - 136) = v9[1];
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_22ABE02B0();
  *(_QWORD *)(v11 - 112) = v15;
  *(_BYTE *)(v11 - 65) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8);
  sub_22AAAB5F8(&qword_2540E85E0, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
  v16 = *(_QWORD *)(v11 - 120);
  sub_22ABDFD4C();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 128) + 8))(v14, v12);
  }
  else
  {
    v17 = *(_QWORD *)(v11 - 128);
    *(_BYTE *)(v11 - 112) = 1;
    sub_22ABDFD34();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v12);
  }
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for Reshaper.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void Reshaper.init(from:)()
{
  OUTLINED_FUNCTION_4_108();
}

void sub_22ABB88D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x22E2E4D80](&unk_22AC00BB0, a1);
  v4 = sub_22ABDFCB0();
  MEMORY[0x24BDAC7A8](v4);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_22ABE0298();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  }
  else
  {
    v5 = *(_QWORD **)(v3 - 120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8);
    *(_BYTE *)(v3 - 65) = 0;
    sub_22AAAB5F8(&qword_2540E85E8, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
    sub_22ABDFC8C();
    v6 = *(_QWORD *)(v3 - 112);
    *(_BYTE *)(v3 - 112) = 1;
    sub_22ABDEAEC();
    v7 = sub_22ABDFC74();
    OUTLINED_FUNCTION_0_109();
    *v5 = v6;
    v5[1] = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22ABB8A48()
{
  uint64_t v0;

  Reshaper.applied(to:eventHandler:)();
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22ABB8AA4()
{
  Reshaper.init(from:)();
}

void sub_22ABB8AC4()
{
  Reshaper.encode(to:)();
}

uint64_t Reshaper.debugDescription.getter()
{
  uint64_t v0;

  sub_22ABDF7A0();
  swift_bridgeObjectRelease();
  v0 = sub_22ABDEAEC();
  MEMORY[0x22E2E3298](v0, MEMORY[0x24BEE1768]);
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  return 0x3C65706168736552;
}

void type metadata accessor for Reshaper()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22ABB8B98(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22ABB8BE4 + 4 * byte_22AC009D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22ABB8C18 + 4 * byte_22AC009D0[v4]))();
}

uint64_t sub_22ABB8C18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABB8C20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22ABB8C28);
  return result;
}

uint64_t sub_22ABB8C34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22ABB8C3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22ABB8C40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABB8C48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22ABB8C54()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABB8C64()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABB8C74()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_109()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_2_115()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_3_115()
{
  return sub_22ABDFD7C();
}

void OUTLINED_FUNCTION_4_108()
{
  type metadata accessor for Reshaper.CodingKeys();
}

double sub_22ABB8CB8(uint64_t a1, void (*a2)(double *__return_ptr, uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  double result;
  double v4;

  a2(&v4, a1 + 32, *(_QWORD *)(a1 + 16), 1);
  if (!v2)
    return v4;
  return result;
}

double *sub_22ABB8CFC(double *result, uint64_t a2, double a3)
{
  if (result)
  {
    if (a2 < 0)
    {
      __break(1u);
    }
    else
    {
      for (; a2; --a2)
        *result++ = a3;
    }
  }
  return result;
}

double BaseLinearRegressorModel.init<A>(coefficients:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v7);
  v9 = sub_22ABDF11C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *(_QWORD *)a3 = v9;
  result = 0.0;
  *(_OWORD *)(a3 + 8) = 0u;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 65) = 0u;
  return result;
}

uint64_t BaseLinearRegressorModel.coefficients.getter()
{
  return swift_retain();
}

uint64_t BaseLinearRegressorModel.coefficients.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*BaseLinearRegressorModel.coefficients.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t BaseLinearRegressorModel.featureCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) - 1;
}

double BaseLinearRegressorModel.applied(features:eventHandler:)(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  OUTLINED_FUNCTION_0_110(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11, v12, v13, v14, v15, v16, v17);
  return sub_22ABB8CB8(a1, (void (*)(double *__return_ptr, uint64_t, _QWORD, uint64_t))sub_22ABB8E94);
}

uint64_t sub_22ABB8E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;

  result = dot(_:_:)(a1, a2, a3, **(_QWORD **)(v4 + 16) + 32, *(_QWORD *)(**(_QWORD **)(v4 + 16) + 16), 1);
  *a4 = v7;
  return result;
}

uint64_t BaseLinearRegressorModel.applied(features:eventHandler:)(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  OUTLINED_FUNCTION_0_110(a1, a2, a3, a4, a5, a6, a7, a8, v14, v15, v16, v17, v18, v19, v20, v21);
  v12 = swift_retain();
  return sub_22AA5D0FC(v12, v8, v9, v10, v11, (void (*)(uint64_t *__return_ptr, _QWORD *))sub_22ABB8FF8);
}

void sub_22ABB8F5C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 8);
  sub_22AA03574(v3);
  v6 = v5;
  if (v3)
    bzero(v4, 8 * v3);
  UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
  *(_QWORD *)(v6 + 16) = v3;
  *a2 = v6;
}

void sub_22ABB8FF8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_22ABB8F5C(a1, a2);
}

ValueMetadata *type metadata accessor for BaseLinearRegressorModel()
{
  return &type metadata for BaseLinearRegressorModel;
}

void *OUTLINED_FUNCTION_0_110(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char __dst)
{
  const void *v16;

  return memcpy(&__dst, v16, 0x51uLL);
}

void BaseTreeClassifierModel.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9[5];
  _BYTE v10[200];
  _BYTE v11[200];
  _BYTE v12[56];
  _BYTE v13[192];

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v3 = sub_22ABDCEA8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v7 = v6 - v5;
  sub_22AB7C0F0(v8);
  if (!v0)
  {
    sub_22ABDCED8();
    swift_allocObject();
    sub_22ABDCECC();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BDCB1A0], v3);
    sub_22ABDCEB4();
    sub_22AB4A528();
    sub_22ABDCEC0();
    memcpy(v10, v11, sizeof(v10));
    memcpy(v13, v11, sizeof(v13));
    sub_22AA81A84((uint64_t)v12);
    sub_22AA7C9A8((uint64_t)v10);
    swift_release();
    OUTLINED_FUNCTION_37_37();
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    sub_22ABE02A4();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v9[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B18C68);
    sub_22AB4DC28(&qword_255B18C98, (uint64_t)&unk_22ABFC320);
    sub_22ABDFFB0();
    sub_22A9E07F0((uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  OUTLINED_FUNCTION_16();
}

void BaseTreeClassifierModel.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[5];
  uint64_t v28[25];
  _BYTE v29[200];
  _BYTE v30[200];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v22 = v3;
  v4 = sub_22ABDED74();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_22ABE028C();
  if (v0)
    goto LABEL_4;
  v21 = (uint64_t)v2;
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B18C68);
  sub_22AB4DC28(&qword_255B18C70, (uint64_t)&unk_22ABFC2E0);
  sub_22ABDFF80();
  v31 = v23;
  v32 = v24;
  v33 = v25;
  v34 = v26;
  sub_22AA82E0C((uint64_t)&v31);
  sub_22AA816D8((uint64_t *)&v31, (uint64_t)v28);
  sub_22AB4E378((uint64_t)v28, (uint64_t)v29);
  if (sub_22AA5A0F0((uint64_t)v29) == 1)
  {
    v9 = sub_22ABDF830();
    swift_allocError();
    v11 = v10;
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_16_66();
    OUTLINED_FUNCTION_17_65();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_80();
    OUTLINED_FUNCTION_17_65();
    OUTLINED_FUNCTION_16_66();
    OUTLINED_FUNCTION_17_65();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDF824();
    v12 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEE26D8], v9);
    swift_willThrow(v12);
    OUTLINED_FUNCTION_15_74();
    v2 = (_QWORD *)v21;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
LABEL_5:
    OUTLINED_FUNCTION_16();
    return;
  }
  memcpy(v30, v29, sizeof(v30));
  sub_22AA7BE54();
  sub_22AB4E3C0(v28);
  sub_22ABDED68();
  v13 = sub_22ABDED5C();
  v15 = v14;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  if (v15 >> 60 != 15)
  {
    type metadata accessor for XGBooster();
    swift_allocObject();
    v16 = sub_22AB7C374(0, 0);
    swift_retain();
    sub_22AB7BE5C(v13, v15);
    sub_22AB4E518(v13, v15);
    v17 = v33;
    v18 = v32;
    v19 = *(_QWORD *)(v31 + 16);
    OUTLINED_FUNCTION_11_80();
    if (*((_QWORD *)&v33 + 1))
    {
      v20 = v19 / *((_QWORD *)&v33 + 1);
      OUTLINED_FUNCTION_15_74();
      *v22 = v17;
      v22[1] = v18;
      v22[2] = v16;
      v22[3] = v20;
      __swift_destroy_boxed_opaque_existential_1(v21);
      swift_release();
      goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_22ABB9614()
{
  BaseTreeClassifierModel.init(from:)();
}

void sub_22ABB9628()
{
  BaseTreeClassifierModel.encode(to:)();
}

void BaseTreeClassifierModel.export(to:)()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(__int128 *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_12();
  v33 = v2;
  v34 = sub_22ABDE3D8();
  v38 = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  v5 = v4;
  v6 = OUTLINED_FUNCTION_12_84();
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for CoreMLPackage();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_33();
  v18 = v17 - v16;
  v19 = *((_QWORD *)v0 + 2);
  v20 = *((_QWORD *)v0 + 3);
  v35 = *v0;
  v36 = v19;
  v37 = v20;
  OUTLINED_FUNCTION_1_104();
  OUTLINED_FUNCTION_3_116();
  if (!v1)
  {
    v32 = v7;
    v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v21(v10, v13, v6);
    v31 = v5;
    sub_22ABDE3CC();
    v22 = v18 + *(int *)(v14 + 24);
    v21((char *)v18, v10, v6);
    *(_OWORD *)v22 = 0u;
    *(_OWORD *)(v22 + 16) = 0u;
    *(_OWORD *)(v22 + 32) = 0u;
    *(_OWORD *)(v22 + 48) = 0u;
    *(_OWORD *)(v22 + 64) = 0u;
    *(_QWORD *)(v22 + 80) = 0;
    v23 = v5;
    v24 = v34;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v18 + *(int *)(v14 + 20), v23, v34);
    v25 = sub_22AB319E4();
    v30 = (void (*)(__int128 *, _QWORD))sub_22ABDE360();
    OUTLINED_FUNCTION_7_105(v25, v26, v27, 0x800000022ABE1380);
    v30(&v35, 0);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v31, v24);
    v28 = *(void (**)(char *, uint64_t))(v32 + 8);
    v28(v10, v6);
    v28(v13, v6);
    sub_22AB31614(v33);
    sub_22AA3A8DC(v18);
  }
  OUTLINED_FUNCTION_16();
}

void BaseTreeClassifierModel.export(to:metadata:)()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void (*v35)(__int128 *, _QWORD);
  uint64_t *v36;
  uint64_t v37;
  void (*v38)(__int128 *, _QWORD);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  OUTLINED_FUNCTION_12();
  v3 = v2;
  v49 = v4;
  v53 = sub_22ABDE3D8();
  v50 = *(_QWORD *)(v53 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v57 = v6;
  v7 = OUTLINED_FUNCTION_12_84();
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v38 - v13;
  v15 = type metadata accessor for CoreMLPackage();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_33();
  v19 = v18 - v17;
  v20 = *v3;
  v43 = v3[1];
  v44 = v20;
  v21 = v3[2];
  v45 = v3[3];
  v46 = v21;
  v22 = v3[4];
  v47 = v3[5];
  v48 = v22;
  v23 = v3[6];
  v51 = v3[7];
  v52 = v23;
  v42 = v3[8];
  v24 = *((_QWORD *)v0 + 2);
  v25 = *((_QWORD *)v0 + 3);
  v54 = *v0;
  v55 = v24;
  v56 = v25;
  OUTLINED_FUNCTION_1_104();
  OUTLINED_FUNCTION_3_116();
  if (!v1)
  {
    v39 = v11;
    v40 = v8;
    v26 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v26(v11, v14, v7);
    sub_22ABDE3CC();
    v27 = v19 + *(int *)(v15 + 24);
    v26((char *)v19, v11, v7);
    *(_OWORD *)v27 = 0u;
    *(_OWORD *)(v27 + 16) = 0u;
    *(_OWORD *)(v27 + 32) = 0u;
    *(_OWORD *)(v27 + 48) = 0u;
    *(_OWORD *)(v27 + 64) = 0u;
    *(_QWORD *)(v27 + 80) = 0;
    v28 = v50;
    v29 = v53;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v19 + *(int *)(v15 + 20), v57, v53);
    v30 = sub_22AB319E4();
    v41 = v19;
    v38 = (void (*)(__int128 *, _QWORD))sub_22ABDE360();
    OUTLINED_FUNCTION_7_105(v30, v31, v32, 0x800000022ABE1380);
    v38(&v54, 0);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v57, v29);
    v33 = *(void (**)(char *, uint64_t))(v40 + 8);
    v33(v39, v7);
    v33(v14, v7);
    OUTLINED_FUNCTION_16_23();
    sub_22ABDE354();
    OUTLINED_FUNCTION_16_23();
    sub_22ABDE3C0();
    OUTLINED_FUNCTION_16_23();
    sub_22ABDE390();
    OUTLINED_FUNCTION_16_23();
    sub_22ABDE3A8();
    v34 = v42;
    sub_22ABDEAEC();
    v35 = (void (*)(__int128 *, _QWORD))sub_22ABDE360();
    sub_22A9D11D8(v34, (uint64_t)sub_22A9D147C, 0, v36);
    v35(&v54, 0);
    v37 = v41;
    sub_22AB31614(v49);
    sub_22AA3A8DC(v37);
  }
  OUTLINED_FUNCTION_16();
}

void OUTLINED_FUNCTION_3_116()
{
  sub_22AB46A00();
}

uint64_t OUTLINED_FUNCTION_7_105(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_22AB61400(a1, v4, 0xD00000000000001ALL, a4);
}

uint64_t OUTLINED_FUNCTION_12_84()
{
  return sub_22ABDE324();
}

double sub_22ABB9B5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void (*a6)(double *__return_ptr, _QWORD *))
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD v10[4];
  char v11;
  double v12;

  v10[0] = a1 + 32;
  v10[1] = a2;
  if ((a4 & 1) != 0)
    v8 = a2;
  else
    v8 = a3;
  v10[2] = a3;
  v10[3] = v8;
  v11 = a4 & 1;
  a6(&v12, v10);
  if (!v6)
    v7 = v12;
  swift_release();
  return v7;
}

void sub_22ABB9BD8(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  char v17;
  uint64_t v18;

  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  if ((a3 & 1) == 0)
  {
    v11 = 0;
    goto LABEL_17;
  }
  v16[0] = *(_QWORD *)a1;
  v16[1] = v7;
  v17 = v8;
  v18 = v9;
  sub_22AB67D38((uint64_t)v16);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v11 = v10;
    v15 = a2;
    if (v7)
    {
      v12 = 0;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22AB88498();
          v9 = v13;
        }
        v14 = v7;
        if ((v8 & 1) != 0)
        {
          if ((unsigned __int128)((uint64_t)v12 * (__int128)v6) >> 64 != (uint64_t)(v12 * v6) >> 63)
            goto LABEL_22;
          v14 = 1;
        }
        if (v12 >= *(_QWORD *)(v11 + 16))
          break;
        if (v6 > 0x7FFFFFFF)
          goto LABEL_19;
        if (v6 < (uint64_t)0xFFFFFFFF80000000)
          goto LABEL_20;
        if (v14 > 0x7FFFFFFF)
          goto LABEL_21;
        cblas_dscal_NEWLAPACK();
        if (v7 == ++v12)
          goto LABEL_15;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_15:
    a2 = v15;
LABEL_17:
    *(_QWORD *)a4 = v6;
    *(_QWORD *)(a4 + 8) = v7;
    *(_BYTE *)(a4 + 16) = v8;
    *(_QWORD *)(a4 + 24) = v9;
    *(_QWORD *)(a4 + 32) = a2;
    *(_QWORD *)(a4 + 40) = v11;
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_22ABB9D18(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v2 = a1[1];
  v15 = *a1;
  v16 = v2;
  if ((_BYTE)v2)
    v3 = v15;
  else
    v3 = *((_QWORD *)&v15 + 1);
  v17 = *((_QWORD *)&v16 + 1) + 32;
  v18 = v15;
  v19 = v3;
  v20 = v2;
  v4 = *((_QWORD *)a1 + 4);
  v5 = v4 + 32;
  v6 = *(_QWORD *)(v4 + 16);
  v11 = &v17;
  v12 = v5;
  v13 = v6;
  v14 = 1;
  v9[2] = a2;
  v9[3] = sub_22ABBA6D4;
  v9[4] = &v10;
  sub_22AA8EEDC((uint64_t)&v15);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
  DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22ABBA7CC, (uint64_t)v9, v7);
  return sub_22AA8EF04((uint64_t)&v15);
}

uint64_t sub_22ABB9DFC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v2 = a1[1];
  v15 = *a1;
  v16 = v2;
  if ((_BYTE)v2)
    v3 = v15;
  else
    v3 = *((_QWORD *)&v15 + 1);
  v17 = *((_QWORD *)&v16 + 1) + 32;
  v18 = v15;
  v19 = v3;
  v20 = v2;
  v4 = *((_QWORD *)a1 + 4);
  v5 = v4 + 32;
  v6 = *(_QWORD *)(v4 + 16);
  v11 = &v17;
  v12 = v5;
  v13 = v6;
  v14 = 1;
  v9[2] = a2;
  v9[3] = sub_22ABBA6A8;
  v9[4] = &v10;
  sub_22AA8EEDC((uint64_t)&v15);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
  DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AA8EFC8, (uint64_t)v9, v7);
  return sub_22AA8EF04((uint64_t)&v15);
}

double sub_22ABB9EE0(uint64_t a1, uint64_t a2)
{
  return sub_22ABB8CB8(*(_QWORD *)(a2 + 32), (void (*)(double *__return_ptr, uint64_t, _QWORD, uint64_t))sub_22ABBA7B0);
}

double sub_22ABB9F18(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(double *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  double result;
  double v8;

  a4(&v8, a6, a1, a2, a3);
  if (!v6)
    return v8;
  return result;
}

void sub_22ABB9F5C()
{
  __int128 *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_106();
  sub_22ABB9D18(v0, v1);
  OUTLINED_FUNCTION_11_93();
}

uint64_t sub_22ABB9F7C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];
  _QWORD *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v11 = *(_QWORD *)(isStackAllocationSafe + 8);
  if (v11 < 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if ((unint64_t)(v11 + 0x1000000000000000) >> 61)
    goto LABEL_12;
  v15[2] = a4;
  v15[3] = a8;
  v15[1] = a3;
  v16 = a11;
  if (8 * v11 > 1024)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (!(_DWORD)isStackAllocationSafe)
    {
      swift_slowAlloc();
      if (v11 >= 1)
        OUTLINED_FUNCTION_33_55();
      OUTLINED_FUNCTION_1_105();
      OUTLINED_FUNCTION_5_99();
      OUTLINED_FUNCTION_8_103();
      OUTLINED_FUNCTION_0_111();
      OUTLINED_FUNCTION_4_109();
      *v16 = v14;
      JUMPOUT(0x22E2E4E64);
    }
  }
  v15[0] = v15;
  MEMORY[0x24BDAC7A8](isStackAllocationSafe);
  if (v11 >= 1)
    OUTLINED_FUNCTION_33_55();
  OUTLINED_FUNCTION_1_105();
  OUTLINED_FUNCTION_5_99();
  OUTLINED_FUNCTION_8_103();
  OUTLINED_FUNCTION_0_111();
  result = OUTLINED_FUNCTION_4_109();
  *v16 = v13;
  return result;
}

void sub_22ABBA128()
{
  __int128 *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_106();
  sub_22ABB9DFC(v0, v1);
  OUTLINED_FUNCTION_11_93();
}

uint64_t sub_22ABBA148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *v12;
  char v13;
  uint64_t *v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  int8x16_t v19;
  uint64_t v20;
  char v21;

  sub_22ABB9F7C(a9, a10, a11, a12, a1, a2, a3, a4, a5, a6, a8);
  sub_22ABBC8D8(0.0);
  if (*(_BYTE *)(a9 + 32) == 1)
  {
    v12 = (uint64_t *)a9;
    v13 = 1;
    v14 = (uint64_t *)a9;
    v15 = 0;
  }
  else
  {
    v16 = *(_QWORD *)(a9 + 24);
    v18 = *(_QWORD *)a9;
    v19 = vextq_s8(*(int8x16_t *)(a9 + 8), *(int8x16_t *)(a9 + 8), 8uLL);
    v20 = v16;
    v21 = 1;
    v12 = &v18;
    v14 = &v18;
    v13 = 0;
    v15 = 1;
  }
  return UnsafeMutableMatrixPointer<A>.addProductDouble(_:transposed:_:transposed:scaledBy:)((uint64_t)v12, v13, (uint64_t)v14, v15);
}

double sub_22ABBA218()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  double v3;
  __int128 v5;

  v5 = v0[1];
  v1 = *v0;
  v2 = swift_retain_n();
  v3 = sub_22ABB9B5C(v2, v1, *((uint64_t *)&v1 + 1), v5, *((uint64_t *)&v5 + 1), (void (*)(double *__return_ptr, _QWORD *))sub_22ABBA76C);
  swift_release();
  return v3;
}

uint64_t sub_22ABBA2B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_22ABBA2F4(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_22ABBA2F4(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v4[2];

  v4[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(isStackAllocationSafe + 8);
  if (v1 < 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if ((unint64_t)(v1 + 0x1000000000000000) >> 61)
    goto LABEL_12;
  if (8 * v1 <= 1024 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    v4[0] = v4;
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    if (v1 >= 1)
      OUTLINED_FUNCTION_10_85();
    OUTLINED_FUNCTION_2_116();
    OUTLINED_FUNCTION_3_117();
    return OUTLINED_FUNCTION_6_123();
  }
  else
  {
    v3 = swift_slowAlloc();
    if (v1 >= 1)
      OUTLINED_FUNCTION_10_85();
    OUTLINED_FUNCTION_2_116();
    OUTLINED_FUNCTION_3_117();
    OUTLINED_FUNCTION_6_123();
    return MEMORY[0x22E2E4E64](v3, -1, -1);
  }
}

void sub_22ABBA46C(double *a1@<X8>)
{
  *a1 = sub_22ABBA218();
}

uint64_t destroy for LinearRegressionProblem()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LinearRegressionProblem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LinearRegressionProblem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LinearRegressionProblem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LinearRegressionProblem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LinearRegressionProblem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinearRegressionProblem()
{
  return &type metadata for LinearRegressionProblem;
}

uint64_t sub_22ABBA6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t *v8;

  return sub_22ABBA148(a1, a2, a3, a4, a5, a6, a7, a8, v8[2], v8[3], v8[4], v8[5]);
}

uint64_t sub_22ABBA6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t *v8;

  return sub_22ABB9F7C(v8[2], v8[3], v8[4], v8[5], a1, a2, a3, a4, a5, a6, a8);
}

uint64_t sub_22ABBA72C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_22ABBA2B8(a1, a2);
}

void sub_22ABBA744(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v3;
  double v5;

  v5 = sub_22ABB9EE0(a1, a2);
  if (!v3)
    *a3 = v5;
}

void sub_22ABBA76C(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  sub_22ABBA744(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_22ABBA788(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(double *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, double *a7@<X8>)
{
  uint64_t v7;
  double v9;

  v9 = sub_22ABB9F18(a1, a2, a3, a4, a5, a6);
  if (!v7)
    *a7 = v9;
}

void sub_22ABBA7B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>)
{
  uint64_t v4;

  sub_22ABBA788(a1, a2, a3, *(void (**)(double *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), a4);
}

_QWORD *sub_22ABBA7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA8EFC8(a1, a2, a3);
}

void OUTLINED_FUNCTION_0_111()
{
  UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
}

void OUTLINED_FUNCTION_2_116()
{
  UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
}

uint64_t OUTLINED_FUNCTION_3_117()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(v3, v2, v1, v4, v0, 1);
}

uint64_t OUTLINED_FUNCTION_4_109()
{
  uint64_t v0;
  uint64_t v1;

  return dot(_:_:)(v1, v0, 1, v1, v0, 1);
}

uint64_t OUTLINED_FUNCTION_5_99()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(v2, *(_QWORD *)(v3 - 120), *(_QWORD *)(v3 - 112), v1, v0, 1);
}

uint64_t OUTLINED_FUNCTION_6_123()
{
  uint64_t v0;
  uint64_t v1;

  return dot(_:_:)(v1, v0, 1, v1, v0, 1);
}

__n128 OUTLINED_FUNCTION_7_106()
{
  __n128 *v0;

  return v0[2];
}

uint64_t OUTLINED_FUNCTION_8_103()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_22AA8E768(*(_QWORD *)(v2 - 104), v1, v0, 0.0);
}

void OUTLINED_FUNCTION_10_85()
{
  size_t v0;
  void *v1;

  bzero(v1, v0);
}

void sub_22ABBA8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unsigned int v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD v125[2];

  OUTLINED_FUNCTION_4_4();
  v123 = v2;
  v116 = v3;
  v112 = sub_22ABDE198();
  v122 = *(_QWORD *)(v112 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  v118 = v5;
  OUTLINED_FUNCTION_36();
  v6 = sub_22ABDE138();
  v107 = *(_QWORD *)(v6 - 8);
  v108 = v6;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  v121 = v8;
  OUTLINED_FUNCTION_36();
  v9 = sub_22ABDE324();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_23_8();
  v13 = v11 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v117 = (char *)&v102 - v15;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_21_71();
  MEMORY[0x24BDAC7A8](v17);
  v109 = (uint64_t)&v102 - v18;
  OUTLINED_FUNCTION_4_0();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v102 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v103 = (char *)&v102 - v23;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_28_1();
  v104 = v25;
  OUTLINED_FUNCTION_36();
  v120 = sub_22ABDDF10();
  v106 = *(_QWORD *)(v120 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_0();
  v105 = v27;
  OUTLINED_FUNCTION_36();
  v28 = sub_22ABDE780();
  v110 = *(_QWORD *)(v28 - 8);
  v111 = v28;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_22ABDE798();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_87();
  v114 = v34;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v102 - v36;
  sub_22ABDE27C();
  v38 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v37, v32);
  v39 = v38 == *MEMORY[0x24BE63268];
  v124 = v10;
  v113 = v38;
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v33 + 96))(v37, v32);
    v40 = v112;
    (*(void (**)(uint64_t, char *, uint64_t))(v122 + 32))(v118, v37, v112);
    v41 = v10;
    v121 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v121(v117, v0, v9);
    v42 = sub_22ABDE180();
    v43 = *(_QWORD *)(v42 + 16);
    v44 = v41;
    if (v43)
    {
      v119 = v33;
      v115 = v32;
      v125[0] = MEMORY[0x24BEE4AF8];
      v45 = v125;
      v46 = v42;
      sub_22AB4D448();
      v47 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      v120 = v46;
      v48 = v46 + v47;
      v49 = *(_QWORD *)(v41 + 72);
      do
      {
        v121(v22, v48, v9);
        OUTLINED_FUNCTION_16_80();
        OUTLINED_FUNCTION_18_74(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
        if ((OUTLINED_FUNCTION_6_124() & 1) == 0)
        {
          OUTLINED_FUNCTION_5_100();
          v45 = (_QWORD *)v125[0];
        }
        v50 = v45[2];
        if (v50 >= v45[3] >> 1)
        {
          OUTLINED_FUNCTION_3_118();
          v45 = (_QWORD *)v125[0];
        }
        v45[2] = v50 + 1;
        v51 = (uint64_t)v45 + v47 + v50 * v49;
        v44 = v124;
        OUTLINED_FUNCTION_79(v51, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 32));
        v125[0] = v45;
        v48 += v49;
        --v43;
        v52 = v122;
      }
      while (v43);
      OUTLINED_FUNCTION_93_3();
      v32 = v115;
      v67 = v116;
      v33 = v119;
      v40 = v112;
    }
    else
    {
      swift_bridgeObjectRelease();
      v67 = v116;
      v52 = v122;
    }
    v81 = v118;
    sub_22ABDE18C();
    v82 = v114;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v114, v81, v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 104))(v82, v113, v32);
    v83 = (uint64_t)v117;
    sub_22ABDE288();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v81, v40);
    v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 32);
    v85 = v67;
    goto LABEL_35;
  }
  v54 = v110;
  v53 = v111;
  v119 = v33;
  v115 = v32;
  if (v38 == *MEMORY[0x24BE63250])
  {
    (*(void (**)(char *, uint64_t))(v119 + 96))(v37, v115);
    v55 = v107;
    v56 = v108;
    v57 = v121;
    OUTLINED_FUNCTION_37_7((uint64_t)v121, (uint64_t)v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 32));
    v58 = v124;
    OUTLINED_FUNCTION_23_69(v109, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 16));
    v59 = sub_22ABDE120();
    v60 = *(_QWORD *)(v59 + 16);
    if (v60)
    {
      v125[0] = MEMORY[0x24BEE4AF8];
      v61 = v125;
      v62 = v59;
      OUTLINED_FUNCTION_20_62();
      v63 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      v120 = v62;
      v64 = v62 + v63;
      v65 = *(_QWORD *)(v58 + 72);
      do
      {
        OUTLINED_FUNCTION_29_47((uint64_t)v22, v64);
        OUTLINED_FUNCTION_16_80();
        OUTLINED_FUNCTION_18_74(*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
        if ((OUTLINED_FUNCTION_6_124() & 1) == 0)
        {
          OUTLINED_FUNCTION_5_100();
          v61 = (_QWORD *)v125[0];
        }
        v66 = v61[2];
        if (v66 >= v61[3] >> 1)
        {
          OUTLINED_FUNCTION_3_118();
          v61 = (_QWORD *)v125[0];
        }
        v61[2] = v66 + 1;
        v58 = v124;
        OUTLINED_FUNCTION_79((uint64_t)v61 + v63 + v66 * v65, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 32));
        v125[0] = v61;
        v64 += v65;
        --v60;
        v57 = v121;
      }
      while (v60);
      OUTLINED_FUNCTION_93_3();
      v86 = v116;
      v55 = v107;
      v56 = v108;
    }
    else
    {
      swift_bridgeObjectRelease();
      v86 = v116;
    }
    sub_22ABDE12C();
    v94 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16);
    v95 = v55;
    v96 = v114;
    OUTLINED_FUNCTION_37_7(v114, (uint64_t)v57, v94);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v119 + 104))(v96, v113, v115);
    v83 = v109;
    sub_22ABDE288();
    (*(void (**)(void (*)(char *, uint64_t, uint64_t), uint64_t))(v95 + 8))(v57, v56);
    v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 32);
    v85 = v86;
LABEL_35:
    v97 = v83;
LABEL_36:
    OUTLINED_FUNCTION_79(v85, v97, v84);
    goto LABEL_37;
  }
  if (v38 == *MEMORY[0x24BE632D0])
  {
    v68 = v119;
    v69 = v115;
    (*(void (**)(char *, uint64_t))(v119 + 96))(v37, v115);
    v70 = v120;
    (*(void (**)(uint64_t, char *, uint64_t))(v106 + 32))(v105, v37, v120);
    v71 = v124;
    v72 = v104;
    OUTLINED_FUNCTION_23_69(v104, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 16));
    v73 = (void (*)(char *, uint64_t, uint64_t))sub_22ABDDEF8();
    v74 = *((_QWORD *)v73 + 2);
    if (v74)
    {
      v125[0] = MEMORY[0x24BEE4AF8];
      v75 = v125;
      OUTLINED_FUNCTION_20_62();
      v76 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
      v121 = v73;
      v77 = (uint64_t)v73 + v76;
      v78 = *(_QWORD *)(v71 + 72);
      v79 = (uint64_t)v103;
      do
      {
        OUTLINED_FUNCTION_29_47((uint64_t)v22, v77);
        OUTLINED_FUNCTION_16_80();
        OUTLINED_FUNCTION_18_74(*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8));
        if ((OUTLINED_FUNCTION_6_124() & 1) == 0)
        {
          OUTLINED_FUNCTION_5_100();
          v75 = (_QWORD *)v125[0];
        }
        v80 = v75[2];
        if (v80 >= v75[3] >> 1)
        {
          OUTLINED_FUNCTION_3_118();
          v75 = (_QWORD *)v125[0];
        }
        v75[2] = v80 + 1;
        v71 = v124;
        OUTLINED_FUNCTION_79((uint64_t)v75 + v76 + v80 * v78, v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 32));
        v125[0] = v75;
        v77 += v78;
        --v74;
        v70 = v120;
      }
      while (v74);
      swift_bridgeObjectRelease();
      v69 = v115;
      v98 = v116;
      v68 = v119;
      v72 = v104;
    }
    else
    {
      swift_bridgeObjectRelease();
      v98 = v116;
    }
    v99 = v105;
    sub_22ABDDF04();
    v100 = v106;
    v101 = v114;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v114, v99, v70);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v68 + 104))(v101, v113, v69);
    sub_22ABDE288();
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v70);
    v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 32);
    v85 = v98;
    v97 = v72;
    goto LABEL_36;
  }
  v87 = v115;
  if (v38 == *MEMORY[0x24BE632E0])
  {
    (*(void (**)(char *, uint64_t))(v119 + 96))(v37, v115);
    v88 = v54;
    v89 = v53;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v31, v37, v53);
    OUTLINED_FUNCTION_79(v116, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 16));
    v90 = v114;
    (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v114, v31, v53);
    v91 = sub_22ABDE768();
    v92 = v123;
    sub_22ABBBFD4(v91, v123);
    OUTLINED_FUNCTION_86_10();
    OUTLINED_FUNCTION_26_64();
    sub_22ABDE774();
    v93 = sub_22ABDE408();
    sub_22ABBBB18(v93, v92);
    OUTLINED_FUNCTION_86_10();
    OUTLINED_FUNCTION_26_64();
    sub_22ABDE414();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v119 + 104))(v90, v113, v87);
    sub_22ABDE288();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v31, v89);
  }
  else
  {
    OUTLINED_FUNCTION_79(v116, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 16));
    (*(void (**)(char *, uint64_t))(v119 + 8))(v37, v87);
  }
LABEL_37:
  OUTLINED_FUNCTION_3();
}

void sub_22ABBB16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_4_4();
  v22 = v2;
  v4 = v3;
  v5 = sub_22ABDE714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v19 - v8;
  sub_22ABDE4B0();
  OUTLINED_FUNCTION_19_66();
  OUTLINED_FUNCTION_84_14(v4, v10);
  v11 = sub_22ABDE48C();
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v19[1] = v0;
    v19[2] = v4;
    v23 = MEMORY[0x24BEE4AF8];
    sub_22AB4D780();
    v13 = *(unsigned __int8 *)(v6 + 80);
    v19[0] = v11;
    v21 = (v13 + 32) & ~v13;
    v14 = v11 + v21;
    v15 = *(_QWORD *)(v6 + 72);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    do
    {
      v20(v1, v14, v5);
      sub_22ABBB35C();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
      v16 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4D780();
        v16 = v23;
      }
      v17 = *(_QWORD *)(v16 + 16);
      if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_22AB4D780();
        v16 = v23;
      }
      *(_QWORD *)(v16 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v21 + v17 * v15, v9, v5);
      v23 = v16;
      v14 += v15;
      --v12;
    }
    while (v12);
    OUTLINED_FUNCTION_93_3();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_22ABDE498();
  v18 = sub_22ABDE474();
  sub_22ABBBB18(v18, v22);
  OUTLINED_FUNCTION_86_10();
  sub_22ABDE480();
  OUTLINED_FUNCTION_3();
}

void sub_22ABBB35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_4_4();
  v3 = v2;
  v5 = v4;
  v6 = sub_22ABDE4B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_23_8();
  OUTLINED_FUNCTION_21_71();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v21 - v9;
  sub_22ABDE714();
  OUTLINED_FUNCTION_19_66();
  OUTLINED_FUNCTION_84_14(v5, v11);
  v12 = sub_22ABDE6E4();
  v25 = v3;
  sub_22ABBC364(v12, v3, (uint64_t (*)(_QWORD))MEMORY[0x24BE63098], qword_255B1BA90, (void (*)(uint64_t))sub_22ABBB580);
  v21[3] = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_64();
  sub_22ABDE6F0();
  v22 = v0;
  v13 = sub_22ABDE6C0();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v21[2] = v5;
    v26 = MEMORY[0x24BEE4AF8];
    sub_22AB4D7BC();
    v15 = *(unsigned __int8 *)(v7 + 80);
    v21[1] = v13;
    v24 = (v15 + 32) & ~v15;
    v16 = v13 + v24;
    v17 = *(_QWORD *)(v7 + 72);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    do
    {
      v23(v1, v16, v6);
      v18 = v1;
      sub_22ABBB16C(v25);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
      if ((OUTLINED_FUNCTION_6_124() & 1) == 0)
      {
        OUTLINED_FUNCTION_25_52();
        sub_22AB4D7BC();
        v18 = v26;
      }
      v19 = *(_QWORD *)(v18 + 16);
      if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
      {
        sub_22AB4D7BC();
        v18 = v26;
      }
      *(_QWORD *)(v18 + 16) = v19 + 1;
      OUTLINED_FUNCTION_37_7(v18 + v24 + v19 * v17, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
      v26 = v18;
      v16 += v17;
      --v14;
    }
    while (v14);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_64();
  sub_22ABDE6CC();
  v20 = sub_22ABDE69C();
  sub_22ABBBB18(v20, v25);
  OUTLINED_FUNCTION_86_10();
  OUTLINED_FUNCTION_26_64();
  sub_22ABDE6A8();
  OUTLINED_FUNCTION_3();
}

void sub_22ABBB580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  int v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  int v83;
  char *v84;
  char *v85;

  OUTLINED_FUNCTION_4_4();
  v64 = v1;
  v3 = v2;
  v4 = sub_22ABDE4E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_22ABDE4F8();
  v69 = *(_QWORD *)(v73 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  v67 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BA70);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  v72 = v11;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_28_1();
  v71 = v13;
  OUTLINED_FUNCTION_36();
  v14 = sub_22ABDE534();
  v77 = *(_QWORD *)(v14 - 8);
  v78 = v14;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_87();
  v76 = v16;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_28_1();
  v75 = v18;
  OUTLINED_FUNCTION_36();
  v19 = sub_22ABDE5C4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_23_8();
  v23 = v21 - v22;
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_21_71();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_28_1();
  v70 = v26;
  OUTLINED_FUNCTION_36();
  sub_22ABDE600();
  OUTLINED_FUNCTION_19_66();
  OUTLINED_FUNCTION_84_14(v3, v27);
  v28 = sub_22ABDE5E8();
  v29 = *(_QWORD *)(v28 + 16);
  if (!v29)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    sub_22ABDE5F4();
    OUTLINED_FUNCTION_3();
    return;
  }
  v62 = v4;
  v63 = v3;
  v85 = (char *)MEMORY[0x24BEE4AF8];
  v30 = v28;
  sub_22AB4D3D0();
  v31 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v60 = v30;
  v81 = v31;
  v32 = v30 + v31;
  v80 = *(_QWORD *)(v20 + 72);
  v84 = *(char **)(v20 + 16);
  v83 = *MEMORY[0x24BE63058];
  v79 = *MEMORY[0x24BE63060];
  v66 = *MEMORY[0x24BE62F98];
  v65 = *MEMORY[0x24BE62F90];
  v82 = v5;
  v61 = v7;
  v33 = v70;
  while (1)
  {
    v34 = v84;
    ((void (*)(uint64_t, unint64_t, uint64_t))v84)(v0, v32, v19);
    OUTLINED_FUNCTION_17_75(v23);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v23, v19);
    if (v35 != v83)
      break;
    OUTLINED_FUNCTION_19_30(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 96));
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17_75(v33);
LABEL_17:
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v0, v19);
    if ((OUTLINED_FUNCTION_6_124() & 1) == 0)
    {
      OUTLINED_FUNCTION_25_52();
      sub_22AB4D3D0();
      v34 = v85;
    }
    v58 = *((_QWORD *)v34 + 2);
    if (v58 >= *((_QWORD *)v34 + 3) >> 1)
    {
      sub_22AB4D3D0();
      v34 = v85;
    }
    *((_QWORD *)v34 + 2) = v58 + 1;
    v59 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(&v34[v81 + v58 * v80], v33, v19);
    v85 = v34;
    v32 += v59;
    --v29;
    v5 = v82;
    if (!v29)
      goto LABEL_22;
  }
  if (v35 != v79)
  {
    OUTLINED_FUNCTION_17_75(v33);
    OUTLINED_FUNCTION_19_30(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_19_30(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 96));
  v36 = v77;
  v37 = v75;
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 32);
  v74(v75, v23, v78);
  OUTLINED_FUNCTION_37_7(v76, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16));
  v38 = v72;
  sub_22ABDE504();
  v39 = v73;
  if (__swift_getEnumTagSinglePayload(v38, 1, v73) == 1)
  {
    sub_22ABBC324(v38);
    v40 = 1;
LABEL_16:
    v33 = v70;
    v55 = v74;
    __swift_storeEnumTagSinglePayload(v71, v40, 1, v39);
    v56 = v76;
    sub_22ABDE510();
    v57 = v56;
    v34 = (char *)v78;
    v55(v33, v57, v78);
    (*(void (**)(uint64_t, char *))(v77 + 8))(v75, v34);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v33, v79, v19);
    goto LABEL_17;
  }
  v41 = v69;
  v42 = v38;
  v43 = v67;
  v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
  v68(v67, v42, v39);
  v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 88))(v43, v39);
  if (v44 == v66)
  {
    v45 = v73;
    v68(v71, v72, v73);
    OUTLINED_FUNCTION_28_48();
LABEL_15:
    OUTLINED_FUNCTION_28_48();
    v40 = 0;
    v39 = v45;
    goto LABEL_16;
  }
  if (v44 != v65)
  {
    v45 = v73;
    v68(v71, v72, v73);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v45);
    goto LABEL_15;
  }
  v46 = v67;
  (*(void (**)(uint64_t, uint64_t))(v69 + 96))(v67, v73);
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  v48 = v61;
  v49 = v46;
  v50 = v5;
  v51 = v62;
  v47(v61, v49, v62);
  sub_22ABDE4D4();
  v68 = v52;
  if (!__OFADD__(sub_22ABDE4BC(), v64))
  {
    v53 = v50;
    v54 = v71;
    sub_22ABDE4C8();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v48, v51);
    v45 = v73;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v69 + 104))(v54, v65, v73);
    goto LABEL_15;
  }
  __break(1u);
}

void sub_22ABBBB18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(uint64_t, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v40 = sub_22ABDE4E0();
  v43 = *(_QWORD *)(v40 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  v39 = v5;
  OUTLINED_FUNCTION_36();
  v54 = sub_22ABDE4F8();
  v50 = *(_QWORD *)(v54 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v49 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BA70);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_28_1();
  v55 = v10;
  OUTLINED_FUNCTION_36();
  v11 = sub_22ABDE534();
  v59 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_87();
  v58 = v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_28_1();
  v57 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BA78);
  sub_22ABDFB6C();
  v16 = 0;
  v53 = a1;
  v47 = a1 + 64;
  OUTLINED_FUNCTION_26_45();
  v19 = v18 & v17;
  v48 = (unint64_t)(v20 + 63) >> 6;
  v46 = *MEMORY[0x24BE62F98];
  v44 = *MEMORY[0x24BE62F90];
  v51 = v21 + 8;
  v52 = v21;
  v42 = v2;
  v45 = v11;
  if ((v18 & v17) == 0)
    goto LABEL_3;
LABEL_2:
  v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v22 | (v16 << 6); ; i = __clz(__rbit64(v25)) + (v16 << 6))
  {
    v27 = (uint64_t *)(*(_QWORD *)(v53 + 48) + 16 * i);
    v28 = v27[1];
    v56 = *v27;
    v29 = *(_QWORD *)(v59 + 72) * i;
    v30 = *(void (**)(uint64_t, unint64_t, uint64_t))(v59 + 16);
    v30(v57, *(_QWORD *)(v53 + 56) + v29, v11);
    v30(v58, v57, v11);
    sub_22ABDEAEC();
    sub_22ABDE504();
    v31 = v54;
    if (__swift_getEnumTagSinglePayload(v2, 1, v54) == 1)
    {
      sub_22ABBC324(v2);
      v32 = 1;
    }
    else
    {
      v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
      OUTLINED_FUNCTION_32_44(v49);
      v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 88))(v49, v54);
      if (v34 == v46)
      {
        OUTLINED_FUNCTION_32_44(v55);
        OUTLINED_FUNCTION_30_54(v49);
      }
      else if (v34 == v44)
      {
        (*(void (**)(uint64_t, uint64_t))(v50 + 96))(v49, v54);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v39, v49, v40);
        sub_22ABDE4D4();
        if (__OFADD__(sub_22ABDE4BC(), a2))
          goto LABEL_32;
        sub_22ABDE4C8();
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v39, v40);
        v31 = v54;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v50 + 104))(v55, v44, v54);
        v2 = v42;
      }
      else
      {
        v2 = v42;
        v33(v55, v42, v54);
        OUTLINED_FUNCTION_30_54(v49);
      }
      v11 = v45;
      OUTLINED_FUNCTION_30_54(v2);
      v32 = 0;
    }
    __swift_storeEnumTagSinglePayload(v55, v32, 1, v31);
    sub_22ABDE510();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v11);
    *(_QWORD *)((char *)v51 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v35 = (_QWORD *)(v52[6] + 16 * i);
    *v35 = v56;
    v35[1] = v28;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v59 + 32))(v52[7] + v29, v58, v11);
    v36 = v52[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v52[2] = v38;
    if (v19)
      goto LABEL_2;
LABEL_3:
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_31;
    if (v24 >= v48)
      goto LABEL_29;
    v25 = *(_QWORD *)(v47 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v48)
        goto LABEL_29;
      v25 = *(_QWORD *)(v47 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v48)
          goto LABEL_29;
        v25 = *(_QWORD *)(v47 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_16:
    v19 = (v25 - 1) & v25;
  }
  v26 = v24 + 3;
  if (v26 >= v48)
  {
LABEL_29:
    OUTLINED_FUNCTION_16();
    return;
  }
  v25 = *(_QWORD *)(v47 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_16;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v48)
      goto LABEL_29;
    v25 = *(_QWORD *)(v47 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_16;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_22ABBBFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  unint64_t i;
  BOOL v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v45 = a2;
  v3 = sub_22ABDE690();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v36 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BA80);
  result = sub_22ABDFB6C();
  v8 = result;
  v9 = 0;
  v44 = a1;
  v12 = *(_QWORD *)(a1 + 64);
  v11 = a1 + 64;
  v10 = v12;
  v13 = 1 << *(_BYTE *)(v11 - 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v10;
  v36 = v11;
  v37 = (unint64_t)(v13 + 63) >> 6;
  v38 = result + 64;
  v40 = result;
  v17 = v42;
  v16 = v43;
  v18 = v39;
  v19 = v41;
  v20 = v45;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v46 = (v15 - 1) & v15;
  v47 = v9;
  for (i = __clz(__rbit64(v15)) | (v9 << 6); ; i = __clz(__rbit64(v24)) + (v23 << 6))
  {
    v26 = *(_QWORD *)(v44 + 56);
    v27 = (uint64_t *)(*(_QWORD *)(v44 + 48) + 16 * i);
    v28 = *v27;
    v48 = v27[1];
    v49 = v28;
    v50 = *(_QWORD *)(v17 + 72) * i;
    v29 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
    v29(v18, v26 + v50, v16);
    v29(v19, (unint64_t)v18, v16);
    sub_22ABDEAEC();
    v30 = sub_22ABDE63C();
    sub_22ABBC364(v30, v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE62F58], &qword_255B1BA88, (void (*)(uint64_t))sub_22ABBB16C);
    swift_bridgeObjectRelease();
    sub_22ABDE648();
    v31 = sub_22ABDE618();
    sub_22ABBBB18(v31, v20);
    swift_bridgeObjectRelease();
    sub_22ABDE624();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v16);
    *(_QWORD *)(v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v8 = v40;
    v32 = (_QWORD *)(*(_QWORD *)(v40 + 48) + 16 * i);
    v33 = v48;
    *v32 = v49;
    v32[1] = v33;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v8 + 56) + v50, v19, v16);
    v34 = *(_QWORD *)(v8 + 16);
    v22 = __OFADD__(v34, 1);
    v35 = v34 + 1;
    if (v22)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    *(_QWORD *)(v8 + 16) = v35;
    v15 = v46;
    v9 = v47;
    if (v46)
      goto LABEL_4;
LABEL_5:
    v22 = __OFADD__(v9, 1);
    v23 = v9 + 1;
    if (v22)
      goto LABEL_25;
    if (v23 >= v37)
      return v8;
    v24 = *(_QWORD *)(v36 + 8 * v23);
    if (!v24)
      break;
LABEL_15:
    v46 = (v24 - 1) & v24;
    v47 = v23;
  }
  v25 = v23 + 1;
  if (v23 + 1 >= v37)
    return v8;
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
    goto LABEL_14;
  v25 = v23 + 2;
  if (v23 + 2 >= v37)
    return v8;
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
    goto LABEL_14;
  v25 = v23 + 3;
  if (v23 + 3 >= v37)
    return v8;
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
  {
LABEL_14:
    v23 = v25;
    goto LABEL_15;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v37)
      return v8;
    v24 = *(_QWORD *)(v36 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_22ABBC324(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BA70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22ABBC364(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v43;

  v7 = a3(0);
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_87();
  v37 = v9;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_28_1();
  v36 = v11;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_22ABDFB6C();
  v40 = a1;
  OUTLINED_FUNCTION_26_45();
  v15 = v14 & v13;
  v32 = a1 + 64;
  v33 = (unint64_t)(v16 + 63) >> 6;
  v34 = v17 + 8;
  v35 = v17;
  if ((v14 & v13) == 0)
    goto LABEL_3;
LABEL_2:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v43 = v12;
  for (i = v18 | (v12 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * i);
    v26 = *v24;
    v25 = v24[1];
    v27 = *(_QWORD *)(v38 + 72) * i;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v38 + 16))(v36, *(_QWORD *)(v40 + 56) + v27, v39);
    sub_22ABDEAEC();
    a5(a2);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v39);
    *(_QWORD *)((char *)v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v28 = (_QWORD *)(v35[6] + 16 * i);
    *v28 = v26;
    v28[1] = v25;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 32))(v35[7] + v27, v37, v39);
    v29 = v35[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v35[2] = v31;
    v12 = v43;
    if (v15)
      goto LABEL_2;
LABEL_3:
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_22;
    if (v20 >= v33)
      goto LABEL_20;
    v21 = *(_QWORD *)(v32 + 8 * v20);
    v22 = v12 + 1;
    if (!v21)
    {
      v22 = v12 + 2;
      if (v12 + 2 >= v33)
        goto LABEL_20;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = v12 + 3;
        if (v12 + 3 >= v33)
          goto LABEL_20;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
          break;
      }
    }
LABEL_16:
    v15 = (v21 - 1) & v21;
    v43 = v22;
  }
  v23 = v12 + 4;
  if (v12 + 4 >= v33)
  {
LABEL_20:
    OUTLINED_FUNCTION_16();
    return;
  }
  v21 = *(_QWORD *)(v32 + 8 * v23);
  if (v21)
  {
    v22 = v12 + 4;
    goto LABEL_16;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v33)
      goto LABEL_20;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_16;
  }
LABEL_23:
  __break(1u);
}

void OUTLINED_FUNCTION_3_118()
{
  sub_22AB4D448();
}

void OUTLINED_FUNCTION_5_100()
{
  sub_22AB4D448();
}

uint64_t OUTLINED_FUNCTION_6_124()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_16_80()
{
  uint64_t v0;

  return sub_22ABBA8F4(*(_QWORD *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_17_75(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_18_74@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void OUTLINED_FUNCTION_20_62()
{
  sub_22AB4D448();
}

uint64_t OUTLINED_FUNCTION_23_69@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = a2;
  return a2(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_25_52()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_26_64()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_28_48()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_29_47(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 128))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_30_54(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_32_44(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t sub_22ABBC6C4(const double *a1, uint64_t a2)
{
  uint64_t v4;
  double *v5;
  uint64_t v6;
  int v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22AA03574(a2);
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  if (a2 > 0x7FFFFFFF)
    goto LABEL_5;
  v6 = v4;
  v8 = a2;
  vvexp(v5, a1, &v8);
  *(_QWORD *)(v6 + 16) = a2;
  return v6;
}

void sub_22ABBC768(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  char v19;
  uint64_t v20;

  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  if ((a4 & 1) == 0)
  {
    v13 = 0;
    goto LABEL_17;
  }
  v18[0] = *(_QWORD *)a1;
  v18[1] = v9;
  v19 = v10;
  v20 = v11;
  sub_22AB67D38((uint64_t)v18);
  if ((v9 & 0x8000000000000000) == 0)
  {
    v13 = v12;
    v17 = a2;
    if (v9)
    {
      v14 = 0;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22AB88498();
          v11 = v15;
        }
        v16 = v9;
        if ((v10 & 1) != 0)
        {
          if ((unsigned __int128)((uint64_t)v14 * (__int128)v8) >> 64 != (uint64_t)(v14 * v8) >> 63)
            goto LABEL_22;
          v16 = 1;
        }
        if (v14 >= *(_QWORD *)(v13 + 16))
          break;
        if (v8 > 0x7FFFFFFF)
          goto LABEL_19;
        if (v8 < (uint64_t)0xFFFFFFFF80000000)
          goto LABEL_20;
        if (v16 > 0x7FFFFFFF)
          goto LABEL_21;
        cblas_dscal_NEWLAPACK();
        if (v9 == ++v14)
          goto LABEL_15;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_15:
    a2 = v17;
LABEL_17:
    *(_QWORD *)a5 = v8;
    *(_QWORD *)(a5 + 8) = v9;
    *(_BYTE *)(a5 + 16) = v10;
    *(_QWORD *)(a5 + 24) = v11;
    *(_QWORD *)(a5 + 32) = a2;
    *(_QWORD *)(a5 + 40) = a3;
    *(_QWORD *)(a5 + 48) = v13;
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_22ABBC8AC()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = __OFSUB__(v1, 1);
  v3 = v1 - 1;
  if (v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  v4 = *(_QWORD *)(v0 + 8);
  result = v4 * v3;
  if ((unsigned __int128)(v4 * (__int128)v3) >> 64 != (v4 * v3) >> 63)
LABEL_5:
    __break(1u);
  return result;
}

void sub_22ABBC8D8(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;

  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2 < 0)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    if (v2)
    {
      v3 = 0;
      v4 = *(_QWORD *)(v1 + 24);
      v5 = *(double **)v1;
      v6 = *(_QWORD *)(v1 + 8);
      while ((unsigned __int128)(v3 * (__int128)v4) >> 64 == (v3 * v4) >> 63)
      {
        if (v6)
        {
          v7 = v5;
          v8 = v6;
          if (v6 < 1)
            goto LABEL_22;
          do
          {
            *v7++ = a1;
            --v8;
          }
          while (v8);
        }
        ++v3;
        v5 += v4;
        if (v3 == v2)
          return;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
  }
  else
  {
    v9 = *(_QWORD *)(v1 + 8);
    if (v9 < 0)
    {
LABEL_25:
      __break(1u);
      return;
    }
    if (v9)
    {
      v10 = 0;
      v11 = *(double **)v1;
      v13 = *(_QWORD *)(v1 + 16);
      v12 = *(_QWORD *)(v1 + 24);
      while ((unsigned __int128)(v10 * (__int128)v12) >> 64 == (v10 * v12) >> 63)
      {
        if (v13)
        {
          v14 = v11;
          v15 = v13;
          if (v13 < 1)
            goto LABEL_23;
          do
          {
            *v14++ = a1;
            --v15;
          }
          while (v15);
        }
        ++v10;
        v11 += v12;
        if (v10 == v9)
          return;
      }
      goto LABEL_21;
    }
  }
}

double sub_22ABBC9B8(uint64_t a1)
{
  return sub_22ABB8CB8(a1, (void (*)(double *__return_ptr, uint64_t, _QWORD, uint64_t))sub_22ABBFCA8);
}

void sub_22ABBCA0C(uint64_t isStackAllocationSafe@<X0>, uint64_t *a2@<X3>, _QWORD *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v4 = a2[5];
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  v7 = *a2;
  v6 = a2[1];
  v22[0] = isStackAllocationSafe;
  v22[1] = v5;
  v22[2] = v6;
  v22[3] = v6;
  v23 = 0;
  v21 = 0;
  if (v7 < 0)
    goto LABEL_26;
  if (v7)
  {
    v17 = a3;
    v18 = a2;
    v8 = 0;
    v9 = a2[4];
    v10 = v9 + 32;
    v11 = *(_QWORD *)(v9 + 16);
    v19 = v10;
    v20 = v11;
    if ((unint64_t)(8 * v5) <= 1)
      v12 = 1;
    else
      v12 = 8 * v5;
    while (v7 != v8)
    {
      if (v20 == v8)
        goto LABEL_22;
      if (v5 < 0)
        goto LABEL_23;
      if ((unint64_t)(v5 + 0x1000000000000000) >> 61)
        goto LABEL_24;
      v13 = *(_QWORD *)(v19 + 8 * v8);
      if (8 * v5 <= 1024
        || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
      {
        v14 = &v16;
        MEMORY[0x24BDAC7A8](isStackAllocationSafe);
        sub_22ABBCC1C((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v18, (uint64_t)v22, v8, v13, (long double *)&v21);
        if (v3)
        {
          swift_willThrow(isStackAllocationSafe);

          __break(1u);
LABEL_27:

          MEMORY[0x22E2E4E64](v14, -1, -1);
          __break(1u);
          return;
        }
      }
      else
      {
        v14 = (uint64_t *)swift_slowAlloc();
        sub_22ABBCC1C(v14, v5, v18, (uint64_t)v22, v8, v13, (long double *)&v21);
        if (v3)
          goto LABEL_27;
        isStackAllocationSafe = MEMORY[0x22E2E4E64](v14, -1, -1);
      }
      if (v7 == ++v8)
      {
        v15 = v21;
        a3 = v17;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v15 = 0;
LABEL_20:
  *a3 = v15;
}

void sub_22ABBCC1C(void *a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, long double *a7)
{
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double *v16;
  double v17;
  _OWORD v18[2];

  if (!a1)
    goto LABEL_13;
  v11 = a3[1];
  v18[0] = *a3;
  v18[1] = v11;
  if ((v11 & 1) == 0
    && (unsigned __int128)(a5 * (__int128)*((uint64_t *)&v18[0] + 1)) >> 64 != (a5 * *((_QWORD *)&v18[0] + 1)) >> 63)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  if (a2 >= 1)
    bzero(a1, 8 * a2);
  sub_22AA8EEDC((uint64_t)v18);
  UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
  sub_22AA8EF04((uint64_t)v18);
  v12 = sub_22ABBC6C4((const double *)a1, a2);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = 0.0;
  v15 = 0.0;
  if (v13)
  {
    v16 = (double *)(v12 + 32);
    do
    {
      v17 = *v16++;
      v15 = v15 + v17;
      --v13;
    }
    while (v13);
  }
  swift_release();
  if (a6 >= 1)
    v14 = *((double *)a1 + a6 - 1);
  *a7 = *a7 + log1p(v15) - v14;
}

void sub_22ABBCD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_8_104();
  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
  OUTLINED_FUNCTION_13_87((uint64_t (*)(uint64_t))sub_22ABBA7CC, v1, v0, MEMORY[0x24BEE4AE0] + 8, v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_12_85();
}

void sub_22ABBCDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, __int128 *a9)
{
  uint64_t v9;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  __int128 v26;
  _QWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _QWORD v32[4];
  char v33;
  uint64_t v34;

  *a8 = 0;
  sub_22AA8E768(a4, a5, a6, 0.0);
  v15 = *((_QWORD *)a9 + 5);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = *(_QWORD *)a9;
  v18 = *((_QWORD *)a9 + 1);
  v32[0] = a1;
  v32[1] = v17;
  v32[2] = v18;
  v32[3] = v18;
  v33 = 0;
  v20 = v18 * v17;
  if ((unsigned __int128)(v18 * (__int128)v17) >> 64 != (v18 * v17) >> 63)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!v20)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v21 = 0x100000 / v20;
  if (0x100000 / v20 <= 0)
  {
    if (v19 <= 1)
    {
LABEL_12:
      v26 = a9[1];
      v28 = *a9;
      v29 = v26;
      v30 = a9[2];
      v31 = *((_QWORD *)a9 + 6);
      sub_22ABBCF80((uint64_t)v32, (uint64_t)a8, a4, a5, a6);
      return;
    }
    v21 = 1;
  }
  else if (v21 >= v19)
  {
    goto LABEL_12;
  }
  v34 = v9;
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v23 = v19 + v21;
  if (!__OFADD__(v19, v21))
  {
    v24 = v23 - 1;
    if (!__OFSUB__(v23, 1))
    {
      v25 = v22;
      sub_22AA8EF2C();
      v27[1] = v27;
      MEMORY[0x24BDAC7A8](v24 / v21);
      sub_22ABDF4E8();

      return;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_22ABBCF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[4];
  uint64_t v37;
  uint64_t v38;

  v33 = a4;
  v34 = a5;
  v31 = a2;
  v32 = a3;
  v35 = a1;
  v38 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_6_125();
  v5 = v36[0];
  if ((v36[0] & 0x8000000000000000) != 0)
    goto LABEL_22;
  if (v36[0])
  {
    v6 = 0;
    v7 = *(_QWORD *)(v35 + 8);
    v8 = v37;
    v30 = v37 + 32;
    if ((unint64_t)(8 * v7) <= 1)
      v9 = 1;
    else
      v9 = 8 * v7;
    while (v5 != v6)
    {
      if (v6 >= *(_QWORD *)(v8 + 16))
        goto LABEL_19;
      if (v7 < 0)
        goto LABEL_20;
      if ((unint64_t)(v7 + 0x1000000000000000) >> 61)
        goto LABEL_21;
      v10 = *(void **)(v30 + 8 * v6);
      v11 = sub_22AB5D424((uint64_t)v36);
      if (8 * v7 >= 1025)
      {
        v11 = OUTLINED_FUNCTION_6_54();
        if ((v11 & 1) == 0)
        {
          v21 = (void *)OUTLINED_FUNCTION_4_12();
          OUTLINED_FUNCTION_1_106(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
          v19 = v10;
          if (!v10)
          {
            OUTLINED_FUNCTION_10_86();
            OUTLINED_FUNCTION_2_2();
          }
LABEL_23:

          OUTLINED_FUNCTION_10_86();
          OUTLINED_FUNCTION_2_2();
        }
      }
      MEMORY[0x24BDAC7A8](v11);
      OUTLINED_FUNCTION_1_106((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12, v13, v14, v15, v16, v17, v18, v29, v30);
      v19 = v10;
      v20 = OUTLINED_FUNCTION_10_86();
      if (v10)
      {
        swift_willThrow(v20);

        __break(1u);
        goto LABEL_23;
      }
      if (v5 == ++v6)
        goto LABEL_17;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
LABEL_17:
  OUTLINED_FUNCTION_3();
}

id sub_22ABBD124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, double *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t isStackAllocationSafe;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  char *v44;
  _QWORD v45[2];
  uint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  long double v57[2];

  v55 = a4;
  v57[1] = *(long double *)MEMORY[0x24BDAC8D0];
  v9 = *(_QWORD *)(a2 + 40);
  v10 = __OFSUB__(v9, 1);
  v11 = v9 - 1;
  if (v10)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v13 = *(_QWORD *)(a2 + 8);
  v14 = v13 * v11;
  if ((unsigned __int128)(v13 * (__int128)v11) >> 64 != (v13 * v11) >> 63)
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v14 < 0)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if ((unint64_t)(v14 + 0x1000000000000000) >> 61)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v16 = a1;
  v46 = a9;
  v47 = a6;
  v17 = *(_QWORD *)a2;
  v56 = v13 * v11;
  v18 = 8 * v14;
  v49 = a8;
  v50 = a5;
  v48 = a7;
  if (8 * v14 < 1025 || (a1 = swift_stdlib_isStackAllocationSafe(), (a1 & 1) != 0))
  {
    v45[1] = v45;
    v19 = MEMORY[0x24BDAC7A8](a1);
    v54 = (char *)v45 - v20;
    if (v56)
    {
      if (v56 < 1)
      {
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      bzero(v54, v18);
    }
    v57[0] = 0.0;
    v21 = v16 * a3;
    if ((unsigned __int128)(v16 * (__int128)a3) >> 64 != (v16 * a3) >> 63)
      goto LABEL_69;
    v22 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if ((unsigned __int128)(v22 * (__int128)a3) >> 64 != (v22 * a3) >> 63)
    {
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    if (v22 * a3 < v17)
      v17 = v22 * a3;
    if (v17 < v21)
      goto LABEL_72;
    if (v21 != v17)
    {
      v23 = *(_QWORD *)(a2 + 32);
      v24 = *(_QWORD *)(v55 + 8);
      v53 = *(_QWORD *)(v23 + 16);
      if ((unint64_t)(8 * v24) <= 1)
        v25 = 1;
      else
        v25 = 8 * v24;
      v51 = v23 + 32;
      v52 = (unint64_t)(v24 + 0x1000000000000000) >> 61;
      v26 = v21;
      while (v26 < v17)
      {
        if (v21 < 0)
          goto LABEL_58;
        if (v26 >= v53)
          goto LABEL_59;
        if (v24 < 0)
          goto LABEL_60;
        if (v52)
          goto LABEL_61;
        v27 = *(_QWORD *)(v51 + 8 * v26);
        isStackAllocationSafe = sub_22AB5D424(a2);
        if (8 * v24 < 1025
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x24BDAC7A8](isStackAllocationSafe);
          sub_22ABBD764((char *)v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v24, (_OWORD *)a2, v55, v26, v27, v57, (int)v54, v56, 1);
          sub_22AB5D468(a2);
        }
        else
        {
          v29 = (void *)swift_slowAlloc();
          sub_22ABBD764(v29, v24, (_OWORD *)a2, v55, v26, v27, v57, (int)v54, v56, 1);
          sub_22AB5D468(a2);
          MEMORY[0x22E2E4E64](v29, -1, -1);
        }
        if (v17 == ++v26)
          goto LABEL_31;
      }
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
LABEL_31:
    v30 = v50;
    objc_msgSend(v50, sel_lock, v19);
    v31 = v48;
    *v47 = v57[0] + *v47;
    UnsafeMutableVectorPointer<A>.add(_:scaledBy:)((uint64_t)v54, v56, 1, v31, v49, v46);
    return objc_msgSend(v30, sel_unlock);
  }
  else
  {
    v54 = (char *)swift_slowAlloc();
    if (v56)
    {
      if (v56 < 1)
        goto LABEL_80;
      bzero(v54, v18);
    }
    v57[0] = 0.0;
    v33 = v16 * a3;
    if ((unsigned __int128)(v16 * (__int128)a3) >> 64 != (v16 * a3) >> 63)
      goto LABEL_76;
    v34 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    if ((unsigned __int128)(v34 * (__int128)a3) >> 64 != (v34 * a3) >> 63)
    {
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
    }
    if (v34 * a3 < v17)
      v17 = v34 * a3;
    if (v17 < v33)
      goto LABEL_79;
    if (v33 != v17)
    {
      v35 = *(_QWORD *)(a2 + 32);
      v36 = *(_QWORD *)(v55 + 8);
      v53 = *(_QWORD *)(v35 + 16);
      if ((unint64_t)(8 * v36) <= 1)
        v37 = 1;
      else
        v37 = 8 * v36;
      v51 = v35 + 32;
      v52 = (unint64_t)(v36 + 0x1000000000000000) >> 61;
      v38 = v33;
      while (v38 < v17)
      {
        if (v33 < 0)
          goto LABEL_63;
        if (v38 >= v53)
          goto LABEL_64;
        if (v36 < 0)
          goto LABEL_65;
        if (v52)
          goto LABEL_66;
        v39 = *(_QWORD *)(v51 + 8 * v38);
        v40 = sub_22AB5D424(a2);
        if (8 * v36 < 1025 || (v40 = swift_stdlib_isStackAllocationSafe(), (v40 & 1) != 0))
        {
          MEMORY[0x24BDAC7A8](v40);
          sub_22ABBD764((char *)v45 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), v36, (_OWORD *)a2, v55, v38, v39, v57, (int)v54, v56, 1);
          sub_22AB5D468(a2);
        }
        else
        {
          v41 = (void *)swift_slowAlloc();
          sub_22ABBD764(v41, v36, (_OWORD *)a2, v55, v38, v39, v57, (int)v54, v56, 1);
          sub_22AB5D468(a2);
          MEMORY[0x22E2E4E64](v41, -1, -1);
        }
        if (v17 == ++v38)
          goto LABEL_56;
      }
      goto LABEL_62;
    }
LABEL_56:
    v42 = v50;
    objc_msgSend(v50, sel_lock);
    v43 = v48;
    *v47 = v57[0] + *v47;
    v44 = v54;
    UnsafeMutableVectorPointer<A>.add(_:scaledBy:)((uint64_t)v54, v56, 1, v43, v49, v46);
    objc_msgSend(v42, sel_unlock);
    return (id)MEMORY[0x22E2E4E64](v44, -1, -1);
  }
}

void sub_22ABBD764(void *a1, uint64_t a2, _OWORD *a3, int a4, uint64_t a5, uint64_t a6, long double *a7, int a8, uint64_t a9, uint64_t a10)
{
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  double v25;
  double v26;
  _OWORD v27[2];

  if (a1)
  {
    v14 = a3[1];
    v27[0] = *a3;
    v27[1] = v14;
    if ((v14 & 1) != 0
      || (unsigned __int128)(a5 * (__int128)*((uint64_t *)&v27[0] + 1)) >> 64 == (a5 * *((_QWORD *)&v27[0] + 1)) >> 63)
    {
      if (a2 >= 1)
        bzero(a1, 8 * a2);
      sub_22AA8EEDC((uint64_t)v27);
      UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
      sub_22AA8EF04((uint64_t)v27);
      v15 = sub_22ABBC6C4((const double *)a1, a2);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = 0.0;
      v18 = 0.0;
      if (v16)
      {
        v19 = (double *)(v15 + 32);
        do
        {
          v20 = *v19++;
          v18 = v18 + v20;
          --v16;
        }
        while (v16);
      }
      if (a6 >= 1)
        v17 = *((double *)a1 + a6 - 1);
      *a7 = *a7 + log1p(v18) - v17;
      static DenseVector<>./ infix(_:_:)();
      v22 = v21;
      isUniquelyReferenced_nonNull_native = swift_release();
      v24 = a6 - 1;
      if (a6 < 1)
        goto LABEL_16;
      sub_22AB56428(a6 - 1, v22);
      v26 = v25;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_22AB88498();
        v22 = isUniquelyReferenced_nonNull_native;
      }
      if (v24 < *(_QWORD *)(v22 + 16))
      {
        *(double *)(v22 + 8 * v24 + 32) = v26 + -1.0;
LABEL_16:
        MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
        sub_22A99CE8C();
        swift_retain();
        DenseVector.withUnsafeVectorPointer<A>(_:)();
        swift_release_n();
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

void sub_22ABBD9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_8_104();
  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
  OUTLINED_FUNCTION_13_87((uint64_t (*)(uint64_t))sub_22AA8EFC8, v1, v0, MEMORY[0x24BEE4AE0] + 8, v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_12_85();
}

void sub_22ABBDA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t *a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  char v23;

  *a8 = 0;
  sub_22AA8E768(a4, a5, a6, 0.0);
  sub_22ABBC8D8(0.0);
  v15 = a9[5];
  v16 = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = *a9;
  v18 = a9[1];
  v22[0] = a1;
  v22[1] = v16;
  v22[2] = v18;
  v22[3] = v18;
  v23 = 0;
  v19 = v18 * v16;
  if ((unsigned __int128)(v18 * (__int128)v16) >> 64 != (v18 * v16) >> 63)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v19 * v19;
  if ((unsigned __int128)(v19 * (__int128)v19) >> 64 != (v19 * v19) >> 63)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!v20)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v21 = 0x100000 / v20;
  if (0x100000 / v20 > 0)
  {
    if (v21 >= v17)
      goto LABEL_11;
LABEL_10:
    sub_22ABBDB50(v21);
    return;
  }
  if (v17 > 1)
  {
    v21 = 1;
    goto LABEL_10;
  }
LABEL_11:
  sub_22ABBDC98((uint64_t)v22, (uint64_t)a8, a4, a5, a6, a7);
}

void sub_22ABBDB50(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v7;
  uint64_t v8;

  OUTLINED_FUNCTION_6_125();
  if ((*(_BYTE *)(v2 + 32) & 1) != 0)
  {
    if ((unsigned __int128)(*(uint64_t *)(v2 + 24) * (__int128)*(uint64_t *)(v2 + 16)) >> 64 == (uint64_t)(*(_QWORD *)(v2 + 24) * *(_QWORD *)(v2 + 16)) >> 63)
      goto LABEL_5;
    __break(1u);
  }
  if ((unsigned __int128)(*(uint64_t *)(v2 + 8) * (__int128)*(uint64_t *)(v2 + 24)) >> 64 != (uint64_t)(*(_QWORD *)(v2 + 8) * *(_QWORD *)(v2 + 24)) >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_5:
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v4 = v8 + a1;
  if (__OFADD__(v8, a1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!a1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v4 != 0x8000000000000001 || a1 != -1)
  {
    v7 = v3;
    sub_22AA8EF2C();
    MEMORY[0x24BDAC7A8](v5 / a1);
    sub_22ABDF4E8();

    OUTLINED_FUNCTION_3();
    return;
  }
LABEL_17:
  __break(1u);
}

void sub_22ABBDC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];
  uint64_t v38;
  uint64_t v39;

  v34 = a5;
  v35 = a6;
  v32 = a3;
  v33 = a4;
  v31 = a2;
  v36 = a1;
  v39 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_6_125();
  v6 = v37[0];
  if ((v37[0] & 0x8000000000000000) != 0)
    goto LABEL_22;
  if (v37[0])
  {
    v7 = 0;
    v8 = *(_QWORD *)(v36 + 8);
    v9 = v38;
    v30 = v38 + 32;
    if ((unint64_t)(8 * v8) <= 1)
      v10 = 1;
    else
      v10 = 8 * v8;
    while (v6 != v7)
    {
      if (v7 >= *(_QWORD *)(v9 + 16))
        goto LABEL_19;
      if (v8 < 0)
        goto LABEL_20;
      if ((unint64_t)(v8 + 0x1000000000000000) >> 61)
        goto LABEL_21;
      v11 = *(void **)(v30 + 8 * v7);
      v12 = sub_22AB5D424((uint64_t)v37);
      if (8 * v8 >= 1025)
      {
        v12 = OUTLINED_FUNCTION_6_54();
        if ((v12 & 1) == 0)
        {
          v22 = (void *)OUTLINED_FUNCTION_4_12();
          OUTLINED_FUNCTION_0_112(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32);
          v20 = v11;
          if (!v11)
          {
            OUTLINED_FUNCTION_10_86();
            OUTLINED_FUNCTION_2_2();
          }
LABEL_23:

          OUTLINED_FUNCTION_10_86();
          OUTLINED_FUNCTION_2_2();
        }
      }
      MEMORY[0x24BDAC7A8](v12);
      OUTLINED_FUNCTION_0_112((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13, v14, v15, v16, v17, v18, v19, v30, v31, v32);
      v20 = v11;
      v21 = OUTLINED_FUNCTION_10_86();
      if (v11)
      {
        swift_willThrow(v21);

        __break(1u);
        goto LABEL_23;
      }
      if (v6 == ++v7)
        goto LABEL_17;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
LABEL_17:
  OUTLINED_FUNCTION_3();
}

__n128 sub_22ABBDE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, double *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __n128 result;

  sub_22AB5D424(a2);
  sub_22ABBE2DC(a2, a1, a3, a2, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  return result;
}

id sub_22ABBDEF0(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, double *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t isStackAllocationSafe;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  long double *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v42 = a5;
  v43 = a2;
  v40 = a4;
  v41 = a1;
  v44 = a3;
  v45 = *MEMORY[0x24BDAC8D0];
  v18 = a6 * a7;
  if ((unsigned __int128)(a6 * (__int128)a7) >> 64 != (a6 * a7) >> 63)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v19 = a6 + 1;
  if (__OFADD__(a6, 1))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((unsigned __int128)(v19 * (__int128)a7) >> 64 != (v19 * a7) >> 63)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 * a7 >= *(_QWORD *)a8)
    v21 = *(_QWORD *)a8;
  else
    v21 = v19 * a7;
  if (v21 < v18)
LABEL_35:
    __break(1u);
  if (v18 != v21)
  {
    v22 = *(_QWORD *)(a8 + 32);
    v37 = a9;
    v23 = *(_QWORD *)(a9 + 8);
    v24 = 8 * v23;
    v25 = v22 + 32;
    v26 = *(_QWORD *)(v22 + 16);
    if ((unint64_t)(8 * v23) <= 1)
      v27 = 1;
    else
      v27 = 8 * v23;
    v35[1] = v27;
    v36 = v25;
    v38 = (unint64_t)(v23 + 0x1000000000000000) >> 61;
    v39 = v26;
    v28 = a6 * a7;
    while (v28 < v21)
    {
      if (v18 < 0)
        goto LABEL_28;
      if (v28 >= v39)
        goto LABEL_29;
      if (v23 < 0)
        goto LABEL_30;
      if (v38)
        goto LABEL_31;
      v29 = *(_QWORD *)(v36 + 8 * v28);
      isStackAllocationSafe = sub_22AB5D424(a8);
      if (v24 < 1025
        || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
      {
        v31 = v35;
        MEMORY[0x24BDAC7A8](isStackAllocationSafe);
        sub_22ABBE898((char *)v35 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v23, (_OWORD *)a8, v37, v28, v29, v41, v42, v43, v44, v40);
        v33 = sub_22AB5D468(a8);
        if (v17)
        {
          swift_willThrow(v33);

          __break(1u);
LABEL_36:

          sub_22AB5D468(a8);
          MEMORY[0x22E2E4E64](v31, -1, -1);
          __break(1u);
LABEL_37:
          result = objc_msgSend((id)v24, sel_unlock);
          __break(1u);
          return result;
        }
      }
      else
      {
        v31 = (_QWORD *)swift_slowAlloc();
        sub_22ABBE898(v31, v23, (_OWORD *)a8, v37, v28, v29, v41, v42, v43, v44, v40);
        if (v17)
          goto LABEL_36;
        sub_22AB5D468(a8);
        MEMORY[0x22E2E4E64](v31, -1, -1);
      }
      if (v21 == ++v28)
        goto LABEL_25;
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
LABEL_25:
  v24 = (uint64_t)a10;
  objc_msgSend(a10, sel_lock);
  sub_22ABBE220(v42, a11, v41, a12, a13, a14, v43, v44, v40, a15, a16, a17);
  if (v17)
    goto LABEL_37;
  return objc_msgSend(a10, sel_unlock);
}

uint64_t sub_22ABBE220(uint64_t result, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((*(_BYTE *)(result + 32) & 1) != 0)
  {
    v13 = *(_QWORD *)(result + 16);
    v12 = *(_QWORD *)(result + 24);
    v14 = v12 * v13;
    if ((unsigned __int128)(v12 * (__int128)v13) >> 64 == (v12 * v13) >> 63)
    {
LABEL_5:
      v17 = *(_QWORD *)result;
      *a2 = *a3 + *a2;
      UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(a7, a8, a9, a4, a5, a6);
      return UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(v17, v14, 1, a10, a11, a12);
    }
    __break(1u);
  }
  v15 = *(_QWORD *)(result + 8);
  v16 = *(_QWORD *)(result + 24);
  v14 = v15 * v16;
  if ((unsigned __int128)(v15 * (__int128)v16) >> 64 == (v15 * v16) >> 63)
    goto LABEL_5;
  __break(1u);
  return result;
}

void sub_22ABBE2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, double *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  double *v27;
  id v28;
  uint64_t v29;
  double *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v14 = *(_QWORD *)(a1 + 40);
  v15 = v14 - 1;
  if (__OFSUB__(v14, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = *(_QWORD *)(a1 + 8);
  v18 = v17 * v15;
  if ((unsigned __int128)(v17 * (__int128)v15) >> 64 != (v17 * v15) >> 63)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = v18 * v18;
  if ((unsigned __int128)(v18 * (__int128)v18) >> 64 != (v18 * v18) >> 63)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v19 < 0)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  if ((unint64_t)(v19 + 0x1000000000000000) >> 61)
    goto LABEL_17;
  v38 = a8;
  v39 = a7;
  v40 = a2;
  v35 = a12;
  v36 = a11;
  v33 = a13;
  v34 = a10;
  v37 = a9;
  sub_22AB5D424(a4);
  v24 = a6;
  sub_22AB5D424(a4);
  isStackAllocationSafe = (uint64_t)v24;
  v41 = (id)isStackAllocationSafe;
  if (8 * v19 < 1025
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v27 = (double *)((char *)&v33 - v26);
    sub_22AB5D424(a4);
    v28 = v41;
    sub_22ABBE5C0(v27, v19, a1, v40, a3, a4, a5, v28, v39, v38, v37, v34, v36, v35, v33);
    if (v13)
      swift_willThrow(v29);
    sub_22AB5D468(a4);

  }
  else
  {
    v30 = (double *)swift_slowAlloc();
    sub_22AB5D424(a4);
    v31 = v41;
    sub_22ABBE5C0(v30, v19, a1, v40, a3, a4, a5, v31, v39, v38, v37, v34, v36, v35, v33);
    MEMORY[0x22E2E4E64](v30, -1, -1);
    sub_22AB5D468(a4);

  }
  sub_22AB5D468(a4);
  v32 = v41;

  sub_22AB5D468(a4);
}

void sub_22ABBE5C0(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, double *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t isStackAllocationSafe;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD v46[4];
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  isStackAllocationSafe = (uint64_t)sub_22ABB8CFC(a1, a2, 0.0);
  if (!a1)
LABEL_24:
    __break(1u);
  v24 = *(_QWORD *)(a3 + 40);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
    goto LABEL_19;
  }
  v27 = *(_QWORD *)(a3 + 8);
  v28 = v27 * v26;
  if ((unsigned __int128)(v27 * (__int128)v26) >> 64 != (v27 * v26) >> 63)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v46[0] = a1;
  v46[1] = v27 * v26;
  v46[2] = v27 * v26;
  v46[3] = v27 * v26;
  v47 = 0;
  if (v28 < 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((unint64_t)(v28 + 0x1000000000000000) >> 61)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v42 = a7;
  v43 = a6;
  v44 = a8;
  v38 = a12;
  v39 = a11;
  v40 = a10;
  v41 = a9;
  if (8 * v28 >= 1025)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
    {
      v34 = (void *)swift_slowAlloc();
      v35 = (uint64_t)v34;
      if (v28)
      {
        if (v28 < 1)
        {
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        v37 = (uint64_t)v34;
        bzero(v34, 8 * v28);
        v35 = v37;
      }
      v45 = 0;
      v31 = v44;
      v36 = v35;
      v32 = v43;
      sub_22ABBDEF0((double *)&v45, v35, v28, 1, (uint64_t)v46, a4, a5, v43, v42, v44, v41, v40, v39, v38, a13, a14, a15);
      MEMORY[0x22E2E4E64](v36, -1, -1);
      goto LABEL_17;
    }
  }
  v37 = (uint64_t)&v37;
  MEMORY[0x24BDAC7A8](isStackAllocationSafe);
  v30 = (char *)&v37 - v29;
  if (!v28)
    goto LABEL_11;
  if (v28 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  bzero((char *)&v37 - v29, 8 * v28);
LABEL_11:
  v45 = 0;
  v31 = v44;
  v32 = v43;
  v33 = sub_22ABBDEF0((double *)&v45, (uint64_t)v30, v28, 1, (uint64_t)v46, a4, a5, v43, v42, v44, v41, v40, v39, v38, a13, a14, a15);
  if (v15)
    swift_willThrow(v33);
LABEL_17:
  sub_22AB5D468(v32);

}

void sub_22ABBE898(void *a1, uint64_t a2, _OWORD *a3, int a4, uint64_t a5, uint64_t a6, long double *a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  unint64_t v26;
  double v27;
  double v28;
  uint64_t isUniquelyReferenced_nonNull_native;
  _OWORD v30[2];
  uint64_t v31;

  if (a1)
  {
    v15 = a3[1];
    v30[0] = *a3;
    v30[1] = v15;
    v31 = a5;
    if ((v15 & 1) != 0
      || (unsigned __int128)(a5 * (__int128)*((uint64_t *)&v30[0] + 1)) >> 64 == (a5 * *((_QWORD *)&v30[0] + 1)) >> 63)
    {
      if (a2 >= 1)
        bzero(a1, 8 * a2);
      sub_22AA8EEDC((uint64_t)v30);
      UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
      sub_22AA8EF04((uint64_t)v30);
      v16 = sub_22ABBC6C4((const double *)a1, a2);
      v17 = *(_QWORD *)(v16 + 16);
      v18 = 0.0;
      v19 = 0.0;
      if (v17)
      {
        v20 = (double *)(v16 + 32);
        do
        {
          v21 = *v20++;
          v19 = v19 + v21;
          --v17;
        }
        while (v17);
      }
      if (a6 >= 1)
        v18 = *((double *)a1 + a6 - 1);
      *a7 = *a7 + log1p(v19) - v18;
      static DenseVector<>./ infix(_:_:)();
      v23 = v22;
      v24 = swift_release();
      MEMORY[0x24BDAC7A8](v24);
      sub_22A99CE8C();
      swift_retain();
      DenseVector.withUnsafeVectorPointer<A>(_:)();
      v25 = a6 < 1;
      v26 = a6 - 1;
      if (v25)
      {
        isUniquelyReferenced_nonNull_native = swift_release();
        goto LABEL_17;
      }
      sub_22AB56428(v26, v23);
      v28 = v27;
      swift_release();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_22AB88498();
        v23 = isUniquelyReferenced_nonNull_native;
      }
      if (v26 < *(_QWORD *)(v23 + 16))
      {
        *(double *)(v23 + 8 * v26 + 32) = v28 + -1.0;
LABEL_17:
        MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
        swift_retain();
        DenseVector.withUnsafeVectorPointer<A>(_:)();
        swift_release_n();
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_22ABBEB6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _OWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v4;
  v12[2] = *(_OWORD *)(v3 + 32);
  v13 = *(_QWORD *)(v3 + 48);
  v5 = a3 * a3;
  if ((unsigned __int128)(a3 * (__int128)a3) >> 64 != (a3 * a3) >> 63)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v5 < 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  if ((unint64_t)(v5 + 0x1000000000000000) >> 61)
    goto LABEL_13;
  sub_22AB5D424((uint64_t)v12);
  if (8 * v5 > 1024 && !OUTLINED_FUNCTION_6_54())
    goto LABEL_8;
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_7_107((uint64_t)v12 - v8);
  result = OUTLINED_FUNCTION_15_84();
  if (a1)
  {
    swift_willThrow(result);

    __break(1u);
LABEL_8:
    v10 = OUTLINED_FUNCTION_4_12();
    OUTLINED_FUNCTION_7_107(v10);
    if (!a1)
    {
      OUTLINED_FUNCTION_15_84();
      OUTLINED_FUNCTION_2_2();
    }

    OUTLINED_FUNCTION_15_84();
    OUTLINED_FUNCTION_2_2();
  }
  return result;
}

uint64_t sub_22ABBECD4(uint64_t result, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6)
{
  __int128 v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v6 = a4[1];
  v16 = *a4;
  v17 = v6;
  v7 = *((_QWORD *)a4 + 5);
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v12 = (char *)result;
    v13 = *((_QWORD *)&v16 + 1);
    v18 = a6;
    v19 = *((_QWORD *)&v16 + 1);
    v20 = v9;
    v21 = *((_QWORD *)&v16 + 1);
    v22 = 1;
    if ((v17 & 1) != 0)
    {
      v14 = v16;
LABEL_6:
      v15 = (_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * a5 + 32);
      sub_22AA8EEDC((uint64_t)&v16);
      sub_22ABBF26C(v15, v13, v14, v12, a2, a3);
      return sub_22AA8EF04((uint64_t)&v16);
    }
    if ((unsigned __int128)(a5 * (__int128)*((uint64_t *)&v16 + 1)) >> 64 == (a5 * *((_QWORD *)&v16 + 1)) >> 63)
    {
      v14 = 1;
      a5 *= *((_QWORD *)&v16 + 1);
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

void sub_22ABBEDB8(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v8 = *(_QWORD *)(a3 + 8);
  v9 = v8 * v8;
  if ((unsigned __int128)(v8 * (__int128)v8) >> 64 != (v8 * v8) >> 63)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v9 < 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  if ((unint64_t)(v9 + 0x1000000000000000) >> 61)
    goto LABEL_13;
  v12 = isStackAllocationSafe;
  if (8 * v9 <= 1024 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v21 = (char *)&v24 - v20;
    if (v12)
    {
      v25 = v12;
      v26 = a5;
      v27 = a5;
      v28 = a5;
      v29 = 1;
      v30 = v21;
      v31 = v8;
      v32 = v8;
      v33 = v8;
      v34 = 1;
      sub_22ABBEFB4(v19, v16, a5, v18, &v25, (uint64_t *)&v30, v17);
      return;
    }
    __break(1u);
    goto LABEL_15;
  }
  v22 = swift_slowAlloc();
  if (!v12)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v23 = v22;
  v25 = v12;
  v26 = a5;
  v27 = a5;
  v28 = a5;
  v29 = 1;
  v30 = (char *)v22;
  v31 = v8;
  v32 = v8;
  v33 = v8;
  v34 = 1;
  sub_22ABBEFB4(a7, a4, a5, a6, &v25, (uint64_t *)&v30, a8);
  MEMORY[0x22E2E4E64](v23, -1, -1);
}

void sub_22ABBEFB4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  void (*v20)(_BYTE *, _QWORD);
  double *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  BOOL v40;
  uint64_t v42;
  char v43;
  _BYTE v45[32];

  v14 = *(_QWORD *)v7;
  v13 = *(_QWORD *)(v7 + 8);
  v43 = *(_BYTE *)(v7 + 16);
  v15 = *(_QWORD *)(v7 + 24);
  v16 = *(_QWORD *)(v7 + 40);
  sub_22ABBC8D8(0.0);
  sub_22ABBF26C(a2, a3, a4, a2, a3, a4);
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v42 = v16;
  if (a3)
  {
    v17 = 0;
    while ((unsigned __int128)(v17 * (__int128)a4) >> 64 == (v17 * a4) >> 63)
    {
      v18 = v17 + 1;
      v19 = *(double *)&a2[8 * v17 * a4];
      v20 = (void (*)(_BYTE *, _QWORD))sub_22ABBF704((uint64_t)v45, v17, v17);
      *v21 = v19 + *v21;
      v20(v45, 0);
      v17 = v18;
      if (a3 == v18)
        goto LABEL_6;
    }
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_6:
  sub_22ABBC8D8(0.0);
  if ((v43 & 1) != 0)
  {
    v22 = v42;
  }
  else
  {
    v22 = v42;
    if ((unsigned __int128)(a1 * (__int128)v13) >> 64 != (a1 * v13) >> 63)
    {
LABEL_45:
      __break(1u);
      return;
    }
    v14 = 1;
    a1 *= v13;
  }
  swift_retain();
  sub_22ABBF26C((_QWORD *)(v15 + 32 + 8 * a1), v13, v14, (char *)(v15 + 32 + 8 * a1), v13, v14);
  swift_release();
  v23 = v22 - 1;
  if (__OFSUB__(v22, 1))
    goto LABEL_42;
  if (v23 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v22 != 1)
  {
    if (v13 < 0)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = *a5;
    v28 = a5[1];
    v29 = 8 * v13;
    while (v26 != v23)
    {
      if (v13)
      {
        v30 = 0;
        v31 = a7[1];
        v33 = *a6;
        v32 = a6[1];
        v34 = *a7 + v31 * v24;
        while (2)
        {
          if (v30 == v13)
            goto LABEL_35;
          if (__OFADD__(v25, v30))
            goto LABEL_36;
          if ((unsigned __int128)((v25 + v30) * (__int128)v31) >> 64 != ((v25 + v30) * v31) >> 63)
            goto LABEL_37;
          if ((unsigned __int128)(v30 * (__int128)v32) >> 64 != (v30 * v32) >> 63)
            goto LABEL_38;
          v35 = 0;
          v36 = 0;
          ++v30;
          v37 = v34;
          do
          {
            if (v36 == v23)
            {
              __break(1u);
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
            v38 = 0;
            v39 = *(double *)(v27 + 8 * v36);
            do
            {
              *(double *)(v37 + 8 * v38) = *(double *)(v37 + 8 * v38) + v39 * *(double *)(v33 + 8 * v38);
              ++v38;
            }
            while (v13 != v38);
            v40 = __OFADD__(v35, v13);
            v35 += v13;
            if (v40)
              goto LABEL_33;
            ++v36;
            v37 += v29;
          }
          while (v36 != v23);
          v34 += 8 * v31;
          v33 += 8 * v32;
          if (v30 != v13)
            continue;
          break;
        }
      }
      v40 = __OFADD__(v25, v13);
      v25 += v13;
      if (v40)
        goto LABEL_40;
      ++v26;
      v27 += 8 * v28;
      v24 += v29;
      if (v26 == v23)
        return;
    }
    goto LABEL_39;
  }
}

uint64_t sub_22ABBF26C(_QWORD *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  if (a3 != 1)
  {
    if (a6 != 1)
    {
      v32 = a2 + a5;
      if (__OFADD__(a2, a5))
      {
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      if (v32 < 0)
      {
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
      }
      if ((unint64_t)(v32 + 0x1000000000000000) >> 61)
        goto LABEL_76;
      if (8 * v32 <= 1024 || OUTLINED_FUNCTION_6_54())
      {
        OUTLINED_FUNCTION_6();
        MEMORY[0x24BDAC7A8](v33);
        result = OUTLINED_FUNCTION_5_101((uint64_t)&v58 - v34, v35, v36, v37, v38, v39, v40, v41, v58);
        if (!a4)
          return result;
        swift_willThrow(result);

        __break(1u);
      }
      else
      {
        v50 = OUTLINED_FUNCTION_4_12();
        OUTLINED_FUNCTION_5_101(v50, v51, v52, v53, v54, v55, v56, v57, v58);
        if (!a4)
          goto LABEL_79;
      }

      OUTLINED_FUNCTION_2_2();
    }
    v17 = *(unsigned __int8 *)(v6 + 32);
    if (*(_BYTE *)(v6 + 32))
      v18 = 1;
    else
      v18 = a5;
    v59 = a4;
    v60 = 1;
    v61 = a5;
    v62 = v18;
    v63 = v17;
    if (a2 < 0)
      goto LABEL_71;
    if ((unint64_t)(a2 + 0x1000000000000000) >> 61)
    {
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    if (8 * a2 <= 1024 || OUTLINED_FUNCTION_6_54())
    {
      OUTLINED_FUNCTION_6();
      MEMORY[0x24BDAC7A8](v19);
      v22 = (char *)&v58 - v21;
      if (v17)
        v23 = a2;
      else
        v23 = 1;
      v64 = v22;
      v65 = a2;
      v66 = 1;
      v67 = v23;
      v68 = v17;
      if (!a2)
        return OUTLINED_FUNCTION_3_119((uint64_t)&v64, v20, (uint64_t)&v59);
      v24 = 0;
      while ((unsigned __int128)(v24 * (__int128)a3) >> 64 == (v24 * a3) >> 63)
      {
        *(_QWORD *)&v22[8 * v24] = a1[v24 * a3];
        if (a2 == ++v24)
          return OUTLINED_FUNCTION_3_119((uint64_t)&v64, v20, (uint64_t)&v59);
      }
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v42 = OUTLINED_FUNCTION_4_12();
    if (v17)
      v44 = a2;
    else
      v44 = 1;
    v64 = (char *)v42;
    v65 = a2;
    v66 = 1;
    v67 = v44;
    v68 = v17;
    if (a2)
    {
      v45 = 0;
      while ((unsigned __int128)(v45 * (__int128)a3) >> 64 == (v45 * a3) >> 63)
      {
        *(_QWORD *)(v42 + 8 * v45) = a1[v45 * a3];
        if (a2 == ++v45)
          goto LABEL_55;
      }
      goto LABEL_68;
    }
LABEL_55:
    OUTLINED_FUNCTION_3_119((uint64_t)&v64, v43, (uint64_t)&v59);
LABEL_79:
    JUMPOUT(0x22E2E4E64);
  }
  v12 = *(unsigned __int8 *)(v6 + 32);
  if (a6 != 1)
  {
    if (*(_BYTE *)(v6 + 32))
      v25 = a2;
    else
      v25 = 1;
    v59 = a1;
    v60 = a2;
    v61 = 1;
    v62 = v25;
    v63 = v12;
    if (a5 < 0)
      goto LABEL_72;
    if ((unint64_t)(a5 + 0x1000000000000000) >> 61)
    {
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    if (8 * a5 <= 1024 || OUTLINED_FUNCTION_6_54())
    {
      OUTLINED_FUNCTION_6();
      MEMORY[0x24BDAC7A8](v26);
      v29 = (char *)&v58 - v28;
      if (v12)
        v30 = 1;
      else
        v30 = a5;
      v64 = v29;
      v65 = 1;
      v66 = a5;
      v67 = v30;
      v68 = v12;
      if (!a5)
        return OUTLINED_FUNCTION_3_119((uint64_t)&v59, v27, (uint64_t)&v64);
      v31 = 0;
      while ((unsigned __int128)(v31 * (__int128)a6) >> 64 == (v31 * a6) >> 63)
      {
        *(_QWORD *)&v29[8 * v31] = *(_QWORD *)&a4[8 * v31 * a6];
        if (a5 == ++v31)
          return OUTLINED_FUNCTION_3_119((uint64_t)&v59, v27, (uint64_t)&v64);
      }
      goto LABEL_67;
    }
    v46 = OUTLINED_FUNCTION_4_12();
    v64 = (char *)v46;
    v65 = 1;
    if (v12)
      v48 = 1;
    else
      v48 = a5;
    v66 = a5;
    v67 = v48;
    v68 = v12;
    if (a5)
    {
      v49 = 0;
      while ((unsigned __int128)(v49 * (__int128)a6) >> 64 == (v49 * a6) >> 63)
      {
        *(_QWORD *)(v46 + 8 * v49) = *(_QWORD *)&a4[8 * v49 * a6];
        if (a5 == ++v49)
          goto LABEL_63;
      }
      goto LABEL_69;
    }
LABEL_63:
    OUTLINED_FUNCTION_3_119((uint64_t)&v59, v47, (uint64_t)&v64);
    goto LABEL_79;
  }
  if (*(_BYTE *)(v6 + 32))
    v13 = 1;
  else
    v13 = a5;
  if (*(_BYTE *)(v6 + 32))
    v14 = a2;
  else
    v14 = 1;
  v59 = a1;
  v60 = a2;
  v61 = 1;
  v62 = v14;
  v63 = v12;
  v64 = a4;
  v65 = 1;
  v66 = a5;
  v67 = v13;
  v68 = v12;
  return OUTLINED_FUNCTION_3_119((uint64_t)&v59, a2, (uint64_t)&v64);
}

uint64_t (*sub_22ABBF704(uint64_t a1, uint64_t a2, uint64_t a3))(_QWORD, _QWORD)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(_QWORD, _QWORD);

  v4 = *(_QWORD *)(v3 + 24);
  if ((*(_BYTE *)(v3 + 32) & 1) != 0)
  {
    v5 = a3 * v4;
    if ((unsigned __int128)(a3 * (__int128)v4) >> 64 != (a3 * v4) >> 63)
    {
      __break(1u);
      goto LABEL_10;
    }
    v4 = v5 + a2;
    if (!__OFADD__(v5, a2))
      return nullsub_1;
    __break(1u);
  }
  if ((unsigned __int128)(a2 * (__int128)v4) >> 64 != (a2 * v4) >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!__OFADD__(a2 * v4, a3))
    return nullsub_1;
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_22ABBF764(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a4 + 40);
  v6 = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(a4 + 8);
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v7)
  {
    if (v6 < (uint64_t)0xFFFFFFFF80000000)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    if (v6 > 0x7FFFFFFF)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    if (v7 >> 31)
    {
LABEL_16:
      __break(1u);
      return result;
    }
    v8 = result;
    v9 = a5 + 32;
    v10 = *(_QWORD *)(a5 + 16);
    v11 = *(_QWORD *)(a4 + 8);
    while (v10)
    {
      v9 += 8;
      result = cblas_dscal_NEWLAPACK();
      --v10;
      v8 += 8;
      if (!--v11)
        return result;
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

void sub_22ABBF828(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = sub_22ABBC9B8(a1);
}

uint64_t sub_22ABBF854(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  char v17;
  _QWORD v18[4];
  char v19;

  if (!result)
    goto LABEL_25;
  v9 = *(unsigned __int8 *)(a6 + 32);
  if (*(_BYTE *)(a6 + 32))
    v10 = a4;
  else
    v10 = 1;
  v16[0] = result;
  v16[1] = a4;
  v16[2] = 1;
  v16[3] = v10;
  v17 = v9;
  if (v9)
    v11 = 1;
  else
    v11 = a8;
  v18[0] = result + 8 * a4;
  v18[1] = 1;
  v18[2] = a8;
  v18[3] = v11;
  v19 = v9;
  if (a4 < 0)
    goto LABEL_23;
  if (a4)
  {
    v12 = 0;
    while ((unsigned __int128)(v12 * (__int128)a5) >> 64 == (v12 * a5) >> 63)
    {
      *(_QWORD *)(result + 8 * v12) = *(_QWORD *)(a3 + 8 * v12 * a5);
      if (a4 == ++v12)
        goto LABEL_13;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_13:
  if ((a8 & 0x8000000000000000) == 0)
  {
    if (!a8)
      return UnsafeMutableMatrixPointer<A>.addProductDouble(_:transposed:_:transposed:scaledBy:)((uint64_t)v16, 0, (uint64_t)v18, 0);
    v13 = 0;
    while (1)
    {
      v14 = a4 + v13;
      if (__OFADD__(a4, v13))
        goto LABEL_21;
      v15 = v13 * a9;
      if ((unsigned __int128)(v13 * (__int128)a9) >> 64 != (v13 * a9) >> 63)
        goto LABEL_22;
      ++v13;
      *(_QWORD *)(result + 8 * v14) = *(_QWORD *)(a7 + 8 * v15);
      if (a8 == v13)
        return UnsafeMutableMatrixPointer<A>.addProductDouble(_:transposed:_:transposed:scaledBy:)((uint64_t)v16, 0, (uint64_t)v18, 0);
    }
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t destroy for LogisticRegressionProblem()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for LogisticRegressionProblem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain();
  sub_22ABDEAEC();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LogisticRegressionProblem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LogisticRegressionProblem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LogisticRegressionProblem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LogisticRegressionProblem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LogisticRegressionProblem()
{
  return &type metadata for LogisticRegressionProblem;
}

void sub_22ABBFB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;

  sub_22ABBDA18(a1, a2, a3, a4, a5, a6, a7, a8, *(uint64_t **)(v8 + 16));
}

double sub_22ABBFBA8(uint64_t a1)
{
  uint64_t *v1;
  double result;

  *(_QWORD *)&result = sub_22ABBDE40(a1, v1[2], v1[3], v1[4], (void *)v1[5], (double *)v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12]).n128_u64[0];
  return result;
}

uint64_t sub_22ABBFBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22ABBEB6C(*(void **)(v2 + 24), a1, a2);
}

uint64_t sub_22ABBFC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22ABBFC88(a1, a2, a3);
}

void sub_22ABBFC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;

  sub_22ABBCDD0(a1, a2, a3, a4, a5, a6, a7, a8, *(__int128 **)(v8 + 16));
}

id sub_22ABBFC58(uint64_t a1)
{
  uint64_t v1;

  return sub_22ABBD124(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(double **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_22ABBFC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_22ABBECD4(a1, a2, a3, *(__int128 **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

void sub_22ABBFCA8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_22ABBCA0C(a1, *(uint64_t **)(v2 + 16), a2);
}

void OUTLINED_FUNCTION_0_112(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_22ABBE898(a1, v13, (_OWORD *)(v14 - 144), *(_QWORD *)(v14 - 160), v12, v11, *(long double **)(v14 - 200), *(_QWORD *)(v14 - 168), a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_3_119(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnsafeMutableMatrixPointer<A>.addProductDouble(_:transposed:_:transposed:scaledBy:)(a1, 0, a3, 0);
}

uint64_t OUTLINED_FUNCTION_5_101(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  return sub_22ABBF854(a1, v15, v13, v12, v14, v10, v11, v9, a9);
}

__n128 OUTLINED_FUNCTION_6_125()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 - 144) = *(_OWORD *)v0;
  *(_OWORD *)(v1 - 128) = v2;
  result = *(__n128 *)(v0 + 32);
  *(__n128 *)(v1 - 112) = result;
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 48);
  return result;
}

void OUTLINED_FUNCTION_7_107(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_22ABBEDB8(a1, v5, v7 - 128, v4, v3, v6, v2, v1);
}

__n128 OUTLINED_FUNCTION_8_104()
{
  __n128 *v0;

  return v0[2];
}

uint64_t OUTLINED_FUNCTION_10_86()
{
  uint64_t v0;

  return sub_22AB5D468(v0 - 144);
}

_QWORD *OUTLINED_FUNCTION_13_87(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return DenseVector.withUnsafeMutableVectorPointer<A>(_:)(a1, (uint64_t)&a9, a3);
}

uint64_t OUTLINED_FUNCTION_15_84()
{
  uint64_t v0;

  return sub_22AB5D468(v0 - 128);
}

uint64_t sub_22ABBFDD0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    return *(_QWORD *)(a1 + 8 * v1 + 24);
  else
    return 0;
}

double sub_22ABBFDF4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_22A9E7618(a1 + 32 * v2, (uint64_t)a2);
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_22ABBFE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22ABBFE38(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE6BCD0], a2);
}

uint64_t sub_22ABBFE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22ABBFE38(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE62918], a2);
}

uint64_t sub_22ABBFE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22ABBFE38(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE62DF0], a2);
}

uint64_t sub_22ABBFE38@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = v4 - 1;
    v7 = a2(0);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v6, v7);
    v8 = a3;
    v9 = 0;
    v10 = v7;
  }
  else
  {
    v10 = a2(0);
    v8 = a3;
    v9 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v8, v9, 1, v10);
}

uint64_t sub_22ABBFED0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    return *(_QWORD *)(a1 + 16 * v1 + 16);
  else
    return 0;
}

uint64_t sub_22ABBFF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;

  v7 = _s5StateOMa(0, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a5, a1, v7);
}

uint64_t sub_22ABBFF44(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5[4] = a4;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a3;
  v8 = a4[2];
  v5[6] = v8;
  v5[7] = *(_QWORD *)(v8 - 8);
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  v5[10] = a4[3];
  v9 = sub_22ABDE8A0();
  v5[11] = v9;
  v5[12] = *(_QWORD *)(v9 - 8);
  v10 = OUTLINED_FUNCTION_0_0();
  v5[13] = v10;
  v11 = (_QWORD *)swift_task_alloc();
  v5[14] = v11;
  *v11 = v5;
  v11[1] = sub_22ABC004C;
  return MultivariateLinearRegressor.Model.applied(to:eventHandler:)(v10, a2, 0, 0, a4);
}

uint64_t sub_22ABC004C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22ABC00E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t isStackAllocationSafe;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_68();
  v42 = v1;
  v43 = v2;
  v41 = v0;
  v40 = *MEMORY[0x24BDAC8D0];
  v3 = sub_22ABDE84C();
  v4 = 1;
  isStackAllocationSafe = sub_22A9A6674(1, v3);
  v9 = isStackAllocationSafe;
  v10 = (v8 >> 1) - v7;
  if (v8 >> 1 != v7)
  {
    if ((uint64_t)(v8 >> 1) <= v7)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v11 = (uint64_t *)(v6 + 8 * v7);
    v12 = 1;
    while (1)
    {
      v13 = *v11++;
      v4 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63)
        break;
      v12 = v4;
      if (!--v10)
        goto LABEL_6;
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_6:
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v14 + 72);
  if ((unsigned __int128)(v4 * (__int128)v15) >> 64 != (v4 * v15) >> 63)
    goto LABEL_25;
  v16 = *(unsigned __int8 *)(v14 + 80);
  if ((v16 & (unint64_t)(v16 + 1)) != 0)
    goto LABEL_22;
  if (v16 > 0xF)
  {
    v38 = isStackAllocationSafe;
LABEL_11:
    v39 = *(id *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 40);
    v19 = *(_QWORD *)(v0 + 48);
    v22 = *(_QWORD *)(v0 + 24);
    v21 = *(_QWORD *)(v0 + 32);
    v23 = swift_slowAlloc();
    sub_22ABC1DE4(v23, v4, v17, v22, v4, v20, v19, v18, *(_QWORD *)(v21 + 32));
    if (v39)
    {

      JUMPOUT(0x22E2E4E64);
    }
    MEMORY[0x22E2E4E64](v23, -1, -1);
    swift_unknownObjectRelease();
    goto LABEL_19;
  }
  if (v4 * v15 > 1024)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (!(_DWORD)isStackAllocationSafe)
    {
      v38 = v9;
      goto LABEL_11;
    }
  }
  v24 = *(void **)(v0 + 120);
  MEMORY[0x24BDAC7A8](isStackAllocationSafe);
  sub_22ABC1DE4((uint64_t)&v37 - v25, v4, v27, v28, v4, v29, v30, v31, *(_QWORD *)(v26 + 32));
  if (v24)
  {
    swift_willThrow(v32);

    return;
  }
  v33 = *(_QWORD *)(v0 + 72);
  v34 = *(_QWORD *)(v0 + 48);
  v35 = *(_QWORD *)(v0 + 16);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 56) + 32);
  v36(v33, *(_QWORD *)(v0 + 64), v34);
  swift_unknownObjectRelease();
  v36(v35, v33, v34);
LABEL_19:
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22ABC03DC()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MultivariateLinearRegressor.Model.weight.getter(uint64_t *a1)
{
  return sub_22ABC0468(a1, (uint64_t (*)(uint64_t))sub_22AAB72A4);
}

uint64_t MultivariateLinearRegressor.Model.bias.getter(uint64_t *a1)
{
  return sub_22ABC0468(a1, (uint64_t (*)(uint64_t))sub_22AAB7428);
}

uint64_t sub_22ABC0468(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_27_64(a1);
  return a2(v2);
}

uint64_t MultivariateLinearRegressor.Model.init(weight:bias:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = sub_22ABDE8A0();
  v13 = sub_22ABDF5D8();
  v14 = a6 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v14, a2, v13);
  _s5StateOMa(0, a3, a4, a5);
  return swift_storeEnumTagMultiPayload();
}

uint64_t MultivariateLinearRegressor.Model.inputSize.getter(uint64_t *a1)
{
  return sub_22ABC059C(a1, (uint64_t (*)(uint64_t))sub_22AAB6ED0);
}

uint64_t MultivariateLinearRegressor.Model.outputSize.getter(uint64_t *a1)
{
  return sub_22ABC059C(a1, (uint64_t (*)(uint64_t))sub_22AAB7124);
}

uint64_t sub_22ABC059C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_27_64(a1);
  return a2(v2);
}

uint64_t MultivariateLinearRegressor.Model.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v7 = a5[2];
  v6[9] = v7;
  v8 = _s5StateOMa(0, v7, a5[3], a5[4]);
  v6[10] = v8;
  v6[11] = *(_QWORD *)(v8 - 8);
  v6[12] = OUTLINED_FUNCTION_0_0();
  v9 = sub_22ABDE8A0();
  v6[13] = v9;
  v10 = sub_22ABDF5D8();
  v6[14] = v10;
  v6[15] = *(_QWORD *)(v10 - 8);
  v6[16] = OUTLINED_FUNCTION_0_0();
  v6[17] = *(_QWORD *)(v9 - 8);
  v6[18] = OUTLINED_FUNCTION_23_0();
  v6[19] = OUTLINED_FUNCTION_38_0();
  v6[20] = OUTLINED_FUNCTION_38_0();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v6[21] = v11;
  v6[22] = *(_QWORD *)(v11 - 8);
  v6[23] = OUTLINED_FUNCTION_23_0();
  v6[24] = OUTLINED_FUNCTION_38_0();
  v6[25] = OUTLINED_FUNCTION_38_0();
  v6[26] = OUTLINED_FUNCTION_38_0();
  v6[27] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22ABC06BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = OUTLINED_FUNCTION_29_48();
  v2 = sub_22ABBFDD0(v1);
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = OUTLINED_FUNCTION_34_50();
  if ((v4 & 1) != 0 || v2 != v5)
  {
    v7 = OUTLINED_FUNCTION_29_48();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v0[2] = OUTLINED_FUNCTION_34_50();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22A9B7B50();
    v8 = swift_allocError();
    *(_QWORD *)v9 = v7;
    *(_QWORD *)(v9 + 8) = 0xD000000000000025;
    *(_QWORD *)(v9 + 16) = 0x800000022ABE7AB0;
    *(_QWORD *)(v9 + 24) = 0;
    *(_BYTE *)(v9 + 32) = 6;
    swift_willThrow(v8);
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    swift_task_dealloc();
    OUTLINED_FUNCTION_92();
    __asm { BR              X0 }
  }
  if (swift_dynamicCastMetatype())
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[17] + 16))(v0[20], v0[4], v0[13]);
    swift_dynamicCast();
    v6 = (_QWORD *)swift_task_alloc();
    v0[28] = v6;
    *v6 = v0;
    v6[1] = sub_22ABC0A1C;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[11] + 16))(v0[12], v0[8], v0[10]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = v0[19];
      v12 = v0[16];
      v13 = v0[17];
      v14 = v0[14];
      v15 = v0[15];
      v16 = v0[12];
      v17 = v16 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      OUTLINED_FUNCTION_40_42(v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v17, v14);
      v18 = (_QWORD *)swift_task_alloc();
      v0[30] = v18;
      *v18 = v0;
      v18[1] = sub_22ABC0AE4;
      OUTLINED_FUNCTION_92();
      return sub_22ABC0FE4(v19, v20, v21, v22, v23);
    }
    v26 = v0[17];
    v25 = v0[18];
    v27 = v0[13];
    OUTLINED_FUNCTION_30_0(v0[11]);
    OUTLINED_FUNCTION_40_42(v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 16));
    v0[32] = sub_22A9A9038();
    v0[33] = MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v27);
    sub_22ABDE918();
    v28 = (_QWORD *)swift_task_alloc();
    v0[34] = v28;
    *v28 = v0;
    v28[1] = sub_22ABC0B88;
  }
  OUTLINED_FUNCTION_92();
  return sub_22ABC0E14(v29, v30, v31, v32, v33);
}

uint64_t sub_22ABC0A1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v2 + 176));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22ABC0A80()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_68();
  swift_dynamicCast();
  OUTLINED_FUNCTION_4_110();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_2_6(v0);
}

uint64_t sub_22ABC0AE4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 248) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22ABC0B34()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_21_72();
  OUTLINED_FUNCTION_3_107();
  OUTLINED_FUNCTION_4_110();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_2_6(v0);
}

uint64_t sub_22ABC0B88()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  v3 = v2[24];
  v4 = v2[21];
  v5 = *(void (**)(uint64_t, uint64_t))(v2[22] + 8);
  if (!v0)
    v2[36] = v5;
  v5(v3, v4);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22ABC0BF8()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_68();
  v1 = (void (*)(uint64_t, uint64_t))v0[36];
  v2 = v0[25];
  v3 = v0[21];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v0[22] + 16))(v0[23], v2, v3);
  sub_22ABDE918();
  v1(v2, v3);
  OUTLINED_FUNCTION_4_110();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_2_6(v4);
}

uint64_t sub_22ABC0CA0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 176));
  OUTLINED_FUNCTION_1_107();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22ABC0D00()
{
  uint64_t v0;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_21_72();
  OUTLINED_FUNCTION_3_107();
  OUTLINED_FUNCTION_1_107();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22ABC0D5C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_1_107();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22ABC0DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = OUTLINED_FUNCTION_35_41();
  v13 = _s5StateOMa(v9, v10, v11, v12);
  return a5(a1, a2, v13, a4);
}

uint64_t sub_22ABC0E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a1;
  v6[8] = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = OUTLINED_FUNCTION_23_0();
  v6[14] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22ABC0E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  __n128 *v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t inited;
  void (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v2 = sub_22ABDE84C();
  v3 = OUTLINED_FUNCTION_28_49(v2);
  if (v6 >> 1 == v5)
  {
LABEL_6:
    v9 = *(__n128 **)(v0 + 72);
    v18 = *(_QWORD *)(v0 + 96);
    v14 = v4;
    v15 = v3;
    v16 = v5;
    v17 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v10 = OUTLINED_FUNCTION_25_53();
    *(_OWORD *)(v10 + 16) = xmmword_22ABE9FB0;
    *(_QWORD *)(v10 + 32) = v1;
    OUTLINED_FUNCTION_16_81();
    swift_bridgeObjectRelease();
    v11 = (__n128 *)swift_task_alloc();
    OUTLINED_FUNCTION_39_48(v11, v9[1]);
    OUTLINED_FUNCTION_18_75();
    OUTLINED_FUNCTION_12_3();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(inited + 32) = MultivariateLinearRegressor.Model.outputSize.getter((uint64_t *)v9);
    sub_22ABC150C(v15, v14, v16, v17, inited);
    OUTLINED_FUNCTION_42_37();
    OUTLINED_FUNCTION_26_65();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_24_54(v18);
    OUTLINED_FUNCTION_41_43();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_46_0();
    v13 = (void (*)(void))OUTLINED_FUNCTION_19_3();
    v13();
  }
  else
  {
    if ((uint64_t)(v6 >> 1) > v5)
    {
      while (1)
      {
        OUTLINED_FUNCTION_36_48();
        if (!v8)
          break;
        if (v7 == 1)
          goto LABEL_6;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_22ABC0FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[11] = a5;
  v6[12] = v5;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  v6[13] = *(_QWORD *)(a5 + 16);
  v6[14] = *(_QWORD *)(a5 + 24);
  v7 = sub_22ABDE8A0();
  v6[15] = v7;
  v6[16] = *(_QWORD *)(v7 - 8);
  v6[17] = OUTLINED_FUNCTION_23_0();
  v6[18] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22ABC104C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t inited;
  void (*v13)(void);
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v2 = sub_22ABDE84C();
  v3 = OUTLINED_FUNCTION_28_49(v2);
  if (v6 >> 1 == v5)
  {
LABEL_6:
    v9 = *(uint64_t **)(v0 + 88);
    v20 = *(_QWORD *)(v0 + 128);
    v16 = v4;
    v17 = v3;
    v18 = v5;
    v19 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v10 = OUTLINED_FUNCTION_25_53();
    *(_OWORD *)(v10 + 16) = xmmword_22ABE9FB0;
    *(_QWORD *)(v10 + 32) = v1;
    v14 = *(__n128 *)(v0 + 104);
    v15 = *(__n128 *)(v0 + 72);
    OUTLINED_FUNCTION_16_81();
    swift_bridgeObjectRelease();
    v11 = (__n128 *)swift_task_alloc();
    *(__n128 *)((char *)OUTLINED_FUNCTION_39_48(v11, v14) + 56) = v15;
    OUTLINED_FUNCTION_18_75();
    OUTLINED_FUNCTION_12_3();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(inited + 32) = MultivariateLinearRegressor.Model.outputSize.getter(v9);
    sub_22ABC150C(v17, v16, v18, v19, inited);
    OUTLINED_FUNCTION_42_37();
    OUTLINED_FUNCTION_26_65();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_24_54(v20);
    OUTLINED_FUNCTION_41_43();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_46_0();
    v13 = (void (*)(void))OUTLINED_FUNCTION_19_3();
    v13();
  }
  else
  {
    if ((uint64_t)(v6 >> 1) > v5)
    {
      while (1)
      {
        OUTLINED_FUNCTION_36_48();
        if (!v8)
          break;
        if (v7 == 1)
          goto LABEL_6;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_22ABC11D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t *v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v12 + 32) = a5;
  v13 = (uint64_t *)type metadata accessor for MultivariateLinearRegressor.Model(0, a7, a8, a9);
  *(_QWORD *)(v12 + 40) = MultivariateLinearRegressor.Model.outputSize.getter(v13);
  return sub_22ABDE81C();
}

void sub_22ABC12C4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v11 = v10;
  v47 = a8;
  v48 = a1;
  v52 = a4;
  v53 = a3;
  v14 = *a1;
  if (v14)
  {
    v15 = (unint64_t)v48[1];
    if ((v15 & 0x8000000000000000) != 0)
      goto LABEL_27;
    if (v15)
      bzero(v14, 4 * v15);
  }
  if ((v53 & 0x8000000000000000) == 0)
  {
    if (!v53)
      return;
    v51 = a2;
    v16 = 0;
    v43 = MEMORY[0x24BEE4AE0] + 8;
    v44 = a6;
    v45 = a9;
    v46 = a10;
    while (v53 != v16)
    {
      if (!v52)
        goto LABEL_28;
      v17 = a6[2];
      v18 = v51;
      if (!v17)
        goto LABEL_20;
      if ((unsigned __int128)(v16 * (__int128)(uint64_t)a6[4]) >> 64 != (v16 * a6[4]) >> 63)
        goto LABEL_21;
      v19 = (uint64_t *)type metadata accessor for MultivariateLinearRegressor.Model(0, v47, v45, v46);
      v20 = MultivariateLinearRegressor.Model.inputSize.getter(v19);
      if (v17 < 2)
        goto LABEL_22;
      v50 = v11;
      v21 = *v48;
      if (!*v48)
        goto LABEL_29;
      v22 = *(_QWORD *)(v18 + 16);
      if (!v22)
        goto LABEL_23;
      v23 = *(_QWORD *)(v18 + 32);
      v24 = v16 * v23;
      if ((unsigned __int128)(v16 * (__int128)v23) >> 64 != (v16 * v23) >> 63)
        goto LABEL_24;
      v25 = v20;
      v26 = a6[5];
      v27 = MultivariateLinearRegressor.Model.outputSize.getter(v19);
      if (v22 < 2)
        goto LABEL_25;
      v49 = &v42;
      ++v16;
      v28 = *(_QWORD *)(v51 + 40);
      v29 = (uint64_t)v21 + 4 * v24;
      v30 = MEMORY[0x24BDAC7A8](v27);
      v37[0] = v29;
      v37[1] = v30;
      v38 = v28;
      v39 = v31;
      v40 = v25;
      v41 = v26;
      v32 = v30;
      v33 = v43;
      v34 = v50;
      v35 = sub_22ABC0DB0((uint64_t)sub_22ABC35B4, (uint64_t)&v36, (uint64_t)v19, v43, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AAB77F4);
      MEMORY[0x24BDAC7A8](v35);
      v38 = v29;
      v39 = v32;
      v40 = v28;
      sub_22ABC0DB0((uint64_t)sub_22ABC35EC, (uint64_t)v37, (uint64_t)v19, v33, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AAB7C1C);
      v11 = v34;
      a6 = v44;
      if (v53 == v16)
        return;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_22ABC150C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else if (!__OFADD__(*(_QWORD *)(a5 + 16), (a4 >> 1) - a3))
  {
    sub_22AA35C20();
    swift_unknownObjectRetain();
    sub_22A9A06D8();
    sub_22ABDEAEC();
    sub_22A9A063C();
    return;
  }
  __break(1u);
}

uint64_t sub_22ABC15BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t *v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v12 + 32) = a5;
  v13 = (uint64_t *)type metadata accessor for MultivariateLinearRegressor.Model(0, a9, a10, a11);
  *(_QWORD *)(v12 + 40) = MultivariateLinearRegressor.Model.outputSize.getter(v13);
  return sub_22ABDE81C();
}

uint64_t sub_22ABC16AC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t EnumTagSinglePayload;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[2];
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v69 = a8;
  v79 = a2;
  v80 = a7;
  v72 = a4;
  v73 = a5;
  v74 = a3;
  v82 = a11;
  v68 = sub_22ABDE8A0();
  v14 = sub_22ABDF5D8();
  v66 = *(_QWORD *)(v14 - 8);
  v67 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v65 = (char *)v63 - v16;
  v17 = *(_QWORD *)(a10 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = a12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v83 = *a1;
  v70 = a1;
  swift_getAssociatedConformanceWitness();
  v21 = a10;
  sub_22ABE0130();
  sub_22ABDFF20();
  v22 = v74;
  sub_22ABDF5FC();
  v71 = v17;
  result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, a10);
  if ((v22 & 0x8000000000000000) == 0)
  {
    if (!v22)
      return result;
    v24 = 0;
    v64 = a9;
    v63[1] = MEMORY[0x24BEE4AE0] + 8;
    v25 = v84;
    v26 = v82;
    v77 = a10;
    v78 = a6;
    while (v22 != v24)
    {
      result = sub_22ABDED08();
      if (!result)
        goto LABEL_27;
      v27 = *(_QWORD *)(a6 + 16);
      if (!v27)
        goto LABEL_20;
      v28 = *(_QWORD *)(a6 + 32);
      v29 = v24 * v28;
      if ((unsigned __int128)(v24 * (__int128)v28) >> 64 != (v24 * v28) >> 63)
        goto LABEL_21;
      v30 = result;
      v83 = v24;
      v31 = *(_QWORD *)(v71 + 72);
      v76 = (uint64_t *)type metadata accessor for MultivariateLinearRegressor.Model(0, v21, v26, v81);
      result = MultivariateLinearRegressor.Model.inputSize.getter(v76);
      if (v27 < 2)
        goto LABEL_22;
      v84 = v25;
      v32 = UnsafeVectorPointer.init(start:count:stride:)(v30 + v31 * v29, result, *(_QWORD *)(v78 + 40), v21);
      v34 = v33;
      v36 = v35;
      result = sub_22ABDED08();
      if (!result)
        goto LABEL_28;
      v37 = v79[2];
      if (!v37)
        goto LABEL_23;
      v38 = v79[4];
      v39 = v83 * v38;
      if ((unsigned __int128)(v83 * (__int128)v38) >> 64 != (v83 * v38) >> 63)
        goto LABEL_24;
      v40 = result;
      result = MultivariateLinearRegressor.Model.outputSize.getter(v76);
      if (v37 < 2)
        goto LABEL_25;
      v41 = result;
      v42 = v40 + v39 * v31;
      v43 = v77;
      v44 = UnsafeMutableVectorPointer.init(start:count:stride:)(v42, v41, v79[5], v77);
      v46 = v45;
      v47 = (uint64_t *)MEMORY[0x24BDAC7A8](v44);
      v49 = v81;
      v48 = v82;
      v63[-10] = v43;
      v63[-9] = v48;
      v63[-8] = v49;
      v63[-7] = v47;
      v75 = v50;
      v76 = v47;
      v63[-6] = v51;
      v63[-5] = v50;
      v63[-4] = v32;
      v63[-3] = v34;
      v63[-2] = v36;
      v52 = v68;
      MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v68);
      v53 = v84;
      sub_22AA3FF54();
      v84 = v53;
      v55 = (uint64_t)v65;
      v54 = v66;
      v56 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v64, v67);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v55, 1, v52);
      if ((_DWORD)EnumTagSinglePayload == 1)
      {
        v58 = v54;
        v59 = v56;
        a6 = v78;
        v22 = v74;
        v25 = v84;
      }
      else
      {
        MEMORY[0x24BDAC7A8](EnumTagSinglePayload);
        v63[-6] = v43;
        v63[-5] = v48;
        v60 = v76;
        v63[-4] = v49;
        v63[-3] = v60;
        v61 = v75;
        v63[-2] = v46;
        v63[-1] = v61;
        v62 = v84;
        sub_22AA40204();
        v25 = v62;
        v58 = *(_QWORD *)(v52 - 8);
        v59 = v52;
        a6 = v78;
        v22 = v74;
      }
      v24 = v83 + 1;
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v55, v59);
      v26 = v82;
      v21 = v77;
      if (v22 == v24)
        return result;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22ABC1B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16[2];

  v16[0] = a7;
  v16[1] = a3;
  v12 = *(_QWORD *)(a8 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22ABC1D10();
  UnsafeMutableVectorPointer<A>.addProduct(_:_:transposed:scaledBy:)(a1, a5, a6, v16[0], 0, (uint64_t)v14);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, a8);
}

uint64_t sub_22ABC1C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v21 = a6;
  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22ABC1D10();
  UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(a1, a2, a3, (uint64_t)v17, a4, a5, v21, a7, a9, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
    v29,
    v30);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, a7);
}

uint64_t sub_22ABC1D10()
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_22ABE0130();
  return sub_22ABDFF20();
}

void sub_22ABC1DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_22ABDE8A0();
  sub_22ABDE828();
  v11 = sub_22ABDF644();
  v12 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE1D40], v11);
  Collection<>.mean()(v11, v12, *(_QWORD *)(a9 + 16), v13, v14, v15, v16, v17, v18, v19, a7, a8, a9, a4, a5, a6, a1, a2, a1,
    a2);
}

uint64_t sub_22ABC1EC0()
{
  sub_22ABDE8A0();
  return sub_22ABDE828();
}

void sub_22ABC1F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v49 = a6;
  v50 = a7;
  v51 = a4;
  v47 = a1;
  v48 = a2;
  v14 = *(_QWORD *)(a11 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v46 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    if (!a5)
      return;
    v17 = 0;
    v58 = a13;
    v41 = a9;
    v42 = v14;
    v44 = (uint64_t *)(v51 + 32);
    v45 = a12;
    v43 = a5;
    while (a5 != v17)
    {
      if (!sub_22ABDED08())
        goto LABEL_17;
      v18 = (uint64_t *)type metadata accessor for MultivariateLinearRegressor.Model(0, a11, v45, v58);
      v19 = MultivariateLinearRegressor.Model.outputSize.getter(v18);
      if ((unsigned __int128)(v17 * (__int128)v19) >> 64 != (v17 * v19) >> 63)
        goto LABEL_13;
      v20 = *(_QWORD *)(v14 + 72);
      MultivariateLinearRegressor.Model.outputSize.getter(v18);
      v21 = sub_22ABDED14();
      v23 = v22;
      v24 = sub_22ABDED08();
      if (!v24)
        goto LABEL_18;
      v25 = *(_QWORD *)(v51 + 16);
      if (!v25)
        goto LABEL_14;
      v26 = v17 * *v44;
      if ((unsigned __int128)(v17 * (__int128)*v44) >> 64 != v26 >> 63)
        goto LABEL_15;
      v52 = v17 + 1;
      v27 = v24 + v26 * v20;
      v28 = v18;
      v29 = v44;
      v30 = MultivariateLinearRegressor.Model.outputSize.getter(v28);
      v31 = UnsafeVectorPointer.init(start:count:stride:)(v27, v30, v29[v25 - 1], a11);
      v56 = v21;
      v57 = v23;
      v53 = v31;
      v54 = v32;
      v55 = v33;
      v34 = sub_22ABDED20();
      v37 = type metadata accessor for UnsafeVectorPointer(0, a11, v35, v36);
      MEMORY[0x22E2E4D80](MEMORY[0x24BEE09E8], v34);
      MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeVectorPointer<A>, v37);
      v38 = v46;
      a5 = v43;
      meanSquaredError<A, B, C>(_:_:)();
      v39 = v41 + v20 * v17;
      v14 = v42;
      (*(void (**)(uint64_t, char *, uint64_t))(v42 + 40))(v39, v38, a11);
      v17 = v52;
      if (a5 == v52)
        return;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
}

uint64_t sub_22ABC2198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9AFDDC;
  return MultivariateLinearRegressor.Model.applied(to:eventHandler:)(a1, a2, a3, a4, a5);
}

uint64_t sub_22ABC2218(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  result = _s5StateOMa(319, a1[2], a1[3], a1[4]);
  if (v2 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22ABC2288(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*(_QWORD *)(_s5StateOMa(0, a3[2], a3[3], a3[4]) - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22ABDE8A0();
      v7 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = sub_22ABDF5D8();
      v9 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6))
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v7((uint64_t *)v10, (uint64_t *)v11, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
      }
    }
    else
    {
      v13 = sub_22ABDD7D8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
      v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v18 = v17[12];
      v19 = &v15[v18];
      v20 = &v16[v18];
      v21 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
      v23 = v17[13];
      v24 = &v15[v23];
      v25 = &v16[v23];
      v26 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      *(_DWORD *)&v15[v17[14]] = *(_DWORD *)&v16[v17[14]];
      *(_QWORD *)&v15[v17[15]] = *(_QWORD *)&v16[v17[15]];
      v28 = v17[16];
      v29 = &v15[v28];
      v30 = &v16[v28];
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      v32(v29, v30, v31);
      v32(&v15[v17[17]], &v16[v17[17]], v31);
      v33 = v17[18];
      v34 = &v15[v33];
      v35 = &v16[v33];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v16[v33], 1, v31))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v32(v34, v35, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v31);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_22ABC260C(char *a1, char *a2, uint64_t *a3)
{
  uint64_t v5;
  void (*v6)(void *, const void *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(void *, const void *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  _s5StateOMa(0, a3[2], a3[3], a3[4]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_22ABDE8A0();
    v6 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
    v6(a1, a2, v5);
    v7 = sub_22ABDF5D8();
    v8 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v5))
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v6(v9, v10, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v5);
    }
  }
  else
  {
    v11 = sub_22ABDD7D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v13 = &a1[v12];
    v14 = &a2[v12];
    *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
    v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v16 = v15[12];
    v17 = &v13[v16];
    v18 = &v14[v16];
    v19 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
    }
    v21 = v15[13];
    v22 = &v13[v21];
    v23 = &v14[v21];
    v24 = sub_22ABDD598();
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
    }
    *(_DWORD *)&v13[v15[14]] = *(_DWORD *)&v14[v15[14]];
    *(_QWORD *)&v13[v15[15]] = *(_QWORD *)&v14[v15[15]];
    v26 = v15[16];
    v27 = &v13[v26];
    v28 = &v14[v26];
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v30 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    v30(v27, v28, v29);
    v30(&v13[v15[17]], &v14[v15[17]], v29);
    v31 = v15[18];
    v32 = &v13[v31];
    v33 = &v14[v31];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v14[v31], 1, v29))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v30(v32, v33, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v29);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22ABC2964(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  const void *v34;
  uint64_t v35;

  if (a1 != a2)
  {
    v5 = _s5StateOMa(0, a3[2], a3[3], a3[4]);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22ABDE8A0();
      v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = sub_22ABDF5D8();
      v9 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v10 = (void *)(a1 + v9);
      v11 = (const void *)(a2 + v9);
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6))
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v10, (uint64_t)v11, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
      }
    }
    else
    {
      v12 = sub_22ABDD7D8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v14 = (char *)(a1 + v13);
      v15 = a2 + v13;
      *(_DWORD *)v14 = *(_DWORD *)(a2 + v13);
      *((_DWORD *)v14 + 1) = *(_DWORD *)(a2 + v13 + 4);
      *((_DWORD *)v14 + 2) = *(_DWORD *)(a2 + v13 + 8);
      *((_DWORD *)v14 + 3) = *(_DWORD *)(a2 + v13 + 12);
      v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v17 = v16[12];
      v18 = &v14[v17];
      v19 = (const void *)(v15 + v17);
      v20 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      }
      v22 = v16[13];
      v23 = &v14[v22];
      v24 = (const void *)(v15 + v22);
      v25 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      }
      *(_DWORD *)&v14[v16[14]] = *(_DWORD *)(v15 + v16[14]);
      *(_QWORD *)&v14[v16[15]] = *(_QWORD *)(v15 + v16[15]);
      v27 = v16[16];
      v28 = &v14[v27];
      v29 = v15 + v27;
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
      v31(v28, v29, v30);
      v31(&v14[v16[17]], v15 + v16[17], v30);
      v32 = v16[18];
      v33 = &v14[v32];
      v34 = (const void *)(v15 + v32);
      if (__swift_getEnumTagSinglePayload(v15 + v32, 1, v30))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v31(v33, (uint64_t)v34, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v30);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_22ABC2CF0(char *a1, char *a2, uint64_t *a3)
{
  uint64_t v5;
  void (*v6)(void *, const void *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(void *, const void *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  _s5StateOMa(0, a3[2], a3[3], a3[4]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_22ABDE8A0();
    v6 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
    v6(a1, a2, v5);
    v7 = sub_22ABDF5D8();
    v8 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v5))
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v6(v9, v10, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v5);
    }
  }
  else
  {
    v11 = sub_22ABDD7D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v13 = &a1[v12];
    v14 = &a2[v12];
    *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
    v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v16 = v15[12];
    v17 = &v13[v16];
    v18 = &v14[v16];
    v19 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
    }
    v21 = v15[13];
    v22 = &v13[v21];
    v23 = &v14[v21];
    v24 = sub_22ABDD598();
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
    }
    *(_DWORD *)&v13[v15[14]] = *(_DWORD *)&v14[v15[14]];
    *(_QWORD *)&v13[v15[15]] = *(_QWORD *)&v14[v15[15]];
    v26 = v15[16];
    v27 = &v13[v26];
    v28 = &v14[v26];
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v30 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32);
    v30(v27, v28, v29);
    v30(&v13[v15[17]], &v14[v15[17]], v29);
    v31 = v15[18];
    v32 = &v13[v31];
    v33 = &v14[v31];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v14[v31], 1, v29))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v30(v32, v33, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v29);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_22ABC3048(char *a1, char *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(void *, const void *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  if (a1 != a2)
  {
    v5 = _s5StateOMa(0, a3[2], a3[3], a3[4]);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22ABDE8A0();
      v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = sub_22ABDF5D8();
      v9 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v10 = &a1[v9];
      v11 = &a2[v9];
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6))
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v7(v10, v11, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
      }
    }
    else
    {
      v12 = sub_22ABDD7D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v14 = &a1[v13];
      v15 = &a2[v13];
      *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
      v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v17 = v16[12];
      v18 = &v14[v17];
      v19 = &v15[v17];
      v20 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      }
      v22 = v16[13];
      v23 = &v14[v22];
      v24 = &v15[v22];
      v25 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      }
      *(_DWORD *)&v14[v16[14]] = *(_DWORD *)&v15[v16[14]];
      *(_QWORD *)&v14[v16[15]] = *(_QWORD *)&v15[v16[15]];
      v27 = v16[16];
      v28 = &v14[v27];
      v29 = &v15[v27];
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v31 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
      v31(v28, v29, v30);
      v31(&v14[v16[17]], &v15[v16[17]], v30);
      v32 = v16[18];
      v33 = &v14[v32];
      v34 = &v15[v32];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v15[v32], 1, v30))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v31(v33, v34, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v30);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22ABC33BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22ABC33C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = OUTLINED_FUNCTION_35_41();
  v8 = _s5StateOMa(v4, v5, v6, v7);
  return __swift_getEnumTagSinglePayload(a1, a2, v8);
}

uint64_t sub_22ABC33FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22ABC3408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = _s5StateOMa(0, a4[2], a4[3], a4[4]);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v6);
}

uint64_t type metadata accessor for MultivariateLinearRegressor.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MultivariateLinearRegressor.Model);
}

void sub_22ABC3454()
{
  sub_22ABC1EC0();
  OUTLINED_FUNCTION_33_39();
}

void sub_22ABC3484()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = OUTLINED_FUNCTION_38_52();
  sub_22ABC1F34(v2, v3, v4, v5, v6, v7, v8, v9, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v1.n128_i64[0], v1.n128_i64[1], v10);
}

void sub_22ABC34B0()
{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = OUTLINED_FUNCTION_38_52();
  sub_22ABC15BC(v1, v2, v3, v4, v5, v6, v7, v8, v0.n128_i64[0], v0.n128_i64[1], v9);
  OUTLINED_FUNCTION_33_39();
}

void sub_22ABC34D4(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v2;

  sub_22ABC16AC(a1, a2, v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[11], v2[2], v2[3], v2[4]);
  OUTLINED_FUNCTION_33_39();
}

void sub_22ABC3508(uint64_t a1)
{
  uint64_t *v1;

  sub_22ABC1B4C(a1, v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[2]);
  OUTLINED_FUNCTION_19_6();
}

void sub_22ABC3538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_22ABC1C30(a1, a2, a3, v3[5], v3[6], v3[7], v3[2], v3[3], v3[4]);
  OUTLINED_FUNCTION_19_6();
}

void sub_22ABC3560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_22ABC11D8(a1, a2, a3, a4, v4[5], v4[6], v4[2], v4[3], v4[4]);
  OUTLINED_FUNCTION_19_6();
}

void sub_22ABC3588(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_22ABC12C4(a1, a2, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD **)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  OUTLINED_FUNCTION_19_6();
}

void sub_22ABC35B4()
{
  UnsafeMutableVectorPointer<A>.addProductFloat(_:_:transposed:scaledBy:)();
}

uint64_t sub_22ABC35EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t OUTLINED_FUNCTION_4_110()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_16_81()
{
  uint64_t *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = MultivariateLinearRegressor.Model.inputSize.getter(v0);
  return sub_22ABDE87C();
}

uint64_t OUTLINED_FUNCTION_18_75()
{
  return sub_22ABDE828();
}

uint64_t OUTLINED_FUNCTION_21_72()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[15] + 8))(v0[16], v0[14]);
}

uint64_t OUTLINED_FUNCTION_24_54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_25_53()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_26_65()
{
  return sub_22ABDE87C();
}

uint64_t OUTLINED_FUNCTION_27_64(uint64_t *a1)
{
  return _s5StateOMa(0, a1[2], a1[3], a1[4]);
}

uint64_t OUTLINED_FUNCTION_28_49(uint64_t a1)
{
  return sub_22A9A6674(1, a1);
}

uint64_t OUTLINED_FUNCTION_29_48()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_34_50()
{
  uint64_t *v0;

  return MultivariateLinearRegressor.Model.inputSize.getter(v0);
}

uint64_t OUTLINED_FUNCTION_35_41()
{
  return 0;
}

__n128 OUTLINED_FUNCTION_38_52()
{
  __n128 *v0;

  return v0[1];
}

__n128 *OUTLINED_FUNCTION_39_48(__n128 *result, __n128 a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  result[1] = a2;
  result[2].n128_u64[0] = *(_QWORD *)(v3 + 32);
  result[2].n128_u64[1] = v4;
  result[3].n128_u64[0] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_40_42@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_41_43()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_42_37()
{
  return swift_setDeallocating();
}

uint64_t sub_22ABC377C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[10];

  result = sub_22ABC3858(a1, a2, a3, a4, a5, a6);
  if (!v7)
  {
    v17 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
    }
    else
    {
      v18 = result;
      MEMORY[0x24BDAC7A8](result);
      v21[2] = a2;
      v21[3] = a3;
      v21[4] = a4;
      v21[5] = a5;
      v21[6] = a6;
      v21[7] = a1;
      v21[8] = v19;
      v21[9] = v20;
      result = v19 * v17;
      if ((unsigned __int128)(v18 * (__int128)v17) >> 64 == result >> 63)
      {
        result = sub_22ABC40BC(result, sub_22ABC3DA8, (uint64_t)v21, v18, v17);
        *(_QWORD *)a7 = v18;
        *(_QWORD *)(a7 + 8) = v17;
        *(_BYTE *)(a7 + 16) = 0;
        *(_QWORD *)(a7 + 24) = result;
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_22ABC3858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a6;
  v8 = sub_22ABDE8A0();
  v9 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - v10;
  OUTLINED_FUNCTION_0_113();
  if ((sub_22ABDF380() & 1) != 0)
  {
    sub_22A9B7B50();
    v12 = swift_allocError();
    *(_OWORD *)v13 = xmmword_22AC00D30;
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 0;
    *(_BYTE *)(v13 + 32) = 2;
    swift_willThrow(v12);
    return a4;
  }
  v18 = v6;
  sub_22ABDF404();
  result = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v8);
  if ((_DWORD)result != 1)
  {
    sub_22ABDE84C();
    v15 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v11, v8);
    MEMORY[0x24BDAC7A8](v15);
    v16 = v18;
    sub_22ABDEF30();
    if (!v16)
    {
      OUTLINED_FUNCTION_0_113();
      a4 = sub_22ABDF35C();
    }
    swift_bridgeObjectRelease();
    return a4;
  }
  __break(1u);
  return result;
}

uint64_t sub_22ABC3A38(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t TupleTypeMetadata2;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BOOL4 v41;
  uint64_t (*v42)(char *, char *, uint64_t);
  void (*v43)(uint64_t *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v53 = a5;
  v35 = a4;
  v45 = a3;
  v46 = a6;
  v50 = a2;
  v48 = a8;
  v11 = sub_22ABDE8A0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v52 = sub_22ABDF5D8();
  v44 = *(char **)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v51 = (char *)&v34 - v18;
  v47 = a7;
  v49 = sub_22ABDFB48();
  MEMORY[0x24BDAC7A8](v49);
  v19 = sub_22ABDFB3C();
  v36 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v34 - v20;
  sub_22ABDEEB8();
  v22 = (uint64_t *)v51;
  sub_22ABDFB24();
  v49 = (uint64_t)v21;
  v50 = v19;
  sub_22ABDFB30();
  v23 = TupleTypeMetadata2;
  v43 = (void (*)(uint64_t *, char *, uint64_t))*((_QWORD *)v44 + 4);
  v44 = v16;
  v43(v22, v16, v52);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v49, v50);
  v42 = *(uint64_t (**)(char *, char *, uint64_t))(v12 + 32);
  v24 = v35;
  v39 = a9;
  v40 = v35 + 1;
  v25 = __OFADD__(v35, 1);
  v41 = v25;
  v38 = MEMORY[0x24BEE4AE0] + 8;
  while (1)
  {
    v26 = *v22;
    result = v42(v14, (char *)v22 + *(int *)(v23 + 48), v11);
    if (v41)
      break;
    v28 = v26 * v40;
    if ((unsigned __int128)(v26 * (__int128)v40) >> 64 != (v26 * v40) >> 63)
      goto LABEL_12;
    MEMORY[0x24BDAC7A8](result);
    v29 = v46;
    *(&v34 - 10) = v53;
    *(&v34 - 9) = v29;
    v30 = v48;
    *(&v34 - 8) = v47;
    *(&v34 - 7) = v30;
    v31 = v45;
    *(&v34 - 6) = v39;
    *(&v34 - 5) = v31;
    *(&v34 - 4) = v24;
    *(&v34 - 3) = (uint64_t)a1;
    *(&v34 - 2) = v28;
    v32 = v54;
    result = sub_22ABDE828();
    if (__OFADD__(v28, v24))
      goto LABEL_13;
    v54 = v32;
    *(_QWORD *)(*a1 + 8 * (v28 + v24)) = 0x3FF0000000000000;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v33 = v44;
    sub_22ABDFB30();
    v22 = (uint64_t *)v51;
    v43((uint64_t *)v51, v33, v52);
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23) == 1)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v49, v50);
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_22ABC3DA8(_QWORD *a1)
{
  uint64_t *v1;

  return sub_22ABC3A38(a1, v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_22ABC3DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;

  v22 = a7;
  v23 = a8;
  v21 = a1;
  v11 = *(_QWORD *)(a10 - 8);
  v12.n128_f64[0] = MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v15 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (a6)
  {
    v16 = 0;
    while (1)
    {
      v17 = v23 + v16;
      if (__OFADD__(v23, v16))
        break;
      v18 = *v22;
      v19 = v16 + 1;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, v21 + *(_QWORD *)(v11 + 72) * v16, a10, v12);
      sub_22A99CE8C();
      sub_22ABDEA50();
      v12.n128_u64[0] = v24;
      *(_QWORD *)(v18 + 8 * v17) = v24;
      v16 = v19;
      if (a6 == v19)
        return;
    }
    __break(1u);
    goto LABEL_8;
  }
}

uint64_t sub_22ABC3EE0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_22ABDE8A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - v6;
  v8 = *(_QWORD *)(sub_22ABDE84C() + 16);
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)sub_22ABDE84C();
  v10 = v9;
  if (v8 <= 1)
  {
    v15 = sub_22A99EB90(v9, a2);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    if ((v15 & 1) != 0)
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = *(_QWORD *)(sub_22ABDE84C() + 16);
    swift_bridgeObjectRelease();
    if (v17)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      v18 = sub_22A99EB90(a2, qword_24F4B9A00);
      result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if ((v18 & 1) != 0)
        return result;
    }
    v19 = sub_22ABDE84C();
    sub_22A9B7B50();
    v12 = swift_allocError();
    *(_QWORD *)v13 = v19;
    v11 = 0xD000000000000028;
    v14 = "Features should all have the same shape.";
  }
  else
  {
    v11 = 0xD000000000000025;
    sub_22A9B7B50();
    v12 = swift_allocError();
    *(_QWORD *)v13 = v10;
    v14 = "Input shaped arrays must have rank 1.";
  }
  *(_QWORD *)(v13 + 8) = v11;
  *(_QWORD *)(v13 + 16) = (unint64_t)(v14 - 32) | 0x8000000000000000;
  *(_QWORD *)(v13 + 24) = 0;
  *(_BYTE *)(v13 + 32) = 6;
  return swift_willThrow(v12);
}

uint64_t sub_22ABC40BC(uint64_t a1, uint64_t (*a2)(_QWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[2];

  sub_22AA03574(a1);
  v11 = v10;
  v13 = v12;
  v16[0] = v12;
  v16[1] = a1;
  result = a2(v16);
  if (v5)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else
    {
      if (!v16[0])
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      if (v13 == v16[0])
      {
        *(_QWORD *)(v11 + 16) = 0;
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
  v15 = a4 * a5;
  if ((unsigned __int128)(a4 * (__int128)a5) >> 64 != (a4 * a5) >> 63)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v15 > a1)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v16[0])
  {
    if (v13 == v16[0])
    {
      *(_QWORD *)(v11 + 16) = v15;
      return v11;
    }
    goto LABEL_16;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_22ABC41A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_22ABC3DD8(a1, a2, a3, a4, *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(uint64_t **)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_22ABC41D8(uint64_t a1)
{
  uint64_t v1;

  return sub_22ABC3EE0(a1, *(_QWORD **)(v1 + 56));
}

uint64_t OUTLINED_FUNCTION_0_113()
{
  uint64_t v0;

  return v0;
}

CreateMLComponents::ImageCropper __swiftcall ImageCropper.init(cropRectangle:)(CreateMLComponents::ImageCropper cropRectangle)
{
  CreateMLComponents::ImageCropper *v1;

  *v1 = cropRectangle;
  return cropRectangle;
}

uint64_t ImageCropper.applied(to:eventHandler:)(void *a1)
{
  double *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  CGAffineTransform v15;
  CGRect v16;
  CGRect v17;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  objc_msgSend(a1, sel_extent);
  v17.origin.x = v3;
  v17.origin.y = v4;
  v17.size.width = v5;
  v17.size.height = v6;
  if (CGRectContainsRect(v16, v17))
  {
    v7 = objc_msgSend(a1, sel_imageByCroppingToRect_, v3, v4, v5, v6);
    OUTLINED_FUNCTION_1_108();
    v9 = -v8;
    OUTLINED_FUNCTION_1_108();
    CGAffineTransformMakeTranslation(&v15, v9, -v10);
    v11 = objc_msgSend(v7, sel_imageByApplyingTransform_, &v15);

    return (uint64_t)v11;
  }
  else
  {
    sub_22A9B7B50();
    v13 = swift_allocError();
    *(_OWORD *)v14 = xmmword_22ABEADC0;
    *(_QWORD *)(v14 + 16) = 0xD000000000000032;
    *(_QWORD *)(v14 + 24) = 0x800000022ABE1510;
    *(_BYTE *)(v14 + 32) = 5;
    return swift_willThrow(v13);
  }
}

double ImageCropper.cropRectangle.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ImageCropper.cropRectangle.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*ImageCropper.cropRectangle.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_22ABC4388(uint64_t *a1, void **a2)
{
  uint64_t v2;

  *a1 = ImageCropper.applied(to:eventHandler:)(*a2);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t ImageCropper.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  type metadata accessor for CGRect(0);
  sub_22ABDFA34();
  sub_22ABDEDC8();
  return 0;
}

BOOL sub_22ABC44A0()
{
  uint64_t v0;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_22ABC44F8@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_22ABC44A0();
  *a1 = result;
  return result;
}

void sub_22ABC452C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "cropRectangle");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_22ABC4554()
{
  return 0x74636552706F7263;
}

uint64_t sub_22ABC4578@<X0>(BOOL *a1@<X8>)
{
  uint64_t result;

  result = sub_22ABC44E4();
  *a1 = result != 0;
  return result;
}

uint64_t sub_22ABC45A4()
{
  sub_22ABC472C();
  return sub_22ABE02EC();
}

uint64_t sub_22ABC45CC()
{
  sub_22ABC472C();
  return sub_22ABE02F8();
}

uint64_t ImageCropper.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  _OWORD v11[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BBA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABC472C();
  sub_22ABE0298();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    sub_22A9B1724(qword_255B0E408, MEMORY[0x24BDBD838]);
    sub_22ABDFC8C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v11[1];
    *a2 = v11[0];
    a2[1] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_22ABC472C()
{
  unint64_t result;

  result = qword_255B1BBA8;
  if (!qword_255B1BBA8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC00EEC, &type metadata for ImageCropper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1BBA8);
  }
  return result;
}

uint64_t ImageCropper.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BBB0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = *(_OWORD *)v1;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABC472C();
  sub_22ABE02B0();
  v10[1] = v10[0];
  v11 = v7;
  v12 = v8;
  type metadata accessor for CGRect(0);
  sub_22A9B1724(&qword_255B0E400, MEMORY[0x24BDBD828]);
  sub_22ABDFD4C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_22ABC4890@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return ImageCropper.init(from:)(a1, a2);
}

uint64_t sub_22ABC48A4(_QWORD *a1)
{
  return ImageCropper.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ImageCropper()
{
  return &type metadata for ImageCropper;
}

uint64_t storeEnumTagSinglePayload for ImageCropper.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22ABC4908 + 4 * byte_22AC00D40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22ABC4928 + 4 * byte_22AC00D45[v4]))();
}

_BYTE *sub_22ABC4908(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22ABC4928(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22ABC4930(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22ABC4938(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22ABC4940(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22ABC4948(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ImageCropper.CodingKeys()
{
  return &type metadata for ImageCropper.CodingKeys;
}

unint64_t sub_22ABC4968()
{
  unint64_t result;

  result = qword_255B1BBE0;
  if (!qword_255B1BBE0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC00EC4, &type metadata for ImageCropper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1BBE0);
  }
  return result;
}

unint64_t sub_22ABC49A8()
{
  unint64_t result;

  result = qword_255B1BBE8;
  if (!qword_255B1BBE8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC00DFC, &type metadata for ImageCropper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1BBE8);
  }
  return result;
}

unint64_t sub_22ABC49E8()
{
  unint64_t result;

  result = qword_255B1BBF0;
  if (!qword_255B1BBF0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC00E24, &type metadata for ImageCropper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1BBF0);
  }
  return result;
}

void sub_22ABC4A24()
{
  sub_22ABC535C();
}

void sub_22ABC4A30()
{
  sub_22ABC549C();
}

void sub_22ABC4A3C()
{
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_0_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC4A64(char a1)
{
  sub_22ABC53A8(0, a1);
}

void sub_22ABC4A74()
{
  sub_22ABC5104();
}

void sub_22ABC4A80()
{
  sub_22ABC5428();
}

void sub_22ABC4A8C()
{
  sub_22ABC550C();
}

void sub_22ABC4A98()
{
  OUTLINED_FUNCTION_27_26();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC4AD8(uint64_t a1)
{
  sub_22ABC4B08(a1, (void (*)(uint64_t))sub_22AB12508);
}

void sub_22ABC4AE4()
{
  sub_22ABC51BC();
}

void sub_22ABC4AF0()
{
  sub_22ABC52F4();
}

void sub_22ABC4AFC(uint64_t a1)
{
  sub_22ABC4B08(a1, (void (*)(uint64_t))sub_22AB4CB88);
}

void sub_22ABC4B08(uint64_t a1, void (*a2)(uint64_t))
{
  OUTLINED_FUNCTION_27_26();
  a2(a1);
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC4B50()
{
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_10_87();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22ABC4B74()
{
  return sub_22ABC521C();
}

uint64_t sub_22ABC4B84(uint64_t a1, char a2)
{
  if (!a2)
    OUTLINED_FUNCTION_21_73();
  OUTLINED_FUNCTION_3_120();
  return OUTLINED_FUNCTION_95_3();
}

uint64_t sub_22ABC4BF8(uint64_t a1, char a2)
{
  if (!a2)
    OUTLINED_FUNCTION_33_56();
  OUTLINED_FUNCTION_3_120();
  return OUTLINED_FUNCTION_95_3();
}

uint64_t sub_22ABC4C58()
{
  OUTLINED_FUNCTION_3_120();
  return OUTLINED_FUNCTION_95_3();
}

uint64_t sub_22ABC4CBC(uint64_t a1, char a2)
{
  if (!a2)
    OUTLINED_FUNCTION_30_55();
  OUTLINED_FUNCTION_3_120();
  return OUTLINED_FUNCTION_95_3();
}

uint64_t sub_22ABC4D28(uint64_t a1, char a2)
{
  if (a2)
    OUTLINED_FUNCTION_8_105();
  else
    OUTLINED_FUNCTION_32_45();
  OUTLINED_FUNCTION_3_120();
  return OUTLINED_FUNCTION_95_3();
}

uint64_t sub_22ABC4D64(uint64_t a1, char a2)
{
  if (!a2)
    OUTLINED_FUNCTION_16_82();
  OUTLINED_FUNCTION_3_120();
  return OUTLINED_FUNCTION_95_3();
}

void sub_22ABC4DBC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22ABC4DF8()
{
  OUTLINED_FUNCTION_35_42();
  OUTLINED_FUNCTION_3_120();
  return OUTLINED_FUNCTION_95_3();
}

uint64_t sub_22ABC4EA0()
{
  sub_22ABDEDB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22ABC4F00()
{
  OUTLINED_FUNCTION_3_120();
  return OUTLINED_FUNCTION_95_3();
}

void sub_22ABC4F50(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22ABC4F88()
{
  OUTLINED_FUNCTION_3_120();
  return OUTLINED_FUNCTION_95_3();
}

uint64_t sub_22ABC5028()
{
  return sub_22ABDEDB0();
}

void sub_22ABC504C()
{
  sub_22ABE0250();
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22ABC506C()
{
  OUTLINED_FUNCTION_3_120();
  return OUTLINED_FUNCTION_95_3();
}

uint64_t sub_22ABC50BC()
{
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_3_120();
  return swift_bridgeObjectRelease();
}

void sub_22ABC5104()
{
  OUTLINED_FUNCTION_6_126();
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC5164()
{
  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_0_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC518C()
{
  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_10_87();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC51B0(uint64_t a1, uint64_t a2)
{
  sub_22ABC52AC(a1, a2, (void (*)(uint64_t))sub_22AB12508);
}

void sub_22ABC51BC()
{
  OUTLINED_FUNCTION_6_126();
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22ABC521C()
{
  sub_22ABE0244();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  return sub_22ABE0280();
}

void sub_22ABC52A0(uint64_t a1, uint64_t a2)
{
  sub_22ABC52AC(a1, a2, (void (*)(uint64_t))sub_22AB4CB88);
}

void sub_22ABC52AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  OUTLINED_FUNCTION_145();
  a3(a2);
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC52F4()
{
  char v0;

  OUTLINED_FUNCTION_6_126();
  if (!v0)
    OUTLINED_FUNCTION_16_82();
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC535C()
{
  char v0;

  OUTLINED_FUNCTION_6_126();
  if (v0)
    OUTLINED_FUNCTION_8_105();
  else
    OUTLINED_FUNCTION_32_45();
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC53A8(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_145();
  if (!a2)
    OUTLINED_FUNCTION_30_55();
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC5428()
{
  OUTLINED_FUNCTION_6_126();
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC549C()
{
  char v0;

  OUTLINED_FUNCTION_6_126();
  if (!v0)
    OUTLINED_FUNCTION_33_56();
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC550C()
{
  char v0;

  OUTLINED_FUNCTION_6_126();
  if (!v0)
    OUTLINED_FUNCTION_21_73();
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC5590()
{
  OUTLINED_FUNCTION_145();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_3_120();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22ABC55D0(void *a1@<X0>, void *a2@<X3>, void *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10110);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v14 - v12;
  sub_22ABC61FC(a2, a3);
  swift_storeEnumTagMultiPayload();
  sub_22A9DBBEC((uint64_t)v10, (uint64_t)v13);
  sub_22A9DBBEC((uint64_t)v13, a4);

}

uint64_t sub_22ABC56E0(void *a1, char a2)
{
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BC80);
    return sub_22ABDF158();
  }
  else
  {
    sub_22ABDEAEC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BC80);
    return sub_22ABDF164();
  }
}

uint64_t sub_22ABC5740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_46_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10110);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_6_4();
  sub_22ABC77B0(a1, v2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BC70);
    return sub_22ABDF158();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v2, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BC70);
    return sub_22ABDF164();
  }
}

uint64_t sub_22ABC5840(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 v3;
  uint64_t i;
  uint64_t v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v5 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v3 = v6;
    v6 = v6 || v5 == v2;
    if (v6)
      return v3;
  }
  __break(1u);
  return result;
}

void sub_22ABC58A0(uint64_t a1, uint64_t a2, int a3, char *a4, id a5)
{
  id v7;
  uint64_t __src;
  __int16 v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  __src = a1;
  v10 = a2;
  v11 = BYTE2(a2);
  v12 = BYTE3(a2);
  v13 = BYTE4(a2);
  v14 = BYTE5(a2);
  v7 = objc_msgSend(a5, sel_elementCount);
  if (&__src != (uint64_t *)a4 || (char *)&__src + 4 * (_QWORD)v7 <= a4)
    memcpy(a4, &__src, 4 * (_QWORD)v7);

}

uint64_t ImageFeaturePrint.cropAndScale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t static ImageFeaturePrint.latestRevision.getter()
{
  return 2;
}

uint64_t ImageFeaturePrint.revision.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_22ABC59BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ImageFeaturePrint.revision.getter();
  *a1 = result;
  return result;
}

uint64_t ImageFeaturePrint.revision.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

_QWORD *(*ImageFeaturePrint.revision.modify(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v1;
  return sub_22ABC5A1C;
}

_QWORD *sub_22ABC5A1C(_QWORD *result)
{
  *(_QWORD *)(result[1] + 16) = *result;
  return result;
}

uint64_t ImageFeaturePrint.init(cropAndScale:context:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a2;
  a3[1] = result;
  a3[2] = 1;
  return result;
}

uint64_t ImageFeaturePrint.init(revision:cropAndScale:context:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = a3;
  a4[1] = a2;
  a4[2] = result;
  return result;
}

uint64_t ImageFeaturePrint.applied(to:eventHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a2;
  *(_QWORD *)(v3 + 56) = *(_QWORD *)v2;
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v2 + 8);
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22ABC5A70()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1 == 2)
  {
    v4 = *(id *)(v0 + 56);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v5;
    *v5 = v0;
    v5[1] = sub_22ABC5BF0;
    return sub_22A9DB174(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), 0, 0, *(_QWORD *)(v0 + 56), 0);
  }
  else if (v1 == 1)
  {
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 32) = 1;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    *v2 = v0;
    v2[1] = sub_22ABC5B90;
    return sub_22ABC5C8C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), 1);
  }
  else
  {
    sub_22AB67C74();
    v6 = swift_allocError();
    *v7 = v1;
    swift_willThrow(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22ABC5B90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22ABC5BF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_3_0();
  }
  else
  {

    return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_22ABC5C54()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22ABC5C60()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22ABC5C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 88) = a1;
  *(_QWORD *)(v4 + 96) = a2;
  v5 = *v3;
  *(_QWORD *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 112) = v5;
  *(_OWORD *)(v4 + 120) = *(_OWORD *)(v3 + 1);
  return swift_task_switch();
}

uint64_t sub_22ABC5CB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t inited;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;

  v1 = v0[15];
  v2 = v0[16];
  v3 = v0[13];
  v4 = (void *)v0[14];
  v5 = (void *)v0[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B100F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  v7 = (void *)*MEMORY[0x24BDF9F38];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDF9F38];
  *(_QWORD *)(inited + 64) = sub_22A9BEDCC(0, &qword_255B100F8);
  *(_QWORD *)(inited + 40) = v4;
  type metadata accessor for VNImageOption(0);
  sub_22A9BED8C(&qword_255B0D920, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22ABE88B8);
  v8 = v5;
  v9 = v7;
  v10 = v4;
  sub_22ABDEAC8();
  v11 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
  v12 = sub_22A9BEBE8(v8);
  v0[17] = v12;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF9BE0]), sel_init);
  v0[18] = v13;
  objc_msgSend(v13, sel_setRevision_, v3);
  objc_msgSend(v13, sel_setImageCropAndScaleOption_, v1);
  v14 = (_QWORD *)swift_task_alloc();
  v0[19] = v14;
  v14[2] = v10;
  v14[3] = v1;
  v14[4] = v2;
  v14[5] = v13;
  v14[6] = v12;
  v15 = swift_task_alloc();
  v0[20] = v15;
  *(_QWORD *)(v15 + 16) = v13;
  v16 = v13;
  v17 = (_QWORD *)swift_task_alloc();
  v0[21] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  *v17 = v0;
  v17[1] = sub_22ABC5EBC;
  return sub_22ABDFF74();
}

uint64_t sub_22ABC5EBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22ABC5F40()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);

  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22ABC5F70()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 136);
  v1 = *(void **)(v0 + 144);

  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22ABC5FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_22ABC5FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 24);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 16) = v6;
  *(_QWORD *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  *v4 = v0;
  v4[1] = sub_22ABC60A4;
  OUTLINED_FUNCTION_50_0();
  return sub_22ABE0118();
}

uint64_t sub_22ABC60A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_3_0();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_22ABC6108()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22ABC6134(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10110);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22ABC55D0(a2, a5, a6, (uint64_t)v11);
  sub_22ABC5740((uint64_t)v11);
  return sub_22A9DBBAC((uint64_t)v11);
}

void sub_22ABC61FC(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24[3];

  v24[2] = *(id *)MEMORY[0x24BDAC8D0];
  sub_22ABDF1DC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2540E8788);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_22ABEA720;
    *(_QWORD *)(v5 + 32) = a1;
    sub_22ABDF014();
    sub_22A9BEDCC(0, &qword_255B0EEE8);
    v6 = a1;
    v7 = (void *)sub_22ABDEFE4();
    swift_bridgeObjectRelease();
    v24[0] = 0;
    v8 = objc_msgSend(a2, sel_performRequests_error_, v7, v24);

    if (v8)
    {
      v9 = v24[0];
      v10 = sub_22ABC78AC(v6);
      if (v10)
      {
        v11 = v10;
        if (v10 >> 62)
        {
          if (sub_22ABDFB60())
          {
LABEL_6:
            sub_22A9B8810(0, (v11 & 0xC000000000000001) == 0, v11);
            if ((v11 & 0xC000000000000001) != 0)
              v12 = (id)MEMORY[0x22E2E3A9C](0, v11);
            else
              v12 = *(id *)(v11 + 32);
            v13 = v12;
            swift_bridgeObjectRelease();
            if (objc_msgSend(v13, sel_elementType) == (id)1)
            {
              sub_22ABDF1DC();
              v14 = swift_allocObject();
              *(_OWORD *)(v14 + 16) = xmmword_22ABEA720;
              v15 = objc_msgSend(v13, sel_elementCount);
              *(_QWORD *)(v14 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v15);
              v24[0] = (id)v14;
              sub_22ABDF014();
              v16 = v24[0];
              v17 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
              objc_msgSend(objc_retainAutorelease(sub_22ABC7628((uint64_t)v16, 65568)), sel_dataPointer);
              v18 = objc_msgSend(v13, sel_data);
              sub_22ABDD19C();
              v20 = v19;

              v21 = v13;
              __asm { BR              X9 }
            }
            v24[0] = 0;
            v24[1] = (id)0xE000000000000000;
            sub_22ABDF7A0();
            sub_22ABDEDC8();
            objc_msgSend(v13, sel_elementType);
            type metadata accessor for VNElementType(0);
            sub_22ABDFA34();
            sub_22ABDEDC8();
            sub_22ABDFADC();
            __break(1u);
            JUMPOUT(0x22ABC67DCLL);
          }
        }
        else if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_6;
        }
        swift_bridgeObjectRelease();
      }
      sub_22ABDF17C();
      sub_22A9BED8C(&qword_255B0EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      swift_allocError();
      v23 = sub_22ABDE9FC();
    }
    else
    {
      v22 = v24[0];
      sub_22ABDD004();

    }
    swift_willThrow(v23);
  }
}

char *sub_22ABC685C(char *result, int a2, char *a3, id a4)
{
  char *v5;

  if (result)
  {
    v5 = result;
    result = (char *)objc_msgSend(a4, sel_elementCount);
    if (v5 != a3 || &v5[4 * (_QWORD)result] <= a3)
      return (char *)memmove(a3, v5, 4 * (_QWORD)result);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22ABC68D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *a2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A9ABF58;
  return ImageFeaturePrint.applied(to:eventHandler:)(a1, v4);
}

unint64_t ImageFeaturePrint.debugDescription.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_22ABC694C()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_22ABDFBE4();
  OUTLINED_FUNCTION_23();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_22ABC699C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F697369766572;
  else
    return 0x53646E41706F7263;
}

unint64_t sub_22ABC69DC()
{
  ImageFeaturePrint.debugDescription.getter();
  return 0xD000000000000011;
}

void sub_22ABC69F8(char *a1, char *a2)
{
  sub_22AA17D0C(*a1, *a2);
}

uint64_t sub_22ABC6A04()
{
  return sub_22ABC4B74();
}

uint64_t sub_22ABC6A0C()
{
  return sub_22ABC4EA0();
}

uint64_t sub_22ABC6A14()
{
  return sub_22ABC521C();
}

uint64_t sub_22ABC6A1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22ABC694C();
  *a1 = result;
  return result;
}

void sub_22ABC6A48(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_22ABC699C(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22ABC6A6C()
{
  char *v0;

  return sub_22ABC699C(*v0);
}

uint64_t sub_22ABC6A74@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22ABC6998();
  *a1 = result;
  return result;
}

uint64_t sub_22ABC6A98()
{
  sub_22ABC6C78();
  return sub_22ABE02EC();
}

uint64_t sub_22ABC6AC0()
{
  sub_22ABC6C78();
  return sub_22ABE02F8();
}

void ImageFeaturePrint.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BC08);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_34();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABC6C78();
  sub_22ABE0298();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v6 = sub_22ABDFC80();
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_init);
    v8 = sub_22ABDFC2C();
    if ((v9 & 1) != 0)
      v10 = 2;
    else
      v10 = v8;
    if ((sub_22ABC5840(v10, (uint64_t)&unk_24F4B8700) & 1) != 0)
    {
      OUTLINED_FUNCTION_11_94();
      *a2 = v7;
      a2[1] = v6;
      a2[2] = v10;
    }
    else
    {

      sub_22AB67C74();
      v11 = OUTLINED_FUNCTION_53();
      *v12 = v10;
      OUTLINED_FUNCTION_6_34(v11);
      OUTLINED_FUNCTION_11_94();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  }
  OUTLINED_FUNCTION_16();
}

unint64_t sub_22ABC6C78()
{
  unint64_t result;

  result = qword_255B1BC10;
  if (!qword_255B1BC10)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC01130, &type metadata for ImageFeaturePrint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1BC10);
  }
  return result;
}

void ImageFeaturePrint.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B1BC18);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_6_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABC6C78();
  sub_22ABE02B0();
  sub_22ABDFD40();
  if (!v1)
    sub_22ABDFD34();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  OUTLINED_FUNCTION_16();
}

void sub_22ABC6DB0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  ImageFeaturePrint.init(from:)(a1, a2);
}

void sub_22ABC6DC4(_QWORD *a1)
{
  ImageFeaturePrint.encode(to:)(a1);
}

void sub_22ABC6DD8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v1 + 16);
  if (v2 == 2)
  {
    v3 = 360;
    v4 = 768;
    goto LABEL_5;
  }
  if (v2 == 1)
  {
    v3 = 299;
    v4 = 2048;
LABEL_5:
    sub_22ABC6E74(v3, (char *)v4, a1);
    return;
  }
  sub_22AB67C74();
  v5 = OUTLINED_FUNCTION_53();
  *v6 = v2;
  OUTLINED_FUNCTION_6_34(v5);
}

void sub_22ABC6E74(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[5];
  uint64_t v64;
  uint64_t v65;

  v6 = v4;
  v55 = a2;
  *(_QWORD *)&v59 = a1;
  v53 = a3;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v8);
  v51 = sub_22ABDDC88();
  v48 = *(_QWORD *)(v51 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v10);
  v47 = sub_22ABDE798();
  v46 = *(_QWORD *)(v47 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v12);
  v13 = sub_22ABDE324();
  v57 = *(_QWORD *)(v13 - 8);
  v58 = v13;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  v49 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_16_6((uint64_t)v45 - v17);
  v18 = sub_22ABDDC10();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_46_1();
  v56 = sub_22ABDDC64();
  v65 = *(_QWORD *)(v56 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_22ABDDB98();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_22ABDDBEC();
  v61 = *(_QWORD *)(v27 - 8);
  v62 = v27;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_34();
  v29 = *(_QWORD *)(v6 + 16);
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x24BE62418], v23);
  v60 = v5;
  sub_22ABDDBD4();
  v30 = v18;
  v31 = v54;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v3, *MEMORY[0x24BE624E0], v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v32 = swift_allocObject();
  v59 = xmmword_22ABE8E30;
  *(_OWORD *)(v32 + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(v32 + 32) = v55;
  v55 = v22;
  sub_22ABDDC1C();
  sub_22ABDE318();
  if (v29 == 1 || v29 == 2)
  {
    v33 = v45[1];
    sub_22ABDDF40();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v46 + 104))(v33, *MEMORY[0x24BE63270], v47);
    sub_22ABDE288();
    sub_22ABDE258();
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
    sub_22ABDDE68();
    *(_OWORD *)(OUTLINED_FUNCTION_33_15() + 16) = v59;
    v34 = v50;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v50, v60, v62);
    v35 = *MEMORY[0x24BE62568];
    v48 = *(_QWORD *)(v48 + 104);
    v36 = v51;
    ((void (*)(uint64_t, uint64_t, uint64_t))v48)(v34, v35, v51);
    OUTLINED_FUNCTION_3_17();
    sub_22ABDE2C4();
    *(_OWORD *)(OUTLINED_FUNCTION_33_15() + 16) = v59;
    v38 = v55;
    v37 = v56;
    (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v34, v55, v56);
    ((void (*)(uint64_t, _QWORD, uint64_t))v48)(v34, *MEMORY[0x24BE62400], v36);
    OUTLINED_FUNCTION_3_17();
    sub_22ABDE300();
    v40 = v57;
    v39 = v58;
    v41 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v49, v31, v58);
    memset(v63, 0, sizeof(v63));
    v64 = 0;
    v42 = v52;
    sub_22ABDE3CC();
    sub_22AB314C8(v41, v42, v63, v53);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v31, v39);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v37);
    OUTLINED_FUNCTION_22_63();
  }
  else
  {
    sub_22AB67C74();
    v43 = OUTLINED_FUNCTION_53();
    *v44 = v29;
    OUTLINED_FUNCTION_6_34(v43);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v31, v58);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v55, v56);
    OUTLINED_FUNCTION_22_63();
  }
  OUTLINED_FUNCTION_16();
}

void sub_22ABC738C(uint64_t a1@<X8>)
{
  sub_22ABC6DD8(a1);
}

void sub_22ABC73A4(uint64_t *a1)
{
  ImageFeaturePrint.revision.setter(*a1);
  OUTLINED_FUNCTION_0_5();
}

uint64_t initializeBufferWithCopyOfBuffer for ImageFeaturePrint(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = v3;
  return a1;
}

void destroy for ImageFeaturePrint(id *a1)
{

}

uint64_t assignWithCopy for ImageFeaturePrint(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ImageFeaturePrint(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for ImageFeaturePrint()
{
  return &type metadata for ImageFeaturePrint;
}

uint64_t storeEnumTagSinglePayload for ImageFeaturePrint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22ABC74E8 + 4 * byte_22AC00F54[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22ABC751C + 4 * byte_22AC00F4F[v4]))();
}

uint64_t sub_22ABC751C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABC7524(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22ABC752CLL);
  return result;
}

uint64_t sub_22ABC7538(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22ABC7540);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22ABC7544(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABC754C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageFeaturePrint.CodingKeys()
{
  return &type metadata for ImageFeaturePrint.CodingKeys;
}

unint64_t sub_22ABC756C()
{
  unint64_t result;

  result = qword_255B1BC48;
  if (!qword_255B1BC48)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC01108, &type metadata for ImageFeaturePrint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1BC48);
  }
  return result;
}

unint64_t sub_22ABC75AC()
{
  unint64_t result;

  result = qword_255B1BC50;
  if (!qword_255B1BC50)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC01040, &type metadata for ImageFeaturePrint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1BC50);
  }
  return result;
}

unint64_t sub_22ABC75EC()
{
  unint64_t result;

  result = qword_255B1BC58;
  if (!qword_255B1BC58)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC01068, &type metadata for ImageFeaturePrint.CodingKeys);
    atomic_store(result, &qword_255B1BC58);
  }
  return result;
}

id sub_22ABC7628(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8628);
  v4 = (void *)sub_22ABDEFE4();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v10);

  if (v5)
  {
    v6 = v10[0];
  }
  else
  {
    v7 = v10[0];
    sub_22ABDD004();

    swift_willThrow(v8);
  }
  return v5;
}

uint64_t sub_22ABC7720(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_22A9ABF58;
  return sub_22ABC5FC4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_22ABC77A0(uint64_t a1)
{
  uint64_t v1;

  return sub_22ABC6134(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_22ABC77B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_22ABC77F8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, void *a5)
{
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;

  v9 = (char *)sub_22ABDCF2C();
  if (v9)
  {
    v10 = sub_22ABDCF44();
    if (__OFSUB__(a1, v10))
    {
LABEL_13:
      __break(1u);
      return;
    }
    v9 += a1 - v10;
  }
  v11 = __OFSUB__(a2, a1);
  v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  v13 = sub_22ABDCF38();
  if (v13 >= v12)
    v14 = v12;
  else
    v14 = v13;
  v15 = (_DWORD)v9 + v14;
  if (v9)
    v16 = v15;
  else
    v16 = 0;
  sub_22ABC685C(v9, v16, a4, a5);

}

uint64_t sub_22ABC78AC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_results);
  if (!v1)
    return 0;
  v2 = v1;
  sub_22A9BEDCC(0, &qword_255B1BC78);
  v3 = sub_22ABDEFF0();

  return v3;
}

uint64_t OUTLINED_FUNCTION_3_120()
{
  return sub_22ABDEDB0();
}

uint64_t OUTLINED_FUNCTION_6_126()
{
  return sub_22ABE0244();
}

uint64_t OUTLINED_FUNCTION_10_87()
{
  return sub_22ABDEDB0();
}

uint64_t OUTLINED_FUNCTION_11_94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_22_63()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 192) + 8))(*(_QWORD *)(v0 - 200), *(_QWORD *)(v0 - 184));
}

uint64_t ContiguousArray.withUnsafeVectorPointer<A>(_:)()
{
  return sub_22ABDF8F0();
}

uint64_t sub_22ABC7A5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22ABDED08();
  if (result)
  {
    v9 = UnsafeVectorPointer.init(start:count:stride:)(result, a2, 1, a5);
    return a3(v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22ABC7AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22ABC7A5C(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16));
}

float sub_22ABC7AE4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  float result;
  uint64_t var4;

  a2(&var4, a1 + 32, *(_QWORD *)(a1 + 16), 1);
  if (!v2)
    return *(float *)&var4;
  return result;
}

_QWORD *ContiguousArray.withUnsafeMutableVectorPointer<A>(_:)(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_22ABDF8E4();
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v12[0] = *(_QWORD *)v3 + ((v9 + 32) & ~v9);
  v10 = v12[0];
  v12[1] = v7;
  sub_22ABC7BE8((uint64_t)v12, a1, a2, v8);
  return sub_22A9F43F4(v12, v10, v7);
}

uint64_t sub_22ABC7BE8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v6 = *(_QWORD *)(a1 + 8);
  result = sub_22ABDED08();
  if (result)
  {
    v8 = UnsafeMutableVectorPointer.init(start:count:stride:)(result, v6, 1, a4);
    return a2(v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t dot<A>(_:_:)()
{
  return ContiguousArray.withUnsafeVectorPointer<A>(_:)();
}

{
  return DenseVector.withUnsafeVectorPointer<A>(_:)();
}

uint64_t sub_22ABC7CA4()
{
  return ContiguousArray.withUnsafeVectorPointer<A>(_:)();
}

uint64_t sub_22ABC7CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t result;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v46 = a5;
  v38 = a4;
  v37 = a3;
  v59 = a2;
  v39 = a1;
  v44 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v43 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v42 = (char *)&v36 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v41 = (char *)&v36 - v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v19 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v36 - v20;
  v40 = *(_QWORD *)(*(_QWORD *)(a8 + 16) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  v45 = a9;
  sub_22ABDFF20();
  v55 = v38;
  v56 = v46;
  v57 = a6;
  v47 = v39;
  *(_QWORD *)&v48 = v59;
  *((_QWORD *)&v48 + 1) = v37;
  v25 = type metadata accessor for UnsafeVectorPointer(0, a7, v23, v24);
  v26 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeVectorPointer<A>, v25);
  sub_22ABE0178();
  v46 = v26;
  v47 = v51;
  v48 = v52;
  v49 = v53;
  v50 = v54;
  v55 = v25;
  v56 = v25;
  v59 = v25;
  v57 = v26;
  v58 = v26;
  sub_22ABDF7E8();
  sub_22ABDF7C4();
  v27 = v41;
  v28 = v42;
  v29 = v43;
  while (1)
  {
    v51 = v59;
    *(_QWORD *)&v52 = v59;
    *((_QWORD *)&v52 + 1) = v46;
    v53 = v46;
    sub_22ABDF7DC();
    sub_22ABDF7D0();
    result = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, TupleTypeMetadata2);
    if ((_DWORD)result == 1)
      break;
    v31 = &v21[*(int *)(TupleTypeMetadata2 + 48)];
    v32 = TupleTypeMetadata2;
    v33 = v44;
    v34 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
    v34(v27, v21, a7);
    v34(v28, v31, a7);
    sub_22ABDF308();
    sub_22ABDFB00();
    v35 = *(void (**)(char *, uint64_t))(v33 + 8);
    TupleTypeMetadata2 = v32;
    v35(v29, a7);
    v35(v28, a7);
    v35(v27, a7);
  }
  return result;
}

float dot(_:_:)(uint64_t a1)
{
  return sub_22ABC7AE4(a1, (void (*)(uint64_t *__return_ptr, uint64_t, _QWORD, uint64_t))sub_22ABC8278);
}

{
  return sub_22ABC7AE4(a1, (void (*)(uint64_t *__return_ptr, uint64_t, _QWORD, uint64_t))sub_22ABC8278);
}

float sub_22ABC80D0@<S0>(vDSP_Stride __IA@<X2>, const float *a2@<X0>, int64_t a3@<X1>, uint64_t a4@<X3>, float *a5@<X8>)
{
  int64_t v6;
  vDSP_Length v7;
  float result;
  float __C;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a4 + 16);
  __C = 0.0;
  if (v6 >= a3)
    v7 = a3;
  else
    v7 = v6;
  if ((v7 & 0x8000000000000000) != 0)
    __break(1u);
  vDSP_dotpr(a2, __IA, (const float *)(a4 + 32), 1, &__C, v7);
  result = __C;
  *a5 = __C;
  return result;
}

double dot(_:_:)(uint64_t a1)
{
  return sub_22ABB8CB8(a1, (void (*)(double *__return_ptr, uint64_t, _QWORD, uint64_t))sub_22ABC8290);
}

{
  return sub_22ABB8CB8(a1, (void (*)(double *__return_ptr, uint64_t, _QWORD, uint64_t))sub_22ABC8290);
}

double sub_22ABC8194@<D0>(vDSP_Stride __IA@<X2>, const double *a2@<X0>, int64_t a3@<X1>, uint64_t a4@<X3>, double *a5@<X8>)
{
  int64_t v6;
  vDSP_Length v7;
  double result;
  double v9[2];

  v9[1] = *(double *)MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a4 + 16);
  v9[0] = 0.0;
  if (v6 >= a3)
    v7 = a3;
  else
    v7 = v6;
  if ((v7 & 0x8000000000000000) != 0)
    __break(1u);
  vDSP_dotprD(a2, __IA, (const double *)(a4 + 32), 1, v9, v7);
  result = v9[0];
  *a5 = v9[0];
  return result;
}

uint64_t variable initialization expression of UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.column()
{
  return 1;
}

uint64_t variable initialization expression of LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.row()
{
  return 1;
}

uint64_t sub_22ABC825C()
{
  return sub_22ABC7CA4();
}

float sub_22ABC8278@<S0>(const float *a1@<X0>, int64_t a2@<X1>, vDSP_Stride a3@<X2>, float *a4@<X8>)
{
  uint64_t v4;

  return sub_22ABC80D0(a3, a1, a2, v4, a4);
}

double sub_22ABC8290@<D0>(const double *a1@<X0>, int64_t a2@<X1>, vDSP_Stride a3@<X2>, double *a4@<X8>)
{
  uint64_t v4;

  return sub_22ABC8194(a3, a1, a2, v4, a4);
}

uint64_t sub_22ABC82A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;

  return sub_22ABC7CE0(a1, a2, a3, v4[4], v4[5], v4[6], v4[2], v4[3], a4);
}

void LowerStrictlyTriangularMatrix.base.getter()
{
  OUTLINED_FUNCTION_0_114();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_4_111();
  OUTLINED_FUNCTION_21();
}

uint64_t LowerStrictlyTriangularMatrix.base.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  OUTLINED_FUNCTION_2_117();
  swift_release();
  result = swift_bridgeObjectRelease();
  *v1 = v4;
  v1[1] = v3;
  v1[2] = v2;
  v1[3] = v0;
  return result;
}

uint64_t (*LowerStrictlyTriangularMatrix.base.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LowerStrictlyTriangularMatrix.rowCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t LowerStrictlyTriangularMatrix.init(rowCount:columnCount:)()
{
  return UpperStrictlyTriangularMatrix.init(rowCount:columnCount:)();
}

void (*LowerStrictlyTriangularMatrix.subscript.read(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))(_QWORD *a1)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a8 - 8);
  *a1 = a8;
  a1[1] = v8;
  a1[2] = malloc(*(_QWORD *)(v8 + 64));
  UpperStrictlyTriangularMatrix.subscript.getter();
  return sub_22A9B8614;
}

void (*LowerStrictlyTriangularMatrix.subscript.modify())(Swift::Int **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_2_117();
  v5 = malloc(0x40uLL);
  *v4 = v5;
  *v5 = v3;
  v5[1] = v2;
  v6 = *(_QWORD *)(v0 + 16);
  v5[2] = v1;
  v5[3] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[4] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[5] = malloc(v8);
  v9 = malloc(v8);
  v10 = *(_QWORD *)(v0 + 24);
  v5[6] = v9;
  v5[7] = v10;
  UpperStrictlyTriangularMatrix.subscript.getter();
  return sub_22ABC84B4;
}

void sub_22ABC84B4(Swift::Int **a1, char a2, uint64_t a3, uint64_t a4)
{
  Swift::Int *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  uint64_t v16;

  v4 = *a1;
  v5 = (void *)(*a1)[6];
  v6 = (*a1)[7];
  v7 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    v8 = v4[3];
    v9 = v4[4];
    v10 = v4[1];
    v11 = *v4;
    (*(void (**)(Swift::Int, void *, uint64_t))(v9 + 16))((*a1)[5], v5, v8);
    v13 = type metadata accessor for UpperStrictlyTriangularMatrix(0, v8, v6, v12);
    UpperStrictlyTriangularMatrix.subscript.setter((uint64_t)v7, v10, v11, v13);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  else
  {
    v15 = *v4;
    v14 = v4[1];
    v16 = type metadata accessor for UpperStrictlyTriangularMatrix(0, v4[3], v6, a4);
    UpperStrictlyTriangularMatrix.subscript.setter((uint64_t)v5, v14, v15, v16);
  }
  free(v5);
  free(v7);
  free(v4);
}

uint64_t LowerStrictlyTriangularMatrix.subscript.getter()
{
  return UpperStrictlyTriangularMatrix.subscript.getter();
}

uint64_t LowerStrictlyTriangularMatrix.subscript.setter(uint64_t a1, Swift::Int a2, Swift::Int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v11 + 24);
  UpperStrictlyTriangularMatrix.subscript.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 24))(v10, a1, v7);
  v14 = type metadata accessor for UpperStrictlyTriangularMatrix(0, v7, v12, v13);
  UpperStrictlyTriangularMatrix.subscript.setter((uint64_t)v10, a3, a2, v14);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
}

void LowerStrictlyTriangularMatrix.transposed()()
{
  OUTLINED_FUNCTION_0_114();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_4_111();
  OUTLINED_FUNCTION_21();
}

uint64_t static LowerStrictlyTriangularMatrix.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  return static UpperStrictlyTriangularMatrix.__derived_struct_equals(_:_:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_22ABC86B0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABC86C0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABC86D0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_22ABC86D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = LowerStrictlyTriangularMatrix.init(rowCount:columnCount:)();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

void sub_22ABC8708(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LowerStrictlyTriangularMatrix.transposed()();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
}

uint64_t sub_22ABC8738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *);
  _QWORD v13[4];

  v6 = *v4;
  v7 = v4[1];
  v8 = v4[2];
  v9 = v4[3];
  v10 = *(_QWORD *)(a3 + 16);
  v11 = LowerStrictlyTriangularMatrix.subscript.read(v13, a1, a2, v6, v7, v8, v9, v10);
  (*(void (**)(uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a4);
  return ((uint64_t (*)(_QWORD *, _QWORD))v11)(v13, 0);
}

uint64_t sub_22ABC87B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(Swift::Int **, char, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v6 = LowerStrictlyTriangularMatrix.subscript.modify();
  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v9, a1, v7);
  ((void (*)(uint64_t *, _QWORD))v6)(&v11, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
}

void (*sub_22ABC8824(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = LowerStrictlyTriangularMatrix.subscript.modify();
  return sub_22A9B858C;
}

uint64_t sub_22ABC8888(uint64_t a1, uint64_t a2)
{
  return static LowerStrictlyTriangularMatrix.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD **)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD **)(a2 + 24)) & 1;
}

uint64_t sub_22ABC88CC()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22ABC88F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22ABC8930(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_22ABC899C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for LowerStrictlyTriangularMatrix(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LowerStrictlyTriangularMatrix);
}

uint64_t OUTLINED_FUNCTION_0_114()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_4_111()
{
  uint64_t v0;

  return v0;
}

uint64_t UnsafeMatrixPointer.baseAddress.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UnsafeMatrixPointer.baseAddress.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*UnsafeMatrixPointer.baseAddress.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMatrixPointer.rowCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t UnsafeMatrixPointer.rowCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*UnsafeMatrixPointer.rowCount.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMatrixPointer.columnCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t UnsafeMatrixPointer.columnCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*UnsafeMatrixPointer.columnCount.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMatrixPointer.leadingDimension.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t UnsafeMatrixPointer.leadingDimension.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*UnsafeMatrixPointer.leadingDimension.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMatrixPointer.layout.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t UnsafeMatrixPointer.layout.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result & 1;
  return result;
}

uint64_t (*UnsafeMatrixPointer.layout.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMatrixPointer.count.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v1 = *(_QWORD *)(v0 + 24);
    result = v1 * v2;
    if ((unsigned __int128)(v1 * (__int128)v2) >> 64 == (v1 * v2) >> 63)
      return result;
    __break(1u);
  }
  v4 = *(_QWORD *)(v0 + 8);
  v5 = *(_QWORD *)(v0 + 24);
  result = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
    __break(1u);
  return result;
}

uint64_t UnsafeMatrixPointer.init(start:rowCount:columnCount:leadingDimension:layout:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 32) = a5 & 1;
  return result;
}

__n128 UnsafeMatrixPointer.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(_QWORD *)(a2 + 24) = v2;
  *(_BYTE *)(a2 + 32) = v3;
  return result;
}

Swift::Void __swiftcall UnsafeMatrixPointer.deallocate()()
{
  sub_22ABDECE4();
}

uint64_t UnsafeMatrixPointer.accelerateMatrixOrder.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t UnsafeMatrixPointer.withUnsafeBufferPointer<A>(_:)(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;

  UnsafeMatrixPointer.count.getter();
  v2 = sub_22ABDED14();
  return a1(v2);
}

uint64_t UnsafeMatrixPointer.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v4;
  v6 = v4[3];
  if ((v4[4] & 1) != 0)
  {
    v7 = a2 * v6;
    if ((unsigned __int128)(a2 * (__int128)v6) >> 64 != (a2 * v6) >> 63)
    {
      __break(1u);
      goto LABEL_10;
    }
    v6 = v7 + result;
    if (!__OFADD__(v7, result))
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(a4, v5 + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 72) * v6);
    __break(1u);
  }
  v8 = result * v6;
  if ((unsigned __int128)(result * (__int128)v6) >> 64 != (result * v6) >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v6 = v8 + a2;
  if (!__OFADD__(v8, a2))
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(a4, v5 + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 72) * v6);
LABEL_11:
  __break(1u);
  return result;
}

void UnsafeMatrixPointer.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  if ((*(_BYTE *)(v2 + 32) & 1) != 0)
  {
    v3 = *(_QWORD *)(a2 + 16);
    v4 = *(_QWORD *)v2 + *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72) * a1;
    v5 = *(_QWORD *)(v2 + 16);
    v6 = *(_QWORD *)(v2 + 24);
  }
  else
  {
    OUTLINED_FUNCTION_1_109();
    if (!v9)
    {
      __break(1u);
      return;
    }
    v3 = *(_QWORD *)(v7 + 16);
    v4 = *(_QWORD *)v2 + *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72) * v8;
    v5 = *(_QWORD *)(v2 + 16);
    v6 = 1;
  }
  UnsafeVectorPointer.init(start:count:stride:)(v4, v5, v6, v3);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((*(_BYTE *)(v2 + 32) & 1) != 0)
  {
    OUTLINED_FUNCTION_1_109();
    if (!v5)
    {
      __break(1u);
      return;
    }
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(_QWORD *)(v2 + 8);
    v8 = *(_QWORD *)v2 + *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v4;
    v9 = 1;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(v2 + 8);
    v8 = *(_QWORD *)v2 + *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a1;
    v9 = *(_QWORD *)(v2 + 24);
  }
  UnsafeVectorPointer.init(start:count:stride:)(v8, v7, v9, v6);
}

uint64_t sub_22ABC8CF4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_22ABC8D00(uint64_t (*a1)(uint64_t))
{
  return UnsafeMatrixPointer.withUnsafeBufferPointer<A>(_:)(a1);
}

uint64_t UnsafeMatrixPointer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDECF0();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_12_1();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_12_1();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  sub_22ABDFA34();
  sub_22ABDEDC8();
  return 0;
}

uint64_t sub_22ABC8EA4(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      v4 = v3 >= 2;
      v2 = v3 - 2;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22ABC8EE0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for UnsafeMatrixPointer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeMatrixPointer);
}

uint64_t MatrixLayout.blasValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 102;
  else
    return 101;
}

void UnsafeMutableMatrixPointer<A>.addProduct(_:transposed:_:transposed:scaledBy:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_39_49();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE00);
  v1 = OUTLINED_FUNCTION_20_63();
  if ((_DWORD)v1)
  {
    OUTLINED_FUNCTION_4_112(v1, v2, v3, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE18);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_7_108();
    OUTLINED_FUNCTION_16_2();
    v5 = OUTLINED_FUNCTION_21_74();
    UnsafeMutableMatrixPointer<A>.addProductFloat(_:transposed:_:transposed:scaledBy:)(v5, v6, v7, v8);
LABEL_5:
    OUTLINED_FUNCTION_3();
    return;
  }
  OUTLINED_FUNCTION_39_49();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE08);
  v9 = OUTLINED_FUNCTION_20_63();
  if ((_DWORD)v9)
  {
    OUTLINED_FUNCTION_4_112(v9, v10, v11, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE10);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_7_108();
    OUTLINED_FUNCTION_16_2();
    v13 = OUTLINED_FUNCTION_21_74();
    UnsafeMutableMatrixPointer<A>.addProductDouble(_:transposed:_:transposed:scaledBy:)(v13, v14, v15, v16);
    goto LABEL_5;
  }
  sub_22ABDF7A0();
  swift_bridgeObjectRelease();
  sub_22ABE0304();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_95();
  OUTLINED_FUNCTION_2_118();
  __break(1u);
}

uint64_t UnsafeMutableMatrixPointer<A>.addProductFloat(_:transposed:_:transposed:scaledBy:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v5 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned __int8 *)(v4 + 32) != v5 || v5 != *(unsigned __int8 *)(a3 + 32))
    goto LABEL_48;
  v6 = 16;
  if ((a2 & 1) != 0)
    v7 = 8;
  else
    v7 = 16;
  if ((a2 & 1) != 0)
    v8 = 16;
  else
    v8 = 8;
  v9 = *(_QWORD *)(a1 + v7);
  if ((a4 & 1) != 0)
    v10 = 8;
  else
    v10 = 16;
  if ((a4 & 1) == 0)
    v6 = 8;
  if (v9 != *(_QWORD *)(a3 + v6))
  {
    OUTLINED_FUNCTION_42_38();
LABEL_52:
    OUTLINED_FUNCTION_193_0();
    goto LABEL_53;
  }
  if (*(_QWORD *)(v4 + 8) != *(_QWORD *)(a1 + v8))
  {
    OUTLINED_FUNCTION_44_38();
    goto LABEL_52;
  }
  if (*(_QWORD *)(v4 + 16) != *(_QWORD *)(a3 + v10))
  {
    OUTLINED_FUNCTION_43_30();
    goto LABEL_52;
  }
  OUTLINED_FUNCTION_32_46();
  if (!(v14 ^ v15 | v13))
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v11 > 0x7FFFFFFF)
    goto LABEL_42;
  if (v12 > 0x7FFFFFFF)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  OUTLINED_FUNCTION_31_44();
  if (!(v14 ^ v15 | v13))
    goto LABEL_44;
  v21 = *(_QWORD *)(v16 + 24);
  if (v21 > 0x7FFFFFFF)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v22 = *(_QWORD *)(v4 + 24);
  if (v18 >= (uint64_t)0xFFFFFFFF80000000
    && v20 >= (uint64_t)0xFFFFFFFF80000000
    && v17 >= (uint64_t)0xFFFFFFFF80000000
    && v19 >= (uint64_t)0xFFFFFFFF80000000
    && v21 >= (uint64_t)0xFFFFFFFF80000000
    && v22 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v22 <= 0x7FFFFFFF)
    {
      OUTLINED_FUNCTION_26_66();
      OUTLINED_FUNCTION_38_53();
      return cblas_sgemm_NEWLAPACK();
    }
    goto LABEL_47;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  OUTLINED_FUNCTION_193_0();
  OUTLINED_FUNCTION_29_49();
LABEL_53:
  result = OUTLINED_FUNCTION_2_118();
  __break(1u);
  return result;
}

uint64_t UnsafeMutableMatrixPointer<A>.addProductDouble(_:transposed:_:transposed:scaledBy:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v5 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned __int8 *)(v4 + 32) != v5 || v5 != *(unsigned __int8 *)(a3 + 32))
    goto LABEL_48;
  v6 = 16;
  if ((a2 & 1) != 0)
    v7 = 8;
  else
    v7 = 16;
  if ((a2 & 1) != 0)
    v8 = 16;
  else
    v8 = 8;
  v9 = *(_QWORD *)(a1 + v7);
  if ((a4 & 1) != 0)
    v10 = 8;
  else
    v10 = 16;
  if ((a4 & 1) == 0)
    v6 = 8;
  if (v9 != *(_QWORD *)(a3 + v6))
  {
    OUTLINED_FUNCTION_42_38();
LABEL_52:
    OUTLINED_FUNCTION_193_0();
    goto LABEL_53;
  }
  if (*(_QWORD *)(v4 + 8) != *(_QWORD *)(a1 + v8))
  {
    OUTLINED_FUNCTION_44_38();
    goto LABEL_52;
  }
  if (*(_QWORD *)(v4 + 16) != *(_QWORD *)(a3 + v10))
  {
    OUTLINED_FUNCTION_43_30();
    goto LABEL_52;
  }
  OUTLINED_FUNCTION_32_46();
  if (!(v14 ^ v15 | v13))
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v11 > 0x7FFFFFFF)
    goto LABEL_42;
  if (v12 > 0x7FFFFFFF)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  OUTLINED_FUNCTION_31_44();
  if (!(v14 ^ v15 | v13))
    goto LABEL_44;
  v21 = *(_QWORD *)(v16 + 24);
  if (v21 > 0x7FFFFFFF)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v22 = *(_QWORD *)(v4 + 24);
  if (v18 >= (uint64_t)0xFFFFFFFF80000000
    && v20 >= (uint64_t)0xFFFFFFFF80000000
    && v17 >= (uint64_t)0xFFFFFFFF80000000
    && v19 >= (uint64_t)0xFFFFFFFF80000000
    && v21 >= (uint64_t)0xFFFFFFFF80000000
    && v22 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v22 <= 0x7FFFFFFF)
    {
      OUTLINED_FUNCTION_26_66();
      OUTLINED_FUNCTION_38_53();
      return cblas_dgemm_NEWLAPACK();
    }
    goto LABEL_47;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  OUTLINED_FUNCTION_193_0();
  OUTLINED_FUNCTION_29_49();
LABEL_53:
  result = OUTLINED_FUNCTION_2_118();
  __break(1u);
  return result;
}

void UnsafeMutableVectorPointer<A>.addProduct(_:_:transposed:scaledBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, _QWORD, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, _QWORD, uint64_t);

  OUTLINED_FUNCTION_36_49(a1, a2, a3, a4, a5, a6);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_33();
  v11 = v10 - v9;
  OUTLINED_FUNCTION_41_44(v12, v13, v14, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE20);
  v16 = OUTLINED_FUNCTION_3_121();
  if ((_DWORD)v16)
  {
    OUTLINED_FUNCTION_12_86(v16, v17, v18, v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE18);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_14_81();
    *(_QWORD *)(v20 - 256) = v7;
    OUTLINED_FUNCTION_19_67(v21, v22, v23, v24);
    __swift_instantiateConcreteTypeFromMangledName(qword_255B1BE38);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_22_64();
    OUTLINED_FUNCTION_8_106(v11, v25);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_13_88();
    UnsafeMutableVectorPointer<A>.addProductFloat(_:_:transposed:scaledBy:)();
LABEL_5:
    OUTLINED_FUNCTION_3();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE28);
  v26 = OUTLINED_FUNCTION_3_121();
  if ((_DWORD)v26)
  {
    OUTLINED_FUNCTION_12_86(v26, v27, v28, v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE10);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_14_81();
    *(_QWORD *)(v30 - 256) = v7;
    OUTLINED_FUNCTION_19_67(v31, v32, v33, v34);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE30);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_22_64();
    OUTLINED_FUNCTION_8_106(v11, v35);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_13_88();
    UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_23_70();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_127();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_95();
  OUTLINED_FUNCTION_2_118();
  __break(1u);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, _QWORD, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, _QWORD, uint64_t);

  OUTLINED_FUNCTION_36_49(a1, a2, a3, a4, a5, a6);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  OUTLINED_FUNCTION_41_44(v10, v11, v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE20);
  v14 = OUTLINED_FUNCTION_3_121();
  if ((_DWORD)v14)
  {
    OUTLINED_FUNCTION_18_76(v14, v15, v16, v17);
    __swift_instantiateConcreteTypeFromMangledName(qword_255B1BE38);
    v18 = OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_9_100(v18, v19, v20, v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE18);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_10_88();
    OUTLINED_FUNCTION_8_106(v9, v22);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_34_51();
    OUTLINED_FUNCTION_30_56();
    UnsafeMutableVectorPointer<A>.addProductFloat(_:_:transposed:scaledBy:)();
LABEL_5:
    OUTLINED_FUNCTION_3();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE28);
  v23 = OUTLINED_FUNCTION_3_121();
  if ((_DWORD)v23)
  {
    OUTLINED_FUNCTION_18_76(v23, v24, v25, v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE30);
    v27 = OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_9_100(v27, v28, v29, v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1BE10);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_10_88();
    OUTLINED_FUNCTION_8_106(v9, v31);
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_34_51();
    OUTLINED_FUNCTION_30_56();
    UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_23_70();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_127();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_95();
  OUTLINED_FUNCTION_2_118();
  __break(1u);
}

void UnsafeMutableVectorPointer<A>.addProductFloat(_:_:transposed:scaledBy:)()
{
  char v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_35_43();
  if (!(v1 ^ v2 | v0))
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_33_57();
  if (v1 != v2 || v5 < v8)
    goto LABEL_25;
  if (v5 > 0x7FFFFFFF)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((v6 & 1) != 0)
    v10 = v4;
  else
    v10 = v5;
  if (v10 != v7)
    goto LABEL_31;
  if (*(uint64_t *)(v3 + 24) > 0x7FFFFFFF)
    goto LABEL_27;
  OUTLINED_FUNCTION_32_46();
  if (!(v1 ^ v2 | v0))
    goto LABEL_28;
  if (v11 >= (uint64_t)0xFFFFFFFF80000000
    && v12 >= (uint64_t)0xFFFFFFFF80000000
    && v13 >= (uint64_t)0xFFFFFFFF80000000)
  {
    OUTLINED_FUNCTION_31_44();
    if (v1 ^ v2 | v0)
    {
      OUTLINED_FUNCTION_28_50();
      OUTLINED_FUNCTION_16_83();
      OUTLINED_FUNCTION_19_6();
      return;
    }
    goto LABEL_30;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  OUTLINED_FUNCTION_193_0();
  OUTLINED_FUNCTION_0_115();
  __break(1u);
}

{
  char v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_40_43();
  if (!(v1 ^ v2 | v0))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_37_44();
  if (v1 != v2 || v5 < v9)
    goto LABEL_23;
  if (v5 > 0x7FFFFFFF)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((v6 & 1) != 0)
    v12 = v5;
  else
    v12 = v4;
  if (v12 != v3)
    goto LABEL_29;
  v13 = *(_QWORD *)(v10 + 24);
  if (v13 > 0x7FFFFFFF)
    goto LABEL_25;
  if (v8 > 0x7FFFFFFF)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v7 >= (uint64_t)0xFFFFFFFF80000000
    && v8 >= (uint64_t)0xFFFFFFFF80000000
    && v13 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v7 <= 0x7FFFFFFF)
    {
      OUTLINED_FUNCTION_24_55();
      OUTLINED_FUNCTION_16_83();
      OUTLINED_FUNCTION_19_6();
      return;
    }
    goto LABEL_28;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  OUTLINED_FUNCTION_193_0();
  OUTLINED_FUNCTION_0_115();
  __break(1u);
}

void UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)()
{
  char v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_35_43();
  if (!(v1 ^ v2 | v0))
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_33_57();
  if (v1 != v2 || v5 < v8)
    goto LABEL_25;
  if (v5 > 0x7FFFFFFF)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((v6 & 1) != 0)
    v10 = v4;
  else
    v10 = v5;
  if (v10 != v7)
    goto LABEL_31;
  if (*(uint64_t *)(v3 + 24) > 0x7FFFFFFF)
    goto LABEL_27;
  OUTLINED_FUNCTION_32_46();
  if (!(v1 ^ v2 | v0))
    goto LABEL_28;
  if (v11 >= (uint64_t)0xFFFFFFFF80000000
    && v12 >= (uint64_t)0xFFFFFFFF80000000
    && v13 >= (uint64_t)0xFFFFFFFF80000000)
  {
    OUTLINED_FUNCTION_31_44();
    if (v1 ^ v2 | v0)
    {
      OUTLINED_FUNCTION_28_50();
      OUTLINED_FUNCTION_17_76();
      OUTLINED_FUNCTION_19_6();
      return;
    }
    goto LABEL_30;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  OUTLINED_FUNCTION_193_0();
  OUTLINED_FUNCTION_0_115();
  __break(1u);
}

{
  char v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_40_43();
  if (!(v1 ^ v2 | v0))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_37_44();
  if (v1 != v2 || v5 < v9)
    goto LABEL_23;
  if (v5 > 0x7FFFFFFF)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((v6 & 1) != 0)
    v12 = v5;
  else
    v12 = v4;
  if (v12 != v3)
    goto LABEL_29;
  v13 = *(_QWORD *)(v10 + 24);
  if (v13 > 0x7FFFFFFF)
    goto LABEL_25;
  if (v8 > 0x7FFFFFFF)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v7 >= (uint64_t)0xFFFFFFFF80000000
    && v8 >= (uint64_t)0xFFFFFFFF80000000
    && v13 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v7 <= 0x7FFFFFFF)
    {
      OUTLINED_FUNCTION_24_55();
      OUTLINED_FUNCTION_17_76();
      OUTLINED_FUNCTION_19_6();
      return;
    }
    goto LABEL_28;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  OUTLINED_FUNCTION_193_0();
  OUTLINED_FUNCTION_0_115();
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_0_115()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_2_118()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_3_121()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_4_112(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v9 = v6[1];
  *(_OWORD *)(v8 - 144) = *v6;
  *(_OWORD *)(v8 - 128) = v9;
  *(_BYTE *)(v8 - 112) = *(_BYTE *)(v4 + 216);
  v10 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v4 + 144) = *(_OWORD *)v7;
  *(_OWORD *)(v4 + 160) = v10;
  *(_BYTE *)(v4 + 176) = *(_BYTE *)(v7 + 32);
  return type metadata accessor for UnsafeMatrixPointer(0, v5, a3, a4);
}

uint64_t OUTLINED_FUNCTION_6_127()
{
  uint64_t v0;

  strcpy((char *)(v0 - 128), "Scalar type ");
  *(_BYTE *)(v0 - 115) = 0;
  *(_WORD *)(v0 - 114) = -5120;
  return sub_22ABE0304();
}

uint64_t OUTLINED_FUNCTION_7_108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v5 - 192) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v5 - 176) = v6;
  *(_BYTE *)(v5 - 160) = *(_BYTE *)(v0 + 56);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_8_106@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, *(_QWORD *)(v3 - 336), v2);
}

uint64_t OUTLINED_FUNCTION_9_100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v7 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v6 - 272) = *(_OWORD *)v5;
  *(_OWORD *)(v6 - 256) = v7;
  *(_BYTE *)(v6 - 240) = *(_BYTE *)(v5 + 32);
  return type metadata accessor for UnsafeMatrixPointer(0, v4, a3, a4);
}

__n128 OUTLINED_FUNCTION_10_88()
{
  uint64_t v0;
  __n128 result;
  __int128 v2;

  result = *(__n128 *)(v0 - 312);
  v2 = *(_OWORD *)(v0 - 296);
  *(__n128 *)(v0 - 128) = result;
  *(_OWORD *)(v0 - 112) = v2;
  *(_BYTE *)(v0 - 96) = *(_BYTE *)(v0 - 280);
  return result;
}

uint64_t OUTLINED_FUNCTION_11_95()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_12_86(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v7 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v6 - 224) = *(_OWORD *)v5;
  *(_OWORD *)(v6 - 208) = v7;
  *(_BYTE *)(v6 - 192) = *(_BYTE *)(v5 + 32);
  return type metadata accessor for UnsafeMatrixPointer(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_13_88()
{
  uint64_t v0;

  return v0 - 128;
}

__n128 OUTLINED_FUNCTION_14_81()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 - 264);
  v3 = *(_OWORD *)(v1 - 248);
  *(__n128 *)(v1 - 128) = result;
  *(_OWORD *)(v1 - 112) = v3;
  *(_BYTE *)(v1 - 96) = *(_BYTE *)(v1 - 232);
  *(_QWORD *)(v1 - 288) = v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_83()
{
  return cblas_sgemv_NEWLAPACK();
}

uint64_t OUTLINED_FUNCTION_17_76()
{
  return cblas_dgemv_NEWLAPACK();
}

uint64_t OUTLINED_FUNCTION_18_76(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 - 200) = v5;
  *(_QWORD *)(v8 - 192) = v7;
  *(_QWORD *)(v8 - 184) = v6;
  return type metadata accessor for UnsafeVectorPointer(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_19_67(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for UnsafeVectorPointer(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_20_63()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_21_74()
{
  uint64_t v0;

  return v0 - 240;
}

uint64_t OUTLINED_FUNCTION_23_70()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 128) = 0;
  *(_QWORD *)(v0 - 120) = 0xE000000000000000;
  return sub_22ABDF7A0();
}

void OUTLINED_FUNCTION_36_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 - 336) = a6;
  *(_DWORD *)(v6 - 324) = a5;
}

__n128 OUTLINED_FUNCTION_39_49()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 240) = v3;
  *(_BYTE *)(v0 + 256) = *(_BYTE *)(v1 + 32);
  return result;
}

uint64_t OUTLINED_FUNCTION_41_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for UnsafeMutableVectorPointer(0, v4, a3, a4);
}

void DenseMatrix.indexed()()
{
  OUTLINED_FUNCTION_0_116();
  OUTLINED_FUNCTION_2_119();
  OUTLINED_FUNCTION_21();
}

void DenseMatrix.Transpose.indexed()()
{
  OUTLINED_FUNCTION_0_116();
  OUTLINED_FUNCTION_2_119();
  OUTLINED_FUNCTION_21();
}

void DenseMatrix.IndexedSequence.base.getter()
{
  OUTLINED_FUNCTION_0_116();
  OUTLINED_FUNCTION_2_119();
  OUTLINED_FUNCTION_21();
}

uint64_t DenseMatrix.IndexedSequence.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)(a5 + 40) = 0;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3 & 1;
  *(_QWORD *)(a5 + 24) = a4;
  *(_QWORD *)(a5 + 32) = 0;
  return swift_retain();
}

uint64_t DenseMatrix.IndexedSequence.Iterator.init(base:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3 & 1;
  *(_QWORD *)(a5 + 24) = a4;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = 0;
  *(_QWORD *)(a5 + 48) = 0;
  return result;
}

uint64_t sub_22ABCA1FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  DenseMatrix.IndexedSequence.makeIterator()(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
  return swift_release();
}

void DenseMatrix.IndexedSequence.Iterator.base.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_21();
}

uint64_t DenseMatrix.IndexedSequence.Iterator.row.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t DenseMatrix.IndexedSequence.Iterator.row.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*DenseMatrix.IndexedSequence.Iterator.row.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t DenseMatrix.IndexedSequence.Iterator.column.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t DenseMatrix.IndexedSequence.Iterator.column.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*DenseMatrix.IndexedSequence.Iterator.column.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t DenseMatrix.IndexedSequence.Iterator.flatIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t DenseMatrix.IndexedSequence.Iterator.flatIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*DenseMatrix.IndexedSequence.Iterator.flatIndex.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t DenseMatrix.IndexedSequence.Iterator.next()@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(void);
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v27 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata3);
  v6 = (char *)&v22 - v5;
  v7 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = v2 + 5;
  v9 = v2[5];
  v11 = v2[1];
  if (v9 >= v11)
    return __swift_storeEnumTagSinglePayload((uint64_t)v27, 1, 1, TupleTypeMetadata3);
  v12 = v2[4];
  if (v12 >= *v2)
    return __swift_storeEnumTagSinglePayload((uint64_t)v27, 1, 1, TupleTypeMetadata3);
  v23 = *v2;
  v26 = v12;
  v25 = v2[6];
  _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
  v13 = &v6[*(int *)(TupleTypeMetadata3 + 64)];
  v14 = *(uint64_t (**)(void))(v7 + 32);
  v24 = v13;
  result = v14();
  if ((v2[2] & 1) == 0)
  {
    *v10 = v9 + 1;
    v16 = v26;
    v18 = v26;
    v19 = v2 + 4;
    if (v9 + 1 != v11)
      goto LABEL_9;
    goto LABEL_8;
  }
  v16 = v26;
  v17 = v26 + 1;
  v2[4] = v26 + 1;
  v18 = v9;
  v19 = v2 + 5;
  v10 = v2 + 4;
  if (v17 == v23)
  {
LABEL_8:
    *v19 = v18 + 1;
    *v10 = 0;
  }
LABEL_9:
  if (__OFADD__(v25, 1))
  {
    __break(1u);
  }
  else
  {
    v2[6] = v25 + 1;
    v20 = v27;
    v21 = (char *)v27 + *(int *)(TupleTypeMetadata3 + 64);
    *v27 = v16;
    v20[1] = v9;
    ((void (*)(char *, char *, uint64_t))v14)(v21, v24, v3);
    return __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, TupleTypeMetadata3);
  }
  return result;
}

void sub_22ABCA4C0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for DenseMatrix.IndexedSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DenseMatrix.IndexedSequence);
}

uint64_t sub_22ABCA4E0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  return a1;
}

uint64_t sub_22ABCA52C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t sub_22ABCA5A0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t type metadata accessor for DenseMatrix.IndexedSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DenseMatrix.IndexedSequence.Iterator);
}

uint64_t sub_22ABCA600@<X0>(uint64_t a1@<X8>)
{
  return sub_22ABCA618((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))DenseMatrix.Transpose.indexed(), a1);
}

uint64_t sub_22ABCA60C@<X0>(uint64_t a1@<X8>)
{
  return sub_22ABCA618((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))DenseMatrix.indexed(), a1);
}

uint64_t sub_22ABCA618@<X0>(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  result = a1(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), *(_QWORD *)(v2 + 24));
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v6 & 1;
  *(_QWORD *)(a2 + 24) = v7;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_116()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_2_119()
{
  uint64_t v0;

  return v0;
}

void UpperStrictlyTriangularMatrix.indexed()()
{
  OUTLINED_FUNCTION_0_114();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_4_111();
  OUTLINED_FUNCTION_21();
}

void UpperStrictlyTriangularMatrix.IndexedSequence.base.getter()
{
  OUTLINED_FUNCTION_0_114();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_4_111();
  OUTLINED_FUNCTION_21();
}

uint64_t UpperStrictlyTriangularMatrix.IndexedSequence.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_OWORD *)(a5 + 32) = xmmword_22ABF2290;
  *(_QWORD *)(a5 + 48) = 0;
  swift_retain();
  return sub_22ABDEAEC();
}

double UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.init(base:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  double result;

  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  result = 0.0;
  *(_OWORD *)(a5 + 32) = xmmword_22ABF2290;
  *(_QWORD *)(a5 + 48) = 0;
  return result;
}

uint64_t sub_22ABCA738@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  UpperStrictlyTriangularMatrix.IndexedSequence.makeIterator()(*v1, v1[1], v1[2], v1[3], a1);
  swift_bridgeObjectRelease();
  return swift_release();
}

void UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.base.getter()
{
  swift_retain();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_21();
}

uint64_t UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.row.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.row.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.row.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.column.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.column.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.column.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.flatIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.flatIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.flatIndex.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UpperStrictlyTriangularMatrix.IndexedSequence.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t TupleTypeMetadata3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 16);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata3);
  v7 = (char *)&v22 - v6;
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2[5];
  v13 = v2[1];
  if (v12 >= v13)
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, TupleTypeMetadata3);
  v14 = v2[4];
  if (v14 >= *v2)
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, TupleTypeMetadata3);
  v23 = (_QWORD *)a2;
  v15 = v2[6];
  v25 = v14;
  swift_retain();
  v24 = v15;
  _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
  swift_release();
  v16 = &v7[*(int *)(TupleTypeMetadata3 + 64)];
  v17 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
  result = v17(v16, v11, v4);
  v19 = v25;
  v2[5] = v12 + 1;
  if (v12 + 1 != v13)
    goto LABEL_6;
  v2[4] = v19 + 1;
  if (!__OFADD__(v19, 2))
  {
    v2[5] = v19 + 2;
LABEL_6:
    if (!__OFADD__(v24, 1))
    {
      v2[6] = v24 + 1;
      v20 = (uint64_t)v23;
      v21 = (char *)v23 + *(int *)(TupleTypeMetadata3 + 64);
      *v23 = v19;
      *(_QWORD *)(v20 + 8) = v12;
      v17(v21, v16, v4);
      return __swift_storeEnumTagSinglePayload(v20, 0, 1, TupleTypeMetadata3);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_22ABCA9E8()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for UpperStrictlyTriangularMatrix.IndexedSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UpperStrictlyTriangularMatrix.IndexedSequence);
}

uint64_t sub_22ABCAA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22ABCAA58(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t sub_22ABCAADC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t sub_22ABCAB30(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22ABCAB70(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for UpperStrictlyTriangularMatrix.IndexedSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UpperStrictlyTriangularMatrix.IndexedSequence.Iterator);
}

void sub_22ABCABC8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  UpperStrictlyTriangularMatrix.indexed()();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
}

uint64_t sub_22ABCABF8()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_38_29();
  __swift_allocate_value_buffer(v0, static Logger.linearAlgebra);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.linearAlgebra);
  return sub_22ABDE7F8();
}

uint64_t Logger.linearAlgebra.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_255B1BC88 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_38_29();
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.linearAlgebra);
}

uint64_t static Logger.linearAlgebra.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255B1BC88 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_38_29();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.linearAlgebra);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t UnsafeVectorPointer.baseAddress.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*UnsafeVectorPointer.baseAddress.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeVectorPointer.count.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*UnsafeVectorPointer.count.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeVectorPointer.stride.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t UnsafeVectorPointer.stride.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*UnsafeVectorPointer.stride.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeVectorPointer.init(_:)()
{
  uint64_t result;

  result = sub_22ABDED08();
  if (!result)
    __break(1u);
  return result;
}

uint64_t UnsafeVectorPointer.Iterator.baseAddress.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*UnsafeVectorPointer.Iterator.baseAddress.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeVectorPointer.Iterator.stride.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t (*UnsafeVectorPointer.Iterator.stride.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeVectorPointer.Iterator.next()@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *v2;
  if (!*v2)
    goto LABEL_5;
  v5 = v2[1];
  if (v5)
  {
    if (v4 != v5)
    {
      v6 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(v6 - 8);
      *v2 = v4 + *(_QWORD *)(v7 + 72) * v2[2];
      (*(void (**)(uint64_t))(v7 + 16))(a2);
      v8 = a2;
      v9 = 0;
      v10 = v6;
      return __swift_storeEnumTagSinglePayload(v8, v9, 1, v10);
    }
LABEL_5:
    v10 = *(_QWORD *)(result + 16);
    v8 = a2;
    v9 = 1;
    return __swift_storeEnumTagSinglePayload(v8, v9, 1, v10);
  }
  __break(1u);
  return result;
}

void UnsafeVectorPointer.makeIterator()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 != (a2 * a3) >> 63)
    __break(1u);
}

uint64_t UnsafeVectorPointer._copyContents(initializing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t result;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a1;
  v11 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v33 - v15;
  v37 = a3;
  v38 = a4;
  v39 = a5;
  v19 = type metadata accessor for UnsafeVectorPointer(0, a6, v17, v18);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeVectorPointer<A>, v19);
  if ((sub_22ABDF434() & 1) != 0)
  {
    UnsafeVectorPointer.makeIterator()(a3, a4, a5);
    v21 = v20;
    OUTLINED_FUNCTION_13_89();
    return v21;
  }
  v34 = a3;
  v35 = a4;
  v22 = sub_22ABDED08();
  if (v22)
  {
    v23 = v35;
    if (a2 < v35)
    {
      __break(1u);
    }
    else
    {
      v24 = v22;
      if (a5 == 1)
      {
        v25 = v34;
        sub_22ABDF584();
      }
      else
      {
        v33[1] = a2;
        UnsafeVectorPointer.makeIterator()(v34, v35, a5);
        v37 = v26;
        v38 = v27;
        v39 = v28;
        v30 = type metadata accessor for UnsafeVectorPointer.Iterator(0, a6, v28, v29);
        UnsafeVectorPointer.Iterator.next()(v30, (uint64_t)v16);
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, a6) != 1)
        {
          v31 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
          do
          {
            v31(v13, v16, a6);
            v31((char *)v24, v13, a6);
            v24 += *(_QWORD *)(v11 + 72);
            UnsafeVectorPointer.Iterator.next()(v30, (uint64_t)v16);
          }
          while (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, a6) != 1);
        }
        v25 = v34;
        v23 = v35;
      }
      if ((unsigned __int128)(v23 * (__int128)a5) >> 64 == (v23 * a5) >> 63)
      {
        v21 = v25 + *(_QWORD *)(v11 + 72) * v23 * a5;
        OUTLINED_FUNCTION_13_89();
        sub_22ABDF620();
        return v21;
      }
    }
    __break(1u);
  }
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for UnsafeVectorPointer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeVectorPointer);
}

uint64_t type metadata accessor for UnsafeVectorPointer.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeVectorPointer.Iterator);
}

uint64_t sub_22ABCB184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a2, a1);
}

void sub_22ABCB19C(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  UnsafeVectorPointer.makeIterator()(*v1, v1[1], v1[2]);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
}

uint64_t sub_22ABCB1D4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeVectorPointer<A>, a1);
  return sub_22ABDF3BC();
}

uint64_t sub_22ABCB208(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeVectorPointer<A>, a1);
  return sub_22ABDF3EC();
}

uint64_t sub_22ABCB25C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = UnsafeVectorPointer._copyContents(initializing:)(a2, a3, *v4, v4[1], v4[2], *(_QWORD *)(a4 + 16));
  a1[1] = v6;
  a1[2] = v7;
  return v8;
}

uint64_t UnsafeVectorPointer.startIndex.getter()
{
  return 0;
}

Swift::Int __swiftcall UnsafeVectorPointer.index(after:)(Swift::Int after)
{
  return after + 1;
}

Swift::Void __swiftcall UnsafeVectorPointer.formIndex(after:)(Swift::Int *after)
{
  ++*after;
}

Swift::Int __swiftcall UnsafeVectorPointer.index(before:)(Swift::Int before)
{
  return before - 1;
}

Swift::Void __swiftcall UnsafeVectorPointer.formIndex(before:)(Swift::Int *before)
{
  --*before;
}

Swift::Int __swiftcall UnsafeVectorPointer.index(_:offsetBy:)(Swift::Int _, Swift::Int offsetBy)
{
  return offsetBy + _;
}

Swift::Int_optional __swiftcall UnsafeVectorPointer.index(_:offsetBy:limitedBy:)(Swift::Int _, Swift::Int offsetBy, Swift::Int limitedBy)
{
  Swift::Int v4;
  Swift::Int v5;
  Swift::Bool v6;
  Swift::Int_optional result;

  v4 = limitedBy - _;
  if (offsetBy < 1)
  {
    if (v4 <= 0 && v4 > offsetBy)
      goto LABEL_4;
LABEL_10:
    v6 = 0;
    v5 = offsetBy + _;
    goto LABEL_11;
  }
  if (v4 < 0 || v4 >= (unint64_t)offsetBy)
    goto LABEL_10;
LABEL_4:
  v5 = 0;
  v6 = 1;
LABEL_11:
  result.value = v5;
  result.is_nil = v6;
  return result;
}

Swift::Int __swiftcall UnsafeVectorPointer.distance(from:to:)(Swift::Int from, Swift::Int to)
{
  return to - from;
}

uint64_t UnsafeVectorPointer.indices.getter()
{
  return 0;
}

uint64_t _s13LinearAlgebra19UnsafeVectorPointerVyxSicig_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  if ((unsigned __int128)(result * (__int128)a3) >> 64 == (result * a3) >> 63)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(a5, a2 + *(_QWORD *)(*(_QWORD *)(a4 - 8) + 72) * result * a3, a4);
  __break(1u);
  return result;
}

void UnsafeVectorPointer.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for UnsafeVectorPointer(0, a6, a3, a4);
  OUTLINED_FUNCTION_52_3();
}

double sub_22ABCB3B4()
{
  uint64_t v0;
  double result;
  __int128 v2;
  uint64_t v3;
  __int128 v4;

  sub_22ABE01F0();
  result = *(double *)&v2;
  *(_OWORD *)v0 = v2;
  *(_QWORD *)(v0 + 16) = v3;
  *(_OWORD *)(v0 + 24) = v4;
  return result;
}

void sub_22ABCB3F4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
}

void (*sub_22ABCB400(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v3;
  _QWORD *v7;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_22ABCB464(v7, *a2, *v3, v3[1], v3[2], *(_QWORD *)(a3 + 16));
  return sub_22A9B858C;
}

void (*sub_22ABCB464(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(_QWORD *a1)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a6 - 8);
  *a1 = a6;
  a1[1] = v8;
  a1[2] = malloc(*(_QWORD *)(v8 + 64));
  UnsafeVectorPointer.subscript.getter(a2, a3);
  return sub_22A9B8614;
}

void sub_22ABCB4DC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  UnsafeVectorPointer.subscript.getter(*a1, a1[1], *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16));
}

__n128 sub_22ABCB510()
{
  uint64_t v0;
  __n128 result;
  __n128 v2;
  __int128 v3;
  uint64_t v4;

  result = v2;
  *(__n128 *)v0 = v2;
  *(_OWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 32) = v4;
  return result;
}

uint64_t sub_22ABCB534@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = UnsafeVectorPointer.indices.getter();
  *a1 = 0;
  a1[1] = v3;
  return result;
}

Swift::Int sub_22ABCB568@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = UnsafeVectorPointer.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_22ABCB594@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = UnsafeVectorPointer.index(before:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_22ABCB5C0@<X0>(Swift::Int *a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int result;

  result = UnsafeVectorPointer.index(_:offsetBy:)(*a1, a2);
  *a3 = result;
  return result;
}

Swift::Int sub_22ABCB5E8@<X0>(Swift::Int *a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X2>, uint64_t a4@<X8>)
{
  Swift::Int_optional v6;

  v6 = UnsafeVectorPointer.index(_:offsetBy:limitedBy:)(*a1, a2, *a3);
  *(_QWORD *)a4 = v6.value;
  *(_BYTE *)(a4 + 8) = v6.is_nil;
  return v6.value;
}

Swift::Int sub_22ABCB61C(Swift::Int *a1, Swift::Int *a2)
{
  return UnsafeVectorPointer.distance(from:to:)(*a1, *a2);
}

_QWORD *UnsafeVectorPointer.withContiguousStorageIfAvailable<A>(_:)@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  _QWORD *result;
  uint64_t v10;

  if (a4 == 1)
  {
    result = a1(a6, a2, a3, 1);
    if (v6)
      return result;
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)a6, v10, 1, a5);
}

void UnsafeVectorPointer.init(rebasing:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_5_102();
  type metadata accessor for UnsafeVectorPointer(v0, v1, v2, v3);
  OUTLINED_FUNCTION_52_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_5_102();
  type metadata accessor for UnsafeMutableVectorPointer(v0, v1, v2, v3);
  OUTLINED_FUNCTION_52_3();
}

void sub_22ABCB6D4()
{
  char v0;

  OUTLINED_FUNCTION_9_101();
  OUTLINED_FUNCTION_8_107();
  OUTLINED_FUNCTION_4_113();
  OUTLINED_FUNCTION_2_120();
  OUTLINED_FUNCTION_14_82();
  if (v0)
    OUTLINED_FUNCTION_0_117();
  __break(1u);
}

void sub_22ABCB740()
{
  char v0;

  OUTLINED_FUNCTION_9_101();
  OUTLINED_FUNCTION_8_107();
  OUTLINED_FUNCTION_4_113();
  OUTLINED_FUNCTION_2_120();
  OUTLINED_FUNCTION_14_82();
  if (v0)
    OUTLINED_FUNCTION_0_117();
  __break(1u);
}

Swift::Void __swiftcall UnsafeVectorPointer.deallocate()()
{
  sub_22ABDECE4();
}

uint64_t UnsafeVectorPointer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDECF0();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_12_1();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_12_1();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  return 0;
}

void sub_22ABCB8BC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABCB8CC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABCB8DC()
{
  sub_22ABCB968();
}

void sub_22ABCB8E8()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABCB8F8()
{
  sub_22ABCB968();
}

uint64_t sub_22ABCB904(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeVectorPointer<A>);
  return MEMORY[0x22E2E4D80](MEMORY[0x24BEE4230], a1, &v3);
}

void sub_22ABCB94C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABCB95C()
{
  sub_22ABCB968();
}

void sub_22ABCB968()
{
  sub_22A9B88AC();
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22ABCB9AC(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeVectorPointer<A>);
  return MEMORY[0x22E2E4D80](MEMORY[0x24BEE4218], a1, &v3);
}

uint64_t sub_22ABCB9F4()
{
  return UnsafeVectorPointer.debugDescription.getter();
}

uint64_t sub_22ABCBA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeVectorPointer<A>, a4);
  return sub_22ABDCE9C();
}

uint64_t sub_22ABCBA88(uint64_t a1, int a2)
{
  int v2;

  if (a2)
  {
    if (a2 == 1 || !*(_BYTE *)(a1 + 24))
    {
      if (*(_QWORD *)a1)
        v2 = -1;
      else
        v2 = 0;
    }
    else
    {
      v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22ABCBAC4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void OUTLINED_FUNCTION_0_117()
{
  JUMPOUT(0x22E2E4498);
}

uint64_t OUTLINED_FUNCTION_2_120()
{
  return sub_22ABE01FC();
}

uint64_t OUTLINED_FUNCTION_3_122()
{
  return sub_22ABE01E4();
}

uint64_t OUTLINED_FUNCTION_4_113()
{
  return sub_22ABE01E4();
}

uint64_t OUTLINED_FUNCTION_5_102()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_8_107()
{
  return sub_22ABE01FC();
}

uint64_t OUTLINED_FUNCTION_9_101()
{
  return sub_22ABE0214();
}

uint64_t OUTLINED_FUNCTION_12_87(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_13_89()
{
  return sub_22ABDF608();
}

void *sub_22ABCBC28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  const void *v4;
  void *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_5_30();
  }
  else
  {
    OUTLINED_FUNCTION_18_28();
    if (!v8 && v7)
    {
      v7 = v6 >= v3;
      v8 = v6 == v3;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
      return OUTLINED_FUNCTION_7_38(v5, v4, 8 * v2);
    OUTLINED_FUNCTION_9_11();
    OUTLINED_FUNCTION_4_32();
  }
  result = (void *)OUTLINED_FUNCTION_3_41();
  __break(1u);
  return result;
}

void static DenseMatrix.+= infix(_:_:)()
{
  sub_22ABCC104();
  OUTLINED_FUNCTION_19_6();
}

{
  sub_22ABCBDBC();
  OUTLINED_FUNCTION_19_6();
}

{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t i;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (**v17)(uint64_t);
  uint64_t v18;
  uint64_t k;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t j;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (**v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_4_4();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_23();
  if (*v1 != v5 || v1[1] != v3)
  {
LABEL_39:
    OUTLINED_FUNCTION_31_10();
    OUTLINED_FUNCTION_193_0();
    OUTLINED_FUNCTION_156_3();
    OUTLINED_FUNCTION_8_111();
    OUTLINED_FUNCTION_40_10();
  }
  v6 = *((unsigned __int8 *)v1 + 16);
  if (((((v2 & 1) != 0) ^ v6) & 1) != 0)
  {
    v33 = v4;
    v34 = v3;
    if ((v6 & 1) != 0)
    {
      if (v3 < 0)
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      if (v3)
      {
        v7 = 0;
        while (v7 != v3)
        {
          v8 = *v1;
          if (*v1 < 0)
            goto LABEL_33;
          v9 = v1;
          if (v8)
          {
            for (i = 0; i != v8; ++i)
            {
              v11 = OUTLINED_FUNCTION_35_44();
              OUTLINED_FUNCTION_24_57((uint64_t)v11, v12);
              v13 = OUTLINED_FUNCTION_19_71();
              v17 = (void (**)(uint64_t))OUTLINED_FUNCTION_59_27(v13, v14, v15, v16);
              DenseMatrix.subscript.modify(v17, i, v7);
              OUTLINED_FUNCTION_5_110();
              OUTLINED_FUNCTION_18_79();
              OUTLINED_FUNCTION_19_71();
              v3 = v34;
            }
          }
          ++v7;
          v1 = v9;
          if (v7 == v3)
            goto LABEL_30;
        }
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
    }
    else
    {
      if (v4 < 0)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if (v4)
      {
        v22 = 0;
        while (v22 != v4)
        {
          v23 = v1[1];
          if (v23 < 0)
            goto LABEL_34;
          v24 = v1;
          if (v23)
          {
            for (j = 0; j != v23; ++j)
            {
              v26 = OUTLINED_FUNCTION_35_44();
              OUTLINED_FUNCTION_24_57((uint64_t)v26, v27);
              v28 = OUTLINED_FUNCTION_19_71();
              v32 = (void (**)(uint64_t))OUTLINED_FUNCTION_59_27(v28, v29, v30, v31);
              DenseMatrix.subscript.modify(v32, v22, j);
              OUTLINED_FUNCTION_5_110();
              OUTLINED_FUNCTION_18_79();
              OUTLINED_FUNCTION_19_71();
              v4 = v33;
            }
          }
          ++v22;
          v1 = v24;
          if (v22 == v4)
            goto LABEL_30;
        }
        goto LABEL_32;
      }
    }
  }
  else
  {
    v18 = v4 * v3;
    if ((unsigned __int128)(v4 * (__int128)v3) >> 64 != (v4 * v3) >> 63)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v18 < 0)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18)
    {
      for (k = 0; k != v18; ++k)
      {
        _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
        v20 = OUTLINED_FUNCTION_60_28();
        sub_22ABDF8E4();
        OUTLINED_FUNCTION_16_88();
        OUTLINED_FUNCTION_5_110();
        OUTLINED_FUNCTION_18_79();
        nullsub_1(v20, v21);
      }
    }
  }
LABEL_30:
  OUTLINED_FUNCTION_3();
}

uint64_t static DenseMatrix.+ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return OUTLINED_FUNCTION_55_27(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t static DenseMatrix.+ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;

  v5 = swift_retain();
  OUTLINED_FUNCTION_21_75(v5, v6, v7, v8, v9, v10, v11, v12, a5);
  static DenseMatrix.+= infix(_:_:)();
  return v15;
}

void static DenseMatrix.-= infix(_:_:)()
{
  sub_22ABCBDBC();
  OUTLINED_FUNCTION_19_6();
}

{
  sub_22ABCC104();
  OUTLINED_FUNCTION_19_6();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_4_4();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_23();
  if (((v8 ^ *(unsigned __int8 *)(v5 + 16)) & 1) != 0 || *(_QWORD *)v5 != v6 || *(_QWORD *)(v5 + 8) != v7)
  {
LABEL_12:
    OUTLINED_FUNCTION_31_10();
    OUTLINED_FUNCTION_193_0();
    OUTLINED_FUNCTION_156_3();
    OUTLINED_FUNCTION_8_111();
    OUTLINED_FUNCTION_40_10();
  }
  v9 = v6 * v7;
  if ((unsigned __int128)(v6 * (__int128)v7) >> 64 != (v6 * v7) >> 63)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v9 < 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v9)
  {
    for (i = 0; i != v9; ++i)
    {
      _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
      v11 = OUTLINED_FUNCTION_60_28();
      sub_22ABDF8E4();
      OUTLINED_FUNCTION_16_88();
      OUTLINED_FUNCTION_56_25();
      sub_22ABDFB0C();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
      nullsub_1(v11, v12);
    }
  }
  OUTLINED_FUNCTION_3();
}

void sub_22ABCBDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (**v32)(uint64_t);
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t j;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v13 = v12 - v11;
  v15 = *v14;
  v56 = v16;
  if (v15 != DenseMatrix.Transpose.rowCount.getter(v17, v16)
    || (v18 = v7[1], v18 != OUTLINED_FUNCTION_44_39(v5, v56, v9, v3, v1)))
  {
LABEL_30:
    OUTLINED_FUNCTION_52_30();
    OUTLINED_FUNCTION_193_0();
    OUTLINED_FUNCTION_8_108();
    OUTLINED_FUNCTION_40_10();
  }
  v19 = v18;
  if ((v7[2] & 1) != 0)
  {
    if (v18 < 0)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v18)
    {
      v20 = v56;
      v21 = 0;
      v54 = v18;
      v58 = v7;
      v60 = v5;
      while (v21 != v19)
      {
        v22 = *v7;
        if (*v7 < 0)
          goto LABEL_26;
        v23 = v5;
        v24 = v13;
        v25 = v20;
        if (v22)
        {
          for (i = 0; i != v22; ++i)
          {
            OUTLINED_FUNCTION_58_19();
            OUTLINED_FUNCTION_49(v24, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
            v28 = OUTLINED_FUNCTION_13_90();
            OUTLINED_FUNCTION_31_45(v28, v29, v30, v31);
            v32 = (void (**)(uint64_t))OUTLINED_FUNCTION_64_22();
            v34 = OUTLINED_FUNCTION_29_50(v32, v33, v21);
            v36 = OUTLINED_FUNCTION_23_71((uint64_t)v34, v35);
            OUTLINED_FUNCTION_15_85(v36, v24);
            OUTLINED_FUNCTION_51(v24, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
            OUTLINED_FUNCTION_13_90();
            v23 = v60;
          }
        }
        ++v21;
        v19 = v54;
        v20 = v25;
        v5 = v23;
        v7 = v58;
        v13 = v24;
        if (v21 == v54)
          goto LABEL_23;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
  }
  else
  {
    if (v15 < 0)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v15)
    {
      v37 = 0;
      v55 = v15;
      v57 = v10;
      v59 = v7;
      v61 = v5;
      while (v37 != v15)
      {
        v38 = v7[1];
        if (v38 < 0)
          goto LABEL_27;
        v39 = v5;
        v40 = v9;
        if (v38)
        {
          for (j = 0; j != v38; ++j)
          {
            OUTLINED_FUNCTION_64_22();
            v43 = v42;
            v45 = v44;
            OUTLINED_FUNCTION_58_19();
            OUTLINED_FUNCTION_49(v13, v46, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 16));
            v47 = OUTLINED_FUNCTION_13_90();
            OUTLINED_FUNCTION_31_45(v47, v48, v49, v50);
            v51 = OUTLINED_FUNCTION_29_50(&v62, v43, j);
            v53 = OUTLINED_FUNCTION_23_71((uint64_t)v51, v52);
            OUTLINED_FUNCTION_15_85(v53, v13);
            OUTLINED_FUNCTION_51(v13, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
            OUTLINED_FUNCTION_13_90();
            v37 = v43;
            v40 = v45;
            v39 = v61;
          }
        }
        ++v37;
        v15 = v55;
        v5 = v39;
        v7 = v59;
        v9 = v40;
        if (v37 == v55)
          goto LABEL_23;
      }
      goto LABEL_25;
    }
  }
LABEL_23:
  OUTLINED_FUNCTION_3();
}

void sub_22ABCC104()
{
  void (*v0)(void);
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (**v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  void (*v58)(uint64_t);

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v51 = v8;
  v48 = v9;
  v11 = v10;
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  v56 = v17;
  v57 = v11;
  if (DenseMatrix.Transpose.rowCount.getter(*v17, v17[1]) != v11
    || (v18 = OUTLINED_FUNCTION_28_51(), DenseMatrix.Transpose.columnCount.getter(v18, v19, v20, v21, v22, v23) != v48))
  {
LABEL_30:
    OUTLINED_FUNCTION_52_30();
    OUTLINED_FUNCTION_193_0();
    OUTLINED_FUNCTION_8_108();
    OUTLINED_FUNCTION_40_10();
  }
  v49 = v51 & 1;
  v24 = OUTLINED_FUNCTION_28_51();
  v50 = v3;
  if ((DenseMatrix.Transpose.layout.getter(v24, v25, v26) & 1) != 0)
  {
    if (v48 < 0)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v48)
    {
      v43 = 0;
      v54 = v7;
      while (v43 != v48)
      {
        v44 = DenseMatrix.Transpose.rowCount.getter(*v56, v56[1]);
        if (v44 < 0)
          goto LABEL_27;
        v45 = v7;
        if (v44)
        {
          v46 = 0;
          v53 = v44;
          do
          {
            OUTLINED_FUNCTION_64_22();
            DenseMatrix.subscript.read();
            (*(void (**)(uint64_t))(v12 + 16))(v16);
            OUTLINED_FUNCTION_12_88();
            type metadata accessor for DenseMatrix(0, v5, v50, v47);
            OUTLINED_FUNCTION_29_50(&v58, v43, v46);
            OUTLINED_FUNCTION_71_21();
            v1();
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v5);
            OUTLINED_FUNCTION_12_88();
            v45 = v54;
            ++v46;
          }
          while (v53 != v46);
        }
        ++v43;
        v7 = v45;
        if (v43 == v48)
          goto LABEL_23;
      }
      goto LABEL_25;
    }
  }
  else
  {
    if (v11 < 0)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v11)
    {
      v27 = 0;
      v55 = v12;
      while (v27 != v57)
      {
        v28 = OUTLINED_FUNCTION_44_39(*v56, v56[1], *((unsigned __int8 *)v56 + 16), v56[3], v5);
        if (v28 < 0)
          goto LABEL_26;
        v29 = v7;
        v30 = v57;
        v31 = v49;
        v32 = v27;
        if (v28)
        {
          v33 = 0;
          v52 = v28;
          do
          {
            v34 = v32;
            v35 = v31;
            v36 = v29;
            OUTLINED_FUNCTION_58_19();
            OUTLINED_FUNCTION_49(v16, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16));
            OUTLINED_FUNCTION_12_88();
            type metadata accessor for DenseMatrix(0, v5, v3, v38);
            v39 = (void (**)(uint64_t))OUTLINED_FUNCTION_64_22();
            OUTLINED_FUNCTION_29_50(v39, v40, v34);
            OUTLINED_FUNCTION_71_21();
            OUTLINED_FUNCTION_15_85(v41, v42);
            OUTLINED_FUNCTION_51(v16, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
            OUTLINED_FUNCTION_12_88();
            v31 = v35;
            v32 = v34;
            v30 = v57;
            v29 = v36;
            ++v33;
          }
          while (v52 != v33);
        }
        v7 = v29;
        v27 = v32 + 1;
        if (v32 + 1 == v30)
          goto LABEL_23;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
  }
LABEL_23:
  OUTLINED_FUNCTION_3();
}

uint64_t static DenseMatrix.- infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return OUTLINED_FUNCTION_55_27(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_22ABCC4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v22;

  v11 = swift_retain();
  v19 = OUTLINED_FUNCTION_21_75(v11, v12, v13, v14, v15, v16, v17, v18, a1);
  a11(v19);
  return v22;
}

void static DenseMatrix.- infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_4_4();
  v22 = v21;
  v23 = *(_QWORD *)(a21 - 8);
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_33();
  v27 = v26 - v25;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v28);
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  sub_22ABDFF20();
  static DenseMatrix.* infix(_:_:)(v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v27, a21);
  static DenseMatrix.+= infix(_:_:)();
  OUTLINED_FUNCTION_3();
}

void static DenseMatrix.* infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  _DWORD *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[2];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t);
  uint64_t v108[5];

  OUTLINED_FUNCTION_4_4();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v93 = v28;
  LODWORD(v105) = v29;
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  v101 = *(_QWORD *)(a21 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v94 = (char *)v87 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_12_0();
  v89 = v38;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_12_0();
  v102 = v40;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_66_25(v42, v43, v44, v45, v46, v47, v48, v49, v87[0]);
  v88 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a22 + 16) + 16) + 8);
  v91 = OUTLINED_FUNCTION_22_65(v50, *(_QWORD *)(v88 + 16));
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_33_58(v52, v87[0]);
  v95 = v25;
  v96 = v27;
  v53 = v25;
  v97 = v23;
  v54 = a22;
  if (DenseMatrix.Transpose.rowCount.getter(v27, v53) != v31)
    goto LABEL_26;
  v55 = v31;
  v99 = v35;
  v100 = v33;
  if (qword_255B1BC88 != -1)
    goto LABEL_23;
  while (1)
  {
    v56 = sub_22ABDE804();
    __swift_project_value_buffer(v56, (uint64_t)static Logger.linearAlgebra);
    v57 = sub_22ABDE7EC();
    v58 = sub_22ABDF4C4();
    v59 = os_log_type_enabled(v57, v58);
    v106 = v54;
    if (v59)
    {
      v60 = (_DWORD *)OUTLINED_FUNCTION_4_12();
      v108[0] = OUTLINED_FUNCTION_4_12();
      *v60 = 136315138;
      v61 = OUTLINED_FUNCTION_72_23();
      v63 = sub_22AAB5318(v61, v62, v108);
      OUTLINED_FUNCTION_68_24(v63);
      sub_22ABDF65C();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_48_37(&dword_22A999000, v57, v58, "Using a slow implementation of matrix multiplication for %s. Prefer using Float or Double.");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_2_2();
    }

    v64 = OUTLINED_FUNCTION_44_39(v96, v95, v99, v97, a21);
    v87[1] = OUTLINED_FUNCTION_25_54();
    sub_22ABE013C();
    v65 = v98;
    sub_22ABDFF20();
    v66 = v100;
    v90 = v64;
    DenseMatrix.init(rowCount:columnCount:layout:repeating:)(v100, v64, 0, v65, a21);
    OUTLINED_FUNCTION_51_39(v67, v68, v69, v70);
    if (v66 < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      OUTLINED_FUNCTION_193_0();
      OUTLINED_FUNCTION_8_108();
      OUTLINED_FUNCTION_40_10();
    }
    if (!v66)
      break;
    v71 = v90;
    if (v90 < 0)
      goto LABEL_25;
    v72 = 0;
    v92 = v105 & 1;
    while (v72 != v66)
    {
      v103 = v72;
      if (v71)
      {
        if (v55 < 0)
          goto LABEL_22;
        v73 = 0;
        while (v73 != v71)
        {
          OUTLINED_FUNCTION_59_26();
          sub_22ABE013C();
          OUTLINED_FUNCTION_24_56();
          v104 = v73;
          if (v55)
          {
            v75 = v89;
            v76 = 0;
            do
            {
              v105 = v76 + 1;
              OUTLINED_FUNCTION_41_45();
              v77 = v55;
              v78 = *(void (**)(uint64_t))(v101 + 16);
              v78(v75);
              OUTLINED_FUNCTION_67_23();
              v79 = v100;
              OUTLINED_FUNCTION_41_45();
              v80 = (uint64_t)v94;
              v78((uint64_t)v94);
              OUTLINED_FUNCTION_14_83();
              v81 = v98;
              sub_22ABDF308();
              v66 = v79;
              OUTLINED_FUNCTION_60_27(v80);
              OUTLINED_FUNCTION_60_27(v75);
              OUTLINED_FUNCTION_65_30();
              OUTLINED_FUNCTION_60_27(v81);
              v54 = v106;
              v76 = v105;
              v55 = v77;
            }
            while (v77 != v105);
          }
          v82 = v104;
          v83 = v104 + 1;
          type metadata accessor for DenseMatrix(0, a21, v54, v74);
          DenseMatrix.subscript.modify(&v107, v103, v82);
          v84 = v101;
          v85 = v102;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 24))(v86, v102, a21);
          OUTLINED_FUNCTION_14_83();
          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v85, a21);
          v73 = v83;
          v71 = v90;
          if (v83 == v90)
            goto LABEL_18;
        }
        __break(1u);
        break;
      }
LABEL_18:
      v72 = v103 + 1;
      if (v103 + 1 == v66)
        goto LABEL_19;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_once();
  }
LABEL_19:
  OUTLINED_FUNCTION_3();
}

{
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  _DWORD *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84[2];
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t);
  uint64_t v104[5];

  OUTLINED_FUNCTION_4_4();
  v89 = v22;
  LODWORD(v101) = v23;
  v100 = v24;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = a22;
  v35 = v34 & 1;
  v96 = *(_QWORD *)(a21 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v37 = (uint64_t)v84 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_12_0();
  v90 = v39;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_12_0();
  v97 = v41;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_66_25(v43, v44, v45, v46, v47, v48, v49, v50, v84[0]);
  v85 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a22 + 16) + 16) + 8);
  v86 = OUTLINED_FUNCTION_22_65(v51, *(_QWORD *)(v85 + 16));
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_33_58(v53, v84[0]);
  v92 = v30;
  v93 = v28;
  if (DenseMatrix.Transpose.columnCount.getter(v32, v30, v35, v28, a21, a22) != v26)
    goto LABEL_26;
  v87 = v35;
  v95 = v32;
  if (qword_255B1BC88 != -1)
    goto LABEL_23;
  while (1)
  {
    v54 = sub_22ABDE804();
    __swift_project_value_buffer(v54, (uint64_t)static Logger.linearAlgebra);
    v55 = sub_22ABDE7EC();
    v56 = sub_22ABDF4C4();
    v57 = os_log_type_enabled(v55, v56);
    v91 = v37;
    v102 = v33;
    if (v57)
    {
      v58 = (_DWORD *)OUTLINED_FUNCTION_4_12();
      v104[0] = OUTLINED_FUNCTION_4_12();
      *v58 = 136315138;
      v59 = OUTLINED_FUNCTION_72_23();
      v61 = sub_22AAB5318(v59, v60, v104);
      OUTLINED_FUNCTION_68_24(v61);
      sub_22ABDF65C();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_48_37(&dword_22A999000, v55, v56, "Using a slow implementation of matrix multiplication for %s. Prefer using Float or Double.");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_2_2();
    }

    v37 = DenseMatrix.Transpose.rowCount.getter(v95, v92);
    v84[1] = OUTLINED_FUNCTION_25_54();
    sub_22ABE013C();
    v62 = v94;
    sub_22ABDFF20();
    DenseMatrix.init(rowCount:columnCount:layout:repeating:)(v37, v100, 0, v62, a21);
    OUTLINED_FUNCTION_51_39(v63, v64, v65, v66);
    if (v37 < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      OUTLINED_FUNCTION_193_0();
      OUTLINED_FUNCTION_8_108();
      OUTLINED_FUNCTION_40_10();
    }
    if (!v37)
      break;
    if (v100 < 0)
      goto LABEL_25;
    v67 = 0;
    v84[0] = v37;
    v88 = v101 & 1;
    while (v67 != v37)
    {
      v98 = v67;
      if (v100)
      {
        if (v26 < 0)
          goto LABEL_22;
        v68 = 0;
        while (v68 != v100)
        {
          OUTLINED_FUNCTION_59_26();
          sub_22ABE013C();
          OUTLINED_FUNCTION_24_56();
          v70 = v87;
          v71 = v85;
          v99 = v68;
          if (v26)
          {
            v72 = 0;
            do
            {
              v101 = v72 + 1;
              v73 = v70;
              OUTLINED_FUNCTION_41_45();
              v74 = *(void (**)(uint64_t))(v96 + 16);
              v75 = v90;
              v74(v90);
              OUTLINED_FUNCTION_67_23();
              OUTLINED_FUNCTION_41_45();
              v76 = v71;
              v77 = v91;
              v74(v91);
              OUTLINED_FUNCTION_14_83();
              v78 = v94;
              sub_22ABDF308();
              v79 = v77;
              v71 = v76;
              OUTLINED_FUNCTION_61_23(v79);
              OUTLINED_FUNCTION_61_23(v75);
              OUTLINED_FUNCTION_65_30();
              OUTLINED_FUNCTION_61_23(v78);
              v70 = v73;
              v33 = v102;
              v72 = v101;
            }
            while (v26 != v101);
          }
          v80 = v99;
          v37 = v99 + 1;
          type metadata accessor for DenseMatrix(0, a21, v33, v69);
          DenseMatrix.subscript.modify(&v103, v98, v80);
          v82 = v96;
          v81 = v97;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 24))(v83, v97, a21);
          OUTLINED_FUNCTION_14_83();
          (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, a21);
          v68 = v80 + 1;
          if (v37 == v100)
            goto LABEL_18;
        }
        __break(1u);
        break;
      }
LABEL_18:
      v67 = v98 + 1;
      v37 = v84[0];
      if (v98 + 1 == v84[0])
        goto LABEL_19;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_once();
  }
LABEL_19:
  OUTLINED_FUNCTION_3();
}

void static DenseMatrix<>.* infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_11_96();
  OUTLINED_FUNCTION_70_20(v0, v1, v2, v3, v4);
  if (v5)
  {
    OUTLINED_FUNCTION_16_84();
    sub_22ABCD3E4(v6, 0.0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22AB88468();
    OUTLINED_FUNCTION_46_40();
    OUTLINED_FUNCTION_5_103();
    UnsafeMutableMatrixPointer<A>.addProductFloat(_:transposed:_:transposed:scaledBy:)(v7, 0, v8, 1);
    OUTLINED_FUNCTION_63_26();
    OUTLINED_FUNCTION_2_121();
  }
  else
  {
    __break(1u);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_11_96();
  OUTLINED_FUNCTION_73_18(v0, v1, v2, v3, v4, v5);
  if (v6)
  {
    OUTLINED_FUNCTION_18_77();
    sub_22ABCD3E4(v7, 0.0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22AB88468();
    OUTLINED_FUNCTION_46_40();
    OUTLINED_FUNCTION_6_128();
    UnsafeMutableMatrixPointer<A>.addProductFloat(_:transposed:_:transposed:scaledBy:)(v8, 1, v9, 0);
    OUTLINED_FUNCTION_62_18();
    OUTLINED_FUNCTION_2_121();
  }
  else
  {
    __break(1u);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_11_96();
  OUTLINED_FUNCTION_70_20(v0, v1, v2, v3, v4);
  if (v5)
  {
    OUTLINED_FUNCTION_16_84();
    sub_22ABCD448(v6, 0.0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22AB88498();
    OUTLINED_FUNCTION_46_40();
    OUTLINED_FUNCTION_5_103();
    UnsafeMutableMatrixPointer<A>.addProductDouble(_:transposed:_:transposed:scaledBy:)(v7, 0, v8, 1);
    OUTLINED_FUNCTION_63_26();
    OUTLINED_FUNCTION_2_121();
  }
  else
  {
    __break(1u);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_11_96();
  OUTLINED_FUNCTION_73_18(v0, v1, v2, v3, v4, v5);
  if (v6)
  {
    OUTLINED_FUNCTION_18_77();
    sub_22ABCD448(v7, 0.0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22AB88498();
    OUTLINED_FUNCTION_46_40();
    OUTLINED_FUNCTION_6_128();
    UnsafeMutableMatrixPointer<A>.addProductDouble(_:transposed:_:transposed:scaledBy:)(v8, 1, v9, 0);
    OUTLINED_FUNCTION_62_18();
    OUTLINED_FUNCTION_2_121();
  }
  else
  {
    __break(1u);
  }
}

{
  char v0;
  char v1;
  char v2;

  OUTLINED_FUNCTION_2_127();
  if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
    OUTLINED_FUNCTION_68_25();
  OUTLINED_FUNCTION_13_93();
  if (!v0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_21_77();
  if (v1 != v2)
    goto LABEL_9;
  OUTLINED_FUNCTION_20_65();
  if (v1 ^ v2 | v0)
  {
    OUTLINED_FUNCTION_40_44();
    OUTLINED_FUNCTION_2_119();
    OUTLINED_FUNCTION_1_117();
    return;
  }
LABEL_10:
  __break(1u);
}

{
  char v0;
  char v1;
  char v2;

  OUTLINED_FUNCTION_63_27();
  OUTLINED_FUNCTION_14_85();
  if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
    OUTLINED_FUNCTION_68_25();
  OUTLINED_FUNCTION_13_93();
  if (!v0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_21_77();
  if (v1 != v2)
    goto LABEL_9;
  OUTLINED_FUNCTION_20_65();
  if (v1 ^ v2 | v0)
  {
    OUTLINED_FUNCTION_40_44();
    OUTLINED_FUNCTION_2_119();
    OUTLINED_FUNCTION_1_117();
    return;
  }
LABEL_10:
  __break(1u);
}

{
  char v0;
  char v1;
  char v2;

  OUTLINED_FUNCTION_2_127();
  if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
    OUTLINED_FUNCTION_67_24();
  OUTLINED_FUNCTION_13_93();
  if (!v0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_21_77();
  if (v1 != v2)
    goto LABEL_9;
  OUTLINED_FUNCTION_20_65();
  if (v1 ^ v2 | v0)
  {
    OUTLINED_FUNCTION_39_50();
    OUTLINED_FUNCTION_2_119();
    OUTLINED_FUNCTION_1_117();
    return;
  }
LABEL_10:
  __break(1u);
}

{
  char v0;
  char v1;
  char v2;

  OUTLINED_FUNCTION_63_27();
  OUTLINED_FUNCTION_14_85();
  if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
    OUTLINED_FUNCTION_67_24();
  OUTLINED_FUNCTION_13_93();
  if (!v0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_21_77();
  if (v1 != v2)
    goto LABEL_9;
  OUTLINED_FUNCTION_20_65();
  if (v1 ^ v2 | v0)
  {
    OUTLINED_FUNCTION_39_50();
    OUTLINED_FUNCTION_2_119();
    OUTLINED_FUNCTION_1_117();
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_22ABCD3E4(uint64_t a1, float a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a1)
    {
      v4 = sub_22ABDF074();
      v5 = 0;
      *(_QWORD *)(v4 + 16) = a1;
      do
      {
        v6 = v4 + 4 * v5++;
        *(float *)(v6 + 32) = a2;
      }
      while (a1 != v5);
    }
    OUTLINED_FUNCTION_51_19();
  }
}

void sub_22ABCD448(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a1)
    {
      v4 = sub_22ABDF074();
      v5 = 0;
      *(_QWORD *)(v4 + 16) = a1;
      do
      {
        v6 = v4 + 8 * v5++;
        *(double *)(v6 + 32) = a2;
      }
      while (a1 != v5);
    }
    OUTLINED_FUNCTION_51_19();
  }
}

void sub_22ABCD4AC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  char v8;
  char v9;
  const void *v10;
  size_t v11;
  char *v12;
  uint64_t v13;
  char *v14;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_11_0();
    if (v8 != v9)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_24();
    }
  }
  OUTLINED_FUNCTION_24_22();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v10 = (const void *)OUTLINED_FUNCTION_14_30();
    v11 = _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_32_16(v11 - 32);
  }
  v12 = (char *)OUTLINED_FUNCTION_34_52();
  if ((a1 & 1) != 0)
  {
    sub_22ABD6758(v12, v13, v14);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_22ABCBC28((uint64_t)v12, v13);
  }
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_21();
}

uint64_t OUTLINED_FUNCTION_8_108()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_12_88()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 112, 0);
}

uint64_t OUTLINED_FUNCTION_13_90()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 112, 0);
}

uint64_t OUTLINED_FUNCTION_14_83()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 152, 0);
}

uint64_t OUTLINED_FUNCTION_15_85(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 136))(a1, a2, v2);
}

uint64_t *OUTLINED_FUNCTION_21_75(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t OUTLINED_FUNCTION_22_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 280) = a2;
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_23_71(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_24_56()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_25_54()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_28_51()
{
  uint64_t v0;

  return v0;
}

void (*OUTLINED_FUNCTION_29_50(void (**a1)(uint64_t a1), uint64_t a2, uint64_t a3))(uint64_t a1)
{
  return DenseMatrix.subscript.modify(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_31_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for DenseMatrix(0, v4, v5, a4);
}

void OUTLINED_FUNCTION_33_58(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 296) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_34_52()
{
  uint64_t v0;

  return v0 + 32;
}

void *OUTLINED_FUNCTION_41_45()
{
  return DenseMatrix.subscript.read();
}

uint64_t OUTLINED_FUNCTION_44_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return DenseMatrix.Transpose.columnCount.getter(a1, a2, a3, a4, a5, v5);
}

void OUTLINED_FUNCTION_48_37(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_51_39(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = result;
  *(_QWORD *)(v4 - 112) = a2;
  *(_BYTE *)(v4 - 104) = a3 & 1;
  *(_QWORD *)(v4 - 96) = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_55_27@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  void (*v10)(uint64_t *);

  return sub_22ABCC4C4(a1, a2, a3, a4, a5, a6, a7, a8, a9, v9, v10);
}

void *OUTLINED_FUNCTION_58_19()
{
  return DenseMatrix.subscript.read();
}

uint64_t OUTLINED_FUNCTION_60_27(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_61_23(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_62_18()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_63_26()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_64_22()
{
  uint64_t v0;

  return v0 - 112;
}

uint64_t OUTLINED_FUNCTION_65_30()
{
  return sub_22ABDFB00();
}

void OUTLINED_FUNCTION_66_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 224) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_67_23()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 152, 0);
}

uint64_t OUTLINED_FUNCTION_68_24(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return v1 - 152;
}

uint64_t OUTLINED_FUNCTION_70_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a1 * a5;
}

uint64_t OUTLINED_FUNCTION_72_23()
{
  return sub_22ABE0304();
}

uint64_t OUTLINED_FUNCTION_73_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a2 * a6;
}

uint64_t DenseVector.Iterator.vector.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*DenseVector.Iterator.vector.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t DenseVector.Iterator.index.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t DenseVector.Iterator.index.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*DenseVector.Iterator.index.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t DenseVector.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v5 = *v2;
  v4 = v2[1];
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  if (v4 >= DenseVector.count.getter())
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v6);
  DenseVector.subscript.getter(v4, v5, v6, v7);
  result = __swift_storeEnumTagSinglePayload(a2, 0, 1, v6);
  v9 = v2[1];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    v2[1] = v11;
  return result;
}

uint64_t DenseVector.makeIterator()()
{
  return swift_retain();
}

uint64_t DenseVector._copyContents(initializing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = a3;
  v9 = OUTLINED_FUNCTION_5_104(a1, a2, a3, a4, a5);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for DenseVector<A>, v9);
  if ((sub_22ABDF434() & 1) != 0)
  {
    swift_retain();
    return v7;
  }
  if (sub_22ABDED08())
  {
    v10 = DenseVector.count.getter();
    if (v10 <= a2)
    {
      MEMORY[0x24BDAC7A8](v10);
      type metadata accessor for DenseVector.Iterator(255, a4, a5, v11);
      swift_getTupleTypeMetadata2();
      DenseVector.withUnsafeVectorPointer<A>(_:)();
      return a3;
    }
    __break(1u);
  }
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

uint64_t sub_22ABCDB64@<X0>(uint64_t a1@<X4>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  DenseVector.count.getter();
  sub_22ABDF584();
  swift_retain();
  v4 = DenseVector.count.getter();
  *a2 = a1;
  a2[1] = v4;
  sub_22ABDF608();
  DenseVector.count.getter();
  result = sub_22ABDF620();
  a2[2] = result;
  return result;
}

uint64_t sub_22ABCDC40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_22ABCDB64(*(_QWORD *)(v1 + 40), a1);
}

uint64_t type metadata accessor for DenseVector.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DenseVector.Iterator);
}

uint64_t sub_22ABCDC7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = DenseVector.makeIterator()();
  v4 = v3;
  result = swift_release();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_22ABCDCC0(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for DenseVector<A>, a1);
  return sub_22ABDF3BC();
}

uint64_t sub_22ABCDCF4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for DenseVector<A>, a1);
  return sub_22ABDF3EC();
}

uint64_t sub_22ABCDD28(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = DenseVector._copyContents(initializing:)(a2, a3, *v4, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24));
  v8 = v7;
  v10 = v9;
  swift_release();
  *a1 = v6;
  a1[1] = v8;
  return v10;
}

uint64_t sub_22ABCDD8C()
{
  return DenseVector.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t DenseVector.withContiguousStorageIfAvailable<A>(_:)()
{
  return sub_22ABDF890();
}

uint64_t DenseVector.startIndex.getter()
{
  return 0;
}

Swift::Int __swiftcall DenseVector.index(after:)(Swift::Int after)
{
  return after + 1;
}

Swift::Void __swiftcall DenseVector.formIndex(after:)(Swift::Int *after)
{
  ++*after;
}

Swift::Int __swiftcall DenseVector.index(before:)(Swift::Int before)
{
  return before - 1;
}

Swift::Void __swiftcall DenseVector.formIndex(before:)(Swift::Int *before)
{
  --*before;
}

Swift::Int __swiftcall DenseVector.index(_:offsetBy:)(Swift::Int _, Swift::Int offsetBy)
{
  return offsetBy + _;
}

Swift::Int_optional __swiftcall DenseVector.index(_:offsetBy:limitedBy:)(Swift::Int _, Swift::Int offsetBy, Swift::Int limitedBy)
{
  Swift::Int v4;
  Swift::Int v5;
  Swift::Bool v6;
  Swift::Int_optional result;

  v4 = limitedBy - _;
  if (offsetBy < 1)
  {
    if (v4 <= 0 && v4 > offsetBy)
      goto LABEL_4;
LABEL_10:
    v6 = 0;
    v5 = offsetBy + _;
    goto LABEL_11;
  }
  if (v4 < 0 || v4 >= (unint64_t)offsetBy)
    goto LABEL_10;
LABEL_4:
  v5 = 0;
  v6 = 1;
LABEL_11:
  result.value = v5;
  result.is_nil = v6;
  return result;
}

Swift::Int __swiftcall DenseVector.distance(from:to:)(Swift::Int from, Swift::Int to)
{
  return to - from;
}

uint64_t DenseVector.indices.getter()
{
  DenseVector.count.getter();
  return 0;
}

void DenseVector.subscript.modify(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_22ABDF974();
  v2[4] = sub_22ABDF998();
  OUTLINED_FUNCTION_38();
}

void sub_22ABCDEC8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  OUTLINED_FUNCTION_0_2(v1);
}

uint64_t DenseVector.subscript.setter(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = sub_22ABDF974();
  sub_22ABDF8E4();
  v8 = *v3;
  sub_22AB63820(a2, *v3);
  v9 = *(_QWORD *)(v6 - 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 24))(v8+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * a2, a1, v6);
  nullsub_1(v7, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v6);
}

{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = sub_22ABDF974();
  sub_22ABDF8E4();
  v8 = *v3;
  sub_22AB63820(a2, *v3);
  v9 = *(_QWORD *)(v6 - 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 24))(v8+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * a2, a1, v6);
  nullsub_1(v7, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v6);
}

uint64_t DenseVector.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;

  v5 = OUTLINED_FUNCTION_5_104(a1, a2, a3, a4, a5);
  swift_retain();
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for DenseVector<A>, v5);
  sub_22ABE01F0();
  return v7;
}

uint64_t DenseVector.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;

  sub_22ABDF974();
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for DenseVector<A>, a6);
  v7 = sub_22ABE0214();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE4238], v7);
  return sub_22ABDF8C0();
}

void DenseVector.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = malloc(0x38uLL);
  *a1 = v9;
  v9[5] = a4;
  v9[6] = v4;
  v9[3] = a2;
  v9[4] = a3;
  *v9 = DenseVector.subscript.getter(a2, a3, *v4, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24));
  v9[1] = v10;
  v9[2] = v11;
  OUTLINED_FUNCTION_38();
}

void sub_22ABCE114(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    OUTLINED_FUNCTION_2_122();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_2_122();
  }
  OUTLINED_FUNCTION_0_118(v2);
}

uint64_t DenseVector.withContiguousMutableStorageIfAvailable<A>(_:)()
{
  sub_22ABDF974();
  return sub_22ABDF89C();
}

uint64_t sub_22ABCE1D0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  return DenseVector.subscript.setter(a1, *a2, a3);
}

void (*sub_22ABCE1D8(_QWORD *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  _QWORD *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;
  uint64_t v12;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  *v7 = v3;
  v7[1] = a3;
  v8 = *(_QWORD *)(a3 + 16);
  v7[2] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[3] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[4] = malloc(v10);
  v11 = malloc(v10);
  v12 = *a2;
  v7[5] = v11;
  v7[6] = v12;
  DenseVector.subscript.getter(v12, *v3, v8, *(_QWORD *)(a3 + 24));
  return sub_22ABCE274;
}

void sub_22ABCE274(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v3 = (void *)(*a1)[5];
  v4 = (*a1)[6];
  v5 = (void *)(*a1)[4];
  if ((a2 & 1) != 0)
  {
    v6 = v2[2];
    v7 = v2[3];
    v8 = v2[1];
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 16))((*a1)[4], v3, v6);
    DenseVector.subscript.setter((uint64_t)v5, v4, v8);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v3, v6);
  }
  else
  {
    DenseVector.subscript.setter((*a1)[5], v4, v2[1]);
  }
  free(v3);
  free(v5);
  OUTLINED_FUNCTION_0_118(v2);
}

uint64_t sub_22ABCE308(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return DenseVector.subscript.setter(*a1, a1[1], a1[2], *a2, a2[1], a3);
}

void (*sub_22ABCE324(_QWORD *a1, uint64_t *a2, uint64_t a3))(void **a1, char a2)
{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[3] = v3;
  v7[4] = a3;
  v8 = *a2;
  v9 = a2[1];
  v7[5] = *a2;
  v7[6] = v9;
  *v7 = DenseVector.subscript.getter(v8, v9, *v3, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  v7[1] = v10;
  v7[2] = v11;
  return sub_22ABCE394;
}

void sub_22ABCE394(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    OUTLINED_FUNCTION_1_111();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_1_111();
  }
  OUTLINED_FUNCTION_0_118(v2);
}

uint64_t sub_22ABCE3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for DenseVector<A>, a3);
  return sub_22ABDECA8();
}

uint64_t sub_22ABCE460()
{
  return sub_22ABDEC78();
}

uint64_t sub_22ABCE480()
{
  return DenseVector.withContiguousMutableStorageIfAvailable<A>(_:)();
}

uint64_t sub_22ABCE4A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t result;

  result = DenseVector.endIndex.getter(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  *a2 = result;
  return result;
}

void (*sub_22ABCE4D4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_22ABD2920();
  v2[4] = v3;
  return sub_22A9B858C;
}

uint64_t sub_22ABCE534@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = DenseVector.subscript.getter(*a1, a1[1], *v3, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  *a3 = result;
  a3[1] = v6;
  a3[2] = v7;
  return result;
}

uint64_t sub_22ABCE570@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DenseVector.indices.getter();
  *a1 = 0;
  a1[1] = v3;
  return result;
}

uint64_t sub_22ABCE5A0()
{
  return DenseVector.count.getter();
}

Swift::Int sub_22ABCE5B8@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = DenseVector.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_22ABCE5E4@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = DenseVector.index(before:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_22ABCE610@<X0>(Swift::Int *a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int result;

  result = DenseVector.index(_:offsetBy:)(*a1, a2);
  *a3 = result;
  return result;
}

Swift::Int sub_22ABCE638@<X0>(Swift::Int *a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X2>, uint64_t a4@<X8>)
{
  Swift::Int_optional v6;

  v6 = DenseVector.index(_:offsetBy:limitedBy:)(*a1, a2, *a3);
  *(_QWORD *)a4 = v6.value;
  *(_BYTE *)(a4 + 8) = v6.is_nil;
  return v6.value;
}

Swift::Int sub_22ABCE66C(Swift::Int *a1, Swift::Int *a2)
{
  return DenseVector.distance(from:to:)(*a1, *a2);
}

void sub_22ABCE678()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABCE688()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABCE698(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for DenseVector<A>);
  return MEMORY[0x22E2E4D80](MEMORY[0x24BEE4220], a1, &v3);
}

void sub_22ABCE6E0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABCE6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22ABCE76C(a1, a2, a3, MEMORY[0x24BEE1BD0]);
}

uint64_t sub_22ABCE6FC(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for DenseVector<A>);
  return MEMORY[0x22E2E4D80](MEMORY[0x24BEE4230], a1, &v3);
}

void sub_22ABCE744()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABCE754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22ABCE76C(a1, a2, a3, MEMORY[0x24BEE1BD8]);
}

uint64_t sub_22ABCE760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22ABCE76C(a1, a2, a3, MEMORY[0x24BEE1BA8]);
}

uint64_t sub_22ABCE76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  _QWORD v8[2];

  v6 = sub_22A9B88AC();
  v8[0] = MEMORY[0x24BEE17A8];
  v8[1] = v6;
  return MEMORY[0x22E2E4D80](a4, a1, v8);
}

uint64_t sub_22ABCE7B4(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for DenseVector<A>);
  return MEMORY[0x22E2E4D80](MEMORY[0x24BEE4218], a1, &v3);
}

_QWORD *sub_22ABCE7FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_22ABCE828()
{
  return swift_release();
}

_QWORD *sub_22ABCE830(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

_QWORD *sub_22ABCE87C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void OUTLINED_FUNCTION_0_118(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_2_122()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return DenseVector.subscript.setter(v1, v2, v5, v4, v3, v0);
}

uint64_t OUTLINED_FUNCTION_5_104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return type metadata accessor for DenseVector(0, a4, a5, a4);
}

uint64_t UnsafeMutableMatrixPointer.baseAddress.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UnsafeMutableMatrixPointer.baseAddress.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*UnsafeMutableMatrixPointer.baseAddress.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMutableMatrixPointer.rowCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t UnsafeMutableMatrixPointer.rowCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*UnsafeMutableMatrixPointer.rowCount.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMutableMatrixPointer.columnCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t UnsafeMutableMatrixPointer.columnCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*UnsafeMutableMatrixPointer.columnCount.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMutableMatrixPointer.leadingDimension.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t UnsafeMutableMatrixPointer.leadingDimension.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*UnsafeMutableMatrixPointer.leadingDimension.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMutableMatrixPointer.layout.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t UnsafeMutableMatrixPointer.layout.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result & 1;
  return result;
}

uint64_t (*UnsafeMutableMatrixPointer.layout.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMutableMatrixPointer.count.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v1 = *(_QWORD *)(v0 + 24);
    result = v1 * v2;
    if ((unsigned __int128)(v1 * (__int128)v2) >> 64 == (v1 * v2) >> 63)
      return result;
    __break(1u);
  }
  v4 = *(_QWORD *)(v0 + 8);
  v5 = *(_QWORD *)(v0 + 24);
  result = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
    __break(1u);
  return result;
}

uint64_t UnsafeMutableMatrixPointer.accelerateMatrixOrder.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t UnsafeMutableMatrixPointer.init(start:rowCount:columnCount:leadingDimension:layout:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 32) = a5 & 1;
  return result;
}

__n128 UnsafeMutableMatrixPointer.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 32) = *(_BYTE *)(a1 + 32);
  return result;
}

__n128 UnsafeMutableMatrixPointer.init(mutating:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(_QWORD *)(a2 + 24) = v2;
  *(_BYTE *)(a2 + 32) = v3;
  return result;
}

uint64_t UnsafeMutableMatrixPointer.withUnsafeBufferPointer<A>(_:)(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;

  UnsafeMutableMatrixPointer.count.getter();
  v2 = sub_22ABDED14();
  return a1(v2);
}

uint64_t UnsafeMutableMatrixPointer.withUnsafeMutableBufferPointer<A>(_:)(uint64_t (*a1)(_QWORD *))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  BOOL v7;
  _QWORD v8[2];

  v4 = *v1;
  UnsafeMutableMatrixPointer.count.getter();
  v8[0] = sub_22ABDF62C();
  v8[1] = v5;
  result = a1(v8);
  if (!v2)
  {
    result = sub_22ABDED08();
    if (result)
      v7 = v4 == result;
    else
      v7 = 0;
    if (!v7)
    {
      result = sub_22ABDFADC();
      __break(1u);
    }
  }
  return result;
}

Swift::Void __swiftcall UnsafeMutableMatrixPointer.deallocate()()
{
  sub_22ABDECE4();
}

uint64_t static UnsafeMutableMatrixPointer.allocate(rowCount:columnCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = a1 * a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 == result >> 63)
  {
    result = sub_22ABDF5B4();
    *(_QWORD *)a3 = result;
    *(_QWORD *)(a3 + 8) = a1;
    *(_QWORD *)(a3 + 16) = a2;
    *(_QWORD *)(a3 + 24) = a2;
    *(_BYTE *)(a3 + 32) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void UnsafeMutableMatrixPointer.initialize(repeating:)()
{
  sub_22ABCEC14();
}

void UnsafeMutableMatrixPointer.update(repeating:)()
{
  sub_22ABCEC14();
}

void sub_22ABCEC14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 16);
    if (v1 < 0)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    if (v1)
    {
      v2 = *(_QWORD *)(v0 + 24);
      while (is_mul_ok(0, v2))
      {
        OUTLINED_FUNCTION_4_114();
        v3 = OUTLINED_FUNCTION_3_123();
        OUTLINED_FUNCTION_0_119(v3, v4);
      }
      __break(1u);
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 8);
    if (v5 < 0)
    {
LABEL_16:
      __break(1u);
      return;
    }
    if (v5)
    {
      v6 = *(_QWORD *)(v0 + 24);
      while (is_mul_ok(0, v6))
      {
        OUTLINED_FUNCTION_4_114();
        v7 = OUTLINED_FUNCTION_3_123();
        OUTLINED_FUNCTION_0_119(v7, v8);
      }
      goto LABEL_14;
    }
  }
}

uint64_t UnsafeMutableMatrixPointer.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v4;
  v6 = v4[3];
  if ((v4[4] & 1) != 0)
  {
    v7 = a2 * v6;
    if ((unsigned __int128)(a2 * (__int128)v6) >> 64 != (a2 * v6) >> 63)
    {
      __break(1u);
      goto LABEL_10;
    }
    v6 = v7 + result;
    if (!__OFADD__(v7, result))
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(a4, v5 + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 72) * v6);
    __break(1u);
  }
  v8 = result * v6;
  if ((unsigned __int128)(result * (__int128)v6) >> 64 != (result * v6) >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v6 = v8 + a2;
  if (!__OFADD__(v8, a2))
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(a4, v5 + *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 72) * v6);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t (*UnsafeMutableMatrixPointer.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3))(_QWORD, _QWORD)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(_QWORD, _QWORD);

  v4 = *(_QWORD *)(v3 + 24);
  if ((*(_BYTE *)(v3 + 32) & 1) != 0)
  {
    v5 = a3 * v4;
    if ((unsigned __int128)(a3 * (__int128)v4) >> 64 != (a3 * v4) >> 63)
    {
      __break(1u);
      goto LABEL_10;
    }
    v4 = v5 + a2;
    if (!__OFADD__(v5, a2))
      return nullsub_1;
    __break(1u);
  }
  if ((unsigned __int128)(a2 * (__int128)v4) >> 64 != (a2 * v4) >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!__OFADD__(a2 * v4, a3))
    return nullsub_1;
LABEL_11:
  __break(1u);
  return result;
}

uint64_t UnsafeMutableMatrixPointer.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(_BYTE *, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[32];

  v6 = (void (*)(_BYTE *, _QWORD))UnsafeMutableMatrixPointer.subscript.modify((uint64_t)v11, a2, a3);
  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v9, a1, v7);
  v6(v11, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
}

void UnsafeMutableMatrixPointer.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  if ((*(_BYTE *)(v2 + 32) & 1) != 0)
  {
    v3 = *(_QWORD *)(a2 + 16);
    v4 = *(_QWORD *)v2 + *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72) * a1;
    v5 = *(_QWORD *)(v2 + 16);
    v6 = *(_QWORD *)(v2 + 24);
  }
  else
  {
    OUTLINED_FUNCTION_1_109();
    if (!v9)
    {
      __break(1u);
      return;
    }
    v3 = *(_QWORD *)(v7 + 16);
    v4 = *(_QWORD *)v2 + *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72) * v8;
    v5 = *(_QWORD *)(v2 + 16);
    v6 = 1;
  }
  UnsafeMutableVectorPointer.init(start:count:stride:)(v4, v5, v6, v3);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((*(_BYTE *)(v2 + 32) & 1) != 0)
  {
    OUTLINED_FUNCTION_1_109();
    if (!v5)
    {
      __break(1u);
      return;
    }
    v6 = *(_QWORD *)(v3 + 16);
    v7 = *(_QWORD *)(v2 + 8);
    v8 = *(_QWORD *)v2 + *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v4;
    v9 = 1;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(v2 + 8);
    v8 = *(_QWORD *)v2 + *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a1;
    v9 = *(_QWORD *)(v2 + 24);
  }
  UnsafeMutableVectorPointer.init(start:count:stride:)(v8, v7, v9, v6);
}

uint64_t sub_22ABCEEFC(uint64_t (*a1)(_QWORD *))
{
  return UnsafeMutableMatrixPointer.withUnsafeMutableBufferPointer<A>(_:)(a1);
}

uint64_t sub_22ABCEF3C(uint64_t (*a1)(uint64_t))
{
  return UnsafeMutableMatrixPointer.withUnsafeBufferPointer<A>(_:)(a1);
}

uint64_t UnsafeMutableMatrixPointer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDF5C0();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_12_1();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_12_1();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  sub_22ABDFA34();
  sub_22ABDEDC8();
  return 0;
}

void sub_22ABCF0DC()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for UnsafeMutableMatrixPointer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeMutableMatrixPointer);
}

uint64_t OUTLINED_FUNCTION_0_119(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(v4, a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_3_123()
{
  return sub_22ABDF62C();
}

uint64_t DenseMatrix.Transpose.rowCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t DenseMatrix.Transpose.layout.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

void (*DenseMatrix.Transpose.subscript.modify(void (***a1)(uint64_t a1), uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD *)
{
  void (**v8)(uint64_t);
  uint64_t v9;

  v8 = (void (**)(uint64_t))malloc(0x28uLL);
  *a1 = v8;
  type metadata accessor for DenseMatrix(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v9);
  v8[4] = DenseMatrix.subscript.modify(v8, a3, a2);
  return sub_22ABCF1C0;
}

void (*DenseMatrix.Transpose.subscript.read(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DenseMatrix.subscript.read();
  return sub_22ABCF1C0;
}

void DenseMatrix.Transpose.base.getter()
{
  OUTLINED_FUNCTION_0_116();
  OUTLINED_FUNCTION_2_119();
  OUTLINED_FUNCTION_21();
}

uint64_t DenseMatrix.Transpose.base.setter(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  char v8;
  uint64_t result;

  v8 = a3 & 1;
  result = swift_release();
  *(_QWORD *)v4 = a1;
  *(_QWORD *)(v4 + 8) = a2;
  *(_BYTE *)(v4 + 16) = v8;
  *(_QWORD *)(v4 + 24) = a4;
  return result;
}

uint64_t (*DenseMatrix.Transpose.base.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t DenseMatrix.Transpose.count.getter(uint64_t a1, uint64_t a2)
{
  return DenseMatrix.count.getter(a1, a2);
}

void DenseMatrix.Transpose.init(rowCount:columnCount:)(uint64_t a1, uint64_t a2)
{
  DenseMatrix.init(rowCount:columnCount:)(a2, a1);
}

uint64_t DenseMatrix.Transpose.subscript.getter@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  void *v4;
  _BYTE v6[32];

  v4 = DenseMatrix.subscript.read();
  (*(void (**)(uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2);
  return ((uint64_t (*)(_BYTE *, _QWORD))v4)(v6, 0);
}

uint64_t DenseMatrix.Transpose.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v12[4])(uint64_t);

  v7 = *(_QWORD *)(a4 + 16);
  type metadata accessor for DenseMatrix(0, v7, *(_QWORD *)(a4 + 24), a4);
  v8 = DenseMatrix.subscript.modify(v12, a3, a2);
  v9 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v10, a1, v7);
  ((void (*)(void (**)(uint64_t), _QWORD))v8)(v12, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v7);
}

void DenseMatrix.Transpose.transposed()()
{
  OUTLINED_FUNCTION_0_116();
  OUTLINED_FUNCTION_2_119();
  OUTLINED_FUNCTION_21();
}

uint64_t static DenseMatrix.Transpose.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return static DenseMatrix.__derived_struct_equals(_:_:)(a1, a2, a3 & 1, a4, a5, a6, a7 & 1);
}

void sub_22ABCF460(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  DenseMatrix.Transpose.init(rowCount:columnCount:)(a1, a2);
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = v6 & 1;
  *(_QWORD *)(a3 + 24) = v7;
}

void sub_22ABCF498(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  DenseMatrix.Transpose.transposed()();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
}

uint64_t sub_22ABCF4D4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void (*v4)(_QWORD *);
  _QWORD v6[4];

  v3 = *(_QWORD *)(a1 + 16);
  v4 = DenseMatrix.Transpose.subscript.read(v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2);
  return ((uint64_t (*)(_QWORD *, _QWORD))v4)(v6, 0);
}

uint64_t sub_22ABCF550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(_QWORD *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v11[4])(uint64_t);

  v6 = DenseMatrix.Transpose.subscript.modify(v11, a2, a3, a4);
  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v9, a1, v7);
  ((void (*)(void (***)(uint64_t), _QWORD))v6)(v11, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
}

void (*sub_22ABCF5C4(void (****a1)(uint64_t a1), uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD *a1)
{
  void (***v8)(uint64_t);

  v8 = (void (***)(uint64_t))malloc(0x28uLL);
  *a1 = v8;
  v8[4] = (void (**)(uint64_t))DenseMatrix.Transpose.subscript.modify(v8, a2, a3, a4);
  return sub_22A9B858C;
}

uint64_t sub_22ABCF628(uint64_t a1, uint64_t a2)
{
  return static DenseMatrix.Transpose.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16)) & 1;
}

void static DenseMatrix.Transpose.+= infix(_:_:)()
{
  static DenseMatrix.+= infix(_:_:)();
}

void static DenseMatrix.Transpose.+ infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_12_89(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void static DenseMatrix.Transpose.-= infix(_:_:)()
{
  static DenseMatrix.-= infix(_:_:)();
}

void static DenseMatrix.Transpose.- infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_12_89(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_22ABCF6D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))
{
  a11(a1, a2, a3 & 1, a4, a5, a6, a7 & 1);
  OUTLINED_FUNCTION_19_6();
}

uint64_t static DenseMatrix.Transpose.* infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_22ABCF73C(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, _QWORD))static DenseMatrix.* infix(_:_:));
}

void static DenseMatrix.Transpose.* infix(_:_:)(uint64_t a1, uint64_t a2)
{
  static DenseMatrix.* infix(_:_:)(a1, a2);
}

uint64_t static DenseMatrix.Transpose./ infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_22ABCF73C(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, _QWORD))static DenseMatrix./ infix(_:_:));
}

uint64_t sub_22ABCF73C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, _QWORD))
{
  return a8(a1, a2, a3 & 1);
}

#error "22ABCF790: call analysis failed (funcsize=36)"

void static DenseMatrix.Transpose.* infix(_:_:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(_QWORD);
  uint64_t v56;
  char *v57;
  uint64_t AssociatedTypeWitness;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[6];

  LODWORD(v71) = a3;
  v69 = a2;
  v13 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (void (*)(_QWORD))((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v53 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v68 = (char *)&v53 - v20;
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_6_129();
  v63 = v22;
  v59 = *(_QWORD *)(v22 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v23);
  v57 = (char *)&v53 - v24;
  v61 = a6;
  v72 = a7;
  if (DenseVector.count.getter() == a1)
  {
    v54 = v18;
    v64 = a1;
    if (qword_255B1BC88 != -1)
      goto LABEL_19;
    while (1)
    {
      v25 = sub_22ABDE804();
      __swift_project_value_buffer(v25, (uint64_t)static Logger.linearAlgebra);
      v26 = sub_22ABDE7EC();
      v27 = sub_22ABDF4C4();
      v28 = os_log_type_enabled(v26, v27);
      v65 = a4;
      v55 = v15;
      v60 = v7;
      v29 = v61;
      if (v28)
      {
        v30 = (uint8_t *)OUTLINED_FUNCTION_4_12();
        v73[0] = OUTLINED_FUNCTION_4_12();
        *(_DWORD *)v30 = 136315138;
        v31 = OUTLINED_FUNCTION_16_85();
        v33 = OUTLINED_FUNCTION_19_68(v31, v32);
        OUTLINED_FUNCTION_11_97(v33);
        sub_22ABDF65C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22A999000, v26, v27, "Using a slow implementation of matrix multiplication for %s. Prefer using Float or Double.", v30, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_2_2();
      }

      v34 = v68;
      v56 = OUTLINED_FUNCTION_7_110();
      sub_22ABE013C();
      OUTLINED_FUNCTION_9_102();
      a4 = v69;
      DenseVector.init(repeating:count:)(v7, v69, v29);
      v73[4] = v35;
      if (a4 < 0)
        break;
      if (!a4)
      {
LABEL_16:
        OUTLINED_FUNCTION_3();
        return;
      }
      v36 = v13;
      v7 = 0;
      v15 = (void (*)(_QWORD))(v71 & 1);
      v13 = v69;
      v62 = v71 & 1;
      v70 = a5;
      v67 = v36;
      while (v7 != v13)
      {
        a4 = (uint64_t)v57;
        sub_22ABE013C();
        OUTLINED_FUNCTION_22_66();
        sub_22ABDFF20();
        v37 = v72;
        v38 = DenseVector.count.getter();
        if (v38 < 0)
          goto LABEL_18;
        if (v38)
        {
          v39 = 0;
          v40 = (uint64_t)v55;
          v41 = (uint64_t)v54;
          v71 = v7;
          v43 = v60;
          v42 = v61;
          v66 = v38;
          do
          {
            v44 = v72;
            v45 = DenseMatrix.subscript.read();
            v15 = *(void (**)(_QWORD))(v67 + 16);
            v15(v41);
            ((void (*)(_QWORD *, _QWORD))v45)(v73, 0);
            DenseVector.subscript.getter(v39, v70, v42, v44);
            sub_22ABDF308();
            OUTLINED_FUNCTION_30_54(v40);
            OUTLINED_FUNCTION_30_54(v41);
            sub_22ABDFB00();
            OUTLINED_FUNCTION_30_54(v43);
            ++v39;
          }
          while (v66 != v39);
          v7 = v71;
          v37 = v72;
          v34 = v68;
          v46 = v69;
          v47 = v67;
        }
        else
        {
          v46 = v13;
          v47 = v36;
          v15 = *(void (**)(_QWORD))(v36 + 16);
        }
        a4 = v7 + 1;
        v48 = v7;
        v50 = v60;
        v49 = v61;
        ((void (*)(uint64_t, char *, uint64_t))v15)(v60, v34, v61);
        v52 = type metadata accessor for DenseVector(0, v49, v37, v51);
        DenseVector.subscript.setter(v50, v48, v52);
        v36 = v47;
        OUTLINED_FUNCTION_21_76(*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
        v7 = a4;
        a5 = v70;
        v13 = v46;
        if (a4 == v46)
          goto LABEL_16;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      swift_once();
    }
    __break(1u);
  }
  OUTLINED_FUNCTION_10_89();
  __break(1u);
}

void static DenseMatrix.Transpose.* infix(_:_:)(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t AssociatedTypeWitness;
  uint64_t v55;
  uint64_t v56;
  int v57;
  void (*v58)(_QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[6];

  LODWORD(v65) = a4;
  v62 = a2;
  v12 = a1;
  v13 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v49 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v63 = (char *)v49 - v20;
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_6_129();
  v49[1] = v22;
  v55 = *(_QWORD *)(v22 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v23);
  v53 = (char *)v49 - v24;
  if ((void (*)(_QWORD))DenseVector.count.getter() == a3)
  {
    v50 = v18;
    v59 = a5;
    v60 = a7;
    if (qword_255B1BC88 != -1)
      goto LABEL_19;
    while (1)
    {
      v25 = sub_22ABDE804();
      __swift_project_value_buffer(v25, (uint64_t)static Logger.linearAlgebra);
      v26 = sub_22ABDE7EC();
      v27 = sub_22ABDF4C4();
      v28 = os_log_type_enabled(v26, v27);
      v58 = a3;
      v51 = v15;
      v56 = v7;
      if (v28)
      {
        v29 = (uint8_t *)OUTLINED_FUNCTION_4_12();
        v66[0] = OUTLINED_FUNCTION_4_12();
        *(_DWORD *)v29 = 136315138;
        v30 = OUTLINED_FUNCTION_16_85();
        v32 = OUTLINED_FUNCTION_19_68(v30, v31);
        OUTLINED_FUNCTION_11_97(v32);
        sub_22ABDF65C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_22A999000, v26, v27, "Using a slow implementation of matrix multiplication for %s. Prefer using Float or Double.", v29, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_2_2();
      }

      v15 = v63;
      v52 = OUTLINED_FUNCTION_7_110();
      sub_22ABE013C();
      OUTLINED_FUNCTION_9_102();
      v33 = v62;
      v34 = v60;
      DenseVector.init(repeating:count:)(v7, v62, a6);
      v66[4] = v35;
      if (v33 < 0)
        break;
      if (!v33)
      {
LABEL_16:
        OUTLINED_FUNCTION_3();
        return;
      }
      v7 = 0;
      a3 = (void (*)(_QWORD))(v65 & 1);
      v57 = v65 & 1;
      v64 = v12;
      v61 = v13;
      while (v7 != v33)
      {
        sub_22ABE013C();
        OUTLINED_FUNCTION_22_66();
        sub_22ABDFF20();
        v36 = DenseVector.count.getter();
        if (v36 < 0)
          goto LABEL_18;
        if (v36)
        {
          v37 = 0;
          v39 = (uint64_t)v50;
          v38 = (uint64_t)v51;
          v40 = v56;
          v65 = v7;
          do
          {
            v41 = v37 + 1;
            v42 = v36;
            DenseVector.subscript.getter(v37, v64, a6, v34);
            v43 = DenseMatrix.subscript.read();
            a3 = *(void (**)(_QWORD))(v61 + 16);
            a3(v38);
            ((void (*)(_QWORD *, _QWORD))v43)(v66, 0);
            sub_22ABDF308();
            OUTLINED_FUNCTION_20_64(v38);
            OUTLINED_FUNCTION_20_64(v39);
            sub_22ABDFB00();
            OUTLINED_FUNCTION_20_64(v40);
            v36 = v42;
            v34 = v60;
            v37 = v41;
          }
          while (v42 != v41);
          v13 = v61;
          v33 = v62;
          v15 = v63;
          v7 = v65;
        }
        else
        {
          a3 = *(void (**)(_QWORD))(v13 + 16);
        }
        v44 = v7 + 1;
        v45 = v7;
        v46 = v56;
        ((void (*)(uint64_t, char *, uint64_t))a3)(v56, v15, a6);
        v48 = type metadata accessor for DenseVector(0, a6, v34, v47);
        DenseVector.subscript.setter(v46, v45, v48);
        OUTLINED_FUNCTION_21_76(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
        v7 = v44;
        v12 = v64;
        if (v44 == v33)
          goto LABEL_16;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      swift_once();
    }
    __break(1u);
  }
  OUTLINED_FUNCTION_10_89();
  __break(1u);
}

void static DenseMatrix.Transpose<>.* infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  sub_22ABD0204(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_19_6();
}

{
  sub_22ABD0204(a1, a2, a3, a4, a5, a6, a7);
  OUTLINED_FUNCTION_19_6();
}

void static DenseMatrix.Transpose<>.* infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_22ABD0244(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22ABD2A3C);
}

{
  sub_22ABD0244(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22ABD2BCC);
}

void static DenseMatrix.Transpose<>.* infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_22ABD02B8(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22ABD2AA0);
}

{
  sub_22ABD02B8(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22ABD2C30);
}

uint64_t sub_22ABD0204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);

  v7 = OUTLINED_FUNCTION_2_123(a1, a2, a7 & 1, a4, a5);
  return v8(v7);
}

void sub_22ABD0244(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;

  v11 = a3 & 1;
  swift_retain();
  swift_retain();
  a6(a2, a5, a1, a2, v11, a4);
  OUTLINED_FUNCTION_101_0();
}

void sub_22ABD02B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;

  v11 = a4 & 1;
  swift_retain();
  swift_retain();
  a6(a2, a1, a2, a3, v11, a5);
  OUTLINED_FUNCTION_101_0();
}

void sub_22ABD031C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABD032C()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for DenseMatrix.Transpose(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DenseMatrix.Transpose);
}

uint64_t OUTLINED_FUNCTION_2_123(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

uint64_t OUTLINED_FUNCTION_7_110()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_9_102()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_10_89()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_11_97(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

void OUTLINED_FUNCTION_12_89(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD);

  sub_22ABCF6D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, v9, v10);
}

uint64_t OUTLINED_FUNCTION_16_85()
{
  return sub_22ABE0304();
}

uint64_t OUTLINED_FUNCTION_19_68(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_22AAB5318(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_20_64(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_21_76@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_22_66()
{
  uint64_t v0;

  return v0;
}

void UnsafeMutableVectorPointer.initialize(repeating:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  int64_t v17;
  uint64_t v18;
  _BOOL4 v19;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_34();
  if (v12)
  {
    v13 = a3 >= 0;
    if (a4 > 0)
      v13 = a3 < 1;
    if (!v13)
    {
      v14 = 0;
      v15 = *(_QWORD *)(v11 + 72);
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
      do
      {
        if (__OFADD__(v14, a4))
          v17 = ((v14 + a4) >> 63) ^ 0x8000000000000000;
        else
          v17 = v14 + a4;
        v18 = a2 + v15 * v14;
        v16(v5, a1, a5);
        OUTLINED_FUNCTION_7_111(v5, v18);
        v19 = v17 >= a3;
        if (a4 <= 0)
          v19 = v17 <= a3;
        v14 = v17;
      }
      while (!v19);
    }
    OUTLINED_FUNCTION_3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t UnsafeMutableVectorPointer.baseAddress.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*UnsafeMutableVectorPointer.baseAddress.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMutableVectorPointer.count.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t UnsafeMutableVectorPointer.count.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*UnsafeMutableVectorPointer.count.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMutableVectorPointer.stride.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t UnsafeMutableVectorPointer.stride.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*UnsafeMutableVectorPointer.stride.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UnsafeMutableVectorPointer.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22ABD056C(a1, a2, a3, MEMORY[0x24BEE1CB0]);
}

uint64_t UnsafeMutableVectorPointer.init(mutating:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22ABD056C(a1, a2, a3, MEMORY[0x24BEE0990]);
}

uint64_t sub_22ABD056C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result;

  result = a4();
  if (!result)
    __break(1u);
  return result;
}

uint64_t UnsafeMutableVectorPointer.makeIterator()(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 == (a2 * a3) >> 63)
    return UnsafeVectorPointer.Iterator.init(baseAddress:end:stride:)(result, result + *(_QWORD *)(*(_QWORD *)(a4 - 8) + 72) * a2 * a3);
  __break(1u);
  return result;
}

uint64_t UnsafeMutableVectorPointer._copyContents(initializing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a2;
  v11 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - v15;
  v36 = a3;
  v37 = a4;
  v38 = a5;
  v19 = type metadata accessor for UnsafeMutableVectorPointer(0, a6, v17, v18);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeMutableVectorPointer<A>, v19);
  if ((sub_22ABDF434() & 1) != 0)
  {
    v20 = UnsafeMutableVectorPointer.makeIterator()(a3, a4, a5, a6);
    sub_22ABDF608();
    return v20;
  }
  v33 = a1;
  v34 = a3;
  v21 = v35;
  v22 = sub_22ABDED08();
  if (v22)
  {
    if (v21 < a4)
    {
      __break(1u);
    }
    else
    {
      v23 = v22;
      v24 = a4;
      v25 = a5;
      if (a5 == 1)
      {
        v26 = v34;
        sub_22ABDF584();
      }
      else
      {
        v36 = UnsafeMutableVectorPointer.makeIterator()(v34, v24, a5, a6);
        v37 = v27;
        v38 = v28;
        v30 = type metadata accessor for UnsafeVectorPointer.Iterator(0, a6, v28, v29);
        UnsafeVectorPointer.Iterator.next()(v30, (uint64_t)v16);
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, a6) != 1)
        {
          v31 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
          do
          {
            v31(v13, v16, a6);
            OUTLINED_FUNCTION_7_111((uint64_t)v13, v23);
            v23 += *(_QWORD *)(v11 + 72);
            UnsafeVectorPointer.Iterator.next()(v30, (uint64_t)v16);
          }
          while (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, a6) != 1);
        }
        v26 = v34;
      }
      if ((unsigned __int128)(v24 * (__int128)v25) >> 64 == (v24 * v25) >> 63)
      {
        v20 = UnsafeVectorPointer.Iterator.init(baseAddress:end:stride:)(v26 + *(_QWORD *)(v11 + 72) * v24 * v25, v26 + *(_QWORD *)(v11 + 72) * v24 * v25);
        sub_22ABDF608();
        sub_22ABDF620();
        return v20;
      }
    }
    __break(1u);
  }
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for UnsafeMutableVectorPointer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeMutableVectorPointer);
}

uint64_t sub_22ABD08BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = UnsafeMutableVectorPointer.makeIterator()(*v2, v2[1], v2[2], *(_QWORD *)(a1 + 16));
  *a2 = result;
  a2[1] = v5;
  a2[2] = v6;
  return result;
}

uint64_t sub_22ABD08F4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeMutableVectorPointer<A>, a1);
  return sub_22ABDF3BC();
}

uint64_t sub_22ABD0928(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeMutableVectorPointer<A>, a1);
  return sub_22ABDF3EC();
}

uint64_t sub_22ABD097C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = UnsafeMutableVectorPointer._copyContents(initializing:)(a2, a3, *v4, v4[1], v4[2], *(_QWORD *)(a4 + 16));
  a1[1] = v6;
  a1[2] = v7;
  return v8;
}

uint64_t sub_22ABD09C4@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return UnsafeMutableVectorPointer.withContiguousStorageIfAvailable<A>(_:)(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t UnsafeMutableVectorPointer.withContiguousStorageIfAvailable<A>(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  if (a2 == 1)
  {
    v6 = sub_22ABDED14();
    result = a1(v6);
    if (v3)
      return result;
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  return OUTLINED_FUNCTION_73_2(a3, v8);
}

uint64_t UnsafeMutableVectorPointer.startIndex.getter()
{
  return 0;
}

uint64_t UnsafeMutableVectorPointer.endIndex.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

Swift::Int __swiftcall UnsafeMutableVectorPointer.index(after:)(Swift::Int after)
{
  return after + 1;
}

Swift::Void __swiftcall UnsafeMutableVectorPointer.formIndex(after:)(Swift::Int *after)
{
  ++*after;
}

Swift::Int __swiftcall UnsafeMutableVectorPointer.index(before:)(Swift::Int before)
{
  return before - 1;
}

Swift::Void __swiftcall UnsafeMutableVectorPointer.formIndex(before:)(Swift::Int *before)
{
  --*before;
}

Swift::Int __swiftcall UnsafeMutableVectorPointer.index(_:offsetBy:)(Swift::Int _, Swift::Int offsetBy)
{
  return offsetBy + _;
}

Swift::Int_optional __swiftcall UnsafeMutableVectorPointer.index(_:offsetBy:limitedBy:)(Swift::Int _, Swift::Int offsetBy, Swift::Int limitedBy)
{
  Swift::Int v4;
  Swift::Int v5;
  Swift::Bool v6;
  Swift::Int_optional result;

  v4 = limitedBy - _;
  if (offsetBy < 1)
  {
    if (v4 <= 0 && v4 > offsetBy)
      goto LABEL_4;
LABEL_10:
    v6 = 0;
    v5 = offsetBy + _;
    goto LABEL_11;
  }
  if (v4 < 0 || v4 >= (unint64_t)offsetBy)
    goto LABEL_10;
LABEL_4:
  v5 = 0;
  v6 = 1;
LABEL_11:
  result.value = v5;
  result.is_nil = v6;
  return result;
}

Swift::Int __swiftcall UnsafeMutableVectorPointer.distance(from:to:)(Swift::Int from, Swift::Int to)
{
  return to - from;
}

uint64_t UnsafeMutableVectorPointer.indices.getter()
{
  return 0;
}

uint64_t (*UnsafeMutableVectorPointer.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(_QWORD, _QWORD)
{
  uint64_t (*result)(_QWORD, _QWORD);

  if ((unsigned __int128)(a2 * (__int128)a5) >> 64 == (a2 * a5) >> 63)
    return nullsub_1;
  __break(1u);
  return result;
}

{
  uint64_t (*result)(_QWORD, _QWORD);

  if ((unsigned __int128)(a2 * (__int128)a5) >> 64 == (a2 * a5) >> 63)
    return nullsub_1;
  __break(1u);
  return result;
}

uint64_t _s13LinearAlgebra26UnsafeMutableVectorPointerVyxSicis_0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((unsigned __int128)(a2 * (__int128)a5) >> 64 == (a2 * a5) >> 63)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 40))(a3 + *(_QWORD *)(*(_QWORD *)(a6 - 8) + 72) * a2 * a5, result, a6);
  __break(1u);
  return result;
}

void UnsafeMutableVectorPointer.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for UnsafeMutableVectorPointer(0, a6, a3, a4);
  OUTLINED_FUNCTION_52_3();
}

double sub_22ABD0BE4()
{
  uint64_t v0;
  double result;
  __int128 v2;
  uint64_t v3;
  __int128 v4;

  sub_22ABE01F0();
  result = *(double *)&v2;
  *(_OWORD *)v0 = v2;
  *(_QWORD *)(v0 + 16) = v3;
  *(_OWORD *)(v0 + 24) = v4;
  return result;
}

void UnsafeMutableVectorPointer.subscript.setter(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v10 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_34();
  v12 = v11[1];
  v27 = *v11;
  v28 = v12;
  v29 = *((_QWORD *)v11 + 4);
  v21 = v13;
  v16 = type metadata accessor for UnsafeMutableVectorPointer(255, v13, v14, v15);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeMutableVectorPointer<A>, v16);
  v17 = sub_22ABE0214();
  sub_22ABE01E4();
  v18 = a1[1];
  v27 = *a1;
  v28 = v18;
  v29 = *((_QWORD *)a1 + 4);
  MEMORY[0x22E2E4498](&v26, v17);
  if (v26 >= v22)
  {
    *(_QWORD *)&v27 = v22;
    *((_QWORD *)&v27 + 1) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
    sub_22ABD0E04();
    sub_22ABE0178();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B1C238);
    sub_22ABDF7C4();
    __swift_instantiateConcreteTypeFromMangledName(qword_255B1C240);
    OUTLINED_FUNCTION_10_90();
    if ((v24 & 1) != 0)
    {
LABEL_6:
      OUTLINED_FUNCTION_3();
      return;
    }
    v19 = v22;
    while (1)
    {
      v23 = *a1;
      v25 = a1[1];
      MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeMutableVectorPointer<A>, v16);
      sub_22ABE0220();
      if ((unsigned __int128)(v19 * (__int128)a6) >> 64 != (v19 * a6) >> 63)
        break;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(a4 + *(_QWORD *)(v10 + 72) * v19 * a6, v7, v21);
      __swift_instantiateConcreteTypeFromMangledName(qword_255B1C240);
      OUTLINED_FUNCTION_10_90();
      v19 = v23;
      if (v25 == 1)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_22ABD0E04()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_255B1C230;
  if (!qword_255B1C230)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E85F8);
    v2 = sub_22A9B88AC();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE1BB8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255B1C230);
  }
  return result;
}

void UnsafeMutableVectorPointer.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v14;

  v14 = malloc(0xA8uLL);
  *a1 = v14;
  v14[19] = a6;
  v14[20] = a7;
  v14[17] = a4;
  v14[18] = a5;
  v14[15] = a2;
  v14[16] = a3;
  UnsafeMutableVectorPointer.subscript.getter(a2, a3, a4, a5, a6, a7);
}

void (*sub_22ABD0EE0())(uint64_t *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_22ABD0F04;
}

void sub_22ABD0F04(uint64_t *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;

  OUTLINED_FUNCTION_1_112(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_0_2(v5);
}

Swift::Void __swiftcall UnsafeMutableVectorPointer.swapAt(_:_:)(Swift::Int a1, Swift::Int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v13 = (char *)&v15 - v12;
  if (v8 != v9)
  {
    if ((unsigned __int128)(v8 * (__int128)v11) >> 64 == (v8 * v11) >> 63)
    {
      if ((unsigned __int128)(v9 * (__int128)v11) >> 64 == (v9 * v11) >> 63)
      {
        v14 = v10 + *(_QWORD *)(v4 + 72) * v9 * v11;
        sub_22ABDF59C();
        sub_22ABDF590();
        (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v13, v3);
        OUTLINED_FUNCTION_7_111((uint64_t)v6, v14);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_22ABD1028(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[32];

  v6 = *v4;
  v7 = v4[2];
  v8 = *(_QWORD *)(a3 + 16);
  v9 = (void (*)(_BYTE *, _QWORD))UnsafeMutableVectorPointer.subscript.modify((uint64_t)v13, *a2, v6, a4, v7);
  v10 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v11, a1, v8);
  v9(v13, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v8);
}

void (*sub_22ABD10AC(_QWORD *a1, uint64_t *a2))(_QWORD *)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v6;

  v5 = malloc(0x28uLL);
  *a1 = v5;
  v5[4] = UnsafeMutableVectorPointer.subscript.modify((uint64_t)v5, *a2, *v2, v6, v2[2]);
  return sub_22ABD1110;
}

void sub_22ABD1114(__int128 *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  UnsafeMutableVectorPointer.subscript.setter(a1, *a2, a2[1], *v5, a5, v5[2], *(_QWORD *)(a3 + 16));
}

void sub_22ABD1130(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = malloc(0xA8uLL);
  *a1 = v7;
  v9 = *a2;
  v8 = a2[1];
  v7[15] = *a2;
  v7[16] = v8;
  v10 = *v3;
  v11 = v3[1];
  v7[17] = *v3;
  v7[18] = v11;
  v12 = v3[2];
  v13 = *(_QWORD *)(a3 + 16);
  v7[19] = v12;
  v7[20] = v13;
  UnsafeMutableVectorPointer.subscript.getter(v9, v8, v10, v11, v12, v13);
}

void (*sub_22ABD1184())(uint64_t *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_22ABD0F04;
}

uint64_t sub_22ABD11A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2E4D80]("1،$л", a3);
  return sub_22ABDECA8();
}

void sub_22ABD1210(Swift::Int *a1, Swift::Int *a2)
{
  UnsafeMutableVectorPointer.swapAt(_:_:)(*a1, *a2);
}

uint64_t sub_22ABD122C@<X0>(uint64_t (*a1)(uint64_t *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return UnsafeMutableVectorPointer.withContiguousMutableStorageIfAvailable<A>(_:)(a1, a2, a3);
}

uint64_t UnsafeMutableVectorPointer.withContiguousMutableStorageIfAvailable<A>(_:)@<X0>(uint64_t (*a1)(uint64_t *)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  MEMORY[0x24BDAC7A8](a3);
  OUTLINED_FUNCTION_34();
  if (*(_QWORD *)(v3 + 16) == 1)
  {
    v18 = v9;
    v19 = v8;
    v10 = sub_22ABDF62C();
    v12 = v11;
    v21 = v10;
    v22 = v11;
    v13 = sub_22ABDED08();
    result = a1(&v21);
    if (v4)
      return result;
    v23 = v13;
    v20[3] = v12;
    v20[1] = v22;
    v20[2] = sub_22ABDED08();
    v15 = sub_22ABDF5C0();
    v16 = sub_22ABDF5D8();
    v20[0] = MEMORY[0x22E2E4D80](MEMORY[0x24BEE1C40], v15);
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE4AB8], v16, v20);
    result = sub_22ABDFFEC();
    if ((result & 1) == 0)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v19, v5, a2);
    v8 = v19;
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  return OUTLINED_FUNCTION_73_2(v8, v17);
}

void (*sub_22ABD13D8(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v3;
  _QWORD *v7;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_22ABD143C(v7, *a2, *v3, v3[1], v3[2], *(_QWORD *)(a3 + 16));
  return sub_22ABD1110;
}

void (*sub_22ABD143C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(_QWORD *a1)
{
  uint64_t v8;

  v8 = *(_QWORD *)(a6 - 8);
  *a1 = a6;
  a1[1] = v8;
  a1[2] = malloc(*(_QWORD *)(v8 + 64));
  UnsafeMutableVectorPointer.subscript.getter(a2, a3);
  return sub_22A9B8614;
}

void sub_22ABD14B4(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  UnsafeMutableVectorPointer.subscript.getter(*a1, a1[1], *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16));
}

__n128 sub_22ABD14E8()
{
  uint64_t v0;
  __n128 result;
  __n128 v2;
  __int128 v3;
  uint64_t v4;

  result = v2;
  *(__n128 *)v0 = v2;
  *(_OWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 32) = v4;
  return result;
}

uint64_t sub_22ABD150C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = UnsafeMutableVectorPointer.indices.getter();
  *a1 = 0;
  a1[1] = v3;
  return result;
}

Swift::Int sub_22ABD1534@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = UnsafeMutableVectorPointer.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_22ABD1560@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = UnsafeMutableVectorPointer.index(before:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_22ABD158C@<X0>(Swift::Int *a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int result;

  result = UnsafeMutableVectorPointer.index(_:offsetBy:)(*a1, a2);
  *a3 = result;
  return result;
}

Swift::Int sub_22ABD15B4@<X0>(Swift::Int *a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X2>, uint64_t a4@<X8>)
{
  Swift::Int_optional v6;

  v6 = UnsafeMutableVectorPointer.index(_:offsetBy:limitedBy:)(*a1, a2, *a3);
  *(_QWORD *)a4 = v6.value;
  *(_BYTE *)(a4 + 8) = v6.is_nil;
  return v6.value;
}

Swift::Int sub_22ABD15E8(Swift::Int *a1, Swift::Int *a2)
{
  return UnsafeMutableVectorPointer.distance(from:to:)(*a1, *a2);
}

void UnsafeMutableVectorPointer.init(rebasing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for UnsafeMutableVectorPointer(255, a2, a3, a4);
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22ABD163C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_22ABE0214();
  sub_22ABE01FC();
  sub_22ABE01E4();
  OUTLINED_FUNCTION_5_105();
  result = sub_22ABE01FC();
  if ((unsigned __int128)(v5 * (__int128)v4) >> 64 == (v5 * v4) >> 63)
  {
    v2 = v6 + *(_QWORD *)(*(_QWORD *)(v0 - 8) + 72) * v5 * v4;
    v3 = OUTLINED_FUNCTION_4_115();
    MEMORY[0x22E2E4498](v3);
    OUTLINED_FUNCTION_5_105();
    sub_22ABE01E4();
    OUTLINED_FUNCTION_4_115();
    sub_22ABE01FC();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall UnsafeMutableVectorPointer.deallocate()()
{
  sub_22ABDECE4();
}

uint64_t static UnsafeMutableVectorPointer.allocate(capacity:)()
{
  return sub_22ABDF5B4();
}

uint64_t UnsafeMutableVectorPointer.update(repeating:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v7;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(int64_t, uint64_t, uint64_t);
  int64_t v15;
  _BOOL4 v16;

  if (a4)
  {
    v7 = a3 >= 0;
    if (a4 > 0)
      v7 = a3 < 1;
    if (!v7)
    {
      v10 = result;
      v11 = 0;
      v12 = *(_QWORD *)(a5 - 8);
      v13 = *(_QWORD *)(v12 + 72);
      v14 = *(uint64_t (**)(int64_t, uint64_t, uint64_t))(v12 + 24);
      do
      {
        if (__OFADD__(v11, a4))
          v15 = ((v11 + a4) >> 63) ^ 0x8000000000000000;
        else
          v15 = v11 + a4;
        result = v14(a2 + v13 * v11, v10, a5);
        v16 = v15 >= a3;
        if (a4 <= 0)
          v16 = v15 <= a3;
        v11 = v15;
      }
      while (!v16);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t UnsafeMutableVectorPointer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDF5C0();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_12_1();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_12_1();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  return 0;
}

void sub_22ABD1918()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABD1928()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABD1938(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeMutableVectorPointer<A>);
  return MEMORY[0x22E2E4D80](MEMORY[0x24BEE4220], a1, &v3);
}

void sub_22ABD1980()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABD1990(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x22E2E4D80]("a،$");
  return MEMORY[0x22E2E4D80](MEMORY[0x24BEE4230], a1, &v3);
}

void sub_22ABD19D8()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABD19E8(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x22E2E4D80]("1،$л");
  return MEMORY[0x22E2E4D80](MEMORY[0x24BEE4218], a1, &v3);
}

uint64_t sub_22ABD1A30()
{
  return UnsafeMutableVectorPointer.debugDescription.getter();
}

void sub_22ABD1A44()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABD1A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeMutableVectorPointer<A>, a4);
  return sub_22ABDCE90();
}

uint64_t sub_22ABD1AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeMutableVectorPointer<A>, a4);
  return sub_22ABDCE9C();
}

uint64_t OUTLINED_FUNCTION_4_115()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_5_105()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_7_111(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22ABCB184(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_10_90()
{
  return sub_22ABDF7D0();
}

BOOL static MatrixLayout.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_22ABD1C08(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x726F6A614D776F72 && a2 == 0xE800000000000000;
  if (v3 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614D6E6D756C6F63 && a2 == 0xEB00000000726F6ALL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22ABD1CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22ABD1C08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22ABD1D20()
{
  sub_22ABD1F9C();
  return sub_22ABE02EC();
}

uint64_t sub_22ABD1D48()
{
  sub_22ABD1F9C();
  return sub_22ABE02F8();
}

uint64_t sub_22ABD1D70()
{
  sub_22ABD1FD8();
  return sub_22ABE02EC();
}

uint64_t sub_22ABD1D98()
{
  sub_22ABD1FD8();
  return sub_22ABE02F8();
}

uint64_t sub_22ABD1DC0()
{
  sub_22ABD2014();
  return sub_22ABE02EC();
}

uint64_t sub_22ABD1DE8()
{
  sub_22ABD2014();
  return sub_22ABE02F8();
}

unint64_t sub_22ABD1F9C()
{
  unint64_t result;

  result = qword_255B1C2E0;
  if (!qword_255B1C2E0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC02350, &type metadata for MatrixLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1C2E0);
  }
  return result;
}

unint64_t sub_22ABD1FD8()
{
  unint64_t result;

  result = qword_255B1C2E8;
  if (!qword_255B1C2E8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC02300, &type metadata for MatrixLayout.ColumnMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1C2E8);
  }
  return result;
}

unint64_t sub_22ABD2014()
{
  unint64_t result;

  result = qword_255B1C2F0;
  if (!qword_255B1C2F0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC022B0, &type metadata for MatrixLayout.RowMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1C2F0);
  }
  return result;
}

BOOL sub_22ABD2370(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MatrixLayout.__derived_enum_equals(_:_:)(*a1, *a2);
}

uint64_t sub_22ABD237C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = MatrixLayout.init(from:)(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_22ABD23A8(_QWORD *a1)
{
  char *v1;

  return MatrixLayout.encode(to:)(a1, *v1);
}

uint64_t sub_22ABD23C0()
{
  char *v0;

  return MatrixLayout.debugDescription.getter(*v0);
}

unint64_t sub_22ABD23CC()
{
  unint64_t result;

  result = qword_255B1C310;
  if (!qword_255B1C310)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for MatrixLayout, &type metadata for MatrixLayout);
    atomic_store(result, (unint64_t *)&qword_255B1C310);
  }
  return result;
}

uint64_t _s13LinearAlgebra12MatrixLayoutOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22ABD2468 + 4 * byte_22AC02005[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22ABD249C + 4 * byte_22AC02000[v4]))();
}

uint64_t sub_22ABD249C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABD24A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22ABD24ACLL);
  return result;
}

uint64_t sub_22ABD24B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22ABD24C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22ABD24C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22ABD24CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_22ABD250C()
{
  unint64_t result;

  result = qword_255B1C318;
  if (!qword_255B1C318)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC02288, &type metadata for MatrixLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1C318);
  }
  return result;
}

unint64_t sub_22ABD254C()
{
  unint64_t result;

  result = qword_255B1C320;
  if (!qword_255B1C320)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC021A8, &type metadata for MatrixLayout.RowMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1C320);
  }
  return result;
}

unint64_t sub_22ABD258C()
{
  unint64_t result;

  result = qword_255B1C328;
  if (!qword_255B1C328)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC021D0, &type metadata for MatrixLayout.RowMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1C328);
  }
  return result;
}

unint64_t sub_22ABD25CC()
{
  unint64_t result;

  result = qword_255B1C330;
  if (!qword_255B1C330)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC02158, &type metadata for MatrixLayout.ColumnMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1C330);
  }
  return result;
}

unint64_t sub_22ABD260C()
{
  unint64_t result;

  result = qword_255B1C338;
  if (!qword_255B1C338)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC02180, &type metadata for MatrixLayout.ColumnMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1C338);
  }
  return result;
}

unint64_t sub_22ABD264C()
{
  unint64_t result;

  result = qword_255B1C340;
  if (!qword_255B1C340)
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC021F8, &type metadata for MatrixLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B1C340);
  }
  return result;
}

unint64_t sub_22ABD268C()
{
  unint64_t result;

  result = qword_255B1C348[0];
  if (!qword_255B1C348[0])
  {
    result = MEMORY[0x22E2E4D80](&unk_22AC02220, &type metadata for MatrixLayout.CodingKeys);
    atomic_store(result, qword_255B1C348);
  }
  return result;
}

unint64_t OUTLINED_FUNCTION_5_106()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_22ABD1FD8();
}

uint64_t DenseVector.count.getter()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_22ABDF920();
  swift_release();
  return v0;
}

uint64_t DenseVector.withUnsafeVectorPointer<A>(_:)()
{
  return sub_22ABDF8F0();
}

void DenseVector.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  *v7 = a2;
  v7[1] = a3;
  v8 = *(_QWORD *)(a3 + 16);
  v7[2] = v3;
  v7[3] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[4] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[5] = malloc(v10);
  v7[6] = malloc(v10);
  _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
  OUTLINED_FUNCTION_38();
}

void sub_22ABD287C(unint64_t **a1, char a2)
{
  unint64_t *v2;
  void *v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2 = *a1;
  v3 = (void *)(*a1)[5];
  v4 = (void *)(*a1)[6];
  if ((a2 & 1) != 0)
  {
    v5 = v2[3];
    v6 = v2[4];
    v7 = v2[1];
    v8 = *v2;
    (*(void (**)(unint64_t, void *, unint64_t))(v6 + 16))((*a1)[5], v4, v5);
    DenseVector.subscript.setter((uint64_t)v3, v8, v7);
    (*(void (**)(void *, unint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    DenseVector.subscript.setter((*a1)[6], *v2, v2[1]);
  }
  free(v4);
  free(v3);
  free(v2);
}

void sub_22ABD2920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_28_52();
  v2 = *(_QWORD *)(v1 - 8);
  *v3 = v1;
  v3[1] = v2;
  *(_QWORD *)(v0 + 16) = malloc(*(_QWORD *)(v2 + 64));
  _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
  OUTLINED_FUNCTION_38();
}

void sub_22ABD297C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

void DenseVector.init(repeating:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v8 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  sub_22ABDF95C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, a3);
  OUTLINED_FUNCTION_38();
}

void sub_22ABD2A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
    OUTLINED_FUNCTION_1_113();
    if (v1)
    {
      v2 = OUTLINED_FUNCTION_14_84();
      OUTLINED_FUNCTION_3_124(v2);
    }
    OUTLINED_FUNCTION_8_109();
    OUTLINED_FUNCTION_12_90();
    UnsafeMutableVectorPointer<A>.addProductFloat(_:_:transposed:scaledBy:)();
    OUTLINED_FUNCTION_5_107();
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_16_86();
    OUTLINED_FUNCTION_0_21();
  }
}

void sub_22ABD2AA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
    OUTLINED_FUNCTION_1_113();
    if (v1)
    {
      v2 = OUTLINED_FUNCTION_14_84();
      OUTLINED_FUNCTION_3_124(v2);
    }
    OUTLINED_FUNCTION_10_91();
    OUTLINED_FUNCTION_12_90();
    UnsafeMutableVectorPointer<A>.addProductFloat(_:_:transposed:scaledBy:)();
    OUTLINED_FUNCTION_5_107();
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_16_86();
    OUTLINED_FUNCTION_0_21();
  }
}

void sub_22ABD2B04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
    OUTLINED_FUNCTION_1_113();
    if (v1)
    {
      v2 = OUTLINED_FUNCTION_14_84();
      OUTLINED_FUNCTION_3_124(v2);
    }
    OUTLINED_FUNCTION_8_109();
    OUTLINED_FUNCTION_11_98();
    UnsafeMutableVectorPointer<A>.addProductFloat(_:_:transposed:scaledBy:)();
    OUTLINED_FUNCTION_5_107();
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_16_86();
    OUTLINED_FUNCTION_0_21();
  }
}

void sub_22ABD2B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
    OUTLINED_FUNCTION_1_113();
    if (v1)
    {
      v2 = OUTLINED_FUNCTION_14_84();
      OUTLINED_FUNCTION_3_124(v2);
    }
    OUTLINED_FUNCTION_10_91();
    OUTLINED_FUNCTION_11_98();
    UnsafeMutableVectorPointer<A>.addProductFloat(_:_:transposed:scaledBy:)();
    OUTLINED_FUNCTION_5_107();
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_16_86();
    OUTLINED_FUNCTION_0_21();
  }
}

void sub_22ABD2BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
    OUTLINED_FUNCTION_1_113();
    if (v1)
    {
      v2 = OUTLINED_FUNCTION_14_84();
      OUTLINED_FUNCTION_4_116(v2);
    }
    OUTLINED_FUNCTION_7_112();
    OUTLINED_FUNCTION_12_90();
    UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
    OUTLINED_FUNCTION_5_107();
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_16_86();
    OUTLINED_FUNCTION_0_21();
  }
}

void sub_22ABD2C30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
    OUTLINED_FUNCTION_1_113();
    if (v1)
    {
      v2 = OUTLINED_FUNCTION_14_84();
      OUTLINED_FUNCTION_4_116(v2);
    }
    OUTLINED_FUNCTION_9_103();
    OUTLINED_FUNCTION_12_90();
    UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
    OUTLINED_FUNCTION_5_107();
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_16_86();
    OUTLINED_FUNCTION_0_21();
  }
}

void sub_22ABD2C94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
    OUTLINED_FUNCTION_1_113();
    if (v1)
    {
      v2 = OUTLINED_FUNCTION_14_84();
      OUTLINED_FUNCTION_4_116(v2);
    }
    OUTLINED_FUNCTION_7_112();
    OUTLINED_FUNCTION_11_98();
    UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
    OUTLINED_FUNCTION_5_107();
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_16_86();
    OUTLINED_FUNCTION_0_21();
  }
}

void sub_22ABD2CF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_33_12();
    OUTLINED_FUNCTION_1_113();
    if (v1)
    {
      v2 = OUTLINED_FUNCTION_14_84();
      OUTLINED_FUNCTION_4_116(v2);
    }
    OUTLINED_FUNCTION_9_103();
    OUTLINED_FUNCTION_11_98();
    UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
    OUTLINED_FUNCTION_5_107();
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_16_86();
    OUTLINED_FUNCTION_0_21();
  }
}

uint64_t DenseVector.init(unsafeUninitializedCapacity:initializingWith:)()
{
  return sub_22A9F2FBC();
}

uint64_t DenseVector.storage.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*DenseVector.storage.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void DenseVector.init<A>(scalars:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_28_52();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, double))(v3 + 16))((char *)&v7 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v1, v5);
  sub_22ABDF11C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  OUTLINED_FUNCTION_38();
}

uint64_t sub_22ABD2E64(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD *), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _QWORD v13[3];

  *a2 = a3;
  v13[0] = UnsafeMutableVectorPointer.init(_:)(*a1, a1[1], a6);
  v13[1] = v9;
  v13[2] = v10;
  result = a4(v13);
  if (!v6)
  {
    result = sub_22ABDF62C();
    *a1 = result;
    a1[1] = v12;
  }
  return result;
}

uint64_t DenseVector.squaredMagnitude.getter()
{
  return sub_22ABD30A4();
}

uint64_t static DenseVector.__derived_struct_equals(_:_:)()
{
  return sub_22ABDF980();
}

uint64_t sub_22ABD2F10()
{
  return static DenseVector.__derived_struct_equals(_:_:)();
}

uint64_t DenseVector.init(arrayLiteral:)()
{
  uint64_t v0;

  v0 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v0);
  return sub_22ABDF11C();
}

uint64_t sub_22ABD2F7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DenseVector.init(arrayLiteral:)();
  *a1 = result;
  return result;
}

uint64_t sub_22ABD2FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22ABC7A5C(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16));
}

_QWORD *DenseVector.withUnsafeMutableVectorPointer<A>(_:)(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v6 = *(_QWORD *)(a3 + 16);
  sub_22ABDF974();
  sub_22ABDF8E4();
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v11[0] = *(_QWORD *)v3 + ((v8 + 32) & ~v8);
  v9 = v11[0];
  v11[1] = v7;
  sub_22ABC7BE8((uint64_t)v11, a1, a2, v6);
  return sub_22A9F43F4(v11, v9, v7);
}

uint64_t DenseVector.magnitude.getter()
{
  return sub_22ABD30A4();
}

uint64_t sub_22ABD30A4()
{
  OUTLINED_FUNCTION_28_52();
  swift_getKeyPath();
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  return swift_release();
}

uint64_t DenseVector.maximumAbsoluteValue.getter()
{
  return sub_22ABD30A4();
}

Swift::Void __swiftcall DenseVector.negate()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v2 = v1;
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  ((void (*)())MEMORY[0x24BDAC7A8])();
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - v8;
  v11 = *(_QWORD *)(v10 + 24);
  swift_retain();
  v12 = DenseVector.count.getter();
  swift_release();
  if (v12 < 0)
  {
    __break(1u);
  }
  else if (v12)
  {
    v13 = 0;
    do
    {
      v20 = v13 + 1;
      _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
      sub_22ABDF854();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v14 = v11;
      v15 = sub_22ABDF974();
      sub_22ABDF8E4();
      v16 = *v2;
      sub_22AB63820(v13, *v2);
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 40))(v16+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, v9, v3);
      v17 = v15;
      v11 = v14;
      nullsub_1(v17, v18);
      v13 = v20;
    }
    while (v12 != v20);
  }
}

uint64_t static DenseVector.- prefix(_:)()
{
  DenseVector.count.getter();
  return DenseVector.init(unsafeUninitializedCapacity:initializingWith:)();
}

void sub_22ABD3318(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];

  v18[3] = a4;
  v18[1] = a2;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - v10;
  v13 = *(_QWORD *)(v12 + 8);
  if (v13 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (v13)
  {
    v14 = 0;
    while (1)
    {
      v15 = *a1;
      v16 = a1[2];
      _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
      sub_22ABDF854();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a3);
      v17 = v14 * v16;
      if ((unsigned __int128)(v14 * (__int128)v16) >> 64 != (v14 * v16) >> 63)
        break;
      ++v14;
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v15 + *(_QWORD *)(v6 + 72) * v17, v11, a3);
      if (v13 == v14)
        return;
    }
    __break(1u);
    goto LABEL_8;
  }
}

void static DenseVector.+= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22ABD3548(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_22ABD4238);
}

uint64_t sub_22ABD345C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v21 = a6;
  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22ABC1D10();
  UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(a1, a2, a3, (uint64_t)v17, a4, a5, v21, a7, a8, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
    v29,
    v30);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, a7);
}

void static DenseVector.-= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22ABD3548(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_22ABD4264);
}

void sub_22ABD3548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_22_67(a1, a2, a3, a4);
  DenseVector.withUnsafeMutableVectorPointer<A>(_:)(a5, (uint64_t)&v7, v6);
  OUTLINED_FUNCTION_21_63();
}

uint64_t sub_22ABD3588()
{
  return DenseVector.withUnsafeVectorPointer<A>(_:)();
}

uint64_t sub_22ABD35D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a5;
  v22 = a6;
  v19 = a3;
  v20 = a4;
  v18 = a2;
  v11 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_22ABE0130();
  sub_22ABDFF20();
  UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(a1, v18, v19, (uint64_t)v13, v20, v21, v22, a7, a8, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25,
    v26,
    v27);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, a7);
}

void static DenseVector.+ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22ABD3744(a1, a2, a3, a4, (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))static DenseVector.+= infix(_:_:));
}

void static DenseVector.- infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22ABD3744(a1, a2, a3, a4, (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))static DenseVector.-= infix(_:_:));
}

void sub_22ABD3744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = a1;
  swift_retain();
  a5(&v9, a2, a3, a4);
  OUTLINED_FUNCTION_1_18();
}

void static DenseVector.*= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_22_67(a1, a2, a3, a4);
  DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22ABD4284, (uint64_t)&v5, v4);
  OUTLINED_FUNCTION_21_63();
}

uint64_t sub_22ABD37D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;

  if (a2 < 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v5 = 0;
    while ((unsigned __int128)(v5 * (__int128)a3) >> 64 == (v5 * a3) >> 63)
    {
      ++v5;
      result = sub_22ABDF314();
      if (a2 == v5)
        return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  return result;
}

void static DenseVector.* infix(_:_:)()
{
  uint64_t v0;

  v0 = swift_retain();
  OUTLINED_FUNCTION_17_77(v0);
  OUTLINED_FUNCTION_1_18();
}

{
  uint64_t v0;

  v0 = swift_retain();
  OUTLINED_FUNCTION_17_77(v0);
  OUTLINED_FUNCTION_1_18();
}

uint64_t static DenseVector./ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v17 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - v13;
  v18 = a1;
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_22ABE0130();
  sub_22ABDFF20();
  sub_22ABDEB88();
  v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, a3);
  static DenseVector.*= infix(_:_:)((uint64_t)&v18, (uint64_t)v14, a3, a4);
  v15(v14, a3);
  return v18;
}

void static DenseVector<>.*= infix(_:_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  if ((OUTLINED_FUNCTION_27_65() & 1) == 0)
  {
    sub_22AB88468();
    v1 = v2;
  }
  UnsafeMutableVectorPointer<A>.multiply(by:)(v1 + 32, *(_QWORD *)(v1 + 16), 1);
  *v0 = v1;
  OUTLINED_FUNCTION_51_19();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  if ((OUTLINED_FUNCTION_27_65() & 1) == 0)
  {
    sub_22AB88498();
    v1 = v2;
  }
  OUTLINED_FUNCTION_18_78(v1 + 32, *(_QWORD *)(v1 + 16));
  *v0 = v1;
  OUTLINED_FUNCTION_51_19();
}

void static DenseVector<>.* infix(_:_:)()
{
  OUTLINED_FUNCTION_26_67();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    OUTLINED_FUNCTION_32_47();
  OUTLINED_FUNCTION_19_69();
  OUTLINED_FUNCTION_51_19();
}

{
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    OUTLINED_FUNCTION_32_47();
  OUTLINED_FUNCTION_19_69();
  OUTLINED_FUNCTION_51_19();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_26_67();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_31_46();
    v0 = v1;
  }
  OUTLINED_FUNCTION_18_78(v0 + 32, *(_QWORD *)(v0 + 16));
  OUTLINED_FUNCTION_51_19();
}

void static DenseVector<>./ infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_26_67();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_32_47();
    v0 = v1;
  }
  UnsafeMutableVectorPointer<A>.multiply(by:)(v0 + 32, *(_QWORD *)(v0 + 16), 1);
  OUTLINED_FUNCTION_51_19();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_26_67();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_31_46();
    v0 = v1;
  }
  UnsafeMutableVectorPointer<A>.multiply(by:)(v0 + 32, *(_QWORD *)(v0 + 16), 1);
  OUTLINED_FUNCTION_51_19();
}

void static DenseVector<>.* infix(_:_:)(uint64_t a1)
{
  uint64_t v2;

  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_31_46();
    a1 = v2;
  }
  OUTLINED_FUNCTION_18_78(a1 + 32, *(_QWORD *)(a1 + 16));
  OUTLINED_FUNCTION_51_19();
}

uint64_t sub_22ABD3CDC()
{
  return DenseVector.withUnsafeVectorPointer<A>(_:)();
}

uint64_t sub_22ABD3D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t result;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v46 = a5;
  v38 = a4;
  v37 = a3;
  v59 = a2;
  v39 = a1;
  v44 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v43 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v42 = (char *)&v36 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v41 = (char *)&v36 - v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v19 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v36 - v20;
  v40 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a8 + 16) + 16) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  v45 = a9;
  sub_22ABDFF20();
  v55 = v38;
  v56 = v46;
  v57 = a6;
  v47 = v39;
  *(_QWORD *)&v48 = v59;
  *((_QWORD *)&v48 + 1) = v37;
  v25 = type metadata accessor for UnsafeVectorPointer(0, a7, v23, v24);
  v26 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeVectorPointer<A>, v25);
  sub_22ABE0178();
  v46 = v26;
  v47 = v51;
  v48 = v52;
  v49 = v53;
  v50 = v54;
  v55 = v25;
  v56 = v25;
  v59 = v25;
  v57 = v26;
  v58 = v26;
  sub_22ABDF7E8();
  sub_22ABDF7C4();
  v27 = v41;
  v28 = v42;
  v29 = v43;
  while (1)
  {
    v51 = v59;
    *(_QWORD *)&v52 = v59;
    *((_QWORD *)&v52 + 1) = v46;
    v53 = v46;
    sub_22ABDF7DC();
    sub_22ABDF7D0();
    result = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, TupleTypeMetadata2);
    if ((_DWORD)result == 1)
      break;
    v31 = &v21[*(int *)(TupleTypeMetadata2 + 48)];
    v32 = TupleTypeMetadata2;
    v33 = v44;
    v34 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
    v34(v27, v21, a7);
    v34(v28, v31, a7);
    sub_22ABDF308();
    sub_22ABDFB00();
    v35 = *(void (**)(char *, uint64_t))(v33 + 8);
    TupleTypeMetadata2 = v32;
    v35(v29, a7);
    v35(v28, a7);
    v35(v27, a7);
  }
  return result;
}

uint64_t sub_22ABD4140(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_22ABD2E64(a1, a2, *(_QWORD *)(v2 + 32), *(uint64_t (**)(_QWORD *))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16));
}

uint64_t sub_22ABD4160(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB9B138(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))UnsafeVectorPointer<A>.squaredMagnitude.getter);
}

uint64_t sub_22ABD4184()
{
  return sub_22ABD41E0();
}

uint64_t sub_22ABD4198(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB9B138(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))UnsafeVectorPointer<A>.magnitude.getter);
}

uint64_t sub_22ABD41BC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB9B138(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))UnsafeVectorPointer<A>.maximumAbsoluteValue.getter);
}

uint64_t sub_22ABD41E0()
{
  return swift_getAtKeyPath();
}

void sub_22ABD421C(uint64_t *a1)
{
  uint64_t *v1;

  sub_22ABD3318(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_22ABD4238()
{
  OUTLINED_FUNCTION_29_51();
  return sub_22ABD3588();
}

uint64_t type metadata accessor for DenseVector(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DenseVector);
}

uint64_t sub_22ABD4264()
{
  OUTLINED_FUNCTION_29_51();
  return sub_22ABD3588();
}

uint64_t sub_22ABD4284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_29_51();
  return sub_22ABD37D0(v0, v1, v2);
}

uint64_t sub_22ABD429C()
{
  OUTLINED_FUNCTION_29_51();
  return sub_22ABD3CDC();
}

uint64_t sub_22ABD42B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;

  return sub_22ABD3D18(a1, a2, a3, v4[4], v4[5], v4[6], v4[2], v4[3], a4);
}

uint64_t sub_22ABD42D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AACB6A4(a1, a2, a3, sub_22ABD35D0);
}

uint64_t sub_22ABD42F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AACB6A4(a1, a2, a3, sub_22ABD345C);
}

void OUTLINED_FUNCTION_3_124(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  bzero((void *)(a1 + 32), 4 * v1);
}

void OUTLINED_FUNCTION_4_116(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  bzero((void *)(a1 + 32), 8 * v1);
}

uint64_t OUTLINED_FUNCTION_5_107()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_release();
}

double OUTLINED_FUNCTION_7_112()
{
  return 1.0;
}

float OUTLINED_FUNCTION_8_109()
{
  return 1.0;
}

double OUTLINED_FUNCTION_9_103()
{
  return 1.0;
}

float OUTLINED_FUNCTION_10_91()
{
  return 1.0;
}

uint64_t OUTLINED_FUNCTION_14_84()
{
  return sub_22ABDF074();
}

uint64_t OUTLINED_FUNCTION_16_86()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_17_77(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a1);
  static DenseVector.*= infix(_:_:)((uint64_t)va, v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_18_78(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableVectorPointer<A>.multiply(by:)(a1, a2, 1);
}

uint64_t OUTLINED_FUNCTION_19_69()
{
  uint64_t v0;

  return UnsafeMutableVectorPointer<A>.multiply(by:)(v0 + 32, *(_QWORD *)(v0 + 16), 1);
}

uint64_t OUTLINED_FUNCTION_22_67(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for DenseVector(0, a3, a4, a4);
}

uint64_t OUTLINED_FUNCTION_26_67()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_27_65()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_31_46()
{
  sub_22AB88498();
}

void OUTLINED_FUNCTION_32_47()
{
  sub_22AB88468();
}

uint64_t SparseMatrix.indexed()@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *v1;
  v4 = v1[1];
  v5 = *((_BYTE *)v1 + 16);
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v5 & 1;
  v12 = v7;
  v13 = v6;
  v11 = v8;
  sub_22AA82E0C((uint64_t)&v13);
  sub_22AA82E0C((uint64_t)&v12);
  result = sub_22ABD4590((uint64_t)&v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  return result;
}

__n128 SparseMatrix.IndexedSequence.init(base:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 16) & 1;
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = v3;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 40) = v2;
  return result;
}

uint64_t sub_22ABD4590(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t SparseMatrix.Transpose.indexed()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  type metadata accessor for SparseMatrix(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  return SparseMatrix.indexed()(a3);
}

uint64_t SparseMatrix.IndexedSequence.base.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_0_120(a1);
  sub_22ABDEAEC();
  return OUTLINED_FUNCTION_1_114();
}

double SparseMatrix.IndexedSequence.makeIterator()@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 *v2;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  double result;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;

  v5 = *v2;
  v6 = v2[2];
  v15 = v2[1];
  v16 = v6;
  v17 = *((_QWORD *)&v15 + 1);
  v18 = v6;
  v14 = v5;
  sub_22AA82E0C((uint64_t)&v17);
  sub_22AA82E0C((uint64_t)&v18);
  sub_22ABD4590((uint64_t)&v18 + 8);
  SparseMatrix.IndexedSequence.Iterator.init(base:)((uint64_t)&v14, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v7, (uint64_t)v11);
  v8 = v11[1];
  *a2 = v11[0];
  a2[1] = v8;
  result = *(double *)&v12;
  v10 = v13;
  a2[2] = v12;
  a2[3] = v10;
  return result;
}

uint64_t SparseMatrix.IndexedSequence.Iterator.init(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 24);
  v19 = *(_OWORD *)(a1 + 24);
  v22 = v11;
  type metadata accessor for SparseMatrix(0, a2, a3, a4);
  result = SparseMatrix.majorCount.getter();
  if (result >= 1)
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 >= 2;
    v15 = v13 - 2;
    if (!v14)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    if (*(uint64_t *)(v11 + 40) <= 0)
    {
      v16 = 0;
      while (1)
      {
        if (result - 1 == v16)
        {
          v16 = result;
          goto LABEL_6;
        }
        if (v15 == v16)
          break;
        v18 = *(_QWORD *)(v11 + 48 + 8 * v16++);
        if (v18 >= 1)
          goto LABEL_6;
      }
      __break(1u);
      goto LABEL_14;
    }
  }
  v16 = 0;
LABEL_6:
  v17 = *(_QWORD *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 40);
  v21 = v17;
  sub_22AA82E0C((uint64_t)&v22);
  sub_22AA82E0C((uint64_t)&v21);
  sub_22ABD4590((uint64_t)&v20);
  result = sub_22ABD4888(a1);
  *(_QWORD *)a5 = v7;
  *(_QWORD *)(a5 + 8) = v8;
  *(_BYTE *)(a5 + 16) = v9 & 1;
  *(_OWORD *)(a5 + 24) = v19;
  *(_QWORD *)(a5 + 40) = v10;
  *(_QWORD *)(a5 + 48) = v16;
  *(_QWORD *)(a5 + 56) = 0;
  return result;
}

double sub_22ABD47A0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  double result;
  __int128 v9;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = v2[3];
  v5 = v2[4];
  v6 = v2[5];
  SparseMatrix.IndexedSequence.makeIterator()(a1, v10);
  v15 = v4;
  sub_22A9E07F0((uint64_t)&v15);
  v14 = v5;
  sub_22A9E07F0((uint64_t)&v14);
  v13 = v6;
  sub_22AB9B058((uint64_t)&v13);
  v7 = v10[1];
  *a2 = v10[0];
  a2[1] = v7;
  result = *(double *)&v11;
  v9 = v12;
  a2[2] = v11;
  a2[3] = v9;
  return result;
}

uint64_t SparseMatrix.IndexedSequence.Iterator.base.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_0_120(a1);
  sub_22ABDEAEC();
  return OUTLINED_FUNCTION_1_114();
}

uint64_t SparseMatrix.IndexedSequence.Iterator.majorIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t SparseMatrix.IndexedSequence.Iterator.majorIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*SparseMatrix.IndexedSequence.Iterator.majorIndex.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SparseMatrix.IndexedSequence.Iterator.flatIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t SparseMatrix.IndexedSequence.Iterator.flatIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t (*SparseMatrix.IndexedSequence.Iterator.flatIndex.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_22ABD4888(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void SparseMatrix.IndexedSequence.Iterator.next()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t TupleTypeMetadata3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a1 + 16);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata3);
  MEMORY[0x24BDAC7A8](v6);
  v7 = *(_QWORD *)(v2 + 48);
  if ((*(_BYTE *)(v2 + 16) & 1) != 0)
  {
    if (v7 < *(_QWORD *)(v2 + 8))
    {
      v8 = *(_QWORD *)(v2 + 56);
      if ((v8 & 0x8000000000000000) != 0)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      v9 = *(uint64_t **)(v2 + 32);
      if (v8 >= v9[2])
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_5_108();
      OUTLINED_FUNCTION_2_124();
      v10 = swift_release();
      v11 = v8 + 1;
      *(_QWORD *)(v2 + 56) = v11;
      v12 = *(_QWORD *)(v2 + 24);
      OUTLINED_FUNCTION_3_125(v10, v13, v14, v15);
      v16 = SparseMatrix.majorCount.getter();
      if (v7 < v16)
      {
        if (v7 < -1)
        {
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        v17 = *(_QWORD *)(v12 + 16);
        if (v7 + 1 >= v17)
        {
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v11 >= *(_QWORD *)(v12 + 8 * (v7 + 1) + 32))
        {
          v18 = v7;
          while (1)
          {
            if (v18 + 1 >= v16)
            {
              v18 = v16;
LABEL_28:
              *(_QWORD *)(v2 + 48) = v18;
              goto LABEL_29;
            }
            if (v18 + 2 >= v17)
              break;
            v19 = *(_QWORD *)(v12 + 48 + 8 * v18++);
            if (v11 < v19)
              goto LABEL_28;
          }
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
      }
LABEL_29:
      v31 = OUTLINED_FUNCTION_4_117();
      *v9 = v32;
      v9[1] = v7;
LABEL_33:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v31, v34, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, TupleTypeMetadata3);
      return;
    }
LABEL_26:
    __swift_storeEnumTagSinglePayload(a2, 1, 1, TupleTypeMetadata3);
    return;
  }
  if (v7 >= *(_QWORD *)v2)
    goto LABEL_26;
  v20 = *(_QWORD *)(v2 + 56);
  if ((v20 & 0x8000000000000000) != 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v9 = *(uint64_t **)(v2 + 32);
  if (v20 >= v9[2])
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_5_108();
  OUTLINED_FUNCTION_2_124();
  v21 = swift_release();
  v22 = v20 + 1;
  *(_QWORD *)(v2 + 56) = v22;
  v23 = *(_QWORD *)(v2 + 24);
  OUTLINED_FUNCTION_3_125(v21, v24, v25, v26);
  v27 = SparseMatrix.majorCount.getter();
  if (v7 >= v27)
  {
LABEL_32:
    v31 = OUTLINED_FUNCTION_4_117();
    *v9 = v7;
    v9[1] = v33;
    goto LABEL_33;
  }
  if (v7 < -1)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v28 = *(_QWORD *)(v23 + 16);
  if (v7 + 1 < v28)
  {
    if (v22 >= *(_QWORD *)(v23 + 8 * (v7 + 1) + 32))
    {
      v29 = v7;
      while (v29 + 1 < v27)
      {
        if (v29 + 2 >= v28)
          goto LABEL_35;
        v30 = *(_QWORD *)(v23 + 48 + 8 * v29++);
        if (v22 < v30)
          goto LABEL_31;
      }
      v29 = v27;
LABEL_31:
      *(_QWORD *)(v2 + 48) = v29;
    }
    goto LABEL_32;
  }
LABEL_43:
  __break(1u);
}

void sub_22ABD4BE8()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22ABD4C00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  swift_retain();
  return a1;
}

uint64_t sub_22ABD4C5C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22ABD4CE8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for SparseMatrix.IndexedSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SparseMatrix.IndexedSequence);
}

uint64_t sub_22ABD4D50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_22ABD4D80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  swift_retain();
  return a1;
}

uint64_t sub_22ABD4DE4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_22ABD4E80(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t type metadata accessor for SparseMatrix.IndexedSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SparseMatrix.IndexedSequence.Iterator);
}

uint64_t OUTLINED_FUNCTION_0_120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_BYTE *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_2_124()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = v0;
  return _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
}

uint64_t OUTLINED_FUNCTION_3_125(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 - 104) = v8;
  *(_QWORD *)(v9 - 96) = v4;
  *(_QWORD *)(v9 - 88) = v7;
  return type metadata accessor for SparseMatrix(0, v6, *(_QWORD *)(v5 + 24), a4);
}

uint64_t OUTLINED_FUNCTION_4_117()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v1 - 136) + *(int *)(v0 + 64);
}

uint64_t OUTLINED_FUNCTION_5_108()
{
  return swift_retain();
}

uint64_t SparseMatrix.majorCount.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 8;
  if (!*(_BYTE *)(v0 + 16))
    v1 = 0;
  return *(_QWORD *)(v0 + v1);
}

uint64_t SparseMatrix.rowCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SparseMatrix.columnCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SparseMatrix.layout.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SparseMatrix.minorCount.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 8;
  if (*(_BYTE *)(v0 + 16))
    v1 = 0;
  return *(_QWORD *)(v0 + v1);
}

uint64_t SparseMatrix.majorStarts.getter()
{
  return sub_22ABDEAEC();
}

void SparseMatrix.majorStarts.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_0_5();
}

uint64_t (*SparseMatrix.majorStarts.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SparseMatrix.minorIndices.getter()
{
  return sub_22ABDEAEC();
}

void SparseMatrix.minorIndices.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  OUTLINED_FUNCTION_0_5();
}

uint64_t (*SparseMatrix.minorIndices.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SparseMatrix.storage.getter()
{
  return swift_retain();
}

void SparseMatrix.storage.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 40) = a1;
  OUTLINED_FUNCTION_0_5();
}

uint64_t (*SparseMatrix.storage.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SparseMatrix.nonZeroValues.getter()
{
  uint64_t v0;

  v0 = sub_22ABDF974();
  swift_retain();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE2A48], v0);
  return sub_22ABDF11C();
}

uint64_t SparseMatrix.count.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[1];
  result = *v0 * v1;
  if ((unsigned __int128)(*v0 * (__int128)v1) >> 64 != result >> 63)
    __break(1u);
  return result;
}

double SparseMatrix.init(rowCount:columnCount:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;

  SparseMatrix.init(rowCount:columnCount:layout:)(a1, a2, 0, (uint64_t)v6);
  v4 = v6[1];
  *a3 = v6[0];
  a3[1] = v4;
  result = *(double *)&v7;
  a3[2] = v7;
  return result;
}

uint64_t SparseMatrix.init(rowCount:columnCount:layout:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if ((a3 & 1) == 0)
  {
    v7 = result + 1;
    if (!__OFADD__(result, 1))
      goto LABEL_6;
    __break(1u);
  }
  v7 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
LABEL_6:
    v8 = a3 & 1;
    v9 = sub_22ABD6784(0, v7);
    sub_22ABDF068();
    result = sub_22ABDF8B4();
    *(_QWORD *)a4 = v5;
    *(_QWORD *)(a4 + 8) = a2;
    *(_BYTE *)(a4 + 16) = v8;
    v10 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(a4 + 24) = v9;
    *(_QWORD *)(a4 + 32) = v10;
    *(_QWORD *)(a4 + 40) = result;
    return result;
  }
  __break(1u);
  return result;
}

void SparseMatrix.init(rowCount:columnCount:columnStarts:rowIndices:values:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) == a1 + 1)
  {
    v8 = OUTLINED_FUNCTION_2_125();
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v8);
    v9 = OUTLINED_FUNCTION_8_110();
    *(_QWORD *)a3 = v5;
    *(_QWORD *)(a3 + 8) = v4;
    *(_BYTE *)(a3 + 16) = 1;
    *(_QWORD *)(a3 + 24) = a2;
    *(_QWORD *)(a3 + 32) = v3;
    *(_QWORD *)(a3 + 40) = v9;
    OUTLINED_FUNCTION_27_17();
    return;
  }
  OUTLINED_FUNCTION_9_104();
  __break(1u);
}

void SparseMatrix.init(rowCount:columnCount:rowStarts:columnIndices:values:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) == a1 + 1)
  {
    v8 = OUTLINED_FUNCTION_2_125();
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v8);
    v9 = OUTLINED_FUNCTION_8_110();
    *(_QWORD *)a3 = v5;
    *(_QWORD *)(a3 + 8) = v4;
    *(_BYTE *)(a3 + 16) = 0;
    *(_QWORD *)(a3 + 24) = a2;
    *(_QWORD *)(a3 + 32) = v3;
    *(_QWORD *)(a3 + 40) = v9;
    OUTLINED_FUNCTION_27_17();
    return;
  }
  OUTLINED_FUNCTION_9_104();
  __break(1u);
}

Swift::Void __swiftcall SparseMatrix.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  sub_22ABD53BC(keepingCapacity);
  v3 = (uint64_t *)(v1 + 8);
  if ((*(_BYTE *)(v1 + 16) & 1) == 0)
    v3 = (uint64_t *)v1;
  v4 = *v3;
  v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    sub_22ABD5534(v5, 0);
    sub_22ABD5478(keepingCapacity);
    sub_22ABDF974();
    sub_22ABDF950();
    return;
  }
  __break(1u);
}

void sub_22ABD53BC(char a1)
{
  uint64_t *v1;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  _QWORD *v4;
  size_t v5;

  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v3 = *v1;
    if (isUniquelyReferenced_nonNull_native)
    {
      sub_22ABD6550(0, *(_QWORD *)(v3 + 16));
      return;
    }
    if (*(_QWORD *)(v3 + 24) >= 2uLL)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
      v4 = (_QWORD *)swift_allocObject();
      v5 = _swift_stdlib_malloc_size(v4);
      v4[2] = 0;
      v4[3] = 2 * ((uint64_t)(v5 - 32) / 8);
    }
    else
    {
      v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    *v1 = (uint64_t)v4;
  }
  else
  {
    *v1 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
}

void sub_22ABD5478(char a1)
{
  uint64_t *v1;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  _QWORD *v4;
  size_t v5;

  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v3 = *v1;
    if (isUniquelyReferenced_nonNull_native)
    {
      sub_22ABD6464(0, *(_QWORD *)(v3 + 16));
      return;
    }
    if (*(_QWORD *)(v3 + 24) >= 2uLL)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B101C0);
      v4 = (_QWORD *)swift_allocObject();
      v5 = _swift_stdlib_malloc_size(v4);
      v4[2] = 0;
      v4[3] = 2 * ((uint64_t)(v5 - 32) / 4);
    }
    else
    {
      v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    *v1 = (uint64_t)v4;
  }
  else
  {
    *v1 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
}

void sub_22ABD5534(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  _QWORD v32[4];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 + a1;
  if (__OFADD__(v4, a1))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (v9 = *(_QWORD *)(v3 + 24) >> 1, v9 < v5))
  {
    if (v4 <= v5)
      v10 = v5;
    else
      v10 = v4;
    sub_22ABD7870(isUniquelyReferenced_nonNull_native, v10, 1, v3);
    v3 = v11;
    v9 = *(_QWORD *)(v11 + 24) >> 1;
  }
  v12 = *(_QWORD *)(v3 + 16);
  v13 = (uint64_t *)(v9 - v12);
  v14 = sub_22ABD63E4(&v33, (uint64_t *)(v3 + 8 * v12 + 32), v9 - v12, a1, a2);
  if ((uint64_t)v14 < a1)
    goto LABEL_15;
  if ((uint64_t)v14 >= 1)
  {
    v15 = *(_QWORD *)(v3 + 16);
    v16 = __OFADD__(v15, v14);
    v17 = (char *)v14 + v15;
    if (v16)
    {
      __break(1u);
LABEL_33:
      v27 = v5 + 1;
      goto LABEL_34;
    }
    *(_QWORD *)(v3 + 16) = v17;
  }
  if (v14 != v13)
  {
LABEL_13:
    *v2 = v3;
    return;
  }
LABEL_16:
  v18 = v35;
  v19 = v33;
  if (v35 == v33)
    goto LABEL_13;
  v5 = *(_QWORD *)(v3 + 16);
  v20 = v34;
  v21 = sub_22ABD6814(v32, v35, v33, v34);
  v23 = *v22;
  ((void (*)(_QWORD *, _QWORD))v21)(v32, 0);
  if ((v18 & 0x8000000000000000) == 0 && v18 < v19)
  {
    v24 = v18 + 1;
    while (1)
    {
      v25 = *(_QWORD *)(v3 + 24);
      v26 = v25 >> 1;
      v27 = v5 + 1;
      if ((uint64_t)(v25 >> 1) < v5 + 1)
      {
        sub_22ABD7870(v25 > 1, v5 + 1, 1, v3);
        v3 = v31;
        v26 = *(_QWORD *)(v31 + 24) >> 1;
      }
      if (v5 < v26)
        break;
LABEL_31:
      *(_QWORD *)(v3 + 16) = v5;
    }
    *(_QWORD *)(v3 + 8 * v5 + 32) = v23;
    if (v24 != v19)
    {
      v28 = v24;
      while (1)
      {
        v29 = sub_22ABD6814(v32, v28, v19, v20);
        v23 = *v30;
        ((void (*)(_QWORD *, _QWORD))v29)(v32, 0);
        if (v24 < 0 || v28 >= v19)
          break;
        ++v28;
        if (v5 + 1 >= v26)
        {
          ++v5;
          v24 = v28;
          goto LABEL_31;
        }
        *(_QWORD *)(v3 + 40 + 8 * v5++) = v23;
        if (v19 == v28)
          goto LABEL_33;
      }
      __break(1u);
      goto LABEL_36;
    }
LABEL_34:
    *(_QWORD *)(v3 + 16) = v27;
    goto LABEL_13;
  }
LABEL_36:
  __break(1u);
}

void SparseMatrix.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v17;

  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_11_99();
  if (v6)
    v7 = a2;
  else
    v7 = a1;
  if (v6)
    v8 = a1;
  else
    v8 = a2;
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 >= v10)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v8 + 1 >= v10)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v11 = v9 + 32;
  v12 = *(_QWORD *)(v11 + 8 * v8);
  v13 = *(_QWORD *)(v11 + 8 * (v8 + 1));
  if (v12 == v13)
  {
LABEL_21:
    swift_getAssociatedConformanceWitness();
    sub_22ABE013C();
    sub_22ABDFF20();
    OUTLINED_FUNCTION_17_18();
    return;
  }
  if (v13 < v12)
    goto LABEL_25;
  if (v12 < 0)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v14 = *(_QWORD *)(v2 + 32);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15 < v12 || (uint64_t)v15 < v13)
    goto LABEL_27;
  if (v7 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v7 <= 0x7FFFFFFF)
  {
    sub_22ABD58E4(v7, v14, v14 + 32, v12, (2 * v13) | 1);
    if ((v17 & 1) == 0)
    {
      _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
      return;
    }
    goto LABEL_21;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_22ABD58E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int64_t v5;
  int64_t v6;
  int v7;

  v5 = a5 >> 1;
  if (a5 >> 1 == a4)
    return 0;
  if ((uint64_t)(a5 >> 1) > a4)
  {
    if (*(_DWORD *)(a3 + 4 * a4) == (_DWORD)result)
      return a4;
    v6 = a4 + 1;
    while (1)
    {
      if (v5 == v6)
        return 0;
      if (v6 >= v5)
        break;
      v7 = *(_DWORD *)(a3 + 4 * v6++);
      if (v7 == (_DWORD)result)
        return v6 - 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t SparseMatrix.subscript.setter(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(unint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v8 = a1;
  v9 = *(_QWORD *)(a4 + 16);
  v54 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = *(_QWORD *)(v12 + 24);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_11_99();
  if (v14)
    result = a3;
  else
    result = a2;
  if (!v14)
    a2 = a3;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  v16 = *(_QWORD *)(v4 + 24);
  v17 = *(_QWORD *)(v16 + 16);
  if (a2 >= v17)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (a2 + 1 >= v17)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v52 = a4;
  v55 = v4;
  v18 = v16 + 32;
  v19 = *(_QWORD *)(v18 + 8 * a2);
  v20 = *(_QWORD *)(v18 + 8 * (a2 + 1));
  if (v19 == v20)
  {
    v21 = result;
    OUTLINED_FUNCTION_13_91();
    OUTLINED_FUNCTION_6_130();
    OUTLINED_FUNCTION_4_118();
    v22 = OUTLINED_FUNCTION_10_92();
    result = OUTLINED_FUNCTION_21_25((uint64_t)v11);
    if ((v22 & 1) == 0)
    {
      v23 = *(_QWORD *)(v55 + 24);
      if (a2 < *(_QWORD *)(v23 + 16))
      {
        v24 = *(_QWORD *)(v23 + 8 * a2 + 32);
        v25 = a2;
        v26 = v21;
        v27 = v8;
        v28 = v52;
LABEL_43:
        SparseMatrix.insert(index:major:minor:value:)(v24, v25, v26, v27, v28);
        return OUTLINED_FUNCTION_21_25(v8);
      }
      goto LABEL_56;
    }
    return OUTLINED_FUNCTION_21_25(v8);
  }
  if (v20 < (uint64_t)v19)
    goto LABEL_49;
  if ((v19 & 0x8000000000000000) != 0)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v29 = *(_QWORD *)(v55 + 32);
  v30 = *(_QWORD *)(v29 + 16);
  if (v30 < v19 || (uint64_t)v30 < v20)
    goto LABEL_51;
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v49 = result;
  v50 = sub_22ABD58E4(result, v29, v29 + 32, v19, (2 * v20) | 1);
  v51 = v32;
  OUTLINED_FUNCTION_13_91();
  OUTLINED_FUNCTION_6_130();
  OUTLINED_FUNCTION_4_118();
  v33 = v8;
  v34 = OUTLINED_FUNCTION_10_92();
  v35 = v54;
  result = OUTLINED_FUNCTION_21_25((uint64_t)v11);
  if ((v51 & 1) == 0)
  {
    if ((v34 & 1) == 0)
    {
      v36 = v55;
      v37 = sub_22ABDF974();
      sub_22ABDF8E4();
      v38 = *(_QWORD *)(v36 + 40);
      v39 = v50;
      sub_22AB63820(v50, v38);
      v40 = v38
          + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))
          + *(_QWORD *)(v35 + 72) * v39;
      v41 = *(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 24);
      v8 = v33;
      v41(v40, v33, v9);
      nullsub_1(v37, v42);
      return OUTLINED_FUNCTION_21_25(v8);
    }
    SparseMatrix.remove(index:major:)(v50, a2);
    goto LABEL_25;
  }
  if ((v34 & 1) != 0)
  {
LABEL_25:
    v8 = v33;
    return OUTLINED_FUNCTION_21_25(v8);
  }
  v43 = *(_QWORD *)(v55 + 32);
  v44 = *(_QWORD *)(v43 + 16);
  if (v44 < v19 || v44 < v20)
    goto LABEL_57;
  v26 = v49;
  if (v19 < v20)
  {
    v8 = v33;
    if (*(_DWORD *)(v43 + 32 + 4 * v19) > (int)v49)
    {
LABEL_34:
      v24 = v19;
      v25 = a2;
      v26 = v49;
LABEL_42:
      v27 = v33;
      v28 = v52;
      goto LABEL_43;
    }
    if (v19 + 1 == v20)
    {
LABEL_41:
      v24 = v20;
      v25 = a2;
      goto LABEL_42;
    }
    v46 = v43 + 36;
    while ((uint64_t)(v19 + 1) < v20)
    {
      if (*(_DWORD *)(v46 + 4 * v19) > (int)v49)
      {
        ++v19;
        goto LABEL_34;
      }
      v47 = v19 + 2;
      if (__OFADD__(v19 + 1, 1))
        goto LABEL_55;
      ++v19;
      if (v47 == v20)
        goto LABEL_41;
    }
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
  __break(1u);
  return result;
}

void SparseMatrix.insert(index:major:minor:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v7 = v5;
  v10 = a1;
  v11 = *(_QWORD *)(a5 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_34();
  if (v13 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_19;
  if (v13 > 0x7FFFFFFF)
    goto LABEL_20;
  if (*(_QWORD *)(*(_QWORD *)(v5 + 32) + 16) < v10)
    goto LABEL_21;
  if (v10 < 0)
    goto LABEL_22;
  sub_22ABD6650(v10, v10, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v6, a4, v11);
  OUTLINED_FUNCTION_15_86();
  sub_22ABDF938();
  v14 = a2 + 1;
  if (__OFADD__(a2, 1))
    goto LABEL_23;
  v15 = *(_QWORD *)(v5 + 24);
  v10 = *(_QWORD *)(v15 + 16);
  if (v10 < v14)
    goto LABEL_24;
  if (v14 != v10)
  {
    if (v14 >= v10)
      goto LABEL_25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_26;
    while (a2 + 1 >= 0)
    {
      if ((unint64_t)(a2 + 1) >= *(_QWORD *)(v15 + 16))
        goto LABEL_17;
      v16 = v15 + 8 * a2;
      v17 = *(_QWORD *)(v16 + 40);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        sub_22AB5D784();
        v15 = v20;
      }
      else
      {
        *(_QWORD *)(v16 + 40) = v19;
        if (v10 - 1 == ++a2)
        {
          *(_QWORD *)(v7 + 24) = v15;
          goto LABEL_15;
        }
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_15:
  OUTLINED_FUNCTION_17_18();
}

Swift::Void __swiftcall SparseMatrix.remove(index:major:)(Swift::Int index, Swift::Int major)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;

  v5 = v3;
  v7 = index;
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](index);
  OUTLINED_FUNCTION_34();
  sub_22ABD6094(v10);
  OUTLINED_FUNCTION_15_86();
  sub_22ABDF944();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v8);
  v11 = major + 1;
  if (__OFADD__(major, 1))
    goto LABEL_15;
  v12 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v12 + 16);
  if (v7 < v11)
    goto LABEL_16;
  if (v11 != v7)
  {
    if (v11 >= v7)
      goto LABEL_17;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_18;
    while (major + 1 >= 0)
    {
      if ((unint64_t)(major + 1) >= *(_QWORD *)(v12 + 16))
        goto LABEL_13;
      v13 = v12 + 8 * major;
      v14 = *(_QWORD *)(v13 + 40);
      v15 = __OFSUB__(v14, 1);
      v16 = v14 - 1;
      if (v15)
      {
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        sub_22AB5D784();
        v12 = v17;
      }
      else
      {
        *(_QWORD *)(v13 + 40) = v16;
        if (v7 - 1 == ++major)
        {
          *(_QWORD *)(v5 + 24) = v12;
          goto LABEL_11;
        }
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_17_18();
}

void (*SparseMatrix.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  __int128 v13;

  v9 = malloc(0x70uLL);
  *a1 = v9;
  v9[8] = a4;
  v9[9] = v4;
  v9[6] = a2;
  v9[7] = a3;
  v10 = *(_QWORD *)(a4 + 16);
  v9[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[11] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[12] = malloc(v12);
  v9[13] = malloc(v12);
  v13 = v4[1];
  *(_OWORD *)v9 = *v4;
  *((_OWORD *)v9 + 1) = v13;
  *((_OWORD *)v9 + 2) = v4[2];
  SparseMatrix.subscript.getter(a2, a3);
  return sub_22ABD6030;
}

void sub_22ABD6030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  void *v4;
  void *v5;

  v3 = *(uint64_t **)a1;
  v4 = *(void **)(*(_QWORD *)a1 + 96);
  v5 = *(void **)(*(_QWORD *)a1 + 104);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_3_126();
    OUTLINED_FUNCTION_7_113();
    OUTLINED_FUNCTION_5_9();
  }
  else
  {
    OUTLINED_FUNCTION_19_70(a1, a2, a3, v3[8]);
  }
  free(v5);
  free(v4);
  OUTLINED_FUNCTION_1_115(v3);
}

void sub_22ABD6094(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_22ABD6744();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    sub_22AA37B90((char *)(v3 + 4 * a1 + 36), v4 - 1 - a1, (char *)(v3 + 4 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
}

double SparseMatrix.transposed()@<D0>(_OWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  SparseMatrix.Transpose.init(base:)((uint64_t)v1, (uint64_t)v6);
  v3 = v1[3];
  v9 = v1[4];
  v10 = v3;
  v8 = v1[5];
  sub_22AA82E0C((uint64_t)&v10);
  sub_22AA82E0C((uint64_t)&v9);
  sub_22ABD4590((uint64_t)&v8);
  v4 = v6[1];
  *a1 = v6[0];
  a1[1] = v4;
  result = *(double *)&v7;
  a1[2] = v7;
  return result;
}

uint64_t static SparseMatrix.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 == *(_QWORD *)a2
    && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    && *(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16)
    && (sub_22A99EB90(*(_QWORD **)(a1 + 24), *(_QWORD **)(a2 + 24)) & 1) != 0
    && sub_22ABD7294(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)))
  {
    return sub_22ABDF980();
  }
  else
  {
    return 0;
  }
}

double sub_22ABD6224@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;

  SparseMatrix.init(rowCount:columnCount:)(a1, a2, v6);
  v4 = v6[1];
  *a3 = v6[0];
  a3[1] = v4;
  result = *(double *)&v7;
  a3[2] = v7;
  return result;
}

double sub_22ABD6268@<D0>(_OWORD *a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v3 = v1[1];
  v8 = *v1;
  v9 = v3;
  v10 = v1[2];
  SparseMatrix.transposed()(v6);
  v4 = v6[1];
  *a1 = v6[0];
  a1[1] = v4;
  result = *(double *)&v7;
  a1[2] = v7;
  return result;
}

void (*sub_22ABD62C0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  __int128 v13;

  v9 = malloc(0x70uLL);
  *a1 = v9;
  v9[8] = v4;
  v9[9] = a4;
  v9[6] = a2;
  v9[7] = a3;
  v10 = *(_QWORD *)(a4 + 16);
  v9[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[11] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[12] = malloc(v12);
  v9[13] = malloc(v12);
  v13 = v4[1];
  *(_OWORD *)v9 = *v4;
  *((_OWORD *)v9 + 1) = v13;
  *((_OWORD *)v9 + 2) = v4[2];
  SparseMatrix.subscript.getter(a2, a3);
  return sub_22ABD6374;
}

void sub_22ABD6374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  void *v4;
  void *v5;

  v3 = *(uint64_t **)a1;
  v4 = *(void **)(*(_QWORD *)a1 + 96);
  v5 = *(void **)(*(_QWORD *)a1 + 104);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_3_126();
    OUTLINED_FUNCTION_7_113();
    OUTLINED_FUNCTION_5_9();
  }
  else
  {
    OUTLINED_FUNCTION_19_70(a1, a2, a3, v3[9]);
  }
  free(v5);
  free(v4);
  OUTLINED_FUNCTION_1_115(v3);
}

uint64_t sub_22ABD63D8(uint64_t a1, uint64_t a2)
{
  return static SparseMatrix.__derived_struct_equals(_:_:)(a1, a2);
}

uint64_t *sub_22ABD63E4(uint64_t *result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  if (!a2)
  {
    v5 = 0;
    goto LABEL_13;
  }
  if (!a3)
    goto LABEL_11;
  if (a3 < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v5 = a4;
  if (!a4)
  {
LABEL_13:
    *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (uint64_t *)v5;
  }
  if (a4 >= 1)
  {
    *a2 = a5;
    if (a3 != 1)
    {
      v6 = 1;
      while (a3 != v6)
      {
        if (a4 == v6)
        {
          v5 = a4;
          goto LABEL_13;
        }
        a2[v6++] = a5;
        if (a3 == v6)
          goto LABEL_11;
      }
      __break(1u);
      goto LABEL_16;
    }
LABEL_11:
    v5 = a3;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_22ABD6464(uint64_t a1, int64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_17;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    sub_22ABD787C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    v4 = v12;
    if (!v8)
      goto LABEL_17;
  }
  v13 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v13, a2))
    goto LABEL_23;
  sub_22ABCD3E0((char *)(v4 + 32 + 4 * a2), v13 - a2, (char *)(v4 + 32 + 4 * a1));
  v14 = *(_QWORD *)(v4 + 16);
  v15 = __OFADD__(v14, v8);
  v16 = v14 + v8;
  if (!v15)
  {
    *(_QWORD *)(v4 + 16) = v16;
LABEL_17:
    *v2 = v4;
    return;
  }
LABEL_24:
  __break(1u);
}

void sub_22ABD6550(uint64_t a1, int64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  BOOL v18;
  uint64_t v19;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_22;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    sub_22ABD7870(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    v4 = v12;
    if (!v8)
      goto LABEL_22;
  }
  v13 = *(_QWORD *)(v4 + 16);
  v14 = v13 - a2;
  if (__OFSUB__(v13, a2))
    goto LABEL_28;
  v15 = (char *)(v4 + 32 + 8 * a2);
  v16 = (char *)(v4 + 32 + 8 * a1);
  if (a1 != a2 || &v15[8 * v14] <= v16)
  {
    memmove(v16, v15, 8 * v14);
    v13 = *(_QWORD *)(v4 + 16);
  }
  v18 = __OFADD__(v13, v8);
  v19 = v13 + v8;
  if (!v18)
  {
    *(_QWORD *)(v4 + 16) = v19;
LABEL_22:
    *v2 = v4;
    return;
  }
LABEL_29:
  __break(1u);
}

void sub_22ABD6650(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v6, v9))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v6 + v9 > *(_QWORD *)(v5 + 24) >> 1)
  {
    sub_22AA36270();
    v5 = v11;
  }
  v12 = v5 + 32 + 4 * a1;
  if (!v9)
    goto LABEL_13;
  v13 = *(_QWORD *)(v5 + 16);
  if (__OFSUB__(v13, a2))
    goto LABEL_19;
  sub_22AA37B90((char *)(v5 + 32 + 4 * a2), v13 - a2, (char *)(v12 + 4));
  v14 = *(_QWORD *)(v5 + 16);
  v15 = __OFADD__(v14, v9);
  v16 = v14 + v9;
  if (!v15)
  {
    *(_QWORD *)(v5 + 16) = v16;
LABEL_13:
    *(_DWORD *)v12 = a3;
    *v3 = v5;
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_22ABD6744()
{
  sub_22AA36270();
}

char *sub_22ABD6758(char *__src, uint64_t a2, char *__dst)
{
  if (__dst != __src || &__src[8 * a2] <= __dst)
    return (char *)memmove(__dst, __src, 8 * a2);
  return __src;
}

uint64_t sub_22ABD6784(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 < 0)
  {
    __break(1u);
  }
  else if (a2)
  {
    v3 = result;
    result = sub_22ABDF074();
    v4 = 0;
    *(_QWORD *)(result + 16) = a2;
    do
    {
      v5 = result + 8 * v4++;
      *(_QWORD *)(v5 + 32) = v3;
    }
    while (a2 != v4);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

void sub_22ABD67E8()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABD67F8()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for SparseMatrix(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SparseMatrix);
}

_QWORD *sub_22ABD6814(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 < 0 || a2 >= a3)
  {
    __break(1u);
  }
  else
  {
    *result = a4;
    return nullsub_1;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_125()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_3_126()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_4_118()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_6_130()
{
  return sub_22ABE013C();
}

uint64_t OUTLINED_FUNCTION_7_113()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  return SparseMatrix.subscript.setter(v0, v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_8_110()
{
  return sub_22ABDF11C();
}

uint64_t OUTLINED_FUNCTION_9_104()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_10_92()
{
  return sub_22ABDECFC();
}

uint64_t OUTLINED_FUNCTION_13_91()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_15_86()
{
  return sub_22ABDF974();
}

uint64_t OUTLINED_FUNCTION_19_70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return SparseMatrix.subscript.setter(v5, *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), a4);
}

void sub_22ABD692C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LowerStrictlyTriangularMatrix.indexed()();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
}

void LowerStrictlyTriangularMatrix.indexed()()
{
  OUTLINED_FUNCTION_0_114();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_4_111();
  OUTLINED_FUNCTION_21();
}

void LowerStrictlyTriangularMatrix.IndexedSequence.base.getter()
{
  OUTLINED_FUNCTION_0_114();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_4_111();
  OUTLINED_FUNCTION_21();
}

uint64_t LowerStrictlyTriangularMatrix.IndexedSequence.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  a5[5] = 0;
  a5[6] = 0;
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  a5[4] = 1;
  swift_retain();
  return sub_22ABDEAEC();
}

uint64_t LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.init(base:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  a5[5] = 0;
  a5[6] = 0;
  a5[4] = 1;
  return result;
}

uint64_t sub_22ABD6A04@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  LowerStrictlyTriangularMatrix.IndexedSequence.makeIterator()(*v1, v1[1], v1[2], v1[3], a1);
  swift_bridgeObjectRelease();
  return swift_release();
}

void LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.base.getter()
{
  swift_retain();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_21();
}

uint64_t LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.row.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.row.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.row.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.column.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.column.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.column.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.flatIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.flatIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.flatIndex.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LowerStrictlyTriangularMatrix.IndexedSequence.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t TupleTypeMetadata3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a1 + 16);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata3);
  v7 = (char *)&v23 - v6;
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2[5];
  if (v12 >= v2[1])
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, TupleTypeMetadata3);
  v13 = v2[4];
  v14 = *v2;
  if (v13 >= *v2)
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, TupleTypeMetadata3);
  v24 = (_QWORD *)a2;
  v15 = v2[6];
  v26 = v13;
  swift_retain();
  v25 = v15;
  _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
  swift_release();
  v16 = &v7[*(int *)(TupleTypeMetadata3 + 64)];
  v17 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
  result = v17(v16, v11, v4);
  v19 = v26;
  v20 = v26 + 1;
  v2[4] = v26 + 1;
  if (v20 != v14)
    goto LABEL_6;
  v2[5] = v12 + 1;
  if (!__OFADD__(v12, 2))
  {
    v2[4] = v12 + 2;
LABEL_6:
    if (!__OFADD__(v25, 1))
    {
      v2[6] = v25 + 1;
      v21 = (uint64_t)v24;
      v22 = (char *)v24 + *(int *)(TupleTypeMetadata3 + 64);
      *v24 = v19;
      *(_QWORD *)(v21 + 8) = v12;
      v17(v22, v16, v4);
      return __swift_storeEnumTagSinglePayload(v21, 0, 1, TupleTypeMetadata3);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_22ABD6CB4()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for LowerStrictlyTriangularMatrix.IndexedSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LowerStrictlyTriangularMatrix.IndexedSequence);
}

uint64_t type metadata accessor for LowerStrictlyTriangularMatrix.IndexedSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LowerStrictlyTriangularMatrix.IndexedSequence.Iterator);
}

uint64_t UpperStrictlyTriangularMatrix.unordered.getter()
{
  uint64_t v0;

  v0 = sub_22ABDF974();
  swift_retain();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE2A48], v0);
  return sub_22ABDF11C();
}

uint64_t UpperStrictlyTriangularMatrix.init(rowCount:columnCount:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_4_4();
  v26 = v0;
  v27 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v10);
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  v11 = v3;
  sub_22ABDFF20();
  static UpperStrictlyTriangularMatrix.dataSize(_:_:)(v7, v5);
  v12 = sub_22ABDF95C();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v11 = MEMORY[0x24BEE4AF8];
    if (!v7)
    {
LABEL_8:
      v9 = (char *)sub_22ABDF920();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_9;
      goto LABEL_14;
    }
    v22[1] = v12;
    v25 = MEMORY[0x24BEE4AF8];
    sub_22ABD7BB0(0, v7, 0);
    v13 = 0;
    v9 = 0;
    v11 = v25;
    while (v7 != v13)
    {
      v23 = v13;
      sub_22ABD73EC(&v23, v5, &v24);
      v14 = v24;
      v25 = v11;
      v16 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_22ABD7BB0(v15 > 1, v16 + 1, 1);
        v11 = v25;
      }
      ++v13;
      *(_QWORD *)(v11 + 16) = v16 + 1;
      *(_QWORD *)(v11 + 8 * v16 + 32) = v14;
      if (v7 == v13)
        goto LABEL_8;
    }
    __break(1u);
  }
  __break(1u);
LABEL_14:
  OUTLINED_FUNCTION_15_87(0, *(_QWORD *)(v11 + 16) + 1);
  v11 = v20;
LABEL_9:
  v18 = *(_QWORD *)(v11 + 16);
  v17 = *(_QWORD *)(v11 + 24);
  if (v18 >= v17 >> 1)
  {
    OUTLINED_FUNCTION_15_87(v17 > 1, v18 + 1);
    v11 = v21;
  }
  *(_QWORD *)(v11 + 16) = v18 + 1;
  *(_QWORD *)(v11 + 8 * v18 + 32) = v9;
  return v7;
}

uint64_t UpperStrictlyTriangularMatrix.subscript.getter()
{
  Swift::Int v0;
  Swift::Int v1;
  Swift::Int v2;
  Swift::Int v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v4);
  UpperStrictlyTriangularMatrix.checkBounds(row:column:)(v3, v1);
  if (v3 >= v1)
  {
    swift_getAssociatedConformanceWitness();
    sub_22ABE013C();
    return sub_22ABDFF20();
  }
  else
  {
    UpperStrictlyTriangularMatrix.dataIndex(_:_:)(v3, v1);
    return _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
  }
}

uint64_t UpperStrictlyTriangularMatrix.subscript.setter(uint64_t a1, Swift::Int row, Swift::Int column, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v5 = v4;
  v9 = *(_QWORD *)(a4 + 16);
  UpperStrictlyTriangularMatrix.checkBounds(row:column:)(row, column);
  if (row >= column)
  {
    result = OUTLINED_FUNCTION_13_92();
    __break(1u);
  }
  else
  {
    v10 = UpperStrictlyTriangularMatrix.dataIndex(_:_:)(row, column);
    sub_22ABDF974();
    sub_22ABDF8E4();
    v11 = *(_QWORD *)(v4 + 16);
    sub_22AB63820(v10, *(_QWORD *)(v5 + 16));
    v12 = *(_QWORD *)(v9 - 8);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 24))(v11+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v10, a1, v9);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a1, v9);
  }
  return result;
}

uint64_t static UpperStrictlyTriangularMatrix.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  BOOL v8;

  v8 = a1 == a5 && a2 == a6;
  if (v8 && (sub_22ABDF980() & 1) != 0)
    return sub_22A99EB90(a4, a8);
  else
    return 0;
}

BOOL sub_22ABD7294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  int *v5;
  int *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (int *)(a1 + 36);
  v6 = (int *)(a2 + 36);
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t UpperStrictlyTriangularMatrix.columnCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t UpperStrictlyTriangularMatrix.storage.getter()
{
  return swift_retain();
}

uint64_t UpperStrictlyTriangularMatrix.storage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*UpperStrictlyTriangularMatrix.storage.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UpperStrictlyTriangularMatrix.rowStartIndices.getter()
{
  return sub_22ABDEAEC();
}

uint64_t UpperStrictlyTriangularMatrix.rowStartIndices.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*UpperStrictlyTriangularMatrix.rowStartIndices.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t static UpperStrictlyTriangularMatrix.dataSize(_:_:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2 * result;
  if ((unsigned __int128)(v2 * (__int128)result) >> 64 != (v2 * result) >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = result - 1;
  if (__OFSUB__(result, 1))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((unsigned __int128)(result * (__int128)v4) >> 64 != (result * v4) >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = result * v4 / 2;
  result = v3 - v5;
  if (__OFSUB__(v3, v5))
LABEL_11:
    __break(1u);
  return result;
}

uint64_t sub_22ABD73EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  result = static UpperStrictlyTriangularMatrix.dataSize(_:_:)(*a1, a2);
  if (__OFSUB__(result, v4))
    __break(1u);
  else
    *a3 = result - v4;
  return result;
}

Swift::Void __swiftcall UpperStrictlyTriangularMatrix.checkBounds(row:column:)(Swift::Int row, Swift::Int column)
{
  Swift::Int v2;
  Swift::Int v3;

  if (row < 0 || row >= v2 || column < 0 || column >= v3)
  {
    OUTLINED_FUNCTION_13_92();
    __break(1u);
  }
}

Swift::Int __swiftcall UpperStrictlyTriangularMatrix.dataIndex(_:_:)(Swift::Int result, Swift::Int a2)
{
  uint64_t v2;
  Swift::Int v3;
  uint64_t v4;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v2 + 16) <= (unint64_t)result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v3 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = *(_QWORD *)(v2 + 8 * result + 32);
  result = v4 + v3;
  if (__OFADD__(v4, v3))
LABEL_9:
    __break(1u);
  return result;
}

void (*UpperStrictlyTriangularMatrix.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  v10 = *(_QWORD *)(a4 + 16);
  v9[4] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v9[7] = malloc(v12);
  UpperStrictlyTriangularMatrix.subscript.getter();
  return sub_22ABD75DC;
}

void sub_22ABD75DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  void *v5;

  OUTLINED_FUNCTION_4_4();
  v3 = *(uint64_t **)v0;
  v4 = *(void **)(*(_QWORD *)v0 + 48);
  v5 = *(void **)(*(_QWORD *)v0 + 56);
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_126();
    OUTLINED_FUNCTION_3_127();
    OUTLINED_FUNCTION_5_9();
  }
  else
  {
    OUTLINED_FUNCTION_10_93(v0, v1, v2, v3[2]);
  }
  free(v5);
  free(v4);
  OUTLINED_FUNCTION_1_115(v3);
}

uint64_t UpperStrictlyTriangularMatrix.transposed()()
{
  uint64_t v0;

  v0 = LowerStrictlyTriangularMatrix.init(base:)();
  swift_retain();
  sub_22ABDEAEC();
  return v0;
}

uint64_t sub_22ABD769C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = UpperStrictlyTriangularMatrix.init(rowCount:columnCount:)();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_22ABD76CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = UpperStrictlyTriangularMatrix.transposed()();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_22ABD7704()
{
  return UpperStrictlyTriangularMatrix.subscript.getter();
}

void (*sub_22ABD771C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = v4;
  v9[3] = a4;
  *v9 = a2;
  v9[1] = a3;
  v10 = *(_QWORD *)(a4 + 16);
  v9[4] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v9[7] = malloc(v12);
  UpperStrictlyTriangularMatrix.subscript.getter();
  return sub_22ABD77D0;
}

void sub_22ABD77D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  void *v5;

  OUTLINED_FUNCTION_4_4();
  v3 = *(uint64_t **)v0;
  v4 = *(void **)(*(_QWORD *)v0 + 48);
  v5 = *(void **)(*(_QWORD *)v0 + 56);
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_126();
    OUTLINED_FUNCTION_3_127();
    OUTLINED_FUNCTION_5_9();
  }
  else
  {
    OUTLINED_FUNCTION_10_93(v0, v1, v2, v3[3]);
  }
  free(v5);
  free(v4);
  OUTLINED_FUNCTION_1_115(v3);
}

uint64_t sub_22ABD782C(uint64_t a1, uint64_t a2)
{
  return static UpperStrictlyTriangularMatrix.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD **)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD **)(a2 + 24)) & 1;
}

void sub_22ABD7870(char a1, int64_t a2, char a3, uint64_t a4)
{
  sub_22ABD7888(a1, a2, a3, a4);
}

void sub_22ABD787C(char a1, int64_t a2, char a3, uint64_t a4)
{
  sub_22ABD7960(a1, a2, a3, a4);
}

void sub_22ABD7888(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v10 = OUTLINED_FUNCTION_14_30();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_16_87();
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_23();
  }
  else
  {
    sub_22ABD7A38(0, v8, (char *)(v10 + 32), a4);
  }
  OUTLINED_FUNCTION_38();
}

void sub_22ABD7960(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B101C0);
    v10 = OUTLINED_FUNCTION_14_30();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_16_87();
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_23();
  }
  else
  {
    sub_22ABD7AF4(0, v8, (char *)(v10 + 32), a4);
  }
  OUTLINED_FUNCTION_38();
}

void sub_22ABD7A38(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  char *v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    if (v5 >= &a3[8 * v4] || &v5[8 * v4] <= a3)
    {
      OUTLINED_FUNCTION_11_100(a3, v5, 8 * v4);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_33_13();
      return;
    }
  }
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_3_41();
  __break(1u);
}

void sub_22ABD7AF4(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  char *v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    if (v5 >= &a3[4 * v4] || &v5[4 * v4] <= a3)
    {
      OUTLINED_FUNCTION_11_100(a3, v5, 4 * v4);
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_33_13();
      return;
    }
  }
  OUTLINED_FUNCTION_9_11();
  OUTLINED_FUNCTION_3_41();
  __break(1u);
}

void sub_22ABD7BB0(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_22ABCD4AC(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_22ABD7BCC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22ABD7BDC()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for UpperStrictlyTriangularMatrix(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UpperStrictlyTriangularMatrix);
}

uint64_t OUTLINED_FUNCTION_2_126()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_3_127()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int v2;
  Swift::Int v3;

  return UpperStrictlyTriangularMatrix.subscript.setter(v0, v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_10_93(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::Int *v4;
  uint64_t v5;

  return UpperStrictlyTriangularMatrix.subscript.setter(v5, *v4, v4[1], a4);
}

void *OUTLINED_FUNCTION_11_100@<X0>(void *__dst@<X2>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memcpy(__dst, a2, a3);
}

uint64_t OUTLINED_FUNCTION_13_92()
{
  return sub_22ABDFADC();
}

void OUTLINED_FUNCTION_15_87(char a1, int64_t a2)
{
  uint64_t v2;

  sub_22ABD7888(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_16_87()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

__n128 SparseMatrix.Transpose.init(base:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 16) & 1;
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = v3;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 40) = v2;
  return result;
}

uint64_t SparseMatrix.Transpose.base.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_0_120(a1);
  sub_22ABDEAEC();
  return OUTLINED_FUNCTION_1_114();
}

__n128 SparseMatrix.Transpose.base.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __n128 result;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[5];
  v6 = a1[2] & 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v4;
  *(_BYTE *)(v1 + 16) = v6;
  result = *(__n128 *)(a1 + 3);
  *(__n128 *)(v1 + 24) = result;
  *(_QWORD *)(v1 + 40) = v5;
  return result;
}

uint64_t (*SparseMatrix.Transpose.base.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SparseMatrix.Transpose.rowCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SparseMatrix.Transpose.columnCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SparseMatrix.Transpose.count.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_7_114();
  type metadata accessor for SparseMatrix(0, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v1);
  return SparseMatrix.count.getter();
}

__n128 SparseMatrix.Transpose.init(rowCount:columnCount:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t v5;
  __n128 result;
  __int128 v7;
  char v8;
  __n128 v9;
  uint64_t v10;

  SparseMatrix.init(rowCount:columnCount:)(a2, a1, &v7);
  v4 = v8;
  v5 = v10;
  result = v9;
  *(_OWORD *)a3 = v7;
  *(_BYTE *)(a3 + 16) = v4;
  *(__n128 *)(a3 + 24) = result;
  *(_QWORD *)(a3 + 40) = v5;
  return result;
}

void SparseMatrix.Transpose.subscript.read(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_6_131();
  v6 = malloc(0x48uLL);
  *v4 = v6;
  v7 = *(_QWORD *)(a4 + 16);
  v6[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[7] = v8;
  v9 = malloc(*(_QWORD *)(v8 + 64));
  v6[8] = v9;
  OUTLINED_FUNCTION_1_116((uint64_t)v9, v10, v11, v12);
  OUTLINED_FUNCTION_5_109();
  OUTLINED_FUNCTION_17_18();
}

void sub_22ABD7E38(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = *(void **)a1;
  v2 = *(void **)(*(_QWORD *)a1 + 64);
  (*(void (**)(void *, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 56) + 8))(v2, *(_QWORD *)(*(_QWORD *)a1 + 48));
  free(v2);
  OUTLINED_FUNCTION_0_2(v1);
}

void SparseMatrix.Transpose.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_6_131();
  v9 = malloc(0x70uLL);
  *v7 = v9;
  v9[6] = v6;
  v9[7] = v5;
  v10 = *(_QWORD *)(a4 + 16);
  v9[8] = v4;
  v9[9] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[10] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[11] = malloc(v12);
  v13 = malloc(v12);
  v9[12] = v13;
  v9[13] = OUTLINED_FUNCTION_1_116((uint64_t)v13, v14, v15, v16);
  OUTLINED_FUNCTION_5_109();
  OUTLINED_FUNCTION_17_18();
}

void sub_22ABD7EF8(unint64_t **a1, char a2)
{
  unint64_t *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v2 = *a1;
  v3 = (void *)(*a1)[12];
  v4 = (*a1)[13];
  v5 = (void *)(*a1)[11];
  if ((a2 & 1) != 0)
  {
    v6 = v2[9];
    v7 = v2[10];
    v8 = v2[7];
    v9 = v2[6];
    (*(void (**)(unint64_t, void *, unint64_t))(v7 + 16))((*a1)[11], v3, v6);
    SparseMatrix.subscript.setter((uint64_t)v5, v8, v9, v4);
    (*(void (**)(void *, unint64_t))(v7 + 8))(v3, v6);
  }
  else
  {
    SparseMatrix.subscript.setter((*a1)[12], v2[7], v2[6], v4);
  }
  free(v3);
  free(v5);
  free(v2);
}

void SparseMatrix.Transpose.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_7_114();
  type metadata accessor for SparseMatrix(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v5);
  SparseMatrix.subscript.getter(a2, a1);
}

uint64_t SparseMatrix.Transpose.subscript.setter()
{
  _OWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[3];

  OUTLINED_FUNCTION_6_131();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0[1];
  v14[0] = *v0;
  v14[1] = v10;
  v14[2] = v0[2];
  v12 = type metadata accessor for SparseMatrix(0, v5, *(_QWORD *)(v11 + 24), v11);
  SparseMatrix.subscript.getter(v1, v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 24))(v9, v3, v5);
  SparseMatrix.subscript.setter((uint64_t)v9, v1, v2, v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
}

uint64_t SparseMatrix.Transpose.transposed()@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_0_120(a1);
  sub_22ABDEAEC();
  return OUTLINED_FUNCTION_1_114();
}

uint64_t static SparseMatrix.Transpose.__derived_struct_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  _OWORD v6[3];

  v2 = a1[1];
  v6[0] = *a1;
  v6[1] = v2;
  v6[2] = a1[2];
  v3 = a2[1];
  v5[0] = *a2;
  v5[1] = v3;
  v5[2] = a2[2];
  return static SparseMatrix.__derived_struct_equals(_:_:)((uint64_t)v6, (uint64_t)v5) & 1;
}

void sub_22ABD816C()
{
  JUMPOUT(0x22E2E4D80);
}

double sub_22ABD8184@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;

  SparseMatrix.Transpose.init(rowCount:columnCount:)(a1, a2, (uint64_t)v6);
  v4 = v6[1];
  *a3 = v6[0];
  a3[1] = v4;
  result = *(double *)&v7;
  a3[2] = v7;
  return result;
}

uint64_t sub_22ABD81CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t (*v6)(_BYTE *, _QWORD);
  uint64_t (*v7)(_BYTE *, _QWORD);
  _BYTE v9[32];

  SparseMatrix.Transpose.subscript.read((uint64_t)v9, a1, a2, a3);
  v7 = v6;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(a4);
  return v7(v9, 0);
}

uint64_t sub_22ABD8234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(_BYTE *, _QWORD);
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[32];

  SparseMatrix.Transpose.subscript.modify((uint64_t)v12, a2, a3, a4);
  v7 = v6;
  v8 = *(_QWORD *)(a4 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v10, a1, v8);
  v7(v12, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

void (*sub_22ABD82A8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD *a1)
{
  _QWORD *v8;
  uint64_t v9;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  SparseMatrix.Transpose.subscript.modify((uint64_t)v8, a2, a3, a4);
  v8[4] = v9;
  return sub_22A9B858C;
}

uint64_t sub_22ABD830C(_OWORD *a1, _OWORD *a2)
{
  return static SparseMatrix.Transpose.__derived_struct_equals(_:_:)(a1, a2);
}

uint64_t type metadata accessor for SparseMatrix.Transpose(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SparseMatrix.Transpose);
}

void OUTLINED_FUNCTION_5_109()
{
  uint64_t v0;
  uint64_t v1;

  SparseMatrix.subscript.getter(v0, v1);
}

__n128 OUTLINED_FUNCTION_7_114()
{
  __n128 *v0;

  return v0[2];
}

void *DenseMatrix.subscript.read()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  void *result;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = *(_QWORD *)(v12 - 8);
  *v10 = v12;
  v10[1] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v10[2] = malloc(v14);
  result = malloc(v14);
  v11[3] = result;
  if ((v1 & 1) == 0)
  {
    v16 = v9 * v3;
    if ((unsigned __int128)(v9 * (__int128)v3) >> 64 == (v9 * v3) >> 63)
    {
      result = (void *)(v16 + v7);
      if (!__OFADD__(v16, v7))
      {
        v17 = sub_22A9F2B64;
LABEL_8:
        _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
        return v17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  v18 = v7 * v5;
  if ((unsigned __int128)(v7 * (__int128)v5) >> 64 != (v7 * v5) >> 63)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  result = (void *)(v18 + v9);
  if (!__OFADD__(v18, v9))
  {
    v17 = sub_22A9F2B98;
    goto LABEL_8;
  }
LABEL_12:
  __break(1u);
  return result;
}

void static DenseMatrix.* infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_14_85();
  OUTLINED_FUNCTION_44_40();
  OUTLINED_FUNCTION_30_57(v1, v2, v3, v4, v5, v6, v7, v8, a1);
  OUTLINED_FUNCTION_21_1();
}

void DenseMatrix.init(rowCount:columnCount:layout:repeating:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v5, v11, v12);
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 == (a1 * a2) >> 63)
  {
    sub_22ABDF95C();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a4, a5);
    OUTLINED_FUNCTION_11_85();
    OUTLINED_FUNCTION_17_18();
  }
  else
  {
    __break(1u);
  }
}

uint64_t DenseMatrix.withUnsafeMatrixPointer<A>(_:)()
{
  return sub_22ABDF8F0();
}

_QWORD *DenseMatrix.withUnsafeMutableMatrixPointer<A>(_:)(uint64_t (*a1)(_BYTE *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD v8[2];

  v4 = (uint64_t *)(v1 + 8);
  if (*(_BYTE *)(v1 + 16))
    v4 = (uint64_t *)v1;
  v5 = *v4;
  OUTLINED_FUNCTION_57_21();
  sub_22ABDF8E4();
  OUTLINED_FUNCTION_32_48();
  v8[0] = v3;
  v8[1] = v2;
  sub_22ABDA138((uint64_t)v8, v1, v5, a1);
  return OUTLINED_FUNCTION_22_68(v8);
}

uint64_t DenseMatrix.count.getter(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = a1 * a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 != result >> 63)
    __break(1u);
  return result;
}

uint64_t static DenseMatrix.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v7;

  v7 = a1 == a5 && a2 == a6;
  if (!v7 || ((a3 ^ a7) & 1) != 0)
    return 0;
  else
    return sub_22ABDF980();
}

void static DenseMatrix.+ infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v0 = OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_21_75(v0, v1, v2, v3, v4, v5, v6, v7, v16);
  static DenseMatrix.+= infix(_:_:)();
  OUTLINED_FUNCTION_30_57(v8, v9, v10, v11, v12, v13, v14, v15, v17);
  OUTLINED_FUNCTION_32_4();
}

void static DenseMatrix.- infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v0 = OUTLINED_FUNCTION_12_91();
  OUTLINED_FUNCTION_21_75(v0, v1, v2, v3, v4, v5, v6, v7, v16);
  static DenseMatrix.-= infix(_:_:)();
  OUTLINED_FUNCTION_30_57(v8, v9, v10, v11, v12, v13, v14, v15, v17);
  OUTLINED_FUNCTION_32_4();
}

void static DenseMatrix.*= infix(_:_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;

  OUTLINED_FUNCTION_4_4();
  v1 = v0[1];
  v2 = *v0 * v1;
  if ((unsigned __int128)(*v0 * (__int128)v1) >> 64 != v2 >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (v2)
  {
    v3 = sub_22ABDF974();
    sub_22ABDF8E4();
    nullsub_1(v3, v4);
    sub_22ABDF8E4();
    nullsub_1(v3, v5);
    for (i = 0; i != v2; ++i)
    {
      sub_22ABDF8E4();
      OUTLINED_FUNCTION_16_88();
      OUTLINED_FUNCTION_56_25();
      sub_22ABDF314();
      nullsub_1(v3, v7);
    }
  }
  OUTLINED_FUNCTION_3();
}

void static DenseMatrix.* infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_retain();
  OUTLINED_FUNCTION_44_40();
  OUTLINED_FUNCTION_30_57(v2, v3, v4, v5, v6, v7, v8, v9, a2);
  OUTLINED_FUNCTION_21_1();
}

void static DenseMatrix./ infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v21 = v2;
  v22 = v3;
  v5 = v4;
  v7 = v6;
  v20 = v8 & 1;
  OUTLINED_FUNCTION_70_21();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v9);
  v10 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_23_8();
  v14 = (char *)(v12 - v13);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v19 - v16;
  v23 = v7;
  v24 = v21;
  v25 = v20;
  v26 = v5;
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_22ABE0130();
  sub_22ABDFF20();
  sub_22ABDEB88();
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v14, v1);
  static DenseMatrix.*= infix(_:_:)();
  v18(v17, v1);
  OUTLINED_FUNCTION_3();
}

void static DenseMatrix.* infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  uint8_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(void (**)(uint64_t), _QWORD);
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t AssociatedTypeWitness;
  uint64_t v95;
  uint64_t v96;
  int v97;
  int v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110[4])(uint64_t);
  uint64_t v111[2];
  char v112;
  uint64_t v113;

  OUTLINED_FUNCTION_4_4();
  v22 = v21;
  LODWORD(v109) = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  LODWORD(v108) = v30;
  v32 = v31;
  v104 = v33;
  v34 = *(_QWORD *)(a21 - 8);
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_23_8();
  v37 = (char *)(v35 - v36);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v90 - v39;
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_50_33(v42, v43, v44, v45, v46, v47, v48, v49, v90);
  MEMORY[0x24BDAC7A8](v50);
  v102 = (char *)&v90 - v51;
  v96 = v52;
  v91 = *(char **)(*(_QWORD *)(*(_QWORD *)(v52 + 16) + 16) + 8);
  v95 = *((_QWORD *)v91 + 2);
  v54 = v53;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v55);
  v93 = (char *)&v90 - v56;
  if (v32 != v27)
    goto LABEL_26;
  v57 = v32;
  v100 = v29;
  if (qword_255B1BC88 != -1)
    goto LABEL_23;
  while (1)
  {
    v58 = OUTLINED_FUNCTION_38_29();
    __swift_project_value_buffer(v58, (uint64_t)static Logger.linearAlgebra);
    v59 = OUTLINED_FUNCTION_34_29();
    v60 = sub_22ABDF4C4();
    v61 = os_log_type_enabled(v59, v60);
    v101 = v22;
    v99 = v37;
    v92 = v40;
    if (v61)
    {
      v62 = (uint8_t *)OUTLINED_FUNCTION_4_12();
      v111[0] = OUTLINED_FUNCTION_4_12();
      *(_DWORD *)v62 = 136315138;
      v107 = v62 + 4;
      v63 = OUTLINED_FUNCTION_11_54();
      v110[0] = (void (*)(uint64_t))sub_22AAB5318(v63, v64, v111);
      sub_22ABDF65C();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_62_19(&dword_22A999000, v59, v60, "Using a slow implementation of matrix multiplication for %s. Prefer using Float or Double.", v62);
      OUTLINED_FUNCTION_61_24();
      OUTLINED_FUNCTION_2_2();
    }

    v22 = (uint64_t)v102;
    v65 = v103;
    v66 = OUTLINED_FUNCTION_79_20();
    v37 = v93;
    v90 = v66;
    sub_22ABE013C();
    sub_22ABDFF20();
    v67 = OUTLINED_FUNCTION_58();
    v68 = v104;
    DenseMatrix.init(rowCount:columnCount:layout:repeating:)(v104, v25, v67 & 1, v22, v54);
    v111[0] = v69;
    v111[1] = v70;
    v112 = v71 & 1;
    v113 = v72;
    if (v68 < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      OUTLINED_FUNCTION_31_10();
      v90 = 560;
      OUTLINED_FUNCTION_193_0();
      OUTLINED_FUNCTION_156_3();
      OUTLINED_FUNCTION_8_111();
      OUTLINED_FUNCTION_40_10();
    }
    if (!v104)
      break;
    if (v25 < 0)
      goto LABEL_25;
    v73 = 0;
    v97 = v108 & 1;
    v98 = v109 & 1;
    v105 = v34;
    v106 = v25;
    v40 = v91;
    while (v73 != v104)
    {
      if (v25)
      {
        if (v57 < 0)
          goto LABEL_22;
        v37 = 0;
        v107 = (uint8_t *)v73;
        while (v37 != (char *)v25)
        {
          sub_22ABE013C();
          sub_22ABDFF20();
          v75 = (uint64_t)v92;
          v108 = (uint64_t)v37;
          v76 = v65;
          if (v57)
          {
            v77 = 0;
            do
            {
              v109 = v77 + 1;
              v78 = (void (*)(void (**)(uint64_t), _QWORD))DenseMatrix.subscript.read();
              OUTLINED_FUNCTION_75_19((uint64_t)v78, v79);
              v78(v110, 0);
              v80 = DenseMatrix.subscript.read();
              v81 = v75;
              v82 = (uint64_t)v99;
              OUTLINED_FUNCTION_75_19((uint64_t)v80, v83);
              v84 = v57;
              v76 = v103;
              OUTLINED_FUNCTION_9_23((uint64_t)v110);
              v85 = (uint64_t)v102;
              sub_22ABDF308();
              v86 = v82;
              v75 = v81;
              OUTLINED_FUNCTION_8_25(v86);
              OUTLINED_FUNCTION_8_25(v81);
              sub_22ABDFB00();
              OUTLINED_FUNCTION_8_25(v85);
              v77 = v109;
              v57 = v84;
            }
            while (v84 != v109);
          }
          v87 = v108;
          v22 = v108 + 1;
          type metadata accessor for DenseMatrix(0, v54, v96, v74);
          v88 = (uint64_t)v107;
          DenseMatrix.subscript.modify(v110, (uint64_t)v107, v87);
          v34 = v105;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 24))(v89, v76, v54);
          OUTLINED_FUNCTION_9_23((uint64_t)v110);
          (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v76, v54);
          v37 = (char *)v22;
          v25 = v106;
          v73 = v88;
          v65 = v76;
          if (v22 == v106)
            goto LABEL_18;
        }
        __break(1u);
        break;
      }
LABEL_18:
      if (++v73 == v104)
        goto LABEL_19;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_once();
  }
LABEL_19:
  OUTLINED_FUNCTION_3();
}

uint64_t DenseMatrix.transposed()()
{
  uint64_t v0;
  uint64_t v1;

  DenseMatrix.Transpose.init(base:)();
  v1 = v0;
  swift_retain();
  return v1;
}

void static DenseMatrix<>.* infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_76_22(a1, a2, a3, a4, a5, a6);
  if (v6)
  {
    OUTLINED_FUNCTION_25_55();
    sub_22ABCD3E4(v7, 0.0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22AB88468();
    OUTLINED_FUNCTION_9_105();
    UnsafeMutableMatrixPointer<A>.addProductFloat(_:transposed:_:transposed:scaledBy:)(v8, 0, v9, 0);
    OUTLINED_FUNCTION_63_26();
    OUTLINED_FUNCTION_2_121();
  }
  else
  {
    __break(1u);
  }
}

{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_76_22(a1, a2, a3, a4, a5, a6);
  if (v6)
  {
    OUTLINED_FUNCTION_25_55();
    sub_22ABCD448(v7, 0.0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22AB88498();
    OUTLINED_FUNCTION_9_105();
    UnsafeMutableMatrixPointer<A>.addProductDouble(_:transposed:_:transposed:scaledBy:)(v8, 0, v9, 0);
    OUTLINED_FUNCTION_63_26();
    OUTLINED_FUNCTION_2_121();
  }
  else
  {
    __break(1u);
  }
}

uint64_t DenseMatrix.columnCount.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t DenseMatrix.layout.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t DenseMatrix.leadingDimension.getter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return a2;
  return result;
}

uint64_t (*DenseMatrix.storage.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void DenseMatrix.init<A>(rowCount:columnCount:layout:scalars:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(v0 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v12, v9);
  sub_22ABDF11C();
  swift_retain();
  v13 = sub_22ABDF920();
  if ((unsigned __int128)(v7 * (__int128)v5) >> 64 != (v7 * v5) >> 63)
  {
    __break(1u);
LABEL_5:
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    v16 = v7 * v5;
    OUTLINED_FUNCTION_49_28();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_11_85();
    v14 = sub_22ABDF920();
    swift_release();
    v16 = v14;
    OUTLINED_FUNCTION_49_28();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_31_10();
    v15 = 70;
    OUTLINED_FUNCTION_156_3();
    sub_22ABDFADC();
    OUTLINED_FUNCTION_40_10();
  }
  if (v13 != v7 * v5)
    goto LABEL_5;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v1);
  swift_release();
  OUTLINED_FUNCTION_3();
}

uint64_t DenseMatrix.init(rowCount:columnCount:layout:initializingWith:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1 * a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 == result >> 63)
  {
    MEMORY[0x24BDAC7A8](result);
    sub_22A9F2FBC();
    if (v2)
      return v5;
    else
      return a1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t DenseMatrix.subscript.getter@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  void *v4;
  _BYTE v6[32];

  v4 = DenseMatrix.subscript.read();
  (*(void (**)(uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2);
  return ((uint64_t (*)(_BYTE *, _QWORD))v4)(v6, 0);
}

uint64_t DenseMatrix.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  void (*v10[4])(uint64_t);

  DenseMatrix.subscript.modify(v10, a2, a3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 24))(v6, a1, *(_QWORD *)(a4 + 16));
  OUTLINED_FUNCTION_9_23((uint64_t)v10);
  v7 = OUTLINED_FUNCTION_11_85();
  return v8(v7);
}

Swift::Void __swiftcall DenseMatrix.transpose()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *v0;
  if (*v0 == v0[1])
  {
    if (v1 < 0)
    {
LABEL_21:
      __break(1u);
      return;
    }
    if (v1)
    {
      v2 = 0;
      v3 = MEMORY[0x24BEE2A40];
LABEL_5:
      if (v2 == v1)
        goto LABEL_19;
      if (v2 + 1 != v1)
      {
        if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
        {
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
        v4 = v2 + 1;
        while (!__OFADD__(v2 * v1, v4))
        {
          if ((unsigned __int128)(v4 * (__int128)v1) >> 64 != (v4 * v1) >> 63)
            goto LABEL_17;
          if (__OFADD__(v4 * v1, v2))
            goto LABEL_18;
          ++v4;
          v5 = OUTLINED_FUNCTION_33_59();
          MEMORY[0x22E2E4D80](v3, v5);
          sub_22ABDEC84();
          if (v1 == v4)
          {
            ++v2;
            goto LABEL_5;
          }
        }
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
  }
  else
  {
    DenseMatrix._transposed()();
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;
    swift_release();
    *v0 = v7;
    v0[1] = v9;
    *((_BYTE *)v0 + 16) = v11 & 1;
    v0[3] = v13;
  }
}

void DenseMatrix._transposed()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  void (*v13)(uint64_t);
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24[6])(uint64_t);
  char v25;
  uint64_t v26;

  OUTLINED_FUNCTION_4_4();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v21 = v7;
  v9 = v8 & 1;
  v10 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_34();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v11);
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  sub_22ABDFF20();
  DenseMatrix.init(rowCount:columnCount:layout:repeating:)(v6, v21, v9, v0, v4);
  v24[4] = v12;
  v24[5] = v13;
  v25 = v14 & 1;
  v26 = v15;
  if (v21 < 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!v21)
  {
LABEL_10:
    OUTLINED_FUNCTION_3();
    return;
  }
  if ((v6 & 0x8000000000000000) == 0)
  {
    v22 = v6;
    v16 = 0;
    v23 = v10;
    while (v16 != v21)
    {
      if (v6)
      {
        v17 = 0;
        do
        {
          v18 = v16;
          DenseMatrix.subscript.read();
          (*(void (**)(uint64_t))(v23 + 16))(v0);
          OUTLINED_FUNCTION_9_23((uint64_t)v24);
          type metadata accessor for DenseMatrix(0, v4, v2, v19);
          DenseMatrix.subscript.modify(v24, v17, v18);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 40))(v20, v0, v4);
          OUTLINED_FUNCTION_9_23((uint64_t)v24);
          v16 = v18;
          v6 = v22;
          ++v17;
        }
        while (v22 != v17);
      }
      if (++v16 == v21)
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
}

uint64_t static DenseMatrix.identity(rowCount:columnCount:)(uint64_t a1, uint64_t a2)
{
  return DenseMatrix.init(rowCount:columnCount:layout:initializingWith:)(a1, a2);
}

void sub_22ABD9E58(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  DenseMatrix.init(rowCount:columnCount:)(a1, a2);
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = v6;
}

uint64_t sub_22ABD9E8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  result = DenseMatrix.transposed()();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_22ABD9ED0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void *v4;
  _BYTE v6[32];

  v3 = *(_QWORD *)(a1 + 16);
  v4 = DenseMatrix.subscript.read();
  (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2);
  return ((uint64_t (*)(_BYTE *, _QWORD))v4)(v6, 0);
}

uint64_t sub_22ABD9F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11[4])(uint64_t);

  v6 = DenseMatrix.subscript.modify(v11, a2, a3);
  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v9, a1, v7);
  ((void (*)(void (**)(uint64_t), _QWORD))v6)(v11, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
}

void (*sub_22ABD9FBC(void (***a1)(uint64_t a1), uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (**v6)(uint64_t);

  v6 = (void (**)(uint64_t))malloc(0x28uLL);
  *a1 = v6;
  v6[4] = DenseMatrix.subscript.modify(v6, a2, a3);
  return sub_22A9B858C;
}

uint64_t sub_22ABDA020(uint64_t a1, uint64_t a2)
{
  return static DenseMatrix.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16)) & 1;
}

uint64_t sub_22ABDA06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t (*a7)(_BYTE *))
{
  uint64_t result;
  uint64_t v12;
  _BYTE v13[40];

  result = sub_22ABDED08();
  if (result)
  {
    if ((a5 & 1) != 0)
      v12 = a3;
    else
      v12 = a4;
    UnsafeMatrixPointer.init(start:rowCount:columnCount:leadingDimension:layout:)(result, a3, a4, v12, a5 & 1, (uint64_t)v13);
    return a7(v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22ABDA100(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_22ABDA06C(a1, a2, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_BYTE *)(v2 + 56), *(_QWORD *)(v2 + 64), *(uint64_t (**)(_BYTE *))(v2 + 72));
  OUTLINED_FUNCTION_33_39();
}

uint64_t sub_22ABDA138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_BYTE *))
{
  uint64_t result;
  _BYTE v8[40];

  result = sub_22ABDED08();
  if (result)
  {
    UnsafeMutableMatrixPointer.init(start:rowCount:columnCount:leadingDimension:layout:)(result, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), a3, *(_BYTE *)(a2 + 16), (uint64_t)v8);
    return a4(v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void DenseMatrix.withUnsafeVectorPointer<A>(row:_:)()
{
  OUTLINED_FUNCTION_65_31();
  OUTLINED_FUNCTION_33_39();
}

uint64_t sub_22ABDA1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10)
{
  uint64_t result;
  uint64_t v16;

  result = sub_22ABDED08();
  if ((a5 & 1) != 0)
  {
    if (result)
      goto LABEL_6;
  }
  else
  {
    if (result)
    {
      if ((unsigned __int128)(a7 * (__int128)a4) >> 64 == (a7 * a4) >> 63)
      {
        a3 = 1;
        a7 *= a4;
LABEL_6:
        v16 = UnsafeVectorPointer.init(start:count:stride:)(result + *(_QWORD *)(*(_QWORD *)(a10 - 8) + 72) * a7, a4, a3, a10);
        return a8(v16);
      }
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *DenseMatrix.withUnsafeMutableVectorPointer<A>(row:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_22ABDA424(a1, a2, a3, a4, a5, (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_22ABDA2CC);
}

uint64_t sub_22ABDA2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v10 = *(_BYTE *)(a2 + 16);
  result = sub_22ABDED08();
  if ((v10 & 1) != 0)
  {
    if (result)
    {
      v12 = result + *(_QWORD *)(*(_QWORD *)(a6 - 8) + 72) * a3;
      v14 = *(_QWORD *)a2;
      v13 = *(_QWORD *)(a2 + 8);
LABEL_7:
      v15 = UnsafeMutableVectorPointer.init(start:count:stride:)(v12, v13, v14, a6);
      return a4(v15);
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (result)
  {
    v13 = *(_QWORD *)(a2 + 8);
    if ((unsigned __int128)(a3 * (__int128)v13) >> 64 == (a3 * v13) >> 63)
    {
      v12 = result + *(_QWORD *)(*(_QWORD *)(a6 - 8) + 72) * a3 * v13;
      v14 = 1;
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_10:
  __break(1u);
  return result;
}

void DenseMatrix.withUnsafeVectorPointer<A>(column:_:)()
{
  OUTLINED_FUNCTION_65_31();
  OUTLINED_FUNCTION_33_39();
}

uint64_t sub_22ABDA3B4()
{
  return sub_22ABDF8F0();
}

_QWORD *DenseMatrix.withUnsafeMutableVectorPointer<A>(column:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_22ABDA424(a1, a2, a3, a4, a5, (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_22A9F3954);
}

_QWORD *sub_22ABDA424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);

  v18 = a6;
  v12 = *(_QWORD *)(a4 + 16);
  OUTLINED_FUNCTION_57_21();
  sub_22ABDF8E4();
  OUTLINED_FUNCTION_32_48();
  v16 = v8;
  v17 = v7;
  v18(&v16, v6, a1, a2, a3, v12, a5, *(_QWORD *)(a4 + 24));
  return OUTLINED_FUNCTION_22_68(&v16);
}

void static DenseMatrix<>.*= infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;

  v2 = OUTLINED_FUNCTION_48_38();
  *(_QWORD *)(v0 + 24) = v1;
  if ((v2 & 1) == 0)
  {
    v1 = sub_22ABCD550(v1);
    *(_QWORD *)(v0 + 24) = v1;
  }
  OUTLINED_FUNCTION_80_25();
  if (!v3)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_21_77();
  if (v4 != v5)
    goto LABEL_9;
  OUTLINED_FUNCTION_20_65();
  if (v4 ^ v5 | v3)
  {
    cblas_sscal_NEWLAPACK();
    *(_QWORD *)(v0 + 24) = v1;
    OUTLINED_FUNCTION_51_19();
    return;
  }
LABEL_10:
  __break(1u);
}

{
  uint64_t v0;
  char *v1;
  char v2;
  char v3;
  char v4;
  char v5;

  v2 = OUTLINED_FUNCTION_48_38();
  *(_QWORD *)(v0 + 24) = v1;
  if ((v2 & 1) == 0)
  {
    v1 = sub_22AB8F540((uint64_t)v1);
    *(_QWORD *)(v0 + 24) = v1;
  }
  OUTLINED_FUNCTION_80_25();
  if (!v3)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_21_77();
  if (v4 != v5)
    goto LABEL_9;
  OUTLINED_FUNCTION_20_65();
  if (v4 ^ v5 | v3)
  {
    OUTLINED_FUNCTION_39_50();
    *(_QWORD *)(v0 + 24) = v1;
    OUTLINED_FUNCTION_51_19();
    return;
  }
LABEL_10:
  __break(1u);
}

void static DenseMatrix<>./ infix(_:_:)()
{
  char v0;
  char v1;
  char v2;

  OUTLINED_FUNCTION_2_127();
  if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
    OUTLINED_FUNCTION_68_25();
  OUTLINED_FUNCTION_13_93();
  if (!v0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_21_77();
  if (v1 != v2)
    goto LABEL_9;
  OUTLINED_FUNCTION_20_65();
  if (v1 ^ v2 | v0)
  {
    cblas_sscal_NEWLAPACK();
    OUTLINED_FUNCTION_2_119();
    OUTLINED_FUNCTION_1_117();
    return;
  }
LABEL_10:
  __break(1u);
}

{
  char v0;
  char v1;
  char v2;

  OUTLINED_FUNCTION_2_127();
  if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
    OUTLINED_FUNCTION_67_24();
  OUTLINED_FUNCTION_13_93();
  if (!v0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_21_77();
  if (v1 != v2)
    goto LABEL_9;
  OUTLINED_FUNCTION_20_65();
  if (v1 ^ v2 | v0)
  {
    cblas_dscal_NEWLAPACK();
    OUTLINED_FUNCTION_2_119();
    OUTLINED_FUNCTION_1_117();
    return;
  }
LABEL_10:
  __break(1u);
}

void static DenseMatrix<>.* infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_22ABDA858(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22ABD2B04);
}

{
  sub_22ABDA858(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22ABD2C94);
}

void static DenseMatrix<>.* infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_22ABDA8CC(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22ABD2B68);
}

{
  sub_22ABDA8CC(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_22ABD2CF8);
}

void sub_22ABDA858(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;

  v11 = a3 & 1;
  swift_retain();
  swift_retain();
  a6(a1, a5, a1, a2, v11, a4);
  OUTLINED_FUNCTION_101_0();
}

void sub_22ABDA8CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;

  v11 = a4 & 1;
  swift_retain();
  swift_retain();
  a6(a3, a1, a2, a3, v11, a5);
  OUTLINED_FUNCTION_101_0();
}

void static DenseMatrix.* infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t *, _QWORD);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71[6];

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  LODWORD(v69) = v8;
  v10 = v9;
  v67 = v11;
  v12 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_23_8();
  v15 = v13 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (void (*)(uint64_t))((char *)&v53 - v17);
  MEMORY[0x24BDAC7A8](v19);
  v68 = (char *)&v53 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v53 - v22;
  v61 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 + 16) + 16) + 8);
  v58 = *(_QWORD *)(v61 + 16);
  v57 = OUTLINED_FUNCTION_70_21();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v25);
  v56 = (char *)&v53 - v26;
  v70 = v1;
  if (DenseVector.count.getter() != v10)
  {
LABEL_21:
    OUTLINED_FUNCTION_31_10();
    v53 = 582;
    OUTLINED_FUNCTION_193_0();
    OUTLINED_FUNCTION_156_3();
    OUTLINED_FUNCTION_8_111();
    OUTLINED_FUNCTION_40_10();
  }
  v54 = v15;
  v62 = v10;
  v63 = v7;
  if (qword_255B1BC88 != -1)
    goto LABEL_19;
  while (1)
  {
    v27 = OUTLINED_FUNCTION_38_29();
    __swift_project_value_buffer(v27, (uint64_t)static Logger.linearAlgebra);
    v28 = OUTLINED_FUNCTION_34_29();
    v29 = sub_22ABDF4C4();
    v30 = os_log_type_enabled(v28, v29);
    v53 = (uint64_t)v18;
    v59 = v23;
    if (v30)
    {
      v31 = (uint8_t *)OUTLINED_FUNCTION_4_12();
      v71[0] = OUTLINED_FUNCTION_4_12();
      *(_DWORD *)v31 = 136315138;
      v32 = OUTLINED_FUNCTION_11_54();
      v34 = sub_22AAB5318(v32, v33, v71);
      OUTLINED_FUNCTION_66_26(v34);
      sub_22ABDF65C();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_62_19(&dword_22A999000, v28, v29, "Using a slow implementation of matrix multiplication for %s. Prefer using Float or Double.", v31);
      OUTLINED_FUNCTION_61_24();
      OUTLINED_FUNCTION_2_2();
    }

    v55 = OUTLINED_FUNCTION_79_20();
    sub_22ABE013C();
    sub_22ABDFF20();
    v35 = v67;
    DenseVector.init(repeating:count:)((uint64_t)v23, v67, v3);
    v71[4] = v36;
    v37 = v68;
    if (v35 < 0)
    {
      __break(1u);
      goto LABEL_21;
    }
    if (!v35)
      break;
    v38 = v12;
    v23 = 0;
    v18 = (void (*)(uint64_t))(v69 & 1);
    v60 = v69 & 1;
    v65 = v5;
    v66 = v12;
    while (v23 != (char *)v35)
    {
      v12 = v35;
      sub_22ABE013C();
      sub_22ABDFF20();
      v39 = v70;
      v40 = DenseVector.count.getter();
      if (v40 < 0)
        goto LABEL_18;
      if (v40)
      {
        v41 = 0;
        v42 = v54;
        v43 = v53;
        v44 = (uint64_t)v59;
        v69 = v23;
        v64 = v40;
        do
        {
          v45 = (void (*)(uint64_t *, _QWORD))DenseMatrix.subscript.read();
          v18 = *(void (**)(uint64_t))(v66 + 16);
          v18(v43);
          v45(v71, 0);
          DenseVector.subscript.getter(v41, v65, v3, v70);
          OUTLINED_FUNCTION_56_25();
          sub_22ABDF308();
          OUTLINED_FUNCTION_73_19(v42);
          OUTLINED_FUNCTION_73_19(v43);
          sub_22ABDFB00();
          OUTLINED_FUNCTION_73_19(v44);
          ++v41;
        }
        while (v64 != v41);
        v23 = v69;
        v39 = v70;
        v47 = v65;
        v46 = v66;
        v12 = v67;
        v37 = v68;
      }
      else
      {
        v47 = v5;
        v46 = v38;
        v18 = *(void (**)(uint64_t))(v38 + 16);
      }
      v48 = v23 + 1;
      v49 = (unint64_t)v23;
      v50 = (uint64_t)v59;
      ((void (*)(char *, char *, uint64_t))v18)(v59, v37, v3);
      v52 = type metadata accessor for DenseVector(0, v3, v39, v51);
      DenseVector.subscript.setter(v50, v49, v52);
      v38 = v46;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v3);
      v23 = v48;
      v5 = v47;
      v35 = v12;
      if (v48 == (char *)v12)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    swift_once();
  }
LABEL_16:
  OUTLINED_FUNCTION_3();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[4];
  uint64_t v58;
  uint64_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint8_t *v71;
  uint64_t v72[6];

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  LODWORD(v71) = v4;
  v6 = v5;
  v65 = v7;
  v9 = v8;
  v10 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_23_8();
  v13 = v11 - v12;
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_50_33(v15, v16, v17, v18, v19, v20, v21, v22, v57[0]);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v57 - v24;
  MEMORY[0x24BDAC7A8](v26);
  v69 = (char *)v57 - v27;
  v29 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v28 + 16) + 16) + 8);
  v57[3] = *(_QWORD *)(v29 + 16);
  v57[2] = OUTLINED_FUNCTION_70_21();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v30);
  v57[1] = (uint64_t)v57 - v31;
  v64 = v9;
  v32 = v1;
  if (DenseVector.count.getter() != v65)
  {
LABEL_21:
    OUTLINED_FUNCTION_31_10();
    v57[0] = 602;
    OUTLINED_FUNCTION_193_0();
    OUTLINED_FUNCTION_156_3();
    OUTLINED_FUNCTION_8_111();
    OUTLINED_FUNCTION_40_10();
  }
  v63 = v13;
  if (qword_255B1BC88 != -1)
    goto LABEL_19;
  while (1)
  {
    v33 = OUTLINED_FUNCTION_38_29();
    __swift_project_value_buffer(v33, (uint64_t)static Logger.linearAlgebra);
    v34 = OUTLINED_FUNCTION_34_29();
    v35 = sub_22ABDF4C4();
    v36 = os_log_type_enabled(v34, v35);
    v68 = v25;
    if (v36)
    {
      v37 = (uint8_t *)OUTLINED_FUNCTION_4_12();
      v70 = OUTLINED_FUNCTION_4_12();
      v72[0] = v70;
      v66 = v37;
      *(_DWORD *)v37 = 136315138;
      v60 = v37 + 4;
      v38 = OUTLINED_FUNCTION_11_54();
      v40 = sub_22AAB5318(v38, v39, v72);
      OUTLINED_FUNCTION_66_26(v40);
      sub_22ABDF65C();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_62_19(&dword_22A999000, v34, v35, "Using a slow implementation of matrix multiplication for %s. Prefer using Float or Double.", v66);
      OUTLINED_FUNCTION_61_24();
      OUTLINED_FUNCTION_2_2();
    }

    v57[0] = OUTLINED_FUNCTION_79_20();
    sub_22ABE013C();
    v41 = (uint64_t)v69;
    OUTLINED_FUNCTION_38_54();
    DenseVector.init(repeating:count:)(v41, v6, v3);
    v72[4] = v42;
    v43 = v64;
    if (v6 < 0)
    {
      __break(1u);
      goto LABEL_21;
    }
    if (!v6)
      break;
    v44 = 0;
    v58 = v3;
    v59 = v6;
    v61 = v29;
    LODWORD(v60) = v71 & 1;
    v67 = v10;
    while (v44 != v6)
    {
      v70 = v44;
      sub_22ABE013C();
      OUTLINED_FUNCTION_38_54();
      v45 = DenseVector.count.getter();
      if (v45 < 0)
        goto LABEL_18;
      if (v45)
      {
        v46 = 0;
        v47 = v58;
        v66 = (uint8_t *)v45;
        do
        {
          v71 = v46 + 1;
          v48 = v62;
          DenseVector.subscript.getter(v46, v43, v47, v32);
          DenseMatrix.subscript.read();
          v49 = *(void (**)(uint64_t))(v67 + 16);
          v50 = v63;
          v49(v63);
          OUTLINED_FUNCTION_9_23((uint64_t)v72);
          v51 = (uint64_t)v69;
          OUTLINED_FUNCTION_56_25();
          sub_22ABDF308();
          OUTLINED_FUNCTION_20_64(v50);
          OUTLINED_FUNCTION_20_64(v48);
          sub_22ABDFB00();
          OUTLINED_FUNCTION_20_64(v51);
          v6 = v59;
          v43 = v64;
          v46 = v71;
        }
        while (v66 != v71);
      }
      else
      {
        v49 = *(void (**)(uint64_t))(v10 + 16);
      }
      v29 = (uint64_t)v69;
      v52 = v70;
      v53 = v70 + 1;
      v54 = v68;
      v3 = v58;
      ((void (*)(char *, char *, uint64_t))v49)(v69, v68, v58);
      v25 = v54;
      v56 = type metadata accessor for DenseVector(0, v3, v32, v55);
      DenseVector.subscript.setter(v29, v52, v56);
      v10 = v67;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v54, v3);
      v44 = v53;
      if (v53 == v6)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    swift_once();
  }
LABEL_16:
  OUTLINED_FUNCTION_3();
}

void sub_22ABDB318(uint64_t a1, uint64_t a2)
{
  sub_22ABDB350(a1, a2, (void (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22ABDA1F0);
}

void sub_22ABDB334(uint64_t a1, uint64_t a2)
{
  sub_22ABDB350(a1, a2, (void (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22A9F37B8);
}

void sub_22ABDB350(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v3;

  a3(a1, a2, *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(unsigned __int8 *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
  OUTLINED_FUNCTION_33_39();
}

void sub_22ABDB38C()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_2_127()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_5_110()
{
  return sub_22ABDFB00();
}

uint64_t OUTLINED_FUNCTION_8_111()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_12_91()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_93()
{
  uint64_t v0;
  uint64_t v1;

  return v1 * v0;
}

uint64_t OUTLINED_FUNCTION_14_85()
{
  return swift_retain();
}

unint64_t OUTLINED_FUNCTION_16_88()
{
  uint64_t v0;
  unint64_t v1;

  return sub_22AB63820(v1, v0);
}

uint64_t OUTLINED_FUNCTION_18_79()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_19_71()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 112, 0);
}

_QWORD *OUTLINED_FUNCTION_22_68(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_22A9F43F4(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_24_57(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_30_57(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t OUTLINED_FUNCTION_33_59()
{
  return sub_22ABDF974();
}

void *OUTLINED_FUNCTION_35_44()
{
  return DenseMatrix.subscript.read();
}

uint64_t OUTLINED_FUNCTION_38_54()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_39_50()
{
  return cblas_dscal_NEWLAPACK();
}

uint64_t OUTLINED_FUNCTION_40_44()
{
  return cblas_sscal_NEWLAPACK();
}

void OUTLINED_FUNCTION_44_40()
{
  static DenseMatrix.*= infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_46_41()
{
  return sub_22ABDF998();
}

uint64_t OUTLINED_FUNCTION_48_38()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_49_28()
{
  return sub_22ABDFD7C();
}

void OUTLINED_FUNCTION_50_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 208) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_57_21()
{
  return sub_22ABDF974();
}

uint64_t OUTLINED_FUNCTION_59_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for DenseMatrix(0, v5, v4, a4);
  return v6 - 112;
}

uint64_t OUTLINED_FUNCTION_60_28()
{
  return sub_22ABDF974();
}

uint64_t OUTLINED_FUNCTION_61_24()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_62_19(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_65_31()
{
  return sub_22ABDA3B4();
}

uint64_t OUTLINED_FUNCTION_66_26(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

char *OUTLINED_FUNCTION_67_24()
{
  uint64_t v0;

  return sub_22AB8F540(v0);
}

uint64_t OUTLINED_FUNCTION_68_25()
{
  uint64_t v0;

  return sub_22ABCD550(v0);
}

uint64_t OUTLINED_FUNCTION_70_21()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_73_19(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_75_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  return v3(v2, a2, v4);
}

uint64_t OUTLINED_FUNCTION_76_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 * a6;
}

uint64_t OUTLINED_FUNCTION_79_20()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_80_25()
{
  _QWORD *v0;

  return *v0 * v0[1];
}

uint64_t UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a5 != a2)
    goto LABEL_17;
  if (a5 > 0x7FFFFFFF)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a3 > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a3 >= (uint64_t)0xFFFFFFFF80000000 && a5 >= (uint64_t)0xFFFFFFFF80000000 && a6 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (a6 <= 0x7FFFFFFF)
      return cblas_saxpy_NEWLAPACK();
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  OUTLINED_FUNCTION_8_112();
  OUTLINED_FUNCTION_21_78();
  OUTLINED_FUNCTION_12_92();
  OUTLINED_FUNCTION_0_121();
  OUTLINED_FUNCTION_6_23();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_1_118();
  OUTLINED_FUNCTION_0_121();
  OUTLINED_FUNCTION_6_23();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_13_18();
  OUTLINED_FUNCTION_23_72();
  result = OUTLINED_FUNCTION_2_128();
  __break(1u);
  return result;
}

{
  uint64_t result;

  if (a5 != a2)
    goto LABEL_17;
  if (a5 > 0x7FFFFFFF)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a3 > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a3 >= (uint64_t)0xFFFFFFFF80000000 && a5 >= (uint64_t)0xFFFFFFFF80000000 && a6 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (a6 <= 0x7FFFFFFF)
      return cblas_daxpy_NEWLAPACK();
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  OUTLINED_FUNCTION_8_112();
  OUTLINED_FUNCTION_21_78();
  OUTLINED_FUNCTION_12_92();
  OUTLINED_FUNCTION_0_121();
  OUTLINED_FUNCTION_6_23();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_1_118();
  OUTLINED_FUNCTION_0_121();
  OUTLINED_FUNCTION_6_23();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_13_18();
  OUTLINED_FUNCTION_23_72();
  result = OUTLINED_FUNCTION_2_128();
  __break(1u);
  return result;
}

uint64_t UnsafeMutableVectorPointer<A>.multiply(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t result;

  if (a2 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a2 >= (uint64_t)0xFFFFFFFF80000000)
  {
    v4 = __OFSUB__(a3, 0xFFFFFFFF80000000);
    v3 = a3 + 0x80000000 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 1;
  }
  if (v3 != v4)
    goto LABEL_9;
  if (a3 <= 0x7FFFFFFF)
    return cblas_sscal_NEWLAPACK();
LABEL_10:
  __break(1u);
  return result;
}

{
  BOOL v3;
  BOOL v4;
  uint64_t result;

  if (a2 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a2 >= (uint64_t)0xFFFFFFFF80000000)
  {
    v4 = __OFSUB__(a3, 0xFFFFFFFF80000000);
    v3 = a3 + 0x80000000 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 1;
  }
  if (v3 != v4)
    goto LABEL_9;
  if (a3 <= 0x7FFFFFFF)
    return cblas_dscal_NEWLAPACK();
LABEL_10:
  __break(1u);
  return result;
}

void UnsafeVectorPointer<A>.squaredMagnitude.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  _BOOL4 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v5 = *(_QWORD *)(v4 - 8);
  v29 = v6;
  v30 = v5;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  v25 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v24 = (char *)&v23 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - v12;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_6_132();
  MEMORY[0x24BDAC7A8](v14);
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_12_33();
  sub_22ABDFF20();
  v15 = v29 * v1;
  if ((unsigned __int128)(v29 * (__int128)v1) >> 64 != (v29 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!v1)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v16 = v15 >= 0;
  if (v1 > 0)
    v16 = v15 < 1;
  v29 = v3;
  v18 = (uint64_t)v24;
  v17 = (uint64_t)v25;
  if (!v16)
  {
    v19 = 0;
    v20 = *(_QWORD *)(v30 + 72);
    v26 = *(_QWORD *)(v30 + 16);
    v27 = v20;
    v28 = v15;
    do
    {
      if (__OFADD__(v19, v1))
        v21 = ((v19 + v1) >> 63) ^ 0x8000000000000000;
      else
        v21 = v19 + v1;
      OUTLINED_FUNCTION_20_66(v18);
      OUTLINED_FUNCTION_20_66(v17);
      sub_22ABDF308();
      OUTLINED_FUNCTION_6_108(v17);
      OUTLINED_FUNCTION_6_108(v18);
      sub_22ABDFB00();
      OUTLINED_FUNCTION_6_108((uint64_t)v13);
      v22 = v21 >= v28;
      if (v1 <= 0)
        v22 = v28 >= v21;
      v19 = v21;
    }
    while (!v22);
  }
  OUTLINED_FUNCTION_3();
}

uint64_t UnsafeVectorPointer<A>.magnitude.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  UnsafeVectorPointer<A>.squaredMagnitude.getter();
  sub_22ABDEB7C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a4);
}

void UnsafeVectorPointer<A>.maximumAbsoluteValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, int64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v35 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 8);
  v36 = v10;
  v34 = *(_QWORD *)(v35 + 16);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_6_132();
  MEMORY[0x24BDAC7A8](v11);
  v31 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v29 - v16;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v29 - v19;
  if (v7 < 1)
  {
    sub_22ABDEBA0();
LABEL_19:
    OUTLINED_FUNCTION_3();
    return;
  }
  v30 = v9;
  OUTLINED_FUNCTION_18_80();
  OUTLINED_FUNCTION_12_33();
  OUTLINED_FUNCTION_17_78();
  v21 = v7;
  v22 = v7 * v5;
  if ((unsigned __int128)(v21 * (__int128)v5) >> 64 == v22 >> 63)
  {
    if (v5)
    {
      v34 = v1;
      v23 = v22 >= 0;
      if (v5 > 0)
        v23 = v22 < 1;
      v24 = v31;
      if (!v23)
      {
        v25 = 0;
        v26 = *(_QWORD *)(v31 + 72);
        v32 = *(void (**)(char *, int64_t, uint64_t))(v31 + 16);
        v33 = v26;
        do
        {
          if (__OFADD__(v25, v5))
            v27 = ((v25 + v5) >> 63) ^ 0x8000000000000000;
          else
            v27 = v25 + v5;
          v32(v14, v36 + v33 * v25, v3);
          sub_22ABDF320();
          OUTLINED_FUNCTION_6_108((uint64_t)v14);
          if ((sub_22ABDEC24() & 1) != 0)
          {
            OUTLINED_FUNCTION_6_108((uint64_t)v20);
            (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v20, v17, v3);
          }
          else
          {
            OUTLINED_FUNCTION_6_108((uint64_t)v17);
          }
          v28 = v27 >= v22;
          if (v5 <= 0)
            v28 = v22 >= v27;
          v25 = v27;
        }
        while (!v28);
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v30, v20, v3);
      goto LABEL_19;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  int64_t v37;
  int64_t v38;
  char *v39;
  uint64_t v40;
  BOOL v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[2];
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;

  OUTLINED_FUNCTION_4_4();
  v22 = v21;
  v24 = v23;
  v54 = v25;
  v55 = v26;
  v28 = v27;
  v52 = *(_QWORD *)(v21 - 8);
  v53 = v29;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_13_94(v31, v49[0]);
  MEMORY[0x24BDAC7A8](v32);
  v50 = (char *)v49 - v35;
  if (v34 != v33)
    goto LABEL_25;
  v57 = v34 * v24;
  if ((unsigned __int128)(v34 * (__int128)v24) >> 64 != (v34 * v24) >> 63)
  {
    __break(1u);
    goto LABEL_23;
  }
  v56 = v34 * v28;
  if ((unsigned __int128)(v34 * (__int128)v28) >> 64 != (v34 * v28) >> 63)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    v60 = 0;
    v61 = 0xE000000000000000;
    v47 = v33;
    v48 = v34;
    sub_22ABDF7A0();
    OUTLINED_FUNCTION_12_92();
    v59 = v48;
    OUTLINED_FUNCTION_0_121();
    OUTLINED_FUNCTION_15_88();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_1_118();
    v59 = v47;
    OUTLINED_FUNCTION_0_121();
    OUTLINED_FUNCTION_15_88();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_2_128();
    __break(1u);
    return;
  }
  if (!v28 || !v24)
    goto LABEL_24;
  v36 = v57 >= 0;
  if (v24 > 0)
    v36 = v57 < 1;
  if (!v36)
  {
    v37 = 0;
    v38 = 0;
    v49[1] = a21;
    v39 = v50;
    v40 = v51;
    do
    {
      v41 = v56 >= v37;
      if (v28 > 0)
        v41 = v37 >= v56;
      if (v41)
        break;
      if (__OFADD__(v38, v24))
        v42 = ((v38 + v24) >> 63) ^ 0x8000000000000000;
      else
        v42 = v38 + v24;
      v43 = v37 + v28;
      if (__OFADD__(v37, v28))
        v43 = ((v37 + v28) >> 63) ^ 0x8000000000000000;
      v58 = v43;
      v44 = v52;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v40, v53 + *(_QWORD *)(v52 + 72) * v37, v22);
      sub_22ABDF308();
      v45 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v45(v40, v22);
      sub_22ABDFB00();
      v45((uint64_t)v39, v22);
      v46 = v42 >= v57;
      if (v24 <= 0)
        v46 = v57 >= v42;
      v37 = v58;
      v38 = v42;
    }
    while (!v46);
  }
  OUTLINED_FUNCTION_3();
}

uint64_t UnsafeMutableVectorPointer<A>.multiply(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  BOOL v6;
  int64_t v7;
  int64_t v8;
  uint64_t result;
  _BOOL4 v10;

  v4 = a3 * a4;
  if ((unsigned __int128)(a3 * (__int128)a4) >> 64 != (a3 * a4) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!a4)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v6 = v4 >= 0;
  if (a4 > 0)
    v6 = v4 < 1;
  if (!v6)
  {
    v7 = 0;
    do
    {
      if (__OFADD__(v7, a4))
        v8 = ((v7 + a4) >> 63) ^ 0x8000000000000000;
      else
        v8 = v7 + a4;
      result = sub_22ABDF314();
      v10 = v8 >= v4;
      if (a4 <= 0)
        v10 = v4 >= v8;
      v7 = v8;
    }
    while (!v10);
  }
  return result;
}

void dot<A>(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v42 = v6;
  v43 = v7;
  v9 = v8;
  v11 = v10;
  v46 = v12;
  v41 = *(_QWORD *)(v0 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_13_94(v14, v35);
  MEMORY[0x24BDAC7A8](v15);
  v39 = (char *)&v35 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v38 = (char *)&v35 - v18;
  v37 = *(_QWORD *)(*(_QWORD *)(v19 + 16) + 8);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_6_132();
  MEMORY[0x24BDAC7A8](v20);
  if (v11 != v5)
    goto LABEL_25;
  v45 = v11 * v9;
  if ((unsigned __int128)(v11 * (__int128)v9) >> 64 != (v11 * v9) >> 63)
  {
    __break(1u);
    goto LABEL_23;
  }
  v44 = v11 * v3;
  if ((unsigned __int128)(v11 * (__int128)v3) >> 64 != (v11 * v3) >> 63)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    v49 = 0;
    v50 = 0xE000000000000000;
    sub_22ABDF7A0();
    OUTLINED_FUNCTION_12_92();
    v48 = v11;
    OUTLINED_FUNCTION_0_121();
    OUTLINED_FUNCTION_15_88();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_1_118();
    v48 = v5;
    OUTLINED_FUNCTION_0_121();
    OUTLINED_FUNCTION_15_88();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_2_128();
    __break(1u);
    return;
  }
  if (!v9 || !v3)
    goto LABEL_24;
  OUTLINED_FUNCTION_18_80();
  OUTLINED_FUNCTION_12_33();
  OUTLINED_FUNCTION_17_78();
  v21 = v45 >= 0;
  if (v9 > 0)
    v21 = v45 < 1;
  if (!v21)
  {
    v22 = 0;
    v23 = 0;
    v36 = v3;
    v25 = v40;
    v24 = v41;
    v26 = (uint64_t)v39;
    do
    {
      v27 = v44 >= v22;
      if (v3 > 0)
        v27 = v22 >= v44;
      if (v27)
        break;
      if (__OFADD__(v23, v9))
        v28 = ((v23 + v9) >> 63) ^ 0x8000000000000000;
      else
        v28 = v23 + v9;
      v29 = v22 + v3;
      if (__OFADD__(v22, v3))
        v29 = ((v22 + v3) >> 63) ^ 0x8000000000000000;
      v47 = v29;
      v30 = *(_QWORD *)(v24 + 72);
      v31 = v9;
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
      v32(v26, v42 + v30 * v23, v1);
      v32(v25, v43 + v30 * v22, v1);
      v9 = v31;
      v33 = (uint64_t)v38;
      sub_22ABDF308();
      OUTLINED_FUNCTION_6_108(v25);
      OUTLINED_FUNCTION_6_108(v26);
      sub_22ABDFB00();
      OUTLINED_FUNCTION_6_108(v33);
      v3 = v36;
      v34 = v28 >= v45;
      if (v9 <= 0)
        v34 = v45 >= v28;
      v22 = v47;
      v23 = v28;
    }
    while (!v34);
  }
  OUTLINED_FUNCTION_3();
}

uint64_t UnsafeVectorPointer<A>.magnitude.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t result;

  if (a2 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a2 >= (uint64_t)0xFFFFFFFF80000000)
  {
    v4 = __OFSUB__(a3, 0xFFFFFFFF80000000);
    v3 = a3 + 0x80000000 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 1;
  }
  if (v3 != v4)
    goto LABEL_9;
  if (a3 <= 0x7FFFFFFF)
    return cblas_snrm2_NEWLAPACK();
LABEL_10:
  __break(1u);
  return result;
}

{
  BOOL v3;
  BOOL v4;
  uint64_t result;

  if (a2 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a2 >= (uint64_t)0xFFFFFFFF80000000)
  {
    v4 = __OFSUB__(a3, 0xFFFFFFFF80000000);
    v3 = a3 + 0x80000000 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 1;
  }
  if (v3 != v4)
    goto LABEL_9;
  if (a3 <= 0x7FFFFFFF)
    return cblas_dnrm2_NEWLAPACK();
LABEL_10:
  __break(1u);
  return result;
}

uint64_t UnsafeVectorPointer<A>.maximumAbsoluteValue.getter(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 >= 1)
  {
    if ((unint64_t)a2 >> 31)
    {
      __break(1u);
    }
    else if (a3 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (a3 <= 0x7FFFFFFF)
      {
        OUTLINED_FUNCTION_19_72(result, a2);
        return cblas_isamax_NEWLAPACK();
      }
      goto LABEL_9;
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
  return result;
}

{
  if (a2 >= 1)
  {
    if ((unint64_t)a2 >> 31)
    {
      __break(1u);
    }
    else if (a3 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (a3 <= 0x7FFFFFFF)
      {
        OUTLINED_FUNCTION_19_72(result, a2);
        return cblas_idamax_NEWLAPACK();
      }
      goto LABEL_9;
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
  return result;
}

uint64_t dot(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2 != a5)
    goto LABEL_17;
  if (a2 > 0x7FFFFFFF)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a3 > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a2 >= (uint64_t)0xFFFFFFFF80000000 && a3 >= (uint64_t)0xFFFFFFFF80000000 && a6 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (a6 <= 0x7FFFFFFF)
      return cblas_sdot_NEWLAPACK();
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  OUTLINED_FUNCTION_9_106();
  OUTLINED_FUNCTION_21_78();
  OUTLINED_FUNCTION_12_92();
  OUTLINED_FUNCTION_0_121();
  OUTLINED_FUNCTION_6_23();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_1_118();
  OUTLINED_FUNCTION_0_121();
  OUTLINED_FUNCTION_6_23();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_13_18();
  OUTLINED_FUNCTION_23_72();
  result = OUTLINED_FUNCTION_2_128();
  __break(1u);
  return result;
}

{
  uint64_t result;

  if (a2 != a5)
    goto LABEL_17;
  if (a2 > 0x7FFFFFFF)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a3 > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a2 >= (uint64_t)0xFFFFFFFF80000000 && a3 >= (uint64_t)0xFFFFFFFF80000000 && a6 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (a6 <= 0x7FFFFFFF)
      return cblas_ddot_NEWLAPACK();
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  OUTLINED_FUNCTION_9_106();
  OUTLINED_FUNCTION_21_78();
  OUTLINED_FUNCTION_12_92();
  OUTLINED_FUNCTION_0_121();
  OUTLINED_FUNCTION_6_23();
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_1_118();
  OUTLINED_FUNCTION_0_121();
  OUTLINED_FUNCTION_6_23();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_13_18();
  OUTLINED_FUNCTION_23_72();
  result = OUTLINED_FUNCTION_2_128();
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_0_121()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_2_128()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_8_112()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_9_106()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_12_92()
{
  return sub_22ABDEDC8();
}

void OUTLINED_FUNCTION_13_94(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_15_88()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_17_78()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_18_80()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_19_72(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_20_66(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v8;

  if (qword_255B47D78 == -1)
  {
    if (qword_255B47D80)
      return _availability_version_check();
  }
  else
  {
    dispatch_once_f(&qword_255B47D78, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_255B47D80)
      return _availability_version_check();
  }
  if (qword_255B47D70 == -1)
  {
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_255B47D70, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  if (v8)
    return 0;
  if (dword_255B47D64 > a3)
    return 1;
  return dword_255B47D64 >= a3 && dword_255B47D68 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t (*v1)(void);
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v1 = (uint64_t (*)(void))qword_255B47D80;
  if (qword_255B47D80)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (MEMORY[0x24BDAC970])
    {
      qword_255B47D80 = (uint64_t)MEMORY[0x24BDAC970];
      v1 = MEMORY[0x24BDAC970];
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = MEMORY[0x22E2E487C](v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals, &dword_255B47D64, &dword_255B47D68);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22ABDCE90()
{
  return MEMORY[0x24BEDF4A8]();
}

uint64_t sub_22ABDCE9C()
{
  return MEMORY[0x24BEDF4C0]();
}

uint64_t sub_22ABDCEA8()
{
  return MEMORY[0x24BDCB1A8]();
}

uint64_t sub_22ABDCEB4()
{
  return MEMORY[0x24BDCB1B0]();
}

uint64_t sub_22ABDCEC0()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_22ABDCECC()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_22ABDCED8()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_22ABDCEE4()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_22ABDCEF0()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_22ABDCEFC()
{
  return MEMORY[0x24BDCB728]();
}

uint64_t sub_22ABDCF08()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_22ABDCF14()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_22ABDCF20()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_22ABDCF2C()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_22ABDCF38()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_22ABDCF44()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_22ABDCF50()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_22ABDCF5C()
{
  return MEMORY[0x24BDCBC48]();
}

uint64_t sub_22ABDCF68()
{
  return MEMORY[0x24BDCBC60]();
}

uint64_t sub_22ABDCF74()
{
  return MEMORY[0x24BDCBCC8]();
}

uint64_t sub_22ABDCF80()
{
  return MEMORY[0x24BDCBD08]();
}

uint64_t sub_22ABDCF8C()
{
  return MEMORY[0x24BDCBD38]();
}

uint64_t sub_22ABDCF98()
{
  return MEMORY[0x24BDCBD60]();
}

uint64_t sub_22ABDCFA4()
{
  return MEMORY[0x24BDCBD70]();
}

uint64_t sub_22ABDCFB0()
{
  return MEMORY[0x24BDCBD90]();
}

uint64_t sub_22ABDCFBC()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_22ABDCFC8()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_22ABDCFD4()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_22ABDCFE0()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_22ABDCFEC()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_22ABDCFF8()
{
  return MEMORY[0x24BDCC8D0]();
}

uint64_t sub_22ABDD004()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_22ABDD010()
{
  return MEMORY[0x24BDCD728]();
}

uint64_t sub_22ABDD01C()
{
  return MEMORY[0x24BDCD750]();
}

uint64_t sub_22ABDD028()
{
  return MEMORY[0x24BDCD778]();
}

uint64_t sub_22ABDD034()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_22ABDD040()
{
  return MEMORY[0x24BDCD810]();
}

uint64_t sub_22ABDD04C()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_22ABDD058()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_22ABDD064()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_22ABDD070()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_22ABDD07C()
{
  return MEMORY[0x24BDCD908]();
}

uint64_t sub_22ABDD088()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_22ABDD094()
{
  return MEMORY[0x24BDCD938]();
}

uint64_t sub_22ABDD0A0()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_22ABDD0AC()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t sub_22ABDD0B8()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_22ABDD0C4()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_22ABDD0D0()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_22ABDD0DC()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_22ABDD0E8()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_22ABDD0F4()
{
  return MEMORY[0x24BDCDB58]();
}

uint64_t sub_22ABDD100()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_22ABDD10C()
{
  return MEMORY[0x24BDCDB68]();
}

uint64_t sub_22ABDD118()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_22ABDD124()
{
  return MEMORY[0x24BDCDBB0]();
}

uint64_t sub_22ABDD130()
{
  return MEMORY[0x24BDCDBD0]();
}

uint64_t sub_22ABDD13C()
{
  return MEMORY[0x24BDCDBD8]();
}

uint64_t sub_22ABDD148()
{
  return MEMORY[0x24BDCDBF8]();
}

uint64_t sub_22ABDD154()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_22ABDD160()
{
  return MEMORY[0x24BDCDC20]();
}

uint64_t sub_22ABDD16C()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_22ABDD178()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_22ABDD184()
{
  return MEMORY[0x24BDCDC58]();
}

uint64_t sub_22ABDD190()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_22ABDD19C()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_22ABDD1A8()
{
  return MEMORY[0x24BDCDD10]();
}

uint64_t sub_22ABDD1B4()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_22ABDD1C0()
{
  return MEMORY[0x24BDCDD78]();
}

uint64_t sub_22ABDD1CC()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_22ABDD1D8()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_22ABDD1E4()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_22ABDD1F0()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t sub_22ABDD1FC()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_22ABDD208()
{
  return MEMORY[0x24BDCEFB8]();
}

uint64_t sub_22ABDD214()
{
  return MEMORY[0x24BDCF050]();
}

uint64_t sub_22ABDD220()
{
  return MEMORY[0x24BDCF180]();
}

uint64_t sub_22ABDD22C()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_22ABDD238()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_22ABDD244()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_22ABDD250()
{
  return MEMORY[0x24BDF5C88]();
}

uint64_t sub_22ABDD25C()
{
  return MEMORY[0x24BDF5C90]();
}

uint64_t sub_22ABDD268()
{
  return MEMORY[0x24BDF5C98]();
}

uint64_t sub_22ABDD274()
{
  return MEMORY[0x24BDF5D78]();
}

uint64_t sub_22ABDD280()
{
  return MEMORY[0x24BDF5D90]();
}

uint64_t sub_22ABDD28C()
{
  return MEMORY[0x24BDF5D98]();
}

uint64_t sub_22ABDD298()
{
  return MEMORY[0x24BDF5DA0]();
}

uint64_t sub_22ABDD2A4()
{
  return MEMORY[0x24BDF5DA8]();
}

uint64_t sub_22ABDD2B0()
{
  return MEMORY[0x24BDF5DB0]();
}

uint64_t sub_22ABDD2BC()
{
  return MEMORY[0x24BDF5DC0]();
}

uint64_t sub_22ABDD2C8()
{
  return MEMORY[0x24BDF5DC8]();
}

uint64_t sub_22ABDD2D4()
{
  return MEMORY[0x24BDF5DD8]();
}

uint64_t sub_22ABDD2E0()
{
  return MEMORY[0x24BDF5DE8]();
}

uint64_t sub_22ABDD2EC()
{
  return MEMORY[0x24BDF5DF0]();
}

uint64_t sub_22ABDD2F8()
{
  return MEMORY[0x24BDF5E08]();
}

uint64_t sub_22ABDD304()
{
  return MEMORY[0x24BDF5E10]();
}

uint64_t sub_22ABDD310()
{
  return MEMORY[0x24BDF5E18]();
}

uint64_t sub_22ABDD31C()
{
  return MEMORY[0x24BDF5E40]();
}

uint64_t sub_22ABDD328()
{
  return MEMORY[0x24BDF5ED0]();
}

uint64_t sub_22ABDD334()
{
  return MEMORY[0x24BDF5F08]();
}

uint64_t sub_22ABDD340()
{
  return MEMORY[0x24BDF5F18]();
}

uint64_t sub_22ABDD34C()
{
  return MEMORY[0x24BDF5F20]();
}

uint64_t sub_22ABDD358()
{
  return MEMORY[0x24BDF5F28]();
}

uint64_t sub_22ABDD364()
{
  return MEMORY[0x24BDF5F30]();
}

uint64_t sub_22ABDD370()
{
  return MEMORY[0x24BDF5F38]();
}

uint64_t sub_22ABDD37C()
{
  return MEMORY[0x24BDF5F40]();
}

uint64_t sub_22ABDD388()
{
  return MEMORY[0x24BDF5F50]();
}

uint64_t sub_22ABDD394()
{
  return MEMORY[0x24BDF5F68]();
}

uint64_t sub_22ABDD3A0()
{
  return MEMORY[0x24BDF5F78]();
}

uint64_t sub_22ABDD3AC()
{
  return MEMORY[0x24BDF5FA8]();
}

uint64_t sub_22ABDD3B8()
{
  return MEMORY[0x24BDF5FD8]();
}

uint64_t sub_22ABDD3C4()
{
  return MEMORY[0x24BDF5FE0]();
}

uint64_t sub_22ABDD3D0()
{
  return MEMORY[0x24BDF5FF0]();
}

uint64_t sub_22ABDD3DC()
{
  return MEMORY[0x24BDF6028]();
}

uint64_t sub_22ABDD3E8()
{
  return MEMORY[0x24BDF6030]();
}

uint64_t sub_22ABDD3F4()
{
  return MEMORY[0x24BDF6038]();
}

uint64_t sub_22ABDD400()
{
  return MEMORY[0x24BDF6048]();
}

uint64_t sub_22ABDD40C()
{
  return MEMORY[0x24BEDF388]();
}

uint64_t sub_22ABDD418()
{
  return MEMORY[0x24BEDF390]();
}

uint64_t sub_22ABDD424()
{
  return MEMORY[0x24BEDF398]();
}

uint64_t sub_22ABDD430()
{
  return MEMORY[0x24BEDF3A8]();
}

uint64_t sub_22ABDD43C()
{
  return MEMORY[0x24BEDF408]();
}

uint64_t sub_22ABDD448()
{
  return MEMORY[0x24BEE5CC0]();
}

uint64_t sub_22ABDD454()
{
  return MEMORY[0x24BEE5CC8]();
}

uint64_t sub_22ABDD460()
{
  return MEMORY[0x24BEE5D28]();
}

uint64_t sub_22ABDD46C()
{
  return MEMORY[0x24BEE5D70]();
}

uint64_t sub_22ABDD478()
{
  return MEMORY[0x24BEE5D88]();
}

uint64_t sub_22ABDD484()
{
  return MEMORY[0x24BEE5D98]();
}

uint64_t sub_22ABDD490()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_22ABDD49C()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_22ABDD4A8()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_22ABDD4B4()
{
  return MEMORY[0x24BE6B7F8]();
}

uint64_t sub_22ABDD4C0()
{
  return MEMORY[0x24BE6B800]();
}

uint64_t sub_22ABDD4CC()
{
  return MEMORY[0x24BE6B808]();
}

uint64_t sub_22ABDD4D8()
{
  return MEMORY[0x24BE6B8D0]();
}

uint64_t sub_22ABDD4E4()
{
  return MEMORY[0x24BE6B8E8]();
}

uint64_t sub_22ABDD4F0()
{
  return MEMORY[0x24BE6B8F8]();
}

uint64_t sub_22ABDD4FC()
{
  return MEMORY[0x24BE6B920]();
}

uint64_t sub_22ABDD508()
{
  return MEMORY[0x24BE6B928]();
}

uint64_t sub_22ABDD514()
{
  return MEMORY[0x24BE6B970]();
}

uint64_t sub_22ABDD520()
{
  return MEMORY[0x24BE6B978]();
}

uint64_t sub_22ABDD52C()
{
  return MEMORY[0x24BE6B980]();
}

uint64_t sub_22ABDD538()
{
  return MEMORY[0x24BE6B988]();
}

uint64_t sub_22ABDD544()
{
  return MEMORY[0x24BE6B9B0]();
}

uint64_t sub_22ABDD550()
{
  return MEMORY[0x24BE6B9D0]();
}

uint64_t sub_22ABDD55C()
{
  return MEMORY[0x24BE6B9E0]();
}

uint64_t sub_22ABDD568()
{
  return MEMORY[0x24BE6B9F0]();
}

uint64_t sub_22ABDD574()
{
  return MEMORY[0x24BE6BA00]();
}

uint64_t sub_22ABDD580()
{
  return MEMORY[0x24BE6BA08]();
}

uint64_t sub_22ABDD58C()
{
  return MEMORY[0x24BE6BA10]();
}

uint64_t sub_22ABDD598()
{
  return MEMORY[0x24BE6BA20]();
}

uint64_t sub_22ABDD5A4()
{
  return MEMORY[0x24BE6BA38]();
}

uint64_t sub_22ABDD5B0()
{
  return MEMORY[0x24BE6BA80]();
}

uint64_t sub_22ABDD5BC()
{
  return MEMORY[0x24BE6BA90]();
}

uint64_t sub_22ABDD5C8()
{
  return MEMORY[0x24BE6BA98]();
}

uint64_t sub_22ABDD5D4()
{
  return MEMORY[0x24BE6BAA8]();
}

uint64_t sub_22ABDD5E0()
{
  return MEMORY[0x24BE6BAD0]();
}

uint64_t sub_22ABDD5EC()
{
  return MEMORY[0x24BE6BAD8]();
}

uint64_t sub_22ABDD5F8()
{
  return MEMORY[0x24BE6BAE0]();
}

uint64_t sub_22ABDD604()
{
  return MEMORY[0x24BE6BAE8]();
}

uint64_t sub_22ABDD610()
{
  return MEMORY[0x24BE6BAF0]();
}

uint64_t sub_22ABDD61C()
{
  return MEMORY[0x24BE6BAF8]();
}

uint64_t sub_22ABDD628()
{
  return MEMORY[0x24BE6BB00]();
}

uint64_t sub_22ABDD634()
{
  return MEMORY[0x24BE6BB08]();
}

uint64_t sub_22ABDD640()
{
  return MEMORY[0x24BE6BB10]();
}

uint64_t sub_22ABDD64C()
{
  return MEMORY[0x24BE6BB20]();
}

uint64_t sub_22ABDD658()
{
  return MEMORY[0x24BE6BB48]();
}

uint64_t sub_22ABDD664()
{
  return MEMORY[0x24BE6BB58]();
}

uint64_t sub_22ABDD670()
{
  return MEMORY[0x24BE6BB60]();
}

uint64_t sub_22ABDD67C()
{
  return MEMORY[0x24BE6BB70]();
}

uint64_t sub_22ABDD688()
{
  return MEMORY[0x24BE6BB78]();
}

uint64_t sub_22ABDD694()
{
  return MEMORY[0x24BE6BB98]();
}

uint64_t sub_22ABDD6A0()
{
  return MEMORY[0x24BE6BBA0]();
}

uint64_t sub_22ABDD6AC()
{
  return MEMORY[0x24BE6BBA8]();
}

uint64_t sub_22ABDD6B8()
{
  return MEMORY[0x24BE6BBB0]();
}

uint64_t sub_22ABDD6C4()
{
  return MEMORY[0x24BE6BBD8]();
}

uint64_t sub_22ABDD6D0()
{
  return MEMORY[0x24BE6BBE0]();
}

uint64_t sub_22ABDD6DC()
{
  return MEMORY[0x24BE6BBE8]();
}

uint64_t sub_22ABDD6E8()
{
  return MEMORY[0x24BE6BBF0]();
}

uint64_t sub_22ABDD6F4()
{
  return MEMORY[0x24BE6BBF8]();
}

uint64_t sub_22ABDD700()
{
  return MEMORY[0x24BE6BC00]();
}

uint64_t sub_22ABDD70C()
{
  return MEMORY[0x24BE6BC08]();
}

uint64_t sub_22ABDD718()
{
  return MEMORY[0x24BE6BC10]();
}

uint64_t sub_22ABDD724()
{
  return MEMORY[0x24BE6BC20]();
}

uint64_t sub_22ABDD730()
{
  return MEMORY[0x24BE6BC28]();
}

uint64_t sub_22ABDD73C()
{
  return MEMORY[0x24BE6BC38]();
}

uint64_t sub_22ABDD748()
{
  return MEMORY[0x24BE6BC58]();
}

uint64_t sub_22ABDD754()
{
  return MEMORY[0x24BE6BC68]();
}

uint64_t sub_22ABDD760()
{
  return MEMORY[0x24BE6BC70]();
}

uint64_t sub_22ABDD76C()
{
  return MEMORY[0x24BE6BC78]();
}

uint64_t sub_22ABDD778()
{
  return MEMORY[0x24BE6BC80]();
}

uint64_t sub_22ABDD784()
{
  return MEMORY[0x24BE6BC90]();
}

uint64_t sub_22ABDD790()
{
  return MEMORY[0x24BE6BC98]();
}

uint64_t sub_22ABDD79C()
{
  return MEMORY[0x24BE6BCA0]();
}

uint64_t sub_22ABDD7A8()
{
  return MEMORY[0x24BE6BCA8]();
}

uint64_t sub_22ABDD7B4()
{
  return MEMORY[0x24BE6BCB0]();
}

uint64_t sub_22ABDD7C0()
{
  return MEMORY[0x24BE6BCB8]();
}

uint64_t sub_22ABDD7CC()
{
  return MEMORY[0x24BE6BCC0]();
}

uint64_t sub_22ABDD7D8()
{
  return MEMORY[0x24BE6BCD0]();
}

uint64_t sub_22ABDD7E4()
{
  return MEMORY[0x24BE6BD08]();
}

uint64_t sub_22ABDD7F0()
{
  return MEMORY[0x24BE6BD10]();
}

uint64_t sub_22ABDD7FC()
{
  return MEMORY[0x24BE6BD18]();
}

uint64_t sub_22ABDD808()
{
  return MEMORY[0x24BE6BD30]();
}

uint64_t sub_22ABDD814()
{
  return MEMORY[0x24BE6BD38]();
}

uint64_t sub_22ABDD820()
{
  return MEMORY[0x24BE6BD40]();
}

uint64_t sub_22ABDD82C()
{
  return MEMORY[0x24BE6BD48]();
}

uint64_t sub_22ABDD838()
{
  return MEMORY[0x24BE6BD50]();
}

uint64_t sub_22ABDD844()
{
  return MEMORY[0x24BE6BD58]();
}

uint64_t sub_22ABDD850()
{
  return MEMORY[0x24BE6BD60]();
}

uint64_t sub_22ABDD85C()
{
  return MEMORY[0x24BE6BD68]();
}

uint64_t sub_22ABDD868()
{
  return MEMORY[0x24BE6BD88]();
}

uint64_t sub_22ABDD874()
{
  return MEMORY[0x24BE6BD90]();
}

uint64_t sub_22ABDD880()
{
  return MEMORY[0x24BE6BD98]();
}

uint64_t sub_22ABDD88C()
{
  return MEMORY[0x24BE6BDA0]();
}

uint64_t sub_22ABDD898()
{
  return MEMORY[0x24BE6BDB8]();
}

uint64_t sub_22ABDD8A4()
{
  return MEMORY[0x24BE6BDD0]();
}

uint64_t sub_22ABDD8B0()
{
  return MEMORY[0x24BE6BE58]();
}

uint64_t sub_22ABDD8BC()
{
  return MEMORY[0x24BE6BE78]();
}

uint64_t sub_22ABDD8C8()
{
  return MEMORY[0x24BE6BE88]();
}

uint64_t sub_22ABDD8D4()
{
  return MEMORY[0x24BE6BEB8]();
}

uint64_t sub_22ABDD8E0()
{
  return MEMORY[0x24BE6BEC0]();
}

uint64_t sub_22ABDD8EC()
{
  return MEMORY[0x24BE6BEC8]();
}

uint64_t sub_22ABDD8F8()
{
  return MEMORY[0x24BE6BED8]();
}

uint64_t sub_22ABDD904()
{
  return MEMORY[0x24BE6BEE8]();
}

uint64_t sub_22ABDD910()
{
  return MEMORY[0x24BE6BEF8]();
}

uint64_t sub_22ABDD91C()
{
  return MEMORY[0x24BE6BF08]();
}

uint64_t sub_22ABDD928()
{
  return MEMORY[0x24BE6BF28]();
}

uint64_t sub_22ABDD934()
{
  return MEMORY[0x24BE6BF30]();
}

uint64_t sub_22ABDD940()
{
  return MEMORY[0x24BE6BF70]();
}

uint64_t sub_22ABDD94C()
{
  return MEMORY[0x24BE6BF80]();
}

uint64_t sub_22ABDD958()
{
  return MEMORY[0x24BE6BF90]();
}

uint64_t sub_22ABDD964()
{
  return MEMORY[0x24BE6BF98]();
}

uint64_t sub_22ABDD970()
{
  return MEMORY[0x24BE6BFB8]();
}

uint64_t sub_22ABDD97C()
{
  return MEMORY[0x24BE6BFC0]();
}

uint64_t sub_22ABDD988()
{
  return MEMORY[0x24BE6BFC8]();
}

uint64_t sub_22ABDD994()
{
  return MEMORY[0x24BE6BFD0]();
}

uint64_t sub_22ABDD9A0()
{
  return MEMORY[0x24BE6BFD8]();
}

uint64_t sub_22ABDD9AC()
{
  return MEMORY[0x24BE6BFE8]();
}

uint64_t sub_22ABDD9B8()
{
  return MEMORY[0x24BE6BFF0]();
}

uint64_t sub_22ABDD9C4()
{
  return MEMORY[0x24BE6BFF8]();
}

uint64_t sub_22ABDD9D0()
{
  return MEMORY[0x24BE6C010]();
}

uint64_t sub_22ABDD9DC()
{
  return MEMORY[0x24BE6C018]();
}

uint64_t sub_22ABDD9E8()
{
  return MEMORY[0x24BE6C020]();
}

uint64_t sub_22ABDD9F4()
{
  return MEMORY[0x24BE6C028]();
}

uint64_t sub_22ABDDA00()
{
  return MEMORY[0x24BE6C038]();
}

uint64_t sub_22ABDDA0C()
{
  return MEMORY[0x24BE6C048]();
}

uint64_t sub_22ABDDA18()
{
  return MEMORY[0x24BE6C058]();
}

uint64_t sub_22ABDDA24()
{
  return MEMORY[0x24BE6C060]();
}

uint64_t sub_22ABDDA30()
{
  return MEMORY[0x24BE6C070]();
}

uint64_t sub_22ABDDA3C()
{
  return MEMORY[0x24BE6C0A0]();
}

uint64_t sub_22ABDDA48()
{
  return MEMORY[0x24BE6C0B0]();
}

uint64_t sub_22ABDDA54()
{
  return MEMORY[0x24BE6C0B8]();
}

uint64_t sub_22ABDDA60()
{
  return MEMORY[0x24BE6C0D0]();
}

uint64_t sub_22ABDDA6C()
{
  return MEMORY[0x24BE6C0D8]();
}

uint64_t sub_22ABDDA78()
{
  return MEMORY[0x24BE6C0E8]();
}

uint64_t sub_22ABDDA84()
{
  return MEMORY[0x24BE6C108]();
}

uint64_t sub_22ABDDA90()
{
  return MEMORY[0x24BE6C110]();
}

uint64_t sub_22ABDDA9C()
{
  return MEMORY[0x24BE6C128]();
}

uint64_t sub_22ABDDAA8()
{
  return MEMORY[0x24BE6C138]();
}

uint64_t sub_22ABDDAB4()
{
  return MEMORY[0x24BE6C148]();
}

uint64_t sub_22ABDDAC0()
{
  return MEMORY[0x24BE6C150]();
}

uint64_t sub_22ABDDACC()
{
  return MEMORY[0x24BE6C160]();
}

uint64_t sub_22ABDDAD8()
{
  return MEMORY[0x24BE6C170]();
}

uint64_t sub_22ABDDAE4()
{
  return MEMORY[0x24BE6C190]();
}

uint64_t sub_22ABDDAF0()
{
  return MEMORY[0x24BE6C1D0]();
}

uint64_t sub_22ABDDAFC()
{
  return MEMORY[0x24BE6C1E0]();
}

uint64_t sub_22ABDDB08()
{
  return MEMORY[0x24BE6C1F0]();
}

uint64_t sub_22ABDDB14()
{
  return MEMORY[0x24BEE72A8]();
}

uint64_t sub_22ABDDB20()
{
  return MEMORY[0x24BEE72F0]();
}

uint64_t sub_22ABDDB2C()
{
  return MEMORY[0x24BEE7320]();
}

uint64_t sub_22ABDDB38()
{
  return MEMORY[0x24BEE7350]();
}

uint64_t sub_22ABDDB44()
{
  return MEMORY[0x24BEE5E50]();
}

uint64_t sub_22ABDDB50()
{
  return MEMORY[0x24BEE73C8]();
}

uint64_t sub_22ABDDB5C()
{
  return MEMORY[0x24BEE7418]();
}

uint64_t sub_22ABDDB68()
{
  return MEMORY[0x24BEE7420]();
}

uint64_t sub_22ABDDB74()
{
  return MEMORY[0x24BE623F8]();
}

uint64_t sub_22ABDDB80()
{
  return MEMORY[0x24BE62408]();
}

uint64_t sub_22ABDDB8C()
{
  return MEMORY[0x24BE62428]();
}

uint64_t sub_22ABDDB98()
{
  return MEMORY[0x24BE62438]();
}

uint64_t sub_22ABDDBA4()
{
  return MEMORY[0x24BE62460]();
}

uint64_t sub_22ABDDBB0()
{
  return MEMORY[0x24BE62470]();
}

uint64_t sub_22ABDDBBC()
{
  return MEMORY[0x24BE62478]();
}

uint64_t sub_22ABDDBC8()
{
  return MEMORY[0x24BE62480]();
}

uint64_t sub_22ABDDBD4()
{
  return MEMORY[0x24BE62490]();
}

uint64_t sub_22ABDDBE0()
{
  return MEMORY[0x24BE624A8]();
}

uint64_t sub_22ABDDBEC()
{
  return MEMORY[0x24BE624B0]();
}

uint64_t sub_22ABDDBF8()
{
  return MEMORY[0x24BE624B8]();
}

uint64_t sub_22ABDDC04()
{
  return MEMORY[0x24BE624C0]();
}

uint64_t sub_22ABDDC10()
{
  return MEMORY[0x24BE624E8]();
}

uint64_t sub_22ABDDC1C()
{
  return MEMORY[0x24BE624F8]();
}

uint64_t sub_22ABDDC28()
{
  return MEMORY[0x24BE62500]();
}

uint64_t sub_22ABDDC34()
{
  return MEMORY[0x24BE62518]();
}

uint64_t sub_22ABDDC40()
{
  return MEMORY[0x24BE62528]();
}

uint64_t sub_22ABDDC4C()
{
  return MEMORY[0x24BE62530]();
}

uint64_t sub_22ABDDC58()
{
  return MEMORY[0x24BE62538]();
}

uint64_t sub_22ABDDC64()
{
  return MEMORY[0x24BE62540]();
}

uint64_t sub_22ABDDC70()
{
  return MEMORY[0x24BE62550]();
}

uint64_t sub_22ABDDC7C()
{
  return MEMORY[0x24BE62558]();
}

uint64_t sub_22ABDDC88()
{
  return MEMORY[0x24BE62580]();
}

uint64_t sub_22ABDDC94()
{
  return MEMORY[0x24BE62590]();
}

uint64_t sub_22ABDDCA0()
{
  return MEMORY[0x24BE62598]();
}

uint64_t sub_22ABDDCAC()
{
  return MEMORY[0x24BE625A0]();
}

uint64_t sub_22ABDDCB8()
{
  return MEMORY[0x24BE625A8]();
}

uint64_t sub_22ABDDCC4()
{
  return MEMORY[0x24BE625B0]();
}

uint64_t sub_22ABDDCD0()
{
  return MEMORY[0x24BE625B8]();
}

uint64_t sub_22ABDDCDC()
{
  return MEMORY[0x24BE625C0]();
}

uint64_t sub_22ABDDCE8()
{
  return MEMORY[0x24BE625C8]();
}

uint64_t sub_22ABDDCF4()
{
  return MEMORY[0x24BE625D0]();
}

uint64_t sub_22ABDDD00()
{
  return MEMORY[0x24BE625D8]();
}

uint64_t sub_22ABDDD0C()
{
  return MEMORY[0x24BE625E0]();
}

uint64_t sub_22ABDDD18()
{
  return MEMORY[0x24BE625E8]();
}

uint64_t sub_22ABDDD24()
{
  return MEMORY[0x24BE625F8]();
}

uint64_t sub_22ABDDD30()
{
  return MEMORY[0x24BE62600]();
}

uint64_t sub_22ABDDD3C()
{
  return MEMORY[0x24BE62618]();
}

uint64_t sub_22ABDDD48()
{
  return MEMORY[0x24BE62630]();
}

uint64_t sub_22ABDDD54()
{
  return MEMORY[0x24BE62638]();
}

uint64_t sub_22ABDDD60()
{
  return MEMORY[0x24BE62640]();
}

uint64_t sub_22ABDDD6C()
{
  return MEMORY[0x24BE62648]();
}

uint64_t sub_22ABDDD78()
{
  return MEMORY[0x24BE62658]();
}

uint64_t sub_22ABDDD84()
{
  return MEMORY[0x24BE62668]();
}

uint64_t sub_22ABDDD90()
{
  return MEMORY[0x24BE62678]();
}

uint64_t sub_22ABDDD9C()
{
  return MEMORY[0x24BE62690]();
}

uint64_t sub_22ABDDDA8()
{
  return MEMORY[0x24BE626A8]();
}

uint64_t sub_22ABDDDB4()
{
  return MEMORY[0x24BE627F8]();
}

uint64_t sub_22ABDDDC0()
{
  return MEMORY[0x24BE62810]();
}

uint64_t sub_22ABDDDCC()
{
  return MEMORY[0x24BE62818]();
}

uint64_t sub_22ABDDDD8()
{
  return MEMORY[0x24BE62820]();
}

uint64_t sub_22ABDDDE4()
{
  return MEMORY[0x24BE62890]();
}

uint64_t sub_22ABDDDF0()
{
  return MEMORY[0x24BE628A8]();
}

uint64_t sub_22ABDDDFC()
{
  return MEMORY[0x24BE628C0]();
}

uint64_t sub_22ABDDE08()
{
  return MEMORY[0x24BE628E0]();
}

uint64_t sub_22ABDDE14()
{
  return MEMORY[0x24BE628E8]();
}

uint64_t sub_22ABDDE20()
{
  return MEMORY[0x24BE62918]();
}

uint64_t sub_22ABDDE2C()
{
  return MEMORY[0x24BE62988]();
}

uint64_t sub_22ABDDE38()
{
  return MEMORY[0x24BE62990]();
}

uint64_t sub_22ABDDE44()
{
  return MEMORY[0x24BE62998]();
}

uint64_t sub_22ABDDE50()
{
  return MEMORY[0x24BE629A0]();
}

uint64_t sub_22ABDDE5C()
{
  return MEMORY[0x24BE629A8]();
}

uint64_t sub_22ABDDE68()
{
  return MEMORY[0x24BE629B8]();
}

uint64_t sub_22ABDDE74()
{
  return MEMORY[0x24BE629C8]();
}

uint64_t sub_22ABDDE80()
{
  return MEMORY[0x24BE629D0]();
}

uint64_t sub_22ABDDE8C()
{
  return MEMORY[0x24BE629E8]();
}

uint64_t sub_22ABDDE98()
{
  return MEMORY[0x24BE629F0]();
}

uint64_t sub_22ABDDEA4()
{
  return MEMORY[0x24BE62A00]();
}

uint64_t sub_22ABDDEB0()
{
  return MEMORY[0x24BE62A08]();
}

uint64_t sub_22ABDDEBC()
{
  return MEMORY[0x24BE62A10]();
}

uint64_t sub_22ABDDEC8()
{
  return MEMORY[0x24BE62A18]();
}

uint64_t sub_22ABDDED4()
{
  return MEMORY[0x24BE62A20]();
}

uint64_t sub_22ABDDEE0()
{
  return MEMORY[0x24BE62A28]();
}

uint64_t sub_22ABDDEEC()
{
  return MEMORY[0x24BE62A30]();
}

uint64_t sub_22ABDDEF8()
{
  return MEMORY[0x24BE62A38]();
}

uint64_t sub_22ABDDF04()
{
  return MEMORY[0x24BE62A40]();
}

uint64_t sub_22ABDDF10()
{
  return MEMORY[0x24BE62A48]();
}

uint64_t sub_22ABDDF1C()
{
  return MEMORY[0x24BE62A58]();
}

uint64_t sub_22ABDDF28()
{
  return MEMORY[0x24BE62A60]();
}

uint64_t sub_22ABDDF34()
{
  return MEMORY[0x24BE62A70]();
}

uint64_t sub_22ABDDF40()
{
  return MEMORY[0x24BE62A78]();
}

uint64_t sub_22ABDDF4C()
{
  return MEMORY[0x24BE62A90]();
}

uint64_t sub_22ABDDF58()
{
  return MEMORY[0x24BE62A98]();
}

uint64_t sub_22ABDDF64()
{
  return MEMORY[0x24BE62AA8]();
}

uint64_t sub_22ABDDF70()
{
  return MEMORY[0x24BE62AB0]();
}

uint64_t sub_22ABDDF7C()
{
  return MEMORY[0x24BE62AB8]();
}

uint64_t sub_22ABDDF88()
{
  return MEMORY[0x24BE62AC8]();
}

uint64_t sub_22ABDDF94()
{
  return MEMORY[0x24BE62AE0]();
}

uint64_t sub_22ABDDFA0()
{
  return MEMORY[0x24BE62AE8]();
}

uint64_t sub_22ABDDFAC()
{
  return MEMORY[0x24BE62AF8]();
}

uint64_t sub_22ABDDFB8()
{
  return MEMORY[0x24BE62B10]();
}

uint64_t sub_22ABDDFC4()
{
  return MEMORY[0x24BE62B18]();
}

uint64_t sub_22ABDDFD0()
{
  return MEMORY[0x24BE62B20]();
}

uint64_t sub_22ABDDFDC()
{
  return MEMORY[0x24BE62B28]();
}

uint64_t sub_22ABDDFE8()
{
  return MEMORY[0x24BE62B30]();
}

uint64_t sub_22ABDDFF4()
{
  return MEMORY[0x24BE62B38]();
}

uint64_t sub_22ABDE000()
{
  return MEMORY[0x24BE62B40]();
}

uint64_t sub_22ABDE00C()
{
  return MEMORY[0x24BE62B48]();
}

uint64_t sub_22ABDE018()
{
  return MEMORY[0x24BE62B58]();
}

uint64_t sub_22ABDE024()
{
  return MEMORY[0x24BE62B60]();
}

uint64_t sub_22ABDE030()
{
  return MEMORY[0x24BE62B68]();
}

uint64_t sub_22ABDE03C()
{
  return MEMORY[0x24BE62B80]();
}

uint64_t sub_22ABDE048()
{
  return MEMORY[0x24BE62B88]();
}

uint64_t sub_22ABDE054()
{
  return MEMORY[0x24BE62B98]();
}

uint64_t sub_22ABDE060()
{
  return MEMORY[0x24BE62BA8]();
}

uint64_t sub_22ABDE06C()
{
  return MEMORY[0x24BE62BB0]();
}

uint64_t sub_22ABDE078()
{
  return MEMORY[0x24BE62BB8]();
}

uint64_t sub_22ABDE084()
{
  return MEMORY[0x24BE62BC0]();
}

uint64_t sub_22ABDE090()
{
  return MEMORY[0x24BE62BC8]();
}

uint64_t sub_22ABDE09C()
{
  return MEMORY[0x24BE62BD0]();
}

uint64_t sub_22ABDE0A8()
{
  return MEMORY[0x24BE62BF0]();
}

uint64_t sub_22ABDE0B4()
{
  return MEMORY[0x24BE62BF8]();
}

uint64_t sub_22ABDE0C0()
{
  return MEMORY[0x24BE62C00]();
}

uint64_t sub_22ABDE0CC()
{
  return MEMORY[0x24BE62C08]();
}

uint64_t sub_22ABDE0D8()
{
  return MEMORY[0x24BE62C10]();
}

uint64_t sub_22ABDE0E4()
{
  return MEMORY[0x24BE62C28]();
}

uint64_t sub_22ABDE0F0()
{
  return MEMORY[0x24BE62C30]();
}

uint64_t sub_22ABDE0FC()
{
  return MEMORY[0x24BE62C38]();
}

uint64_t sub_22ABDE108()
{
  return MEMORY[0x24BE62C40]();
}

uint64_t sub_22ABDE114()
{
  return MEMORY[0x24BE62C48]();
}

uint64_t sub_22ABDE120()
{
  return MEMORY[0x24BE62C50]();
}

uint64_t sub_22ABDE12C()
{
  return MEMORY[0x24BE62C58]();
}

uint64_t sub_22ABDE138()
{
  return MEMORY[0x24BE62C60]();
}

uint64_t sub_22ABDE144()
{
  return MEMORY[0x24BE62C78]();
}

uint64_t sub_22ABDE150()
{
  return MEMORY[0x24BE62C80]();
}

uint64_t sub_22ABDE15C()
{
  return MEMORY[0x24BE62C88]();
}

uint64_t sub_22ABDE168()
{
  return MEMORY[0x24BE62C90]();
}

uint64_t sub_22ABDE174()
{
  return MEMORY[0x24BE62C98]();
}

uint64_t sub_22ABDE180()
{
  return MEMORY[0x24BE62CA0]();
}

uint64_t sub_22ABDE18C()
{
  return MEMORY[0x24BE62CA8]();
}

uint64_t sub_22ABDE198()
{
  return MEMORY[0x24BE62CB0]();
}

uint64_t sub_22ABDE1A4()
{
  return MEMORY[0x24BE62CC0]();
}

uint64_t sub_22ABDE1B0()
{
  return MEMORY[0x24BE62CC8]();
}

uint64_t sub_22ABDE1BC()
{
  return MEMORY[0x24BE62CD0]();
}

uint64_t sub_22ABDE1C8()
{
  return MEMORY[0x24BE62CD8]();
}

uint64_t sub_22ABDE1D4()
{
  return MEMORY[0x24BE62CF0]();
}

uint64_t sub_22ABDE1E0()
{
  return MEMORY[0x24BE62CF8]();
}

uint64_t sub_22ABDE1EC()
{
  return MEMORY[0x24BE62D00]();
}

uint64_t sub_22ABDE1F8()
{
  return MEMORY[0x24BE62D08]();
}

uint64_t sub_22ABDE204()
{
  return MEMORY[0x24BE62D10]();
}

uint64_t sub_22ABDE210()
{
  return MEMORY[0x24BE62D28]();
}

uint64_t sub_22ABDE21C()
{
  return MEMORY[0x24BE62D30]();
}

uint64_t sub_22ABDE228()
{
  return MEMORY[0x24BE62D38]();
}

uint64_t sub_22ABDE234()
{
  return MEMORY[0x24BE62D40]();
}

uint64_t sub_22ABDE240()
{
  return MEMORY[0x24BE62D48]();
}

uint64_t sub_22ABDE24C()
{
  return MEMORY[0x24BE62D50]();
}

uint64_t sub_22ABDE258()
{
  return MEMORY[0x24BE62D58]();
}

uint64_t sub_22ABDE264()
{
  return MEMORY[0x24BE62D60]();
}

uint64_t sub_22ABDE270()
{
  return MEMORY[0x24BE62D68]();
}

uint64_t sub_22ABDE27C()
{
  return MEMORY[0x24BE62D70]();
}

uint64_t sub_22ABDE288()
{
  return MEMORY[0x24BE62D78]();
}

uint64_t sub_22ABDE294()
{
  return MEMORY[0x24BE62D80]();
}

uint64_t sub_22ABDE2A0()
{
  return MEMORY[0x24BE62D88]();
}

uint64_t sub_22ABDE2AC()
{
  return MEMORY[0x24BE62D90]();
}

uint64_t sub_22ABDE2B8()
{
  return MEMORY[0x24BE62D98]();
}

uint64_t sub_22ABDE2C4()
{
  return MEMORY[0x24BE62DA0]();
}

uint64_t sub_22ABDE2D0()
{
  return MEMORY[0x24BE62DA8]();
}

uint64_t sub_22ABDE2DC()
{
  return MEMORY[0x24BE62DB0]();
}

uint64_t sub_22ABDE2E8()
{
  return MEMORY[0x24BE62DB8]();
}

uint64_t sub_22ABDE2F4()
{
  return MEMORY[0x24BE62DC0]();
}

uint64_t sub_22ABDE300()
{
  return MEMORY[0x24BE62DC8]();
}

uint64_t sub_22ABDE30C()
{
  return MEMORY[0x24BE62DE0]();
}

uint64_t sub_22ABDE318()
{
  return MEMORY[0x24BE62DE8]();
}

uint64_t sub_22ABDE324()
{
  return MEMORY[0x24BE62DF0]();
}

uint64_t sub_22ABDE330()
{
  return MEMORY[0x24BE62E00]();
}

uint64_t sub_22ABDE33C()
{
  return MEMORY[0x24BE62E10]();
}

uint64_t sub_22ABDE348()
{
  return MEMORY[0x24BE62E18]();
}

uint64_t sub_22ABDE354()
{
  return MEMORY[0x24BE62E20]();
}

uint64_t sub_22ABDE360()
{
  return MEMORY[0x24BE62E28]();
}

uint64_t sub_22ABDE36C()
{
  return MEMORY[0x24BE62E30]();
}

uint64_t sub_22ABDE378()
{
  return MEMORY[0x24BE62E38]();
}

uint64_t sub_22ABDE384()
{
  return MEMORY[0x24BE62E40]();
}

uint64_t sub_22ABDE390()
{
  return MEMORY[0x24BE62E48]();
}

uint64_t sub_22ABDE39C()
{
  return MEMORY[0x24BE62E50]();
}

uint64_t sub_22ABDE3A8()
{
  return MEMORY[0x24BE62E58]();
}

uint64_t sub_22ABDE3B4()
{
  return MEMORY[0x24BE62E60]();
}

uint64_t sub_22ABDE3C0()
{
  return MEMORY[0x24BE62E68]();
}

uint64_t sub_22ABDE3CC()
{
  return MEMORY[0x24BE62E70]();
}

uint64_t sub_22ABDE3D8()
{
  return MEMORY[0x24BE62E78]();
}

uint64_t sub_22ABDE3E4()
{
  return MEMORY[0x24BE62E88]();
}

uint64_t sub_22ABDE3F0()
{
  return MEMORY[0x24BE62E90]();
}

uint64_t sub_22ABDE3FC()
{
  return MEMORY[0x24BE62E98]();
}

uint64_t sub_22ABDE408()
{
  return MEMORY[0x24BE62EA0]();
}

uint64_t sub_22ABDE414()
{
  return MEMORY[0x24BE62EA8]();
}

uint64_t sub_22ABDE420()
{
  return MEMORY[0x24BE62EC0]();
}

uint64_t sub_22ABDE42C()
{
  return MEMORY[0x24BE62EC8]();
}

uint64_t sub_22ABDE438()
{
  return MEMORY[0x24BE62ED0]();
}

uint64_t sub_22ABDE444()
{
  return MEMORY[0x24BE62ED8]();
}

uint64_t sub_22ABDE450()
{
  return MEMORY[0x24BE62EE0]();
}

uint64_t sub_22ABDE45C()
{
  return MEMORY[0x24BE62EF0]();
}

uint64_t sub_22ABDE468()
{
  return MEMORY[0x24BE62F08]();
}

uint64_t sub_22ABDE474()
{
  return MEMORY[0x24BE62F20]();
}

uint64_t sub_22ABDE480()
{
  return MEMORY[0x24BE62F28]();
}

uint64_t sub_22ABDE48C()
{
  return MEMORY[0x24BE62F38]();
}

uint64_t sub_22ABDE498()
{
  return MEMORY[0x24BE62F40]();
}

uint64_t sub_22ABDE4A4()
{
  return MEMORY[0x24BE62F48]();
}

uint64_t sub_22ABDE4B0()
{
  return MEMORY[0x24BE62F58]();
}

uint64_t sub_22ABDE4BC()
{
  return MEMORY[0x24BE62F68]();
}

uint64_t sub_22ABDE4C8()
{
  return MEMORY[0x24BE62F70]();
}

uint64_t sub_22ABDE4D4()
{
  return MEMORY[0x24BE62F78]();
}

uint64_t sub_22ABDE4E0()
{
  return MEMORY[0x24BE62F80]();
}

uint64_t sub_22ABDE4EC()
{
  return MEMORY[0x24BE62F88]();
}

uint64_t sub_22ABDE4F8()
{
  return MEMORY[0x24BE62FA0]();
}

uint64_t sub_22ABDE504()
{
  return MEMORY[0x24BE62FB0]();
}

uint64_t sub_22ABDE510()
{
  return MEMORY[0x24BE62FB8]();
}

uint64_t sub_22ABDE51C()
{
  return MEMORY[0x24BE62FD0]();
}

uint64_t sub_22ABDE528()
{
  return MEMORY[0x24BE62FD8]();
}

uint64_t sub_22ABDE534()
{
  return MEMORY[0x24BE62FF0]();
}

uint64_t sub_22ABDE540()
{
  return MEMORY[0x24BE63000]();
}

uint64_t sub_22ABDE54C()
{
  return MEMORY[0x24BE63008]();
}

uint64_t sub_22ABDE558()
{
  return MEMORY[0x24BE63010]();
}

uint64_t sub_22ABDE564()
{
  return MEMORY[0x24BE63018]();
}

uint64_t sub_22ABDE570()
{
  return MEMORY[0x24BE63020]();
}

uint64_t sub_22ABDE57C()
{
  return MEMORY[0x24BE63028]();
}

uint64_t sub_22ABDE588()
{
  return MEMORY[0x24BE63030]();
}

uint64_t sub_22ABDE594()
{
  return MEMORY[0x24BE63038]();
}

uint64_t sub_22ABDE5A0()
{
  return MEMORY[0x24BE63040]();
}

uint64_t sub_22ABDE5AC()
{
  return MEMORY[0x24BE63048]();
}

uint64_t sub_22ABDE5B8()
{
  return MEMORY[0x24BE63050]();
}

uint64_t sub_22ABDE5C4()
{
  return MEMORY[0x24BE63068]();
}

uint64_t sub_22ABDE5D0()
{
  return MEMORY[0x24BE63078]();
}

uint64_t sub_22ABDE5DC()
{
  return MEMORY[0x24BE63080]();
}

uint64_t sub_22ABDE5E8()
{
  return MEMORY[0x24BE63088]();
}

uint64_t sub_22ABDE5F4()
{
  return MEMORY[0x24BE63090]();
}

uint64_t sub_22ABDE600()
{
  return MEMORY[0x24BE63098]();
}

uint64_t sub_22ABDE60C()
{
  return MEMORY[0x24BE630C8]();
}

uint64_t sub_22ABDE618()
{
  return MEMORY[0x24BE630E0]();
}

uint64_t sub_22ABDE624()
{
  return MEMORY[0x24BE630E8]();
}

uint64_t sub_22ABDE630()
{
  return MEMORY[0x24BE630F0]();
}

uint64_t sub_22ABDE63C()
{
  return MEMORY[0x24BE630F8]();
}

uint64_t sub_22ABDE648()
{
  return MEMORY[0x24BE63100]();
}

uint64_t sub_22ABDE654()
{
  return MEMORY[0x24BE63110]();
}

uint64_t sub_22ABDE660()
{
  return MEMORY[0x24BE63118]();
}

uint64_t sub_22ABDE66C()
{
  return MEMORY[0x24BE63120]();
}

uint64_t sub_22ABDE678()
{
  return MEMORY[0x24BE63128]();
}

uint64_t sub_22ABDE684()
{
  return MEMORY[0x24BE63130]();
}

uint64_t sub_22ABDE690()
{
  return MEMORY[0x24BE63138]();
}

uint64_t sub_22ABDE69C()
{
  return MEMORY[0x24BE63150]();
}

uint64_t sub_22ABDE6A8()
{
  return MEMORY[0x24BE63158]();
}

uint64_t sub_22ABDE6B4()
{
  return MEMORY[0x24BE63160]();
}

uint64_t sub_22ABDE6C0()
{
  return MEMORY[0x24BE63178]();
}

uint64_t sub_22ABDE6CC()
{
  return MEMORY[0x24BE63180]();
}

uint64_t sub_22ABDE6D8()
{
  return MEMORY[0x24BE63188]();
}

uint64_t sub_22ABDE6E4()
{
  return MEMORY[0x24BE63190]();
}

uint64_t sub_22ABDE6F0()
{
  return MEMORY[0x24BE63198]();
}

uint64_t sub_22ABDE6FC()
{
  return MEMORY[0x24BE631A0]();
}

uint64_t sub_22ABDE708()
{
  return MEMORY[0x24BE631A8]();
}

uint64_t sub_22ABDE714()
{
  return MEMORY[0x24BE631B0]();
}

uint64_t sub_22ABDE720()
{
  return MEMORY[0x24BE631C0]();
}

uint64_t sub_22ABDE72C()
{
  return MEMORY[0x24BE631C8]();
}

uint64_t sub_22ABDE738()
{
  return MEMORY[0x24BE631D0]();
}

uint64_t sub_22ABDE744()
{
  return MEMORY[0x24BE631D8]();
}

uint64_t sub_22ABDE750()
{
  return MEMORY[0x24BE631E0]();
}

uint64_t sub_22ABDE75C()
{
  return MEMORY[0x24BE631F0]();
}

uint64_t sub_22ABDE768()
{
  return MEMORY[0x24BE63200]();
}

uint64_t sub_22ABDE774()
{
  return MEMORY[0x24BE63208]();
}

uint64_t sub_22ABDE780()
{
  return MEMORY[0x24BE63210]();
}

uint64_t sub_22ABDE78C()
{
  return MEMORY[0x24BE632D8]();
}

uint64_t sub_22ABDE798()
{
  return MEMORY[0x24BE632E8]();
}

uint64_t sub_22ABDE7A4()
{
  return MEMORY[0x24BE632F0]();
}

uint64_t sub_22ABDE7B0()
{
  return MEMORY[0x24BE63300]();
}

uint64_t sub_22ABDE7BC()
{
  return MEMORY[0x24BEE6210]();
}

uint64_t sub_22ABDE7C8()
{
  return MEMORY[0x24BEE62A8]();
}

uint64_t sub_22ABDE7D4()
{
  return MEMORY[0x24BEE6368]();
}

uint64_t sub_22ABDE7E0()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_22ABDE7EC()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_22ABDE7F8()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_22ABDE804()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_22ABDE810()
{
  return MEMORY[0x24BDBFC10]();
}

uint64_t sub_22ABDE81C()
{
  return MEMORY[0x24BDBFC18]();
}

uint64_t sub_22ABDE828()
{
  return MEMORY[0x24BDBFC20]();
}

uint64_t sub_22ABDE834()
{
  return MEMORY[0x24BDBFC30]();
}

uint64_t sub_22ABDE840()
{
  return MEMORY[0x24BDBFC38]();
}

uint64_t sub_22ABDE84C()
{
  return MEMORY[0x24BDBFC40]();
}

uint64_t sub_22ABDE858()
{
  return MEMORY[0x24BDBFC48]();
}

uint64_t sub_22ABDE864()
{
  return MEMORY[0x24BDBFC50]();
}

uint64_t sub_22ABDE870()
{
  return MEMORY[0x24BDBFC58]();
}

uint64_t sub_22ABDE87C()
{
  return MEMORY[0x24BDBFC68]();
}

uint64_t sub_22ABDE888()
{
  return MEMORY[0x24BDBFC78]();
}

uint64_t sub_22ABDE894()
{
  return MEMORY[0x24BDBFC80]();
}

uint64_t sub_22ABDE8A0()
{
  return MEMORY[0x24BDBFC88]();
}

uint64_t sub_22ABDE8AC()
{
  return MEMORY[0x24BDBFCB0]();
}

uint64_t sub_22ABDE8B8()
{
  return MEMORY[0x24BDBFCC0]();
}

uint64_t sub_22ABDE8C4()
{
  return MEMORY[0x24BDBFD10]();
}

uint64_t sub_22ABDE8D0()
{
  return MEMORY[0x24BDBFD38]();
}

uint64_t sub_22ABDE8DC()
{
  return MEMORY[0x24BDBFD40]();
}

uint64_t sub_22ABDE8E8()
{
  return MEMORY[0x24BDBFD68]();
}

uint64_t sub_22ABDE8F4()
{
  return MEMORY[0x24BDBFD70]();
}

uint64_t sub_22ABDE900()
{
  return MEMORY[0x24BDBFD78]();
}

uint64_t sub_22ABDE90C()
{
  return MEMORY[0x24BDBFD80]();
}

uint64_t sub_22ABDE918()
{
  return MEMORY[0x24BDBFD88]();
}

uint64_t sub_22ABDE924()
{
  return MEMORY[0x24BDBFD98]();
}

uint64_t sub_22ABDE930()
{
  return MEMORY[0x24BDBFDB0]();
}

uint64_t sub_22ABDE93C()
{
  return MEMORY[0x24BDBFDB8]();
}

uint64_t sub_22ABDE948()
{
  return MEMORY[0x24BDBFDC0]();
}

uint64_t sub_22ABDE954()
{
  return MEMORY[0x24BDBFDC8]();
}

uint64_t sub_22ABDE960()
{
  return MEMORY[0x24BDBFDD0]();
}

uint64_t sub_22ABDE96C()
{
  return MEMORY[0x24BDBFDD8]();
}

uint64_t sub_22ABDE978()
{
  return MEMORY[0x24BDBFDE0]();
}

uint64_t sub_22ABDE984()
{
  return MEMORY[0x24BDBFE08]();
}

uint64_t sub_22ABDE990()
{
  return MEMORY[0x24BDB9B98]();
}

uint64_t sub_22ABDE99C()
{
  return MEMORY[0x24BDBA128]();
}

uint64_t sub_22ABDE9A8()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_22ABDE9B4()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_22ABDE9C0()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_22ABDE9CC()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_22ABDE9D8()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_22ABDE9E4()
{
  return MEMORY[0x24BEE01A8]();
}

uint64_t sub_22ABDE9F0()
{
  return MEMORY[0x24BEE01B8]();
}

uint64_t sub_22ABDE9FC()
{
  return MEMORY[0x24BEE67F8]();
}

uint64_t sub_22ABDEA08()
{
  return MEMORY[0x24BEE01C0]();
}

uint64_t sub_22ABDEA14()
{
  return MEMORY[0x24BEE01E0]();
}

uint64_t sub_22ABDEA20()
{
  return MEMORY[0x24BEE01E8]();
}

uint64_t sub_22ABDEA2C()
{
  return MEMORY[0x24BEE01F0]();
}

uint64_t sub_22ABDEA38()
{
  return MEMORY[0x24BEE01F8]();
}

uint64_t sub_22ABDEA44()
{
  return MEMORY[0x24BEE0220]();
}

uint64_t sub_22ABDEA50()
{
  return MEMORY[0x24BEE0228]();
}

uint64_t sub_22ABDEA5C()
{
  return MEMORY[0x24BEE0230]();
}

uint64_t sub_22ABDEA68()
{
  return MEMORY[0x24BEE0238]();
}

uint64_t sub_22ABDEA74()
{
  return MEMORY[0x24BEE0240]();
}

uint64_t sub_22ABDEA80()
{
  return MEMORY[0x24BEE0250]();
}

uint64_t sub_22ABDEA8C()
{
  return MEMORY[0x24BEE0258]();
}

uint64_t sub_22ABDEA98()
{
  return MEMORY[0x24BEE0260]();
}

uint64_t sub_22ABDEAA4()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_22ABDEAB0()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_22ABDEABC()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_22ABDEAC8()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_22ABDEAD4()
{
  return MEMORY[0x24BEE02B8]();
}

uint64_t sub_22ABDEAE0()
{
  return MEMORY[0x24BEE0300]();
}

uint64_t sub_22ABDEAEC()
{
  return MEMORY[0x24BEE0328]();
}

uint64_t sub_22ABDEAF8()
{
  return MEMORY[0x24BEE03B0]();
}

uint64_t sub_22ABDEB04()
{
  return MEMORY[0x24BEE03D0]();
}

uint64_t sub_22ABDEB10()
{
  return MEMORY[0x24BEE03E0]();
}

uint64_t sub_22ABDEB1C()
{
  return MEMORY[0x24BEE0450]();
}

uint64_t sub_22ABDEB28()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_22ABDEB34()
{
  return MEMORY[0x24BEE0470]();
}

uint64_t sub_22ABDEB40()
{
  return MEMORY[0x24BEE0480]();
}

uint64_t sub_22ABDEB4C()
{
  return MEMORY[0x24BEE0490]();
}

uint64_t sub_22ABDEB58()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_22ABDEB64()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_22ABDEB70()
{
  return MEMORY[0x24BEE0500]();
}

uint64_t sub_22ABDEB7C()
{
  return MEMORY[0x24BEE0518]();
}

uint64_t sub_22ABDEB88()
{
  return MEMORY[0x24BEE0548]();
}

uint64_t sub_22ABDEB94()
{
  return MEMORY[0x24BEE0568]();
}

uint64_t sub_22ABDEBA0()
{
  return MEMORY[0x24BEE0578]();
}

uint64_t sub_22ABDEBAC()
{
  return MEMORY[0x24BEE0588]();
}

uint64_t sub_22ABDEBB8()
{
  return MEMORY[0x24BEE05A0]();
}

uint64_t sub_22ABDEBC4()
{
  return MEMORY[0x24BEE05C0]();
}

uint64_t sub_22ABDEBD0()
{
  return MEMORY[0x24BEE05D0]();
}

uint64_t sub_22ABDEBDC()
{
  return MEMORY[0x24BEE05E8]();
}

uint64_t sub_22ABDEBE8()
{
  return MEMORY[0x24BEE05F0]();
}

uint64_t sub_22ABDEBF4()
{
  return MEMORY[0x24BEE05F8]();
}

uint64_t sub_22ABDEC00()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_22ABDEC0C()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_22ABDEC18()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_22ABDEC24()
{
  return MEMORY[0x24BEE07D8]();
}

uint64_t sub_22ABDEC30()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_22ABDEC3C()
{
  return MEMORY[0x24BEE07E8]();
}

uint64_t sub_22ABDEC48()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_22ABDEC54()
{
  return MEMORY[0x24BEE07F8]();
}

uint64_t sub_22ABDEC60()
{
  return MEMORY[0x24BEE0800]();
}

uint64_t sub_22ABDEC6C()
{
  return MEMORY[0x24BEE0808]();
}

uint64_t sub_22ABDEC78()
{
  return MEMORY[0x24BEE0838]();
}

uint64_t sub_22ABDEC84()
{
  return MEMORY[0x24BEE0840]();
}

uint64_t sub_22ABDEC90()
{
  return MEMORY[0x24BEE0850]();
}

uint64_t sub_22ABDEC9C()
{
  return MEMORY[0x24BEE0858]();
}

uint64_t sub_22ABDECA8()
{
  return MEMORY[0x24BEE0868]();
}

uint64_t sub_22ABDECB4()
{
  return MEMORY[0x24BEE0880]();
}

uint64_t sub_22ABDECC0()
{
  return MEMORY[0x24BEE08A0]();
}

uint64_t sub_22ABDECCC()
{
  return MEMORY[0x24BEE08B8]();
}

uint64_t sub_22ABDECD8()
{
  return MEMORY[0x24BEE08C8]();
}

uint64_t sub_22ABDECE4()
{
  return MEMORY[0x24BEE0958]();
}

uint64_t sub_22ABDECF0()
{
  return MEMORY[0x24BEE0960]();
}

uint64_t sub_22ABDECFC()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_22ABDED08()
{
  return MEMORY[0x24BEE0990]();
}

uint64_t sub_22ABDED14()
{
  return MEMORY[0x24BEE0998]();
}

uint64_t sub_22ABDED20()
{
  return MEMORY[0x24BEE09B0]();
}

uint64_t sub_22ABDED2C()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_22ABDED38()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_22ABDED44()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_22ABDED50()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_22ABDED5C()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_22ABDED68()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_22ABDED74()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_22ABDED80()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_22ABDED8C()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_22ABDED98()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_22ABDEDA4()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_22ABDEDB0()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_22ABDEDBC()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_22ABDEDC8()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_22ABDEDD4()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_22ABDEDE0()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_22ABDEDEC()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_22ABDEDF8()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_22ABDEE04()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_22ABDEE10()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_22ABDEE1C()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_22ABDEE28()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_22ABDEE34()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_22ABDEE40()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_22ABDEE4C()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_22ABDEE58()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_22ABDEE64()
{
  return MEMORY[0x24BEE0DF0]();
}

uint64_t sub_22ABDEE70()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_22ABDEE7C()
{
  return MEMORY[0x24BEE0E00]();
}

uint64_t sub_22ABDEE88()
{
  return MEMORY[0x24BEE0E10]();
}

uint64_t sub_22ABDEE94()
{
  return MEMORY[0x24BEE0E30]();
}

uint64_t sub_22ABDEEA0()
{
  return MEMORY[0x24BEE0E38]();
}

uint64_t sub_22ABDEEAC()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t sub_22ABDEEB8()
{
  return MEMORY[0x24BEE0E48]();
}

uint64_t sub_22ABDEEC4()
{
  return MEMORY[0x24BEE0E50]();
}

uint64_t sub_22ABDEED0()
{
  return MEMORY[0x24BEE0E60]();
}

uint64_t sub_22ABDEEDC()
{
  return MEMORY[0x24BEE0E68]();
}

uint64_t sub_22ABDEEE8()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_22ABDEEF4()
{
  return MEMORY[0x24BEE0E90]();
}

uint64_t sub_22ABDEF00()
{
  return MEMORY[0x24BEE0E98]();
}

uint64_t sub_22ABDEF0C()
{
  return MEMORY[0x24BEE0EA0]();
}

uint64_t sub_22ABDEF18()
{
  return MEMORY[0x24BEE0EB8]();
}

uint64_t sub_22ABDEF24()
{
  return MEMORY[0x24BEE0EC0]();
}

uint64_t sub_22ABDEF30()
{
  return MEMORY[0x24BEE0EE0]();
}

uint64_t sub_22ABDEF3C()
{
  return MEMORY[0x24BEE0EF8]();
}

uint64_t sub_22ABDEF48()
{
  return MEMORY[0x24BEE0F08]();
}

uint64_t sub_22ABDEF54()
{
  return MEMORY[0x24BEE0F10]();
}

uint64_t sub_22ABDEF60()
{
  return MEMORY[0x24BEE0F18]();
}

uint64_t sub_22ABDEF6C()
{
  return MEMORY[0x24BEE0F30]();
}

uint64_t sub_22ABDEF78()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_22ABDEF84()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_22ABDEF90()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_22ABDEF9C()
{
  return MEMORY[0x24BEE1068]();
}

uint64_t sub_22ABDEFA8()
{
  return MEMORY[0x24BEE1070]();
}

uint64_t sub_22ABDEFB4()
{
  return MEMORY[0x24BEE1078]();
}

uint64_t sub_22ABDEFC0()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_22ABDEFCC()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_22ABDEFD8()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_22ABDEFE4()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_22ABDEFF0()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_22ABDEFFC()
{
  return MEMORY[0x24BEE1118]();
}

uint64_t sub_22ABDF008()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_22ABDF014()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_22ABDF020()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_22ABDF02C()
{
  return MEMORY[0x24BE6C220]();
}

uint64_t sub_22ABDF038()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_22ABDF044()
{
  return MEMORY[0x24BEE1150]();
}

uint64_t sub_22ABDF050()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_22ABDF05C()
{
  return MEMORY[0x24BEE1178]();
}

uint64_t sub_22ABDF068()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_22ABDF074()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_22ABDF080()
{
  return MEMORY[0x24BEE1198]();
}

uint64_t sub_22ABDF08C()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_22ABDF098()
{
  return MEMORY[0x24BEE11A8]();
}

uint64_t sub_22ABDF0A4()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_22ABDF0B0()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_22ABDF0BC()
{
  return MEMORY[0x24BEE11F0]();
}

uint64_t sub_22ABDF0C8()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_22ABDF0D4()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_22ABDF0E0()
{
  return MEMORY[0x24BEE1230]();
}

uint64_t sub_22ABDF0EC()
{
  return MEMORY[0x24BEE1240]();
}

uint64_t sub_22ABDF0F8()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_22ABDF104()
{
  return MEMORY[0x24BEE1268]();
}

uint64_t sub_22ABDF110()
{
  return MEMORY[0x24BEE1278]();
}

uint64_t sub_22ABDF11C()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t sub_22ABDF128()
{
  return MEMORY[0x24BEE1290]();
}

uint64_t sub_22ABDF134()
{
  return MEMORY[0x24BEE1298]();
}

uint64_t sub_22ABDF140()
{
  return MEMORY[0x24BEE1308]();
}

uint64_t sub_22ABDF14C()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_22ABDF158()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_22ABDF164()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_22ABDF170()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_22ABDF17C()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_22ABDF188()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_22ABDF194()
{
  return MEMORY[0x24BEE68D8]();
}

uint64_t sub_22ABDF1A0()
{
  return MEMORY[0x24BEE6908]();
}

uint64_t sub_22ABDF1AC()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_22ABDF1B8()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_22ABDF1C4()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_22ABDF1D0()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_22ABDF1DC()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_22ABDF1E8()
{
  return MEMORY[0x24BEE6BA0]();
}

uint64_t sub_22ABDF1F4()
{
  return MEMORY[0x24BEE6BE0]();
}

uint64_t sub_22ABDF200()
{
  return MEMORY[0x24BEE6C08]();
}

uint64_t sub_22ABDF20C()
{
  return MEMORY[0x24BEE6C28]();
}

uint64_t sub_22ABDF218()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_22ABDF224()
{
  return MEMORY[0x24BEE13A0]();
}

uint64_t sub_22ABDF230()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_22ABDF23C()
{
  return MEMORY[0x24BEE1478]();
}

uint64_t sub_22ABDF248()
{
  return MEMORY[0x24BEE1488]();
}

uint64_t sub_22ABDF254()
{
  return MEMORY[0x24BEE14B8]();
}

uint64_t sub_22ABDF260()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_22ABDF26C()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_22ABDF278()
{
  return MEMORY[0x24BEE1628]();
}

uint64_t sub_22ABDF284()
{
  return MEMORY[0x24BEE1638]();
}

uint64_t sub_22ABDF290()
{
  return MEMORY[0x24BEE1640]();
}

uint64_t sub_22ABDF29C()
{
  return MEMORY[0x24BEE1648]();
}

uint64_t sub_22ABDF2A8()
{
  return MEMORY[0x24BEE1668]();
}

uint64_t sub_22ABDF2B4()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_22ABDF2C0()
{
  return MEMORY[0x24BEE1690]();
}

uint64_t sub_22ABDF2CC()
{
  return MEMORY[0x24BEE16C0]();
}

uint64_t sub_22ABDF2D8()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_22ABDF2E4()
{
  return MEMORY[0x24BEE16F8]();
}

uint64_t sub_22ABDF2F0()
{
  return MEMORY[0x24BDCFD18]();
}

uint64_t sub_22ABDF2FC()
{
  return MEMORY[0x24BEE1758]();
}

uint64_t sub_22ABDF308()
{
  return MEMORY[0x24BEE17F8]();
}

uint64_t sub_22ABDF314()
{
  return MEMORY[0x24BEE1800]();
}

uint64_t sub_22ABDF320()
{
  return MEMORY[0x24BEE1820]();
}

uint64_t sub_22ABDF32C()
{
  return MEMORY[0x24BEE1870]();
}

uint64_t sub_22ABDF338()
{
  return MEMORY[0x24BEE1890]();
}

uint64_t sub_22ABDF344()
{
  return MEMORY[0x24BEE1898]();
}

uint64_t sub_22ABDF350()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_22ABDF35C()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_22ABDF368()
{
  return MEMORY[0x24BEE18E8]();
}

uint64_t sub_22ABDF374()
{
  return MEMORY[0x24BEE18F8]();
}

uint64_t sub_22ABDF380()
{
  return MEMORY[0x24BEE1900]();
}

uint64_t sub_22ABDF38C()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_22ABDF398()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_22ABDF3A4()
{
  return MEMORY[0x24BEE1930]();
}

uint64_t sub_22ABDF3B0()
{
  return MEMORY[0x24BEE1948]();
}

uint64_t sub_22ABDF3BC()
{
  return MEMORY[0x24BEE1950]();
}

uint64_t sub_22ABDF3C8()
{
  return MEMORY[0x24BEE1958]();
}

uint64_t sub_22ABDF3D4()
{
  return MEMORY[0x24BEE1960]();
}

uint64_t sub_22ABDF3E0()
{
  return MEMORY[0x24BEE1968]();
}

uint64_t sub_22ABDF3EC()
{
  return MEMORY[0x24BEE1970]();
}

uint64_t sub_22ABDF3F8()
{
  return MEMORY[0x24BEE1978]();
}

uint64_t sub_22ABDF404()
{
  return MEMORY[0x24BEE1980]();
}

uint64_t sub_22ABDF410()
{
  return MEMORY[0x24BEE1988]();
}

uint64_t sub_22ABDF41C()
{
  return MEMORY[0x24BEE1990]();
}

uint64_t sub_22ABDF428()
{
  return MEMORY[0x24BEE19A8]();
}

uint64_t sub_22ABDF434()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_22ABDF440()
{
  return MEMORY[0x24BEE19C0]();
}

uint64_t sub_22ABDF44C()
{
  return MEMORY[0x24BEE19D0]();
}

uint64_t sub_22ABDF458()
{
  return MEMORY[0x24BEE19F8]();
}

uint64_t sub_22ABDF464()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_22ABDF470()
{
  return MEMORY[0x24BEE1B68]();
}

uint64_t sub_22ABDF47C()
{
  return MEMORY[0x24BEE1B90]();
}

uint64_t sub_22ABDF488()
{
  return MEMORY[0x24BEE5220]();
}

uint64_t sub_22ABDF494()
{
  return MEMORY[0x24BDBFE88]();
}

uint64_t sub_22ABDF4A0()
{
  return MEMORY[0x24BDCFDF0]();
}

uint64_t sub_22ABDF4AC()
{
  return MEMORY[0x24BDCFE00]();
}

uint64_t sub_22ABDF4B8()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_22ABDF4C4()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_22ABDF4D0()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_22ABDF4DC()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_22ABDF4E8()
{
  return MEMORY[0x24BEE5740]();
}

uint64_t sub_22ABDF4F4()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_22ABDF500()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_22ABDF50C()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_22ABDF518()
{
  return MEMORY[0x24BEDF468]();
}

uint64_t sub_22ABDF524()
{
  return MEMORY[0x24BEE5320]();
}

uint64_t sub_22ABDF530()
{
  return MEMORY[0x24BDBFEA0]();
}

uint64_t sub_22ABDF53C()
{
  return MEMORY[0x24BDBFEE0]();
}

uint64_t sub_22ABDF548()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_22ABDF554()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_22ABDF560()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_22ABDF56C()
{
  return MEMORY[0x24BDD0390]();
}

uint64_t sub_22ABDF578()
{
  return MEMORY[0x24BEE1BE0]();
}

uint64_t sub_22ABDF584()
{
  return MEMORY[0x24BEE1BE8]();
}

uint64_t sub_22ABDF590()
{
  return MEMORY[0x24BEE1C08]();
}

uint64_t sub_22ABDF59C()
{
  return MEMORY[0x24BEE1C10]();
}

uint64_t sub_22ABDF5A8()
{
  return MEMORY[0x24BEE1C18]();
}

uint64_t sub_22ABDF5B4()
{
  return MEMORY[0x24BEE1C20]();
}

uint64_t sub_22ABDF5C0()
{
  return MEMORY[0x24BEE1C28]();
}

uint64_t sub_22ABDF5CC()
{
  return MEMORY[0x24BEE1C58]();
}

uint64_t sub_22ABDF5D8()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_22ABDF5E4()
{
  return MEMORY[0x24BEE1C80]();
}

uint64_t sub_22ABDF5F0()
{
  return MEMORY[0x24BEE1C98]();
}

uint64_t sub_22ABDF5FC()
{
  return MEMORY[0x24BEE1CA0]();
}

uint64_t sub_22ABDF608()
{
  return MEMORY[0x24BEE1CA8]();
}

uint64_t sub_22ABDF614()
{
  return MEMORY[0x24BEE1CB0]();
}

uint64_t sub_22ABDF620()
{
  return MEMORY[0x24BEE1CC0]();
}

uint64_t sub_22ABDF62C()
{
  return MEMORY[0x24BEE1CC8]();
}

uint64_t sub_22ABDF638()
{
  return MEMORY[0x24BDBFF00]();
}

uint64_t sub_22ABDF644()
{
  return MEMORY[0x24BEE1D08]();
}

uint64_t sub_22ABDF650()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_22ABDF65C()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_22ABDF668()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_22ABDF674()
{
  return MEMORY[0x24BDD04B8]();
}

uint64_t sub_22ABDF680()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_22ABDF68C()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_22ABDF698()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_22ABDF6A4()
{
  return MEMORY[0x24BEE2068]();
}

uint64_t sub_22ABDF6B0()
{
  return MEMORY[0x24BEE2070]();
}

uint64_t sub_22ABDF6BC()
{
  return MEMORY[0x24BEE2078]();
}

uint64_t sub_22ABDF6C8()
{
  return MEMORY[0x24BEE2090]();
}

uint64_t sub_22ABDF6D4()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_22ABDF6E0()
{
  return MEMORY[0x24BEE2150]();
}

uint64_t sub_22ABDF6EC()
{
  return MEMORY[0x24BEE2168]();
}

uint64_t sub_22ABDF6F8()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_22ABDF704()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_22ABDF710()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_22ABDF71C()
{
  return MEMORY[0x24BEE22D8]();
}

uint64_t sub_22ABDF728()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_22ABDF734()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_22ABDF740()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_22ABDF74C()
{
  return MEMORY[0x24BEE2378]();
}

uint64_t sub_22ABDF758()
{
  return MEMORY[0x24BEE2428]();
}

uint64_t sub_22ABDF764()
{
  return MEMORY[0x24BEE2438]();
}

uint64_t sub_22ABDF770()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_22ABDF77C()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_22ABDF788()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_22ABDF794()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_22ABDF7A0()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_22ABDF7AC()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_22ABDF7B8()
{
  return MEMORY[0x24BEE2588]();
}

uint64_t sub_22ABDF7C4()
{
  return MEMORY[0x24BEE25F0]();
}

uint64_t sub_22ABDF7D0()
{
  return MEMORY[0x24BEE25F8]();
}

uint64_t sub_22ABDF7DC()
{
  return MEMORY[0x24BEE2600]();
}

uint64_t sub_22ABDF7E8()
{
  return MEMORY[0x24BEE2610]();
}

uint64_t sub_22ABDF7F4()
{
  return MEMORY[0x24BEE2638]();
}

uint64_t sub_22ABDF800()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_22ABDF80C()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_22ABDF818()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_22ABDF824()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_22ABDF830()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_22ABDF83C()
{
  return MEMORY[0x24BEE2730]();
}

uint64_t sub_22ABDF848()
{
  return MEMORY[0x24BEE2750]();
}

uint64_t sub_22ABDF854()
{
  return MEMORY[0x24BEE27E0]();
}

uint64_t sub_22ABDF860()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_22ABDF86C()
{
  return MEMORY[0x24BEE2848]();
}

uint64_t sub_22ABDF878()
{
  return MEMORY[0x24BEE28C0]();
}

uint64_t sub_22ABDF884()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_22ABDF890()
{
  return MEMORY[0x24BEE2910]();
}

uint64_t sub_22ABDF89C()
{
  return MEMORY[0x24BEE2918]();
}

uint64_t sub_22ABDF8A8()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_22ABDF8B4()
{
  return MEMORY[0x24BEE2940]();
}

uint64_t sub_22ABDF8C0()
{
  return MEMORY[0x24BEE2948]();
}

uint64_t sub_22ABDF8CC()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_22ABDF8D8()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_22ABDF8E4()
{
  return MEMORY[0x24BEE2968]();
}

uint64_t sub_22ABDF8F0()
{
  return MEMORY[0x24BEE2970]();
}

uint64_t sub_22ABDF8FC()
{
  return MEMORY[0x24BEE2978]();
}

uint64_t sub_22ABDF908()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_22ABDF914()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_22ABDF920()
{
  return MEMORY[0x24BEE2990]();
}

uint64_t sub_22ABDF92C()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_22ABDF938()
{
  return MEMORY[0x24BEE29C8]();
}

uint64_t sub_22ABDF944()
{
  return MEMORY[0x24BEE29D0]();
}

uint64_t sub_22ABDF950()
{
  return MEMORY[0x24BEE29F0]();
}

uint64_t sub_22ABDF95C()
{
  return MEMORY[0x24BEE29F8]();
}

uint64_t sub_22ABDF968()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_22ABDF974()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_22ABDF980()
{
  return MEMORY[0x24BEE2A18]();
}

uint64_t sub_22ABDF98C()
{
  return MEMORY[0x24BEE2A20]();
}

uint64_t sub_22ABDF998()
{
  return MEMORY[0x24BEE2A78]();
}

uint64_t _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0()
{
  return MEMORY[0x24BEE2A80]();
}

uint64_t sub_22ABDF9B0()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_22ABDF9BC()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_22ABDF9C8()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_22ABDF9D4()
{
  return MEMORY[0x24BEE2AB8]();
}

uint64_t sub_22ABDF9E0()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_22ABDF9EC()
{
  return MEMORY[0x24BEE2AF8]();
}

uint64_t sub_22ABDF9F8()
{
  return MEMORY[0x24BEE2B00]();
}

uint64_t sub_22ABDFA04()
{
  return MEMORY[0x24BEE2B08]();
}

uint64_t sub_22ABDFA10()
{
  return MEMORY[0x24BEE2B20]();
}

uint64_t sub_22ABDFA1C()
{
  return MEMORY[0x24BEE2B60]();
}

uint64_t sub_22ABDFA28()
{
  return MEMORY[0x24BEE2BD8]();
}

uint64_t sub_22ABDFA34()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_22ABDFA40()
{
  return MEMORY[0x24BEE2C00]();
}

uint64_t sub_22ABDFA4C()
{
  return MEMORY[0x24BEE2CC8]();
}

uint64_t sub_22ABDFA58()
{
  return MEMORY[0x24BEE2DC0]();
}

uint64_t sub_22ABDFA64()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_22ABDFA70()
{
  return MEMORY[0x24BEE2E68]();
}

uint64_t sub_22ABDFA7C()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t sub_22ABDFA88()
{
  return MEMORY[0x24BEE2E78]();
}

uint64_t sub_22ABDFA94()
{
  return MEMORY[0x24BEE2E90]();
}

uint64_t sub_22ABDFAA0()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_22ABDFAAC()
{
  return MEMORY[0x24BEE2EE0]();
}

uint64_t sub_22ABDFAB8()
{
  return MEMORY[0x24BEE2F08]();
}

uint64_t sub_22ABDFAC4()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_22ABDFAD0()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_22ABDFADC()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_22ABDFAE8()
{
  return MEMORY[0x24BEE2F68]();
}

uint64_t sub_22ABDFAF4()
{
  return MEMORY[0x24BEE2F70]();
}

uint64_t sub_22ABDFB00()
{
  return MEMORY[0x24BEE2F78]();
}

uint64_t sub_22ABDFB0C()
{
  return MEMORY[0x24BEE2F80]();
}

uint64_t sub_22ABDFB18()
{
  return MEMORY[0x24BEE2F88]();
}

uint64_t sub_22ABDFB24()
{
  return MEMORY[0x24BEE2F90]();
}

uint64_t sub_22ABDFB30()
{
  return MEMORY[0x24BEE2F98]();
}

uint64_t sub_22ABDFB3C()
{
  return MEMORY[0x24BEE2FA0]();
}

uint64_t sub_22ABDFB48()
{
  return MEMORY[0x24BEE2FB0]();
}

uint64_t sub_22ABDFB54()
{
  return MEMORY[0x24BEE2FD8]();
}

uint64_t sub_22ABDFB60()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_22ABDFB6C()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_22ABDFB78()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_22ABDFB84()
{
  return MEMORY[0x24BEE3090]();
}

uint64_t sub_22ABDFB90()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_22ABDFB9C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_22ABDFBA8()
{
  return MEMORY[0x24BEE30F0]();
}

uint64_t sub_22ABDFBB4()
{
  return MEMORY[0x24BEE3160]();
}

uint64_t sub_22ABDFBC0()
{
  return MEMORY[0x24BEE3168]();
}

uint64_t sub_22ABDFBCC()
{
  return MEMORY[0x24BEE3188]();
}

uint64_t sub_22ABDFBD8()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_22ABDFBE4()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_22ABDFBF0()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_22ABDFBFC()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_22ABDFC08()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_22ABDFC14()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_22ABDFC20()
{
  return MEMORY[0x24BEE32F0]();
}

uint64_t sub_22ABDFC2C()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_22ABDFC38()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_22ABDFC44()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_22ABDFC50()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_22ABDFC5C()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_22ABDFC68()
{
  return MEMORY[0x24BEE3368]();
}

uint64_t sub_22ABDFC74()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_22ABDFC80()
{
  return MEMORY[0x24BEE3378]();
}

uint64_t sub_22ABDFC8C()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_22ABDFC98()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_22ABDFCA4()
{
  return MEMORY[0x24BEE33D0]();
}

uint64_t sub_22ABDFCB0()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_22ABDFCBC()
{
  return MEMORY[0x24BEE33F0]();
}

uint64_t sub_22ABDFCC8()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_22ABDFCD4()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_22ABDFCE0()
{
  return MEMORY[0x24BEE3440]();
}

uint64_t sub_22ABDFCEC()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_22ABDFCF8()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_22ABDFD04()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_22ABDFD10()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_22ABDFD1C()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_22ABDFD28()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_22ABDFD34()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_22ABDFD40()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_22ABDFD4C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_22ABDFD58()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_22ABDFD64()
{
  return MEMORY[0x24BEE3530]();
}

uint64_t sub_22ABDFD70()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_22ABDFD7C()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_22ABDFD88()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_22ABDFD94()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_22ABDFDA0()
{
  return MEMORY[0x24BEE7078]();
}

uint64_t sub_22ABDFDAC()
{
  return MEMORY[0x24BEE3678]();
}

uint64_t sub_22ABDFDB8()
{
  return MEMORY[0x24BEE3680]();
}

uint64_t sub_22ABDFDC4()
{
  return MEMORY[0x24BEE3688]();
}

uint64_t sub_22ABDFDD0()
{
  return MEMORY[0x24BEE3698]();
}

uint64_t sub_22ABDFDDC()
{
  return MEMORY[0x24BEE36A0]();
}

uint64_t sub_22ABDFDE8()
{
  return MEMORY[0x24BEE36A8]();
}

uint64_t sub_22ABDFDF4()
{
  return MEMORY[0x24BEE36C8]();
}

uint64_t sub_22ABDFE00()
{
  return MEMORY[0x24BEE36F0]();
}

uint64_t sub_22ABDFE0C()
{
  return MEMORY[0x24BEE3700]();
}

uint64_t sub_22ABDFE18()
{
  return MEMORY[0x24BEE3708]();
}

uint64_t sub_22ABDFE24()
{
  return MEMORY[0x24BEE37D8]();
}

uint64_t sub_22ABDFE30()
{
  return MEMORY[0x24BEE37E0]();
}

uint64_t sub_22ABDFE3C()
{
  return MEMORY[0x24BEE37E8]();
}

uint64_t sub_22ABDFE48()
{
  return MEMORY[0x24BEE37F0]();
}

uint64_t sub_22ABDFE54()
{
  return MEMORY[0x24BEE37F8]();
}

uint64_t sub_22ABDFE60()
{
  return MEMORY[0x24BEE3800]();
}

uint64_t sub_22ABDFE6C()
{
  return MEMORY[0x24BEE3808]();
}

uint64_t sub_22ABDFE78()
{
  return MEMORY[0x24BEE3810]();
}

uint64_t sub_22ABDFE84()
{
  return MEMORY[0x24BEE3818]();
}

uint64_t sub_22ABDFE90()
{
  return MEMORY[0x24BEE3820]();
}

uint64_t sub_22ABDFE9C()
{
  return MEMORY[0x24BEE3828]();
}

uint64_t sub_22ABDFEA8()
{
  return MEMORY[0x24BEE3830]();
}

uint64_t sub_22ABDFEB4()
{
  return MEMORY[0x24BEE3838]();
}

uint64_t sub_22ABDFEC0()
{
  return MEMORY[0x24BEE3840]();
}

uint64_t sub_22ABDFECC()
{
  return MEMORY[0x24BEE3848]();
}

uint64_t sub_22ABDFED8()
{
  return MEMORY[0x24BEE3850]();
}

uint64_t sub_22ABDFEE4()
{
  return MEMORY[0x24BEE3858]();
}

uint64_t sub_22ABDFEF0()
{
  return MEMORY[0x24BEE3860]();
}

uint64_t sub_22ABDFEFC()
{
  return MEMORY[0x24BEE3868]();
}

uint64_t sub_22ABDFF08()
{
  return MEMORY[0x24BEE3870]();
}

uint64_t sub_22ABDFF14()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_22ABDFF20()
{
  return MEMORY[0x24BEE38A0]();
}

uint64_t sub_22ABDFF2C()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_22ABDFF38()
{
  return MEMORY[0x24BEE3938]();
}

uint64_t sub_22ABDFF44()
{
  return MEMORY[0x24BEE39B0]();
}

uint64_t sub_22ABDFF50()
{
  return MEMORY[0x24BEE39E0]();
}

uint64_t sub_22ABDFF5C()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_22ABDFF68()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_22ABDFF74()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_22ABDFF80()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_22ABDFF8C()
{
  return MEMORY[0x24BEE3AC8]();
}

uint64_t sub_22ABDFF98()
{
  return MEMORY[0x24BEE3AD0]();
}

uint64_t sub_22ABDFFA4()
{
  return MEMORY[0x24BEE3AD8]();
}

uint64_t sub_22ABDFFB0()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t sub_22ABDFFBC()
{
  return MEMORY[0x24BEE3B68]();
}

uint64_t sub_22ABDFFC8()
{
  return MEMORY[0x24BEE3B70]();
}

uint64_t sub_22ABDFFD4()
{
  return MEMORY[0x24BEE3B78]();
}

uint64_t sub_22ABDFFE0()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_22ABDFFEC()
{
  return MEMORY[0x24BEE3BB0]();
}

uint64_t sub_22ABDFFF8()
{
  return MEMORY[0x24BEE3BB8]();
}

uint64_t sub_22ABE0004()
{
  return MEMORY[0x24BEE3BE8]();
}

uint64_t sub_22ABE0010()
{
  return MEMORY[0x24BEE3BF0]();
}

uint64_t sub_22ABE001C()
{
  return MEMORY[0x24BEE3BF8]();
}

uint64_t sub_22ABE0028()
{
  return MEMORY[0x24BEE3C08]();
}

uint64_t sub_22ABE0034()
{
  return MEMORY[0x24BEE3C10]();
}

uint64_t sub_22ABE0040()
{
  return MEMORY[0x24BEE3C18]();
}

uint64_t sub_22ABE004C()
{
  return MEMORY[0x24BEE3C38]();
}

uint64_t sub_22ABE0058()
{
  return MEMORY[0x24BEE3C60]();
}

uint64_t sub_22ABE0064()
{
  return MEMORY[0x24BEE3C70]();
}

uint64_t sub_22ABE0070()
{
  return MEMORY[0x24BEE3C78]();
}

uint64_t sub_22ABE007C()
{
  return MEMORY[0x24BEE3C80]();
}

uint64_t sub_22ABE0088()
{
  return MEMORY[0x24BEE3C88]();
}

uint64_t sub_22ABE0094()
{
  return MEMORY[0x24BEE3C90]();
}

uint64_t sub_22ABE00A0()
{
  return MEMORY[0x24BEE3CA0]();
}

uint64_t sub_22ABE00AC()
{
  return MEMORY[0x24BEE3CA8]();
}

uint64_t sub_22ABE00B8()
{
  return MEMORY[0x24BEE3CB0]();
}

uint64_t sub_22ABE00C4()
{
  return MEMORY[0x24BEE3CD0]();
}

uint64_t sub_22ABE00D0()
{
  return MEMORY[0x24BEE3CE0]();
}

uint64_t sub_22ABE00DC()
{
  return MEMORY[0x24BEE3CF8]();
}

uint64_t sub_22ABE00E8()
{
  return MEMORY[0x24BEE3D00]();
}

uint64_t sub_22ABE00F4()
{
  return MEMORY[0x24BEE3D08]();
}

uint64_t sub_22ABE0100()
{
  return MEMORY[0x24BEE3D10]();
}

uint64_t sub_22ABE010C()
{
  return MEMORY[0x24BEE3D18]();
}

uint64_t sub_22ABE0118()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_22ABE0124()
{
  return MEMORY[0x24BEE3D90]();
}

uint64_t sub_22ABE0130()
{
  return MEMORY[0x24BEE3DC0]();
}

uint64_t sub_22ABE013C()
{
  return MEMORY[0x24BEE3DD8]();
}

uint64_t sub_22ABE0148()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_22ABE0154()
{
  return MEMORY[0x24BEE3DE8]();
}

uint64_t sub_22ABE0160()
{
  return MEMORY[0x24BEE3DF8]();
}

uint64_t sub_22ABE016C()
{
  return MEMORY[0x24BEE3E08]();
}

uint64_t sub_22ABE0178()
{
  return MEMORY[0x24BEE3E18]();
}

uint64_t sub_22ABE0184()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_22ABE0190()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_22ABE019C()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_22ABE01A8()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_22ABE01B4()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_22ABE01C0()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_22ABE01CC()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_22ABE01D8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_22ABE01E4()
{
  return MEMORY[0x24BEE41A0]();
}

uint64_t sub_22ABE01F0()
{
  return MEMORY[0x24BEE41A8]();
}

uint64_t sub_22ABE01FC()
{
  return MEMORY[0x24BEE41B0]();
}

uint64_t sub_22ABE0208()
{
  return MEMORY[0x24BEE41C8]();
}

uint64_t sub_22ABE0214()
{
  return MEMORY[0x24BEE41D8]();
}

uint64_t sub_22ABE0220()
{
  return MEMORY[0x24BEE41F0]();
}

uint64_t sub_22ABE022C()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_22ABE0238()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_22ABE0244()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_22ABE0250()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_22ABE025C()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_22ABE0268()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_22ABE0274()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_22ABE0280()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_22ABE028C()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_22ABE0298()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_22ABE02A4()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_22ABE02B0()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_22ABE02BC()
{
  return MEMORY[0x24BEE4658]();
}

uint64_t sub_22ABE02C8()
{
  return MEMORY[0x24BEE4998]();
}

uint64_t sub_22ABE02D4()
{
  return MEMORY[0x24BEE49E8]();
}

uint64_t sub_22ABE02E0()
{
  return MEMORY[0x24BEE49F0]();
}

uint64_t sub_22ABE02EC()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_22ABE02F8()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_22ABE0304()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

BOOL CGAffineTransformIsIdentity(CGAffineTransform *t)
{
  return MEMORY[0x24BDBD8C8](t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x24BDBD8E0](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x24BDBD8E8](retstr, tx, ty);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x24BDBDB88]();
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x24BDBEFC8]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x24BDBEFE0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x24BDBF040]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x24BDBF060]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CVImageBufferRef CMSampleBufferGetImageBuffer(CMSampleBufferRef sbuf)
{
  return (CVImageBufferRef)MEMORY[0x24BDC02E8](sbuf);
}

CVReturn CVPixelBufferCreate(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x24BDC5248](allocator, width, height, *(_QWORD *)&pixelFormatType, pixelBufferAttributes, pixelBufferOut);
}

uint64_t XGBGetLastError()
{
  return MEMORY[0x24BEC6280]();
}

uint64_t XGBoosterCreate()
{
  return MEMORY[0x24BEC6288]();
}

uint64_t XGBoosterEvalOneIter()
{
  return MEMORY[0x24BEC6290]();
}

uint64_t XGBoosterFree()
{
  return MEMORY[0x24BEC6298]();
}

uint64_t XGBoosterGetNumFeature()
{
  return MEMORY[0x24BEC62A0]();
}

uint64_t XGBoosterLoadModelFromBuffer()
{
  return MEMORY[0x24BEC62A8]();
}

uint64_t XGBoosterPredictFromDMatrix()
{
  return MEMORY[0x24BEC62B0]();
}

uint64_t XGBoosterSaveModelToBuffer()
{
  return MEMORY[0x24BEC62B8]();
}

uint64_t XGBoosterSetParam()
{
  return MEMORY[0x24BEC62C0]();
}

uint64_t XGBoosterUpdateOneIter()
{
  return MEMORY[0x24BEC62C8]();
}

uint64_t XGDMatrixCreateFromMat()
{
  return MEMORY[0x24BEC62D0]();
}

uint64_t XGDMatrixFree()
{
  return MEMORY[0x24BEC62D8]();
}

uint64_t XGDMatrixSetDenseInfo()
{
  return MEMORY[0x24BEC62E0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _availability_version_check()
{
  return MEMORY[0x24BDAC970]();
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x24BEE4B28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x24BEE4B48]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x24BEE4B50]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

uint64_t cblas_daxpy_NEWLAPACK()
{
  return MEMORY[0x24BDB2AA0]();
}

uint64_t cblas_ddot_NEWLAPACK()
{
  return MEMORY[0x24BDB2AC0]();
}

uint64_t cblas_dgemm_NEWLAPACK()
{
  return MEMORY[0x24BDB2AD0]();
}

uint64_t cblas_dgemv_NEWLAPACK()
{
  return MEMORY[0x24BDB2AE0]();
}

uint64_t cblas_dnrm2_NEWLAPACK()
{
  return MEMORY[0x24BDB2B00]();
}

uint64_t cblas_dscal_NEWLAPACK()
{
  return MEMORY[0x24BDB2B10]();
}

uint64_t cblas_idamax_NEWLAPACK()
{
  return MEMORY[0x24BDB2B78]();
}

uint64_t cblas_isamax_NEWLAPACK()
{
  return MEMORY[0x24BDB2B88]();
}

uint64_t cblas_saxpy_NEWLAPACK()
{
  return MEMORY[0x24BDB2BA0]();
}

uint64_t cblas_sdot_NEWLAPACK()
{
  return MEMORY[0x24BDB2BC0]();
}

uint64_t cblas_sgemm_NEWLAPACK()
{
  return MEMORY[0x24BDB2BD0]();
}

uint64_t cblas_sgemv_NEWLAPACK()
{
  return MEMORY[0x24BDB2BE8]();
}

uint64_t cblas_snrm2_NEWLAPACK()
{
  return MEMORY[0x24BDB2C10]();
}

uint64_t cblas_sscal_NEWLAPACK()
{
  return MEMORY[0x24BDB2C20]();
}

uint64_t dgelsd_NEWLAPACK()
{
  return MEMORY[0x24BDB2CD8]();
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
  MEMORY[0x24BDADEA0](predicate, context, function);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x24BDAE088](__handle, __symbol);
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x24BDAE270](__x);
  return result;
}

int fclose(FILE *a1)
{
  return MEMORY[0x24BDAE2E0](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x24BDAE410](__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x24BDAE448](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x24BDAE4D8](a1, a2, *(_QWORD *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x24BDAE530](a1);
}

long double log1p(long double __x)
{
  long double result;

  MEMORY[0x24BDAEAC0](__x);
  return result;
}

long double log2(long double __x)
{
  long double result;

  MEMORY[0x24BDAEAD8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x24BDAEEA8](__b, *(_QWORD *)&__c, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
  MEMORY[0x24BDAEEB0](__b, __pattern16, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

float powf(float a1, float a2)
{
  float result;

  MEMORY[0x24BDAF690](a1, a2);
  return result;
}

void rewind(FILE *a1)
{
  MEMORY[0x24BDAFB98](a1);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x24BDAFEA0](a1, a2);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x24BEE4BF0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x24BEE4C50]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getExtendedExistentialTypeMetadata()
{
  return MEMORY[0x24BEE4D30]();
}

uint64_t swift_getExtendedExistentialTypeMetadata_unique()
{
  return MEMORY[0x24BEE4D38]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x24BEE4E60]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow(void)
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

void vDSP_dotpr(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Length __N)
{
  MEMORY[0x24BDB31D0](__A, __IA, __B, __IB, __C, __N);
}

void vDSP_dotprD(const double *__A, vDSP_Stride __IA, const double *__B, vDSP_Stride __IB, double *__C, vDSP_Length __N)
{
  MEMORY[0x24BDB31D8](__A, __IA, __B, __IB, __C, __N);
}

void vvexp(double *a1, const double *a2, const int *a3)
{
  MEMORY[0x24BDB3B28](a1, a2, a3);
}

