void sub_22A99BD70()
{
  OUTLINED_FUNCTION_33_33();
}

void sub_22A99BDF0()
{
  OUTLINED_FUNCTION_33_33();
}

void sub_22A99BE0C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)v0 = v4;
  *(_QWORD *)(v0 + 8) = v5;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v6;
  *(_QWORD *)(v0 + 32) = v7;
  *(_QWORD *)(v0 + 40) = 10;
  *(_BYTE *)(v0 + 48) = v2;
  *(_BYTE *)(v0 + 49) = v3;
}

void type metadata accessor for LogisticRegressionClassifier.Configuration()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22A99BE5C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t OUTLINED_FUNCTION_1()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OUTLINED_FUNCTION_23()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_53()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_1_1()
{
  return sub_22ABDF038();
}

uint64_t OUTLINED_FUNCTION_1_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_0_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_4()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_5()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[2];
  v0[41] = v1;
  v0[3] = v1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_25()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_0_1()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_1_3(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_6_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_8()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_1_4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_1_6(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_3_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_81(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[20] + 8))(v0[22], v0[19]);
}

uint64_t OUTLINED_FUNCTION_5_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_10(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_13_1()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_0_2(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return sub_22ABDE8A0();
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_9()
{
  return sub_22ABDFD1C();
}

id OUTLINED_FUNCTION_1_10()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 704));
}

uint64_t OUTLINED_FUNCTION_1_11()
{
  return sub_22ABDEAEC();
}

void OUTLINED_FUNCTION_1_12()
{
  void *v0;

}

void OUTLINED_FUNCTION_2_2()
{
  JUMPOUT(0x22E2E4E64);
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_1_13@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_22ABDFD28();
}

uint64_t OUTLINED_FUNCTION_1_14()
{
  return 0x65636E6575716573;
}

uint64_t OUTLINED_FUNCTION_1_15()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_1_17()
{
  return sub_22ABDFCC8();
}

id OUTLINED_FUNCTION_2_3(uint64_t a1)
{
  return sub_22AB7B960(a1);
}

uint64_t OUTLINED_FUNCTION_1_19()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_55()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_1_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 120));
}

uint64_t OUTLINED_FUNCTION_1_22()
{
  return sub_22ABDEFF0();
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return sub_22ABDFBFC();
}

uint64_t OUTLINED_FUNCTION_7()
{
  return sub_22ABDFCC8();
}

uint64_t OUTLINED_FUNCTION_27()
{
  return sub_22ABDDE2C();
}

void OUTLINED_FUNCTION_6_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_16_1()
{
  return sub_22ABDFAD0();
}

uint64_t OUTLINED_FUNCTION_63()
{
  return sub_22ABDFD34();
}

uint64_t OUTLINED_FUNCTION_11(uint64_t (*a1)(void))
{
  return a1();
}

void OUTLINED_FUNCTION_1_23(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 - 144) = v2;
  v4 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v3 - 184) = v4;
  *(_QWORD *)(v3 - 168) = *(_QWORD *)(v4 - 8);
}

uint64_t OUTLINED_FUNCTION_1_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_1_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for AnnotatedFeature(0, a1, a1, a4);
}

uint64_t OUTLINED_FUNCTION_1_26(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_8_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_1_28()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_3_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 208) + 8))(v0, v1);
}

void *OUTLINED_FUNCTION_1_29@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_1_30@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_22ABDDC10();
}

uint64_t OUTLINED_FUNCTION_1_31(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

void OUTLINED_FUNCTION_1_32(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v1;
  a1[1] = v2;
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_1_35()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_1_36()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
}

void OUTLINED_FUNCTION_1_38(void *a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v2;
  long double *v3;
  uint64_t v4;

  sub_22AA5E100(a1, v4, v3, v2, a2);
}

char *OUTLINED_FUNCTION_1_39@<X0>(unint64_t a1@<X8>)
{
  int64_t v1;

  return sub_22AB4D608((char *)(a1 > 1), v1, 1);
}

uint64_t OUTLINED_FUNCTION_1_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  return sub_22AA6F388(v11, v9, v12, *(_QWORD *)(v14 + 16), v13, *(_QWORD *)(v15 - 96), *(_QWORD *)(v14 + 24), v10, a9);
}

uint64_t OUTLINED_FUNCTION_1_41()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_42()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[26] + 8))(v0[27], v0[25]);
}

float OUTLINED_FUNCTION_1_43()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_44()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_1_45@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  return a2(a1, 0);
}

uint64_t OUTLINED_FUNCTION_1_46()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 128), v1);
}

uint64_t OUTLINED_FUNCTION_1_47()
{
  return sub_22ABDFD34();
}

uint64_t OUTLINED_FUNCTION_1_48()
{
  return type metadata accessor for TemporalFileSegment();
}

uint64_t OUTLINED_FUNCTION_1_49()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_1_50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_1_51()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_1_52(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v8 - 128) = a6;
  *(_QWORD *)(v8 - 160) = a2;
  *(_QWORD *)(v8 - 152) = a8;
  v9 = *(_QWORD *)(a7 + 8);
  v10 = *(_QWORD *)(a8 + 8);
  *(_QWORD *)(v8 - 112) = a4;
  *(_QWORD *)(v8 - 104) = a5;
  *(_QWORD *)(v8 - 96) = v9;
  *(_QWORD *)(v8 - 88) = v10;
  return sub_22ABDF7E8();
}

uint64_t OUTLINED_FUNCTION_1_53()
{
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_1_54()
{
  return sub_22ABDD0E8();
}

uint64_t OUTLINED_FUNCTION_1_55()
{
  return sub_22ABDFAD0();
}

uint64_t OUTLINED_FUNCTION_1_56()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_1_57()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 - 168);
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_1_58()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_59()
{
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return swift_task_switch();
}

void OUTLINED_FUNCTION_1_60(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v2 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * a1);
  *v5 = v4;
  v5[1] = v3;
}

void OUTLINED_FUNCTION_4_2(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_1_62(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(_QWORD *, uint64_t, uint64_t), uint64_t *a6, void (*a7)(_QWORD *__return_ptr, uint64_t, uint64_t), uint64_t a8)
{
  return sub_22AAF4714(a1, a3, a8, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_1_63@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 80) = a1;
  v3 = v1[66];
  v4 = v1[65];
  v5 = v1[36];
  *(_QWORD *)(v2 - 96) = v1[38];
  *(_QWORD *)(v2 - 88) = v5;
  return (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 8))(v3, v1[29]);
}

uint64_t OUTLINED_FUNCTION_1_64@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  return sub_22AA726CC(a1, (uint64_t)&a8, a7, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_1_65()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_0_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_1_66()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_1_67()
{
  return sub_22ABDF200();
}

void OUTLINED_FUNCTION_1_68()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_1_69(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = 8;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_1_70()
{
  return sub_22ABE0298();
}

uint64_t OUTLINED_FUNCTION_1_71()
{
  uint64_t v0;
  unint64_t v1;

  return sub_22A9D14F0(v0, v1);
}

uint64_t *OUTLINED_FUNCTION_1_73(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __int128 a14)
{
  a14 = *(_OWORD *)(a3 + 16);
  return __swift_allocate_boxed_opaque_existential_1(&a11);
}

uint64_t OUTLINED_FUNCTION_1_74()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_1_75()
{
  return sub_22ABDE324();
}

uint64_t OUTLINED_FUNCTION_1_76()
{
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_1_78@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_22ABDFD34();
}

uint64_t OUTLINED_FUNCTION_1_79@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_1_80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 6;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_1_81()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 312) + 8))(v0, *(_QWORD *)(v1 - 272));
}

uint64_t OUTLINED_FUNCTION_1_82()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_1_83()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_1_84()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_1_85(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 264) = a1;
  return sub_22ABDDE68();
}

uint64_t OUTLINED_FUNCTION_1_86@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_1_87()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_1_88()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[15] + 8))(v0[16], v0[14]);
}

uint64_t OUTLINED_FUNCTION_1_89()
{
  uint64_t v0;

  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t OUTLINED_FUNCTION_1_90()
{
  return sub_22ABDFC74();
}

uint64_t OUTLINED_FUNCTION_1_91()
{
  return sub_22ABDD8B0();
}

uint64_t OUTLINED_FUNCTION_1_92()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = v0;
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_93(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_22AB79B70(a1, a2, a3, a4, a5);
}

void OUTLINED_FUNCTION_1_94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, _OWORD *a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v21 = *(_QWORD *)(v20 + 840);
  v22 = *(_QWORD *)(v20 + 832);
  v23 = *(_QWORD *)(v20 + 824);
  v24 = *(_QWORD *)(v20 + 800);
  v25 = *(_QWORD *)(v20 + 792);
  v26 = *(_DWORD *)(v20 + 940);
  v27 = *(_QWORD *)(v20 + 784);
  v28 = *(_DWORD *)(v20 + 936);
  v29 = *(_QWORD *)(v20 + 712);
  v30 = *(_QWORD *)(v20 + 496);
  v31 = *(_QWORD *)(v20 + 480);
  v32 = *(_QWORD *)(v20 + 464);
  v33 = *(_QWORD *)(v20 + 440);
  *(_QWORD *)(v20 + 160) = *(_QWORD *)(v20 + 776);
  *(_DWORD *)(v20 + 168) = v28;
  *(_QWORD *)(v20 + 176) = v27;
  *(_DWORD *)(v20 + 184) = v26;
  *(_QWORD *)(v20 + 192) = v25;
  *(_QWORD *)(v20 + 200) = v24;
  *(_OWORD *)(v20 + 208) = *a19;
  *(_QWORD *)(v20 + 224) = v23;
  sub_22AB84CB4(v29, v33, v22, v21, v32, v31, v30, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, (uint64_t)a19,
    a20);
}

uint64_t OUTLINED_FUNCTION_1_95(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_1_97()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_1_99()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

id OUTLINED_FUNCTION_1_100()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, (SEL)(v2 + 1864), v1);
}

void OUTLINED_FUNCTION_1_101(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, __int16 a20,char a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v21 + 16) = v25;
  *(_QWORD *)(v21 + 24) = v24;
  *(_QWORD *)(v21 + 32) = a17;
  *(_QWORD *)(v21 + 40) = v23;
  *(_QWORD *)(v21 + 48) = v22;
  *(_QWORD *)(v21 + 56) = a18;
  *(_BYTE *)(v21 + 64) = a19;
  *(_QWORD *)(v21 + 72) = a16;
  *(_BYTE *)(v21 + 65) = a21;
  *(_QWORD *)(v21 + 80) = a15;
  *(_BYTE *)(v21 + 88) = a14;
  *(_QWORD *)(v21 + 96) = a12;
}

void OUTLINED_FUNCTION_1_102()
{
  sub_22AA36270();
}

uint64_t OUTLINED_FUNCTION_1_103()
{
  return type metadata accessor for VideoReaderError();
}

uint64_t OUTLINED_FUNCTION_1_104()
{
  return 0x746567726174;
}

void OUTLINED_FUNCTION_1_105()
{
  UnsafeMutableVectorPointer<A>.addProductDouble(_:_:transposed:scaledBy:)();
}

void OUTLINED_FUNCTION_1_106(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_22ABBD764(a1, v12, (_OWORD *)(v13 - 144), *(_QWORD *)(v13 - 160), v11, v10, *(long double **)(v13 - 192), *(_QWORD *)(v13 - 184), a9, a10);
}

uint64_t OUTLINED_FUNCTION_1_107()
{
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_1_108()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 704));
}

uint64_t OUTLINED_FUNCTION_1_110()
{
  return sub_22ABE01FC();
}

uint64_t OUTLINED_FUNCTION_1_111()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return DenseVector.subscript.setter(v0, v1, v5, v4, v3, v2);
}

void OUTLINED_FUNCTION_1_112(uint64_t *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v5 = *a1;
  v6 = *(_QWORD *)(*a1 + 152);
  v7 = *(_QWORD *)(*a1 + 160);
  v8 = *(_QWORD *)(*a1 + 128);
  v9 = *(_QWORD *)(*a1 + 136);
  if ((a2 & 1) != 0)
    v10 = *a1;
  else
    v10 = *a1 + 40;
  v11 = *(_OWORD *)(v5 + 96);
  *(_OWORD *)v10 = *(_OWORD *)(v5 + 80);
  *(_OWORD *)(v10 + 16) = v11;
  v12 = *(_QWORD *)(v5 + 120);
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(v5 + 112);
  UnsafeMutableVectorPointer.subscript.setter((__int128 *)v10, v12, v8, v9, a5, v6, v7);
}

uint64_t OUTLINED_FUNCTION_1_114()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_1_115(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_1_116(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;

  v8 = v5[1];
  *v7 = *v5;
  v7[1] = v8;
  v7[2] = v5[2];
  return type metadata accessor for SparseMatrix(0, v6, *(_QWORD *)(v4 + 24), a4);
}

uint64_t OUTLINED_FUNCTION_1_118()
{
  return sub_22ABDEDC8();
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

unint64_t sub_22A99CE8C()
{
  unint64_t result;

  result = qword_2540E89D8;
  if (!qword_2540E89D8)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_2540E89D8);
  }
  return result;
}

uint64_t sub_22A99CEC8()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for LogisticRegressionClassifier()
{
  JUMPOUT(0x22E2E4CF0);
}

void LogisticRegressionClassifier.init(labels:configuration:)()
{
  OUTLINED_FUNCTION_6_81();
  sub_22A99CE8C();
  sub_22A99BD70();
}

__n128 sub_22A99CFAC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __n128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  char v7;
  char v8;

  result = v3;
  *(_QWORD *)v0 = v1;
  *(__n128 *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 24) = v4;
  *(_OWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 48) = v6;
  *(_BYTE *)(v0 + 56) = v7;
  *(_BYTE *)(v0 + 57) = v8;
  return result;
}

double LogisticRegressionClassifier.Configuration.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = xmmword_22ABF8AF0;
  *(_QWORD *)(a1 + 16) = 25;
  result = 1.0;
  *(_OWORD *)(a1 + 24) = xmmword_22ABF8B00;
  *(_QWORD *)(a1 + 40) = 10;
  *(_WORD *)(a1 + 48) = 1;
  return result;
}

void type metadata accessor for VNImageCropAndScaleOption(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D888);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D890);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D898);
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_22A99D094(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_22A99D0B4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D8A0);
}

void type metadata accessor for AVAudioCommonFormat(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D8A8);
}

void type metadata accessor for MLFeatureType(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D8B0);
}

void type metadata accessor for MLMultiArrayDataType(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D8B8);
}

uint64_t getEnumTagSinglePayload for DataReference(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DataReference(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D8C0);
}

void type metadata accessor for VNRecognizedPointKey(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D8C8);
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D8D0);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ImageCropper(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ImageCropper(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D8D8);
}

void sub_22A99D220()
{
  sub_22ABDED50();
  sub_22ABDED2C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_5();
}

void sub_22A99D250()
{
  uint64_t *v0;

  sub_22A99D3B0(*v0, (void (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_22A99D270(uint64_t a1, id *a2)
{
  return sub_22A99D284(a1, a2);
}

uint64_t sub_22A99D284(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t result;

  OUTLINED_FUNCTION_2_4(a1, a2);
  result = sub_22ABDED38();
  *v2 = 0;
  return result;
}

uint64_t sub_22A99D2E4(uint64_t a1, id *a2)
{
  return sub_22A99D2FC(a1, a2) & 1;
}

uint64_t sub_22A99D2FC(uint64_t a1, id *a2)
{
  _QWORD *v2;
  char v3;

  OUTLINED_FUNCTION_2_4(a1, a2);
  v3 = sub_22ABDED44();
  *v2 = 0;
  return v3 & 1;
}

void sub_22A99D36C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_22A99D220();
  *a1 = v2;
}

void sub_22A99D390()
{
  uint64_t *v0;

  sub_22A99D3B0(*v0, MEMORY[0x24BEE0CD8]);
}

void sub_22A99D3B0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_22ABDED50();
  a2(v3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A99D3E4()
{
  return sub_22A99D3FC();
}

uint64_t sub_22A99D3FC()
{
  OUTLINED_FUNCTION_3_5();
  sub_22ABDEDB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A99D434()
{
  return sub_22A99D44C();
}

uint64_t sub_22A99D44C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_5();
  sub_22ABE0244();
  sub_22ABDEDB0();
  v0 = sub_22ABE0280();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_22A99D4B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1();
  *v0 = nullsub_1(v1, v2);
  OUTLINED_FUNCTION_0_5();
}

void sub_22A99D4D4(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_22A99D504();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

BOOL sub_22A99D50C(uint64_t *a1, uint64_t *a2)
{
  return sub_22AA175D4(*a1, *a2);
}

uint64_t sub_22A99D518(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABE8D34, a1);
  return sub_22ABDD4A8();
}

uint64_t sub_22A99D554()
{
  MEMORY[0x22E2E4D80](&unk_22ABE8D34);
  return sub_22ABDD49C();
}

uint64_t sub_22A99D59C(uint64_t a1, uint64_t a2)
{
  sub_22ABE0244();
  MEMORY[0x22E2E4D80](&unk_22ABE8D34, a2);
  sub_22ABDD49C();
  return sub_22ABE0280();
}

uint64_t sub_22A99D5F4(_QWORD *a1, _QWORD *a2)
{
  return sub_22AA175D0(*a1, *a2);
}

uint64_t sub_22A99D600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2E4D80](&unk_22ABE8D34, a3);
  return sub_22ABDD490();
}

uint64_t sub_22A99D650()
{
  sub_22A99D7D4((unint64_t *)&qword_255B0D910, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_22ABE8874);
  sub_22A99D7D4(&qword_255B0D918, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_22ABE86BC);
  return sub_22ABDFBD8();
}

void sub_22A99D6D4()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1();
  *v0 = sub_22A99D6F4();
  v0[1] = v1;
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A99D6F8()
{
  sub_22A99D7D4(&qword_255B0D920, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22ABE88B8);
  sub_22A99D7D4(&qword_255B0D928, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22ABE85A8);
  return sub_22ABDFBD8();
}

void sub_22A99D77C()
{
  sub_22A99D7D4(&qword_255B0D8E0, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22ABE856C);
}

void sub_22A99D7A8()
{
  sub_22A99D7D4(&qword_255B0D8E8, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22ABE8540);
}

void sub_22A99D7D4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x22E2E4D80](a3, v5), a1);
  }
  OUTLINED_FUNCTION_0_5();
}

void sub_22A99D810()
{
  sub_22A99D7D4(&qword_255B0D8F0, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_22ABE8680);
}

void sub_22A99D83C()
{
  sub_22A99D7D4(&qword_255B0D8F8, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_22ABE8654);
}

void sub_22A99D868()
{
  sub_22A99D7D4(&qword_255B0D900, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_22ABE86F0);
}

void sub_22A99D894()
{
  sub_22A99D7D4(&qword_255B0D908, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22ABE85DC);
}

uint64_t sub_22A99D8C0()
{
  sub_22A99D7D4(&qword_255B0D9B8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_22ABE8C68);
  sub_22A99D7D4(&qword_255B0D9C0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_22ABE8C08);
  return sub_22ABDFBD8();
}

uint64_t sub_22A99D944@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  sub_22ABDED2C();
  result = OUTLINED_FUNCTION_4_3();
  *a1 = v1;
  return result;
}

void sub_22A99D980()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1();
  *v0 = sub_22AAAEDF0();
  v0[1] = v1;
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A99D9A0()
{
  sub_22A99D7D4(&qword_255B0D9C8, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_22ABE8B0C);
  sub_22A99D7D4(qword_255B0D9D0, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_22ABE8AB4);
  return sub_22ABDFBD8();
}

void type metadata accessor for CFBoolean(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D930);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D938);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D940);
}

uint64_t initializeBufferWithCopyOfBuffer for TemporalSegmentIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_22A99DAA4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_22A99DAC4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D948);
}

void type metadata accessor for DeviceType(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D950);
}

void type metadata accessor for VNElementType(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D958);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D960);
}

__n128 __swift_memcpy20_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t _s5PointVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s5PointVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 20) = v3;
  return result;
}

void type metadata accessor for Decimal(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_2540E8640);
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D968);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_22A99DBE8(a1, &qword_255B0D970);
}

void sub_22A99DBE8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void sub_22A99DC2C()
{
  sub_22A99D7D4(&qword_255B0D978, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_22ABE8A7C);
}

void sub_22A99DC58()
{
  sub_22A99D7D4(&qword_255B0D980, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_22ABE8A54);
}

void sub_22A99DC84()
{
  sub_22A99D7D4(&qword_255B0D988, (uint64_t (*)(uint64_t))type metadata accessor for DeviceType, (uint64_t)&unk_22ABE8AE4);
}

void sub_22A99DCB0()
{
  sub_22A99D7D4(&qword_255B0D990, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_22ABE8BCC);
}

void sub_22A99DCDC()
{
  sub_22A99D7D4(&qword_255B0D998, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_22ABE8BA0);
}

void sub_22A99DD08()
{
  sub_22A99D7D4(&qword_255B0D9A0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_22ABE8C3C);
}

void sub_22A99DD34()
{
  sub_22A99D7D4((unint64_t *)&qword_255B0D9A8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_22ABE8D60);
}

void sub_22A99DD60()
{
  sub_22A99D7D4(&qword_255B0D9B0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_22ABE8D08);
}

void OUTLINED_FUNCTION_2_4(uint64_t a1, id *a2)
{

}

uint64_t OUTLINED_FUNCTION_3_5()
{
  return sub_22ABDED50();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A99DDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *(_QWORD *)(a6 + 16);
  v11 = *(_QWORD *)(a6 + 24);
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 24)
                                                                                     + *(_QWORD *)(v11 + 24));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_22A99DE80;
  return v15(a1, a2, a4, a5, v12, v11);
}

uint64_t sub_22A99DE80()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22A99DEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_22A99DEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v14;
  uint64_t v15;

  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v14;
  *v14 = v8;
  v14[1] = sub_22A99E4B4;
  return sub_22A99DDE4(a1, a2, v15, a4, a5, a8);
}

uint64_t Transformer.adaptedAsRandomTransformer()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

void sub_22A99DFE4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for RandomTransformerAdaptor(255, *a1, a1[1], a4);
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for RandomTransformerAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RandomTransformerAdaptor);
}

uint64_t sub_22A99E018()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22A99E020()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22A99E08C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_22A99E0FC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_22A99E10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_22A99E13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_22A99E16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_22A99E19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_22A99E1CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A99E27C + 4 * byte_22ABE8DB0[(v8 - 1)]))();
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

void sub_22A99E2D4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22E2E4CF0](a1, v6, a5);
}

void FullyConnectedNetworkClassifier.decode(from:)()
{
  OUTLINED_FUNCTION_56();
}

uint64_t sub_22A99E500(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v6);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8);
  v9 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkClassifierModel<A, B>, a1);
  result = v8(a1, a1, v9, v6, v7);
  if (!v3)
  {
    sub_22ABDEAEC();
    v11 = sub_22A99E738();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA88);
    v12 = OUTLINED_FUNCTION_60();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_22ABE8E30;
    v16 = v15 + v14;
    v17 = OUTLINED_FUNCTION_57();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v1 + *(int *)(v17 + 20), v12);
    sub_22A9A0918();
    sub_22A99E8C0(v11);
    swift_bridgeObjectRelease();
    v18 = sub_22A99EA34(1);
    v22 = (_QWORD *)sub_22A99EAB0(v18, v19, v20, v21, (uint64_t (*)(uint64_t))sub_22AB87F1C);
    v23 = sub_22A99EB90(v22, v2);
    result = OUTLINED_FUNCTION_54();
    if ((v23 & 1) == 0)
    {
      v24 = sub_22ABDF830();
      OUTLINED_FUNCTION_53();
      v26 = v25;
      sub_22ABDF824();
      v27 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D8], v24);
      ((void (*)(uint64_t))swift_willThrow)(v27);
      return OUTLINED_FUNCTION_51(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8));
    }
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_22A99E738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = OUTLINED_FUNCTION_60();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_33();
  v5 = v4 - v3;
  v6 = *(_QWORD *)(v0 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_22AB4D0D0();
    v7 = v15;
    _s14descr24F4C08F1V10DenseBlockVMa();
    OUTLINED_FUNCTION_55_0();
    v9 = v0 + v8;
    v14 = *(_QWORD *)(v10 + 72);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    do
    {
      v11(v5, v9, v1);
      v12 = *(_QWORD *)(v15 + 16);
      if (v12 >= *(_QWORD *)(v15 + 24) >> 1)
        sub_22AB4D0D0();
      *(_QWORD *)(v15 + 16) = v12 + 1;
      OUTLINED_FUNCTION_49(v15+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v12, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
      v9 += v14;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E2E4D68]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_22A99E8C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    v2 = v10;
    v4 = *(_QWORD *)(sub_22ABDD7D8() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_22ABDD7CC();
      v8 = *(_QWORD *)(v10 + 16);
      if (v8 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_22AB4CE30();
      *(_QWORD *)(v10 + 16) = v8 + 1;
      *(_QWORD *)(v10 + 8 * v8 + 32) = v7;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22A99E9B0(uint64_t result)
{
  return sub_22A99EA34(result);
}

uint64_t sub_22A99E9BC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = OUTLINED_FUNCTION_21_0();
  result = sub_22A9A907C(v3);
  if ((v4 & 1) != 0)
    v5 = v2;
  else
    v5 = result;
  if (v2 < v5)
    goto LABEL_9;
  if ((v5 & 0x8000000000000000) == 0)
  {
    sub_22ABDE60C();
    return v1;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_22A99EA34(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  char v5;
  uint64_t v6;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = OUTLINED_FUNCTION_21_0();
  result = v4(v3);
  if ((v5 & 1) != 0)
    v6 = v2;
  else
    v6 = result;
  if (v2 < v6)
    goto LABEL_9;
  if ((v6 & 0x8000000000000000) == 0)
    return v1;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_22A99EA8C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_22A99EAB0(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_22AB87E9C);
}

uint64_t sub_22A99EA98(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_22A99EAB0(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_22AB87F1C);
}

uint64_t sub_22A99EAA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_22A99EAB0(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_22AB88030);
}

uint64_t sub_22A99EAB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((a4 & 1) == 0)
    goto LABEL_2;
  sub_22ABDFFE0();
  swift_unknownObjectRetain_n();
  v10 = swift_dynamicCastClass();
  if (!v10)
  {
    OUTLINED_FUNCTION_22();
    v10 = MEMORY[0x24BEE4AF8];
  }
  v11 = *(_QWORD *)(v10 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v11 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v8 = OUTLINED_FUNCTION_41();
    v9 = a5(v8);
    goto LABEL_9;
  }
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    OUTLINED_FUNCTION_22();
    v9 = MEMORY[0x24BEE4AF8];
  }
LABEL_9:
  OUTLINED_FUNCTION_22();
  return v9;
}

uint64_t sub_22A99EB90(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return OUTLINED_FUNCTION_58();
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return OUTLINED_FUNCTION_58();
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_22A99EBF8(float32x2_t *a1, float32x2_t *a2)
{
  float32x2_t v2;
  uint64_t result;
  float32x2_t *v6;
  float32x2_t *v7;
  int32x2_t v8;

  v2 = a1[2];
  if (*(_QWORD *)&v2 != *(_QWORD *)&a2[2])
    return OUTLINED_FUNCTION_58();
  if (!*(_QWORD *)&v2 || a1 == a2)
    return 1;
  if (a1[4].f32[0] != a2[4].f32[0] || a1[4].f32[1] != a2[4].f32[1] || a1[5].f32[0] != a2[5].f32[0])
    return OUTLINED_FUNCTION_58();
  v6 = a2 + 6;
  v7 = a1 + 6;
  do
  {
    result = --*(_QWORD *)&v2 == 0;
    if (!*(_QWORD *)&v2)
      break;
    if (v7[-1].f32[1] != v6[-1].f32[1])
      break;
    v8 = vceq_f32(*v7, *v6);
    if ((v8.i8[0] & 1) == 0)
      break;
    v6 = (float32x2_t *)((char *)v6 + 12);
    v7 = (float32x2_t *)((char *)v7 + 12);
  }
  while ((v8.i8[4] & 1) != 0);
  return result;
}

uint64_t sub_22A99EC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_4_4();
  v23 = v0;
  v24 = v1;
  v3 = v2;
  v5 = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB38);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - v11;
  v13 = *(_QWORD *)(v5 + 16);
  if (v13 == *(_QWORD *)(v3 + 16))
  {
    if (!v13 || v5 == v3)
      return 1;
    v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    sub_22ABDD0E8();
    v22 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_22A9A0BBC(v5 + v14, (uint64_t)v12, &qword_255B0DB38);
      sub_22A9A0BBC(v3 + v14, (uint64_t)v9, &qword_255B0DB38);
      sub_22A9A0BE8(&qword_255B0DB40, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
      if ((sub_22ABDECFC() & 1) == 0)
        break;
      v15 = *(int *)(v6 + 36);
      v16 = &v12[v15];
      v17 = &v9[v15];
      if (*(_QWORD *)v16 == *(_QWORD *)v17 && *((_QWORD *)v16 + 1) == *((_QWORD *)v17 + 1))
      {
        OUTLINED_FUNCTION_26((uint64_t)v9);
        OUTLINED_FUNCTION_26((uint64_t)v12);
      }
      else
      {
        v19 = sub_22ABDFF68();
        OUTLINED_FUNCTION_26((uint64_t)v9);
        OUTLINED_FUNCTION_26((uint64_t)v12);
        if ((v19 & 1) == 0)
          return 0;
      }
      v14 += v22;
      if (!--v13)
        return 1;
    }
    sub_22A9A0C1C((uint64_t)v9, &qword_255B0DB38);
    sub_22A9A0C1C((uint64_t)v12, &qword_255B0DB38);
  }
  return 0;
}

uint64_t sub_22A99EE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  char *v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_58();
  if (v2 && a1 != a2)
  {
    v3 = (_BYTE *)(a1 + 40);
    v4 = (char *)(a2 + 40);
    do
    {
      v5 = *v4;
      if ((*v3 & 1) != 0)
      {
        if (!*v4)
          return OUTLINED_FUNCTION_58();
      }
      else
      {
        if (*((_QWORD *)v3 - 1) != *((_QWORD *)v4 - 1))
          v5 = 1;
        if ((v5 & 1) != 0)
          return OUTLINED_FUNCTION_58();
      }
      v3 += 16;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_22A99EEB4(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  char v13;
  char v14;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;

  v4 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
LABEL_39:
    sub_22ABDEAEC();
    v5 = sub_22ABDFB60();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    sub_22ABDEAEC();
    v6 = sub_22ABDFB60();
    OUTLINED_FUNCTION_23();
  }
  else
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 != v6)
    goto LABEL_24;
  if (v5)
  {
    v7 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0)
      v7 = a1;
    if (!v4)
      v7 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    v8 = a2 & 0xFFFFFFFFFFFFFF8;
    v9 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
    if (a2 < 0)
      v8 = a2;
    if ((unint64_t)a2 >> 62)
      v9 = v8;
    if (v7 != v9)
    {
      if (v5 < 0)
        goto LABEL_42;
      v21 = a1 & 0xC000000000000001;
      if ((a1 & 0xC000000000000001) != 0)
LABEL_43:
        v10 = (id)MEMORY[0x22E2E3A9C](0, a1);
      else
        v10 = *(id *)(a1 + 32);
      v4 = v10;
      sub_22A9B8810(0, (a2 & 0xC000000000000001) == 0, a2);
      if ((a2 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x22E2E3A9C](0, a2);
      else
        v11 = *(id *)(a2 + 32);
      v12 = v11;
      sub_22A9A0B4C();
      v13 = sub_22ABDF560();

      if ((v13 & 1) != 0)
      {
        if (v5 != 1)
        {
          v16 = 5;
          while (1)
          {
            if (v16 - 4 >= v5)
            {
              __break(1u);
              goto LABEL_39;
            }
            if (v21)
              v17 = (id)MEMORY[0x22E2E3A9C](v16 - 4, a1);
            else
              v17 = *(id *)(a1 + 8 * v16);
            v4 = v17;
            if ((a2 & 0xC000000000000001) != 0)
            {
              v18 = (id)MEMORY[0x22E2E3A9C](v16 - 4, a2);
            }
            else
            {
              if ((unint64_t)(v16 - 4) >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_42:
                __break(1u);
                goto LABEL_43;
              }
              v18 = *(id *)(a2 + 8 * v16);
            }
            v19 = v18;
            v14 = sub_22ABDF560();

            if ((v14 & 1) != 0)
            {
              v20 = 2 - v5 + v16++;
              if (v20 != 5)
                continue;
            }
            return v14 & 1;
          }
        }
        goto LABEL_23;
      }
LABEL_24:
      v14 = 0;
      return v14 & 1;
    }
  }
LABEL_23:
  v14 = 1;
  return v14 & 1;
}

void FullyConnectedNetworkClassifier.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _QWORD v14[4];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v14[2] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  v14[3] = v8;
  v14[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  OUTLINED_FUNCTION_1_0();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v14[0] = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  v12 = a3[2];
  v15 = a3[1];
  v16 = v12;
  v13 = a3[4];
  v17 = a3[3];
  v18 = v13;
  OUTLINED_FUNCTION_56();
}

void sub_22A99F1FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v21;

  v9 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkClassifierModel<A, B>, a1);
  v10 = *(_QWORD *)(v7 - 72);
  v5(v4, a1, v9, v3, v2);
  if (!v10)
  {
    v11 = *(_QWORD *)(v7 - 176);
    v12 = v4;
    v13 = v4 + *(int *)(a1 + 84);
    v15 = *(_QWORD *)(v7 - 160);
    v14 = *(_QWORD *)(v7 - 152);
    sub_22A9A0BBC(v13, v14, &qword_255B0DA90);
    if (__swift_getEnumTagSinglePayload(v14, 1, *(_QWORD *)(v7 - 168)) == 1)
    {
      sub_22A9A0C1C(v14, &qword_255B0DA90);
    }
    else
    {
      v16 = v1;
      sub_22A9A07C8(v14, v1);
      sub_22A9A0BBC(v1, v11, &qword_255B0DA98);
      sub_22A9A0C44(v12, v15, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
      *(_QWORD *)(v7 - 144) = sub_22AAA2FA0(v11, v15);
      *(_QWORD *)(v7 - 136) = v17;
      v18 = *(_QWORD *)(v6 + 24);
      v19 = *(_QWORD *)(v6 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v6, v18);
      v20 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v19 + 16);
      v21 = sub_22A9A0810();
      v20(v7 - 144, &type metadata for AdamStorage, v21, v18, v19);
      sub_22A9A0C1C(v16, &qword_255B0DA98);
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_16();
}

void FullyConnectedNetworkClassifier.decodeWithOptimizer(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAA8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0();
  v2 = OUTLINED_FUNCTION_36();
  type metadata accessor for Moment(v2);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_36();
  sub_22ABDDA0C();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_36();
  sub_22ABDDB08();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  v8 = OUTLINED_FUNCTION_36();
  type metadata accessor for AdamDenseLayer(v8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_36();
  sub_22ABDD7D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_56();
}

void sub_22A99FFE0()
{
  sub_22A9A00DC();
}

void sub_22A99FFF4(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*((_BYTE *)v1 + 24) == 1)
    goto LABEL_5;
  v3 = *v1;
  if (__OFADD__(*v1, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v1;
    v5 = v1[1];
    v4 = v1[2];
    v6 = *(_QWORD *)(v5 + 16);
    if (v4 == v6)
    {
      *((_BYTE *)v1 + 24) = 1;
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB08);
      v7 = OUTLINED_FUNCTION_15();
LABEL_8:
      __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
      return;
    }
    if (v4 < v6)
    {
      _s14descr24F4C08F1V10DenseBlockVMa();
      OUTLINED_FUNCTION_45();
      v13 = v5 + v11 + *(_QWORD *)(v12 + 72) * v4;
      v1[2] = v14;
      v15 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB08) + 48);
      *a1 = v3;
      sub_22A9A0C44(v13, v15, (uint64_t (*)(_QWORD))_s14descr24F4C08F1V10DenseBlockVMa);
      v7 = OUTLINED_FUNCTION_42();
      goto LABEL_8;
    }
  }
  __break(1u);
}

void sub_22A9A00C8()
{
  sub_22A9A00DC();
}

void sub_22A9A00DC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD);
  void (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_4_4();
  v3 = v2;
  v5 = v4;
  v6 = sub_22ABDD7D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_34();
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    OUTLINED_FUNCTION_48();
    v8 = OUTLINED_FUNCTION_15();
    __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
    return;
  }
  v12 = *(_QWORD *)(v0 + 8);
  v13 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v12 == v13)
    goto LABEL_7;
  if (v12 >= v13)
  {
    __break(1u);
  }
  else
  {
    v14 = *(_QWORD *)v0
        + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + *(_QWORD *)(v7 + 72) * v12;
    *(_QWORD *)(v0 + 8) = v12 + 1;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(v1, v14, v6);
    v16 = *(_QWORD *)(v0 + 16);
    v15 = *(_QWORD *)(v0 + 24);
    v17 = *(_QWORD *)(v16 + 16);
    if (v15 == v17)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
LABEL_7:
      *(_BYTE *)(v0 + 32) = 1;
      OUTLINED_FUNCTION_48();
      v18 = OUTLINED_FUNCTION_15();
LABEL_10:
      __swift_storeEnumTagSinglePayload(v18, v19, v20, v21);
      OUTLINED_FUNCTION_3();
      return;
    }
    if (v15 < v17)
    {
      v3(0);
      OUTLINED_FUNCTION_45();
      v24 = v16 + v22 + *(_QWORD *)(v23 + 72) * v15;
      *(_QWORD *)(v0 + 24) = v25;
      v26 = v5 + *(int *)(OUTLINED_FUNCTION_48() + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v1, v6);
      sub_22A9A0C44(v24, v26, (uint64_t (*)(_QWORD))v3);
      v18 = OUTLINED_FUNCTION_42();
      goto LABEL_10;
    }
  }
  __break(1u);
}

uint64_t sub_22A9A0244()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(uint64_t *, _QWORD);
  id *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_4_4();
  v16 = v2;
  v17 = v3;
  v4 = v0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_6_4();
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB18);
  v8 = *(int *)(result + 56);
  if ((*((_BYTE *)v0 + v8) & 1) != 0)
    return 0;
  v9 = *v0;
  if (!__OFADD__(*v0, 1))
  {
    ++*v0;
    v10 = (char *)v0 + *(int *)(result + 52);
    v11 = *(_QWORD *)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB20) + 36)];
    sub_22A9A0B88(&qword_255B0DB28, &qword_255B0DB10);
    sub_22ABDF38C();
    if (v11 == v15)
    {
      v9 = 0;
      *((_BYTE *)v4 + v8) = 1;
    }
    else
    {
      v12 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
      v14 = *v13;
      v12(&v15, 0);
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v1, v10, v5);
      sub_22ABDF398();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
    }
    return v9;
  }
  __break(1u);
  return result;
}

void sub_22A9A03BC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_32();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_6_4();
  sub_22ABDD7B4();
  v0 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_18();
  type metadata accessor for FullyConnectedNetwork();
  sub_22A9A0BE8(&qword_255B0DAE0, (void (*)(uint64_t))type metadata accessor for FullyConnectedNetwork);
  v1 = *(_QWORD *)(OUTLINED_FUNCTION_19() + 16);
  if (v1)
  {
    v2 = sub_22ABDEAEC() + 48;
    while (1)
    {
      OUTLINED_FUNCTION_29();
      swift_retain();
      OUTLINED_FUNCTION_37();
      v3 = OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_18();
      if (v3 == v0)
        break;
      swift_release();
      OUTLINED_FUNCTION_30();
      v2 += 24;
      if (!--v1)
      {
        OUTLINED_FUNCTION_11_1();
        goto LABEL_8;
      }
    }
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_11_1();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_8:
  OUTLINED_FUNCTION_3();
}

void sub_22A9A04BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  OUTLINED_FUNCTION_4_4();
  v1 = OUTLINED_FUNCTION_32();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_6_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAA8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_34();
  sub_22ABDD790();
  if (__swift_getEnumTagSinglePayload(v0, 1, v1) == 1)
  {
    sub_22A9A0C1C(v0, &qword_255B0DAA8);
  }
  else
  {
    v3 = sub_22ABDDAF0();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
    type metadata accessor for FullyConnectedNetwork();
    sub_22A9A0BE8(&qword_255B0DAE0, (void (*)(uint64_t))type metadata accessor for FullyConnectedNetwork);
    v4 = *(_QWORD *)(OUTLINED_FUNCTION_19() + 16);
    if (v4)
    {
      v5 = sub_22ABDEAEC() + 48;
      while (1)
      {
        OUTLINED_FUNCTION_29();
        swift_retain();
        OUTLINED_FUNCTION_37();
        v6 = OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_18();
        if (v6 == v3)
          break;
        swift_release();
        OUTLINED_FUNCTION_30();
        v5 += 24;
        if (!--v4)
        {
          OUTLINED_FUNCTION_11_1();
          goto LABEL_9;
        }
      }
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_11_1();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
LABEL_9:
  OUTLINED_FUNCTION_3();
}

void sub_22A9A0614(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  FullyConnectedNetworkClassifier.encodeWithOptimizer(_:to:)(a1, a2, a3);
}

void sub_22A9A0628()
{
  FullyConnectedNetworkClassifier.decodeWithOptimizer(from:)();
}

void sub_22A9A063C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_46();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_7_0() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_40();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_47();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_22AA34F34(v0 + 32, v3);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_23();
    *v1 = v2;
    OUTLINED_FUNCTION_38();
    return;
  }
  OUTLINED_FUNCTION_44();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_22A9A06D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  OUTLINED_FUNCTION_4_4();
  v4 = v3 >> 1;
  v5 = (v3 >> 1) - v2;
  if (__OFSUB__(v3 >> 1, v2))
  {
    __break(1u);
    goto LABEL_15;
  }
  v6 = *v0;
  v7 = *(_QWORD *)(*v0 + 16);
  if (__OFADD__(v7, v5))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v2;
  v9 = v1;
  if (!OUTLINED_FUNCTION_7_0() || (v10 = *(_QWORD *)(v6 + 24) >> 1, v10 < v7 + v5))
  {
    OUTLINED_FUNCTION_40();
    v6 = v11;
    v10 = *(_QWORD *)(v11 + 24) >> 1;
  }
  if (v4 == v8)
  {
    if (v5 <= 0)
    {
LABEL_13:
      OUTLINED_FUNCTION_22();
      *v0 = v6;
      OUTLINED_FUNCTION_3();
      return;
    }
    __break(1u);
  }
  if (v10 - *(_QWORD *)(v6 + 16) < v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_22AA34F34(v9 + 8 * v8, v5);
  if (v5 <= 0)
    goto LABEL_13;
  OUTLINED_FUNCTION_44();
  if (!v13)
  {
    *(_QWORD *)(v6 + 16) = v12;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
}

void sub_22A9A07AC()
{
  sub_22A9A0918();
}

uint64_t sub_22A9A07C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22A9A0810()
{
  unint64_t result;

  result = qword_255B0DAA0;
  if (!qword_255B0DAA0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6690, &type metadata for AdamStorage);
    atomic_store(result, (unint64_t *)&qword_255B0DAA0);
  }
  return result;
}

unint64_t sub_22A9A084C()
{
  unint64_t result;

  result = qword_255B0DAD8;
  if (!qword_255B0DAD8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6668, &type metadata for AdamStorage);
    atomic_store(result, (unint64_t *)&qword_255B0DAD8);
  }
  return result;
}

unint64_t sub_22A9A0888()
{
  unint64_t result;

  result = qword_255B0DAF0;
  if (!qword_255B0DAF0)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for ModelUpdateError, &type metadata for ModelUpdateError);
    atomic_store(result, (unint64_t *)&qword_255B0DAF0);
  }
  return result;
}

void sub_22A9A08C4()
{
  sub_22A9A0918();
}

void sub_22A9A08E0()
{
  sub_22A9A0918();
}

void sub_22A9A08FC()
{
  sub_22A9A0918();
}

void sub_22A9A0918()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);
  void (*v3)(uint64_t, uint64_t, uint64_t);
  void (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD);
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  OUTLINED_FUNCTION_4_4();
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *v1;
  v8 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v9 = v4;
  v10 = v3;
  v11 = v2;
  if (!OUTLINED_FUNCTION_7_0() || v8 + v6 > *(_QWORD *)(v7 + 24) >> 1)
    v7 = v11();
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v6)
      goto LABEL_11;
    goto LABEL_13;
  }
  v12 = *(_QWORD *)(v7 + 16);
  v13 = (*(_QWORD *)(v7 + 24) >> 1) - v12;
  v9(0);
  if (v13 < v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_55_0();
  v10(v0 + v15, v6, v7 + v15 + *(_QWORD *)(v14 + 72) * v12);
  if (!v6)
  {
LABEL_11:
    OUTLINED_FUNCTION_23();
    *v1 = v7;
    OUTLINED_FUNCTION_3();
    return;
  }
  OUTLINED_FUNCTION_44();
  if (!v17)
  {
    *(_QWORD *)(v7 + 16) = v16;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_22A9A09F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_46();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_7_0() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_22AA35D20();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_47();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_22AA35204(v0 + 32, v3);
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_23();
    *v1 = v2;
    OUTLINED_FUNCTION_38();
    return;
  }
  OUTLINED_FUNCTION_44();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E2E4D74](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_22A9A0ADC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_35(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9A0B10(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_20(v2);
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9A0B38()
{
  FullyConnectedNetworkClassifier.decode(from:)();
}

unint64_t sub_22A9A0B4C()
{
  unint64_t result;

  result = qword_2540E8628;
  if (!qword_2540E8628)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2540E8628);
  }
  return result;
}

void sub_22A9A0B88(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_61();
  }
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9A0BBC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_12_2(v3);
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9A0BE8(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_61();
  }
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9A0C1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_20(v2);
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9A0C44(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_35(a1, a2, a3);
  OUTLINED_FUNCTION_12_2(v3);
  OUTLINED_FUNCTION_0_5();
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return sub_22ABDE8F4();
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_8_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 416))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 432))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_12_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 440))(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_19()
{
  return sub_22ABDD814();
}

uint64_t OUTLINED_FUNCTION_20(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_24()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_25_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a1 + 8))(v1, *(_QWORD *)(v2 - 200));
}

void OUTLINED_FUNCTION_26(uint64_t a1)
{
  uint64_t *v1;

  sub_22A9A0C1C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return v0;
}

uint64_t OUTLINED_FUNCTION_28()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_29()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_30()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_32()
{
  return sub_22ABDDB08();
}

uint64_t OUTLINED_FUNCTION_35(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_36()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_37()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_39()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_40()
{
  sub_22AA35C20();
}

uint64_t OUTLINED_FUNCTION_41()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_42()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_43()
{
  return sub_22ABDDAF0();
}

uint64_t OUTLINED_FUNCTION_48()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_49@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_50()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_51@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_52(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_54()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_56()
{
  type metadata accessor for FullyConnectedNetworkClassifierModel();
}

uint64_t OUTLINED_FUNCTION_57()
{
  return type metadata accessor for FullyConnectedNetwork();
}

uint64_t OUTLINED_FUNCTION_58()
{
  return 0;
}

void OUTLINED_FUNCTION_59(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_22A9A0B10(a1, v1);
}

uint64_t OUTLINED_FUNCTION_60()
{
  return sub_22ABDD7D8();
}

void OUTLINED_FUNCTION_61()
{
  JUMPOUT(0x22E2E4D80);
}

double ApplyEachRandomly.probability.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double ApplyEachRandomly.init<A>(probability:_:)@<D0>(void (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, double *a5@<X8>, double a6@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;
  uint64_t v17[5];
  double v18;
  uint64_t v19;

  v17[0] = a2;
  v17[1] = a2;
  swift_getExtendedExistentialTypeMetadata();
  v19 = sub_22ABDF068();
  v18 = a6;
  v17[3] = a3;
  v17[4] = a4;
  __swift_allocate_boxed_opaque_existential_1(v17);
  a1();
  v14 = type metadata accessor for ApplyEachRandomly(0, a2, v12, v13);
  sub_22A9A105C((uint64_t)v17, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  result = v18;
  v16 = v19;
  *a5 = v18;
  *((_QWORD *)a5 + 1) = v16;
  return result;
}

uint64_t sub_22A9A105C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  __int128 v11;
  uint64_t v12[3];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  sub_22A9A1A28(a1, (uint64_t)v12);
  swift_getExtendedExistentialTypeMetadata();
  swift_getExtendedExistentialTypeMetadata_unique();
  if (swift_dynamicCast())
  {
    sub_22A9A1880(&v11, (uint64_t)v15);
    v4 = v16;
    v5 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v6 = *(void (**)(uint64_t, uint64_t))(v5 + 64);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1(v12);
    v6(v4, v5);
    sub_22A9A105C(v12, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    v7 = v16;
    v8 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 88);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1(v12);
    v9(v7, v8);
    sub_22A9A105C(v12, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_22A9A1A28(a1, (uint64_t)v15);
    sub_22ABDF0F8();
    return sub_22ABDF0C8();
  }
}

uint64_t ApplyEachRandomly.applied<A>(to:generator:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v9[23] = a7;
  v9[24] = a8;
  v9[21] = a4;
  v9[22] = a5;
  v9[19] = a2;
  v9[20] = a3;
  v9[18] = a1;
  v10 = *(_QWORD *)(a6 + 16);
  v9[25] = v10;
  v9[26] = *(_QWORD *)(v10 - 8);
  v9[27] = swift_task_alloc();
  v9[28] = *v8;
  v9[29] = v8[1];
  return swift_task_switch();
}

uint64_t sub_22A9A12C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ExtendedExistentialTypeMetadata;
  uint64_t v4;
  char v5;
  uint64_t result;

  v1 = v0[29];
  v2 = v0[25];
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v0[26] + 16))(v0[18], v0[19], v2);
  sub_22ABDEAEC();
  v0[12] = v2;
  v0[13] = v2;
  ExtendedExistentialTypeMetadata = swift_getExtendedExistentialTypeMetadata();
  v0[30] = ExtendedExistentialTypeMetadata;
  v4 = sub_22ABDEFFC();
  v0[16] = v4;
  if (v4 == MEMORY[0x22E2E3364](v1, ExtendedExistentialTypeMetadata))
  {
    OUTLINED_FUNCTION_7_1();
    swift_task_dealloc();
    __asm { BR              X0 }
  }
  v5 = OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_1_1();
  if ((v5 & 1) != 0)
  {
    sub_22A9A1A28(v0[29] + 40 * v4 + 32, (uint64_t)(v0 + 2));
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_6_5();
  }
  result = OUTLINED_FUNCTION_2_5();
  __break(1u);
  return result;
}

uint64_t sub_22A9A14D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_22A9A1540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  v6 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v7 = *(_QWORD *)(v0 + 128);
  if (v7 == MEMORY[0x22E2E3364](v6, v5))
  {
    OUTLINED_FUNCTION_7_1();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_1_1();
    if ((v8 & 1) != 0)
    {
      sub_22A9A1A28(*(_QWORD *)(v0 + 232) + 40 * v7 + 32, v0 + 16);
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_6_5();
    }
    result = OUTLINED_FUNCTION_2_5();
    __break(1u);
  }
  return result;
}

uint64_t sub_22A9A171C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 200));
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9A1770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_22A99DE80;
  return ApplyEachRandomly.applied<A>(to:generator:eventHandler:)(a1, a2, a3, a4, a5, a8, a6, a7);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t type metadata accessor for ApplyEachRandomly(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ApplyEachRandomly);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_22A9A1880(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_22A9A1898()
{
  unint64_t result;

  result = qword_255B0DB50[0];
  if (!qword_255B0DB50[0])
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE45A8], MEMORY[0x24BEE4568]);
    atomic_store(result, qword_255B0DB50);
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_22A9A18F8()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *initializeBufferWithCopyOfBuffer for MetricsKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_22ABDEAEC();
  return a1;
}

uint64_t destroy for TemporalSegmentIdentifier()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22A9A1934(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_22A9A1974(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_22A9A1A28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_6(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *a1 = v2;
  a1[1] = v1;
  result = *(_QWORD *)(v2 + 216);
  *(_QWORD *)(v4 + 16) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  return sub_22ABDF800();
}

uint64_t OUTLINED_FUNCTION_3_6()
{
  uint64_t v0;

  return *(unsigned int *)(*(_QWORD *)(v0 + 24) + 4);
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return sub_22ABDF08C();
}

unint64_t OUTLINED_FUNCTION_5_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  uint64_t v9;

  *(_OWORD *)(v9 + 112) = a9;
  return sub_22A99CE8C();
}

void OUTLINED_FUNCTION_6_5()
{
  JUMPOUT(0x22E2E3370);
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A9A1AF0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22A9A1AF8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDF5D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22A9A1B64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_22A9A1C34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  result = __swift_getEnumTagSinglePayload(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return result;
}

void *sub_22A9A1C80(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_22A9A1D10(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_22A9A1DE8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_22A9A1E78(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumTagSinglePayload;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  v7 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_22A9A1F50(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = 8 * v8;
    if (v8 > 3)
      goto LABEL_8;
    v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v8);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v8);
        if (!*(_BYTE *)(a1 + v8))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v8 > 3)
          v13 = 0;
        if ((_DWORD)v8)
        {
          if (v8 > 3)
            LODWORD(v8) = 4;
          __asm { BR              X12 }
        }
        return v7 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v8);
      if (*(_WORD *)(a1 + v8))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v6 < 2)
    return 0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v6, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

void sub_22A9A207C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_22A9A2210()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_22A9A2218()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t type metadata accessor for ComparableOptional(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ComparableOptional);
}

uint64_t sub_22A9A2248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  __swift_storeEnumTagSinglePayload(a3, 1, 1, a2);
  v5 = OUTLINED_FUNCTION_8_3();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a3, a1, v5);
}

void sub_22A9A22A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;

  v7 = *(_QWORD *)(a3 - 8);
  v23 = a4;
  v24 = v7;
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v23 - v11;
  v13 = OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_6();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v23 - v16;
  v18 = (char *)&v23 + *(int *)(v15 + 48) - v16;
  v19 = *(_QWORD *)(v13 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v20((char *)&v23 - v16, a1, v13);
  v20(v18, a2, v13);
  OUTLINED_FUNCTION_0_7((uint64_t)v17);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v13);
  }
  else
  {
    OUTLINED_FUNCTION_0_7((uint64_t)v18);
    if (v21)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, a3);
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
      v22(v12, v17, a3);
      v22(v10, v18, a3);
      sub_22ABDEC30();
      OUTLINED_FUNCTION_7_2((uint64_t)v10);
      OUTLINED_FUNCTION_7_2((uint64_t)v12);
    }
  }
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22A9A2434()
{
  sub_22ABDF5D8();
  return sub_22ABDF5E4();
}

void sub_22A9A2474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v28 = a4;
  v30 = *(_QWORD *)(a3 - 8);
  v31 = a2;
  MEMORY[0x24BDAC7A8](a1);
  v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_11_2();
  v8 = OUTLINED_FUNCTION_10_0();
  v29 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_6();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - v11;
  v13 = *(_QWORD *)(v7 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v26 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v26 - v20;
  OUTLINED_FUNCTION_5_4((uint64_t)&v26 - v20, a1);
  OUTLINED_FUNCTION_5_4((uint64_t)v19, v31);
  v22 = (uint64_t)&v12[*(int *)(v8 + 48)];
  OUTLINED_FUNCTION_5_4((uint64_t)v12, (uint64_t)v21);
  OUTLINED_FUNCTION_5_4(v22, (uint64_t)v19);
  OUTLINED_FUNCTION_0_7((uint64_t)v12);
  if (!v23)
  {
    OUTLINED_FUNCTION_5_4((uint64_t)v16, (uint64_t)v12);
    OUTLINED_FUNCTION_0_7(v22);
    if (!v23)
    {
      v25 = (uint64_t)v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v27, v22, a3);
      LODWORD(v31) = sub_22ABDECFC();
      OUTLINED_FUNCTION_7_2(v25);
      OUTLINED_FUNCTION_1_2((uint64_t)v19);
      OUTLINED_FUNCTION_1_2((uint64_t)v21);
      OUTLINED_FUNCTION_7_2((uint64_t)v16);
      OUTLINED_FUNCTION_1_2((uint64_t)v12);
      goto LABEL_10;
    }
    v24 = *(void (**)(char *, uint64_t))(v13 + 8);
    v24(v19, v7);
    v24(v21, v7);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v16, a3);
LABEL_9:
    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v8);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_1_2((uint64_t)v19);
  OUTLINED_FUNCTION_1_2((uint64_t)v21);
  OUTLINED_FUNCTION_0_7(v22);
  if (!v23)
    goto LABEL_9;
  OUTLINED_FUNCTION_1_2((uint64_t)v12);
LABEL_10:
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22A9A26D8()
{
  sub_22ABE0244();
  sub_22A9A2434();
  return sub_22ABE0280();
}

uint64_t sub_22A9A2724()
{
  sub_22ABE0244();
  sub_22A9A2434();
  return sub_22ABE0280();
}

void sub_22A9A2764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22A9A22A0(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_22A9A277C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22A9A2474(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_22A9A2788(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v23 = a6;
  v22 = a4;
  v10 = sub_22ABDF5D8();
  v11 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - v13;
  v29 = type metadata accessor for ComparableOptional(0, a2, a3, a5);
  v26 = *(_QWORD *)(v29 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v22 - v16;
  OUTLINED_FUNCTION_4_6((uint64_t)&v22 - v16, 1);
  v18 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = v24;
  sub_22ABE028C();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v29);
  }
  else
  {
    v24 = v10;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    if ((sub_22ABDFF8C() & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v24);
      OUTLINED_FUNCTION_4_6((uint64_t)v17, 1);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v27, v28);
      sub_22ABDFF80();
      OUTLINED_FUNCTION_4_6((uint64_t)v14, 0);
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v14, v24);
    }
    OUTLINED_FUNCTION_9_0();
    v20 = v26;
    v21 = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v23, v17, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v21);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22A9A2980(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_22A9A2788(a1, a2[2], a2[3], *(_QWORD *)(a3 - 8), a2[4], a4);
}

void sub_22A9A29A4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v14[2];
  _BYTE v15[24];
  uint64_t v16;
  uint64_t v17;

  v14[1] = a3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = sub_22ABDF5D8();
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_6();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v14 - v9;
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02A4();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, v17, v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    sub_22ABDFFBC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, v4);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    sub_22ABDFFB0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v4);
  }
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_16();
}

void sub_22A9A2B28(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_22A9A29A4(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t sub_22A9A2B40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = OUTLINED_FUNCTION_8_3();
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v11 - v7, v2, v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return 0;
  }
  else
  {
    v9 = sub_22ABDFD7C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v8, v3);
  }
  return v9;
}

uint64_t sub_22A9A2C1C(uint64_t a1)
{
  return sub_22A9A2B40(a1);
}

uint64_t sub_22A9A2C24()
{
  sub_22ABDF5D8();
  return sub_22ABDF5CC();
}

void sub_22A9A2C44()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_7(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_4_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_5_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_7_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_9_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 120);
}

uint64_t OUTLINED_FUNCTION_10_0()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return sub_22ABDF5D8();
}

double ImageRotator.angle.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ImageRotator.angle.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*ImageRotator.angle.modify())()
{
  return nullsub_1;
}

CreateMLComponents::ImageRotator __swiftcall ImageRotator.init(angle:)(CreateMLComponents::ImageRotator angle)
{
  CreateMLComponents::ImageRotator *v1;

  v1->angle = angle.angle;
  return angle;
}

id ImageRotator.applied(to:eventHandler:)(uint64_t a1)
{
  id result;
  void *v3;
  void *v4;
  id v5;

  sub_22A9A2DBC();
  result = sub_22A9A2DF8();
  if (result)
  {
    v3 = result;
    objc_msgSend(result, sel_setValue_forKey_, a1, *MEMORY[0x24BDBF960]);
    v4 = (void *)sub_22ABDF218();
    objc_msgSend(v3, sel_setValue_forKey_, v4, *MEMORY[0x24BDBF918]);

    result = objc_msgSend(v3, sel_outputImage);
    if (result)
    {
      v5 = result;

      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_22A9A2DBC()
{
  unint64_t result;

  result = qword_255B0DC80;
  if (!qword_255B0DC80)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255B0DC80);
  }
  return result;
}

id sub_22A9A2DF8()
{
  void *v0;
  id v1;

  v0 = (void *)sub_22ABDED2C();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_filterWithName_, v0);

  return v1;
}

uint64_t sub_22A9A2E58(id *a1, uint64_t *a2)
{
  uint64_t v2;

  *a1 = ImageRotator.applied(to:eventHandler:)(*a2);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v2 + 8));
}

ValueMetadata *type metadata accessor for ImageRotator()
{
  return &type metadata for ImageRotator;
}

uint64_t sub_22A9A2EA8(uint64_t (*a1)(void))
{
  return a1();
}

void sub_22A9A2EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v2, v1);
  type metadata accessor for ComposedUpdatableTemporalEstimator();
}

uint64_t sub_22A9A2EFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_79(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

void sub_22A9A2F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_4_4();
  a19 = v23;
  a20 = v24;
  OUTLINED_FUNCTION_70();
  type metadata accessor for TemporalTransformerToUpdatableEstimatorAdaptor(0, v25, v26, v25);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v27);
  TemporalTransformerToUpdatableEstimatorAdaptor.init(_:)(v22, v21, v20);
  OUTLINED_FUNCTION_84();
}

void sub_22A9A2F9C()
{
  sub_22A9A2EB4();
}

void sub_22A9A2FBC()
{
  OUTLINED_FUNCTION_3();
}

void sub_22A9A2FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v9[11] = a8;
  v9[12] = v8;
  v9[9] = a6;
  v9[10] = a7;
  v9[7] = a4;
  v9[8] = a5;
  v9[5] = a2;
  v9[6] = a3;
  v9[4] = a1;
  v9[13] = *(_QWORD *)(*(_QWORD *)(a5 + 40) + 8);
  v9[14] = *(_QWORD *)(a5 + 24);
  v11 = OUTLINED_FUNCTION_77();
  v9[15] = v11;
  v9[16] = *(_QWORD *)(v11 - 8);
  v9[17] = swift_task_alloc();
  v9[18] = swift_task_alloc();
  OUTLINED_FUNCTION_77();
  v9[19] = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[20] = AssociatedTypeWitness;
  v9[21] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[22] = OUTLINED_FUNCTION_23_0();
  v9[23] = OUTLINED_FUNCTION_38_0();
  v13 = OUTLINED_FUNCTION_9_1();
  v9[24] = v13;
  v9[25] = *(_QWORD *)(v13 - 8);
  v9[26] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v9[27] = OUTLINED_FUNCTION_0_0();
  v9[28] = *(_QWORD *)(a6 - 8);
  v9[29] = OUTLINED_FUNCTION_0_0();
  v14 = OUTLINED_FUNCTION_9_1();
  v9[30] = v14;
  v9[31] = *(_QWORD *)(v14 - 8);
  v9[32] = OUTLINED_FUNCTION_0_0();
  v15 = swift_checkMetadataState();
  v9[33] = v15;
  v9[34] = *(_QWORD *)(v15 - 8);
  v9[35] = OUTLINED_FUNCTION_23_0();
  v9[36] = OUTLINED_FUNCTION_38_0();
  v16 = (_QWORD *)OUTLINED_FUNCTION_25();
  v9[37] = v16;
  *v16 = v9;
  v16[1] = sub_22A9A31FC;
  __asm { BR              X8 }
}

uint64_t sub_22A9A31FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22A9A325C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(void);
  uint64_t v8;

  v1 = v0[38];
  sub_22ABDF1DC();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[34] + 8))(v0[36], v0[33]);
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    swift_task_dealloc();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_16_3(v2);
  }
  else
  {
    v0[2] = sub_22ABDE9F0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_54_0();
    v4 = v0[27];
    v5 = v0[24];
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_60_0();
    if (__swift_getEnumTagSinglePayload(v4, 1, v5) == 1)
    {
      OUTLINED_FUNCTION_30_0(v0[31]);
      sub_22ABDF1DC();
      v8 = OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_44_0(v8);
      OUTLINED_FUNCTION_84();
    }
    OUTLINED_FUNCTION_48_0();
    v6 = (_QWORD *)OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_20_0(v6);
    return OUTLINED_FUNCTION_15_0(v7);
  }
}

uint64_t sub_22A9A33AC()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_22_0((uint64_t)sub_22A9A3594);
  return OUTLINED_FUNCTION_14_0(v0);
}

uint64_t sub_22A9A33DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 320) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9A3434()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  _QWORD *v6;
  uint64_t (*v7)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62();
  v1 = v0[40];
  v2 = v0[27];
  v3 = v0[24];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_60_0();
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) == 1)
  {
    OUTLINED_FUNCTION_30_0(v0[31]);
    sub_22ABDF1DC();
    if (!v1)
    {
      v8 = OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_44_0(v8);
      OUTLINED_FUNCTION_84();
    }
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    swift_task_dealloc();
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_16_3(v4);
  }
  else
  {
    OUTLINED_FUNCTION_48_0();
    v6 = (_QWORD *)OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_20_0(v6);
    return OUTLINED_FUNCTION_15_0(v7);
  }
}

uint64_t sub_22A9A3564()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_22_0((uint64_t)sub_22A9A3594);
  return OUTLINED_FUNCTION_14_0(v0);
}

uint64_t sub_22A9A3594()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 344) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22A9A35F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[35];
  v2 = v0[33];
  v4 = v0[16];
  v3 = v0[17];
  v5 = v0[4];
  OUTLINED_FUNCTION_79(v1, v0[36], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[34] + 32));
  OUTLINED_FUNCTION_83(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  swift_getAssociatedConformanceWitness();
  ComposedTemporalTransformer.init(_:_:)(v1, v2, v5);
}

uint64_t sub_22A9A36B4()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_39_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9A3720()
{
  uint64_t v0;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9A3774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_68();
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 200));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9A37FC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 272));
  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22A9A385C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  _QWORD v12[3];
  uint64_t v13;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v12[2] = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 8);
  v13 = v2;
  v12[1] = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v3);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v12 - v8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v5, v4);
  v10 = OUTLINED_FUNCTION_74();
  v11(v10);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_85();
  ComposedTemporalTransformer.init(_:_:)((uint64_t)v9, v6, v13);
}

void sub_22A9A3984()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22A9A3990()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v17)(void);

  OUTLINED_FUNCTION_67();
  v3 = v2;
  v1[15] = v4;
  v1[16] = v0;
  v1[13] = v2;
  v1[14] = v5;
  v1[11] = v6;
  v1[12] = v7;
  v1[9] = v8;
  v1[10] = v9;
  v1[8] = v10;
  v11 = *(_QWORD *)(v7 + 32);
  v1[17] = swift_getAssociatedTypeWitness();
  v1[18] = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[19] = AssociatedTypeWitness;
  v1[20] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v1[21] = OUTLINED_FUNCTION_23_0();
  v1[22] = OUTLINED_FUNCTION_38_0();
  v13 = OUTLINED_FUNCTION_9_1();
  v1[23] = v13;
  v1[24] = *(_QWORD *)(v13 - 8);
  v1[25] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v1[26] = OUTLINED_FUNCTION_0_0();
  v1[27] = *(_QWORD *)(v3 - 8);
  v1[28] = OUTLINED_FUNCTION_0_0();
  v14 = OUTLINED_FUNCTION_9_1();
  v1[29] = v14;
  v1[30] = *(_QWORD *)(v14 - 8);
  v1[31] = OUTLINED_FUNCTION_0_0();
  v17 = (uint64_t (*)(void))(**(int **)(v11 + 24) + *(_QWORD *)(v11 + 24));
  v15 = (_QWORD *)swift_task_alloc();
  v1[32] = v15;
  *v15 = v1;
  v15[1] = sub_22A9A3B38;
  OUTLINED_FUNCTION_74();
  return OUTLINED_FUNCTION_3_7(v17);
}

uint64_t sub_22A9A3B38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_69(&v4);
  *(_QWORD *)(v2 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_7_3((uint64_t (*)(void))v1[1]);
  }
  else
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_4();
  }
}

uint64_t sub_22A9A3BC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_67();
  v1 = v0[33];
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_19_0(v2);
  }
  else
  {
    v0[6] = sub_22ABDE9F0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_54_0();
    v4 = v0[26];
    v5 = v0[23];
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_60_0();
    if (__swift_getEnumTagSinglePayload(v4, 1, v5) == 1)
    {
      OUTLINED_FUNCTION_30_0(v0[30]);
      sub_22ABDF1DC();
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_55_1();
      v8 = OUTLINED_FUNCTION_45_0();
      OUTLINED_FUNCTION_42_0(v8);
    }
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_61_0();
    v6 = (_QWORD *)OUTLINED_FUNCTION_40_0();
    v0[34] = v6;
    OUTLINED_FUNCTION_24_0(v6);
    return OUTLINED_FUNCTION_18_0(v7);
  }
}

#error "22A9A3D3C: call analysis failed (funcsize=16)"

uint64_t sub_22A9A3D48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 280) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9A3DA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  _QWORD *v6;
  uint64_t (*v7)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62();
  v1 = v0[35];
  v2 = v0[26];
  v3 = v0[23];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_60_0();
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) == 1)
  {
    OUTLINED_FUNCTION_30_0(v0[30]);
    sub_22ABDF1DC();
    if (!v1)
    {
      OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_55_1();
      v8 = OUTLINED_FUNCTION_45_0();
      OUTLINED_FUNCTION_42_0(v8);
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_19_0(v4);
  }
  else
  {
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_61_0();
    v6 = (_QWORD *)OUTLINED_FUNCTION_40_0();
    v0[34] = v6;
    OUTLINED_FUNCTION_24_0(v6);
    return OUTLINED_FUNCTION_18_0(v7);
  }
}

#error "22A9A3F04: call analysis failed (funcsize=16)"

uint64_t sub_22A9A3F10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 304) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9A3F70()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9A3FD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 192));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_7_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9A4034()
{
  uint64_t v0;

  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_7_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9A4078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 32) + 8) + 32))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    OUTLINED_FUNCTION_74();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTemporalTransformer();
  }
  return result;
}

void sub_22A9A41C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = *(_QWORD *)(a2 + 24);
  v27 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8);
  v6 = OUTLINED_FUNCTION_32_0();
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_87();
  v24 = v7;
  v9 = MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_75(v9, v10, v11, v12, v13, v14, v15, v16, v20);
  v17 = OUTLINED_FUNCTION_32_0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_71(a1);
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v27 + 40))(a1, v26);
    (*(void (**)(uint64_t, void *, uint64_t))(v18 + 32))(v4, &protocol requirements base descriptor for TemporalEstimator, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v24, v25, v22);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_80();
    ComposedTemporalTransformer.init(_:_:)(v4, v17, a3);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9A43A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 32) + 32))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTemporalTransformer();
  }
  return result;
}

void sub_22A9A4500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = *(_QWORD *)(a2 + 40);
  v26 = *(_QWORD *)(a2 + 24);
  v21 = OUTLINED_FUNCTION_32_0();
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_87();
  v22 = v5;
  v7 = MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_75(v7, v8, v9, v10, v11, v12, v13, v14, v20);
  v15 = OUTLINED_FUNCTION_32_0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_71(a1);
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 40))(a1, v26);
    (*(void (**)(uint64_t, void *, uint64_t))(v16 + 32))(v3, &protocol requirements base descriptor for TemporalEstimator, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v24, v21);
    OUTLINED_FUNCTION_86();
    OUTLINED_FUNCTION_86();
    v18 = OUTLINED_FUNCTION_74();
    ComposedTemporalTransformer.init(_:_:)(v18, v15, v19);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9A46E4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A99DE80;
  return sub_22A9A3990();
}

uint64_t sub_22A9A4788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9A43A8(a1, a2, a3);
}

void sub_22A9A479C(uint64_t a1, uint64_t a2)
{
  sub_22A9A4500(a1, a2);
}

void sub_22A9A47B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_22A99E4B4;
  sub_22A9A2FC8(a1, a2, a3, a4, a8, a5, a6, a7);
}

uint64_t sub_22A9A4858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9A4078(a1, a2, a3);
}

void sub_22A9A486C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22A9A41C8(a1, a2, a3);
}

void UpdatableEstimator.appending<A>(_:)()
{
  sub_22A9A4898();
}

{
  sub_22A9A4898();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_4_4();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v15 = v14 - v13;
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_23_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v1, v0, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v11, v7);
  v18 = OUTLINED_FUNCTION_74();
  sub_22AA1241C(v18, v19, v7, v9, v3, v5);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_4();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_23();
  type metadata accessor for UpdatableEstimatorToTemporalAdaptor(0, v1, v2, v2);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_89_7();
  OUTLINED_FUNCTION_149_1();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_115_0();
}

void sub_22A9A4898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_4_4();
  v3 = v2;
  v5 = v4;
  v19 = v6;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v11 = v10 - v9;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v15 = OUTLINED_FUNCTION_57_0();
  type metadata accessor for UpdatableEstimatorToTemporalAdaptor(v15, v16, v17, v17);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v1, v0, v5);
  UpdatableEstimatorToTemporalAdaptor.init(_:)(v1, v5, v3);
  OUTLINED_FUNCTION_79(v11, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9A4974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v5 - 88))(v2, v4, v1, v3, a1, *(_QWORD *)(v5 - 96));
  OUTLINED_FUNCTION_3();
}

void UpdatableTemporalEstimator.appending<A>(_:)()
{
  sub_22A9A4A20();
}

{
  sub_22A9A4A20();
}

{
  sub_22A9A4B4C();
}

{
  sub_22A9A4B4C();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_4_4();
  v1 = OUTLINED_FUNCTION_61_17(v0);
  type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(v1, v2, v3, v4);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v5);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_33_34();
}

void sub_22A9A4A20()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_4_4();
  v21 = v2;
  v3 = v0;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v12 = OUTLINED_FUNCTION_57_0();
  v15(v12, v13, v14);
  OUTLINED_FUNCTION_10_1();
  v17 = MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19 - v18, v3, v9);
  OUTLINED_FUNCTION_83(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v21(v1, v7, v5);
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9A4B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(v5 - 96))(v4, v3, v2, v1, *(_QWORD *)(v5 - 88), a1);
  OUTLINED_FUNCTION_3();
}

void sub_22A9A4B4C()
{
  uint64_t v0;
  void (*v1)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_4_4();
  v21 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v15 = v14 - v13;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v18, v0, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v11, v7);
  v21(v18, v15, v9, v7, v5, v3);
  OUTLINED_FUNCTION_3();
}

void sub_22A9A4C28(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = a1[3];
  v6 = type metadata accessor for UpdatableEstimatorToTemporalAdaptor(255, *a1, a1[2], a4);
  type metadata accessor for TemporalTransformerToUpdatableEstimatorAdaptor(255, v4, v5, v7);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableEstimatorToTemporalAdaptor<A>, v6);
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9A4C84()
{
  OUTLINED_FUNCTION_43_0();
}

void type metadata accessor for ComposedUpdatableTemporalEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22A9A4CB4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for UpdatableEstimatorToTemporalAdaptor(255, *a1, a1[2], a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9A4CE8()
{
  OUTLINED_FUNCTION_43_0();
}

void sub_22A9A4D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for TransformerToTemporalAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9A4D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for TemporalTransformerToUpdatableEstimatorAdaptor(255, v4, a1, a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9A4D60()
{
  OUTLINED_FUNCTION_43_0();
}

void sub_22A9A4D84(uint64_t a1)
{
  get_witness_table_18CreateMLComponents26UpdatableTemporalEstimatorRzAA0cE0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcdE0VyxAA0ce2ToD7AdaptorVyqd__GGAaBHPyHCTm(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))type metadata accessor for UpdatableEstimatorToTemporalAdaptor, (uint64_t)&protocol conformance descriptor for UpdatableEstimatorToTemporalAdaptor<A>);
}

void sub_22A9A4D98(uint64_t a1)
{
  get_witness_table_18CreateMLComponents26UpdatableTemporalEstimatorRzAA0cE0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcdE0VyxAA0ce2ToD7AdaptorVyqd__GGAaBHPyHCTm(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))type metadata accessor for TemporalTransformerToUpdatableEstimatorAdaptor, (uint64_t)&protocol conformance descriptor for TemporalTransformerToUpdatableEstimatorAdaptor<A>);
}

void get_witness_table_18CreateMLComponents26UpdatableTemporalEstimatorRzAA0cE0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcdE0VyxAA0ce2ToD7AdaptorVyqd__GGAaBHPyHCTm(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD), uint64_t a3)
{
  uint64_t v4;

  v4 = a2(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24));
  MEMORY[0x22E2E4D80](a3, v4);
  OUTLINED_FUNCTION_43_0();
}

void sub_22A9A4E0C()
{
  OUTLINED_FUNCTION_43_0();
}

uint64_t sub_22A9A4E40()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22A9A4E48()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22A9A4ED4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_DWORD *)(v6 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v5);
  }
  return v4;
}

uint64_t sub_22A9A4FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_22A9A4FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_22A9A5068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_22A9A50D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_22A9A5140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_22A9A51AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9A5288 + 4 * byte_22ABE9150[v21 - 1]))();
}

void sub_22A9A52FC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_22A9A54F0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9A5500(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&unk_22ABE9198);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_6(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_3_7@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_6_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_7_3(uint64_t (*a1)(void))
{
  return a1();
}

void OUTLINED_FUNCTION_8_4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[6];
  v0[36] = v1;
  v0[7] = v1;
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_12_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_14_0@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_15_0@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_16_3(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_17()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_18_0@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_19_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_20_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 312) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 184);
}

uint64_t OUTLINED_FUNCTION_22_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;

  *v2 = v1;
  v2[1] = a1;
  result = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 104);
  return result;
}

uint64_t OUTLINED_FUNCTION_24_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 176);
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_27_1@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  *v5 = v4;
  v5[1] = a1;
  *(_QWORD *)(v6 + 16) = v3;
  return a3;
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_30_0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t OUTLINED_FUNCTION_31()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_32_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_34_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 296) = a1;
  return sub_22ABDF0F8();
}

void OUTLINED_FUNCTION_37_0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_41_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_42_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = v3;
  v1[3] = v4;
  v1[4] = v2;
  v1[5] = a1;
  type metadata accessor for ComposedTemporalTransformer();
}

void OUTLINED_FUNCTION_43_0()
{
  type metadata accessor for ComposedUpdatableTemporalEstimator();
}

uint64_t OUTLINED_FUNCTION_44_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 336) = a1;
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_47_0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[24] + 32))(v0[25], v0[26], v0[23]);
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[25] + 32))(v0[26], v0[27], v0[24]);
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_51_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_53_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  return sub_22ABDEE58();
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_57_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_60_0()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_61_0()
{
  return swift_checkMetadataState();
}

uint64_t OUTLINED_FUNCTION_62()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_63_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_64()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_65()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_66_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_69(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t OUTLINED_FUNCTION_71(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_72()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_74()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_75(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 112) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_76()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_77()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_78()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_79@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_80()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_82()
{
  return sub_22ABDF0C8();
}

uint64_t OUTLINED_FUNCTION_83@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

void OUTLINED_FUNCTION_84()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_85()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_86()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t *sub_22A9A5B0C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22ABDD7D8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_22ABDEAEC();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_22ABDD538();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v7;
}

uint64_t sub_22A9A5BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_22ABDD7D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_22ABDD538();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_22A9A5C5C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22ABDD7D8();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  sub_22ABDEAEC();
  v10(v7, v8, v9);
  v11 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22ABDD538();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

_QWORD *sub_22A9A5D10(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22ABDD7D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_22ABDD538();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_QWORD *sub_22A9A5DC4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22ABDD7D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_22ABDD538();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *sub_22A9A5E64(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_22ABDD7D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_22ABDD538();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_22A9A5F0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9A5F18(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_26_1();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = OUTLINED_FUNCTION_43_1();
      v10 = *(int *)(a3 + 28);
    }
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_22A9A5FA8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_22A9A5FB4(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_26_1();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = OUTLINED_FUNCTION_43_1();
      v10 = *(int *)(a4 + 28);
    }
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FullyConnectedNetwork()
{
  uint64_t result;

  result = qword_255B0DDD8;
  if (!qword_255B0DDD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22A9A6078()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22ABDD7D8();
  if (v1 <= 0x3F)
  {
    result = sub_22ABDD538();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22A9A6118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  sub_22ABDEAEC();
  v1 = sub_22A99E738();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA88);
  v2 = OUTLINED_FUNCTION_26_1();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22ABE8E30;
  v6 = v5 + v4;
  v7 = OUTLINED_FUNCTION_57();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v6, v0 + *(int *)(v7 + 20), v2);
  sub_22A9A07AC();
  return v1;
}

uint64_t sub_22A9A61EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int EnumTagSinglePayload;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;

  v9 = _s14descr24F4C08F1V10DenseBlockVMa();
  v52 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v13 = v12 - v11;
  v14 = OUTLINED_FUNCTION_26_1();
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0();
  v46 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_34_1();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v44 - v19;
  v45 = OUTLINED_FUNCTION_57();
  v21 = &a4[*(int *)(v45 + 28)];
  sub_22ABDD52C();
  v22 = OUTLINED_FUNCTION_43_1();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v22);
  v53 = v22;
  if (EnumTagSinglePayload == 1)
  {
    sub_22ABDD514();
    sub_22A9A0C1C((uint64_t)v20, &qword_255B0DE30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, v20, v22);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_24;
  while (1)
  {
    v25 = *(_QWORD *)(a1 + 16);
    v24 = *(_QWORD *)(a1 + 24);
    v49 = a4;
    if (v25 >= v24 >> 1)
    {
      OUTLINED_FUNCTION_57_1();
      a1 = v43;
    }
    *(_QWORD *)(a1 + 16) = v25 + 1;
    *(_QWORD *)(a1 + 8 * v25 + 32) = a2;
    v50 = a1;
    v26 = sub_22A9A6674(1, a1);
    v51 = v28;
    a4 = (char *)(v29 >> 1);
    v30 = (v29 >> 1) - v27;
    if (__OFSUB__(v29 >> 1, v27))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (!v30)
      break;
    v31 = v27;
    v44[1] = v26;
    v54 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_22ABDEAEC();
    a2 = &v54;
    sub_22AB4D094();
    if ((v30 & 0x8000000000000000) != 0)
      goto LABEL_26;
    sub_22ABDD628();
    while (v31 < (uint64_t)a4)
    {
      if (a3 < 0)
        goto LABEL_28;
      __swift_storeEnumTagSinglePayload(v4, 1, 1, v53);
      OUTLINED_FUNCTION_38_1();
      sub_22ABDD5E0();
      sub_22A9A0C1C(v4, &qword_255B0DE30);
      sub_22ABDD604();
      sub_22ABDD7C0();
      OUTLINED_FUNCTION_38_1();
      sub_22ABDDA60();
      *(_QWORD *)(v13 + *(int *)(v9 + 24)) = a3;
      a2 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4D094();
        a2 = v54;
      }
      v32 = a2[2];
      if (v32 >= a2[3] >> 1)
      {
        sub_22AB4D094();
        a2 = v54;
      }
      a2[2] = v32 + 1;
      OUTLINED_FUNCTION_24_1();
      sub_22A9A0ADC(v13, v33, (uint64_t (*)(_QWORD))_s14descr24F4C08F1V10DenseBlockVMa);
      if (a4 == (char *)++v31)
      {
        swift_unknownObjectRelease();
        v34 = v50;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_24:
    OUTLINED_FUNCTION_57_1();
    a1 = v42;
  }
  v34 = v50;
  sub_22ABDEAEC();
  swift_unknownObjectRelease();
  a2 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_20:
  v35 = v49;
  *(_QWORD *)v49 = a2;
  sub_22ABBFDD0(v34);
  v37 = v36;
  swift_bridgeObjectRelease();
  v38 = v53;
  if ((v37 & 1) != 0)
    goto LABEL_27;
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_22ABDD628();
    __swift_storeEnumTagSinglePayload(v4, 1, 1, v38);
    OUTLINED_FUNCTION_38_1();
    sub_22ABDD5E0();
    sub_22A9A0C1C(v4, &qword_255B0DE30);
    sub_22ABDD604();
    v39 = v46;
    sub_22ABDD7C0();
    v40 = v45;
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 32))(&v35[*(int *)(v45 + 20)], v39, v48);
    *(_QWORD *)&v35[*(int *)(v40 + 24)] = a3;
    return result;
  }
LABEL_28:
  result = sub_22ABDFAD0();
  __break(1u);
  return result;
}

uint64_t sub_22A9A6674(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_22A9A9080(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_22A9A66E4(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_22A9A9080(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
  {
    sub_22ABDD7D8();
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

void sub_22A9A6774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_33();
  v4 = v3 - v2;
  v5 = v0 + *(int *)(OUTLINED_FUNCTION_57() + 28);
  v6 = OUTLINED_FUNCTION_43_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v5, v6);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v6);
  sub_22ABDDA0C();
  sub_22ABDD58C();
  sub_22A9A0C1C(v4, &qword_255B0DE30);
}

uint64_t sub_22A9A685C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD v31[2];
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v38 = a2;
  v37 = a3;
  v39 = _s14descr24F4C08F1V10DenseBlockVMa();
  v4 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22ABDDA0C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v31 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v36 = (char *)v31 - v14;
  v15 = sub_22ABDD7D8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (char *)a1 + *(int *)(type metadata accessor for FullyConnectedNetwork() + 20);
  v33 = v18;
  v34 = v16;
  v20 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v35 = v15;
  v20(v18, v19, v15);
  v21 = *a1;
  v22 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v38, v7);
  v23 = *(_QWORD *)(v21 + 16);
  if (v23)
  {
    v24 = v21 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v38 = *(_QWORD *)(v4 + 72);
    v31[1] = v21;
    sub_22ABDEAEC();
    v25 = v32;
    do
    {
      sub_22A9A0C44(v24, (uint64_t)v6, (uint64_t (*)(_QWORD))_s14descr24F4C08F1V10DenseBlockVMa);
      sub_22A99D7D4(&qword_255B0DE38, (uint64_t (*)(uint64_t))_s14descr24F4C08F1V10DenseBlockVMa, (uint64_t)&unk_22ABF0C60);
      sub_22ABDD7FC();
      sub_22A9A0B10((uint64_t)v6, (uint64_t (*)(_QWORD))_s14descr24F4C08F1V10DenseBlockVMa);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v22);
      v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v26(v13, v25, v22);
      v24 += v38;
      --v23;
    }
    while (v23);
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    sub_22ABDEAEC();
  }
  v27 = v36;
  v26(v36, v13, v22);
  swift_bridgeObjectRelease();
  v28 = v35;
  v29 = v33;
  sub_22ABDD7FC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v27, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v29, v28);
}

void sub_22A9A6B0C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_15_1();
  sub_22A99D7D4((unint64_t *)&qword_255B0DAE0, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE92BC);
  OUTLINED_FUNCTION_21_2();
  sub_22ABDDA90();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_25_1();
}

void sub_22A9A6B88()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_15_1();
  sub_22A99D7D4((unint64_t *)&qword_255B0DAE0, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE92BC);
  OUTLINED_FUNCTION_21_2();
  sub_22ABDDA84();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_25_1();
}

uint64_t sub_22A9A6C0C()
{
  sub_22A99D7D4((unint64_t *)&qword_255B0DAE0, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE92BC);
  return sub_22ABDD82C();
}

uint64_t sub_22A9A6C5C()
{
  sub_22A99D7D4((unint64_t *)&qword_255B0DAE0, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE92BC);
  return sub_22ABDD844();
}

void sub_22A9A6CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_33();
  v10 = v9 - v8;
  OUTLINED_FUNCTION_10_2(a1);
  v12 = v11;
  sub_22ABBFE20(v11, (uint64_t)v5);
  OUTLINED_FUNCTION_14_1((uint64_t)v5);
  if (v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = sub_22ABDDDA8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v6);
  if (!*(_QWORD *)(v14 + 16))
  {
LABEL_9:
    OUTLINED_FUNCTION_3_8();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_44_1();
  sub_22ABDDE14();
  OUTLINED_FUNCTION_30();
  if ((OUTLINED_FUNCTION_61_1() & 1) == 0)
  {
    OUTLINED_FUNCTION_9_2();
    v12 = v17;
  }
  v15 = *(_QWORD *)(v12 + 16);
  if (v15 >= *(_QWORD *)(v12 + 24) >> 1)
  {
    OUTLINED_FUNCTION_5_5();
    v12 = v18;
  }
  *(_QWORD *)(v12 + 16) = v15 + 1;
  OUTLINED_FUNCTION_23_2();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 32))(v12 + v16 + *(_QWORD *)(v1 + 72) * v15, v10, v6);
  OUTLINED_FUNCTION_3();
}

void sub_22A9A6E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  char *v95;
  unint64_t v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(unint64_t, char *, uint64_t);
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;

  v86 = a4;
  v88 = a3;
  v92 = a2;
  v91 = a1;
  v104 = OUTLINED_FUNCTION_26_1();
  v100 = *(_QWORD *)(v104 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_33_1(v8, v86);
  v102 = sub_22ABDDDE4();
  v99 = *(_QWORD *)(v102 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_87();
  v87 = v12;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v13);
  v98 = (uint64_t)&v86 - v14;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v86 - v16;
  v18 = OUTLINED_FUNCTION_64_0();
  v105 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_87();
  v90 = v20;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v86 - v22;
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)&v110 = (char *)&v86 - v25;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_28_1();
  v109 = v27;
  _s14descr24F4C08F1V10DenseBlockVMa();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE98);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_46_1();
  v89 = v5;
  v30 = *(_QWORD *)v5;
  v115 = 0;
  v116 = v30;
  v117 = 0;
  v118 = 0;
  sub_22ABDEAEC();
  sub_22A99FFF4(v4);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB08);
  v32 = OUTLINED_FUNCTION_32_1(v31);
  v111 = v18;
  if (v32 == 1)
  {
    v33 = MEMORY[0x24BEE4AF8];
LABEL_3:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
    v34 = OUTLINED_FUNCTION_13();
    v110 = xmmword_22ABE8E30;
    *(_OWORD *)(v34 + 16) = xmmword_22ABE8E30;
    v35 = v87;
    sub_22ABBFE20(v33, v87);
    OUTLINED_FUNCTION_14_1(v35);
    if (v36)
    {
      sub_22A9A0C1C(v35, &qword_255B0DE90);
      v71 = v105;
    }
    else
    {
      v70 = (_QWORD *)sub_22ABDDDA8();
      v71 = v105;
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v35, v18);
      if (v70[2])
      {
        v72 = v70[4];
        v73 = v70[5];
        sub_22ABDEAEC();
        OUTLINED_FUNCTION_3_8();
        *(_QWORD *)(v34 + 32) = v72;
        *(_QWORD *)(v34 + 40) = v73;
        v74 = v86;
LABEL_28:
        v76 = OUTLINED_FUNCTION_13();
        *(_OWORD *)(v76 + 16) = v110;
        *(_QWORD *)(v76 + 32) = v88;
        *(_QWORD *)(v76 + 40) = v74;
        v77 = OUTLINED_FUNCTION_57();
        v78 = v103;
        (*(void (**)(uint64_t, char *, uint64_t))(v100 + 16))(v103, &v89[*(int *)(v77 + 20)], v104);
        sub_22ABDEAEC();
        v79 = v101;
        sub_22AAEE1F0(v78, v101);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v99 + 104))(v79, *MEMORY[0x24BE62870], v102);
        v80 = v90;
        sub_22ABDDDF0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_7_4();
          v33 = v84;
        }
        v81 = v111;
        v82 = *(_QWORD *)(v33 + 16);
        if (v82 >= *(_QWORD *)(v33 + 24) >> 1)
        {
          OUTLINED_FUNCTION_6_7();
          v33 = v85;
        }
        *(_QWORD *)(v33 + 16) = v82 + 1;
        OUTLINED_FUNCTION_23_2();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v71 + 32))(v33 + v83 + *(_QWORD *)(v71 + 72) * v82, v80, v81);
        OUTLINED_FUNCTION_3();
        return;
      }
      OUTLINED_FUNCTION_3_8();
    }
    v74 = v86;
    v75 = v92;
    *(_QWORD *)(v34 + 32) = v91;
    *(_QWORD *)(v34 + 40) = v75;
    sub_22ABDEAEC();
    goto LABEL_28;
  }
  v97 = *MEMORY[0x24BE62870];
  v33 = MEMORY[0x24BEE4AF8];
  v108 = xmmword_22ABE8E30;
  v96 = 0x800000022ABE1180;
  v93 = v17;
  v95 = v23;
  v107 = v6;
  v94 = v4;
  while (1)
  {
    v37 = v33;
    v38 = *v4;
    sub_22A9A0ADC((uint64_t)v4 + (int)v119, v6, (uint64_t (*)(_QWORD))_s14descr24F4C08F1V10DenseBlockVMa);
    v112 = v38;
    v113 = 0x79614C65736E6544;
    v114 = 0xEA00000000007265;
    sub_22ABDFD7C();
    OUTLINED_FUNCTION_45_1();
    OUTLINED_FUNCTION_63_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
    v39 = OUTLINED_FUNCTION_13();
    *(_OWORD *)(v39 + 16) = v108;
    if (v38)
    {
      sub_22ABBFE20(v33, (uint64_t)v17);
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18) == 1)
        goto LABEL_35;
      v40 = (_QWORD *)sub_22ABDDDA8();
      v41 = OUTLINED_FUNCTION_68_0();
      v42(v41);
      if (!v40[2])
        goto LABEL_36;
      v44 = v40[4];
      v43 = v40[5];
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_58_1();
    }
    else
    {
      v43 = v92;
      sub_22ABDEAEC();
      v44 = v91;
    }
    *(_QWORD *)(v39 + 32) = v44;
    *(_QWORD *)(v39 + 40) = v43;
    v45 = OUTLINED_FUNCTION_13();
    *(_OWORD *)(v45 + 16) = v108;
    v113 = 0;
    v114 = 0xE000000000000000;
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v112 = v38;
    v113 = 0xD000000000000010;
    v114 = v96;
    sub_22ABDFD7C();
    OUTLINED_FUNCTION_45_1();
    OUTLINED_FUNCTION_58_1();
    v46 = v114;
    *(_QWORD *)(v45 + 32) = v113;
    *(_QWORD *)(v45 + 40) = v46;
    v47 = v103;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v103, v107, v104);
    v48 = v101;
    sub_22AAEE1F0(v47, v101);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v99 + 104))(v48, v97, v102);
    v49 = v109;
    sub_22ABDDDF0();
    v50 = v105;
    v51 = v111;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v105 + 16))(v110, v49, v111);
    v52 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_7_4();
      v52 = v66;
    }
    v53 = *(_QWORD *)(v52 + 16);
    OUTLINED_FUNCTION_59_1();
    if (v54)
    {
      OUTLINED_FUNCTION_6_7();
      v52 = v67;
    }
    *(_QWORD *)(v52 + 16) = v49;
    v55 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    v56 = *(_QWORD *)(v50 + 72);
    v106 = *(void (**)(unint64_t, char *, uint64_t))(v50 + 32);
    v106(v52 + v55 + v56 * v53, (char *)v110, v51);
    v112 = v38;
    v113 = 1431070034;
    v114 = 0xE400000000000000;
    sub_22ABDFD7C();
    OUTLINED_FUNCTION_45_1();
    OUTLINED_FUNCTION_63_1();
    v57 = v98;
    sub_22ABBFE20(v52, v98);
    if (__swift_getEnumTagSinglePayload(v57, 1, v51) == 1)
      break;
    v58 = v52;
    v59 = v57;
    v60 = sub_22ABDDDA8();
    v61 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v61(v59, v51);
    if (!*(_QWORD *)(v60 + 16))
      goto LABEL_34;
    OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_3_8();
    v113 = 0x7074754F554C6552;
    v114 = 0xEA00000000007475;
    v112 = v38;
    sub_22ABDFD7C();
    OUTLINED_FUNCTION_45_1();
    swift_bridgeObjectRelease();
    v62 = v114;
    v63 = v95;
    sub_22ABDDDFC();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_63_1();
    v33 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_7_4();
      v33 = v68;
    }
    v17 = v93;
    v6 = v107;
    v64 = *(_QWORD *)(v33 + 16);
    OUTLINED_FUNCTION_59_1();
    v18 = v111;
    if (v54)
    {
      OUTLINED_FUNCTION_6_7();
      v33 = v69;
    }
    *(_QWORD *)(v33 + 16) = v62;
    v106(v33 + v55 + v64 * v56, v63, v18);
    v61(v109, v18);
    sub_22A9A0B10(v6, (uint64_t (*)(_QWORD))_s14descr24F4C08F1V10DenseBlockVMa);
    v4 = v94;
    sub_22A99FFF4(v94);
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB08);
    if (OUTLINED_FUNCTION_32_1(v65) == 1)
      goto LABEL_3;
  }
  __break(1u);
LABEL_34:
  OUTLINED_FUNCTION_3_8();
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  OUTLINED_FUNCTION_58_1();
  __break(1u);
}

void sub_22A9A76F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  char v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  void (*v27)(unint64_t, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v38 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_34_1();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v36 - v9;
  v11 = OUTLINED_FUNCTION_64_0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_87();
  v37 = v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v36 - v15;
  OUTLINED_FUNCTION_10_2(a1);
  v18 = v17;
  sub_22ABBFE20(v17, (uint64_t)v10);
  OUTLINED_FUNCTION_14_1((uint64_t)v10);
  if (v19)
  {
    __break(1u);
    goto LABEL_15;
  }
  v20 = sub_22ABDDDA8();
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v10, v11);
  if (!*(_QWORD *)(v20 + 16))
  {
LABEL_15:
    OUTLINED_FUNCTION_3_8();
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_3_8();
  sub_22ABDDE08();
  swift_bridgeObjectRelease();
  v22 = OUTLINED_FUNCTION_61_1();
  v36[1] = a4;
  if ((v22 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_2();
    v18 = v32;
  }
  v23 = *(_QWORD *)(v18 + 16);
  OUTLINED_FUNCTION_59_1();
  if (v24)
  {
    OUTLINED_FUNCTION_5_5();
    v18 = v33;
  }
  *(_QWORD *)(v18 + 16) = v20;
  v25 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v26 = *(_QWORD *)(v12 + 72);
  v27 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 32);
  v27(v18 + v25 + v26 * v23, v16, v11);
  sub_22ABBFE20(v18, v4);
  OUTLINED_FUNCTION_14_1(v4);
  if (v19)
    goto LABEL_16;
  v28 = sub_22ABDDDA8();
  v21((char *)v4, v11);
  if (!*(_QWORD *)(v28 + 16))
  {
LABEL_17:
    OUTLINED_FUNCTION_3_8();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_3_8();
  v39 = 0x64657A6565757153;
  v40 = 0xE800000000000000;
  sub_22ABDEDC8();
  v29 = v40;
  v30 = v37;
  OUTLINED_FUNCTION_44_1();
  sub_22ABDDD9C();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_3_8();
  if ((OUTLINED_FUNCTION_61_1() & 1) == 0)
  {
    OUTLINED_FUNCTION_9_2();
    v18 = v34;
  }
  v31 = *(_QWORD *)(v18 + 16);
  OUTLINED_FUNCTION_59_1();
  if (v24)
  {
    OUTLINED_FUNCTION_5_5();
    v18 = v35;
  }
  *(_QWORD *)(v18 + 16) = v29;
  v27(v18 + v25 + v31 * v26, v30, v11);
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22A9A79B0()
{
  unint64_t v0;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_22A9A79FC()
{
  return 3;
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return 0;
}

uint64_t sub_22A9A7A10(char a1)
{
  if (!a1)
    return 0x73726579616CLL;
  if (a1 == 1)
    return 0xD000000000000012;
  return 0x65536D6F646E6172;
}

void sub_22A9A7A6C(char *a1, char *a2)
{
  sub_22AA179A4(*a1, *a2);
}

void sub_22A9A7A78()
{
  sub_22ABC4A24();
}

uint64_t sub_22A9A7A80(uint64_t a1)
{
  char *v1;

  return sub_22ABC4D28(a1, *v1);
}

void sub_22A9A7A88()
{
  sub_22ABC535C();
}

uint64_t sub_22A9A7A90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9A79B0();
  *a1 = result;
  return result;
}

uint64_t sub_22A9A7ABC@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22A9A7A10(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22A9A7AE4()
{
  char *v0;

  return sub_22A9A7A10(*v0);
}

uint64_t sub_22A9A7AEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9A79F8();
  *a1 = result;
  return result;
}

uint64_t sub_22A9A7B10()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22A9A7B2C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9A79FC();
  *a1 = result;
  return result;
}

uint64_t sub_22A9A7B50()
{
  sub_22A9A8F18();
  return sub_22ABE02EC();
}

uint64_t sub_22A9A7B78()
{
  sub_22A9A8F18();
  return sub_22ABE02F8();
}

void sub_22A9A7BA0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int EnumTagSinglePayload;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD v102[2];
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;

  v110 = a2;
  v4 = _s14descr24F4C08F1V10DenseBlockVMa();
  OUTLINED_FUNCTION_40_1(v4, (uint64_t)&v138);
  v113 = v5;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE70);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  v117 = (uint64_t)v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_28_1();
  v124 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_87();
  v120 = v15;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v102 - v17;
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v123 = *(_QWORD *)(v127 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_0();
  v122 = v20;
  v126 = OUTLINED_FUNCTION_67_0();
  v134 = *(_QWORD *)(v126 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_87();
  v125 = v22;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_28_1();
  v133 = v24;
  v121 = OUTLINED_FUNCTION_65_0();
  v118 = *(_QWORD *)(v121 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_0();
  v132 = v26;
  v27 = OUTLINED_FUNCTION_66_1();
  v128 = *(_QWORD *)(v27 - 8);
  v129 = v27;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_87();
  v112 = v29;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_28_1();
  v131 = v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE78);
  v111 = *(_QWORD *)(v32 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_33();
  v36 = v35 - v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_33();
  v40 = v39 - v38;
  type metadata accessor for FullyConnectedNetwork();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_34();
  v107 = v42;
  v43 = (char *)v2 + *(int *)(v42 + 28);
  sub_22ABDD52C();
  v44 = sub_22ABDD538();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v40, 1, v44);
  v108 = v2;
  v116 = v43;
  if (EnumTagSinglePayload == 1)
  {
    sub_22ABDD514();
    sub_22A9A0C1C(v40, &qword_255B0DE30);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v43, v40, v44);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9A8F18();
  v46 = v135;
  sub_22ABE0298();
  v47 = v46;
  if (v46)
    goto LABEL_22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE58);
  v136 = 0;
  sub_22A9A8FB4(&qword_255B0DE80, &qword_255B0DE88, (uint64_t)&unk_22ABEA234, MEMORY[0x24BEE12D0]);
  v48 = v36;
  sub_22ABDFC8C();
  v49 = v137;
  v50 = *(_QWORD *)(v137 + 16);
  if (v50)
  {
    v103 = v44;
    v106 = v36;
    v104 = v32;
    v105 = a1;
    v137 = MEMORY[0x24BEE4AF8];
    v130 = v50;
    sub_22AB4D0D0();
    OUTLINED_FUNCTION_23_2();
    v102[1] = v49;
    v52 = v49 + v51;
    v118 = *(_QWORD *)(v53 + 72);
    v119 = v18;
    v54 = v127;
    do
    {
      v55 = v132;
      sub_22A9A0C44(v52, v132, (uint64_t (*)(_QWORD))type metadata accessor for DenseLayerStorage);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16))(v122, v55, v54);
      v46 = v47;
      v127 = sub_22A9A9038();
      sub_22ABDE8F4();
      v135 = v47;
      OUTLINED_FUNCTION_49_1();
      OUTLINED_FUNCTION_60_1(v133);
      v56 = v55 + *(int *)(v121 + 20);
      v57 = v124;
      OUTLINED_FUNCTION_62_0(v56, v124);
      v58 = 1;
      v59 = v54;
      v60 = __swift_getEnumTagSinglePayload(v57, 1, v54);
      OUTLINED_FUNCTION_53_1();
      if (v60 == 1)
      {
        v61 = (uint64_t)v119;
        v54 = v59;
        v62 = v125;
        v63 = v126;
      }
      else
      {
        v64 = v56;
        v65 = v117;
        OUTLINED_FUNCTION_62_0(v64, v117);
        v66 = __swift_getEnumTagSinglePayload(v65, 1, v59);
        v61 = (uint64_t)v119;
        if (v66 == 1)
          goto LABEL_44;
        v54 = v59;
        v67 = v125;
        v63 = v126;
        v46 = v135;
        sub_22ABDE8F4();
        v135 = v46;
        OUTLINED_FUNCTION_49_1();
        v62 = v67;
        OUTLINED_FUNCTION_60_1(v61);
        v58 = 0;
      }
      __swift_storeEnumTagSinglePayload(v61, v58, 1, v63);
      v69 = v133;
      v68 = v134;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 16))(v62, v133, v63);
      OUTLINED_FUNCTION_62_0(v61, v120);
      sub_22ABDD79C();
      OUTLINED_FUNCTION_53_1();
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v63);
      sub_22A9A0B10(v132, (uint64_t (*)(_QWORD))type metadata accessor for DenseLayerStorage);
      v70 = v137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_16_4();
        sub_22AB4D0D0();
        v70 = v137;
      }
      v72 = *(_QWORD *)(v70 + 16);
      v71 = *(_QWORD *)(v70 + 24);
      if (v72 >= v71 >> 1)
      {
        OUTLINED_FUNCTION_35_0(v71);
        sub_22AB4D0D0();
        v70 = v137;
      }
      *(_QWORD *)(v70 + 16) = v72 + 1;
      OUTLINED_FUNCTION_23_2();
      (*(void (**)(unint64_t, uint64_t))(v74 + 32))(v70 + v73 + *(_QWORD *)(v74 + 72) * v72, v131);
      v137 = v70;
      v52 += v118;
      v75 = v130-- == 1;
      v47 = v135;
    }
    while (!v75);
    swift_bridgeObjectRelease();
    a1 = v105;
    v32 = v104;
    v48 = v106;
    v44 = v103;
  }
  else
  {
    OUTLINED_FUNCTION_51_1();
    v70 = MEMORY[0x24BEE4AF8];
  }
  OUTLINED_FUNCTION_48_1(1);
  sub_22ABDFC20();
  if (v46)
  {
    OUTLINED_FUNCTION_20_1();
    swift_bridgeObjectRelease();
LABEL_22:
    v78 = v116;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v78, v44);
LABEL_23:
    OUTLINED_FUNCTION_12_4();
    return;
  }
  OUTLINED_FUNCTION_48_1(2);
  v76 = sub_22ABDFC2C();
  v135 = 0;
  v106 = v48;
  v104 = v32;
  v105 = a1;
  if ((v77 & 1) != 0)
    v79 = 0;
  else
    v79 = v76;
  v80 = sub_22A9A66E4(1, v70);
  v134 = v82;
  v84 = v83 >> 1;
  v85 = (v83 >> 1) - v81;
  if (__OFSUB__(v83 >> 1, v81))
    goto LABEL_42;
  if (v85)
  {
    v86 = v81;
    v133 = v80;
    v137 = MEMORY[0x24BEE4AF8];
    sub_22ABDEAEC();
    sub_22AB4D094();
    if (v85 < 0)
      goto LABEL_43;
    v87 = v128;
    v88 = v112;
    while (v86 < v84)
    {
      v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16);
      v90 = v129;
      v89(v88, v134 + *(_QWORD *)(v87 + 72) * v86, v129);
      v91 = v115;
      v89(v115, v88, v90);
      v92 = v114;
      OUTLINED_FUNCTION_38_1();
      sub_22ABDDA60();
      *(_QWORD *)(v91 + *(int *)(v92 + 24)) = v79;
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v88, v90);
      v93 = v137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_16_4();
        sub_22AB4D094();
        v93 = v137;
      }
      v95 = *(_QWORD *)(v93 + 16);
      v94 = *(_QWORD *)(v93 + 24);
      if (v95 >= v94 >> 1)
      {
        OUTLINED_FUNCTION_35_0(v94);
        sub_22AB4D094();
        v93 = v137;
      }
      *(_QWORD *)(v93 + 16) = v95 + 1;
      OUTLINED_FUNCTION_24_1();
      sub_22A9A0ADC(v115, v96, (uint64_t (*)(_QWORD))_s14descr24F4C08F1V10DenseBlockVMa);
      if (v84 == ++v86)
      {
        swift_unknownObjectRelease();
        goto LABEL_39;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  sub_22ABDEAEC();
  swift_unknownObjectRelease();
  v93 = MEMORY[0x24BEE4AF8];
LABEL_39:
  v97 = (uint64_t)v108;
  *v108 = v93;
  v98 = v109;
  sub_22ABBFE14(v70, v109);
  swift_bridgeObjectRelease();
  v99 = v129;
  v75 = __swift_getEnumTagSinglePayload(v98, 1, v129) == 1;
  v100 = v110;
  if (!v75)
  {
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v106, v104);
    v101 = v107;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 32))(v97 + *(int *)(v107 + 20), v98, v99);
    *(_QWORD *)(v97 + *(int *)(v101 + 24)) = v79;
    sub_22A9A0C44(v97, v100, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
    sub_22A9A0B10(v97, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
    goto LABEL_23;
  }
LABEL_45:
  __break(1u);
}

void sub_22A9A855C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t EnumTagSinglePayload;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t, uint64_t);
  void (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  BOOL v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v4 = v2;
  v6 = sub_22ABDDA78();
  OUTLINED_FUNCTION_40_1(v6, (uint64_t)&v128);
  v96 = v7;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v101 = v11;
  v12 = sub_22ABDD4F0();
  v117 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v116 = *(_QWORD *)(v123 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_0();
  v130 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAA8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_33_1(v20, v93);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v21);
  v114 = (uint64_t)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_28_1();
  v132 = v24;
  v25 = OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_40_1(v25, (uint64_t)&v136);
  v112 = v26;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_87();
  v111 = v28;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v29);
  v110 = (char *)&v93 - v30;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v93 - v32;
  v118 = sub_22ABDDB08();
  v109 = *(_QWORD *)(v118 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_0();
  v108 = v35;
  v129 = OUTLINED_FUNCTION_66_1();
  v36 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  OUTLINED_FUNCTION_0();
  v128 = v37;
  v38 = OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_40_1(v38, (uint64_t)&v135);
  v106 = v39;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_87();
  v127 = v41;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_28_1();
  v126 = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE40);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v45);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE48);
  OUTLINED_FUNCTION_40_1(v46, (uint64_t)&v132);
  v98 = v47;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_46_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9A8F18();
  v100 = v1;
  sub_22ABE02B0();
  v49 = sub_22A9A6118();
  v50 = *(_QWORD *)(v49 + 16);
  if (v50)
  {
    v94 = v4;
    v134 = MEMORY[0x24BEE4AF8];
    v124 = v50;
    sub_22AB4D128();
    OUTLINED_FUNCTION_23_2();
    v93 = v49;
    v52 = v49 + v51;
    v103 = *(_QWORD *)(v36 + 72);
    v102 = *(void (**)(uint64_t))(v36 + 16);
    v122 = v12;
    v53 = v16;
    v105 = v16;
    v54 = v123;
    v125 = v33;
    v55 = v118;
    v56 = (uint64_t)v33;
    v104 = v36;
    do
    {
      v123 = v52;
      v102(v128);
      v57 = sub_22ABDD7B4();
      v58 = v56;
      MEMORY[0x22E2E1D8C](v57);
      OUTLINED_FUNCTION_50_1();
      v59 = v115;
      sub_22ABDD790();
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v59, 1, v55);
      if ((_DWORD)EnumTagSinglePayload == 1)
      {
        sub_22A9A0C1C(v59, &qword_255B0DAA8);
        v61 = 1;
      }
      else
      {
        MEMORY[0x22E2E1D8C](EnumTagSinglePayload);
        OUTLINED_FUNCTION_50_1();
        v61 = 0;
      }
      v62 = v112;
      v63 = (uint64_t)v110;
      v64 = v113;
      __swift_storeEnumTagSinglePayload(v132, v61, 1, v113);
      v65 = v127;
      v121 = v127 + *(int *)(v107 + 20);
      OUTLINED_FUNCTION_56_1(v121, 1);
      v120 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
      v120(v63, v58, v64);
      OUTLINED_FUNCTION_55_2();
      sub_22ABDD4E4();
      v66 = OUTLINED_FUNCTION_68_0();
      v119 = v67;
      v68 = ((uint64_t (*)(uint64_t))v67)(v66);
      MEMORY[0x24BDAC7A8](v68);
      OUTLINED_FUNCTION_27_2();
      v70 = v69;
      sub_22ABDE81C();
      v131 = v3;
      OUTLINED_FUNCTION_30_1(v63);
      v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 32);
      v71(v65, v70, v54);
      v72 = v114;
      sub_22A9A0BBC(v132, v114, &qword_255B0DAB8);
      if (__swift_getEnumTagSinglePayload(v72, 1, v64) == 1)
      {
        OUTLINED_FUNCTION_52_1();
        OUTLINED_FUNCTION_30_1((uint64_t)v125);
        sub_22A9A0C1C(v72, &qword_255B0DAB8);
      }
      else
      {
        v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32);
        v74 = v111;
        v73(v111, v72, v64);
        v120(v63, v74, v64);
        OUTLINED_FUNCTION_55_2();
        sub_22ABDD4E4();
        v75 = v119(v53, v122);
        MEMORY[0x24BDAC7A8](v75);
        OUTLINED_FUNCTION_27_2();
        sub_22ABDE81C();
        v131 = v3;
        OUTLINED_FUNCTION_30_1(v63);
        v76 = v101;
        v71(v101, v130, v54);
        OUTLINED_FUNCTION_52_1();
        OUTLINED_FUNCTION_30_1((uint64_t)v125);
        OUTLINED_FUNCTION_30_1(v111);
        v77 = OUTLINED_FUNCTION_38_1();
        OUTLINED_FUNCTION_56_1(v77, v78);
        sub_22A9A8F6C(v76, v121);
      }
      v55 = v118;
      sub_22A9A0ADC(v127, v126, (uint64_t (*)(_QWORD))type metadata accessor for DenseLayerStorage);
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v128, v129);
      v79 = v134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_16_4();
        sub_22AB4D128();
        v79 = v134;
      }
      v53 = v105;
      v81 = *(_QWORD *)(v79 + 16);
      v80 = *(_QWORD *)(v79 + 24);
      if (v81 >= v80 >> 1)
      {
        OUTLINED_FUNCTION_35_0(v80);
        sub_22AB4D128();
        v79 = v134;
      }
      *(_QWORD *)(v79 + 16) = v81 + 1;
      OUTLINED_FUNCTION_23_2();
      sub_22A9A0ADC(v126, v79 + v82 + *(_QWORD *)(v83 + 72) * v81, (uint64_t (*)(_QWORD))type metadata accessor for DenseLayerStorage);
      v52 = v123 + v103;
      v56 = (uint64_t)v125;
      --v124;
    }
    while (v124);
    swift_bridgeObjectRelease();
    v84 = v94;
  }
  else
  {
    swift_bridgeObjectRelease();
    v79 = MEMORY[0x24BEE4AF8];
    v84 = v4;
  }
  v85 = v131;
  v86 = v99;
  sub_22AB4ED88(*v84, v99);
  v87 = _s14descr24F4C08F1V10DenseBlockVMa();
  v88 = __swift_getEnumTagSinglePayload(v86, 1, v87);
  if (v88 == 1)
  {
    sub_22A9A0C1C(v86, &qword_255B0DE40);
  }
  else
  {
    v89 = v86 + *(int *)(v87 + 20);
    v90 = v96;
    v91 = v95;
    v92 = v97;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v95, v89, v97);
    sub_22A9A0B10(v86, (uint64_t (*)(_QWORD))_s14descr24F4C08F1V10DenseBlockVMa);
    sub_22ABDDA6C();
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v91, v92);
  }
  v134 = v79;
  v133 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE58);
  sub_22A9A8FB4(&qword_255B0DE60, &qword_255B0DE68, (uint64_t)&unk_22ABEA25C, MEMORY[0x24BEE12A0]);
  sub_22ABDFD4C();
  if (v85)
  {
    OUTLINED_FUNCTION_19_2();
    OUTLINED_FUNCTION_51_1();
  }
  else
  {
    OUTLINED_FUNCTION_51_1();
    LOBYTE(v134) = 1;
    v133 = v88 == 1;
    sub_22ABDFCE0();
    type metadata accessor for FullyConnectedNetwork();
    LOBYTE(v134) = 2;
    sub_22ABDFCEC();
    OUTLINED_FUNCTION_19_2();
  }
  OUTLINED_FUNCTION_12_4();
}

void sub_22A9A8E54(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22A9A7BA0(a1, a2);
}

void sub_22A9A8E68(_QWORD *a1)
{
  sub_22A9A855C(a1);
}

void sub_22A9A8E7C()
{
  sub_22A99D7D4(&qword_255B0DE18, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE9250);
}

void sub_22A9A8EA8()
{
  sub_22A99D7D4(&qword_255B0DE20, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE9220);
}

void sub_22A9A8ED4()
{
  sub_22A99D7D4(&qword_255B0DE28, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE91F8);
}

uint64_t sub_22A9A8F00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22A9A685C(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_22A9A8F18()
{
  unint64_t result;

  result = qword_255B0DE50;
  if (!qword_255B0DE50)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABE9418, &type metadata for FullyConnectedNetwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0DE50);
  }
  return result;
}

uint64_t sub_22A9A8F54()
{
  return sub_22AA3EFB4();
}

uint64_t sub_22A9A8F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A9A8FB4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0DE58);
    sub_22A99D7D4(a2, (uint64_t (*)(uint64_t))type metadata accessor for DenseLayerStorage, a3);
    v11 = v10;
    result = MEMORY[0x22E2E4D80](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22A9A9038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B0DAF8;
  if (!qword_255B0DAF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E8568);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v1);
    atomic_store(result, (unint64_t *)&qword_255B0DAF8);
  }
  return result;
}

uint64_t sub_22A9A9080(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2)
      return 0;
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  v5 = __OFADD__(result, a2);
  result += a2;
  if (v5)
    goto LABEL_14;
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FullyConnectedNetwork.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FullyConnectedNetwork.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22A9A91AC + 4 * byte_22ABE91D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22A9A91E0 + 4 * byte_22ABE91D0[v4]))();
}

uint64_t sub_22A9A91E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9A91E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9A91F0);
  return result;
}

uint64_t sub_22A9A91FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9A9204);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22A9A9208(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9A9210(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9A921C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_22A9A9224(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for FullyConnectedNetwork.CodingKeys()
{
  return &type metadata for FullyConnectedNetwork.CodingKeys;
}

unint64_t sub_22A9A9240()
{
  unint64_t result;

  result = qword_255B0DEA8;
  if (!qword_255B0DEA8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABE93F0, &type metadata for FullyConnectedNetwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0DEA8);
  }
  return result;
}

unint64_t sub_22A9A9280()
{
  unint64_t result;

  result = qword_255B0DEB0;
  if (!qword_255B0DEB0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABE9328, &type metadata for FullyConnectedNetwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0DEB0);
  }
  return result;
}

unint64_t sub_22A9A92C0()
{
  unint64_t result;

  result = qword_255B0DEB8;
  if (!qword_255B0DEB8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABE9350, &type metadata for FullyConnectedNetwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0DEB8);
  }
  return result;
}

uint64_t sub_22A9A92FC()
{
  return sub_22A9A8F54();
}

uint64_t OUTLINED_FUNCTION_3_8()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_5_5()
{
  sub_22AA360B8();
}

void OUTLINED_FUNCTION_6_7()
{
  sub_22AA360B8();
}

void OUTLINED_FUNCTION_7_4()
{
  sub_22AA360B8();
}

void OUTLINED_FUNCTION_9_2()
{
  sub_22AA360B8();
}

void OUTLINED_FUNCTION_10_2(uint64_t a1)
{
  uint64_t v1;

  sub_22A9A6E2C(a1, v1, 0x736E65447473614CLL, 0xEF74757074754F65);
}

uint64_t OUTLINED_FUNCTION_14_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return type metadata accessor for FullyConnectedNetwork();
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_17_0()
{
  return sub_22ABDDA0C();
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 392) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_20_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 304) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  return sub_22ABDD7E4();
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return sub_22ABDD7D8();
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_30_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_32_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void OUTLINED_FUNCTION_33_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

BOOL OUTLINED_FUNCTION_35_0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_39_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_40_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_43_1()
{
  return sub_22ABDD538();
}

uint64_t OUTLINED_FUNCTION_45_1()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_48_1@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_49_1()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_50_1()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_51_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_52_1()
{
  uint64_t *v0;
  uint64_t v1;

  sub_22A9A0C1C(*(_QWORD *)(v1 - 112), v0);
}

void OUTLINED_FUNCTION_53_1()
{
  uint64_t v0;
  uint64_t *v1;

  sub_22A9A0C1C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_55_2()
{
  return sub_22ABDD964();
}

uint64_t OUTLINED_FUNCTION_56_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_57_1()
{
  sub_22AA35C20();
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_60_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_61_1()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_62_0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_22A9A0BBC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_63_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_64_0()
{
  return sub_22ABDDE20();
}

uint64_t OUTLINED_FUNCTION_65_0()
{
  return type metadata accessor for DenseLayerStorage();
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return sub_22ABDD7D8();
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  return sub_22ABDDA0C();
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  uint64_t v0;

  return v0;
}

double AudioFeaturePrint.windowDuration.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double AudioFeaturePrint.overlapFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t AudioFeaturePrint.init(windowDuration:overlapFactor:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  type metadata accessor for AudioStreamAnalyzerPool();
  v6 = swift_allocObject();
  result = swift_defaultActor_initialize();
  v8 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v6 + 112) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v6 + 120) = v8;
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = v6;
  return result;
}

uint64_t type metadata accessor for AudioStreamAnalyzerPool()
{
  return objc_opt_self();
}

uint64_t AudioFeaturePrint.applied<A>(to:eventHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_23_1();
  v13 = *v6;
  v14 = v6[1];
  v15 = v6[2];
  (*(void (**)(uint64_t))(v16 + 16))(v7);
  v17 = sub_22A9A9804();
  AnyTemporalSequence.init<A>(_:)(v7, v17, a4, a5, (uint64_t)(a6 + 2));
  *a6 = v13;
  a6[1] = v14;
  a6[10] = a2;
  a6[11] = a3;
  a6[12] = v15;
  sub_22A9A9840(a2);
  return OUTLINED_FUNCTION_9_3();
}

unint64_t sub_22A9A9804()
{
  unint64_t result;

  result = qword_255B0DEC0;
  if (!qword_255B0DEC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255B0DEC0);
  }
  return result;
}

uint64_t sub_22A9A9840(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_22A9A9850(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  AudioFeaturePrint.applied<A>(to:eventHandler:)(a2, a3, a4, a5, a6, a1);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v6 + 8));
}

uint64_t AudioFeaturePrint.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_46_2();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_46_2();
  sub_22ABDEDC8();
  return 0;
}

uint64_t AudioFeaturePrint.FeatureSequence.count.getter()
{
  return 0;
}

double AudioFeaturePrint.FeatureSequence.makeAsyncIterator()@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  uint64_t v10;
  double result;
  __int128 v12;
  _BYTE v13[48];
  void (*v14)(__int128 *__return_ptr, uint64_t);

  v3 = *v1;
  v4 = v1[1];
  sub_22A9A9A50((uint64_t)(v1 + 2), (uint64_t)v13);
  v5 = v1[10];
  v6 = v1[11];
  v7 = v1[12];
  v8 = (objc_class *)type metadata accessor for AudioFeaturePrint.Observer();
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  v9 = objc_allocWithZone(v8);
  sub_22A9A9840(v5);
  swift_retain();
  *(_QWORD *)(a1 + 112) = objc_msgSend(v9, sel_init);
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v10 = sub_22A9A9A50((uint64_t)v13, a1 + 16);
  v14(&v12, v10);
  sub_22A9AD754((uint64_t)v13, &qword_255B0DEC8);
  result = *(double *)&v12;
  *(_OWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 120) = v5;
  *(_QWORD *)(a1 + 128) = v6;
  *(_QWORD *)(a1 + 136) = v7;
  return result;
}

uint64_t sub_22A9A9A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AudioFeaturePrint.Observer()
{
  return objc_opt_self();
}

uint64_t sub_22A9A9AB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  AudioFeaturePrint.FeatureSequence.makeAsyncIterator()(a1);
  return sub_22A9AD9B0(v1);
}

void sub_22A9A9AD0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E168);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_6_4();
  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    v6 = v5;
    v7 = OUTLINED_FUNCTION_35_1();
    OUTLINED_FUNCTION_18_1(v7);
    v8 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v1;
    v8[5] = a1;
    v8[6] = v6;
    swift_unknownObjectRetain();
    v9 = v1;
    swift_unknownObjectRetain();
    sub_22A9A9D2C(v2, (uint64_t)&unk_255B0E208, (uint64_t)v8);
    swift_release();
  }
  OUTLINED_FUNCTION_38();
}

uint64_t sub_22A9A9B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_22A9A9BAC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_22A9A9BCC()
{
  uint64_t v0;

  sub_22A9A9BFC(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), 0);
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9A9BFC(uint64_t a1, void *a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 112);
  if (!*(_QWORD *)(v8 + 16))
    return swift_endAccess();
  v9 = sub_22AA036F0();
  if ((v10 & 1) == 0)
    return swift_endAccess();
  v11 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 32 * v9);
  v13 = *v11;
  v12 = v11[1];
  v14 = v11[2];
  swift_endAccess();
  if (a3 == 2 && !a2)
    return sub_22A9AC0C0(a1);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  sub_22A9AD494(a2, a3);
  sub_22AA93B94();
  v16 = *(_QWORD *)(*(_QWORD *)(v4 + 120) + 16);
  sub_22AA93C40(v16);
  v17 = *(_QWORD *)(v4 + 120);
  *(_QWORD *)(v17 + 16) = v16 + 1;
  v18 = v17 + 40 * v16;
  *(_QWORD *)(v18 + 32) = a2;
  *(_BYTE *)(v18 + 40) = a3;
  *(_QWORD *)(v18 + 48) = v13;
  *(_QWORD *)(v18 + 56) = v12;
  *(_QWORD *)(v18 + 64) = v14;
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A9A9D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDF1B8();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_22A9AD754(a1, &qword_255B0E168);
  }
  else
  {
    sub_22ABDF1AC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22ABDF14C();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

void sub_22A9A9EE4(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  id v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E168);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_6_4();
  v7 = OUTLINED_FUNCTION_35_1();
  OUTLINED_FUNCTION_18_1(v7);
  v8 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v2;
  v8[5] = a1;
  v8[6] = a2;
  v9 = v2;
  swift_unknownObjectRetain();
  v10 = a2;
  sub_22A9A9D2C(v3, (uint64_t)&unk_255B0E1F8, (uint64_t)v8);
  swift_release();
  OUTLINED_FUNCTION_38();
}

uint64_t sub_22A9A9F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_22A9A9FA0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_22A9A9FC0()
{
  uint64_t v0;

  sub_22A9A9BFC(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), 1u);
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9AA058(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E168);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_35_1();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
  v7 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v7[5] = a1;
  v8 = v1;
  swift_unknownObjectRetain();
  sub_22A9A9D2C((uint64_t)v5, (uint64_t)&unk_255B0E1D8, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_22A9AA10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_22A9AA124()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_22A9AA144()
{
  uint64_t v0;

  sub_22A9A9BFC(*(_QWORD *)(v0 + 24), 0, 2u);
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

id sub_22A9AA1C8()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  char *v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer;
  type metadata accessor for AudioFeatureEventBuffer();
  swift_allocObject();
  v3 = v0;
  *(_QWORD *)&v0[v2] = sub_22A9AC284();

  v5.receiver = v3;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_22A9AA270()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t AudioFeaturePrint.FeatureSequence.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 176) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 184) = v2;
  *v2 = v1;
  v2[1] = sub_22A9AA308;
  return sub_22A9AA534(v1 + 104);
}

uint64_t sub_22A9AA308()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_0();
  if (v0)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AA34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  id v5;
  uint64_t result;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  sub_22A9AAD04(v0 + 104, v0 + 64);
  v1 = *(_QWORD *)(v0 + 88);
  if (!v1)
  {
    v4 = *(_QWORD *)(v0 + 176);
LABEL_10:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEE8);
    v13 = v4;
    v14 = 1;
    goto LABEL_11;
  }
  v2 = *(_QWORD *)(v0 + 80);
  if (*(_BYTE *)(v0 + 72))
  {
    if (*(_BYTE *)(v0 + 72) == 1)
    {
      OUTLINED_FUNCTION_38_2();
      *(_QWORD *)(v0 + 144) = v2;
      *(_QWORD *)(v0 + 152) = v1;
      sub_22A9AAD68(v0 + 144);
      v3 = *(uint64_t (**)(void))(v0 + 8);
      return v3();
    }
    v4 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 160) = v2;
    *(_QWORD *)(v0 + 168) = v1;
    sub_22A9AAD68(v0 + 160);
    goto LABEL_10;
  }
  v5 = *(id *)(v0 + 64);
  objc_msgSend(v5, sel_timeRange);
  *(_QWORD *)(v0 + 16) = v16;
  *(_QWORD *)(v0 + 24) = v17;
  *(_OWORD *)(v0 + 32) = v18;
  *(_QWORD *)(v0 + 48) = v19;
  *(_QWORD *)(v0 + 56) = v20;
  result = sub_22ABDF488();
  if ((_DWORD)v17 == v7)
  {
    sub_22ABDEAEC();
    result = sub_22ABDF488();
    if (result >= v16)
    {
      v8 = result;
      v9 = *(_QWORD **)(v0 + 176);
      v10 = objc_msgSend(v5, sel_featureVector);
      v11 = objc_msgSend(v10, sel_squeeze);

      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEE8);
      sub_22ABDE8B8();
      OUTLINED_FUNCTION_41_1();
      OUTLINED_FUNCTION_41_1();
      swift_bridgeObjectRelease();
      *v9 = v2;
      v9[1] = v1;
      v9[2] = v16;
      v9[3] = v8;
      v9[4] = (int)v17;
      v13 = (uint64_t)v9;
      v14 = 0;
      v15 = v12;
LABEL_11:
      __swift_storeEnumTagSinglePayload(v13, v14, 1, v15);
      v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
      return v3();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22A9AA534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 368) = a1;
  *(_QWORD *)(v2 + 376) = v1;
  return swift_task_switch();
}

uint64_t sub_22A9AA54C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 384) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 376) + 112)
                                    + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
  OUTLINED_FUNCTION_9_3();
  OUTLINED_FUNCTION_12_5();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AA590()
{
  uint64_t v0;
  __int128 v1;

  sub_22A9AAE7C((_QWORD *)(v0 + 208));
  v1 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 392) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 408) = v1;
  *(_QWORD *)(v0 + 424) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22A9AA5DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);

  sub_22A9AAD04(v0 + 208, v0 + 328);
  if (*(_QWORD *)(v0 + 352))
  {
    v1 = *(_QWORD *)(v0 + 424);
    v2 = *(_QWORD *)(v0 + 368);
    v3 = *(_OWORD *)(v0 + 408);
    *(_OWORD *)v2 = *(_OWORD *)(v0 + 392);
    *(_OWORD *)(v2 + 16) = v3;
    *(_QWORD *)(v2 + 32) = v1;
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return v4();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 376);
    v7 = *(int **)(v6 + 80);
    *(_QWORD *)(v0 + 432) = *(_QWORD *)(v6 + 88);
    v9 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
    swift_retain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 440) = v8;
    *v8 = v0;
    v8[1] = sub_22A9AA6A0;
    return v9(v0 + 16);
  }
}

uint64_t sub_22A9AA6A0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 448) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AA6F0()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  result = swift_release();
  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v0[57] = v2;
  v0[58] = v3;
  v6 = v0[6];
  v7 = v0[7];
  v0[59] = v4;
  v0[60] = v5;
  v0[61] = v6;
  v0[62] = v7;
  v8 = v0[47];
  if (!v3)
  {
    objc_msgSend(*(id *)(v8 + 96), sel_completeAnalysis);
    v0[73] = *(_QWORD *)(*(_QWORD *)(v8 + 112) + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
    OUTLINED_FUNCTION_9_3();
    goto LABEL_6;
  }
  if (*(_QWORD *)(v8 + 96))
  {
    v9 = *(_QWORD *)(v8 + 104);
    v0[65] = v9;
    if (v9)
    {
      v0[66] = *(_QWORD *)(*(_QWORD *)(v8 + 112)
                         + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
      OUTLINED_FUNCTION_9_3();
LABEL_6:
      OUTLINED_FUNCTION_12_5();
      return OUTLINED_FUNCTION_3_0();
    }
    __break(1u);
  }
  else
  {
    v0[20] = v2;
    v0[21] = v3;
    v0[22] = v4;
    v0[23] = v5;
    v0[24] = v6;
    v0[25] = v7;
    v10 = (_QWORD *)swift_task_alloc();
    v0[63] = v10;
    v11 = OUTLINED_FUNCTION_16_5(v10, (uint64_t)sub_22A9AA814);
    return sub_22A9AB02C(v11);
  }
  return result;
}

uint64_t sub_22A9AA7E8()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9AA814()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 512) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AA864()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0[47];
  v2 = *(_QWORD *)(v1 + 104);
  v0[65] = v2;
  if (v2)
  {
    v0[66] = *(_QWORD *)(*(_QWORD *)(v1 + 112) + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_12_5();
    return OUTLINED_FUNCTION_0_1();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22A9AA8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_22A9AB820();
  v3 = v2;
  OUTLINED_FUNCTION_13_4();
  *(_QWORD *)(v0 + 536) = v1;
  *(_QWORD *)(v0 + 544) = v3;
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_5_6();
}

uint64_t sub_22A9AA908()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 544);
  if (!v1)
    goto LABEL_7;
  if (*(_QWORD *)(v0 + 536) == *(_QWORD *)(v0 + 456) && v1 == *(_QWORD *)(v0 + 464))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0)
    {
LABEL_7:
      v5 = *(_QWORD *)(v0 + 488);
      v4 = *(_QWORD *)(v0 + 496);
      objc_msgSend(*(id *)(*(_QWORD *)(v0 + 376) + 96), sel_completeAnalysis, *(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 480));
      *(_OWORD *)(v0 + 112) = v14;
      *(_OWORD *)(v0 + 128) = v15;
      *(_QWORD *)(v0 + 144) = v5;
      *(_QWORD *)(v0 + 152) = v4;
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 552) = v6;
      v7 = OUTLINED_FUNCTION_16_5(v6, (uint64_t)sub_22A9AAA28);
      return sub_22A9AB02C(v7);
    }
  }
  v10 = *(_QWORD *)(v0 + 488);
  v9 = *(_QWORD *)(v0 + 496);
  v11 = *(_QWORD *)(v0 + 464);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 456);
  *(_QWORD *)(v0 + 72) = v11;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 472);
  *(_QWORD *)(v0 + 96) = v10;
  *(_QWORD *)(v0 + 104) = v9;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 568) = v12;
  v13 = OUTLINED_FUNCTION_16_5(v12, (uint64_t)sub_22A9AAAD0);
  return sub_22A9AB8A8(v13);
}

uint64_t sub_22A9AAA28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *v1;
  *(_QWORD *)(v2 + 560) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_3_0();
  }
  else
  {
    *(_QWORD *)(v2 + 64) = *(_QWORD *)(v2 + 456);
    v5 = *(_QWORD *)(v2 + 488);
    v4 = *(_QWORD *)(v2 + 496);
    *(_QWORD *)(v2 + 72) = *(_QWORD *)(v2 + 464);
    *(_OWORD *)(v2 + 80) = *(_OWORD *)(v2 + 472);
    *(_QWORD *)(v2 + 96) = v5;
    *(_QWORD *)(v2 + 104) = v4;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 568) = v6;
    *v6 = v2;
    v6[1] = sub_22A9AAAD0;
    return sub_22A9AB8A8(v2 + 64);
  }
}

uint64_t sub_22A9AAAD0()
{
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AAB04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 376);
  sub_22A9AD9DC(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488), *(void **)(v0 + 496));
  *(_QWORD *)(v0 + 576) = *(_QWORD *)(*(_QWORD *)(v1 + 112)
                                    + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
  OUTLINED_FUNCTION_9_3();
  OUTLINED_FUNCTION_12_5();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AAB58()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 632) = sub_22A9ABC24() & 1;
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AAB94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if ((*(_BYTE *)(v1 + 632) & 1) != 0)
  {
    OUTLINED_FUNCTION_36_1();
    *(_QWORD *)(v0 + 96) = 0;
    *(_QWORD *)(v0 + 104) = 0;
    v2 = *(_QWORD *)(v1 + 368);
    *(_QWORD *)(v2 + 32) = 0;
    *(_OWORD *)v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_1_3(v3);
  }
  else
  {
    *(_QWORD *)(v1 + 384) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 376) + 112)
                                      + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_12_5();
    return OUTLINED_FUNCTION_0_1();
  }
}

uint64_t sub_22A9AAC04()
{
  uint64_t v0;
  __int128 v1;

  sub_22A9AAE7C((_QWORD *)(v0 + 248));
  v1 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 608) = v1;
  *(_QWORD *)(v0 + 624) = *(_QWORD *)(v0 + 280);
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AAC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_22A9AAD04(v1 + 248, v1 + 288);
  if (*(_QWORD *)(v1 + 312))
  {
    v2 = *(_QWORD *)(v1 + 624);
    v3 = *(_OWORD *)(v1 + 592);
    v4 = *(_OWORD *)(v1 + 608);
  }
  else
  {
    OUTLINED_FUNCTION_36_1();
    v2 = 0;
    v3 = 0uLL;
    *(_OWORD *)(v0 + 96) = 0u;
    v4 = 0uLL;
  }
  v5 = *(_QWORD *)(v1 + 368);
  *(_OWORD *)v5 = v3;
  *(_OWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 32) = v2;
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_1_3(v6);
}

uint64_t sub_22A9AACB4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9AACDC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_27_3();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9AAD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_22A9AAD4C(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

uint64_t sub_22A9AAD68(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_22A9AAD94()
{
  unint64_t result;

  result = qword_255B0DEF0;
  if (!qword_255B0DEF0)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AudioFeaturePrint.FeatureSequence, &type metadata for AudioFeaturePrint.FeatureSequence);
    atomic_store(result, (unint64_t *)&qword_255B0DEF0);
  }
  return result;
}

unint64_t sub_22A9AADD0(uint64_t a1)
{
  unint64_t result;

  result = sub_22A9AADF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A9AADF4()
{
  unint64_t result;

  result = qword_255B0DF50;
  if (!qword_255B0DF50)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AudioFeaturePrint.FeatureSequence, &type metadata for AudioFeaturePrint.FeatureSequence);
    atomic_store(result, (unint64_t *)&qword_255B0DF50);
  }
  return result;
}

unint64_t sub_22A9AAE34()
{
  unint64_t result;

  result = qword_255B0DF58[0];
  if (!qword_255B0DF58[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AudioFeaturePrint.FeatureSequence.Iterator, &type metadata for AudioFeaturePrint.FeatureSequence.Iterator);
    atomic_store(result, qword_255B0DF58);
  }
  return result;
}

uint64_t sub_22A9AAE70()
{
  return MEMORY[0x24BEE3F20];
}

uint64_t sub_22A9AAE7C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;

  v2 = v1;
  v4 = (uint64_t *)(v1 + 120);
  swift_beginAccess();
  result = sub_22A99E9B0(*(_QWORD *)(v2 + 128));
  if (v7 == v8 >> 1)
  {
    sub_22ABDEAEC();
    result = swift_unknownObjectRelease();
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
LABEL_12:
    *a1 = v9;
    a1[1] = v10;
    a1[2] = v11;
    a1[3] = v12;
    a1[4] = v13;
    return result;
  }
  if (v7 >= (uint64_t)(v8 >> 1))
  {
    __break(1u);
  }
  else
  {
    v14 = v6 + 40 * v7;
    v9 = *(void **)v14;
    v15 = *(_BYTE *)(v14 + 8);
    v11 = *(_QWORD *)(v14 + 16);
    v12 = *(_QWORD *)(v14 + 24);
    v13 = *(_QWORD *)(v14 + 32);
    sub_22ABDEAEC();
    sub_22A9AD494(v9, v15);
    sub_22ABDEAEC();
    result = swift_unknownObjectRelease();
    v16 = *(_QWORD *)(v2 + 128);
    v17 = v16 + 1;
    if (!__OFADD__(v16, 1))
    {
      v10 = v15;
      *(_QWORD *)(v2 + 128) = v17;
      if (*(_QWORD *)(*(_QWORD *)(v2 + 120) + 16) == v17)
      {
        swift_beginAccess();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v19 = *v4;
        if (isUniquelyReferenced_nonNull_native)
        {
          sub_22A9E8604(0, *(_QWORD *)(v19 + 16));
        }
        else
        {
          *v4 = (uint64_t)sub_22A9EB510(0, *(_QWORD *)(v19 + 24) >> 1);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        if (v17 < 16)
          goto LABEL_12;
        swift_beginAccess();
        sub_22A9E84C0(0, v17, MEMORY[0x24BEE4AF8]);
      }
      result = swift_endAccess();
      *(_QWORD *)(v2 + 128) = 0;
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22A9AB02C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + 40);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AB094()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 72) = objc_msgSend(*(id *)(v0 + 64), sel_format);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 + 136);
  OUTLINED_FUNCTION_9_3();
  OUTLINED_FUNCTION_12_5();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AB114()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = sub_22A9ABD84(*(void **)(v0 + 72));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AB174()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  float v5;
  id v6;
  double v7;
  double v8;
  int v9;
  int v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 88);
  if (!v1)
  {
    v2 = *(void **)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 40);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9B00]), sel_initWithFeaturePrintType_, 3);
    *(_QWORD *)(v0 + 96) = v4;
    v5 = *(double *)(v3 + 8);
    v6 = v4;
    *(float *)&v7 = v5;
    objc_msgSend(v6, sel_setOverlapFactor_, v7);
    objc_msgSend(v2, sel_sampleRate);
    if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) != 0)
    {
      if (v8 > -2147483650.0)
      {
        if (v8 < 2147483650.0)
        {
          *(_QWORD *)(v0 + 16) = sub_22ABDF524();
          *(_DWORD *)(v0 + 24) = v9;
          *(_DWORD *)(v0 + 28) = v10;
          *(_QWORD *)(v0 + 32) = v11;
          objc_msgSend(v6, sel_setWindowDuration_, v0 + 16);
          return swift_task_switch();
        }
LABEL_10:
        __break(1u);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  *(_QWORD *)(v0 + 104) = v1;
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) + 112)
                                    + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
  OUTLINED_FUNCTION_9_3();
  return swift_task_switch();
}

uint64_t sub_22A9AB308()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);
  sub_22A9ABDE4(v1, *(void **)(v0 + 72));

  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_5_6();
}

uint64_t sub_22A9AB378()
{
  _QWORD *v0;

  v0[13] = v0[12];
  v0[14] = *(_QWORD *)(*(_QWORD *)(v0[5] + 112)
                     + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
  OUTLINED_FUNCTION_9_3();
  OUTLINED_FUNCTION_12_5();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AB3F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[13];
  v3 = v0[6];
  v2 = v0[7];
  OUTLINED_FUNCTION_45_2();
  sub_22ABDEAEC();
  sub_22AB61308(v3, v2, 0, 0, v1);
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22A9AB4B8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 40) + 104) = *(_QWORD *)(v0 + 104);
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AB51C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = sub_22A9ABE4C(*(void **)(v0 + 72));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AB57C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t (*v12)(void);
  id v13;
  id v14;
  id v16;

  v3 = (void *)v0[15];
  if (v3)
  {
    OUTLINED_FUNCTION_34_2();
    v6 = OUTLINED_FUNCTION_31_1(v4, sel_addRequest_withObserver_error_, *(_QWORD *)(v1 + 88), v5);
    v7 = *(void **)v1;
    v8 = *(void **)(v1 + 88);
    v9 = *(void **)(v1 + 56);
    if ((v6 & 1) != 0)
    {
      v10 = v0[5];
      v11 = v7;

      OUTLINED_FUNCTION_21_3();
      *(_QWORD *)(v10 + 96) = v3;
    }
    else
    {
      v16 = v7;
      OUTLINED_FUNCTION_32_2();

      OUTLINED_FUNCTION_38_2();
      OUTLINED_FUNCTION_21_3();
    }
    v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_30_2();
    return OUTLINED_FUNCTION_11_4(v12);
  }
  else
  {
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9AD8]), sel_initWithFormat_, v0[9]);
    v0[16] = v13;
    v14 = v13;
    OUTLINED_FUNCTION_12_5();
    return swift_task_switch();
  }
}

uint64_t sub_22A9AB6CC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  sub_22A9ABEA8(v1, *(void **)(v0 + 72));

  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_5_6();
}

uint64_t sub_22A9AB73C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t (*v12)(void);
  id v13;

  OUTLINED_FUNCTION_34_2();
  v3 = *(void **)(v1 + 112);
  v6 = OUTLINED_FUNCTION_31_1(v4, sel_addRequest_withObserver_error_, *(_QWORD *)(v1 + 88), v5);
  v7 = *(void **)v1;
  v8 = *(void **)(v1 + 88);
  v9 = *(void **)(v1 + 56);
  if (v6)
  {
    v10 = *(_QWORD *)(v0 + 40);
    v11 = v7;

    OUTLINED_FUNCTION_21_3();
    *(_QWORD *)(v10 + 96) = v3;
  }
  else
  {
    v13 = v7;
    OUTLINED_FUNCTION_32_2();

    OUTLINED_FUNCTION_38_2();
    OUTLINED_FUNCTION_21_3();
  }
  v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_30_2();
  return OUTLINED_FUNCTION_11_4(v12);
}

uint64_t sub_22A9AB820()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 112);
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_22AA036F0(), (v3 & 1) != 0))
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 32 * v2);
    swift_endAccess();
    sub_22ABDEAEC();
  }
  else
  {
    swift_endAccess();
    return 0;
  }
  return v4;
}

uint64_t sub_22A9AB8A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 96) = v1;
  *(_QWORD *)(v2 + 104) = v3;
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22A9AB8C8()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  id v4;

  v1 = *(_QWORD **)(v0 + 96);
  v2 = (void *)v1[12];
  *(_QWORD *)(v0 + 112) = v2;
  if (!v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = v1[13];
  *(_QWORD *)(v0 + 120) = v3;
  if (!v3)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v1[14] + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
  OUTLINED_FUNCTION_9_3();
  v4 = v2;
  OUTLINED_FUNCTION_12_5();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22A9AB93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_22A9AB820();
  v3 = v2;
  OUTLINED_FUNCTION_13_4();
  *(_QWORD *)(v0 + 136) = v1;
  *(_QWORD *)(v0 + 144) = v3;
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_5_6();
}

uint64_t sub_22A9AB984()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 96) + 112)
                                    + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
  OUTLINED_FUNCTION_9_3();
  OUTLINED_FUNCTION_12_5();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9AB9C8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = sub_22A9ABC84();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9ABA04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96);
  objc_msgSend(*(id *)(v0 + 112), sel_analyzeAudioBuffer_atAudioFramePosition_, v1, *(_QWORD *)(v0 + 160));
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(*(_QWORD *)(v2 + 112)
                                    + OBJC_IVAR____TtCV18CreateMLComponents17AudioFeaturePrint8Observer_buffer);
  swift_retain();
  *(_DWORD *)(v0 + 176) = objc_msgSend(v1, sel_frameLength);
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22A9ABA7C()
{
  uint64_t v0;

  sub_22A9ABCFC(*(unsigned int *)(v0 + 176), *(_QWORD *)(v0 + 120));
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22A9ABAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD *);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t inited;
  _QWORD v12[4];
  char v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v1 + 144);
  v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 144) = v3;
    v4 = *(void (**)(_QWORD *))(v1 + 120);
    v5 = *(_QWORD *)(v0 + 144);
    if (v4)
    {
      v6 = *(_QWORD *)(v0 + 136);
      v7 = *(void **)(v0 + 112);
      v8 = *(_QWORD *)(v0 + 96);
      v9 = *(_QWORD *)(v8 + 48);
      v10 = *(_BYTE *)(v8 + 56);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E240);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
      *(_QWORD *)(inited + 32) = 0x656372756F73;
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E248);
      *(_QWORD *)(inited + 48) = v6;
      *(_QWORD *)(inited + 56) = v5;
      sub_22A9A9840((uint64_t)v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
      sub_22A9ADA0C();
      v12[0] = 0xD000000000000011;
      v12[1] = 0x800000022ABE9570;
      v12[2] = v3;
      v12[3] = v9;
      v13 = v10;
      v14 = sub_22ABDEAC8();
      v4(v12);

      sub_22A9ADA48((uint64_t)v4);
      swift_bridgeObjectRelease();
    }
    else
    {

    }
    swift_bridgeObjectRelease();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_22A9ABC24()
{
  unsigned __int8 v0;

  swift_beginAccess();
  sub_22ABDEAEC();
  v0 = sub_22A9AC130();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_22A9ABC84()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 112);
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_22AA036F0(), (v3 & 1) != 0))
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 32 * v2 + 16);
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    return 0;
  }
  return v4;
}

void (*sub_22A9ABCFC(uint64_t a1, uint64_t a2))(uint64_t *a1)
{
  void (*result)(uint64_t *);
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _QWORD v9[4];

  swift_beginAccess();
  result = sub_22AA8F054(v9, a2);
  if (!*(_QWORD *)(v5 + 8))
    goto LABEL_4;
  v6 = *(_QWORD *)(v5 + 16);
  v7 = __OFADD__(v6, a1);
  v8 = v6 + a1;
  if (!v7)
  {
    *(_QWORD *)(v5 + 16) = v8;
LABEL_4:
    ((void (*)(_QWORD *, _QWORD))result)(v9, 0);
    return (void (*)(uint64_t *))swift_endAccess();
  }
  __break(1u);
  return result;
}

uint64_t sub_22A9ABD84(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 120);
  v4 = a1;
  sub_22AAE3EA4(v4, v3);
  v6 = v5;
  swift_endAccess();

  return v6;
}

void sub_22A9ABDE4(void *a1, void *a2)
{
  id v4;
  id v5;

  swift_beginAccess();
  v4 = a2;
  v5 = a1;
  sub_22AB61298();
  swift_endAccess();

}

uint64_t sub_22A9ABE4C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_45_2();
  v3 = *(_QWORD *)(v1 + 112);
  v4 = a1;
  sub_22AAE3EB8(v4, v3);
  v6 = v5;
  swift_endAccess();

  return v6;
}

void sub_22A9ABEA8(void *a1, void *a2)
{
  id v4;
  id v5;

  OUTLINED_FUNCTION_45_2();
  v4 = a2;
  v5 = a1;
  sub_22AB61390();
  swift_endAccess();

}

uint64_t sub_22A9ABF0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_25_2(v3);
  *v4 = v1;
  v4[1] = sub_22A9ABF58;
  return AudioFeaturePrint.FeatureSequence.Iterator.next()(a1);
}

uint64_t sub_22A9ABF58()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9ABF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_255B161B8 + dword_255B161B8);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_22A9AC000;
  return v10(a1, a2, a3);
}

uint64_t sub_22A9AC000()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 16) = v0;
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_22A9AC05C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_22A9AC088()
{
  sub_22A9AC05C();
  return swift_defaultActor_deallocate();
}

void sub_22A9AC0A0()
{
  OUTLINED_FUNCTION_24_2();
}

void sub_22A9AC0A8()
{
  sub_22A9AC0A0();
}

uint64_t sub_22A9AC0C0(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t *);
  _QWORD v5[4];

  swift_beginAccess();
  v3 = sub_22AA8F054(v5, a1);
  if (*(_QWORD *)(v2 + 8))
    *(_BYTE *)(v2 + 24) = 1;
  ((void (*)(_QWORD *, _QWORD))v3)(v5, 0);
  return swift_endAccess();
}

_QWORD *sub_22A9AC130()
{
  _QWORD *result;
  int64_t v1;
  unint64_t v2;
  int64_t v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  result = sub_22AA4F470(&v11);
  v1 = v14;
  v2 = v15;
  v3 = (unint64_t)(v13 + 64) >> 6;
  while (1)
  {
    if (v2)
    {
      v4 = __clz(__rbit64(v2));
      v2 &= v2 - 1;
      v5 = v4 | (v1 << 6);
      goto LABEL_20;
    }
    v6 = v1 + 1;
    if (__OFADD__(v1, 1))
      break;
    if (v6 >= v3)
      goto LABEL_22;
    v7 = *(_QWORD *)(v12 + 8 * v6);
    v8 = v1 + 1;
    if (!v7)
    {
      v8 = v1 + 2;
      if (v1 + 2 >= v3)
        goto LABEL_22;
      v7 = *(_QWORD *)(v12 + 8 * v8);
      if (!v7)
      {
        v8 = v1 + 3;
        if (v1 + 3 >= v3)
          goto LABEL_22;
        v7 = *(_QWORD *)(v12 + 8 * v8);
        if (!v7)
        {
          v8 = v1 + 4;
          if (v1 + 4 >= v3)
            goto LABEL_22;
          v7 = *(_QWORD *)(v12 + 8 * v8);
          if (!v7)
          {
            v8 = v1 + 5;
            if (v1 + 5 >= v3)
              goto LABEL_22;
            v7 = *(_QWORD *)(v12 + 8 * v8);
            if (!v7)
            {
              v9 = v1 + 6;
              while (v9 < v3)
              {
                v7 = *(_QWORD *)(v12 + 8 * v9++);
                if (v7)
                {
                  v8 = v9 - 1;
                  goto LABEL_19;
                }
              }
LABEL_22:
              v10 = 1;
LABEL_23:
              sub_22ABDEAEC();
              swift_release();
              return (_QWORD *)v10;
            }
          }
        }
      }
    }
LABEL_19:
    v2 = (v7 - 1) & v7;
    v5 = __clz(__rbit64(v7)) + (v8 << 6);
    v1 = v8;
LABEL_20:
    if ((*(_BYTE *)(*(_QWORD *)(v11 + 56) + 32 * v5 + 24) & 1) == 0)
    {
      v10 = 0;
      goto LABEL_23;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_22A9AC270()
{
  sub_22A9AC05C();
  return swift_defaultActor_deallocate();
}

_QWORD *sub_22A9AC284()
{
  _QWORD *v0;
  uint64_t v1;

  swift_defaultActor_initialize();
  v1 = MEMORY[0x24BEE4AF8];
  v0[14] = MEMORY[0x24BEE4B00];
  v0[15] = v1;
  v0[16] = 0;
  return v0;
}

uint64_t sub_22A9AC2B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_22A9AC2C8@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *, _QWORD);
  uint64_t result;
  double v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  _QWORD v68[5];

  v58 = sub_22ABDDC88();
  v55 = *(_QWORD *)(v58 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  v57 = v5;
  OUTLINED_FUNCTION_36();
  v54 = sub_22ABDE798();
  v53 = *(_QWORD *)(v54 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v52 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B0E210);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  v51 = v9;
  OUTLINED_FUNCTION_36();
  v62 = sub_22ABDDC10();
  *(_QWORD *)&v67 = *(_QWORD *)(v62 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v61 = v11;
  OUTLINED_FUNCTION_36();
  v56 = sub_22ABDDC64();
  v65 = *(_QWORD *)(v56 - 8);
  OUTLINED_FUNCTION_2();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v64 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v63 = (char *)&v50 - v15;
  OUTLINED_FUNCTION_36();
  v16 = sub_22ABDE3D8();
  v17 = *(_QWORD *)(v16 - 8);
  v59 = (void (*)(uint64_t, uint64_t, uint64_t))v16;
  v60 = v17;
  v18 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_22ABDE324();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_23_1();
  v23 = *v1;
  sub_22ABDE318();
  sub_22ABDE3CC();
  v24 = type metadata accessor for CoreMLPackage();
  v25 = a1 + *(int *)(v24 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(a1, v2, v21);
  *(_OWORD *)v25 = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(_OWORD *)(v25 + 64) = 0u;
  *(_QWORD *)(v25 + 80) = 0;
  v26 = *(int *)(v24 + 20);
  v66 = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(a1 + v26, v20, v16);
  v27 = sub_22AB319E4();
  v29 = v28;
  v30 = (void (*)(_QWORD *, _QWORD))OUTLINED_FUNCTION_29_1();
  sub_22AB61400(v27, v29, 0xD00000000000001ALL, 0x800000022ABE1380);
  v30(v68, 0);
  (*(void (**)(char *, void (*)(uint64_t, uint64_t, uint64_t)))(v60 + 8))(v20, v59);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v2, v21);
  v68[0] = 16000;
  v31 = sub_22ABDFD7C();
  v33 = v32;
  v34 = (void (*)(_QWORD *, _QWORD))OUTLINED_FUNCTION_29_1();
  sub_22AB61400(v31, v33, 0x6152656C706D6173, 0xEA00000000006574);
  v34(v68, 0);
  OUTLINED_FUNCTION_26_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_22ABE8E30;
  v36 = v23 * 16000.0;
  if ((~COERCE__INT64(v23 * 16000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v36 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v36 < 9.22337204e18)
  {
    *(_QWORD *)(result + 32) = (uint64_t)v36;
    v37 = v63;
    v67 = xmmword_22ABE8E30;
    sub_22ABDDC1C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B0E220);
    sub_22ABDE7A4();
    OUTLINED_FUNCTION_37_2();
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = v67;
    sub_22ABDE7B0();
    v39 = (uint64_t)v51;
    *v51 = v38;
    v40 = *MEMORY[0x24BE62510];
    v41 = sub_22ABDDC34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v39, v40, v41);
    __swift_storeEnumTagSinglePayload(v39, 0, 1, v41);
    sub_22ABDDC40();
    OUTLINED_FUNCTION_26_2();
    sub_22ABDDC1C();
    sub_22ABDE258();
    v42 = v52;
    sub_22ABDDEE0();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v53 + 104))(v42, *MEMORY[0x24BE63240], v54);
    sub_22ABDE288();
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
    sub_22ABDDE68();
    OUTLINED_FUNCTION_37_2();
    v61 = v43 | 7;
    *(_OWORD *)(swift_allocObject() + 16) = v67;
    v60 = *(_QWORD *)(v65 + 16);
    v45 = v56;
    v44 = v57;
    ((void (*)(uint64_t, char *, uint64_t))v60)(v57, v37, v56);
    v46 = *MEMORY[0x24BE62400];
    v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 104);
    v47 = v58;
    v59(v44, v46, v58);
    OUTLINED_FUNCTION_28_2();
    sub_22ABDE2C4();
    *(_OWORD *)(swift_allocObject() + 16) = v67;
    v48 = v64;
    ((void (*)(uint64_t, char *, uint64_t))v60)(v44, v64, v45);
    v59(v44, v46, v47);
    OUTLINED_FUNCTION_28_2();
    sub_22ABDE300();
    v49 = *(void (**)(char *, uint64_t))(v65 + 8);
    v49(v48, v45);
    return ((uint64_t (*)(char *, uint64_t))v49)(v63, v45);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_22A9AC8F8@<X0>(uint64_t a1@<X8>)
{
  return sub_22A9AC2C8(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for AudioFeaturePrint(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t destroy for AudioFeaturePrint()
{
  return swift_release();
}

_QWORD *assignWithCopy for AudioFeaturePrint(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AudioFeaturePrint(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioFeaturePrint(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioFeaturePrint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AudioFeaturePrint()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t destroy for AudioFeaturePrint.FeatureSequence(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();
  if (*(_QWORD *)(a1 + 80))
    swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AudioFeaturePrint.FeatureSequence(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_retain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v5;
    *(_QWORD *)(a1 + 88) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AudioFeaturePrint.FeatureSequence(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v6;
      *(_QWORD *)(a1 + 88) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 88) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

void *__swift_memcpy104_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for AudioFeaturePrint.FeatureSequence(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  v5 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v5;
      *(_QWORD *)(a1 + 88) = v7;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v5;
  *(_QWORD *)(a1 + 88) = v6;
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioFeaturePrint.FeatureSequence(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioFeaturePrint.FeatureSequence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AudioFeaturePrint.FeatureSequence()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t destroy for AudioFeaturePrint.FeatureSequence.Iterator(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();
  swift_release();

  if (*(_QWORD *)(a1 + 120))
    swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AudioFeaturePrint.FeatureSequence.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
  v5 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v6 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  v7 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  swift_retain();
  swift_retain();
  v8 = v6;
  v9 = v7;
  if (v5)
  {
    v10 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v5;
    *(_QWORD *)(a1 + 128) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  }
  v11 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v11;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AudioFeaturePrint.FeatureSequence.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  swift_retain();
  swift_release();
  v7 = *(void **)(a1 + 96);
  v8 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v10 = *(void **)(a2 + 112);
  v11 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v10;
  v12 = v10;

  v13 = *(_QWORD *)(a2 + 120);
  if (!*(_QWORD *)(a1 + 120))
  {
    if (v13)
    {
      v15 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = v13;
      *(_QWORD *)(a1 + 128) = v15;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    goto LABEL_8;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_7;
  }
  v14 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v13;
  *(_QWORD *)(a1 + 128) = v14;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

void *__swift_memcpy152_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x98uLL);
}

uint64_t assignWithTake for AudioFeaturePrint.FeatureSequence.Iterator(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  v5 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  v6 = *(_QWORD *)(a2 + 112);
  v7 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v6;

  v8 = *(_QWORD *)(a2 + 120);
  if (!*(_QWORD *)(a1 + 120))
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = v8;
      *(_QWORD *)(a1 + 128) = v10;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    goto LABEL_8;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v8;
  *(_QWORD *)(a1 + 128) = v9;
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_release();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioFeaturePrint.FeatureSequence.Iterator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 152))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioFeaturePrint.FeatureSequence.Iterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AudioFeaturePrint.FeatureSequence.Iterator()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t type metadata accessor for AudioFeatureEventBuffer()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for AudioFeatureEventBuffer.Status(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  sub_22ABDEAEC();
  return a1;
}

uint64_t assignWithCopy for AudioFeatureEventBuffer.Status(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AudioFeatureEventBuffer.Status(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioFeatureEventBuffer.Status(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioFeatureEventBuffer.Status(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioFeatureEventBuffer.Status()
{
  return &type metadata for AudioFeatureEventBuffer.Status;
}

id sub_22A9AD494(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

uint64_t destroy for AudioFeatureEventBuffer.Event(uint64_t a1)
{
  sub_22A9AAD4C(*(id *)a1, *(_BYTE *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioFeatureEventBuffer.Event(uint64_t a1, uint64_t a2)
{
  id v4;
  unsigned __int8 v5;
  uint64_t v6;

  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_22A9AD494(*(id *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_22ABDEAEC();
  return a1;
}

uint64_t assignWithCopy for AudioFeatureEventBuffer.Event(uint64_t a1, uint64_t a2)
{
  id v4;
  unsigned __int8 v5;
  void *v6;
  unsigned __int8 v7;

  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_22A9AD494(*(id *)a2, v5);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v4;
  v7 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v5;
  sub_22A9AAD4C(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AudioFeatureEventBuffer.Event(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t v7;

  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_22A9AAD4C(v5, v6);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioFeatureEventBuffer.Event(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioFeatureEventBuffer.Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioFeatureEventBuffer.Event()
{
  return &type metadata for AudioFeatureEventBuffer.Event;
}

uint64_t sub_22A9AD6B8()
{
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_42_1();
  return swift_deallocObject();
}

uint64_t sub_22A9AD6E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = swift_task_alloc();
  v9 = (_QWORD *)OUTLINED_FUNCTION_25_2(v8);
  *v9 = v2;
  v9[1] = sub_22A9ABF58;
  return sub_22A9AA10C(a1, v4, v5, v7, v6);
}

uint64_t sub_22A9AD754(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22A9AD790(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_22A9AD7F4;
  return v6(a1);
}

uint64_t sub_22A9AD7F4()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_2_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_1_3(v0);
}

uint64_t sub_22A9AD818()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A9AD83C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_25_2(v5);
  *v6 = v2;
  v6[1] = sub_22A9ABF58;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255B0E1E0 + dword_255B0E1E0))(a1, v4);
}

uint64_t sub_22A9AD8A8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_42_1();

  return swift_deallocObject();
}

uint64_t sub_22A9AD8D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_39_2();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_25_2(v0);
  v2 = OUTLINED_FUNCTION_15_2(v1);
  return sub_22A9A9F84(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_22A9AD92C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_42_1();

  return swift_deallocObject();
}

uint64_t sub_22A9AD95C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_39_2();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_25_2(v0);
  v2 = OUTLINED_FUNCTION_15_2(v1);
  return sub_22A9A9B90(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_22A9AD9B0(uint64_t a1)
{
  destroy for AudioFeaturePrint.FeatureSequence(a1);
  return a1;
}

void sub_22A9AD9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

unint64_t sub_22A9ADA0C()
{
  unint64_t result;

  result = qword_255B0E258;
  if (!qword_255B0E258)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for MetricsKey, &type metadata for MetricsKey);
    atomic_store(result, (unint64_t *)&qword_255B0E258);
  }
  return result;
}

uint64_t sub_22A9ADA48(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AudioFeatureEventBuffer.EventKind(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_22A9AD494(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for AudioFeatureEventBuffer.EventKind(uint64_t a1)
{
  sub_22A9AAD4C(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for AudioFeatureEventBuffer.EventKind(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_22A9AD494(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_22A9AAD4C(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for AudioFeatureEventBuffer.EventKind(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_22A9AAD4C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioFeatureEventBuffer.EventKind(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioFeatureEventBuffer.EventKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_22A9ADBD0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_22A9ADBE8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AudioFeatureEventBuffer.EventKind()
{
  return &type metadata for AudioFeatureEventBuffer.EventKind;
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_9_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_11_4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_13_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_15_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_16_5@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void OUTLINED_FUNCTION_17_1()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_18_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_25_2(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v3, v1, v2);
}

void OUTLINED_FUNCTION_27_3()
{
  uint64_t v0;

  sub_22A9AD9DC(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488), *(void **)(v0 + 496));
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  return sub_22ABDDE2C();
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  return sub_22ABDE360();
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

id OUTLINED_FUNCTION_31_1(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;

  return objc_msgSend(v4, a2, a3, a4, v5);
}

uint64_t OUTLINED_FUNCTION_32_2()
{
  return sub_22ABDD004();
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_34_2()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
}

uint64_t OUTLINED_FUNCTION_35_1()
{
  return sub_22ABDF1B8();
}

void OUTLINED_FUNCTION_36_1()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_38_2()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_41_1()
{
  void *v0;

  sub_22A9AAD4C(v0, 0);
}

uint64_t OUTLINED_FUNCTION_42_1()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_43_2()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_44_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  return sub_22ABDF230();
}

void TemporalEstimator.write(_:to:overwrite:)()
{
  sub_22A9ADF4C();
}

void TemporalEstimator.read(from:)()
{
  sub_22A9AE018();
}

void SupervisedTemporalEstimator.write(_:to:overwrite:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_1_4(v3, v4);
  type metadata accessor for EstimatorPackageEncoder(0);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_10_3();
  if (!v0)
  {
    OUTLINED_FUNCTION_6_8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56));
    OUTLINED_FUNCTION_14_2();
    __swift_instantiateConcreteTypeFromMangledName(qword_2540E8140);
    OUTLINED_FUNCTION_9_4();
    OUTLINED_FUNCTION_13_5();
    sub_22AA92618();
    swift_release();
    OUTLINED_FUNCTION_11_5();
  }
  OUTLINED_FUNCTION_25_1();
}

void SupervisedTemporalEstimator.read(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_7();
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_7(v2, v3);
  type metadata accessor for EstimatorPackageDecoder(0);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_12_6();
  if (!v0)
  {
    OUTLINED_FUNCTION_7_5();
    OUTLINED_FUNCTION_11_5();
  }
  OUTLINED_FUNCTION_25_1();
}

void UpdatableSupervisedTemporalEstimator.writeWithOptimizer(_:to:overwrite:)()
{
  sub_22A9ADF4C();
}

void sub_22A9ADF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_1_4(v3, v4);
  type metadata accessor for EstimatorPackageEncoder(0);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_10_3();
  if (!v0)
  {
    OUTLINED_FUNCTION_6_8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 32));
    OUTLINED_FUNCTION_14_2();
    __swift_instantiateConcreteTypeFromMangledName(qword_2540E8140);
    OUTLINED_FUNCTION_9_4();
    OUTLINED_FUNCTION_13_5();
    sub_22AA92618();
    swift_release();
    OUTLINED_FUNCTION_11_5();
  }
  OUTLINED_FUNCTION_25_1();
}

void UpdatableSupervisedTemporalEstimator.readWithOptimizer(from:)()
{
  sub_22A9AE018();
}

void sub_22A9AE018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_7();
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_7(v2, v3);
  type metadata accessor for EstimatorPackageDecoder(0);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_12_6();
  if (!v0)
  {
    OUTLINED_FUNCTION_7_5();
    OUTLINED_FUNCTION_11_5();
  }
  OUTLINED_FUNCTION_25_1();
}

uint64_t OUTLINED_FUNCTION_2_7@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return sub_22ABDD0E8();
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return sub_22ABDD0E8();
}

uint64_t OUTLINED_FUNCTION_6_8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return a1(v3, v4 - 104, v2, v1);
}

uint64_t OUTLINED_FUNCTION_7_5()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v3 - 104, v2, v1);
}

uint64_t OUTLINED_FUNCTION_8_5()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_10_3()
{
  sub_22AA92148();
}

uint64_t OUTLINED_FUNCTION_11_5()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 104);
}

void OUTLINED_FUNCTION_12_6()
{
  sub_22AA92AD8();
}

void OUTLINED_FUNCTION_13_5()
{
  sub_22AA927C8();
}

uint64_t OUTLINED_FUNCTION_14_2()
{
  uint64_t v0;

  return sub_22A9A1A28(v0 - 104, v0 - 144);
}

void FullyConnectedNetworkMultiLabelClassifier.decode(from:)()
{
  OUTLINED_FUNCTION_27_4();
}

uint64_t sub_22A9AE200(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v6);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8);
  v9 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkMultiLabelClassifierModel<A, B>, a1);
  result = v8(a1, a1, v9, v6, v7);
  if (!v3)
  {
    sub_22ABDEAEC();
    v11 = sub_22A99E738();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA88);
    v12 = sub_22ABDD7D8();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_22ABE8E30;
    v16 = v15 + v14;
    v17 = OUTLINED_FUNCTION_57();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v1 + *(int *)(v17 + 20), v12);
    sub_22A9A07AC();
    sub_22A99E8C0(v11);
    swift_bridgeObjectRelease();
    v18 = sub_22A99E9B0(1);
    v22 = (_QWORD *)sub_22A99EA98(v18, v19, v20, v21);
    v23 = sub_22A99EB90(v22, v2);
    result = OUTLINED_FUNCTION_54();
    if ((v23 & 1) == 0)
    {
      v24 = sub_22ABDF830();
      OUTLINED_FUNCTION_53();
      v26 = v25;
      sub_22ABDF824();
      v27 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D8], v24);
      swift_willThrow(v27);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
    }
  }
  return result;
}

void FullyConnectedNetworkMultiLabelClassifier.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _QWORD v14[4];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v14[2] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  v14[3] = v8;
  v14[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  OUTLINED_FUNCTION_1_0();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v14[0] = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  v12 = a3[2];
  v15 = a3[1];
  v16 = v12;
  v13 = a3[5];
  v17 = a3[4];
  v18 = v13;
  OUTLINED_FUNCTION_27_4();
}

void sub_22A9AE4F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v21;

  v9 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkMultiLabelClassifierModel<A, B>, a1);
  v10 = *(_QWORD *)(v7 - 72);
  v5(v4, a1, v9, v3, v2);
  if (!v10)
  {
    v11 = *(_QWORD *)(v7 - 176);
    v12 = v4;
    v13 = v4 + *(int *)(a1 + 84);
    v15 = *(_QWORD *)(v7 - 160);
    v14 = *(_QWORD *)(v7 - 152);
    sub_22A9AF328(v13, v14, &qword_255B0DA90);
    if (__swift_getEnumTagSinglePayload(v14, 1, *(_QWORD *)(v7 - 168)) == 1)
    {
      sub_22A9A0C1C(v14, &qword_255B0DA90);
    }
    else
    {
      v16 = v1;
      sub_22A9A07C8(v14, v1);
      sub_22A9AF328(v1, v11, &qword_255B0DA98);
      sub_22A9AF2A4(v12, v15);
      *(_QWORD *)(v7 - 144) = sub_22AAA2FA0(v11, v15);
      *(_QWORD *)(v7 - 136) = v17;
      v18 = *(_QWORD *)(v6 + 24);
      v19 = *(_QWORD *)(v6 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v6, v18);
      v20 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v19 + 16);
      v21 = sub_22A9A0810();
      v20(v7 - 144, &type metadata for AdamStorage, v21, v18, v19);
      sub_22A9A0C1C(v16, &qword_255B0DA98);
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_16();
}

void FullyConnectedNetworkMultiLabelClassifier.decodeWithOptimizer(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAA8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0();
  v3 = OUTLINED_FUNCTION_16_6(v2);
  type metadata accessor for Moment(v3);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v5);
  sub_22ABDDA0C();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v9);
  sub_22ABDDB08();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  type metadata accessor for AdamDenseLayer(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0();
  sub_22ABDD7D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_27_4();
}

uint64_t sub_22A9AF2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FullyConnectedNetwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22A9AF2E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B0DAE0;
  if (!qword_255B0DAE0)
  {
    v1 = type metadata accessor for FullyConnectedNetwork();
    result = MEMORY[0x22E2E4D80](&unk_22ABE92BC, v1);
    atomic_store(result, (unint64_t *)&qword_255B0DAE0);
  }
  return result;
}

void sub_22A9AF328(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_20_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9AF360(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_20_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9AF398()
{
  FullyConnectedNetworkMultiLabelClassifier.decode(from:)();
}

void sub_22A9AF3AC(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  FullyConnectedNetworkMultiLabelClassifier.encodeWithOptimizer(_:to:)(a1, a2, a3);
}

void sub_22A9AF3C0()
{
  FullyConnectedNetworkMultiLabelClassifier.decodeWithOptimizer(from:)();
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  return sub_22ABDD814();
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 448))(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_7_6@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 440))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 216));
}

uint64_t OUTLINED_FUNCTION_11_6()
{
  return sub_22ABDE8F4();
}

uint64_t OUTLINED_FUNCTION_12_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 192))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_16_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return v1;
}

uint64_t OUTLINED_FUNCTION_20_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 176);
}

void OUTLINED_FUNCTION_23_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 392) = v0;
}

uint64_t OUTLINED_FUNCTION_24_3(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void OUTLINED_FUNCTION_27_4()
{
  type metadata accessor for FullyConnectedNetworkMultiLabelClassifierModel();
}

void ComposedTemporalTransformer.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for ComposedTemporalTransformer();
}

uint64_t sub_22A9AF594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for ComposedTemporalTransformer()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t ComposedTemporalTransformer.inner.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t ComposedTemporalTransformer.inner.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*ComposedTemporalTransformer.inner.modify())()
{
  return nullsub_1;
}

uint64_t ComposedTemporalTransformer.outer.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t ComposedTemporalTransformer.outer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*ComposedTemporalTransformer.outer.modify())()
{
  return nullsub_1;
}

uint64_t ComposedTemporalTransformer.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v10 = a5[3];
  v8[10] = v10;
  v8[11] = *(_QWORD *)(v10 - 8);
  v8[12] = OUTLINED_FUNCTION_0_0();
  v11 = a5[2];
  v8[13] = v11;
  v8[14] = *(_QWORD *)(v11 - 8);
  v8[15] = OUTLINED_FUNCTION_0_0();
  v8[16] = a5[4];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[17] = AssociatedTypeWitness;
  v8[18] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[19] = OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9AF6F4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v1 = v0[16];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[14] + 16))(v0[15], v0[9], v0[13]);
  v4 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 40)
                                                                                              + *(_QWORD *)(v1 + 40));
  v2 = (_QWORD *)swift_task_alloc();
  v0[20] = v2;
  *v2 = v0;
  v2[1] = sub_22A9AF778;
  return v4(v0[19], v0[3], v0[4], v0[5], v0[7], v0[8], v0[13], v0[16]);
}

uint64_t sub_22A9AF778()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_7();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9AF7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v7)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t);

  v1 = *(_QWORD *)(v0 + 168);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_14_3();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 16))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72) + *(int *)(v3 + 52), *(_QWORD *)(v0 + 80));
    v4 = *(_QWORD *)(v3 + 40);
    v7 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t))(**(int **)(v4 + 40)
                                                                                                  + *(_QWORD *)(v4 + 40));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v5;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *v5 = v0;
    v5[1] = sub_22A9AF900;
    return v7(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 136), AssociatedConformanceWitness, *(_QWORD *)(v0 + 80), v4);
  }
}

uint64_t sub_22A9AF900()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_7();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9AF96C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9AF9C0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9AF9F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

BOOL sub_22A9AFA2C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0()
{
  return sub_22ABE0250();
}

uint64_t sub_22A9AFA60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x72656E6E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726574756FLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22A9AFB44()
{
  return 2;
}

uint64_t sub_22A9AFB4C()
{
  sub_22ABE0244();
  sub_22ABE0250();
  return sub_22ABE0280();
}

uint64_t sub_22A9AFB90(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726574756FLL;
  else
    return 0x72656E6E69;
}

BOOL sub_22A9AFBB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22A9AFA2C(*a1, *a2);
}

uint64_t sub_22A9AFBD0()
{
  return sub_22A9AFB4C();
}

uint64_t sub_22A9AFBE4()
{
  return _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_22A9AFBF8()
{
  sub_22ABE0244();
  _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
  return sub_22ABE0280();
}

uint64_t sub_22A9AFC40()
{
  char *v0;

  return sub_22A9AFB90(*v0);
}

uint64_t sub_22A9AFC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9AFA60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9AFC84()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22A9AFCAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9AFB44();
  *a1 = result;
  return result;
}

uint64_t sub_22A9AFCDC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABE98E8, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9AFD10(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABE98E8, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22A9AFD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9AFDDC;
  return ComposedTemporalTransformer.applied<A>(to:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t sub_22A9AFDDC()
{
  uint64_t *v0;
  uint64_t v2;

  OUTLINED_FUNCTION_17_1();
  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t ComposedTemporalTransformer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  return 0;
}

#error "22A9AFEEC: call analysis failed (funcsize=9)"

uint64_t sub_22A9AFEF8()
{
  return sub_22A9AFED4();
}

uint64_t static ComposedTemporalTransformer<>.== infix(_:_:)()
{
  if ((sub_22ABDECFC() & 1) != 0)
    type metadata accessor for ComposedTemporalTransformer();
  return 0;
}

uint64_t sub_22A9AFFA8()
{
  return static ComposedTemporalTransformer<>.== infix(_:_:)();
}

void ComposedTemporalTransformer<>.encode(to:)()
{
  OUTLINED_FUNCTION_17_2();
}

void sub_22A9B0010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  MEMORY[0x22E2E4D80](&unk_22ABE98E8, a1);
  v11 = sub_22ABDFD58();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&a9 - v13;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v10 - 112) = 0;
  v15 = *(_QWORD *)(v10 - 72);
  sub_22ABDFD4C();
  if (!v15)
  {
    *(_BYTE *)(v10 - 112) = 1;
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for ComposedTemporalTransformer.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22A9B0120()
{
  ComposedTemporalTransformer<>.encode(to:)();
}

void ComposedTemporalTransformer<>.init(from:)(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_17_2();
}

void sub_22A9B01D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x22E2E4D80](&unk_22ABE98E8, a1);
  v6 = sub_22ABDFCB0();
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 152) = v3;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for ComposedTemporalTransformer();
}

void sub_22A9B0240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v11 - 216) = a1;
  v12 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  *(_QWORD *)(v11 - 128) = v9;
  v15 = *(_QWORD *)(v11 - 72);
  sub_22ABE0298();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    *(_QWORD *)(v11 - 72) = v12;
    v16 = *(_QWORD *)(v11 - 176);
    v17 = (uint64_t)v10;
    v19 = *(_QWORD *)(v11 - 168);
    v18 = *(_QWORD *)(v11 - 160);
    v20 = v14;
    *(_BYTE *)(v11 - 112) = 0;
    v21 = *(_QWORD *)(v11 - 152);
    sub_22ABDFC8C();
    v22 = *(void (**)(char *, _QWORD, uint64_t))(v16 + 32);
    *(_QWORD *)(v11 - 144) = v20;
    v22(v20, *(_QWORD *)(v11 - 136), v21);
    *(_BYTE *)(v11 - 112) = 1;
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_8_6();
    v23 = *(_QWORD *)(v11 - 216);
    v24 = *(_QWORD *)(v11 - 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 208) + 32))(v24 + *(int *)(v23 + 52), v19, v18);
    v25 = *(_QWORD *)(v11 - 72);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v25 + 16))(*(_QWORD *)(v11 - 200), v24, v23);
    __swift_destroy_boxed_opaque_existential_1(v17);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v23);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22A9B03CC(uint64_t a1)
{
  ComposedTemporalTransformer<>.init(from:)(a1);
}

void Transformer.appending<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_22A9B0428(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))TransformerToTemporalAdaptor.init(_:), (uint64_t)&protocol conformance descriptor for TransformerToTemporalAdaptor<A>, a6);
}

{
  sub_22A9B0428(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))TemporalAdaptor.init(_:), (uint64_t)&protocol conformance descriptor for TemporalAdaptor<A>, a6);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = v6;
  v28 = a6;
  v29 = a5;
  v27 = a1;
  v12 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v15 = v14 - v13;
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_23_1();
  v21 = type metadata accessor for TransformerToTemporalAdaptor(0, v19, v20, v20);
  OUTLINED_FUNCTION_10_1();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v26 - v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v17 + 16))(v7, v8, a2, v23);
  TransformerToTemporalAdaptor.init(_:)(v7, a2, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v27, a3);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TransformerToTemporalAdaptor<A>, v21);
  PreprocessingSupervisedTemporalEstimator.init(_:_:)((uint64_t)v25, v21, v28);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = v6;
  v28 = a6;
  v29 = a5;
  v27 = a1;
  v12 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v15 = v14 - v13;
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_23_1();
  v21 = type metadata accessor for TransformerToTemporalAdaptor(0, v19, v20, v20);
  OUTLINED_FUNCTION_10_1();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v26 - v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v17 + 16))(v7, v8, a2, v23);
  TransformerToTemporalAdaptor.init(_:)(v7, a2, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v27, a3);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TransformerToTemporalAdaptor<A>, v21);
  PreprocessingTemporalEstimator.init(_:_:)((uint64_t)v25, v21, v28);
}

void sub_22A9B0428(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(uint64_t, uint64_t, uint64_t)@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a7;
  v33 = a5;
  v29 = a1;
  v30 = a6;
  v9 = v8;
  v31 = a8;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_33();
  v22 = v21 - v20;
  v24 = v23(0);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v28 - v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, v9, a2);
  v30(v22, a2, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v29, a3);
  MEMORY[0x22E2E4D80](v32, v24);
  ComposedTemporalTransformer.init(_:_:)((uint64_t)v27, v24, v31);
}

void sub_22A9B0548()
{
  OUTLINED_FUNCTION_3();
}

void TemporalTransformer.appending<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_22A9B058C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))TransformerToTemporalAdaptor.init(_:), (uint64_t)&protocol conformance descriptor for TransformerToTemporalAdaptor<A>, a5);
}

{
  sub_22A9B058C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))TemporalAdaptor.init(_:), (uint64_t)&protocol conformance descriptor for TemporalAdaptor<A>, a5);
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v7 = v5;
  v12 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_9_15();
  v16 = type metadata accessor for SupervisedEstimatorToTemporalAdaptor(0, v13, v15, v14);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_33();
  v21 = v20 - v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20 - v19, v7, a2);
  OUTLINED_FUNCTION_27_8(v6, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  SupervisedEstimatorToTemporalAdaptor.init(_:)(v6, a3, a4);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for SupervisedEstimatorToTemporalAdaptor<A>, v16);
  PreprocessingSupervisedTemporalEstimator.init(_:_:)(v21, a2, a5);
}

void sub_22A9B058C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, void (*a5)(uint64_t, uint64_t, uint64_t)@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v8 = v7;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  v20 = v19(0, v17, v18);
  OUTLINED_FUNCTION_13_0();
  v22 = MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_33();
  v25 = v24 - v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24 - v23, v8, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, a1, a3);
  a5(v16, a3, a4);
  MEMORY[0x22E2E4D80](a6, v20);
  ComposedTemporalTransformer.init(_:_:)(v25, a2, a7);
}

void sub_22A9B06B0()
{
  OUTLINED_FUNCTION_3();
}

void TemporalTransformer.appending<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15 - v14, v4, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  ComposedTemporalTransformer.init(_:_:)(v16, a2, a4);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_9_15();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_27_8(v6, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v5, a1, a3);
  PreprocessingSupervisedTemporalEstimator.init(_:_:)(v6, a2, a4);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_9_15();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_27_8(v6, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v5, a1, a3);
  PreprocessingTemporalEstimator.init(_:_:)(v6, a2, a4);
}

void sub_22A9B0780()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22A9B078C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22A9B07AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9B0888 + 4 * byte_22ABE96A0[v21 - 1]))();
}

void sub_22A9B08FC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t getEnumTagSinglePayload for DenseLayerStorage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_22A9B0B78(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9B0BC4 + 4 * byte_22ABE96B3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9B0BF8 + 4 * byte_22ABE96AE[v4]))();
}

uint64_t sub_22A9B0BF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9B0C00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9B0C08);
  return result;
}

uint64_t sub_22A9B0C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9B0C1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9B0C20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9B0C28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_22A9B0C34(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

void sub_22A9B0C40()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9B0C50()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9B0C60()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_5_8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2);
}

uint64_t OUTLINED_FUNCTION_7_7@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  return a2(a1, a3);
}

uint64_t OUTLINED_FUNCTION_8_6()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 128), *(_QWORD *)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[19], v0[17]);
}

void OUTLINED_FUNCTION_17_2()
{
  type metadata accessor for ComposedTemporalTransformer.CodingKeys();
}

double DetectedObject.boundingBox.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void DetectedObject.boundingBox.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*DetectedObject.boundingBox.modify())()
{
  return nullsub_1;
}

uint64_t DetectedObject.label.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t DetectedObject.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*DetectedObject.label.modify())()
{
  return nullsub_1;
}

float DetectedObject.confidence.getter(uint64_t a1)
{
  uint64_t v1;

  return *(float *)(v1 + *(int *)(a1 + 48));
}

uint64_t DetectedObject.confidence.setter(uint64_t result, float a2)
{
  uint64_t v2;

  *(float *)(v2 + *(int *)(result + 48)) = a2;
  return result;
}

uint64_t (*DetectedObject.confidence.modify())()
{
  return nullsub_1;
}

uint64_t DetectedObject.init(boundingBox:label:probability:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, float a10@<S4>)
{
  uint64_t v14;
  uint64_t result;

  *a5 = a6;
  a5[1] = a7;
  a5[2] = a8;
  a5[3] = a9;
  v14 = type metadata accessor for DetectedObject(0, a2, a3, a4);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))((char *)a5 + *(int *)(v14 + 44), a1, a2);
  *(float *)((char *)a5 + *(int *)(v14 + 48)) = a10;
  return result;
}

uint64_t type metadata accessor for DetectedObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DetectedObject);
}

BOOL static DetectedObject.== infix(_:_:)(CGRect *a1, CGRect *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BOOL8 result;
  uint64_t v11;

  result = CGRectEqualToRect(*a1, *a2);
  if (result)
  {
    v11 = type metadata accessor for DetectedObject(0, a3, a4, a5);
    return (sub_22ABDECFC() & 1) != 0
        && *(float *)((char *)&a1->origin.x + *(int *)(v11 + 48)) == *(float *)((char *)&a2->origin.x
                                                                              + *(int *)(v11 + 48));
  }
  return result;
}

BOOL sub_22A9B0EA4(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_22A9B0EB4()
{
  return sub_22ABE0250();
}

uint64_t sub_22A9B0ED8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_22A9B1040()
{
  sub_22ABE0244();
  sub_22ABE0250();
  return sub_22ABE0280();
}

uint64_t sub_22A9B1084(char a1)
{
  if (!a1)
    return 0x676E69646E756F62;
  if (a1 == 1)
    return 0x6C6562616CLL;
  return 0x6E656469666E6F63;
}

BOOL sub_22A9B10E4(char *a1, char *a2)
{
  return sub_22A9B0EA4(*a1, *a2);
}

uint64_t sub_22A9B10FC()
{
  return sub_22A9B1040();
}

uint64_t sub_22A9B110C()
{
  return sub_22A9B0EB4();
}

uint64_t sub_22A9B111C()
{
  sub_22ABE0244();
  sub_22A9B0EB4();
  return sub_22ABE0280();
}

uint64_t sub_22A9B1164()
{
  char *v0;

  return sub_22A9B1084(*v0);
}

uint64_t sub_22A9B1174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9B0ED8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9B11A4()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22A9B11C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9A79FC();
  *a1 = result;
  return result;
}

uint64_t sub_22A9B11F8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABE9B18, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9B122C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABE9B18, a1);
  return sub_22ABE02F8();
}

BOOL sub_22A9B1260(CGRect *a1, CGRect *a2, uint64_t *a3)
{
  return static DetectedObject.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t DetectedObject<>.encode(to:)(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v15[4];
  __int128 v16;
  __int128 v17;
  char v18;

  v15[1] = a3;
  v4 = a2[3];
  v5 = a2[4];
  v15[0] = a2[2];
  v6 = type metadata accessor for DetectedObject.CodingKeys(255, v15[0], v4, v5);
  MEMORY[0x22E2E4D80](&unk_22ABE9B18, v6);
  v7 = sub_22ABDFD58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = (__int128 *)v15[2];
  sub_22ABE02B0();
  v12 = v11[1];
  v16 = *v11;
  v17 = v12;
  v18 = 0;
  type metadata accessor for CGRect(0);
  sub_22A9B1724(&qword_255B0E400, MEMORY[0x24BDBD828]);
  v13 = v15[3];
  sub_22ABDFD4C();
  if (!v13)
  {
    LOBYTE(v16) = 1;
    sub_22ABDFD4C();
    LOBYTE(v16) = 2;
    sub_22ABDFD28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t type metadata accessor for DetectedObject.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DetectedObject.CodingKeys);
}

uint64_t sub_22A9B1428(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return DetectedObject<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t DetectedObject<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 v22;
  void (*v23)(void);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  __int128 v42;

  v36 = a4;
  v30 = a6;
  v31 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v34 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DetectedObject.CodingKeys(255, v11, v12, v13);
  MEMORY[0x22E2E4D80](&unk_22ABE9B18, v14);
  v37 = sub_22ABDFCB0();
  v33 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v16 = (char *)&v29 - v15;
  v35 = a2;
  v32 = type metadata accessor for DetectedObject(0, a2, a3, a5);
  v17 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v19 = (_OWORD *)((char *)&v29 - v18);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v38 = v16;
  v20 = v39;
  sub_22ABE0298();
  if (v20)
    return OUTLINED_FUNCTION_1_5();
  v21 = v19;
  v39 = v17;
  type metadata accessor for CGRect(0);
  v40 = 0;
  sub_22A9B1724(qword_255B0E408, MEMORY[0x24BDBD838]);
  sub_22ABDFC8C();
  v22 = v42;
  *v19 = v41;
  v19[1] = v22;
  LOBYTE(v41) = 1;
  sub_22ABDFC8C();
  v23 = *(void (**)(void))(v31 + 32);
  v36 = (char *)v19 + *(int *)(v32 + 44);
  v23();
  LOBYTE(v41) = 2;
  sub_22ABDFC68();
  v25 = v24;
  OUTLINED_FUNCTION_0_9();
  v26 = v32;
  *(_DWORD *)((char *)v21 + *(int *)(v32 + 48)) = v25;
  v27 = v39;
  (*(void (**)(uint64_t, _OWORD *, uint64_t))(v39 + 16))(v30, v21, v26);
  OUTLINED_FUNCTION_1_5();
  return (*(uint64_t (**)(_OWORD *, uint64_t))(v27 + 8))(v21, v26);
}

uint64_t sub_22A9B1724(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    result = MEMORY[0x22E2E4D80](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A9B1764@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return DetectedObject<>.init(from:)(a1, a2[2], a2[3], *(char **)(a3 - 8), a2[4], a4);
}

uint64_t sub_22A9B1788()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_22A9B180C(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + 3;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v6 + ((v5 + 32) & ~v5)) & 0xFFFFFFFFFFFFFFFCLL) + 4 > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    v10 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v5 + 32) & ~v5;
    v12 = ((unint64_t)a2 + v5 + 32) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v11, v12);
    *(_DWORD *)((v6 + v11) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((v6 + v12) & 0xFFFFFFFFFFFFFCLL);
  }
  return v3;
}

uint64_t sub_22A9B18E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_OWORD *sub_22A9B1904(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 32) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 32) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v7, v8);
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + v7) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + v8) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

_QWORD *sub_22A9B1984(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 32) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 32) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v6, v7);
  *(_DWORD *)((*(_QWORD *)(v4 + 64) + 3 + v6) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v4 + 64) + 3 + v7) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

_OWORD *sub_22A9B1A1C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 32) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 32) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + v7) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + v8) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

_OWORD *sub_22A9B1A9C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 32) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 32) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v7, v8);
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + v7) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + v8) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_22A9B1B1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return __swift_getEnumTagSinglePayload((a1 + v7 + 32) & ~v7, v6, v4);
    return 0;
  }
  if (((((*(_QWORD *)(v5 + 64) + ((v7 + 32) & ~v7) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4) & 0xFFFFFFFC) != 0)
    v8 = 2;
  else
    v8 = a2 - v6 + 1;
  if (v8 >= 0x10000)
    v9 = 4;
  else
    v9 = 2;
  if (v8 < 0x100)
    v9 = 1;
  if (v8 >= 2)
    v10 = v9;
  else
    v10 = 0;
  return ((uint64_t (*)(void))((char *)&loc_22A9B1B9C + 4 * byte_22ABE9940[v10]))();
}

void sub_22A9B1C00(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64)
       + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 3) & 0xFFFFFFFFFFFFFFFCLL)
     + 4;
  if (v7 >= a3)
  {
    v12 = 0;
  }
  else
  {
    v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~*(unsigned __int8 *)(v6 + 80)) + 3) & 0xFFFFFFFC) == 0xFFFFFFFC)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v13 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_22A9B1CF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a1)
    return __swift_storeEnumTagSinglePayload((v5 + v4 + 32) & a4, a1, a2, a3);
  return result;
}

void sub_22A9B1D38(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x22A9B1D40);
  JUMPOUT(0x22A9B1D18);
}

uint64_t sub_22A9B1D58(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22A9B1DA4 + 4 * byte_22ABE9954[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22A9B1DD8 + 4 * byte_22ABE994F[v4]))();
}

uint64_t sub_22A9B1DD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9B1DE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9B1DE8);
  return result;
}

uint64_t sub_22A9B1DF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9B1DFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22A9B1E00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9B1E08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22A9B1E14()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9B1E24()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9B1E34()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t EstimatorToSupervisedAdaptor.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_31_2(a1, a2);
}

uint64_t EstimatorToSupervisedAdaptor.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t EstimatorToSupervisedAdaptor.fitted<A>(to:eventHandler:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_112();
  v9 = OUTLINED_FUNCTION_18_3(v2, v3, v4, v5, v6, v7, v8);
  v0[10] = v9;
  v0[11] = *(_QWORD *)(v9 - 8);
  v0[12] = OUTLINED_FUNCTION_0_0();
  v0[13] = *(_QWORD *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 16);
  v0[14] = v10;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_14_4();
  v0[15] = OUTLINED_FUNCTION_41_2();
  v11 = OUTLINED_FUNCTION_63_2();
  v0[16] = v11;
  v0[17] = *(_QWORD *)(v11 - 8);
  v0[18] = OUTLINED_FUNCTION_0_0();
  v0[19] = *(_QWORD *)(v10 - 8);
  v0[20] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22A9B1F40()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_9_7(v0[20], v0[9], v0[19]);
  OUTLINED_FUNCTION_23_4();
  v1 = (_QWORD *)OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_68_1(v1);
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_80_0(v2);
  OUTLINED_FUNCTION_106();
}

uint64_t sub_22A9B1FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_48_2(v13, *(uint64_t (**)(uint64_t, uint64_t))(a12 + 8));
  v14 = OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_99(v14);
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], a13);
  OUTLINED_FUNCTION_58_2((uint64_t)sub_22A9B2038);
  OUTLINED_FUNCTION_92();
  return v15();
}

uint64_t sub_22A9B2038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v23)(void);

  OUTLINED_FUNCTION_19_5();
  a17 = v20;
  a18 = v21;
  a16 = v19;
  a16 = (_QWORD *)*v19;
  OUTLINED_FUNCTION_32_3(&a16);
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_25_3();
  if (v18)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_2_8();
  }
  else
  {
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    v23 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_1_6(v23);
  }
}

uint64_t sub_22A9B20A8()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_103();
  return OUTLINED_FUNCTION_3_1(v0);
}

uint64_t sub_22A9B20D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A9B20FC()
{
  return swift_getAtKeyPath();
}

uint64_t EstimatorToSupervisedAdaptor.fitted<A, B>(to:validateOn:eventHandler:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_112();
  v10 = OUTLINED_FUNCTION_12_8(v2, v3, v4, v5, v6, v7, v8, v9);
  v0[12] = v10;
  v0[13] = *(_QWORD *)(v10 - 8);
  v0[14] = OUTLINED_FUNCTION_0_0();
  v0[15] = *(_QWORD *)(v1 + 32);
  v11 = *(_QWORD *)(v1 + 16);
  v0[16] = v11;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_14_4();
  v0[17] = OUTLINED_FUNCTION_41_2();
  v12 = OUTLINED_FUNCTION_64_1();
  v0[18] = v12;
  v0[19] = *(_QWORD *)(v12 - 8);
  v0[20] = OUTLINED_FUNCTION_0_0();
  v0[21] = *(_QWORD *)(v11 - 8);
  v0[22] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_24_4();
}

#error "22A9B2248: call analysis failed (funcsize=36)"

void sub_22A9B225C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  OUTLINED_FUNCTION_65_1();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_11_8(a14);
  v14 = OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_98(v14);
  OUTLINED_FUNCTION_108();
}

uint64_t sub_22A9B2294()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_57_2((uint64_t)sub_22A9B22AC);
  return OUTLINED_FUNCTION_42_2(v0);
}

uint64_t sub_22A9B22AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v23)(void);

  OUTLINED_FUNCTION_19_5();
  a17 = v20;
  a18 = v21;
  a16 = v19;
  a16 = (_QWORD *)*v19;
  OUTLINED_FUNCTION_33_3(&a16);
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_25_3();
  if (v18)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_2_8();
  }
  else
  {
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    v23 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_1_6(v23);
  }
}

uint64_t sub_22A9B2324()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_102();
  return OUTLINED_FUNCTION_3_1(v0);
}

uint64_t sub_22A9B235C()
{
  return swift_getAtKeyPath();
}

uint64_t EstimatorToSupervisedAdaptor.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9B3CB8(a1, a2, a3);
}

uint64_t EstimatorToSupervisedAdaptor.decode(from:)(uint64_t a1, uint64_t a2)
{
  return sub_22A9B3CE4(a1, a2);
}

uint64_t sub_22A9B238C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return EstimatorToSupervisedAdaptor.fitted<A>(to:eventHandler:)();
}

uint64_t sub_22A9B2424()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B24D4;
  return EstimatorToSupervisedAdaptor.fitted<A, B>(to:validateOn:eventHandler:)();
}

uint64_t sub_22A9B24D4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_22A9B2514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EstimatorToSupervisedAdaptor.encode(_:to:)(a1, a2, a3);
}

uint64_t sub_22A9B2528(uint64_t a1, uint64_t a2)
{
  return EstimatorToSupervisedAdaptor.decode(from:)(a1, a2);
}

uint64_t UpdatableEstimatorToSupervisedAdaptor.makeTransformer()(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 16));
}

uint64_t UpdatableEstimatorToSupervisedAdaptor.fitted<A>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_112();
  v10 = OUTLINED_FUNCTION_18_3(v3, v4, v5, v6, v7, v8, v9);
  v1[10] = v10;
  v1[11] = *(_QWORD *)(v10 - 8);
  v11 = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_107(v11);
  v1[14] = v0;
  v12 = *(_QWORD *)(v2 + 16);
  v1[15] = v12;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_14_4();
  v1[16] = OUTLINED_FUNCTION_41_2();
  v13 = OUTLINED_FUNCTION_63_2();
  v1[17] = v13;
  v1[18] = *(_QWORD *)(v13 - 8);
  v1[19] = OUTLINED_FUNCTION_0_0();
  v1[20] = *(_QWORD *)(v12 - 8);
  v1[21] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22A9B2618()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_94();
  v1 = v0[15];
  v2 = v0[13];
  v4 = v0[7];
  v3 = v0[8];
  v5 = v0[6];
  OUTLINED_FUNCTION_9_7(v0[21], v0[9], v0[20]);
  OUTLINED_FUNCTION_20_3();
  v6 = (_QWORD *)OUTLINED_FUNCTION_100();
  *v6 = v1;
  v6[1] = *(_QWORD *)(v5 + 24);
  v6[2] = v4;
  v6[3] = v2;
  v6[4] = *(_QWORD *)(v5 + 40);
  v6[5] = v3;
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v7 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_80_0(v7);
  OUTLINED_FUNCTION_106();
}

void sub_22A9B26C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_48_2(a10, *(uint64_t (**)(uint64_t, uint64_t))(a13 + 8));
  *(_QWORD *)(v13 + 176) = OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_108();
}

uint64_t sub_22A9B2718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(void))
{
  _QWORD *v14;
  uint64_t v15;

  *v14 = v15;
  v14[1] = sub_22A9B2750;
  return OUTLINED_FUNCTION_42_2(a14);
}

uint64_t sub_22A9B2750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_19_5();
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_25_3();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_2_8();
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_1_6(v3);
  }
}

uint64_t sub_22A9B27D8()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t UpdatableEstimatorToSupervisedAdaptor.fitted<A, B>(to:validateOn:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_112();
  v11 = OUTLINED_FUNCTION_12_8(v3, v4, v5, v6, v7, v8, v9, v10);
  v1[12] = v11;
  v1[13] = *(_QWORD *)(v11 - 8);
  v12 = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_101(v12);
  v1[16] = v0;
  v13 = *(_QWORD *)(v2 + 16);
  v1[17] = v13;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_14_4();
  v1[18] = OUTLINED_FUNCTION_41_2();
  v14 = OUTLINED_FUNCTION_64_1();
  v1[19] = v14;
  v1[20] = *(_QWORD *)(v14 - 8);
  v1[21] = OUTLINED_FUNCTION_0_0();
  v1[22] = *(_QWORD *)(v13 - 8);
  v1[23] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_24_4();
}

void sub_22A9B28D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = v0[17];
  v2 = v0[15];
  v4 = v0[9];
  v3 = v0[10];
  v6 = v0[7];
  v5 = v0[8];
  v7 = v0[6];
  OUTLINED_FUNCTION_9_7(v0[23], v0[11], v0[22]);
  OUTLINED_FUNCTION_20_3();
  v8 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  *v8 = v1;
  v8[1] = *(_QWORD *)(v7 + 24);
  v8[2] = v6;
  v8[3] = v5;
  v8[4] = v2;
  v9 = *(_QWORD *)(v7 + 40);
  v8[5] = v9;
  v8[6] = v4;
  v8[7] = v3;
  v10 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v11 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v11[2] = v1;
  v11[3] = v6;
  v11[4] = v5;
  v11[5] = v2;
  v11[6] = v9;
  v11[7] = v4;
  v11[8] = v3;
  v11[9] = v10;
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_22A9B29B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD);

  OUTLINED_FUNCTION_65_1();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_11_8(v4);
  v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD))(**(int **)(v5 + 24)
                                                                                               + *(_QWORD *)(v5 + 24));
  v1 = (_QWORD *)swift_task_alloc();
  v0[24] = v1;
  v2 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40]);
  *v1 = v0;
  v1[1] = sub_22A9B2A54;
  return v6(v0[2], v0[21], v0[4], v0[5], v0[19], v2, v0[17], v0[16]);
}

uint64_t sub_22A9B2A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_19_5();
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_25_3();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_2_8();
  }
  else
  {
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_1_6(v3);
  }
}

uint64_t sub_22A9B2AD8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9B2B14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t UpdatableEstimatorToSupervisedAdaptor.update<A>(_:with:eventHandler:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_112();
  v9 = OUTLINED_FUNCTION_18_3(v2, v3, v4, v5, v6, v7, v8);
  v0[10] = v9;
  v0[11] = *(_QWORD *)(v9 - 8);
  v10 = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_107(v10);
  v11 = *(_QWORD *)(v1 + 16);
  v0[14] = v11;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_14_4();
  v0[15] = OUTLINED_FUNCTION_41_2();
  v12 = OUTLINED_FUNCTION_63_2();
  v0[16] = v12;
  v0[17] = *(_QWORD *)(v12 - 8);
  v0[18] = OUTLINED_FUNCTION_0_0();
  v0[19] = *(_QWORD *)(v11 - 8);
  v0[20] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22A9B2BFC()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_9_7(v0[20], v0[9], v0[19]);
  OUTLINED_FUNCTION_23_4();
  v1 = (_QWORD *)OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_68_1(v1);
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_80_0(v2);
  OUTLINED_FUNCTION_106();
}

uint64_t sub_22A9B2C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_48_2(v13, *(uint64_t (**)(uint64_t, uint64_t))(a12 + 8));
  v14 = OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_99(v14);
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], a13);
  OUTLINED_FUNCTION_58_2((uint64_t)sub_22A9B2038);
  OUTLINED_FUNCTION_92();
  return v15();
}

uint64_t UpdatableEstimatorToSupervisedAdaptor.update<A, B>(_:with:validateOn:eventHandler:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_112();
  v10 = OUTLINED_FUNCTION_12_8(v2, v3, v4, v5, v6, v7, v8, v9);
  v0[12] = v10;
  v0[13] = *(_QWORD *)(v10 - 8);
  v11 = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_101(v11);
  v12 = *(_QWORD *)(v1 + 16);
  v0[16] = v12;
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_14_4();
  v0[17] = OUTLINED_FUNCTION_41_2();
  v13 = OUTLINED_FUNCTION_64_1();
  v0[18] = v13;
  v0[19] = *(_QWORD *)(v13 - 8);
  v0[20] = OUTLINED_FUNCTION_0_0();
  v0[21] = *(_QWORD *)(v12 - 8);
  v0[22] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_24_4();
}

#error "22A9B2E30: call analysis failed (funcsize=36)"

void sub_22A9B2E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  OUTLINED_FUNCTION_65_1();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_11_8(a14);
  v14 = OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_98(v14);
  OUTLINED_FUNCTION_108();
}

uint64_t sub_22A9B2E7C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v0 = OUTLINED_FUNCTION_57_2((uint64_t)sub_22A9B22AC);
  return v1(v0);
}

uint64_t UpdatableEstimatorToSupervisedAdaptor.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9B3C58(a1, a2, a3);
}

uint64_t UpdatableEstimatorToSupervisedAdaptor.decode(from:)(uint64_t a1, uint64_t a2)
{
  return sub_22A9B3C88(a1, a2);
}

uint64_t UpdatableEstimatorToSupervisedAdaptor.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9B3CB8(a1, a2, a3);
}

uint64_t UpdatableEstimatorToSupervisedAdaptor.decodeWithOptimizer(from:)(uint64_t a1, uint64_t a2)
{
  return sub_22A9B3CE4(a1, a2);
}

uint64_t sub_22A9B2F00()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return UpdatableEstimatorToSupervisedAdaptor.update<A>(_:with:eventHandler:)();
}

uint64_t sub_22A9B2F94()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return UpdatableEstimatorToSupervisedAdaptor.fitted<A>(to:eventHandler:)();
}

uint64_t sub_22A9B302C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return UpdatableEstimatorToSupervisedAdaptor.fitted<A, B>(to:validateOn:eventHandler:)();
}

uint64_t sub_22A9B30DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UpdatableEstimatorToSupervisedAdaptor.encode(_:to:)(a1, a2, a3);
}

uint64_t sub_22A9B30F0(uint64_t a1, uint64_t a2)
{
  return UpdatableEstimatorToSupervisedAdaptor.decode(from:)(a1, a2);
}

uint64_t TemporalEstimatorToSupervisedAdaptor.fitted<A, B>(to:eventHandler:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_97();
  v10 = OUTLINED_FUNCTION_7_8(v2, v3, v4, v5, v6, v7, v8, v9);
  v0[12] = v10;
  v0[13] = *(_QWORD *)(v10 - 8);
  v11 = OUTLINED_FUNCTION_0_0();
  v12 = OUTLINED_FUNCTION_38_3(v11);
  v0[15] = v12;
  v0[16] = *(_QWORD *)(v12 - 8);
  v0[17] = OUTLINED_FUNCTION_0_0();
  v13 = *(_QWORD *)(v1 + 16);
  v0[18] = v13;
  v0[19] = *(_QWORD *)(v13 - 8);
  v0[20] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_29_2();
}

void sub_22A9B3178()
{
  _QWORD *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_20_3();
  v0 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_22_2(v0);
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_59_2(v1);
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9B31D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  OUTLINED_FUNCTION_45_3();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_11_8(a13);
  v13 = OUTLINED_FUNCTION_55_3();
  OUTLINED_FUNCTION_99(v13);
  OUTLINED_FUNCTION_70_0();
}

uint64_t sub_22A9B320C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_51_2((uint64_t)sub_22A9B3224);
  return OUTLINED_FUNCTION_3_7(v0);
}

uint64_t sub_22A9B3224()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_28_3();
  OUTLINED_FUNCTION_62();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_2_8();
  }
  else
  {
    OUTLINED_FUNCTION_61_2();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_1_6(v2);
  }
}

uint64_t sub_22A9B3278()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_103();
  return OUTLINED_FUNCTION_3_1(v0);
}

uint64_t sub_22A9B32B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A9B32D4()
{
  return swift_getAtKeyPath();
}

uint64_t TemporalEstimatorToSupervisedAdaptor.fitted<A, B, C>(to:validateOn:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_97();
  v10 = OUTLINED_FUNCTION_8_7(v2, v3, v4, v5, v6, v7, v8, v9);
  v1[14] = v10;
  v1[15] = *(_QWORD *)(v10 - 8);
  v11 = OUTLINED_FUNCTION_0_0();
  v12 = OUTLINED_FUNCTION_40_2(v11);
  v1[17] = v12;
  v1[18] = *(_QWORD *)(v12 - 8);
  v1[19] = OUTLINED_FUNCTION_0_0();
  v13 = *(_QWORD *)(v0 + 16);
  v1[20] = v13;
  v1[21] = *(_QWORD *)(v13 - 8);
  v1[22] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_30_3();
}

#error "22A9B3370: call analysis failed (funcsize=22)"

void sub_22A9B33AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  OUTLINED_FUNCTION_52_2();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_11_8(a17);
  v17 = OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_98(v17);
  OUTLINED_FUNCTION_70_0();
}

uint64_t sub_22A9B33E0()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_50_2((uint64_t)sub_22A9B33F8);
  return OUTLINED_FUNCTION_44_3(v0);
}

uint64_t sub_22A9B33F8()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_28_3();
  OUTLINED_FUNCTION_62();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_2_8();
  }
  else
  {
    OUTLINED_FUNCTION_62_1();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_1_6(v2);
  }
}

uint64_t sub_22A9B344C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_102();
  return OUTLINED_FUNCTION_3_1(v0);
}

uint64_t sub_22A9B347C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22A9B34A0()
{
  return swift_getAtKeyPath();
}

uint64_t TemporalEstimatorToSupervisedAdaptor.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9B3CB8(a1, a2, a3);
}

uint64_t TemporalEstimatorToSupervisedAdaptor.decode(from:)(uint64_t a1, uint64_t a2)
{
  return sub_22A9B3CE4(a1, a2);
}

uint64_t sub_22A9B34D0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return TemporalEstimatorToSupervisedAdaptor.fitted<A, B>(to:eventHandler:)();
}

uint64_t sub_22A9B3588()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return TemporalEstimatorToSupervisedAdaptor.fitted<A, B, C>(to:validateOn:eventHandler:)();
}

uint64_t UpdatableTemporalEstimatorToSupervisedAdaptor.fitted<A, B>(to:eventHandler:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_97();
  v10 = OUTLINED_FUNCTION_7_8(v2, v3, v4, v5, v6, v7, v8, v9);
  v0[12] = v10;
  v0[13] = *(_QWORD *)(v10 - 8);
  v11 = OUTLINED_FUNCTION_0_0();
  v12 = OUTLINED_FUNCTION_38_3(v11);
  v0[15] = v12;
  v0[16] = *(_QWORD *)(v12 - 8);
  v0[17] = OUTLINED_FUNCTION_0_0();
  v13 = *(_QWORD *)(v1 + 16);
  v0[18] = v13;
  v0[19] = *(_QWORD *)(v13 - 8);
  v0[20] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_29_2();
}

void sub_22A9B36B0()
{
  _QWORD *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_20_3();
  v0 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_22_2(v0);
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_59_2(v1);
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9B3710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  OUTLINED_FUNCTION_45_3();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_11_8(a13);
  v13 = OUTLINED_FUNCTION_55_3();
  OUTLINED_FUNCTION_99(v13);
  OUTLINED_FUNCTION_70_0();
}

uint64_t sub_22A9B3748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(void))
{
  _QWORD *v13;
  uint64_t v14;

  *v13 = v14;
  v13[1] = sub_22A9B3778;
  OUTLINED_FUNCTION_109();
  return OUTLINED_FUNCTION_3_7(a13);
}

uint64_t sub_22A9B3778()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_15_4();
  OUTLINED_FUNCTION_28_3();
  OUTLINED_FUNCTION_62();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_2_8();
  }
  else
  {
    OUTLINED_FUNCTION_61_2();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_1_6(v2);
  }
}

uint64_t UpdatableTemporalEstimatorToSupervisedAdaptor.fitted<A, B, C>(to:validateOn:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_97();
  v10 = OUTLINED_FUNCTION_8_7(v2, v3, v4, v5, v6, v7, v8, v9);
  v1[14] = v10;
  v1[15] = *(_QWORD *)(v10 - 8);
  v11 = OUTLINED_FUNCTION_0_0();
  v12 = OUTLINED_FUNCTION_40_2(v11);
  v1[17] = v12;
  v1[18] = *(_QWORD *)(v12 - 8);
  v1[19] = OUTLINED_FUNCTION_0_0();
  v13 = *(_QWORD *)(v0 + 16);
  v1[20] = v13;
  v1[21] = *(_QWORD *)(v13 - 8);
  v1[22] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_30_3();
}

void sub_22A9B383C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_96();
  v1 = v0[20];
  v2 = v0[11];
  v3 = v0[9];
  v4 = v0[10];
  v14 = v0[12];
  v5 = v0[7];
  v6 = v0[8];
  v13 = v6;
  v7 = (_QWORD *)v0[6];
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v0[21] + 16))(v0[22], v0[13], v1);
  OUTLINED_FUNCTION_67_1();
  v8 = (_QWORD *)OUTLINED_FUNCTION_113();
  *v8 = v1;
  v8[1] = v7[3];
  v8[2] = v5;
  v8[3] = v6;
  v8[4] = v3;
  v9 = v7[4];
  v8[5] = v9;
  v10 = v7[5];
  v8[6] = v10;
  v8[7] = v4;
  v8[8] = v2;
  v8[9] = v14;
  v11 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v12 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v12[2] = v1;
  v12[3] = v5;
  v12[4] = v13;
  v12[5] = v9;
  v12[6] = v10;
  v12[7] = v4;
  v12[8] = v2;
  v12[9] = v14;
  v12[10] = v11;
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9B392C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  OUTLINED_FUNCTION_52_2();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_11_8(a17);
  v17 = OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_98(v17);
  OUTLINED_FUNCTION_70_0();
}

uint64_t sub_22A9B3964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t (*a17)(void))
{
  _QWORD *v17;
  uint64_t v18;

  *v17 = v18;
  v17[1] = sub_22A9B3994;
  OUTLINED_FUNCTION_109();
  return OUTLINED_FUNCTION_44_3(a17);
}

uint64_t sub_22A9B3994()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_28_3();
  OUTLINED_FUNCTION_62();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_2_8();
  }
  else
  {
    OUTLINED_FUNCTION_62_1();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_1_6(v2);
  }
}

uint64_t UpdatableTemporalEstimatorToSupervisedAdaptor.update<A, B>(_:with:eventHandler:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_97();
  v10 = OUTLINED_FUNCTION_7_8(v2, v3, v4, v5, v6, v7, v8, v9);
  v0[12] = v10;
  v0[13] = *(_QWORD *)(v10 - 8);
  v11 = OUTLINED_FUNCTION_0_0();
  v12 = OUTLINED_FUNCTION_38_3(v11);
  v0[15] = v12;
  v0[16] = *(_QWORD *)(v12 - 8);
  v0[17] = OUTLINED_FUNCTION_0_0();
  v13 = *(_QWORD *)(v1 + 16);
  v0[18] = v13;
  v0[19] = *(_QWORD *)(v13 - 8);
  v0[20] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_29_2();
}

void sub_22A9B3A58()
{
  _QWORD *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_20_3();
  v0 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_22_2(v0);
  OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_59_2(v1);
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9B3AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  OUTLINED_FUNCTION_45_3();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_11_8(a13);
  v13 = OUTLINED_FUNCTION_55_3();
  OUTLINED_FUNCTION_99(v13);
  OUTLINED_FUNCTION_70_0();
}

uint64_t sub_22A9B3AEC()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_51_2((uint64_t)sub_22A9B3224);
  OUTLINED_FUNCTION_92();
  return v0();
}

uint64_t UpdatableTemporalEstimatorToSupervisedAdaptor.update<A, B, C>(_:with:validateOn:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_97();
  v10 = OUTLINED_FUNCTION_8_7(v2, v3, v4, v5, v6, v7, v8, v9);
  v1[14] = v10;
  v1[15] = *(_QWORD *)(v10 - 8);
  v11 = OUTLINED_FUNCTION_0_0();
  v12 = OUTLINED_FUNCTION_40_2(v11);
  v1[17] = v12;
  v1[18] = *(_QWORD *)(v12 - 8);
  v1[19] = OUTLINED_FUNCTION_0_0();
  v13 = *(_QWORD *)(v0 + 16);
  v1[20] = v13;
  v1[21] = *(_QWORD *)(v13 - 8);
  v1[22] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_30_3();
}

#error "22A9B3BA4: call analysis failed (funcsize=22)"

void sub_22A9B3BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  OUTLINED_FUNCTION_52_2();
  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_11_8(a17);
  v17 = OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_98(v17);
  OUTLINED_FUNCTION_70_0();
}

uint64_t sub_22A9B3C14()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v0 = OUTLINED_FUNCTION_50_2((uint64_t)sub_22A9B33F8);
  return v1(v0);
}

uint64_t UpdatableTemporalEstimatorToSupervisedAdaptor.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9B3C58(a1, a2, a3);
}

uint64_t sub_22A9B3C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_49_2(a1, a2, a3, *(_QWORD *)(*(_QWORD *)(a3 + 32) + 8));
}

uint64_t UpdatableTemporalEstimatorToSupervisedAdaptor.decode(from:)(uint64_t a1, uint64_t a2)
{
  return sub_22A9B3C88(a1, a2);
}

uint64_t sub_22A9B3C88(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_47_1(a1, a2, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
}

uint64_t UpdatableTemporalEstimatorToSupervisedAdaptor.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9B3CB8(a1, a2, a3);
}

uint64_t sub_22A9B3CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OUTLINED_FUNCTION_49_2(a1, a2, a3, *(_QWORD *)(a3 + 32));
}

uint64_t UpdatableTemporalEstimatorToSupervisedAdaptor.decodeWithOptimizer(from:)(uint64_t a1, uint64_t a2)
{
  return sub_22A9B3CE4(a1, a2);
}

uint64_t sub_22A9B3CE4(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_47_1(a1, a2, *(_QWORD *)(a2 + 32));
}

uint64_t sub_22A9B3CFC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return UpdatableTemporalEstimatorToSupervisedAdaptor.update<A, B>(_:with:eventHandler:)();
}

uint64_t sub_22A9B3DB0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return UpdatableTemporalEstimatorToSupervisedAdaptor.fitted<A, B>(to:eventHandler:)();
}

uint64_t sub_22A9B3E68()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return UpdatableTemporalEstimatorToSupervisedAdaptor.fitted<A, B, C>(to:validateOn:eventHandler:)();
}

void _s18CreateMLComponents9EstimatorPAAE19adaptedAsSupervised14annotationTypeAA0c2ToF7AdaptorVyxqd__Gqd__m_tSQRd__lF_0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8 - v7, v3, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a3, v9, a2);
  OUTLINED_FUNCTION_38();
}

uint64_t (*TabularEstimatorToSupervisedAdaptor.annotationColumnID.modify())()
{
  return nullsub_1;
}

uint64_t TabularEstimatorToSupervisedAdaptor.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_31_2(a1, a2);
}

uint64_t TabularEstimatorToSupervisedAdaptor.init(_:annotationColumnID:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_86_0();
  v5 = type metadata accessor for TabularEstimatorToSupervisedAdaptor(0, v2, v3, v4);
  OUTLINED_FUNCTION_69_0(*(int *)(v5 + 44));
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_105();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v1, v0);
}

uint64_t type metadata accessor for TabularEstimatorToSupervisedAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TabularEstimatorToSupervisedAdaptor);
}

uint64_t TabularEstimatorToSupervisedAdaptor.fitted(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v7[6] = a6;
  v7[7] = v6;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a2;
  v8 = *(_QWORD *)(a6 + 16);
  v7[8] = v8;
  v7[9] = *(_QWORD *)(v8 - 8);
  v7[10] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22A9B4074()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t);

  v1 = v0[6];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[9] + 16))(v0[10], v0[7] + *(int *)(v1 + 44), v0[8]);
  v2 = *(_QWORD *)(v1 + 32);
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))(**(int **)(v2 + 24)
                                                                               + *(_QWORD *)(v2 + 24));
  v3 = (_QWORD *)swift_task_alloc();
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_22A9B4104;
  return v5(v0[2], v0[3], v0[4], v0[5], v0[8], v2);
}

uint64_t sub_22A9B4104()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_97();
  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(*v1 + 64);
  v4 = *(_QWORD *)(*v1 + 72);
  v5 = *v1;
  *(_QWORD *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
}

uint64_t sub_22A9B419C()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void TabularEstimatorToSupervisedAdaptor.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_49_2(a1, a2, a3, *(_QWORD *)(a3 + 32));
  OUTLINED_FUNCTION_75_0();
}

void TabularEstimatorToSupervisedAdaptor.decode(from:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_47_1(a1, a2, *(_QWORD *)(a2 + 32));
  OUTLINED_FUNCTION_75_0();
}

uint64_t (*sub_22A9B4218(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TabularEstimatorToSupervisedAdaptor.annotationColumnID.modify();
  return sub_22A9B425C;
}

uint64_t sub_22A9B4260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v12;
  uint64_t v13;

  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_22A9B55C4;
  return TabularEstimatorToSupervisedAdaptor.fitted(to:validateOn:eventHandler:)(a1, a2, v13, a4, a5, a6);
}

void sub_22A9B42E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  TabularEstimatorToSupervisedAdaptor.encode(_:to:)(a1, a2, a3);
}

void sub_22A9B42F4(uint64_t a1, uint64_t a2)
{
  TabularEstimatorToSupervisedAdaptor.decode(from:)(a1, a2);
}

void TabularEstimator.adaptedAsSupervised<A>(annotationColumnID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = OUTLINED_FUNCTION_110();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - v7;
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11 - v10, v2, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  TabularEstimatorToSupervisedAdaptor.init(_:annotationColumnID:)();
  OUTLINED_FUNCTION_3();
}

uint64_t _s18CreateMLComponents35TabularEstimatorToSupervisedAdaptorV18annotationColumnID0C4Data0iJ0Vyq_Gvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_22ABDD3C4();
  OUTLINED_FUNCTION_105();
  return OUTLINED_FUNCTION_81(a1, v1, v4, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t _s18CreateMLComponents35TabularEstimatorToSupervisedAdaptorV18annotationColumnID0C4Data0iJ0Vyq_Gvs_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_22ABDD3C4();
  OUTLINED_FUNCTION_105();
  return OUTLINED_FUNCTION_81(v1, a1, v4, *(uint64_t (**)(void))(v3 + 40));
}

uint64_t (*UpdatableTabularEstimatorToSupervisedAdaptor.annotationColumnID.modify())()
{
  return nullsub_1;
}

uint64_t UpdatableTabularEstimatorToSupervisedAdaptor.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_31_2(a1, a2);
}

void UpdatableTabularEstimatorToSupervisedAdaptor.init(_:annotationColumnID:)()
{
  OUTLINED_FUNCTION_86_0();
  type metadata accessor for UpdatableTabularEstimatorToSupervisedAdaptor();
}

uint64_t sub_22A9B4498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_69_0(*(int *)(a1 + 52));
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_105();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v1);
}

void type metadata accessor for UpdatableTabularEstimatorToSupervisedAdaptor()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t UpdatableTabularEstimatorToSupervisedAdaptor.makeTransformer()(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 16));
}

uint64_t UpdatableTabularEstimatorToSupervisedAdaptor.fitted(to:validateOn:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_93();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  OUTLINED_FUNCTION_82_0();
  return v2();
}

uint64_t UpdatableTabularEstimatorToSupervisedAdaptor.update(_:with:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_93();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  OUTLINED_FUNCTION_82_0();
  return v2();
}

void UpdatableTabularEstimatorToSupervisedAdaptor.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_49_2(a1, a2, a3, *(_QWORD *)(*(_QWORD *)(a3 + 32) + 8));
  OUTLINED_FUNCTION_75_0();
}

void UpdatableTabularEstimatorToSupervisedAdaptor.decode(from:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_47_1(a1, a2, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
  OUTLINED_FUNCTION_75_0();
}

void UpdatableTabularEstimatorToSupervisedAdaptor.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_49_2(a1, a2, a3, *(_QWORD *)(a3 + 32));
  OUTLINED_FUNCTION_75_0();
}

void UpdatableTabularEstimatorToSupervisedAdaptor.decodeWithOptimizer(from:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_47_1(a1, a2, *(_QWORD *)(a2 + 32));
  OUTLINED_FUNCTION_75_0();
}

uint64_t sub_22A9B46B0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return UpdatableTabularEstimatorToSupervisedAdaptor.update(_:with:eventHandler:)();
}

void sub_22A9B472C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  UpdatableTabularEstimatorToSupervisedAdaptor.encodeWithOptimizer(_:to:)(a1, a2, a3);
}

void sub_22A9B4740(uint64_t a1, uint64_t a2)
{
  UpdatableTabularEstimatorToSupervisedAdaptor.decodeWithOptimizer(from:)(a1, a2);
}

uint64_t (*sub_22A9B4754(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = UpdatableTabularEstimatorToSupervisedAdaptor.annotationColumnID.modify();
  return sub_22A9B425C;
}

void sub_22A9B4798(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_22A9B47C4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B55C4;
  return UpdatableTabularEstimatorToSupervisedAdaptor.fitted(to:validateOn:eventHandler:)();
}

void sub_22A9B4844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  UpdatableTabularEstimatorToSupervisedAdaptor.encode(_:to:)(a1, a2, a3);
}

void sub_22A9B4858(uint64_t a1, uint64_t a2)
{
  UpdatableTabularEstimatorToSupervisedAdaptor.decode(from:)(a1, a2);
}

void UpdatableTabularEstimator.adaptedAsSupervised<A>(annotationColumnID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v16[1] = a5;
  v8 = OUTLINED_FUNCTION_110();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v16 - v11;
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14 - v13, v5, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  UpdatableTabularEstimatorToSupervisedAdaptor.init(_:annotationColumnID:)();
}

void sub_22A9B4940()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22A9B494C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 40);
}

uint64_t sub_22A9B4954()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22A9B4974(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableEstimatorToSupervisedAdaptor<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A9B49A0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22A9B49C4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22A9B49E4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableTemporalEstimatorToSupervisedAdaptor<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A9B4A10()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22A9B4A34()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22A9B4A54(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableTabularEstimatorToSupervisedAdaptor<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A9B4A80()
{
  return swift_getAssociatedConformanceWitness();
}

void type metadata accessor for EstimatorToSupervisedAdaptor()
{
  JUMPOUT(0x22E2E4CF0);
}

void type metadata accessor for UpdatableEstimatorToSupervisedAdaptor()
{
  JUMPOUT(0x22E2E4CF0);
}

void type metadata accessor for TemporalEstimatorToSupervisedAdaptor()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22A9B4AD8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22A9B4B44(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9B4BF4 + 4 * byte_22ABE9B70[(v8 - 1)]))();
}

void sub_22A9B4C40(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        OUTLINED_FUNCTION_104();
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v15;
          *(_BYTE *)(a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      OUTLINED_FUNCTION_104();
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void type metadata accessor for UpdatableTemporalEstimatorToSupervisedAdaptor()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22A9B4DD8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22ABDD3C4();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_22A9B4E64(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD3C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(&a1[*(int *)(a3 + 44)], &a2[*(int *)(a3 + 44)]);
  }
  return a1;
}

uint64_t sub_22A9B4F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1 + *(int *)(a2 + 44));
}

uint64_t sub_22A9B4F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_22A9B4FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_22A9B5034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_22A9B50A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))(a1 + *(int *)(a3 + 44), a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_22A9B5114()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9B5120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_74_0();
  if (*(_DWORD *)(*(_QWORD *)(v3 - 8) + 84) == (_DWORD)v0)
  {
    v4 = v3;
    v5 = v1;
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 16);
    v5 = v1 + *(int *)(v2 + 44);
  }
  return OUTLINED_FUNCTION_78_0(v5, v0, v4);
}

uint64_t sub_22A9B5168()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9B5174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_60_2();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == v3)
  {
    v5 = v4;
    v6 = v1;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 16);
    v6 = v1 + *(int *)(v2 + 44);
  }
  return OUTLINED_FUNCTION_77_0(v6, v0, v0, v5);
}

uint64_t sub_22A9B51C0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22ABDD3C4();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_22A9B524C(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD3C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(&a1[*(int *)(a3 + 52)], &a2[*(int *)(a3 + 52)]);
  }
  return a1;
}

uint64_t sub_22A9B52E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1 + *(int *)(a2 + 52));
}

uint64_t sub_22A9B533C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_22A9B53AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_22A9B541C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_22A9B548C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_22A9B54FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9B5508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_74_0();
  if (*(_DWORD *)(*(_QWORD *)(v3 - 8) + 84) == (_DWORD)v0)
  {
    v4 = v3;
    v5 = v1;
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 16);
    v5 = v1 + *(int *)(v2 + 52);
  }
  return OUTLINED_FUNCTION_78_0(v5, v0, v4);
}

uint64_t sub_22A9B5550()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9B555C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_60_2();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == v3)
  {
    v5 = v4;
    v6 = v1;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 16);
    v6 = v1 + *(int *)(v2 + 52);
  }
  return OUTLINED_FUNCTION_77_0(v6, v0, v0, v5);
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_6_10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v0[19];
  v2 = v0[20];
  v4 = v0[18];
  *(_QWORD *)(v1 + 24) = v0[15];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v2, v0[11], v4);
}

uint64_t OUTLINED_FUNCTION_7_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v9[10] = *(_QWORD *)(v10 + 16);
  v9[11] = v8;
  v9[8] = a7;
  v9[9] = a8;
  v9[6] = a5;
  v9[7] = a6;
  v9[4] = a3;
  v9[5] = a4;
  v9[2] = a1;
  v9[3] = a2;
  return sub_22ABDF7B8();
}

uint64_t OUTLINED_FUNCTION_8_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = v10[2];
  v12 = v10[3];
  v13 = v10[4];
  v9[12] = v10[5];
  v9[13] = v8;
  v9[10] = v12;
  v9[11] = v13;
  v9[8] = a8;
  v9[9] = v11;
  v9[6] = a6;
  v9[7] = a7;
  v9[4] = a4;
  v9[5] = a5;
  v9[2] = a1;
  v9[3] = a2;
  return sub_22ABDF7B8();
}

uint64_t OUTLINED_FUNCTION_9_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_11_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_12_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *(_QWORD *)(v10 + 16);
  v9[10] = *(_QWORD *)(v10 + 24);
  v9[11] = v8;
  v9[8] = a8;
  v9[9] = v11;
  v9[6] = a6;
  v9[7] = a7;
  v9[4] = a4;
  v9[5] = a5;
  v9[2] = a1;
  v9[3] = a2;
  return sub_22ABDF7B8();
}

uint64_t OUTLINED_FUNCTION_14_4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 176) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_16_7()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 192) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_18_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return sub_22ABDF7B8();
}

uint64_t OUTLINED_FUNCTION_20_3()
{
  return sub_22ABDEEB8();
}

uint64_t OUTLINED_FUNCTION_21_5()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v0[21];
  v2 = v0[22];
  v4 = v0[20];
  *(_QWORD *)(v1 + 24) = v0[17];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v2, v0[13], v4);
}

_QWORD *OUTLINED_FUNCTION_22_2(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *result = v4;
  result[1] = v1[3];
  result[2] = v6;
  result[3] = v3;
  result[4] = v1[4];
  result[5] = v1[5];
  result[6] = v5;
  result[7] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_23_4()
{
  return sub_22ABDEEB8();
}

uint64_t OUTLINED_FUNCTION_24_4()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_25_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_27_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_30_3()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_31_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2);
}

uint64_t OUTLINED_FUNCTION_32_3@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = *v2;
  *(_QWORD *)(v3 + 176) = v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_33_3@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = *v2;
  *(_QWORD *)(v3 + 192) = v1;
  return swift_task_dealloc();
}

_QWORD *OUTLINED_FUNCTION_34_3(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *result = v17;
  result[1] = v12[3];
  result[2] = v14;
  result[3] = v16;
  result[4] = v13;
  result[5] = v12[4];
  result[6] = v12[5];
  result[7] = v18;
  result[8] = v15;
  result[9] = a12;
  return result;
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_37_3()
{
  return swift_getKeyPath();
}

uint64_t OUTLINED_FUNCTION_38_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  return sub_22ABDFA10();
}

uint64_t OUTLINED_FUNCTION_40_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = a1;
  return sub_22ABDFA10();
}

uint64_t OUTLINED_FUNCTION_41_2()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_42_2@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_44_3@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_45_3()
{
  return sub_22ABDFBC0();
}

uint64_t OUTLINED_FUNCTION_47_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a3 + 40))(a1, *(_QWORD *)(a2 + 16));
}

uint64_t OUTLINED_FUNCTION_48_2@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_49_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a4 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t OUTLINED_FUNCTION_50_2@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *v1 = v2;
  v1[1] = a1;
  result = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v4 + 16) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_51_2@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *v1 = v2;
  v1[1] = a1;
  result = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v4 + 16) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_52_2()
{
  return sub_22ABDFBC0();
}

uint64_t OUTLINED_FUNCTION_53_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_54_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_55_3()
{
  return swift_task_alloc();
}

_QWORD *OUTLINED_FUNCTION_56_2(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *result = v5;
  result[1] = *(_QWORD *)(v1 + 24);
  result[2] = v7;
  result[3] = v2;
  result[4] = v4;
  result[5] = *(_QWORD *)(v1 + 40);
  result[6] = v6;
  result[7] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_57_2@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_58_2@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 16);
}

_QWORD *OUTLINED_FUNCTION_59_2(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result[2] = v5;
  result[3] = v7;
  result[4] = v4;
  result[5] = v2;
  result[6] = v6;
  result[7] = v3;
  result[8] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_60_2()
{
  return sub_22ABDD3C4();
}

uint64_t OUTLINED_FUNCTION_61_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_62_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  return sub_22ABDFA10();
}

uint64_t OUTLINED_FUNCTION_64_1()
{
  return sub_22ABDFA10();
}

uint64_t OUTLINED_FUNCTION_65_1()
{
  return sub_22ABDFBC0();
}

_QWORD *OUTLINED_FUNCTION_66_2(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result[2] = a11;
  result[3] = v16;
  result[4] = v15;
  result[5] = a10;
  result[6] = v13;
  result[7] = v17;
  result[8] = v14;
  result[9] = v12;
  result[10] = v11;
  return result;
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return sub_22ABDEEB8();
}

_QWORD *OUTLINED_FUNCTION_68_1(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *result = v3;
  result[1] = *(_QWORD *)(v1 + 24);
  result[2] = v5;
  result[3] = v2;
  result[4] = *(_QWORD *)(v1 + 40);
  result[5] = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_69_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + a1, v2, v1);
}

void OUTLINED_FUNCTION_70_0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_73()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_74_0()
{
  return sub_22ABDD3C4();
}

uint64_t OUTLINED_FUNCTION_76_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_77_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_78_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  return swift_task_alloc();
}

_QWORD *OUTLINED_FUNCTION_80_0(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result[2] = v4;
  result[3] = v6;
  result[4] = v2;
  result[5] = v3;
  result[6] = v5;
  result[7] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_83_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_84_0()
{
  return sub_22ABDFBC0();
}

_QWORD *OUTLINED_FUNCTION_85_0(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result[2] = v13;
  result[3] = v15;
  result[4] = a9;
  result[5] = v12;
  result[6] = v10;
  result[7] = v14;
  result[8] = v11;
  result[9] = v9;
  return result;
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_90()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_91()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_93()
{
  uint64_t v0;

  return *(unsigned int *)(*(_QWORD *)(v0 + 24) + 4);
}

uint64_t OUTLINED_FUNCTION_98(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 184) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_99(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_100()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_101(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 112) = result;
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(v2 + 32);
  return result;
}

uint64_t OUTLINED_FUNCTION_102()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_103()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void OUTLINED_FUNCTION_104()
{
  void *v0;
  size_t v1;

  bzero(v0, v1);
}

void OUTLINED_FUNCTION_106()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_107(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 96) = result;
  *(_QWORD *)(v1 + 104) = *(_QWORD *)(v2 + 32);
  return result;
}

void OUTLINED_FUNCTION_108()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_109()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_110()
{
  return sub_22ABDD3C4();
}

uint64_t OUTLINED_FUNCTION_111()
{
  return sub_22ABDD3C4();
}

uint64_t OUTLINED_FUNCTION_113()
{
  return swift_task_alloc();
}

void sub_22A9B5E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v2, v1);
  type metadata accessor for ComposedUpdatableEstimator();
}

uint64_t sub_22A9B5EE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void sub_22A9B5F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_70();
  v5 = type metadata accessor for TransformerToUpdatableEstimatorAdaptor(0, v3, v4, v3);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v6);
  TransformerToUpdatableEstimatorAdaptor.init(_:)(v2, v1, v0);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TransformerToUpdatableEstimatorAdaptor<A>, v5);
  sub_22A9B5E98();
}

void sub_22A9B5FB0()
{
  OUTLINED_FUNCTION_3();
}

void sub_22A9B5FBC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1[5];
  v13 = *(_QWORD *)(v3 + 8);
  v14 = a2;
  v12 = a1[3];
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v4);
  v5 = a1[4];
  v6 = a1[2];
  v7 = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v11 - v9;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v6, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v12, v3);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_85();
  ComposedTransformer.init(_:_:)((uint64_t)v10, v7, v14);
}

void sub_22A9B60F0()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22A9B60FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(void);

  OUTLINED_FUNCTION_23_5();
  v3 = v2;
  v1[9] = v4;
  v1[10] = v0;
  v1[7] = v2;
  v1[8] = v5;
  v1[5] = v6;
  v1[6] = v7;
  v1[3] = v8;
  v1[4] = v9;
  v1[11] = *(_QWORD *)(*(_QWORD *)(v2 + 40) + 8);
  v1[12] = *(_QWORD *)(v2 + 24);
  v10 = OUTLINED_FUNCTION_30_4();
  v1[13] = v10;
  v1[14] = *(_QWORD *)(v10 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = *(_QWORD *)(*(_QWORD *)(v3 + 32) + 8);
  v1[18] = *(_QWORD *)(v3 + 16);
  v11 = OUTLINED_FUNCTION_30_4();
  v1[19] = v11;
  v1[20] = *(_QWORD *)(v11 - 8);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  v12 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  v1[23] = v12;
  *v12 = v1;
  v12[1] = sub_22A9B624C;
  OUTLINED_FUNCTION_34_4();
  return v14();
}

uint64_t sub_22A9B624C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9B629C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t AssociatedConformanceWitness;

  v1 = v0[24];
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_29_3();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_10(v2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[25] = (uint64_t)v4;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[26] = AssociatedConformanceWitness;
    *v4 = v0;
    v4[1] = sub_22A9B636C;
    return OUTLINED_FUNCTION_11_9(v0[4], v0[5], v0[6], v0[19], v0[8], AssociatedConformanceWitness, v0[9]);
  }
}

uint64_t sub_22A9B636C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 216) = a1;
  *(_QWORD *)(v3 + 224) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9B63CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD, _QWORD *, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD);

  v1 = v0[28];
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_4_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_29_3();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return v2();
  }
  else
  {
    v0[2] = v0[27];
    v4 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    v0[29] = v4;
    swift_getAssociatedTypeWitness();
    v5 = OUTLINED_FUNCTION_33_4();
    v6 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v5);
    *v4 = v0;
    v4[1] = sub_22A9B64E0;
    return v7(v0[16], v0 + 2, v0[5], v0[6], v5, v6, v0[12], v0[11]);
  }
}

uint64_t sub_22A9B64E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

void sub_22A9B6540()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_23_5();
  v1 = v0[21];
  v2 = v0[19];
  v4 = v0[15];
  v3 = v0[16];
  v6 = v0[13];
  v5 = v0[14];
  v7 = v0[3];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[20] + 32))(v1, v0[22], v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v3, v6);
  swift_getAssociatedConformanceWitness();
  ComposedTransformer.init(_:_:)(v1, v2, v7);
}

uint64_t sub_22A9B65DC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9B6604()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_8();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  return OUTLINED_FUNCTION_2_9(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9B663C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_16_8();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  return OUTLINED_FUNCTION_2_9(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9B6678()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16_8();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  return OUTLINED_FUNCTION_2_9(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9B66C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v11)(void);

  v8[13] = a7;
  v8[14] = v7;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  v8[15] = *(_QWORD *)(a5 + 32);
  v8[16] = *(_QWORD *)(a5 + 16);
  v9 = (_QWORD *)OUTLINED_FUNCTION_25();
  v8[17] = v9;
  *v9 = v8;
  v9[1] = sub_22A9B6770;
  OUTLINED_FUNCTION_34_4();
  return v11();
}

uint64_t sub_22A9B6770()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_17_1();
  v2 = *v1;
  *v3 = v2;
  *(_QWORD *)(v4 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9B67C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  v1 = v0[18];
  sub_22ABDF1DC();
  if (v1)
  {
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_10(v2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[19] = (uint64_t)v4;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v0[20] = AssociatedTypeWitness;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[21] = AssociatedConformanceWitness;
    *v4 = v0;
    v4[1] = sub_22A9B689C;
    return OUTLINED_FUNCTION_11_9(v0[8], v0[9], v0[10], AssociatedTypeWitness, v0[12], AssociatedConformanceWitness, v0[13]);
  }
}

uint64_t sub_22A9B689C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 176) = a1;
  *(_QWORD *)(v3 + 184) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9B68FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  OUTLINED_FUNCTION_23_5();
  v1 = v0[23];
  sub_22ABDF1DC();
  if (!v1)
  {
    v4 = v0[21];
    v5 = v0[20];
    v0[6] = v0[22];
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[2] = v5;
    v0[3] = AssociatedTypeWitness;
    v0[4] = v4;
    v0[5] = AssociatedConformanceWitness;
    type metadata accessor for ComposedTransformer();
  }
  swift_bridgeObjectRelease();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_5_0(v2);
}

uint64_t sub_22A9B69C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = v2 + *(int *)(a1 + 52);
  v7 = (_QWORD *)OUTLINED_FUNCTION_25();
  v4[24] = v7;
  swift_getAssociatedTypeWitness();
  v8 = OUTLINED_FUNCTION_33_4();
  v9 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v8);
  *v7 = v4;
  v7[1] = sub_22A9B6A64;
  return v11(v6, v5, v4[9], v4[10], v8, v9, v3, v1);
}

uint64_t sub_22A9B6A64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_3_0();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_22A9B6ACC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9B6AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 32) + 8) + 32))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTransformer();
  }
  return result;
}

void sub_22A9B6C4C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = *(_QWORD *)(a2 + 24);
  v27 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8);
  v6 = OUTLINED_FUNCTION_32_0();
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_87();
  v24 = v7;
  v9 = MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_75(v9, v10, v11, v12, v13, v14, v15, v16, v20);
  v17 = OUTLINED_FUNCTION_32_0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_71(a1);
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v27 + 40))(a1, v26);
    (*(void (**)(uint64_t, void *, uint64_t))(v18 + 32))(v4, &protocol requirements base descriptor for Estimator, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v24, v25, v22);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_80();
    ComposedTransformer.init(_:_:)(v4, v17, a3);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9B6E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 32) + 32))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTransformer();
  }
  return result;
}

void sub_22A9B6F84(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = *(_QWORD *)(a2 + 40);
  v26 = *(_QWORD *)(a2 + 24);
  v20 = OUTLINED_FUNCTION_32_0();
  v23 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_87();
  v22 = v6;
  v8 = MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_75(v8, v9, v10, v11, v12, v13, v14, v15, v19);
  v16 = OUTLINED_FUNCTION_32_0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_71(a1);
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 40))(a1, v26);
    (*(void (**)(uint64_t, void *, uint64_t))(v17 + 32))(v4, &protocol requirements base descriptor for Estimator, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v24, v20);
    OUTLINED_FUNCTION_86();
    OUTLINED_FUNCTION_86();
    ComposedTransformer.init(_:_:)(v4, v16, a3);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9B716C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9B785C;
  return sub_22A9B66C0(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t sub_22A9B7200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9B6E2C(a1, a2, a3);
}

void sub_22A9B7214(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22A9B6F84(a1, a2, a3);
}

uint64_t sub_22A9B7228()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B72C0;
  return sub_22A9B60FC();
}

uint64_t sub_22A9B72C0()
{
  uint64_t *v0;
  uint64_t v2;

  OUTLINED_FUNCTION_17_1();
  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_22A9B72F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9B6AF8(a1, a2, a3);
}

void sub_22A9B730C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22A9B6C4C(a1, a2, a3);
}

void UpdatableEstimator.appending<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22A9B7338(a1, a2, a3, a4, a5, (void (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_22A9B5F14);
}

{
  sub_22A9B7338(a1, a2, a3, a4, a5, (void (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_22A9B5E98);
}

void sub_22A9B7338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = a6;
  v12 = *(_QWORD *)(a3 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v17, v6, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, a3);
  v20(v17, v15, a2, a3, a4, a5);
  OUTLINED_FUNCTION_3();
}

void sub_22A9B7424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for TransformerToUpdatableEstimatorAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TransformerToUpdatableEstimatorAdaptor<A>, v4);
  type metadata accessor for ComposedUpdatableEstimator();
}

uint64_t sub_22A9B7470(uint64_t a1)
{
  return MEMORY[0x22E2E4D80](&unk_22ABE9F8C, a1);
}

void type metadata accessor for ComposedUpdatableEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22A9B74A0()
{
  type metadata accessor for ComposedUpdatableEstimator();
}

uint64_t sub_22A9B74C0(uint64_t a1)
{
  return MEMORY[0x22E2E4D80](&unk_22ABE9F8C, a1);
}

uint64_t sub_22A9B74DC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9B75B8 + 4 * byte_22ABE9F30[v21 - 1]))();
}

void sub_22A9B762C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_22A9B7820()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9B7830(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&unk_22ABE9F70);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_9(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_11_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return Transformer.applied<A>(to:eventHandler:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_29_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_33_4()
{
  return sub_22ABDF0F8();
}

uint64_t sub_22A9B78DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v12 + 16))(v11, v4, v9);
  return SlidingWindows.init(input:length:stride:)((uint64_t)v11, a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

uint64_t SlidingWindows.init(input:length:stride:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);

  v12 = sub_22ABDE8A0();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a6, a1, v12);
  v15 = type metadata accessor for SlidingWindows(0, a4, a5, v14);
  *(_QWORD *)(a6 + *(int *)(v15 + 36)) = a2;
  *(_QWORD *)(a6 + *(int *)(v15 + 40)) = a3;
  if (a2 < 1 || a3 < 1)
  {
    sub_22A9B7B50();
    v17 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v18 = 0xD000000000000024;
    v19 = 0xD000000000000027;
    v20 = 0x800000022ABE13F0;
    v21 = 0x800000022ABE13C0;
    v22 = 5;
LABEL_11:
    *(_QWORD *)(v18 + 8) = v21;
    *(_QWORD *)(v18 + 16) = v19;
    *(_QWORD *)(v18 + 24) = v20;
    *(_BYTE *)(v18 + 32) = v22;
    swift_willThrow(v17);
    v28 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v28(a1, v12);
    return ((uint64_t (*)(uint64_t, uint64_t))v28)(a6, v12);
  }
  v23 = v15;
  v24 = *(_QWORD *)(sub_22ABDE84C() + 16);
  swift_bridgeObjectRelease();
  result = sub_22ABDE84C();
  v26 = result;
  if (v24 != 2)
  {
    sub_22A9B7B50();
    v17 = OUTLINED_FUNCTION_53();
    v20 = 0;
    *(_QWORD *)v18 = v26;
    v21 = 0xD000000000000033;
    v19 = 0x800000022ABE1420;
    v22 = 6;
    goto LABEL_11;
  }
  if (*(_QWORD *)(result + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v27 = *(_QWORD *)(result + 40);
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    *(_QWORD *)(a6 + *(int *)(v23 + 44)) = v27;
  }
  return result;
}

uint64_t type metadata accessor for SlidingWindows(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SlidingWindows);
}

unint64_t sub_22A9B7B50()
{
  unint64_t result;

  result = qword_2540E8258;
  if (!qword_2540E8258)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for PipelineDataError, &type metadata for PipelineDataError);
    atomic_store(result, (unint64_t *)&qword_2540E8258);
  }
  return result;
}

uint64_t SlidingWindows.input.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_7();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SlidingWindows.length.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 36));
}

uint64_t SlidingWindows.stride.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 40));
}

uint64_t SlidingWindows.startIndex.getter()
{
  return 0;
}

uint64_t SlidingWindows.endIndex.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_1_7();
  result = sub_22ABDE84C();
  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_13;
  }
  v4 = *(_QWORD *)(result + 32);
  result = swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  v6 = __OFSUB__(v4, v5);
  v7 = v4 - v5;
  if (v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = __OFADD__(v7, 1);
  v8 = v7 + 1;
  if (v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v8 & ~(v8 >> 63);
  v10 = *(_QWORD *)(v1 + *(int *)(a1 + 40));
  v6 = __OFADD__(v9, v10);
  v11 = v9 + v10;
  if (v6)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = __OFSUB__(v11, 1);
  v12 = v11 - 1;
  if (v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v12 != 0x8000000000000000 || v10 != -1)
    return v12 / v10;
LABEL_18:
  __break(1u);
  return result;
}

unint64_t sub_22A9B7C8C(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > result)
  {
    return *(_QWORD *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall SlidingWindows.index(before:)(Swift::Int before)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFSUB__(before, 1);
  result = before - 1;
  if (v1)
    __break(1u);
  return result;
}

Swift::Int __swiftcall SlidingWindows.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

Swift::Int __swiftcall SlidingWindows.index(_:offsetBy:)(Swift::Int _, Swift::Int offsetBy)
{
  BOOL v2;
  Swift::Int result;

  v2 = __OFADD__(_, offsetBy);
  result = _ + offsetBy;
  if (v2)
    __break(1u);
  return result;
}

uint64_t SlidingWindows.subscript.getter(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v3 = *(_QWORD *)(v2 + a2[10]);
  v4 = a1 * v3;
  if ((unsigned __int128)(a1 * (__int128)v3) >> 64 != (a1 * v3) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_22ABDE8A0();
  v6 = sub_22ABDE84C();
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(v6 + 32);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v2 + a2[9]);
  v9 = v7 - v8;
  if (__OFSUB__(v7, v8))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v4 < v11)
  {
    v12 = *(_QWORD *)(v2 + a2[11]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_22ABE9FB0;
    *(_QWORD *)(v13 + 32) = v8;
    *(_QWORD *)(v13 + 40) = v12;
    MEMORY[0x24BDAC7A8](v13);
    return sub_22ABDE81C();
  }
LABEL_11:
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

uint64_t sub_22A9B7E58(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;

  v42 = a5;
  v39 = sub_22ABDE8DC();
  v43 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v16 = (char *)&v36 - v15;
  v18 = *a1;
  v17 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v19 = swift_allocObject();
  v44 = xmmword_22ABE9FB0;
  *(_OWORD *)(v19 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v19 + 32) = a3;
  *(_QWORD *)(v19 + 40) = a4;
  v40 = a2;
  v20 = j_nullsub_1(v18, v17);
  v38 = v21;
  v23 = v22;
  v41 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = v44;
  *(_QWORD *)&v44 = a3;
  v26 = __OFADD__(a6, a3);
  v27 = a6 + a3;
  if (v26)
  {
    __break(1u);
    goto LABEL_6;
  }
  v28 = (_QWORD *)result;
  v37 = v23;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
  v28[7] = v29;
  result = sub_22A9B8E28();
  v28[8] = result;
  if (v27 < a6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v28[4] = a6;
  v28[5] = v27;
  v28[12] = v29;
  v28[13] = result;
  if ((a4 & 0x8000000000000000) == 0)
  {
    v28[9] = 0;
    v28[10] = a4;
    v30 = sub_22ABDE8A0();
    sub_22ABDEAEC();
    MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v30);
    sub_22ABDE96C();
    v31 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v31);
    *(&v36 - 8) = a7;
    *(&v36 - 7) = a8;
    v33 = v37;
    v32 = v38;
    *(&v36 - 6) = v20;
    *(&v36 - 5) = v32;
    v34 = v41;
    *(&v36 - 4) = v33;
    *(&v36 - 3) = v34;
    *(&v36 - 2) = v44;
    *(&v36 - 1) = a4;
    v35 = v39;
    MEMORY[0x22E2E4D80](MEMORY[0x24BDBFD50], v39);
    sub_22AA3EF20();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v35);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_22A9B80C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;

  v35 = a3;
  v39 = a2;
  v37 = a1;
  v13 = a9;
  v14 = *(_QWORD *)(a11 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v17;
  v36 = v18;
  result = sub_22A99EB90(v17, v18);
  if ((result & 1) != 0)
  {
    result = sub_22ABDED08();
    if (!result)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    result = sub_22ABDED08();
    if (!result)
    {
LABEL_34:
      __break(1u);
      return result;
    }
    if ((unsigned __int128)(a9 * (__int128)a10) >> 64 == (a9 * a10) >> 63)
      return sub_22ABDF5A8();
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (a9 < 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v34 = a5;
  if (a9)
  {
    if (a10 < 0)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v20 = 0;
    v33 = a12;
    v38 = xmmword_22ABE9FB0;
    v31 = a9;
    while (v20 != v13)
    {
      if (a10)
      {
        v21 = 0;
        v22 = v32[2];
        while (a10 != v21)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v38;
          *(_QWORD *)(inited + 32) = v20;
          *(_QWORD *)(inited + 40) = v21;
          v24 = swift_initStackObject();
          *(_OWORD *)(v24 + 16) = v38;
          *(_QWORD *)(v24 + 32) = v20;
          *(_QWORD *)(v24 + 40) = v21;
          sub_22AA3EF1C();
          result = swift_bridgeObjectRelease();
          if (v22)
          {
            v25 = v32[4];
            v26 = v20 * v25;
            if ((unsigned __int128)(v20 * (__int128)v25) >> 64 != (v20 * v25) >> 63)
              goto LABEL_26;
            if (v22 != 1)
            {
              v27 = v32[5];
              v28 = v21 * v27;
              if ((unsigned __int128)(v21 * (__int128)v27) >> 64 != (v21 * v27) >> 63)
                goto LABEL_27;
              v29 = __OFADD__(v26, v28);
              v26 += v28;
              if (v29)
                goto LABEL_28;
            }
          }
          else
          {
            v26 = 0;
          }
          ++v21;
          (*(void (**)(uint64_t, char *, uint64_t))(v14 + 40))(v34 + *(_QWORD *)(v14 + 72) * v26, v16, a11);
          result = swift_bridgeObjectRelease();
          if (a10 == v21)
            goto LABEL_23;
        }
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        break;
      }
LABEL_23:
      ++v20;
      v13 = v31;
      if (v20 == v31)
        return result;
    }
    __break(1u);
    goto LABEL_30;
  }
  return result;
}

uint64_t SlidingWindows.subscript.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_2_10();
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  v8 = v3;
  v9 = v2;
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>, v0);
  return sub_22ABE01F0();
}

uint64_t sub_22A9B83E0()
{
  return sub_22ABDF344();
}

Swift::Int sub_22A9B83EC@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = SlidingWindows.index(before:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_22A9B8414(Swift::Int *a1)
{
  Swift::Int result;

  result = SlidingWindows.index(before:)(*a1);
  *a1 = result;
  return result;
}

Swift::Int sub_22A9B843C@<X0>(Swift::Int *a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int result;

  result = SlidingWindows.index(_:offsetBy:)(*a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9B8464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>, a4);
  return sub_22ABDF32C();
}

uint64_t sub_22A9B84C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>, a3);
  return sub_22ABDF344();
}

void OUTLINED_FUNCTION_39_3(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_22A9B8524(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = SlidingWindows.endIndex.getter(a1);
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9B8544()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_10();
  v1 = malloc(0x28uLL);
  *v0 = v1;
  sub_22A9B85B4();
  v1[4] = v2;
  OUTLINED_FUNCTION_38();
}

void sub_22A9B858C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  OUTLINED_FUNCTION_0_2(v1);
}

void sub_22A9B85B4()
{
  int *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_2_10();
  v3 = OUTLINED_FUNCTION_1_7();
  *v2 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[1] = v4;
  v2[2] = (uint64_t)malloc(*(_QWORD *)(v4 + 64));
  SlidingWindows.subscript.getter(v1, v0);
  OUTLINED_FUNCTION_38();
}

void sub_22A9B8614(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  OUTLINED_FUNCTION_0_2(v1);
}

uint64_t sub_22A9B8640()
{
  return SlidingWindows.subscript.getter();
}

uint64_t sub_22A9B8650(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>, a1);
  return sub_22ABDF338();
}

void sub_22A9B86A4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

void sub_22A9B86C0(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  *a2 = SlidingWindows.index(after:)(*a1);
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9B86E4(Swift::Int *a1)
{
  *a1 = SlidingWindows.index(after:)(*a1);
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A9B8708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, a1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>, a1);
  result = sub_22ABDFA40();
  *(_QWORD *)(a2 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_22A9B8780(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>, a1);
  return sub_22ABDF3BC();
}

uint64_t sub_22A9B87B4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>, a1);
  return sub_22ABDF3EC();
}

uint64_t sub_22A9B87EC()
{
  return sub_22ABDEEE8();
}

unint64_t sub_22A9B8814(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_22A9B8834(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_22A9B8858(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_22A9B7E58(a1, a2, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3]);
}

void sub_22A9B8878()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9B8888()
{
  return sub_22A9B89EC(&qword_255B0EB00, MEMORY[0x24BEE1BD0]);
}

unint64_t sub_22A9B88AC()
{
  unint64_t result;

  result = qword_2540E8590;
  if (!qword_2540E8590)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2540E8590);
  }
  return result;
}

uint64_t sub_22A9B88E8(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>);
  return MEMORY[0x22E2E4D80](MEMORY[0x24BEE4230], a1, &v3);
}

void sub_22A9B8930()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9B8940()
{
  return sub_22A9B89EC(&qword_255B0EB08, MEMORY[0x24BEE1BA8]);
}

uint64_t sub_22A9B8964(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>);
  return MEMORY[0x22E2E4D80](MEMORY[0x24BEE4218], a1, &v3);
}

void sub_22A9B89AC()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9B89BC()
{
  return MEMORY[0x24BEE1780];
}

uint64_t sub_22A9B89C8()
{
  return sub_22A9B89EC(qword_255B0EB10, MEMORY[0x24BEE1BD8]);
}

uint64_t sub_22A9B89EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E85F8);
    v6 = sub_22A9B88AC();
    v7[0] = MEMORY[0x24BEE17A8];
    v7[1] = v6;
    result = MEMORY[0x22E2E4D80](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_22A9B8A58()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9B8A68()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9B8A78()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDE8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22A9B8AF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDE8A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  }
  return a1;
}

uint64_t sub_22A9B8B94(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22ABDE8A0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_22A9B8BD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_22A9B8C44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_22A9B8CBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_22A9B8D30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_22A9B8DA4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9B8DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_7();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_22A9B8DE4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9B8DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_7();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

unint64_t sub_22A9B8E28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B0EBA0;
  if (!qword_255B0EBA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E85F8);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BDBFE50], v1);
    atomic_store(result, (unint64_t *)&qword_255B0EBA0);
  }
  return result;
}

uint64_t sub_22A9B8E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_22A9B80C8(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[8], v4[9], v4[2], v4[3]);
}

uint64_t sub_22A9B8EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(uint64_t, uint64_t);
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v38 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v36 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_33();
  v11 = v10 - v9;
  v12 = sub_22ABDD4F0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  v17 = sub_22ABDDA0C();
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v18);
  v35 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v31 - v21;
  v23 = a3 + *(int *)(type metadata accessor for DenseLayerStorage() + 20);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v34 = v23;
  __swift_storeEnumTagSinglePayload(v23, 1, 1, v33);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v37 = a1;
  v31 = v24;
  v24(v22, a1, v17);
  OUTLINED_FUNCTION_8_8();
  sub_22ABDD4E4();
  v25 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v32 = v12;
  v25(v16, v12);
  v39 = v22;
  sub_22ABDE81C();
  OUTLINED_FUNCTION_2_11((uint64_t)v22);
  sub_22A9B9790(v38, v11);
  if (__swift_getEnumTagSinglePayload(v11, 1, v17) == 1)
  {
    sub_22A9AD754(v38, &qword_255B0DAB8);
    OUTLINED_FUNCTION_2_11(v37);
    return sub_22A9AD754(v11, &qword_255B0DAB8);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 32);
    v28 = (uint64_t)v35;
    v27(v35, v11, v17);
    v31(v22, v28, v17);
    OUTLINED_FUNCTION_8_8();
    sub_22ABDD4E4();
    v29 = ((uint64_t (*)(uint64_t, uint64_t))v25)(v16, v32);
    MEMORY[0x24BDAC7A8](v29);
    *(&v31 - 2) = (void (*)(char *, uint64_t, uint64_t))v22;
    v30 = v36;
    sub_22ABDE81C();
    OUTLINED_FUNCTION_2_11((uint64_t)v22);
    sub_22A9AD754(v38, &qword_255B0DAB8);
    OUTLINED_FUNCTION_2_11(v37);
    OUTLINED_FUNCTION_2_11(v28);
    __swift_storeEnumTagSinglePayload(v30, 0, 1, v33);
    return sub_22A9A8F6C(v30, v34);
  }
}

uint64_t type metadata accessor for DenseLayerStorage()
{
  uint64_t result;

  result = qword_255B0EC00;
  if (!qword_255B0EC00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22A9B91F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x746867696577 && a2 == 0xE600000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1935763810 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22A9B92C8(char a1)
{
  if ((a1 & 1) != 0)
    return 1935763810;
  else
    return 0x746867696577;
}

uint64_t sub_22A9B92F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EC48);
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_6_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9B9F44();
  sub_22ABE02B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  sub_22A9B9F80(&qword_255B0EC58, MEMORY[0x24BEE14F8], MEMORY[0x24BDBFCD8]);
  OUTLINED_FUNCTION_6_11();
  sub_22ABDFD4C();
  if (!v1)
  {
    type metadata accessor for DenseLayerStorage();
    OUTLINED_FUNCTION_6_11();
    sub_22ABDFCF8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
}

uint64_t sub_22A9B941C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  v16 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v17 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EC60);
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_6_4();
  type metadata accessor for DenseLayerStorage();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  v19 = v11 - v10 + *(int *)(v13 + 20);
  __swift_storeEnumTagSinglePayload(v19, 1, 1, v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9B9F44();
  sub_22ABE0298();
  if (v18)
  {
    OUTLINED_FUNCTION_9_8();
    return sub_22A9AD754(v19, &qword_2540E8570);
  }
  else
  {
    sub_22A9B9F80(&qword_255B0EC68, MEMORY[0x24BEE1520], MEMORY[0x24BDBFCE8]);
    sub_22ABDFC8C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v12, v17, v5);
    sub_22ABDFC38();
    OUTLINED_FUNCTION_5_9();
    sub_22A9A8F6C(v16, v19);
    sub_22A9B9FE0(v12, a2);
    OUTLINED_FUNCTION_9_8();
    return sub_22A9BA024(v12);
  }
}

BOOL sub_22A9B966C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22A9AFA2C(*a1, *a2);
}

uint64_t sub_22A9B9678()
{
  return sub_22A9AFB4C();
}

uint64_t sub_22A9B9680()
{
  return _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_22A9B9688()
{
  sub_22ABE0244();
  sub_22ABE0250();
  return sub_22ABE0280();
}

uint64_t sub_22A9B96C8()
{
  char *v0;

  return sub_22A9B92C8(*v0);
}

uint64_t sub_22A9B96D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9B91F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9B96F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9AFB44();
  *a1 = result;
  return result;
}

uint64_t sub_22A9B9718()
{
  sub_22A9B9F44();
  return sub_22ABE02EC();
}

uint64_t sub_22A9B9740()
{
  sub_22A9B9F44();
  return sub_22ABE02F8();
}

uint64_t sub_22A9B9768@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22A9B941C(a1, a2);
}

uint64_t sub_22A9B977C(_QWORD *a1)
{
  return sub_22A9B92F4(a1);
}

uint64_t sub_22A9B9790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_22A9B97D8(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_22A9B98CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v7(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!(_DWORD)result)
    return v7(v5, v4);
  return result;
}

char *sub_22A9B9960(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_22A9B9A28(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  return a1;
}

char *sub_22A9B9B3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_22A9B9C04(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  return a1;
}

uint64_t sub_22A9B9D18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9B9D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    v8 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_22A9B9D94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9B9DA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    v10 = a1 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

void sub_22A9B9E18()
{
  unint64_t v0;
  unint64_t v1;

  sub_22A9B9E9C();
  if (v0 <= 0x3F)
  {
    sub_22A9B9EEC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_22A9B9E9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B0EC10)
  {
    v0 = sub_22ABDE8A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255B0EC10);
  }
}

void sub_22A9B9EEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B0EC18[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E8568);
    v0 = sub_22ABDF5D8();
    if (!v1)
      atomic_store(v0, qword_255B0EC18);
  }
}

unint64_t sub_22A9B9F44()
{
  unint64_t result;

  result = qword_255B0EC50;
  if (!qword_255B0EC50)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEA348, &type metadata for DenseLayerStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0EC50);
  }
  return result;
}

uint64_t sub_22A9B9F80(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E8568);
    v8 = a2;
    result = MEMORY[0x22E2E4D80](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A9B9FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DenseLayerStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A9BA024(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DenseLayerStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for DenseLayerStorage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9BA0AC + 4 * byte_22ABEA215[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9BA0E0 + 4 * byte_22ABEA210[v4]))();
}

uint64_t sub_22A9BA0E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9BA0E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9BA0F0);
  return result;
}

uint64_t sub_22A9BA0FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9BA104);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9BA108(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9BA110(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DenseLayerStorage.CodingKeys()
{
  return &type metadata for DenseLayerStorage.CodingKeys;
}

unint64_t sub_22A9BA130()
{
  unint64_t result;

  result = qword_255B0EC70;
  if (!qword_255B0EC70)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEA320, &type metadata for DenseLayerStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0EC70);
  }
  return result;
}

unint64_t sub_22A9BA170()
{
  unint64_t result;

  result = qword_255B0EC78;
  if (!qword_255B0EC78)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEA290, &type metadata for DenseLayerStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0EC78);
  }
  return result;
}

unint64_t sub_22A9BA1B0()
{
  unint64_t result;

  result = qword_255B0EC80[0];
  if (!qword_255B0EC80[0])
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEA2B8, &type metadata for DenseLayerStorage.CodingKeys);
    atomic_store(result, qword_255B0EC80);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_11(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_5_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_8_8()
{
  return sub_22ABDD964();
}

uint64_t OUTLINED_FUNCTION_9_8()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t sub_22A9BA230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t result;
  _QWORD v44[2];
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  OUTLINED_FUNCTION_4_4();
  v51 = v1;
  v52 = v0;
  v3 = v2;
  v5 = v4;
  v57 = v7;
  v58 = v6;
  v46 = v8;
  v9 = *(_QWORD *)(v8 + 8);
  swift_getAssociatedTypeWitness();
  v10 = OUTLINED_FUNCTION_33_5();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  v47 = v12;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v44 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v44 - v18;
  v20 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_33();
  v23 = v22 - v21;
  OUTLINED_FUNCTION_37_4();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_33();
  v27 = v26 - v25;
  v54 = v28;
  v44[0] = *(_QWORD *)(v28 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v44[0])(v26 - v25, v58, v5);
  v56 = v20;
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v45(v23, v57, v3);
  v29 = *(void (**)(uint64_t, uint64_t))(v9 + 32);
  v53 = v27;
  v50 = v9;
  v44[1] = v29;
  v29(v5, v9);
  v30 = sub_22ABDD3B8();
  v32 = v31;
  v48 = v11;
  v33 = *(void (**)(char *, uint64_t))(v11 + 8);
  v34 = v52;
  v33(v19, v10);
  v35 = *(void (**)(uint64_t))(*(_QWORD *)(v34 + 8) + 32);
  v55 = v23;
  v35(v59);
  v36 = sub_22ABDD3B8();
  v38 = v37;
  v49 = v10;
  v33(v16, v10);
  if (v30 == v36 && v32 == v38)
  {
    swift_bridgeObjectRelease_n();
    v41 = 0;
  }
  else
  {
    v40 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = v40 ^ 1;
  }
  v42 = v59;
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v59);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v53, v5);
  if ((v41 & 1) == 0)
  {
    v60 = v5;
    v61 = v42;
    v62 = v46;
    v63 = v34;
    type metadata accessor for ComposedUpdatableSupervisedTabularEstimator();
  }
  __break(1u);
  return result;
}

void sub_22A9BA510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[3];
  uint64_t v12;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v2 = *(_QWORD *)(v0 + 40);
  v11[2] = *(_QWORD *)(v2 + 8);
  v12 = v3;
  v11[0] = *(_QWORD *)(v0 + 24);
  v11[1] = OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_40_3();
  v7 = OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v11 - v9;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v6, v5);
  (*(void (**)(_QWORD, uint64_t))(v2 + 16))(v11[0], v2);
  OUTLINED_FUNCTION_56_3();
  OUTLINED_FUNCTION_56_3();
  ComposedTabularTransformer.init(_:_:)((uint64_t)v10, v7, v12);
}

void sub_22A9BA64C()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22A9BA658()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(void);

  OUTLINED_FUNCTION_68();
  v3 = v2;
  v1[7] = v2;
  v1[8] = v0;
  v1[5] = v4;
  v1[6] = v5;
  v1[3] = v6;
  v1[4] = v7;
  v1[2] = v8;
  v1[9] = *(_QWORD *)(*(_QWORD *)(v2 + 40) + 8);
  v1[10] = *(_QWORD *)(v2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[11] = AssociatedTypeWitness;
  v1[12] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v1[13] = OUTLINED_FUNCTION_13_7();
  v1[14] = OUTLINED_FUNCTION_23_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0ECF8);
  v1[15] = OUTLINED_FUNCTION_13_7();
  v1[16] = OUTLINED_FUNCTION_23_6();
  v1[17] = OUTLINED_FUNCTION_23_6();
  v10 = sub_22ABDD2EC();
  v1[18] = v10;
  v1[19] = *(_QWORD *)(v10 - 8);
  v1[20] = OUTLINED_FUNCTION_13_7();
  v1[21] = OUTLINED_FUNCTION_23_6();
  v1[22] = *(_QWORD *)(*(_QWORD *)(v3 + 32) + 8);
  v1[23] = *(_QWORD *)(v3 + 16);
  v11 = swift_getAssociatedTypeWitness();
  v1[24] = v11;
  v1[25] = *(_QWORD *)(v11 - 8);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v12 = (_QWORD *)OUTLINED_FUNCTION_25();
  v1[28] = v12;
  *v12 = v1;
  v12[1] = sub_22A9BA7F4;
  OUTLINED_FUNCTION_40_3();
  return v14();
}

uint64_t sub_22A9BA7F4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9BA840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_23_5();
  v11 = v10[29];
  sub_22ABDF1DC();
  if (v11)
  {
    OUTLINED_FUNCTION_46_3();
    OUTLINED_FUNCTION_4_8();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_5_0(v12);
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10[30] = AssociatedConformanceWitness;
    v15 = *(_QWORD *)(AssociatedConformanceWitness + 8);
    v10[31] = v15;
    v10[32] = *(_QWORD *)(v15 + 24);
    v16 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    v10[33] = (uint64_t)v16;
    *v16 = v10;
    v16[1] = sub_22A9BA910;
    return OUTLINED_FUNCTION_12_9(v10[21], v10[3], v10[5], v10[6], v10[24], v15, a10);
  }
}

uint64_t sub_22A9BA910()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 272) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9BA95C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  int *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t (*v19)(void);

  OUTLINED_FUNCTION_23_5();
  v2 = v0[18];
  v3 = v0[16];
  sub_22A9BCAEC(v0[4], v3);
  if (__swift_getEnumTagSinglePayload(v3, 1, v2) == 1)
  {
    v4 = v0[17];
    sub_22A9BCB34(v0[16]);
    OUTLINED_FUNCTION_57_3(v4, 1);
    v5 = v0[34];
    sub_22ABDF1DC();
    if (v5)
    {
      OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_47_2();
      OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      OUTLINED_FUNCTION_4_8();
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_12_3();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_39_0();
      v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
      return OUTLINED_FUNCTION_5_0(v6);
    }
    else
    {
      v10 = (_QWORD *)OUTLINED_FUNCTION_13_1();
      v0[37] = (uint64_t)v10;
      v11 = OUTLINED_FUNCTION_20_4(v10);
      return OUTLINED_FUNCTION_11_10(v11, v12, v13, v14, v15, v16, v17, v18);
    }
  }
  else
  {
    v8 = (int *)v0[32];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[19] + 32))(v0[20], v0[16], v0[18]);
    v19 = (uint64_t (*)(void))((char *)v8 + *v8);
    v9 = (_QWORD *)swift_task_alloc();
    v0[35] = (uint64_t)v9;
    *v9 = v0;
    v9[1] = sub_22A9BAAA8;
    return OUTLINED_FUNCTION_12_9(v0[15], v0[20], v0[5], v0[6], v0[24], v0[31], v19);
  }
}

uint64_t sub_22A9BAAA8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 288) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9BAAF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  OUTLINED_FUNCTION_23_5();
  v2 = v0[17];
  v3 = v0[15];
  (*(void (**)(_QWORD, _QWORD))(v0[19] + 8))(v0[20], v0[18]);
  OUTLINED_FUNCTION_57_3(v3, 0);
  sub_22A9BCB74(v3, v2);
  v4 = v0[36];
  sub_22ABDF1DC();
  if (v4)
  {
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_47_2();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_4_8();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_5_0(v5);
  }
  else
  {
    v7 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    v0[37] = v7;
    v8 = OUTLINED_FUNCTION_20_4(v7);
    return OUTLINED_FUNCTION_11_10(v8, v9, v10, v11, v12, v13, v14, v15);
  }
}

uint64_t sub_22A9BABC4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 304) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22A9BAC10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[26];
  v2 = v0[25];
  v3 = v0[21];
  v4 = v0[18];
  v5 = v0[19];
  v6 = v0[12];
  v8 = v0[27];
  v7 = v0[24];
  v9 = v0[2];
  sub_22A9BCB34(v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v8, v7);
  OUTLINED_FUNCTION_41_3(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  swift_getAssociatedConformanceWitness();
  ComposedTabularTransformer.init(_:_:)(v1, v7, v9);
}

uint64_t sub_22A9BACF0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_13_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_12_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9BAD4C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_4_8();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9BADA0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_46_3();
  OUTLINED_FUNCTION_4_8();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9BADF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_68();
  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 8);
  v4(*(_QWORD *)(v0 + 160), v3);
  v4(v2, v3);
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_4_8();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9BAE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_68();
  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  sub_22A9BCB34(*(_QWORD *)(v0 + 136));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_4_8();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9BAF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v6[10] = a5;
  v6[11] = v5;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v12 = sub_22ABDD2EC();
  v6[12] = v12;
  v6[13] = *(_QWORD *)(v12 - 8);
  v6[14] = swift_task_alloc();
  v13 = *(_QWORD *)(a5 + 32);
  v6[15] = v13;
  v14 = *(_QWORD *)(a5 + 16);
  v6[16] = v14;
  v15 = (_QWORD *)OUTLINED_FUNCTION_25();
  v6[17] = v15;
  *v15 = v6;
  v15[1] = sub_22A9BAFD4;
  return v17(a1, a2, a3, a4, v14, v13);
}

uint64_t sub_22A9BAFD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
}

uint64_t sub_22A9BB044()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  int *v9;

  v1 = v0[18];
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_39_4();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return v2();
  }
  else
  {
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[19] = AssociatedConformanceWitness;
    v5 = *(_QWORD *)(AssociatedConformanceWitness + 8);
    v6 = *(int **)(v5 + 24);
    v7 = swift_checkMetadataState();
    v0[20] = v7;
    v9 = (int *)((char *)v6 + *v6);
    v8 = (_QWORD *)swift_task_alloc();
    v0[21] = v8;
    *v8 = v0;
    v8[1] = sub_22A9BB154;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))v9)(v0[14], v0[7], v0[8], v0[9], v7, v5);
  }
}

uint64_t sub_22A9BB154()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9BB1A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  OUTLINED_FUNCTION_23_5();
  v1 = v0[22];
  sub_22ABDF1DC();
  if (!v1)
  {
    v5 = v0[19];
    v4 = v0[20];
    OUTLINED_FUNCTION_40_3();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[2] = v4;
    v0[3] = AssociatedTypeWitness;
    v0[4] = v5;
    v0[5] = AssociatedConformanceWitness;
    type metadata accessor for ComposedTabularTransformer();
  }
  OUTLINED_FUNCTION_38_4();
  OUTLINED_FUNCTION_39_4();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_5_0(v2);
}

uint64_t sub_22A9BB250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v5 = v4 + *(int *)(a1 + 52);
  v6 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  v3[23] = v6;
  *v6 = v3;
  v6[1] = sub_22A9BB2AC;
  return v8(v5, v3[14], v3[8], v3[9], v2, v1);
}

uint64_t sub_22A9BB2AC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9BB2F8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9BB334()
{
  uint64_t v0;

  OUTLINED_FUNCTION_39_4();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9BB35C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_38_4();
  OUTLINED_FUNCTION_39_4();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9BB388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  OUTLINED_FUNCTION_53_3();
  result = (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 32) + 8) + 64))();
  if (!v0)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTabularTransformer();
  }
  return result;
}

void sub_22A9BB4DC(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v33 = a3;
  v6 = *(_QWORD *)(a2[5] + 8);
  v38 = a2[3];
  v39 = v6;
  v7 = OUTLINED_FUNCTION_45_4();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_87();
  v34 = v8;
  v10 = MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_50_3(v10, v11, v12, v13, v14, v15, v16, v17, v29[0]);
  v18 = *(_QWORD *)(a2[4] + 8);
  v19 = a2[2];
  v20 = OUTLINED_FUNCTION_45_4();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_51_3();
  v36 = v3;
  v37 = a1;
  v25 = v40;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v18 + 72))(&associated type descriptor for SupervisedTabularEstimator.Transformer, a1, v19, v18);
  if (!v25)
  {
    v29[1] = v19;
    v30 = v24;
    v40 = v20;
    v27 = v34;
    v26 = v35;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 72))(v37, v38, v39);
    v28 = v40;
    (*(void (**)(char *, _QWORD *, uint64_t))(v21 + 32))(v30, &associated type descriptor for SupervisedTabularEstimator.Transformer, v40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v27, v26, v32);
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    ComposedTabularTransformer.init(_:_:)((uint64_t)v30, v28, v33);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9BB6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  OUTLINED_FUNCTION_53_3();
  result = (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 32) + 32))();
  if (!v0)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTabularTransformer();
  }
  return result;
}

void sub_22A9BB850(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v35 = a3;
  v41 = a2[5];
  v6 = a2[3];
  v34 = *(_QWORD *)(v41 + 8);
  v42 = v6;
  v32 = OUTLINED_FUNCTION_45_4();
  v37 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_87();
  v36 = v7;
  v9 = MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_50_3(v9, v10, v11, v12, v13, v14, v15, v16, (uint64_t)v31);
  v17 = a2[4];
  v18 = a2[2];
  v33 = *(_QWORD *)(v17 + 8);
  v19 = OUTLINED_FUNCTION_45_4();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_51_3();
  v39 = v3;
  v40 = a1;
  v24 = v43;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v17 + 40))(&associated type descriptor for SupervisedTabularEstimator.Transformer, a1, v18, v17);
  if (!v24)
  {
    v31 = v23;
    v43 = v18;
    v25 = v19;
    v26 = v36;
    v27 = v37;
    v28 = v38;
    (*(void (**)(uint64_t, uint64_t))(v41 + 40))(v40, v42);
    v29 = *(void (**)(char *, _QWORD *, uint64_t))(v20 + 32);
    v30 = (uint64_t)v31;
    v29(v31, &associated type descriptor for SupervisedTabularEstimator.Transformer, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v26, v28, v32);
    OUTLINED_FUNCTION_48_3();
    OUTLINED_FUNCTION_48_3();
    ComposedTabularTransformer.init(_:_:)(v30, v25, v35);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9BBA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9B72C0;
  return sub_22A9BAF00(a1, a2, a3, a4, a5);
}

uint64_t sub_22A9BBAF0()
{
  return sub_22A9BB6F8();
}

void sub_22A9BBB04(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_22A9BB850(a1, a2, a3);
}

uint64_t sub_22A9BBB18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  v3 = sub_22ABDD3C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_22A9BBB78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  v3 = sub_22ABDD3C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*sub_22A9BBBDC())()
{
  return nullsub_1;
}

uint64_t sub_22A9BBBEC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B785C;
  return sub_22A9BA658();
}

uint64_t sub_22A9BBC7C()
{
  return sub_22A9BB388();
}

void sub_22A9BBC90(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_22A9BB4DC(a1, a2, a3);
}

void UpdatableTabularEstimator.appending<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_4();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_33();
  swift_getAssociatedTypeWitness();
  v1 = sub_22ABDD3C4();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_34_5();
}

void sub_22A9BBD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 32))(v0, v1);
  UpdatableTabularEstimator.adaptedAsSupervised<A>(annotationColumnID:)(v2, *(_QWORD *)(v4 - 176), v3, *(_QWORD *)(v4 - 168), *(_QWORD *)(v4 - 160));
}

void sub_22A9BBDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  OUTLINED_FUNCTION_40_3();
  v4();
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableTabularEstimatorToSupervisedAdaptor<A, B>, v2);
  sub_22A9BA230();
  OUTLINED_FUNCTION_3();
}

void UpdatableSupervisedTabularEstimator.appending<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  swift_getAssociatedTypeWitness();
  sub_22ABDD3C4();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = type metadata accessor for TabularTransformerToUpdatableEstimatorAdaptor(0, v3, v1, v5);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TabularTransformerToUpdatableEstimatorAdaptor<A>, v6);
  OUTLINED_FUNCTION_34_5();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_4_4();
  swift_getAssociatedTypeWitness();
  v0 = sub_22ABDD3C4();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_34_5();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_4_4();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_33();
  v10 = v9 - v8;
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13 - v12, v0, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, v6, v2);
  sub_22A9BA230();
  OUTLINED_FUNCTION_3();
}

void sub_22A9BBF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_37_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11 - v10, v3, v2);
  TabularTransformer.adaptedAsUpdatableEstimator()(v1, v4);
  (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 160) + 32))(v2);
  UpdatableTabularEstimator.adaptedAsSupervised<A>(annotationColumnID:)(v5, v0, *(_QWORD *)(v7 - 192), v6, *(_QWORD *)(v7 - 184));
}

void sub_22A9BBFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 152) + 8))(v3, *(_QWORD *)(v4 - 136));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 168) + 8))(v1, v0);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableTabularEstimatorToSupervisedAdaptor<A, B>, v2);
  sub_22A9BA230();
  OUTLINED_FUNCTION_3();
}

void sub_22A9BC0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_37_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_41_3(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v1, v3);
  UpdatableTabularEstimator.adaptedAsSupervised<A>(annotationColumnID:)(v0, *(_QWORD *)(v4 - 160), v2, *(_QWORD *)(v4 - 152), *(_QWORD *)(v4 - 144));
}

void sub_22A9BC12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableTabularEstimatorToSupervisedAdaptor<A, B>, v1);
  OUTLINED_FUNCTION_40_3();
  sub_22A9BA230();
  OUTLINED_FUNCTION_3();
}

void sub_22A9BC238()
{
  OUTLINED_FUNCTION_55_4();
  OUTLINED_FUNCTION_31_3();
}

void sub_22A9BC280()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9BC290()
{
  OUTLINED_FUNCTION_42_3();
}

void type metadata accessor for ComposedUpdatableSupervisedTabularEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22A9BC2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for TabularTransformerToUpdatableEstimatorAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  OUTLINED_FUNCTION_55_4();
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9BC318()
{
  OUTLINED_FUNCTION_31_3();
}

void sub_22A9BC324()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9BC334()
{
  OUTLINED_FUNCTION_42_3();
}

void sub_22A9BC358()
{
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_31_3();
}

void sub_22A9BC3A8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableTabularEstimatorToSupervisedAdaptor<A, B>, a1);
  OUTLINED_FUNCTION_42_3();
}

void sub_22A9BC3EC()
{
  OUTLINED_FUNCTION_42_3();
}

uint64_t sub_22A9BC420()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22A9BC428()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  swift_getAssociatedTypeWitness();
  result = sub_22ABDD3C4();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

char *sub_22A9BC4FC(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)(a3 + 16);
    swift_getAssociatedTypeWitness();
    v8 = sub_22ABDD3C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(&a1[*(int *)(a3 + 52)], &a2[*(int *)(a3 + 52)], v7);
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 16))(&a1[*(int *)(a3 + 56)], &a2[*(int *)(a3 + 56)]);
  }
  return a1;
}

uint64_t sub_22A9BC5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 16);
  swift_getAssociatedTypeWitness();
  v5 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1 + *(int *)(a2 + 52), v4);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))(a1 + *(int *)(a2 + 56));
}

uint64_t sub_22A9BC678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  v7 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52), v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 16))(a1 + *(int *)(a3 + 56), a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_22A9BC72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  v7 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(a1, a2, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52), v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 24))(a1 + *(int *)(a3 + 56), a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_22A9BC7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  v7 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52), v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 32))(a1 + *(int *)(a3 + 56), a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_22A9BC894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  v7 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(a1, a2, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52), v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 40))(a1 + *(int *)(a3 + 56), a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_22A9BC948()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9BC954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a3 + 16);
  OUTLINED_FUNCTION_54_2();
  v7 = OUTLINED_FUNCTION_33_5();
  if (*(_DWORD *)(*(_QWORD *)(v7 - 8) + 84) == (_DWORD)a2)
  {
    v8 = v7;
    v9 = a1;
LABEL_6:
    v10 = a2;
    return __swift_getEnumTagSinglePayload(v9, v10, v8);
  }
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) != (_DWORD)a2)
  {
    v8 = *(_QWORD *)(a3 + 24);
    v9 = a1 + *(int *)(a3 + 56);
    goto LABEL_6;
  }
  v9 = a1 + *(int *)(a3 + 52);
  v10 = a2;
  v8 = v6;
  return __swift_getEnumTagSinglePayload(v9, v10, v8);
}

uint64_t sub_22A9BC9F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9BCA00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = *(_QWORD *)(a4 + 16);
  OUTLINED_FUNCTION_54_2();
  v9 = OUTLINED_FUNCTION_33_5();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == a3)
  {
    v10 = v9;
    v11 = a1;
LABEL_6:
    v12 = a2;
    v13 = a2;
    return __swift_storeEnumTagSinglePayload(v11, v12, v13, v10);
  }
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) != a3)
  {
    v10 = *(_QWORD *)(a4 + 24);
    v11 = a1 + *(int *)(a4 + 56);
    goto LABEL_6;
  }
  v11 = a1 + *(int *)(a4 + 52);
  v12 = a2;
  v13 = a2;
  v10 = v8;
  return __swift_storeEnumTagSinglePayload(v11, v12, v13, v10);
}

_UNKNOWN **sub_22A9BCAB4()
{
  return &protocol witness table for ComposedTabularTransformer<A, B>;
}

uint64_t sub_22A9BCAC0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&unk_22ABEA3E0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A9BCAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0ECF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A9BCB34(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0ECF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A9BCB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0ECF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  return a8();
}

uint64_t OUTLINED_FUNCTION_12_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_13_7()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_20_4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 112);
}

uint64_t OUTLINED_FUNCTION_23_6()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_27_6()
{
  uint64_t v0;

  return sub_22A9BCB34(*(_QWORD *)(v0 + 136));
}

void OUTLINED_FUNCTION_30_5()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
}

void OUTLINED_FUNCTION_31_3()
{
  type metadata accessor for UpdatableTabularEstimatorToSupervisedAdaptor();
}

uint64_t OUTLINED_FUNCTION_33_5()
{
  return sub_22ABDD3C4();
}

void OUTLINED_FUNCTION_34_5()
{
  type metadata accessor for UpdatableTabularEstimatorToSupervisedAdaptor();
}

uint64_t OUTLINED_FUNCTION_38_4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[13] + 8))(v0[14], v0[12]);
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_41_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v3, v1, v2);
}

void OUTLINED_FUNCTION_42_3()
{
  type metadata accessor for ComposedUpdatableSupervisedTabularEstimator();
}

uint64_t OUTLINED_FUNCTION_45_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[25] + 8))(v0[27], v0[24]);
}

uint64_t OUTLINED_FUNCTION_47_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_48_3()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_49_3()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_50_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 120) = (char *)&a9 - v9;
}

void OUTLINED_FUNCTION_52_3()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_54_2()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_55_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_56_3()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_57_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void ComposedTransformer.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for ComposedTransformer();
}

uint64_t sub_22A9BCE08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_79(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

void type metadata accessor for ComposedTransformer()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t ComposedTransformer.inner.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t ComposedTransformer.inner.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*ComposedTransformer.inner.modify())()
{
  return nullsub_1;
}

uint64_t ComposedTransformer.outer.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t ComposedTransformer.outer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*ComposedTransformer.outer.modify())()
{
  return nullsub_1;
}

uint64_t ComposedTransformer.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v8 = a5[3];
  v6[8] = v8;
  v6[9] = *(_QWORD *)(v8 - 8);
  v6[10] = OUTLINED_FUNCTION_0_0();
  v9 = a5[2];
  v6[11] = v9;
  v6[12] = *(_QWORD *)(v9 - 8);
  v6[13] = OUTLINED_FUNCTION_0_0();
  v6[14] = a5[4];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[15] = AssociatedTypeWitness;
  v6[16] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[17] = OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9BCF60()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v1 = v0[14];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[12] + 16))(v0[13], v0[7], v0[11]);
  v4 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 24)
                                                                              + *(_QWORD *)(v1 + 24));
  v2 = (_QWORD *)swift_task_alloc();
  v0[18] = v2;
  *v2 = v0;
  v2[1] = sub_22A9BCFE0;
  return v4(v0[17], v0[3], v0[4], v0[5], v0[11], v0[14]);
}

uint64_t sub_22A9BCFE0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_7();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9BD04C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t);

  v1 = *(_QWORD *)(v0 + 152);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_18_4();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 16))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56) + *(int *)(v3 + 52), *(_QWORD *)(v0 + 64));
    v4 = *(_QWORD *)(v3 + 40);
    v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))(**(int **)(v4 + 24)
                                                                                 + *(_QWORD *)(v4 + 24));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v5;
    *v5 = v0;
    v5[1] = sub_22A9BD12C;
    return v6(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64), v4);
  }
}

uint64_t sub_22A9BD12C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_7();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9BD198()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9BD1EC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_11();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9BD220()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_4();
  OUTLINED_FUNCTION_11_11();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9BD258(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEA6D0, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9BD28C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEA6D0, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22A9BD2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9AFDDC;
  return ComposedTransformer.applied(to:eventHandler:)(a1, a2, a3, a4, a5);
}

uint64_t ComposedTransformer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  return 0;
}

uint64_t static ComposedTransformer<>.== infix(_:_:)()
{
  if ((sub_22ABDECFC() & 1) != 0)
    type metadata accessor for ComposedTransformer();
  return 0;
}

uint64_t sub_22A9BD494()
{
  return static ComposedTransformer<>.== infix(_:_:)();
}

void ComposedTransformer<>.encode(to:)()
{
  OUTLINED_FUNCTION_21_6();
}

void sub_22A9BD4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  MEMORY[0x22E2E4D80](&unk_22ABEA6D0, a1);
  v11 = sub_22ABDFD58();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&a9 - v13;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v10 - 112) = 0;
  v15 = *(_QWORD *)(v10 - 72);
  sub_22ABDFD4C();
  if (!v15)
  {
    *(_BYTE *)(v10 - 112) = 1;
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for ComposedTransformer.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22A9BD60C()
{
  ComposedTransformer<>.encode(to:)();
}

void ComposedTransformer<>.init(from:)(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_21_6();
}

void sub_22A9BD6C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x22E2E4D80](&unk_22ABEA6D0, a1);
  v6 = sub_22ABDFCB0();
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_9_9();
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 152) = v3;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for ComposedTransformer();
}

void sub_22A9BD724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v11 - 216) = a1;
  v12 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  *(_QWORD *)(v11 - 128) = v9;
  v15 = *(_QWORD *)(v11 - 72);
  sub_22ABE0298();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    *(_QWORD *)(v11 - 72) = v12;
    v16 = *(_QWORD *)(v11 - 176);
    v17 = (uint64_t)v10;
    v19 = *(_QWORD *)(v11 - 168);
    v18 = *(_QWORD *)(v11 - 160);
    v20 = v14;
    *(_BYTE *)(v11 - 112) = 0;
    v21 = *(_QWORD *)(v11 - 152);
    sub_22ABDFC8C();
    v22 = *(void (**)(char *, _QWORD, uint64_t))(v16 + 32);
    *(_QWORD *)(v11 - 144) = v20;
    v22(v20, *(_QWORD *)(v11 - 136), v21);
    *(_BYTE *)(v11 - 112) = 1;
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_8_6();
    v23 = *(_QWORD *)(v11 - 216);
    v24 = *(_QWORD *)(v11 - 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 208) + 32))(v24 + *(int *)(v23 + 52), v19, v18);
    v25 = *(_QWORD *)(v11 - 72);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v25 + 16))(*(_QWORD *)(v11 - 200), v24, v23);
    __swift_destroy_boxed_opaque_existential_1(v17);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v23);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22A9BD8B0(uint64_t a1)
{
  ComposedTransformer<>.init(from:)(a1);
}

void Transformer.appending<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *);
  uint64_t v16;

  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = OUTLINED_FUNCTION_3_11(v13, v16);
  v15(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  ComposedTransformer.init(_:_:)(v4, a2, a4);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15 - v14, v4, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  PreprocessingEstimator.init(_:_:)(v16, a2, a4);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  OUTLINED_FUNCTION_27_8(v15 - v14, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  PreprocessingSupervisedEstimator.init(_:_:)(v16, a2, a4);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15 - v14, v4, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  PreprocessingUpdatableEstimator.init(_:_:)(v16, a2, a4);
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15 - v14, v4, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  PreprocessingUpdatableSupervisedEstimator.init(_:_:)(v16, a2, a4);
}

void sub_22A9BD98C()
{
  OUTLINED_FUNCTION_3();
}

void Transformer.appending<A, B>(_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  sub_22A9BDA34(a1, a2, a3, (void (*)(uint64_t))Transformer.adaptedAsAnnotatedFeatureTransformer<A>(annotationType:), a4, (uint64_t)&unk_22ABF94E8);
}

{
  sub_22A9BDA34(a1, a2, a3, (void (*)(uint64_t))Transformer.adaptedAsAnnotatedPredictionTransformer<A>(annotationType:), a4, (uint64_t)&unk_22ABF2A28);
}

void sub_22A9BD9C4()
{
  OUTLINED_FUNCTION_19_6();
}

void Transformer.appending<A, B>(_:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  sub_22A9BDB54(a1, a2, a3, a4, type metadata accessor for AnnotatedFeatureTransformerAdaptor, (void (*)(uint64_t))Transformer.adaptedAsAnnotatedFeatureTransformer<A>(annotationType:), a5, (uint64_t)&unk_22ABF94E8);
}

{
  sub_22A9BDB54(a1, a2, a3, a4, type metadata accessor for AnnotatedPredictionTransformerAdaptor, (void (*)(uint64_t))Transformer.adaptedAsAnnotatedPredictionTransformer<A>(annotationType:), a5, (uint64_t)&unk_22ABF2A28);
}

void sub_22A9BD9F8()
{
  OUTLINED_FUNCTION_19_6();
}

void sub_22A9BDA2C()
{
  OUTLINED_FUNCTION_19_6();
}

void sub_22A9BDA34(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, void (*a4)(uint64_t)@<X7>, uint64_t a5@<X8>, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;

  v16 = a4;
  v17 = a5;
  v18 = a3;
  v15 = a6;
  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v11(0);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_9_9();
  v14 = OUTLINED_FUNCTION_15_5();
  v16(v14);
  OUTLINED_FUNCTION_79((uint64_t)v10, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  MEMORY[0x22E2E4D80](v15, v12);
  ComposedTransformer.init(_:_:)(v6, v12, v17);
}

void sub_22A9BDB14()
{
  OUTLINED_FUNCTION_3();
}

void sub_22A9BDB4C()
{
  OUTLINED_FUNCTION_19_6();
}

void sub_22A9BDB54(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t)@<X6>, void (*a6)(uint64_t)@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v10 = a5(0, a2, a3, a4);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_9_9();
  MEMORY[0x24BDAC7A8](v12);
  v14 = OUTLINED_FUNCTION_3_11(v13, v18);
  OUTLINED_FUNCTION_79((uint64_t)v14, v15, v16);
  v17 = OUTLINED_FUNCTION_15_5();
  a6(v17);
  MEMORY[0x22E2E4D80](a8, v10);
  ComposedTransformer.init(_:_:)(v8, a1, a7);
}

void sub_22A9BDC1C()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22A9BDC28(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_22A9BDC30(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9BDD0C + 4 * byte_22ABEA420[v21 - 1]))();
}

void sub_22A9BDD80(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_22A9BDF74(_QWORD *a1)
{
  get_witness_table_18CreateMLComponents11TransformerRzAaBRd__AA16AnnotatedFeatureVy6OutputQzqd_0_G5InputRtd__r_0_lAA08ComposedC0VyAA0deC7AdaptorVyxqd_0_Gqd__GAaBHPyHCTm(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))type metadata accessor for AnnotatedFeatureTransformerAdaptor);
}

void sub_22A9BDF88(_QWORD *a1)
{
  get_witness_table_18CreateMLComponents11TransformerRzAaBRd__AA16AnnotatedFeatureVy5InputQyd__qd_0_G6OutputRtzr_0_lAA08ComposedC0VyxAA0deC7AdaptorVyqd__qd_0_GGAaBHPyHCTm(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))type metadata accessor for AnnotatedFeatureTransformerAdaptor);
}

void sub_22A9BDF9C(_QWORD *a1)
{
  get_witness_table_18CreateMLComponents11TransformerRzAaBRd__AA16AnnotatedFeatureVy6OutputQzqd_0_G5InputRtd__r_0_lAA08ComposedC0VyAA0deC7AdaptorVyxqd_0_Gqd__GAaBHPyHCTm(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))type metadata accessor for AnnotatedPredictionTransformerAdaptor);
}

void get_witness_table_18CreateMLComponents11TransformerRzAaBRd__AA16AnnotatedFeatureVy6OutputQzqd_0_G5InputRtd__r_0_lAA08ComposedC0VyAA0deC7AdaptorVyxqd_0_Gqd__GAaBHPyHCTm(_QWORD *a1, void (*a2)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  a2(255, *a1, a1[2], a1[3]);
  OUTLINED_FUNCTION_17_4();
}

void sub_22A9BDFE4()
{
  type metadata accessor for ComposedTransformer();
}

void sub_22A9BDFF8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ComposedTransformer<A, B>, a1);
  OUTLINED_FUNCTION_21_1();
}

void sub_22A9BE010(_QWORD *a1)
{
  get_witness_table_18CreateMLComponents11TransformerRzAaBRd__AA16AnnotatedFeatureVy5InputQyd__qd_0_G6OutputRtzr_0_lAA08ComposedC0VyxAA0deC7AdaptorVyqd__qd_0_GGAaBHPyHCTm(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))type metadata accessor for AnnotatedPredictionTransformerAdaptor);
}

void get_witness_table_18CreateMLComponents11TransformerRzAaBRd__AA16AnnotatedFeatureVy5InputQyd__qd_0_G6OutputRtzr_0_lAA08ComposedC0VyxAA0deC7AdaptorVyqd__qd_0_GGAaBHPyHCTm(_QWORD *a1, void (*a2)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  a2(255, a1[1], a1[2], a1[4]);
  OUTLINED_FUNCTION_17_4();
}

void sub_22A9BE058()
{
  type metadata accessor for ComposedTransformer();
}

void sub_22A9BE06C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ComposedTransformer<A, B>, a1);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_22A9BE084(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9BE0D0 + 4 * byte_22ABEA433[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9BE104 + 4 * byte_22ABEA42E[v4]))();
}

uint64_t sub_22A9BE104(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9BE10C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9BE114);
  return result;
}

uint64_t sub_22A9BE120(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9BE128);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9BE12C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9BE134(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22A9BE140()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9BE150()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9BE160()
{
  JUMPOUT(0x22E2E4D80);
}

char *OUTLINED_FUNCTION_3_11@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_11_11()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_15_5()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_17_4()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_18_4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[16] + 8))(v0[17], v0[15]);
}

void OUTLINED_FUNCTION_21_6()
{
  type metadata accessor for ComposedTransformer.CodingKeys();
}

uint64_t HumanBodyPoseExtractor.applied(to:eventHandler:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_22A9BE21C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v1 = (void *)v0[3];
  type metadata accessor for VNImageOption(0);
  sub_22A9BED8C(&qword_255B0D920, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22ABE88B8);
  v2 = v1;
  sub_22ABDEAC8();
  v3 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
  v4 = sub_22A9BEBE8(v2);
  v0[4] = v4;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF9B80]), sel_init);
  v0[5] = v5;
  objc_msgSend(v5, sel_setRevision_, 1);
  v6 = OUTLINED_FUNCTION_3_12();
  v0[6] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = OUTLINED_FUNCTION_3_12();
  v0[7] = v7;
  *(_QWORD *)(v7 + 16) = v5;
  v8 = v5;
  v9 = (_QWORD *)swift_task_alloc();
  v0[8] = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B0EEB8);
  *v9 = v0;
  v9[1] = sub_22A9BE38C;
  return sub_22ABDFF74();
}

uint64_t sub_22A9BE38C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_22A9BE414()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22A9BE44C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 32);
  v1 = *(void **)(v0 + 40);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9BE4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22A9BE4C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OUTLINED_FUNCTION_3_12();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B0EEB8);
  *v2 = v0;
  v2[1] = sub_22A9BE560;
  return sub_22ABE0118();
}

uint64_t sub_22A9BE560()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22A9BE5D4()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22A9BE600(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v3;

  v3 = sub_22A9BE65C(a2, a3);
  sub_22ABC56E0(v3, 0);
  sub_22A9BED14(v3, 0);
}

_QWORD *sub_22A9BE65C(_QWORD *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  unsigned int v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  id v33[2];

  v33[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_22ABDF1DC();
  if (v2)
    return a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_2540E8788);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22ABEA720;
  *(_QWORD *)(v5 + 32) = a1;
  sub_22ABDF014();
  sub_22A9BEDCC(0, &qword_255B0EEE8);
  v6 = a1;
  a1 = (_QWORD *)sub_22ABDEFE4();
  swift_bridgeObjectRelease();
  v33[0] = 0;
  v7 = objc_msgSend(a2, sel_performRequests_error_, a1, v33);

  if (!v7)
  {
    v9 = v33[0];
    sub_22ABDD004();

LABEL_7:
    swift_willThrow(v10);
    return a1;
  }
  v8 = v33[0];
  v31 = sub_22A9BED20(v6);
  if (!v31)
  {
    sub_22ABDF17C();
    sub_22A9BED8C(&qword_255B0EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    v10 = sub_22ABDE9FC();
    goto LABEL_7;
  }
  sub_22ABDF1DC();
  if (v31 >> 62)
    goto LABEL_27;
  v12 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v12)
  {
    v33[0] = (id)MEMORY[0x24BEE4AF8];
    sub_22AB4D56C();
    if (v12 < 0)
      __break(1u);
    v13 = 0;
    a1 = v33[0];
    while (v12 != v13)
    {
      if ((v31 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x22E2E3A9C](v13, v31);
      else
        v14 = *(id *)(v31 + 8 * v13 + 32);
      v15 = v14;
      v16 = (void *)sub_22ABDED2C();
      v32 = 0;
      v17 = objc_msgSend(v15, sel_recognizedPointsForGroupKey_error_, v16, &v32);

      v18 = v32;
      if (!v17)
      {
        v28 = v32;
        sub_22ABDD004();

        swift_willThrow(v29);
        OUTLINED_FUNCTION_1_8();
        swift_release();

        return a1;
      }
      type metadata accessor for VNRecognizedPointKey(0);
      sub_22A9BEDCC(0, (unint64_t *)&qword_255B0EEF8);
      sub_22A9BED8C((unint64_t *)&qword_255B0D910, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_22ABE8874);
      v19 = sub_22ABDEAB0();
      v20 = v18;

      sub_22AAD68C8(v19);
      v22 = v21;
      OUTLINED_FUNCTION_2_1();
      if (*(_QWORD *)(v22 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EF00);
        v23 = (void *)sub_22ABDFB90();
      }
      else
      {
        v23 = (void *)MEMORY[0x24BEE4B00];
      }
      v32 = v23;
      v24 = sub_22ABDEAEC();
      sub_22AB04BD4(v24, 1, &v32);

      swift_bridgeObjectRelease();
      v25 = v32;
      v33[0] = a1;
      v26 = a1[2];
      if (v26 >= a1[3] >> 1)
      {
        sub_22AB4D56C();
        a1 = v33[0];
      }
      ++v13;
      a1[2] = v26 + 1;
      v27 = &a1[3 * v26];
      v27[4] = v25;
      v27[5] = 0x6C6C414F50494E56;
      v27[6] = 0xE800000000000000;
      if (v12 == v13)
      {
        OUTLINED_FUNCTION_1_8();
        return a1;
      }
    }
    __break(1u);
LABEL_27:
    sub_22ABDEAEC();
    v30 = sub_22ABDFB60();
    OUTLINED_FUNCTION_2_1();
    if (!v30)
      break;
    sub_22ABDEAEC();
    v12 = sub_22ABDFB60();
    OUTLINED_FUNCTION_2_1();
  }
  OUTLINED_FUNCTION_1_8();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_22A9BEB04(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *a2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_22A9BEB54;
  return HumanBodyPoseExtractor.applied(to:eventHandler:)(v3);
}

uint64_t sub_22A9BEB54(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

unint64_t HumanBodyPoseExtractor.debugDescription.getter()
{
  return 0xD000000000000016;
}

unint64_t sub_22A9BEBCC()
{
  HumanBodyPoseExtractor.debugDescription.getter();
  return 0xD000000000000016;
}

id sub_22A9BEBE8(void *a1)
{
  void *v1;
  void *v3;
  id v4;

  type metadata accessor for VNImageOption(0);
  sub_22A9BED8C(&qword_255B0D920, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22ABE88B8);
  v3 = (void *)sub_22ABDEAA4();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithCIImage_options_, a1, v3);

  return v4;
}

uint64_t sub_22A9BEC88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_22A9B24D4;
  return sub_22A9BE4A4(a1, v5, v4);
}

id sub_22A9BECEC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_cancel);
}

ValueMetadata *type metadata accessor for HumanBodyPoseExtractor()
{
  return &type metadata for HumanBodyPoseExtractor;
}

void sub_22A9BED0C(uint64_t a1)
{
  uint64_t v1;

  sub_22A9BE600(a1, *(_QWORD **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_22A9BED14(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_22A9BED20(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_results);
  if (!v1)
    return 0;
  v2 = v1;
  sub_22A9BEDCC(0, qword_255B0EF08);
  v3 = sub_22ABDEFF0();

  return v3;
}

uint64_t sub_22A9BED8C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22E2E4D80](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22A9BEDCC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_12()
{
  return swift_task_alloc();
}

double ObjectDetectionAnnotation.Annotation.boundingBox.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t ObjectDetectionAnnotation.Annotation.label.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_2_12(a1, a2);
}

void ObjectDetectionAnnotation.Annotation.CodingKeys.init(rawValue:)(char *a1@<X8>)
{
  uint64_t v1;
  char v3;

  sub_22ABDFBE4();
  OUTLINED_FUNCTION_16_9();
  if (v1 == 1)
    v3 = 1;
  else
    v3 = 2;
  if (!v1)
    v3 = 0;
  *a1 = v3;
  OUTLINED_FUNCTION_21();
}

void ObjectDetectionAnnotation.Annotation.CodingKeys.init(stringValue:)(_BYTE *a1@<X8>)
{
  char v2;

  ObjectDetectionAnnotation.Annotation.CodingKeys.init(rawValue:)(&v2);
  *a1 = v2;
  OUTLINED_FUNCTION_22_3();
}

void ObjectDetectionAnnotation.Annotation.CodingKeys.init(intValue:)(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t ObjectDetectionAnnotation.Annotation.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C6562616CLL;
  else
    return 0x616E6964726F6F63;
}

uint64_t ObjectDetectionAnnotation.Annotation.CodingKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C6562616CLL;
  else
    return 0x616E6964726F6F63;
}

uint64_t sub_22A9BEF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.Annotation.CodingKeys, a3);
  return sub_22ABDFFF8();
}

uint64_t sub_22A9BEF80(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.Annotation.CodingKeys, a1);
  return sub_22ABDEF9C();
}

uint64_t sub_22A9BEFCC()
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.Annotation.CodingKeys);
  return sub_22ABDEFB4();
}

uint64_t sub_22A9BF01C()
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.Annotation.CodingKeys);
  return sub_22ABDEFA8();
}

void sub_22A9BF06C(char *a1@<X8>)
{
  ObjectDetectionAnnotation.Annotation.CodingKeys.init(rawValue:)(a1);
}

uint64_t sub_22A9BF078@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ObjectDetectionAnnotation.Annotation.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22A9BF0A8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.Annotation.CodingKeys, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9BF0DC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.Annotation.CodingKeys, a1);
  return sub_22ABE02F8();
}

uint64_t static ObjectDetectionAnnotation.Annotation.== infix(_:_:)()
{
  CGRect *v0;
  CGRect *v1;

  OUTLINED_FUNCTION_6_12();
  if (CGRectEqualToRect(*v0, *v1))
    OUTLINED_FUNCTION_5_10();
  return 0;
}

void type metadata accessor for ObjectDetectionAnnotation.Annotation()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22A9BF180(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  return sub_22A9BF8D4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))static ObjectDetectionAnnotation.Annotation.== infix(_:_:));
}

uint64_t ObjectDetectionAnnotation.imageFileName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22ABDEAEC();
  return v1;
}

uint64_t ObjectDetectionAnnotation.objects.getter()
{
  return sub_22ABDEAEC();
}

uint64_t ObjectDetectionAnnotation.prominentObject.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_2_12(a1, a2);
}

void ObjectDetectionAnnotation.CodingKeys.init(rawValue:)(char *a1@<X8>)
{
  unint64_t v1;
  char v3;

  sub_22ABDFBE4();
  OUTLINED_FUNCTION_16_9();
  v3 = 3;
  if (v1 < 3)
    v3 = v1;
  *a1 = v3;
  OUTLINED_FUNCTION_21();
}

void ObjectDetectionAnnotation.CodingKeys.init(stringValue:)(_BYTE *a1@<X8>)
{
  char v2;

  ObjectDetectionAnnotation.CodingKeys.init(rawValue:)(&v2);
  *a1 = v2;
  OUTLINED_FUNCTION_22_3();
}

void ObjectDetectionAnnotation.CodingKeys.init(intValue:)(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t ObjectDetectionAnnotation.CodingKeys.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x697461746F6E6E61;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x6C69666567616D69;
}

uint64_t ObjectDetectionAnnotation.CodingKeys.stringValue.getter()
{
  return ObjectDetectionAnnotation.CodingKeys.rawValue.getter();
}

uint64_t sub_22A9BF2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.CodingKeys, a3);
  return sub_22ABDFFF8();
}

uint64_t sub_22A9BF340(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.CodingKeys, a1);
  return sub_22ABDEF9C();
}

uint64_t sub_22A9BF38C()
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.CodingKeys);
  return sub_22ABDEFB4();
}

uint64_t sub_22A9BF3DC()
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.CodingKeys);
  return sub_22ABDEFA8();
}

void sub_22A9BF42C(char *a1@<X8>)
{
  ObjectDetectionAnnotation.CodingKeys.init(rawValue:)(a1);
}

uint64_t sub_22A9BF438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ObjectDetectionAnnotation.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22A9BF468(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.CodingKeys, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9BF49C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.CodingKeys, a1);
  return sub_22ABE02F8();
}

uint64_t static ObjectDetectionAnnotation.== infix(_:_:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  BOOL v3;

  OUTLINED_FUNCTION_6_12();
  v3 = *v2 == *v0 && *(_QWORD *)(v1 + 8) == v0[1];
  if (v3 || (sub_22ABDFF68() & 1) != 0)
    OUTLINED_FUNCTION_5_10();
  return 0;
}

void type metadata accessor for ObjectDetectionAnnotation()
{
  JUMPOUT(0x22E2E4CF0);
}

void ObjectDetectionAnnotation.init(from:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  type metadata accessor for ObjectDetectionAnnotation.CodingKeys();
}

void sub_22A9BF630()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9BF640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = OUTLINED_FUNCTION_10_5();
  *(_QWORD *)(v5 - 152) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 176) = v4;
  *(_QWORD *)(v5 - 168) = v2;
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 200) = v3;
  *(_QWORD *)(v5 - 192) = v0;
  *(_QWORD *)(v5 - 88) = v0;
  type metadata accessor for ObjectDetectionAnnotation();
}

void sub_22A9BF694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v13 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&a9 - v15);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  *(_QWORD *)(v11 - 144) = v10;
  OUTLINED_FUNCTION_20_5();
  v17 = *(_QWORD *)(v11 - 136);
  sub_22ABE0298();
  if (!v17)
  {
    *(_QWORD *)(v11 - 232) = v13;
    *(_QWORD *)(v11 - 136) = a1;
    v18 = *(_QWORD *)(v11 - 160);
    v20 = *(_QWORD *)(v11 - 176);
    v19 = *(_QWORD *)(v11 - 168);
    *(_BYTE *)(v11 - 120) = 0;
    *v16 = sub_22ABDFC44();
    v16[1] = v21;
    *(_QWORD *)(v11 - 120) = v19;
    *(_QWORD *)(v11 - 112) = v20;
    v22 = *(_QWORD *)(v11 - 200);
    *(_QWORD *)(v11 - 104) = v18;
    *(_QWORD *)(v11 - 96) = v22;
    *(_QWORD *)(v11 - 88) = *(_QWORD *)(v11 - 192);
    type metadata accessor for ObjectDetectionAnnotation.Annotation();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  OUTLINED_FUNCTION_16();
}

void sub_22A9BF76C(uint64_t a1)
{
  uint64_t v1;

  sub_22ABDF0F8();
  *(_BYTE *)(v1 - 120) = 1;
  *(_QWORD *)(v1 - 128) = MEMORY[0x22E2E4D80](&protocol conformance descriptor for ObjectDetectionAnnotation<A>.Annotation, a1);
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9BF7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_18_5();
  if (v0)
  {
    OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_9_8();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v1 + 16) = *(_QWORD *)(v3 - 72);
    *(_BYTE *)(v3 - 120) = 2;
    v4 = *(_QWORD *)(v3 - 208);
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_13_8();
    v5 = *(_QWORD *)(v3 - 136);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 224) + 32))(v1 + *(int *)(v5 + 64), v4, v2);
    v6 = *(_QWORD *)(v3 - 232);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 + 16))(*(_QWORD *)(v3 - 216), v1, v5);
    OUTLINED_FUNCTION_9_8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  }
  JUMPOUT(0x22A9BF730);
}

void type metadata accessor for ObjectDetectionAnnotation.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22A9BF8AC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_22A9C02B4(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))ObjectDetectionAnnotation.init(from:));
}

uint64_t sub_22A9BF8C8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  return sub_22A9BF8D4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))static ObjectDetectionAnnotation.== infix(_:_:));
}

uint64_t sub_22A9BF8D4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6]);
}

uint64_t sub_22A9BF8EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 120 && a2 == 0xE100000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 121 && a2 == 0xE100000000000000;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x746867696568 && a2 == 0xE600000000000000;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6874646977 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_22ABDFF68();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_22A9BFA58()
{
  return 4;
}

uint64_t sub_22A9BFA60(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22A9BFA88 + 4 * byte_22ABEA790[a1]))(120, 0xE100000000000000);
}

uint64_t sub_22A9BFA88()
{
  return 121;
}

uint64_t sub_22A9BFA90()
{
  return 0x746867696568;
}

uint64_t sub_22A9BFAA4()
{
  return 0x6874646977;
}

void sub_22A9BFAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  OUTLINED_FUNCTION_4_9(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_22A9BFAFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  MEMORY[0x22E2E4D80](&unk_22ABEAD68, a1);
  v4 = sub_22ABDFD58();
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v3 - 152) = 0;
  OUTLINED_FUNCTION_1_9();
  if (!v2)
  {
    *(_BYTE *)(v3 - 152) = 1;
    OUTLINED_FUNCTION_1_9();
    *(_BYTE *)(v3 - 152) = 2;
    OUTLINED_FUNCTION_1_9();
    *(_BYTE *)(v3 - 152) = 3;
    OUTLINED_FUNCTION_1_9();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_22A9BFC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  OUTLINED_FUNCTION_4_9(a1, a2, a3, a4, a5, a6);
}

void sub_22A9BFC54()
{
  OUTLINED_FUNCTION_52_3();
}

double sub_22A9BFC64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double v5;

  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v4);
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  OUTLINED_FUNCTION_20_5();
  sub_22ABE0298();
  if (!v1)
  {
    *(_BYTE *)(v2 - 152) = 0;
    OUTLINED_FUNCTION_0_10();
    v3 = v5;
    *(_BYTE *)(v2 - 152) = 1;
    OUTLINED_FUNCTION_0_10();
    *(_BYTE *)(v2 - 152) = 2;
    OUTLINED_FUNCTION_0_10();
    *(_BYTE *)(v2 - 152) = 3;
    OUTLINED_FUNCTION_0_10();
    OUTLINED_FUNCTION_14_5();
  }
  OUTLINED_FUNCTION_9_8();
  return v3;
}

uint64_t sub_22A9BFD70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ObjectDetectionAnnotation.imageFileName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_22A9BFD94(char *a1, char *a2)
{
  return sub_22A9B0EA4(*a1, *a2);
}

uint64_t sub_22A9BFDB0()
{
  return sub_22A9B1040();
}

uint64_t sub_22A9BFDC4()
{
  return sub_22A9B0EB4();
}

uint64_t sub_22A9BFDD8()
{
  sub_22ABE0244();
  sub_22A9B0EB4();
  return sub_22ABE0280();
}

uint64_t sub_22A9BFE24()
{
  unsigned __int8 *v0;

  return sub_22A9BFA60(*v0);
}

uint64_t sub_22A9BFE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9BF8EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9BFE6C()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22A9BFE94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9BFA58();
  *a1 = result;
  return result;
}

uint64_t sub_22A9BFEC8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEAD68, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9BFEFC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEAD68, a1);
  return sub_22ABE02F8();
}

void sub_22A9BFF30(uint64_t a1, uint64_t *a2)
{
  sub_22A9BFC20(a1, a2[2], a2[3], a2[4], a2[5], a2[6]);
}

void sub_22A9BFF54(double a1, double a2, double a3, double a4)
{
  double *v4;
  uint64_t v5;

  if (!v5)
  {
    *v4 = a1;
    v4[1] = a2;
    v4[2] = a3;
    v4[3] = a4;
  }
}

void sub_22A9BFF6C(uint64_t a1, uint64_t *a2)
{
  sub_22A9BFAB8(a1, a2[2], a2[3], a2[4], a2[5], a2[6]);
}

void ObjectDetectionAnnotation.Annotation.init(from:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  type metadata accessor for ObjectDetectionAnnotation.Annotation.CodingKeys();
}

void sub_22A9C0018()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9C0028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDFCB0();
  *(_QWORD *)(v5 - 184) = v6;
  *(_QWORD *)(v5 - 232) = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 176) = v2;
  *(_QWORD *)(v5 - 168) = v0;
  *(_QWORD *)(v5 - 128) = v0;
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 216) = v4;
  *(_QWORD *)(v5 - 208) = v3;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 200) = v1;
  *(_QWORD *)(v5 - 96) = v1;
  type metadata accessor for ObjectDetectionAnnotation.Annotation();
}

void sub_22A9C008C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v13 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&a9 - v15;
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  *(_QWORD *)(v11 - 192) = v9;
  v17 = *(_QWORD *)(v11 - 72);
  sub_22ABE0298();
  if (!v17)
  {
    *(_QWORD *)(v11 - 72) = v16;
    *(_QWORD *)(v11 - 256) = v13;
    *(_QWORD *)(v11 - 264) = a1;
    v18 = *(_QWORD *)(v11 - 176);
    v19 = *(_QWORD *)(v11 - 216);
    *(_QWORD *)(v11 - 128) = *(_QWORD *)(v11 - 168);
    *(_QWORD *)(v11 - 120) = v19;
    v20 = *(_QWORD *)(v11 - 208);
    *(_QWORD *)(v11 - 112) = v18;
    *(_QWORD *)(v11 - 104) = v20;
    *(_QWORD *)(v11 - 96) = *(_QWORD *)(v11 - 200);
    type metadata accessor for ObjectDetectionAnnotation.Annotation.Coordinates();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for ObjectDetectionAnnotation.Annotation.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void type metadata accessor for ObjectDetectionAnnotation.Annotation.Coordinates()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22A9C022C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9C023C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9C024C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9C025C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9C026C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9C027C()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9C028C()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_22A9C0298(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_22A9C02B4(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))ObjectDetectionAnnotation.Annotation.init(from:));
}

uint64_t sub_22A9C02B4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a4(a1, a2[2], a2[3], a2[4], a2[5], a2[6]);
}

uint64_t sub_22A9C02DC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22A9C02E4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22A9C0368(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v11 = *v12;
    v13 = ((unint64_t)v11 + v6 + 8) & ~v6;
    v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_22A9C044C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_22A9C04A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v12(v10, v11, v7);
  return a1;
}

_QWORD *sub_22A9C0530(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_22A9C05D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_22A9C0640(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_22A9C06C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 24) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return __swift_getEnumTagSinglePayload((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8, v6, v4);
      v16 = *(_QWORD *)(a1 + 8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9C079C + 4 * byte_22ABEA794[(v10 - 1)]))();
}

void sub_22A9C0810(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_22A9C0A08()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_22A9C0A80(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  __int128 v9;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 32) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    v9 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v9;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 32) & ~v5, ((unint64_t)a2 + v5 + 32) & ~v5);
  }
  return v3;
}

_OWORD *sub_22A9C0B24(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

_QWORD *sub_22A9C0B74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_22A9C0BDC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

_OWORD *sub_22A9C0C2C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_22A9C0C7C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v9 = ((v7 + 32) & ~v7) + *(_QWORD *)(v5 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v12 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v12 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload((a1 + v7 + 32) & ~v7, v6, v4);
      return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_18;
LABEL_11:
  v13 = (v11 - 1) << v10;
  if (v9 > 3)
    v13 = 0;
  if (!(_DWORD)v9)
    return (v6 + v13 + 1);
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9C0D3C + 4 * byte_22ABEA7A2[(v9 - 1)]))();
}

void sub_22A9C0D98(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_22A9C0F5C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9C0FA8 + 4 * byte_22ABEA7B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9C0FDC + 4 * byte_22ABEA7B0[v4]))();
}

uint64_t sub_22A9C0FDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9C0FE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9C0FECLL);
  return result;
}

uint64_t sub_22A9C0FF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9C1000);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9C1004(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9C100C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9C1018(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22A9C1064 + 4 * byte_22ABEA7BF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22A9C1098 + 4 * byte_22ABEA7BA[v4]))();
}

uint64_t sub_22A9C1098(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9C10A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9C10A8);
  return result;
}

uint64_t sub_22A9C10B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9C10BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22A9C10C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9C10C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ObjectDetectionAnnotation.Annotation.Coordinates.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t getEnumTagSinglePayload for ColumnSelection.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_22A9C1168(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22A9C11B4 + 4 * byte_22ABEA7C9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22A9C11E8 + 4 * byte_22ABEA7C4[v4]))();
}

uint64_t sub_22A9C11E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9C11F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9C11F8);
  return result;
}

uint64_t sub_22A9C1204(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9C120CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22A9C1210(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9C1218(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22A9C1224()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9C1234()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9C1244()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_10()
{
  return sub_22ABDFC5C();
}

uint64_t OUTLINED_FUNCTION_2_12@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v3 + v2);
}

void OUTLINED_FUNCTION_4_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 - 152) = a2;
  *(_QWORD *)(v6 - 144) = a3;
  *(_QWORD *)(v6 - 136) = a4;
  *(_QWORD *)(v6 - 128) = a5;
  *(_QWORD *)(v6 - 120) = a6;
  type metadata accessor for ObjectDetectionAnnotation.Annotation.Coordinates.CodingKeys();
}

void OUTLINED_FUNCTION_5_10()
{
  type metadata accessor for ObjectDetectionAnnotation.Annotation();
}

uint64_t OUTLINED_FUNCTION_7_9()
{
  return sub_22ABDECFC();
}

uint64_t OUTLINED_FUNCTION_8_9()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 184) + 8))(*(_QWORD *)(v1 - 144), v0);
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  return sub_22ABDFCB0();
}

uint64_t OUTLINED_FUNCTION_12_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_13_8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 184) + 8))(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 152));
}

uint64_t OUTLINED_FUNCTION_14_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_16_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  uint64_t v0;

  return v0;
}

void RandomImageCropper.init(targetSize:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 0;
}

uint64_t RandomImageCropper.init(scale:aspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(_QWORD *)(a3 + 16) = result;
  *(_BYTE *)(a3 + 24) = a2 & 1 | 0x80;
  return result;
}

uint64_t RandomImageCropper.applied<A>(to:generator:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 80) = a5;
  *(_QWORD *)(v7 + 88) = a6;
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = a2;
  *(_OWORD *)(v7 + 96) = *(_OWORD *)v6;
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(v6 + 16);
  *(_BYTE *)(v7 + 120) = *(_BYTE *)(v6 + 24);
  return swift_task_switch();
}

void sub_22A9C13D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  double v5;
  double v6;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  double v24;
  CGFloat v25;
  double v26;
  __int128 v27;
  __int128 v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  CGAffineTransform v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_BYTE *)(v0 + 120);
  objc_msgSend(*(id *)(v0 + 64), sel_extent);
  sub_22A9C15EC(v3, v1, v2, v4, v5, v6);
  v9 = v8;
  v11 = v10;
  OUTLINED_FUNCTION_3_13();
  if (CGRectGetHeight(v34) == v11 && (OUTLINED_FUNCTION_3_13(), CGRectGetWidth(v35) == v9))
  {
    v12 = *(id *)(v0 + 64);
  }
  else
  {
    v13 = OUTLINED_FUNCTION_1_10();
    v16 = sub_22A9C1774((uint64_t)v13, v14, v15, v9);
    v18 = v17;
    v20 = v19;
    v22 = v21;
    OUTLINED_FUNCTION_1_10();
    v37.origin.x = v16;
    v37.origin.y = v18;
    v37.size.width = v20;
    v37.size.height = v22;
    if (!CGRectContainsRect(v36, v37))
    {
      sub_22A9B7B50();
      v31 = swift_allocError();
      *(_OWORD *)v32 = xmmword_22ABEADC0;
      *(_QWORD *)(v32 + 16) = 0xD000000000000032;
      *(_QWORD *)(v32 + 24) = 0x800000022ABE1510;
      *(_BYTE *)(v32 + 32) = 5;
      swift_willThrow(v31);
      OUTLINED_FUNCTION_0_11();
      __asm { BR              X0 }
    }
    v23 = objc_msgSend(*(id *)(v0 + 64), sel_imageByCroppingToRect_, v16, v18, v20, v22);
    OUTLINED_FUNCTION_2_13();
    v25 = -v24;
    OUTLINED_FUNCTION_2_13();
    CGAffineTransformMakeTranslation(&v33, v25, -v26);
    v27 = *(_OWORD *)&v33.c;
    v28 = *(_OWORD *)&v33.tx;
    *(_OWORD *)(v0 + 16) = *(_OWORD *)&v33.a;
    *(_OWORD *)(v0 + 32) = v27;
    *(_OWORD *)(v0 + 48) = v28;
    v29 = objc_msgSend(v23, sel_imageByApplyingTransform_, v0 + 16);

  }
  OUTLINED_FUNCTION_0_11();
  __asm { BR              X1 }
}

uint64_t sub_22A9C15EC(uint64_t result, uint64_t a2, uint64_t a3, char a4, double a5, double a6)
{
  double v8;
  double v12;
  unint64_t v14;
  const char *v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;

  if ((a4 & 0x80) == 0)
  {
    v8 = *(double *)&result;
    goto LABEL_9;
  }
  sub_22A99CE8C();
  sub_22A9A1898();
  result = sub_22ABDEA5C();
  if ((a4 & 1) != 0)
  {
    v8 = ceil(v20 * a5);
    v12 = v20 * a6;
    goto LABEL_7;
  }
  if (a5 < a6)
  {
    v8 = ceil(v20 * a5);
    v12 = v8 / *(double *)&a3;
LABEL_7:
    *(double *)&a2 = ceil(v12);
    goto LABEL_9;
  }
  *(double *)&a2 = ceil(v20 * a6);
  v8 = ceil(*(double *)&a2 * *(double *)&a3);
LABEL_9:
  if (*(double *)&a2 > a6 || v8 > a5)
  {
    v14 = 0xD000000000000032;
    v15 = "The crop rectangle is outside of the image bounds.";
LABEL_21:
    v17 = (unint64_t)(v15 - 32) | 0x8000000000000000;
    sub_22A9B7B50();
    v18 = swift_allocError();
    *(_QWORD *)v19 = 0xD000000000000012;
    *(_QWORD *)(v19 + 8) = 0x800000022ABEADC0;
    *(_QWORD *)(v19 + 16) = v14;
    *(_QWORD *)(v19 + 24) = v17;
    *(_BYTE *)(v19 + 32) = 5;
    return swift_willThrow(v18);
  }
  if (*(double *)&a2 < 1.0 || v8 < 1.0)
  {
    v14 = 0xD000000000000037;
    v15 = "The crop rectangle width and height must be at least 1.";
    goto LABEL_21;
  }
  return result;
}

double sub_22A9C1774(uint64_t a1, double a2, double a3, double a4)
{
  double v6;

  sub_22A9C1948(a1, 0.0, 1.0);
  return ceil((a2 - a4) * v6);
}

uint64_t sub_22A9C17D4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v7 + 16) = a1;
  v11 = *a2;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 24) = v12;
  *v12 = v7;
  v12[1] = sub_22A9BEB54;
  return RandomImageCropper.applied<A>(to:generator:eventHandler:)(v11, a3, v13, v14, a6, a7);
}

ValueMetadata *type metadata accessor for RandomImageCropper()
{
  return &type metadata for RandomImageCropper;
}

uint64_t _s18CreateMLComponents18RandomImageCropperV16CroppingStrategyOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (*(_BYTE *)(a1 + 24) & 0x7E | (*(unsigned __int8 *)(a1 + 24) >> 7)) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s18CreateMLComponents18RandomImageCropperV16CroppingStrategyOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_22A9C1908(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 7;
}

uint64_t sub_22A9C1914(uint64_t result)
{
  *(_BYTE *)(result + 24) &= ~0x80u;
  return result;
}

uint64_t sub_22A9C1924(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = *(_BYTE *)(result + 24) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for RandomImageCropper.CroppingStrategy()
{
  return &type metadata for RandomImageCropper.CroppingStrategy;
}

uint64_t sub_22A9C1948(uint64_t result, double a2, double a3)
{
  double v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v6 = result;
  v7 = 0;
  result = MEMORY[0x22E2E4E7C](&v7, 8);
  if (v5 * ((double)(v7 & 0x1FFFFFFFFFFFFFLL) * 1.11022302e-16) + a2 == a3)
    return sub_22A9C1948(v6, a2, a3);
  return result;
}

id OUTLINED_FUNCTION_2_13()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 704));
}

id OUTLINED_FUNCTION_3_13()
{
  uint64_t v0;
  uint64_t v1;

  return objc_msgSend(*(id *)(v0 + 64), (SEL)(v1 + 704));
}

void FullyConnectedNetworkClassifier.makeTransformer()(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1[3];
  v2 = a1[6];
  v3 = a1[9];
  sub_22ABDEAEC();
  v4 = sub_22ABDEAEC();
  sub_22AB593D0(v4, v1, v2, v3);
  sub_22AAF05E8();
}

uint64_t FullyConnectedNetworkClassifier.update<A>(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  const void *v7;
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8[46] = a6;
  v8[47] = a7;
  v8[44] = a4;
  v8[45] = a5;
  v8[42] = a2;
  v8[43] = a3;
  v8[41] = a1;
  v11 = sub_22ABDDA0C();
  v8[48] = v11;
  v8[49] = *(_QWORD *)(v11 - 8);
  v8[50] = OUTLINED_FUNCTION_0_0();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F248);
  v8[51] = v12;
  v8[52] = *(_QWORD *)(v12 - 8);
  v8[53] = OUTLINED_FUNCTION_0_0();
  v8[54] = a5[2];
  v8[55] = a5[4];
  v13 = sub_22ABDE8A0();
  v8[56] = v13;
  v8[57] = *(_QWORD *)(v13 - 8);
  v8[58] = OUTLINED_FUNCTION_0_0();
  v14 = a5[3];
  v8[59] = v14;
  v8[60] = type metadata accessor for AnnotatedFeature(255, v13, v14, v15);
  sub_22ABDF5D8();
  v8[61] = OUTLINED_FUNCTION_0_0();
  v8[62] = *(_QWORD *)(a6 - 8);
  v8[63] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_26_3(v8 + 2, v7);
  return swift_task_switch();
}

uint64_t sub_22A9C1C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 496) + 16))(*(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 368));
  v1 = sub_22ABDF11C();
  *(_QWORD *)(v0 + 512) = v1;
  *(_QWORD *)(v0 + 304) = v1;
  v2 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v2);
  if ((sub_22ABDF434() & 1) == 0)
  {
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 432);
    v5 = *(_QWORD *)(v0 + 440);
    v6 = *(_QWORD **)(v0 + 360);
    v7 = v6[5];
    v8 = v6[6];
    v9 = v6[7];
    v10 = v6[8];
    v11 = v6[9];
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 472);
    *(_QWORD *)(v0 + 176) = v5;
    *(_QWORD *)(v0 + 184) = v7;
    *(_QWORD *)(v0 + 192) = v8;
    *(_QWORD *)(v0 + 200) = v9;
    *(_QWORD *)(v0 + 208) = v10;
    *(_QWORD *)(v0 + 216) = v11;
    type metadata accessor for FullyConnectedNetworkClassifierModel();
  }
  OUTLINED_FUNCTION_23();
  sub_22A9B7B50();
  v3 = swift_allocError();
  *(_QWORD *)v4 = 0xD000000000000027;
  *(_QWORD *)(v4 + 8) = 0x800000022ABE15D0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_BYTE *)(v4 + 32) = 2;
  swift_willThrow(v3);
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9C2184(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 536) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(double *)(v4 + 544) = a1;
  return swift_task_switch();
}

uint64_t sub_22A9C2208()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];
  char v16;
  uint64_t v17;

  v1 = *(double *)(v0 + 544);
  v2 = *(_QWORD **)(v0 + 520);
  v3 = *(int *)(v0 + 556);
  v12 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 400);
  v13 = *(_QWORD *)(v0 + 408);
  v14 = *(_QWORD *)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 392);
  v6 = *(void (**)(_QWORD *))(v0 + 344);
  v7 = *(_QWORD *)(v0 + 328);
  swift_isUniquelyReferenced_nonNull_native();
  v15[0] = v2;
  sub_22A9C3750(0xD000000000000011, 0x800000022ABE1590, v1);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + v3);
  sub_22A9C2C80(v2);
  v10 = v9;
  swift_bridgeObjectRelease();
  v15[0] = 0xD00000000000001FLL;
  v15[1] = 0x800000022ABE15B0;
  v15[2] = v8;
  v15[3] = v8;
  v16 = 0;
  v17 = v10;
  v6(v15);
  sub_22A9ADA48((uint64_t)v6);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_28_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v13);
  OUTLINED_FUNCTION_11_12();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9C2364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 416);
  v1 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 392);
  sub_22A9ADA48(*(_QWORD *)(v0 + 344));
  OUTLINED_FUNCTION_28_4(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22A9C23FC()
{
  type metadata accessor for FullyConnectedNetworkClassifierModel();
}

void sub_22A9C245C()
{
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  type metadata accessor for FullyConnectedNetworkClassifier();
}

uint64_t sub_22A9C2498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 - 72);
  sub_22AB82054();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (v1)
    **(_QWORD **)(v0 + 56) = v1;
  return result;
}

void sub_22A9C24FC()
{
  sub_22A9C23FC();
}

uint64_t sub_22A9C2540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  char v32;
  uint64_t v33;
  void (*v34)(uint64_t, void (*)(char *, uint64_t, uint64_t));
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *);
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v42 = a8;
  v43 = a5;
  v56 = a1;
  v57 = a2;
  v41 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  v55 = v11;
  MEMORY[0x24BDAC7A8](v12);
  v54 = (char *)v40 - v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v58 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v46 = (char *)v40 - v17;
  v18 = sub_22ABDF5D8();
  v44 = *(_QWORD *)(v18 - 8);
  v45 = v18;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_87();
  v52 = v20;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v40 - v22;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_87();
  v40[1] = v25;
  MEMORY[0x24BDAC7A8](v26);
  v51 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v27);
  v50 = (char *)v40 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a6;
  v59 = swift_getAssociatedTypeWitness();
  v47 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v53 = (char *)v40 - v29;
  v30 = sub_22ABDEE70();
  v60 = sub_22ABDE9F0();
  sub_22ABDF974();
  sub_22ABDF8CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v48, v15);
  v51 = v15;
  result = sub_22ABDEE58();
  if (v30 < 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  if (v30)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      OUTLINED_FUNCTION_25_4();
      result = OUTLINED_FUNCTION_23_7((uint64_t)v23);
      if (v32)
        goto LABEL_19;
      v33 = OUTLINED_FUNCTION_31_4();
      v34(v33, v55);
      if (v8)
      {
        OUTLINED_FUNCTION_6_13();
        swift_release();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 32))(v42, v55, v43);
        return OUTLINED_FUNCTION_3_14();
      }
      OUTLINED_FUNCTION_3_14();
      OUTLINED_FUNCTION_18_6();
      if (!--v30)
      {
        v35 = v52;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v35 = v52;
LABEL_9:
  sub_22ABDF650();
  OUTLINED_FUNCTION_23_7(v35);
  v36 = v46;
  if (v32)
  {
    v37 = v52;
LABEL_15:
    OUTLINED_FUNCTION_6_13();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v37, v45);
    return v60;
  }
  else
  {
    v55 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 32);
    v37 = v52;
    while (1)
    {
      v55(v36, v37, AssociatedTypeWitness);
      v38 = OUTLINED_FUNCTION_31_4();
      v39(v38, v54);
      if (v8)
        break;
      OUTLINED_FUNCTION_3_14();
      OUTLINED_FUNCTION_18_6();
      OUTLINED_FUNCTION_25_4();
      OUTLINED_FUNCTION_23_7(v37);
      if (v32)
        goto LABEL_15;
    }
    OUTLINED_FUNCTION_3_14();
    OUTLINED_FUNCTION_6_13();
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v42, v54, v43);
  }
}

unint64_t sub_22A9C2940()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B0F258;
  if (!qword_255B0F258)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0F250);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255B0F258);
  }
  return result;
}

void sub_22A9C2984(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _OWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _OWORD v43[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F2A8);
    v2 = (_QWORD *)OUTLINED_FUNCTION_19_7();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  OUTLINED_FUNCTION_32_5();
  v5 = -(-1 << v4);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v3;
  v8 = &v40;
  v9 = &v42;
  sub_22ABDEAEC();
  v10 = 0;
  v11 = MEMORY[0x24BEE4AD8] + 8;
  v12 = MEMORY[0x24BEE1768];
  while (1)
  {
    while (1)
    {
      if (v7)
      {
        v37 = (v7 - 1) & v7;
        v13 = __clz(__rbit64(v7)) | (v10 << 6);
      }
      else
      {
        if (__OFADD__(v10, 1))
          goto LABEL_40;
        OUTLINED_FUNCTION_29_4();
        if (v15 == v16)
        {
LABEL_37:
          sub_22A9C38B4();
          OUTLINED_FUNCTION_7_10();
          return;
        }
        v17 = *(_QWORD *)(v35 + 8 * v14);
        v18 = v14;
        if (!v17)
        {
          OUTLINED_FUNCTION_8_10();
          if (v15 == v16)
            goto LABEL_37;
          OUTLINED_FUNCTION_15_6();
          if (!v17)
          {
            OUTLINED_FUNCTION_8_10();
            if (v15 == v16)
              goto LABEL_37;
            OUTLINED_FUNCTION_15_6();
            if (!v17)
            {
              OUTLINED_FUNCTION_8_10();
              if (v15 == v16)
                goto LABEL_37;
              OUTLINED_FUNCTION_15_6();
              if (!v17)
              {
                OUTLINED_FUNCTION_29_4();
                if (v15 == v16)
                  goto LABEL_37;
                v17 = *(_QWORD *)(v35 + 8 * v19);
                if (!v17)
                {
                  while (!__OFADD__(v19, 1))
                  {
                    OUTLINED_FUNCTION_8_10();
                    if (v15 == v16)
                      goto LABEL_37;
                    v17 = *(_QWORD *)(v35 + 8 * v18);
                    v19 = v20 + 1;
                    if (v17)
                      goto LABEL_31;
                  }
                  goto LABEL_41;
                }
                v18 = v19;
              }
            }
          }
        }
LABEL_31:
        v37 = (v17 - 1) & v17;
        v13 = __clz(__rbit64(v17)) + (v18 << 6);
        v10 = v18;
      }
      v21 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v13);
      v38 = *v21;
      v39 = v21[1];
      sub_22ABDEAEC();
      swift_dynamicCast();
      sub_22A9C38BC(v8, v9);
      sub_22A9C38BC(v9, v43);
      sub_22A9C38BC(v43, &v41);
      v22 = sub_22AA03688();
      v23 = v22;
      if ((v24 & 1) == 0)
        break;
      v36 = v10;
      v25 = v9;
      v26 = v8;
      v27 = v1;
      v28 = v12;
      v29 = v11;
      v30 = (_QWORD *)(v2[6] + 16 * v22);
      swift_bridgeObjectRelease();
      *v30 = v38;
      v30[1] = v39;
      v11 = v29;
      v12 = v28;
      v1 = v27;
      v8 = v26;
      v9 = v25;
      v10 = v36;
      v31 = (_OWORD *)(v2[7] + 32 * v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      sub_22A9C38BC(&v41, v31);
      v7 = v37;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v22;
    v32 = (_QWORD *)(v2[6] + 16 * v22);
    *v32 = v38;
    v32[1] = v39;
    sub_22A9C38BC(&v41, (_OWORD *)(v2[7] + 32 * v22));
    v33 = v2[2];
    v16 = __OFADD__(v33, 1);
    v34 = v33 + 1;
    if (v16)
      goto LABEL_39;
    v2[2] = v34;
    v7 = v37;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_22A9C2C80(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[3];
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;

  if (a1[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8780);
    v2 = OUTLINED_FUNCTION_19_7();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  OUTLINED_FUNCTION_32_5();
  v5 = -(-1 << v4);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v3;
  v8 = v2 + 64;
  sub_22ABDEAEC();
  swift_retain();
  v9 = 0;
  if (!v7)
    goto LABEL_9;
LABEL_8:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v19 = (_QWORD *)(a1[6] + 16 * v11);
    v20 = v19[1];
    v21 = *(_QWORD *)(a1[7] + 8 * v11);
    *(_QWORD *)&v35 = *v19;
    *((_QWORD *)&v35 + 1) = v20;
    *(_QWORD *)&v34[0] = v21;
    sub_22ABDEAEC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
    swift_dynamicCast();
    v22 = v35;
    sub_22A9C38BC(&v36, v33);
    sub_22A9C38BC(v33, &v35);
    sub_22A9C38BC(&v35, v34);
    sub_22ABE0244();
    sub_22ABDEAEC();
    sub_22ABDEDB0();
    swift_bridgeObjectRelease();
    v23 = sub_22ABE0280();
    v24 = -1 << *(_BYTE *)(v2 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v8 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_40;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_40:
    *(_QWORD *)(v8 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v27) = v22;
    sub_22A9C38BC(v34, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v27));
    ++*(_QWORD *)(v2 + 16);
    if (v7)
      goto LABEL_8;
LABEL_9:
    if (__OFADD__(v9, 1))
      goto LABEL_44;
    OUTLINED_FUNCTION_29_4();
    if (v13 == v14)
      goto LABEL_42;
    v15 = *(_QWORD *)(v32 + 8 * v12);
    v16 = v12;
    if (!v15)
    {
      OUTLINED_FUNCTION_8_10();
      if (v13 == v14)
        goto LABEL_42;
      OUTLINED_FUNCTION_15_6();
      if (!v15)
      {
        OUTLINED_FUNCTION_8_10();
        if (v13 == v14)
          goto LABEL_42;
        OUTLINED_FUNCTION_15_6();
        if (!v15)
        {
          OUTLINED_FUNCTION_8_10();
          if (v13 == v14)
            goto LABEL_42;
          OUTLINED_FUNCTION_15_6();
          if (!v15)
            break;
        }
      }
    }
LABEL_30:
    v7 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
  }
  OUTLINED_FUNCTION_29_4();
  if (v13 == v14)
  {
LABEL_42:
    swift_release();
    sub_22A9C38B4();
    OUTLINED_FUNCTION_7_10();
    return;
  }
  v15 = *(_QWORD *)(v32 + 8 * v17);
  if (v15)
  {
    v16 = v17;
    goto LABEL_30;
  }
  while (!__OFADD__(v17, 1))
  {
    OUTLINED_FUNCTION_8_10();
    if (v13 == v14)
      goto LABEL_42;
    v15 = *(_QWORD *)(v32 + 8 * v16);
    v17 = v18 + 1;
    if (v15)
      goto LABEL_30;
  }
LABEL_45:
  __break(1u);
}

uint64_t sub_22A9C2FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A99DE80;
  return FullyConnectedNetworkClassifier.update<A>(_:with:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

_OWORD *sub_22A9C303C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *result;

  OUTLINED_FUNCTION_4_10();
  OUTLINED_FUNCTION_0_12();
  if (v9)
  {
    __break(1u);
LABEL_10:
    result = (_OWORD *)sub_22ABE0190();
    __break(1u);
    return result;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F270);
  if ((OUTLINED_FUNCTION_5_11() & 1) != 0)
  {
    OUTLINED_FUNCTION_22_4();
    OUTLINED_FUNCTION_20_6();
    if (!v13)
      goto LABEL_10;
    v10 = v12;
  }
  v14 = *v3;
  if ((v11 & 1) != 0)
  {
    v15 = (_OWORD *)(*(_QWORD *)(v14 + 56) + 32 * v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return sub_22A9C38BC(a1, v15);
  }
  else
  {
    sub_22AA044A4(v10, a2, a3, (uint64_t)a1, v14);
    return (_OWORD *)OUTLINED_FUNCTION_1_11();
  }
}

void sub_22A9C310C(uint64_t a1, void *a2, uint64_t a3)
{
  sub_22A9C3234(a1, a2, a3, &qword_255B0F2D0, (void (*)(uint64_t, void *, uint64_t, uint64_t))sub_22AA04560);
}

void sub_22A9C3120(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  _QWORD **v5;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;

  sub_22AA036F0();
  OUTLINED_FUNCTION_0_12();
  if (v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v11;
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F2C8);
  if ((OUTLINED_FUNCTION_13_9() & 1) == 0)
    goto LABEL_5;
  v16 = sub_22AA036F0();
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    sub_22ABE0190();
    __break(1u);
    return;
  }
  v14 = v16;
LABEL_5:
  v18 = *v5;
  if ((v15 & 1) != 0)
  {
    v19 = v18[7] + 32 * v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)v19 = a1;
    *(_QWORD *)(v19 + 8) = a2;
    *(_QWORD *)(v19 + 16) = a3;
    *(_BYTE *)(v19 + 24) = a4 & 1;
    OUTLINED_FUNCTION_3();
  }
  else
  {
    sub_22AA04564(v14, a5, a1, a2, a3, a4 & 1, v18);
  }
}

void sub_22A9C3220(uint64_t a1, void *a2, uint64_t a3)
{
  sub_22A9C3234(a1, a2, a3, &qword_255B0F2B8, (void (*)(uint64_t, void *, uint64_t, uint64_t))sub_22AA04560);
}

void sub_22A9C3234(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t, void *, uint64_t, uint64_t))
{
  uint64_t *v5;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  sub_22AA036C0((uint64_t)a2);
  OUTLINED_FUNCTION_0_12();
  if (v11)
  {
    __break(1u);
LABEL_10:
    sub_22A9C38CC();
    sub_22ABE0190();
    __break(1u);
    return;
  }
  v12 = v9;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  if ((OUTLINED_FUNCTION_14_6() & 1) != 0)
  {
    sub_22AA036C0((uint64_t)a2);
    OUTLINED_FUNCTION_20_6();
    if (!v15)
      goto LABEL_10;
    v12 = v14;
  }
  v16 = *v5;
  if ((v13 & 1) != 0)
  {
    v17 = *(_QWORD *)(v16 + 56);

    *(_QWORD *)(v17 + 8 * v12) = a1;
  }
  else
  {
    a5(v12, a2, a1, v16);
    v18 = a2;
  }
}

void sub_22A9C3324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD **v4;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t *v17;

  sub_22AA03688();
  OUTLINED_FUNCTION_0_12();
  if (v11)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v9;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F2A0);
  if ((sub_22ABDFA64() & 1) == 0)
    goto LABEL_5;
  v14 = sub_22AA03688();
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_9:
    sub_22ABE0190();
    __break(1u);
    return;
  }
  v12 = v14;
LABEL_5:
  v16 = *v4;
  if ((v13 & 1) != 0)
  {
    v17 = (uint64_t *)(v16[7] + 16 * v12);
    swift_bridgeObjectRelease();
    *v17 = a1;
    v17[1] = a2;
    OUTLINED_FUNCTION_3();
  }
  else
  {
    sub_22AA045CC(v12, a3, a4, a1, a2, v16);
    sub_22ABDEAEC();
  }
}

void sub_22A9C3430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;

  OUTLINED_FUNCTION_4_10();
  OUTLINED_FUNCTION_0_12();
  if (v9)
  {
    __break(1u);
LABEL_10:
    sub_22ABE0190();
    __break(1u);
    return;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F278);
  if ((OUTLINED_FUNCTION_5_11() & 1) != 0)
  {
    sub_22AA03688();
    OUTLINED_FUNCTION_20_6();
    if (!v13)
      goto LABEL_10;
    v10 = v12;
  }
  v14 = *v3;
  if ((v11 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v10) = a1;
  }
  else
  {
    sub_22AA04618(v10, a2, a3, a1, v14);
    OUTLINED_FUNCTION_1_11();
  }
}

uint64_t sub_22A9C34FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  OUTLINED_FUNCTION_4_10();
  OUTLINED_FUNCTION_0_12();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F290);
  if ((OUTLINED_FUNCTION_5_11() & 1) == 0)
    goto LABEL_5;
  v12 = OUTLINED_FUNCTION_22_4();
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_9:
    result = sub_22ABE0190();
    __break(1u);
    return result;
  }
  v10 = v12;
LABEL_5:
  v14 = *v3;
  if ((v11 & 1) != 0)
  {
    v15 = *(_QWORD *)(v14 + 56);
    v16 = v15 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for TensorDescription() - 8) + 72) * v10;
    return sub_22A9C3870(a1, v16);
  }
  else
  {
    sub_22AA04640(v10, a2, a3, a1, v14);
    return OUTLINED_FUNCTION_1_11();
  }
}

uint64_t sub_22A9C35D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22A9C362C(a1, a2, a3, a4, &qword_255B0F288, (uint64_t (*)(_QWORD))MEMORY[0x24BE63098], sub_22AA04688);
}

uint64_t sub_22A9C35F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22A9C362C(a1, a2, a3, a4, &qword_255B0F280, (uint64_t (*)(_QWORD))MEMORY[0x24BE62F58], sub_22AA04694);
}

uint64_t sub_22A9C3610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22A9C362C(a1, a2, a3, a4, &qword_255B0F298, (uint64_t (*)(_QWORD))MEMORY[0x24BE62580], sub_22AA046A0);
}

uint64_t sub_22A9C362C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  unint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  OUTLINED_FUNCTION_4_10();
  OUTLINED_FUNCTION_0_12();
  if (v15)
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = v13;
  v17 = v14;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  if ((OUTLINED_FUNCTION_13_9() & 1) == 0)
    goto LABEL_5;
  v18 = sub_22AA03688();
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    result = sub_22ABE0190();
    __break(1u);
    return result;
  }
  v16 = v18;
LABEL_5:
  v20 = *v7;
  if ((v17 & 1) != 0)
  {
    v21 = *(_QWORD *)(v20 + 56);
    v22 = a6(0);
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v16, a1, v22);
  }
  else
  {
    a7(v16, a2, a3, a1, v20);
    return sub_22ABDEAEC();
  }
}

uint64_t sub_22A9C3750(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t *v3;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  uint64_t result;
  char v13;
  uint64_t v14;

  sub_22AA03684(a1, a2);
  OUTLINED_FUNCTION_0_12();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F2B0);
  result = OUTLINED_FUNCTION_14_6();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_22AA03684(a1, a2);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_9:
    result = sub_22ABE0190();
    __break(1u);
    return result;
  }
  v10 = result;
LABEL_5:
  v14 = *v3;
  if ((v11 & 1) != 0)
  {
    *(double *)(*(_QWORD *)(v14 + 56) + 8 * v10) = a3;
  }
  else
  {
    sub_22AA046FC(v10, a1, a2, v14);
    return sub_22ABDEAEC();
  }
  return result;
}

uint64_t sub_22A9C3844(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkClassifier<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A9C3870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TensorDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A9C38B4()
{
  return swift_release();
}

_OWORD *sub_22A9C38BC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_22A9C38CC()
{
  unint64_t result;

  result = qword_255B0F2C0;
  if (!qword_255B0F2C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255B0F2C0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
}

unint64_t OUTLINED_FUNCTION_4_10()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_5_11()
{
  return sub_22ABDFA64();
}

uint64_t OUTLINED_FUNCTION_6_13()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 192) + 8))(v0, *(_QWORD *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_12()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_9()
{
  return sub_22ABDFA64();
}

uint64_t OUTLINED_FUNCTION_14_6()
{
  return sub_22ABDFA64();
}

uint64_t OUTLINED_FUNCTION_18_6()
{
  return sub_22ABDF92C();
}

uint64_t OUTLINED_FUNCTION_19_7()
{
  return sub_22ABDFB90();
}

unint64_t OUTLINED_FUNCTION_22_4()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_23_7(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  return sub_22ABDF650();
}

void *OUTLINED_FUNCTION_26_3(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_28_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_31_4()
{
  uint64_t v0;

  return v0;
}

uint64_t PreprocessingEstimator.preprocessor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t PreprocessingEstimator.preprocessor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*PreprocessingEstimator.preprocessor.modify())()
{
  return nullsub_1;
}

uint64_t PreprocessingEstimator.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t PreprocessingEstimator.estimator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*PreprocessingEstimator.estimator.modify())()
{
  return nullsub_1;
}

void PreprocessingEstimator.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for PreprocessingEstimator();
}

uint64_t sub_22A9C3B78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for PreprocessingEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t PreprocessingEstimator.preprocessed<A>(from:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v8 = *(_QWORD *)(a4 + 16);
  v7[9] = v8;
  v7[10] = *(_QWORD *)(v8 - 8);
  v7[11] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9C3C08()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = v0[5];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[10] + 16))(v0[11], v0[8], v0[9]);
  v2 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v2;
  v3 = *(_QWORD *)(v1 + 32);
  *v2 = v0;
  v2[1] = sub_22A9C3C80;
  return Transformer.applied<A>(to:eventHandler:)(v0[2], v0[3], v0[4], v0[9], v0[6], v3, v0[7]);
}

uint64_t sub_22A9C3C80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 104) = v1;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 80) + 8))(*(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 72));
  if (v1)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_4();
  }
  else
  {
    OUTLINED_FUNCTION_11_3();
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
  }
}

uint64_t sub_22A9C3D10()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PreprocessingEstimator.fitted<A>(toPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v10 = a5[2];
  v8[10] = v10;
  v8[11] = *(_QWORD *)(v10 - 8);
  v8[12] = OUTLINED_FUNCTION_0_0();
  v11 = a5[3];
  v8[13] = v11;
  v8[14] = *(_QWORD *)(v11 - 8);
  v8[15] = OUTLINED_FUNCTION_0_0();
  v8[16] = a5[5];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[17] = AssociatedTypeWitness;
  v8[18] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9C3E08()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v1 = v0[16];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[14] + 16))(v0[15], v0[9] + *(int *)(v0[6] + 52), v0[13]);
  v4 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 24)
                                                                                              + *(_QWORD *)(v1 + 24));
  v2 = (_QWORD *)swift_task_alloc();
  v0[21] = v2;
  *v2 = v0;
  v2[1] = sub_22A9C3E98;
  return v4(v0[20], v0[3], v0[4], v0[5], v0[7], v0[8], v0[13], v0[16]);
}

uint64_t sub_22A9C3E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22A9C3F14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[17];
  v4 = v0[18];
  v5 = v0[12];
  v6 = v0[10];
  v7 = v0[2];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[11] + 16))(v5, v0[9], v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v2, v3);
  swift_getAssociatedConformanceWitness();
  ComposedTransformer.init(_:_:)(v5, v6, v7);
}

uint64_t sub_22A9C3FC4()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9C4008()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PreprocessingEstimator.fitted<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v15;

  v8[6] = a5;
  v8[7] = v7;
  v8[4] = a3;
  v8[5] = a4;
  v8[3] = a1;
  v15 = (_QWORD *)swift_task_alloc();
  v8[8] = v15;
  *v15 = v8;
  v15[1] = sub_22A9C40F8;
  return PreprocessingEstimator.preprocessed<A>(from:eventHandler:)(a2, a3, a4, a5, a6, a7);
}

uint64_t sub_22A9C40F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9C4158()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 80);
  sub_22ABDF1DC();
  if (v1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    swift_getAssociatedTypeWitness();
    v4 = sub_22ABDF0F8();
    v5 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v4);
    *v3 = v0;
    v3[1] = sub_22A9C424C;
    return PreprocessingEstimator.fitted<A>(toPreprocessed:eventHandler:)(*(_QWORD *)(v0 + 24), v0 + 16, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 48), v4, v5);
  }
}

uint64_t sub_22A9C424C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_4();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_22A9C42B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void PreprocessingEstimator.encode(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTransformer();
}

uint64_t sub_22A9C437C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(v2 + *(int *)(a1 + 52), v1, v4, v3);
}

uint64_t PreprocessingEstimator.decode(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a3;
  v24 = *(_QWORD *)(a2 + 16);
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v25 = v6 - v5;
  v8 = *(_QWORD *)(v7 + 40);
  v9 = *(_QWORD *)(v7 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - v15;
  v22 = v3;
  v17 = v26;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(a1, v9, v8);
  if (!v17)
  {
    v19 = v24;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v25, v22, v24);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v16, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    ComposedTransformer.init(_:_:)(v25, v19, v23);
  }
  return result;
}

uint64_t sub_22A9C4554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9B24D4;
  return PreprocessingEstimator.fitted<A>(to:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

void sub_22A9C45EC()
{
  PreprocessingEstimator.encode(_:to:)();
}

uint64_t sub_22A9C4600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return PreprocessingEstimator.decode(from:)(a1, a2, a3);
}

uint64_t sub_22A9C46F8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9C47D4 + 4 * byte_22ABEAE30[v21 - 1]))();
}

void sub_22A9C4848(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_22A9C4A3C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, int *), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *(*v33)(uint64_t *__return_ptr, int *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = v5;
  v33 = a3;
  v34 = a5;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a2 + 16);
  if (v11 >= v10)
    v12 = *(_QWORD *)(a1 + 16);
  else
    v12 = *(_QWORD *)(a2 + 16);
  v37 = MEMORY[0x24BEE4AF8];
  sub_22AB4D280();
  v13 = v37;
  v30 = v11;
  v31 = v10;
  v27 = v5;
  v28 = a2;
  v29 = a1;
  v26 = v12;
  if (v12)
  {
    v14 = (int *)(a1 + 32);
    v15 = v10;
    v16 = a2 + 32;
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    swift_retain();
    v17 = v15;
    v32 = a4;
    while (v17)
    {
      if (!v11)
        goto LABEL_23;
      OUTLINED_FUNCTION_7_11(*v14, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, SHIDWORD(v36));
      OUTLINED_FUNCTION_9_10();
      v38 = v6;
      v18 = *(_QWORD *)(v6 + 16);
      v6 = v18 + 1;
      if (v18 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        OUTLINED_FUNCTION_24_5();
        v13 = v38;
      }
      --v11;
      *(_QWORD *)(v13 + 16) = v6;
      *(_DWORD *)(v13 + 4 * v18 + 32) = v35;
      --v17;
      v16 += 4;
      ++v14;
      if (!--v12)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    swift_retain();
LABEL_13:
    v20 = v30;
    v19 = v31;
    if (v31 <= v30)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return;
    }
    v21 = v29 + 32;
    v22 = v26;
    while (v22 < v19)
    {
      if (v20 == v22)
        goto LABEL_21;
      if (v22 >= v20)
        goto LABEL_25;
      OUTLINED_FUNCTION_7_11(*(_DWORD *)(v21 + 4 * v22), v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, SHIDWORD(v36));
      OUTLINED_FUNCTION_9_10();
      v39 = v6;
      v24 = *(_QWORD *)(v6 + 16);
      v23 = *(_QWORD *)(v6 + 24);
      v6 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        OUTLINED_FUNCTION_24_5();
        v13 = v39;
      }
      ++v22;
      *(_QWORD *)(v13 + 16) = v6;
      *(_DWORD *)(v13 + 4 * v24 + 32) = v35;
      v20 = v30;
      v19 = v31;
      if (v31 == v22)
        goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t TimeSeriesClassifier.Model.stride.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 104));
}

uint64_t TimeSeriesClassifier.Model.stride.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(a2 + 104)) = result;
  return result;
}

uint64_t (*TimeSeriesClassifier.Model.stride.modify())()
{
  return nullsub_1;
}

void sub_22A9C4C88()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_33();
  type metadata accessor for TimeSeriesClassifier.Model();
}

void sub_22A9C4D48(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  OUTLINED_FUNCTION_19_8();
  __swift_storeEnumTagSinglePayload(v9, v10, v11, v8);
  *(_QWORD *)(v1 + a1[27]) = 0;
  v12 = (_QWORD *)(v1 + a1[22]);
  *v12 = v4;
  v12[1] = v5;
  v13 = *(_QWORD *)(v6 - 176);
  *(_QWORD *)(v1 + a1[23]) = *(_QWORD *)(v6 - 184);
  *(_QWORD *)(v1 + a1[24]) = v13;
  *(_QWORD *)(v1 + a1[25]) = *(_QWORD *)(v6 - 168);
  v14 = v13 / 2;
  if (v13 / 2 <= 1)
    v14 = 1;
  *(_QWORD *)(v1 + a1[26]) = v14;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22AB593D4(v4, v5, *(_QWORD *)(v6 - 192), v3, v2);
}

uint64_t sub_22A9C4DE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22AA06400(a1, v3, v1);
  sub_22ABDD5D4();
  OUTLINED_FUNCTION_19_8();
  __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
  type metadata accessor for LSTMFCN(0);
  sub_22A9C6C74();
  sub_22ABDD754();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v4);
  return sub_22A9C6CB4(v2, v5);
}

uint64_t TimeSeriesClassifier.Model.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a1;
  v6[6] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B0);
  v6[9] = OUTLINED_FUNCTION_0_0();
  v6[10] = *(_QWORD *)(a5 + 16);
  v6[11] = *(_QWORD *)(a5 + 32);
  v8 = sub_22ABDE8A0();
  v6[12] = v8;
  v6[13] = *(_QWORD *)(v8 - 8);
  v6[14] = OUTLINED_FUNCTION_0_0();
  v9 = sub_22ABDD718();
  v6[15] = v9;
  v6[16] = *(_QWORD *)(v9 - 8);
  v6[17] = OUTLINED_FUNCTION_0_0();
  v10 = sub_22ABDDA0C();
  v6[18] = v10;
  v6[19] = *(_QWORD *)(v10 - 8);
  v6[20] = OUTLINED_FUNCTION_38_0();
  v6[21] = OUTLINED_FUNCTION_38_0();
  v6[22] = OUTLINED_FUNCTION_38_0();
  v6[23] = OUTLINED_FUNCTION_38_0();
  return swift_task_switch();
}

_QWORD *sub_22A9C4F9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_4_11() + 16);
  swift_bridgeObjectRelease();
  if (v1 != 2)
    goto LABEL_7;
  result = (_QWORD *)OUTLINED_FUNCTION_4_11();
  if (result[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_15;
  }
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = result[5];
  swift_bridgeObjectRelease();
  if (v5 != *(_QWORD *)(v4 + *(int *)(v3 + 92)))
  {
LABEL_7:
    v13 = OUTLINED_FUNCTION_4_11();
    sub_22A9B7B50();
    v11 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v12 = v13;
    *(_QWORD *)(v12 + 8) = 0xD000000000000036;
    *(_QWORD *)(v12 + 16) = 0x800000022ABE1600;
    goto LABEL_8;
  }
  result = (_QWORD *)OUTLINED_FUNCTION_4_11();
  if (result[2])
  {
    v6 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 64);
    v8 = result[4];
    swift_bridgeObjectRelease();
    v9 = *(_QWORD *)(v7 + *(int *)(v6 + 96));
    if (v8 >= v9)
    {
      v15 = *(_QWORD *)(v0 + 56);
      if (*(uint64_t *)(*(_QWORD *)(v0 + 64) + *(int *)(v15 + 108)) >= 1)
      {
        v16 = *(_QWORD *)(v0 + 168);
        v52 = *(_QWORD *)(v0 + 176);
        v17 = *(_QWORD *)(v0 + 152);
        v18 = *(_QWORD *)(v0 + 160);
        v19 = *(_QWORD *)(v0 + 144);
        v50 = *(_QWORD *)(v0 + 184);
        v51 = v19;
        v53 = *(_QWORD *)(v0 + 136);
        v20 = *(_QWORD *)(v0 + 120);
        v21 = *(_QWORD *)(v0 + 112);
        v49 = *(_QWORD *)(v0 + 64);
        v46 = *(_QWORD *)(v0 + 88);
        v22 = *(_QWORD *)(v0 + 80);
        v43 = *(_QWORD *)(v0 + 128);
        v44 = v22;
        v54 = *(_QWORD *)(v0 + 72);
        v48 = *(uint64_t **)(v0 + 40);
        (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(v21, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 96));
        v45 = *(_QWORD *)(v15 + 40);
        sub_22AA5A180(v21, v22, v18);
        sub_22ABDD8BC();
        v23 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        v23(v18, v19);
        v47 = v23;
        OUTLINED_FUNCTION_19_8();
        __swift_storeEnumTagSinglePayload(v24, v25, v26, v20);
        sub_22A9C5528();
        sub_22A9AD754(v54, &qword_255B0F3B0);
        v23(v16, v19);
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v53, v20);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v50, v52, v19);
        *(_QWORD *)(v0 + 16) = sub_22ABDD9C4();
        v27 = (_QWORD *)swift_task_alloc();
        v27[2] = v44;
        v42 = *(_QWORD *)(v15 + 24);
        v27[3] = v42;
        v27[4] = v46;
        v27[5] = v45;
        v28 = *(_QWORD *)(v15 + 48);
        v27[6] = v28;
        v29 = *(_QWORD *)(v15 + 56);
        v27[7] = v29;
        v30 = *(_QWORD *)(v15 + 64);
        v27[8] = v30;
        v31 = *(_QWORD *)(v15 + 72);
        v27[9] = v31;
        v27[10] = v49;
        v32 = (_QWORD *)swift_task_alloc();
        v32[2] = v44;
        v32[3] = v42;
        v32[4] = v46;
        v32[5] = v45;
        v32[6] = v28;
        v32[7] = v29;
        v32[8] = v30;
        v32[9] = v31;
        v32[10] = sub_22A9C6AF4;
        v32[11] = v27;
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B8);
        v35 = type metadata accessor for Classification(0, v42, v31, v34);
        v36 = sub_22A9C8D60((unint64_t *)&qword_255B0F3C0, &qword_255B0F3B8, MEMORY[0x24BEE2FC0]);
        v38 = sub_22A9C2540((uint64_t)sub_22A9C6B28, (uint64_t)v32, v33, v35, MEMORY[0x24BEE4078], v36, MEMORY[0x24BEE40A8], v37);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        *(_QWORD *)(v0 + 24) = v38;
        v39 = sub_22ABDF0F8();
        v40 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v39);
        ClassificationDistribution.init<A>(_:)((char *)(v0 + 24), v42, v39, v31, v40, v48);
        v47(v50, v51);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v14 = *(uint64_t (**)(void))(v0 + 8);
        return (_QWORD *)v14();
      }
      sub_22ABDF7A0();
      sub_22ABDEDC8();
      OUTLINED_FUNCTION_32_6();
      OUTLINED_FUNCTION_32_6();
      sub_22A9A0888();
      v11 = OUTLINED_FUNCTION_53();
      *v41 = 0;
      v41[1] = 0xE000000000000000;
LABEL_9:
      swift_willThrow(v11);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v14 = *(uint64_t (**)(void))(v0 + 8);
      return (_QWORD *)v14();
    }
    v10 = OUTLINED_FUNCTION_4_11();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = v9;
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22A9B7B50();
    v11 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v12 = v10;
    *(_QWORD *)(v12 + 8) = 0xD000000000000025;
    *(_QWORD *)(v12 + 16) = 0x800000022ABE16C0;
LABEL_8:
    *(_QWORD *)(v12 + 24) = 0;
    *(_BYTE *)(v12 + 32) = 6;
    goto LABEL_9;
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_22A9C5528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_12();
  v30 = v1;
  v31 = v0;
  v3 = v2;
  v32 = v5;
  v33 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F540);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v10 = sub_22ABDDA0C();
  v29 = *(_QWORD *)(v10 - 8);
  v11 = v29;
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F548);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_23_8();
  v16 = v14 - v15;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v28 - v19;
  sub_22AA06710((uint64_t)&v28 - v19, (uint64_t)&v28 + *(int *)(v18 + 48) - v19, v3, v30, MEMORY[0x24BEE4AF8]);
  v21 = v16 + *(int *)(v12 + 48);
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 16);
  v23 = v10;
  v22(v16, v20, v10);
  v24 = *(_QWORD *)(sub_22ABDD718() - 8);
  v25 = OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_27_8(v25, v26, v27);
  OUTLINED_FUNCTION_27_8(v32, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32));
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v16, v23);
  sub_22ABDD70C();
  sub_22ABDD64C();
  OUTLINED_FUNCTION_11_13();
  sub_22A9AD754(v9, &qword_255B0F540);
  OUTLINED_FUNCTION_30_6();
  sub_22ABDD6F4();
  OUTLINED_FUNCTION_11_13();
  sub_22A9AD754(v9, &qword_255B0F540);
  OUTLINED_FUNCTION_30_6();
  sub_22ABDDA90();
  sub_22A9AD754((uint64_t)v20, &qword_255B0F548);
  OUTLINED_FUNCTION_16();
}

void sub_22A9C5704()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_22ABDF5D8();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for TimeSeriesClassifier.Model();
}

void sub_22A9C57C8()
{
  sub_22AB593D8();
}

uint64_t sub_22A9C57EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float v7;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v4, v2);
  result = __swift_getEnumTagSinglePayload(v3, 1, v0);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v2);
    return Classification.init(label:probability:)(v3, v0, v1, *(_QWORD *)(v6 - 200), v7);
  }
  return result;
}

uint64_t sub_22A9C5868(uint64_t a1, uint64_t (*a2)(_QWORD, float))
{
  return a2(*(_QWORD *)a1, *(float *)(a1 + 8));
}

uint64_t sub_22A9C589C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_22A99DE80;
  return TimeSeriesClassifier.Model.applied(to:eventHandler:)(a1, a2, v10, v11, a5);
}

void sub_22A9C5904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_12();
  v27 = v3;
  v28 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v7 = v6 - v5;
  v8 = sub_22ABDD718();
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_14_7();
  v26 = sub_22ABDDA0C();
  v9 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_23_8();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v25 - v17;
  OUTLINED_FUNCTION_20_7(v7);
  sub_22A9C5528();
  sub_22A9AD754(v7, &qword_255B0F3B0);
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v1, v8);
    v19 = v15;
    v20 = v26;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v19, v26);
    sub_22ABDD994();
    v21 = sub_22ABDD9C4();
    v22 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v22(v12, v20);
    v23 = v28;
    sub_22ABDEAEC();
    v24 = sub_22A9C5ABC(v21, v23, v27);
    ((void (*)(char *, uint64_t, __n128))v22)(v18, v20, v24);
  }
  OUTLINED_FUNCTION_16();
}

__n128 sub_22A9C5ABC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __n128 result;
  __n128 v16;
  _QWORD v17[2];
  char v18;
  __n128 v19;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F530);
  sub_22A9C8D60(&qword_255B0F538, &qword_255B0F530, MEMORY[0x24BEE2B40]);
  KeyPath = swift_getKeyPath();
  swift_retain();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22A9C4A3C(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr, int *))sub_22A9C8D28, 0, KeyPath);
  v8 = v7;
  swift_release();
  sub_22A9DC788(v8);
  v9 = swift_getKeyPath();
  swift_retain();
  sub_22A9C4A3C(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr, int *))sub_22A9C8D28, 0, v9);
  swift_release();
  sub_22A9DC8F8();
  sub_22A9DE750(a1, a2, (void (*)(unint64_t *__return_ptr, unint64_t *))sub_22A9C8D28, v10, (uint64_t)v17);
  swift_bridgeObjectRelease();
  v11 = v17[0];
  v12 = v17[1];
  v13 = v18;
  v14 = v20;
  v16 = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v11;
  *(_QWORD *)(a3 + 8) = v12;
  *(_BYTE *)(a3 + 16) = v13;
  result = v16;
  *(__n128 *)(a3 + 24) = v16;
  *(_QWORD *)(a3 + 40) = v14;
  return result;
}

void sub_22A9C5C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  OUTLINED_FUNCTION_12();
  v14 = v12;
  v58 = v11;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_14_7();
  v57 = sub_22ABDD718();
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_0();
  v56 = v22;
  v61 = sub_22ABDDA0C();
  v23 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_23_8();
  v54 = v24 - v25;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v48 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v60 = (uint64_t)&v48 - v30;
  v31 = *(_QWORD *)(v18 + 16);
  sub_22AA36270();
  v33 = v32;
  if (v31)
  {
    v48 = v20;
    v49 = v16;
    v34 = v23;
    v35 = v18 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    v53 = v34;
    v36 = *(_QWORD *)(v34 + 72);
    v50 = v18;
    v51 = v36;
    sub_22ABDEAEC();
    v52 = v13;
    while (1)
    {
      OUTLINED_FUNCTION_19_8();
      v37 = v57;
      __swift_storeEnumTagSinglePayload(v38, v39, v40, v57);
      v41 = v56;
      sub_22A9C5528();
      if (v14)
        break;
      v59 = 0;
      sub_22A9AD754(v13, &qword_255B0F3B0);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v41, v37);
      v42 = v53;
      v43 = v61;
      OUTLINED_FUNCTION_27_8(v60, (uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32));
      v44 = v54;
      sub_22ABDD9A0();
      sub_22ABDD9AC();
      v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v45(v44, v43);
      v46 = *(_QWORD *)(v33 + 16);
      if (v46 >= *(_QWORD *)(v33 + 24) >> 1)
      {
        sub_22AA36270();
        v33 = v47;
      }
      *(_QWORD *)(v33 + 16) = v46 + 1;
      *(_DWORD *)(v33 + 4 * v46 + 32) = a11;
      v45(v60, v61);
      v13 = v52;
      v35 += v51;
      --v31;
      v14 = v59;
      if (!v31)
      {
        swift_bridgeObjectRelease();
        v20 = v48;
        v16 = v49;
        goto LABEL_9;
      }
    }
    sub_22A9AD754(v13, &qword_255B0F3B0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    sub_22ABDEAEC();
    sub_22A9C5ABC(v33, v16, v20);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9C5F20()
{
  unint64_t v0;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_22A9C5F6C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_16_10 + 4
                                                                                                 * byte_22ABEAE98[a1]))(0x6C65646F6DLL, 0xE500000000000000);
}

unint64_t sub_22A9C5FA4()
{
  return OUTLINED_FUNCTION_13_10();
}

uint64_t sub_22A9C5FC0()
{
  return OUTLINED_FUNCTION_29_5();
}

uint64_t sub_22A9C5FD0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_16_10_0
                                                            + 4 * byte_22ABEAE9F[a1]))(0x6C65646F6DLL, 0xE500000000000000);
}

unint64_t sub_22A9C6008()
{
  return OUTLINED_FUNCTION_13_10();
}

uint64_t sub_22A9C6024()
{
  return OUTLINED_FUNCTION_29_5();
}

uint64_t sub_22A9C6034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2E4D80](&unk_22ABEAFC8, a3);
  return sub_22ABDFFF8();
}

uint64_t sub_22A9C6088(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEAFC8, a1);
  return sub_22ABDEF9C();
}

uint64_t sub_22A9C60D4()
{
  MEMORY[0x22E2E4D80](&unk_22ABEAFC8);
  return sub_22ABDEFB4();
}

uint64_t sub_22A9C6124()
{
  MEMORY[0x22E2E4D80](&unk_22ABEAFC8);
  return sub_22ABDEFA8();
}

uint64_t sub_22A9C6174@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9C5F20();
  *a1 = result;
  return result;
}

uint64_t sub_22A9C61A8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22A9C5F6C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22A9C61D8()
{
  unsigned __int8 *v0;

  return sub_22A9C5FD0(*v0);
}

uint64_t sub_22A9C61F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9C5F68();
  *a1 = result;
  return result;
}

void sub_22A9C6224(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_22A9C6230(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEB068, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9C6264(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEB068, a1);
  return sub_22ABE02F8();
}

void TimeSeriesClassifier.Model.encode(to:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12();
  type metadata accessor for LSTMFCN(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v0);
  _s14descr24F4BBF01C5ModelV10CodingKeysOMa();
}

void sub_22A9C6324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  MEMORY[0x22E2E4D80](&unk_22ABEB068, a1);
  v12 = sub_22ABDFD58();
  *(_QWORD *)(v11 - 160) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&a9 - v14;
  v16 = (_QWORD *)OUTLINED_FUNCTION_28_5();
  __swift_project_boxed_opaque_existential_1(v16, v17);
  *(_QWORD *)(v11 - 168) = v15;
  v18 = *(_QWORD *)(v11 - 184);
  sub_22ABE02B0();
  sub_22A9C6B68(v18, v10);
  v19 = *(_QWORD *)(v11 - 176);
  sub_22AA06ED0();
  if (!v19)
  {
    *(_QWORD *)(v11 - 144) = v20;
    *(_QWORD *)(v11 - 136) = v21;
    *(_QWORD *)(v11 - 128) = v22;
    *(_BYTE *)(v11 - 65) = 0;
    sub_22A9C6BAC();
    sub_22ABDFD4C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 - 144) = *(_QWORD *)(v18 + *(int *)(v9 + 88));
    *(_BYTE *)(v11 - 65) = 1;
    sub_22ABDF0F8();
    *(_QWORD *)(v11 - 152) = *(_QWORD *)(v11 - 208);
    OUTLINED_FUNCTION_37_0();
  }
  (*(void (**)(_QWORD, _QWORD))(v13 + 8))(*(_QWORD *)(v11 - 168), *(_QWORD *)(v11 - 160));
  OUTLINED_FUNCTION_16();
}

void sub_22A9C648C()
{
  uint64_t v0;

  sub_22ABDFD4C();
  if (!v0)
  {
    OUTLINED_FUNCTION_2_14(2);
    OUTLINED_FUNCTION_2_14(3);
    OUTLINED_FUNCTION_2_14(4);
    OUTLINED_FUNCTION_2_14(5);
    OUTLINED_FUNCTION_2_14(6);
  }
  OUTLINED_FUNCTION_28_5();
  JUMPOUT(0x22A9C63D4);
}

void TimeSeriesClassifier.Model.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0();
  type metadata accessor for LSTMFCN(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0();
  _s14descr24F4BBF01C5ModelV10CodingKeysOMa();
}

void sub_22A9C661C()
{
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9C662C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 - 184) = a1;
  v9 = sub_22ABDFCB0();
  *(_QWORD *)(v8 - 248) = v9;
  *(_QWORD *)(v8 - 216) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v8 - 152) = *(_QWORD *)(v8 - 192);
  *(_QWORD *)(v8 - 144) = v2;
  *(_QWORD *)(v8 - 224) = v2;
  *(_QWORD *)(v8 - 136) = v4;
  *(_QWORD *)(v8 - 128) = v7;
  *(_QWORD *)(v8 - 280) = v1;
  *(_QWORD *)(v8 - 120) = v1;
  *(_QWORD *)(v8 - 112) = v5;
  *(_QWORD *)(v8 - 256) = v5;
  *(_QWORD *)(v8 - 104) = v6;
  *(_QWORD *)(v8 - 96) = v3;
  *(_QWORD *)(v8 - 288) = v3;
  type metadata accessor for TimeSeriesClassifier.Model();
}

void sub_22A9C66A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v11 = *(_QWORD *)(a1 - 8);
  v12 = MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  v15 = (char *)&a9 + *(int *)(v12 + 84) - v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  *(_QWORD *)(v9 - 192) = v15;
  OUTLINED_FUNCTION_20_7((uint64_t)v15);
  *(_QWORD *)(v9 - 208) = a1;
  *(_QWORD *)(v9 - 200) = v14;
  v17 = *(int *)(a1 + 108);
  *(_QWORD *)&v14[v17] = 0;
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v9 - 168), *(_QWORD *)(*(_QWORD *)(v9 - 168) + 24));
  v18 = *(_QWORD *)(v9 - 176);
  sub_22ABE0298();
  if (!v18)
  {
    *(_QWORD *)(v9 - 176) = v16;
    v19 = *(_QWORD *)(v9 - 240);
    *(_QWORD *)(v9 - 304) = v17;
    *(_QWORD *)(v9 - 184) = v11;
    *(_BYTE *)(v9 - 65) = 0;
    sub_22A9C6BF4();
    sub_22ABDFC8C();
    sub_22AA074EC();
    sub_22A9C6C30(v19, *(_QWORD *)(v9 - 200));
    sub_22ABDD5D4();
    OUTLINED_FUNCTION_19_8();
    __swift_storeEnumTagSinglePayload(v20, v21, v22, v23);
    sub_22A9C6C74();
    v24 = *(_QWORD *)(v9 - 272);
    sub_22ABDD754();
    __swift_storeEnumTagSinglePayload(v24, 0, 1, *(_QWORD *)(v9 - 176));
    sub_22A9C6CB4(v24, *(_QWORD *)(v9 - 192));
    sub_22ABDF0F8();
    *(_BYTE *)(v9 - 65) = 1;
    *(_QWORD *)(v9 - 160) = *(_QWORD *)(v9 - 256);
    OUTLINED_FUNCTION_37_0();
  }
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v9 - 168));
  sub_22A9AD754(*(_QWORD *)(v9 - 192), &qword_255B0F3D0);
  OUTLINED_FUNCTION_16();
}

void sub_22A9C68E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  sub_22ABDFC8C();
  if (v0)
  {
    v3 = OUTLINED_FUNCTION_26_4();
    OUTLINED_FUNCTION_28_4(v3, v4);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v2 - 168));
    sub_22A9C6CFC(v1);
    JUMPOUT(0x22A9C67DCLL);
  }
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9C6A78()
{
  TimeSeriesClassifier.Model.init(from:)();
}

void sub_22A9C6AAC()
{
  TimeSeriesClassifier.Model.encode(to:)();
}

uint64_t sub_22A9C6AC0(_DWORD *a1, uint64_t a2, int a3)
{
  *a1 = a3;
  return a2;
}

uint64_t sub_22A9C6ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(_QWORD *)a1 = a4;
  *(_BYTE *)(a1 + 8) = a5 & 1;
  return a2;
}

uint64_t sub_22A9C6AE8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a3;
  return a2;
}

void sub_22A9C6AF4()
{
  sub_22A9C5704();
}

uint64_t sub_22A9C6B28(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, float))(v1 + 80))(*(_QWORD *)a1, *(float *)(a1 + 8));
}

void _s14descr24F4BBF01C5ModelV10CodingKeysOMa()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22A9C6B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LSTMFCN(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22A9C6BAC()
{
  unint64_t result;

  result = qword_255B0F3C8;
  if (!qword_255B0F3C8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE3C0, &type metadata for LSTMFCN.Storage);
    atomic_store(result, (unint64_t *)&qword_255B0F3C8);
  }
  return result;
}

void type metadata accessor for TimeSeriesClassifier.Model()
{
  JUMPOUT(0x22E2E4CF0);
}

unint64_t sub_22A9C6BF4()
{
  unint64_t result;

  result = qword_255B0F3E0;
  if (!qword_255B0F3E0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE398, &type metadata for LSTMFCN.Storage);
    atomic_store(result, (unint64_t *)&qword_255B0F3E0);
  }
  return result;
}

uint64_t sub_22A9C6C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LSTMFCN(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22A9C6C74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B0F3E8[0];
  if (!qword_255B0F3E8[0])
  {
    v1 = type metadata accessor for LSTMFCN(255);
    result = MEMORY[0x22E2E4D80](&unk_22ABEE338, v1);
    atomic_store(result, qword_255B0F3E8);
  }
  return result;
}

uint64_t sub_22A9C6CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A9C6CFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LSTMFCN(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22A9C6D38()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for LSTMFCN(319);
  if (v0 <= 0x3F)
  {
    sub_22A9C8B54();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_22A9C6DDC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v63;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD73C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for LSTMFCN(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_22ABDD8A4();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v14 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
    v15 = *(int *)(v14 + 20);
    v16 = &v10[v15];
    v17 = &v11[v15];
    v18 = sub_22ABDDAE4();
    v63 = a3;
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v19(v16, v17, v18);
    v20 = v8[6];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v13((char *)a1 + v20, (char *)a2 + v20, v12);
    v19(&v21[*(int *)(v14 + 20)], &v22[*(int *)(v14 + 20)], v18);
    v23 = v8[7];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v13((char *)a1 + v23, (char *)a2 + v23, v12);
    v19(&v24[*(int *)(v14 + 20)], &v25[*(int *)(v14 + 20)], v18);
    v26 = v8[8];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_22ABDD7D8();
    v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    v30(v27, v28, v29);
    v31 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
    v30(&v27[*(int *)(v31 + 24)], &v28[*(int *)(v31 + 24)], v29);
    *(_QWORD *)&v27[*(int *)(v31 + 28)] = *(_QWORD *)&v28[*(int *)(v31 + 28)];
    v32 = v8[9];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v30((char *)a1 + v32, (char *)a2 + v32, v29);
    v30(&v33[*(int *)(v31 + 24)], &v34[*(int *)(v31 + 24)], v29);
    *(_QWORD *)&v33[*(int *)(v31 + 28)] = *(_QWORD *)&v34[*(int *)(v31 + 28)];
    v30((char *)a1 + v8[11], (char *)a2 + v8[11], v29);
    *(uint64_t *)((char *)a1 + v8[12]) = *(uint64_t *)((char *)a2 + v8[12]);
    *(uint64_t *)((char *)a1 + v8[13]) = *(uint64_t *)((char *)a2 + v8[13]);
    v35 = v63[21];
    v36 = (_OWORD *)((char *)a1 + v35);
    v37 = (_OWORD *)((char *)a2 + v35);
    v38 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, (uint64_t)v38))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      *v36 = *v37;
      v41 = v38[12];
      v42 = (char *)v36 + v41;
      v43 = (char *)v37 + v41;
      v44 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
        __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
      }
      *(_DWORD *)((char *)v36 + v38[13]) = *(_DWORD *)((char *)v37 + v38[13]);
      *(_DWORD *)((char *)v36 + v38[14]) = *(_DWORD *)((char *)v37 + v38[14]);
      *(_QWORD *)((char *)v36 + v38[15]) = *(_QWORD *)((char *)v37 + v38[15]);
      v46 = v38[16];
      v47 = (char *)v36 + v46;
      v48 = (char *)v37 + v46;
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
      v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
      v50(v47, v48, v49);
      v50((char *)v36 + v38[17], (char *)v37 + v38[17], v49);
      v51 = v38[18];
      v52 = (char *)v36 + v51;
      v53 = (char *)v37 + v51;
      if (__swift_getEnumTagSinglePayload((uint64_t)v37 + v51, 1, v49))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        v50(v52, v53, v49);
        __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v49);
      }
      *(_DWORD *)((char *)v36 + v38[19]) = *(_DWORD *)((char *)v37 + v38[19]);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, (uint64_t)v38);
    }
    v55 = v63[22];
    v56 = v63[23];
    v57 = (uint64_t *)((char *)a1 + v55);
    v58 = (uint64_t *)((char *)a2 + v55);
    v59 = v58[1];
    *v57 = *v58;
    v57[1] = v59;
    *(uint64_t *)((char *)a1 + v56) = *(uint64_t *)((char *)a2 + v56);
    v60 = v63[25];
    *(uint64_t *)((char *)a1 + v63[24]) = *(uint64_t *)((char *)a2 + v63[24]);
    *(uint64_t *)((char *)a1 + v60) = *(uint64_t *)((char *)a2 + v60);
    v61 = v63[27];
    *(uint64_t *)((char *)a1 + v63[26]) = *(uint64_t *)((char *)a2 + v63[26]);
    *(uint64_t *)((char *)a1 + v61) = *(uint64_t *)((char *)a2 + v61);
    sub_22ABDEAEC();
    sub_22ABDEAEC();
  }
  return a1;
}

uint64_t sub_22A9C7238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;

  v4 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (int *)type metadata accessor for LSTMFCN(0);
  v6 = a1 + v5[5];
  v7 = sub_22ABDD8A4();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v10 = v6 + *(int *)(v9 + 20);
  v11 = sub_22ABDDAE4();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v13 = a1 + v5[6];
  v8(v13, v7);
  v12(v13 + *(int *)(v9 + 20), v11);
  v14 = a1 + v5[7];
  v8(v14, v7);
  v12(v14 + *(int *)(v9 + 20), v11);
  v15 = a1 + v5[8];
  v16 = sub_22ABDD7D8();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
  v17(v15, v16);
  v18 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v17(v15 + *(int *)(v18 + 24), v16);
  v19 = a1 + v5[9];
  v17(v19, v16);
  v17(v19 + *(int *)(v18 + 24), v16);
  v17(a1 + v5[11], v16);
  v20 = a1 + *(int *)(a2 + 84);
  v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  if (!__swift_getEnumTagSinglePayload(v20, 1, (uint64_t)v21))
  {
    v22 = v20 + v21[12];
    v23 = sub_22ABDD5D4();
    if (!__swift_getEnumTagSinglePayload(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
    v24 = v20 + v21[16];
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
    v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
    v26(v24, v25);
    v26(v20 + v21[17], v25);
    v27 = v20 + v21[18];
    if (!__swift_getEnumTagSinglePayload(v27, 1, v25))
      v26(v27, v25);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A9C749C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v5 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  v6 = (int *)type metadata accessor for LSTMFCN(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDD8A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v13 = *(int *)(v12 + 20);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_22ABDDAE4();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v18 = v6[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v11(a1 + v18, a2 + v18, v10);
  v17(v19 + *(int *)(v12 + 20), v20 + *(int *)(v12 + 20), v16);
  v21 = v6[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v11(a1 + v21, a2 + v21, v10);
  v17(v22 + *(int *)(v12 + 20), v23 + *(int *)(v12 + 20), v16);
  v24 = v6[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_22ABDD7D8();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v28(v25, v26, v27);
  v29 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v28(v25 + *(int *)(v29 + 24), v26 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v25 + *(int *)(v29 + 28)) = *(_QWORD *)(v26 + *(int *)(v29 + 28));
  v30 = v6[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v28(a1 + v30, a2 + v30, v27);
  v28(v31 + *(int *)(v29 + 24), v32 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v31 + *(int *)(v29 + 28)) = *(_QWORD *)(v32 + *(int *)(v29 + 28));
  v28(a1 + v6[11], a2 + v6[11], v27);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_QWORD *)(a1 + v6[13]) = *(_QWORD *)(a2 + v6[13]);
  v33 = a3[21];
  v34 = (_OWORD *)(a1 + v33);
  v35 = (_OWORD *)(a2 + v33);
  v36 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, (uint64_t)v36))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    *v34 = *v35;
    v38 = v36[12];
    v39 = (char *)v34 + v38;
    v40 = (char *)v35 + v38;
    v41 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
    }
    *(_DWORD *)((char *)v34 + v36[13]) = *(_DWORD *)((char *)v35 + v36[13]);
    *(_DWORD *)((char *)v34 + v36[14]) = *(_DWORD *)((char *)v35 + v36[14]);
    *(_QWORD *)((char *)v34 + v36[15]) = *(_QWORD *)((char *)v35 + v36[15]);
    v43 = v36[16];
    v44 = (char *)v34 + v43;
    v45 = (char *)v35 + v43;
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
    v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
    v47(v44, v45, v46);
    v47((char *)v34 + v36[17], (char *)v35 + v36[17], v46);
    v48 = v36[18];
    v49 = (char *)v34 + v48;
    v50 = (char *)v35 + v48;
    if (__swift_getEnumTagSinglePayload((uint64_t)v35 + v48, 1, v46))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v47(v49, v50, v46);
      __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v46);
    }
    *(_DWORD *)((char *)v34 + v36[19]) = *(_DWORD *)((char *)v35 + v36[19]);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, (uint64_t)v36);
  }
  v52 = a3[22];
  v53 = a3[23];
  v54 = (_QWORD *)(a1 + v52);
  v55 = (_QWORD *)(a2 + v52);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  *(_QWORD *)(a1 + v53) = *(_QWORD *)(a2 + v53);
  v57 = a3[25];
  *(_QWORD *)(a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);
  v58 = a3[27];
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  *(_QWORD *)(a1 + v58) = *(_QWORD *)(a2 + v58);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22A9C78C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  int EnumTagSinglePayload;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;

  v5 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a1, a2, v5);
  v6 = (int *)type metadata accessor for LSTMFCN(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDD8A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v13 = *(int *)(v12 + 20);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_22ABDDAE4();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v18 = v6[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v11(a1 + v18, a2 + v18, v10);
  v17(v19 + *(int *)(v12 + 20), v20 + *(int *)(v12 + 20), v16);
  v21 = v6[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v11(a1 + v21, a2 + v21, v10);
  v17(v22 + *(int *)(v12 + 20), v23 + *(int *)(v12 + 20), v16);
  v24 = v6[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_22ABDD7D8();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24);
  v28(v25, v26, v27);
  v29 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v28(v25 + *(int *)(v29 + 24), v26 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v25 + *(int *)(v29 + 28)) = *(_QWORD *)(v26 + *(int *)(v29 + 28));
  v30 = v6[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v28(a1 + v30, a2 + v30, v27);
  v28(v31 + *(int *)(v29 + 24), v32 + *(int *)(v29 + 24), v27);
  v33 = *(int *)(v29 + 28);
  v34 = a3;
  *(_QWORD *)(v31 + v33) = *(_QWORD *)(v32 + v33);
  v28(a1 + v6[11], a2 + v6[11], v27);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_QWORD *)(a1 + v6[13]) = *(_QWORD *)(a2 + v6[13]);
  v35 = a3[21];
  v36 = (char *)(a1 + v35);
  v37 = (char *)(a2 + v35);
  v38 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  LODWORD(v27) = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, (uint64_t)v38);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, (uint64_t)v38);
  if (!(_DWORD)v27)
  {
    if (EnumTagSinglePayload)
    {
      sub_22A9AD754((uint64_t)v36, &qword_255B0F3D8);
      goto LABEL_7;
    }
    *(_DWORD *)v36 = *(_DWORD *)v37;
    *((_DWORD *)v36 + 1) = *((_DWORD *)v37 + 1);
    *((_DWORD *)v36 + 2) = *((_DWORD *)v37 + 2);
    *((_DWORD *)v36 + 3) = *((_DWORD *)v37 + 3);
    v46 = v38[12];
    v47 = &v36[v46];
    v48 = &v37[v46];
    v49 = sub_22ABDD5D4();
    v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v49);
    v51 = __swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49);
    if (v50)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
        __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
        goto LABEL_19;
      }
    }
    else
    {
      v61 = *(_QWORD *)(v49 - 8);
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v47, v48, v49);
LABEL_19:
        *(_DWORD *)&v36[v38[13]] = *(_DWORD *)&v37[v38[13]];
        *(_DWORD *)&v36[v38[14]] = *(_DWORD *)&v37[v38[14]];
        *(_QWORD *)&v36[v38[15]] = *(_QWORD *)&v37[v38[15]];
        v63 = v38[16];
        v64 = &v36[v63];
        v65 = &v37[v63];
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
        v78 = *(_QWORD *)(v66 - 8);
        v67 = *(void (**)(char *, char *, uint64_t))(v78 + 24);
        v67(v64, v65, v66);
        v67(&v36[v38[17]], &v37[v38[17]], v66);
        v68 = v38[18];
        v69 = &v36[v68];
        v70 = &v37[v68];
        v71 = __swift_getEnumTagSinglePayload((uint64_t)&v36[v68], 1, v66);
        v72 = __swift_getEnumTagSinglePayload((uint64_t)v70, 1, v66);
        if (v71)
        {
          if (!v72)
          {
            (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v69, v70, v66);
            __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v66);
LABEL_25:
            *(_DWORD *)&v36[v38[19]] = *(_DWORD *)&v37[v38[19]];
            v34 = a3;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v72)
          {
            v67(v69, v70, v66);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v78 + 8))(v69, v66);
        }
        v73 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v49);
    }
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_19;
  }
  if (EnumTagSinglePayload)
  {
LABEL_7:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_26;
  }
  *(_DWORD *)v36 = *(_DWORD *)v37;
  *((_DWORD *)v36 + 1) = *((_DWORD *)v37 + 1);
  *((_DWORD *)v36 + 2) = *((_DWORD *)v37 + 2);
  *((_DWORD *)v36 + 3) = *((_DWORD *)v37 + 3);
  v40 = v38[12];
  v41 = &v36[v40];
  v42 = &v37[v40];
  v43 = sub_22ABDD5D4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
  }
  *(_DWORD *)&v36[v38[13]] = *(_DWORD *)&v37[v38[13]];
  *(_DWORD *)&v36[v38[14]] = *(_DWORD *)&v37[v38[14]];
  *(_QWORD *)&v36[v38[15]] = *(_QWORD *)&v37[v38[15]];
  v52 = v38[16];
  v53 = &v36[v52];
  v54 = &v37[v52];
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
  v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
  v56(v53, v54, v55);
  v56(&v36[v38[17]], &v37[v38[17]], v55);
  v57 = v38[18];
  v58 = &v36[v57];
  v59 = &v37[v57];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v37[v57], 1, v55))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v56(v58, v59, v55);
    __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v55);
  }
  *(_DWORD *)&v36[v38[19]] = *(_DWORD *)&v37[v38[19]];
  __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, (uint64_t)v38);
  v34 = a3;
LABEL_26:
  v74 = v34[22];
  v75 = a1 + v74;
  v76 = a2 + v74;
  *(_QWORD *)(a1 + v74) = *(_QWORD *)(a2 + v74);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v75 + 8) = *(_QWORD *)(v76 + 8);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v34[23]) = *(_QWORD *)(a2 + v34[23]);
  *(_QWORD *)(a1 + v34[24]) = *(_QWORD *)(a2 + v34[24]);
  *(_QWORD *)(a1 + v34[25]) = *(_QWORD *)(a2 + v34[25]);
  *(_QWORD *)(a1 + v34[26]) = *(_QWORD *)(a2 + v34[26]);
  *(_QWORD *)(a1 + v34[27]) = *(_QWORD *)(a2 + v34[27]);
  return a1;
}

uint64_t sub_22A9C7F84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v5 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  v6 = (int *)type metadata accessor for LSTMFCN(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDD8A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v13 = *(int *)(v12 + 20);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_22ABDDAE4();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  v18 = v6[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v11(a1 + v18, a2 + v18, v10);
  v17(v19 + *(int *)(v12 + 20), v20 + *(int *)(v12 + 20), v16);
  v21 = v6[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v11(a1 + v21, a2 + v21, v10);
  v17(v22 + *(int *)(v12 + 20), v23 + *(int *)(v12 + 20), v16);
  v24 = v6[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_22ABDD7D8();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32);
  v28(v25, v26, v27);
  v29 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v28(v25 + *(int *)(v29 + 24), v26 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v25 + *(int *)(v29 + 28)) = *(_QWORD *)(v26 + *(int *)(v29 + 28));
  v30 = v6[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v28(a1 + v30, a2 + v30, v27);
  v28(v31 + *(int *)(v29 + 24), v32 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v31 + *(int *)(v29 + 28)) = *(_QWORD *)(v32 + *(int *)(v29 + 28));
  v28(a1 + v6[11], a2 + v6[11], v27);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_QWORD *)(a1 + v6[13]) = *(_QWORD *)(a2 + v6[13]);
  v33 = a3[21];
  v34 = (_OWORD *)(a1 + v33);
  v35 = (_OWORD *)(a2 + v33);
  v36 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, (uint64_t)v36))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    *v34 = *v35;
    v38 = v36[12];
    v39 = (char *)v34 + v38;
    v40 = (char *)v35 + v38;
    v41 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
    }
    *(_DWORD *)((char *)v34 + v36[13]) = *(_DWORD *)((char *)v35 + v36[13]);
    *(_DWORD *)((char *)v34 + v36[14]) = *(_DWORD *)((char *)v35 + v36[14]);
    *(_QWORD *)((char *)v34 + v36[15]) = *(_QWORD *)((char *)v35 + v36[15]);
    v43 = v36[16];
    v44 = (char *)v34 + v43;
    v45 = (char *)v35 + v43;
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
    v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32);
    v47(v44, v45, v46);
    v47((char *)v34 + v36[17], (char *)v35 + v36[17], v46);
    v48 = v36[18];
    v49 = (char *)v34 + v48;
    v50 = (char *)v35 + v48;
    if (__swift_getEnumTagSinglePayload((uint64_t)v35 + v48, 1, v46))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v47(v49, v50, v46);
      __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v46);
    }
    *(_DWORD *)((char *)v34 + v36[19]) = *(_DWORD *)((char *)v35 + v36[19]);
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, (uint64_t)v36);
  }
  v52 = a3[23];
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);
  v53 = a3[25];
  *(_QWORD *)(a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  *(_QWORD *)(a1 + v53) = *(_QWORD *)(a2 + v53);
  v54 = a3[27];
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);
  return a1;
}

uint64_t sub_22A9C839C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  int EnumTagSinglePayload;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;

  v5 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a1, a2, v5);
  v6 = (int *)type metadata accessor for LSTMFCN(0);
  v7 = v6[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDD8A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v13 = *(int *)(v12 + 20);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_22ABDDAE4();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v18 = v6[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v11(a1 + v18, a2 + v18, v10);
  v17(v19 + *(int *)(v12 + 20), v20 + *(int *)(v12 + 20), v16);
  v21 = v6[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v11(a1 + v21, a2 + v21, v10);
  v17(v22 + *(int *)(v12 + 20), v23 + *(int *)(v12 + 20), v16);
  v24 = v6[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_22ABDD7D8();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40);
  v28(v25, v26, v27);
  v29 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v28(v25 + *(int *)(v29 + 24), v26 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v25 + *(int *)(v29 + 28)) = *(_QWORD *)(v26 + *(int *)(v29 + 28));
  v30 = v6[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v28(a1 + v30, a2 + v30, v27);
  v28(v31 + *(int *)(v29 + 24), v32 + *(int *)(v29 + 24), v27);
  v33 = *(int *)(v29 + 28);
  v34 = a3;
  *(_QWORD *)(v31 + v33) = *(_QWORD *)(v32 + v33);
  v28(a1 + v6[11], a2 + v6[11], v27);
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  *(_QWORD *)(a1 + v6[13]) = *(_QWORD *)(a2 + v6[13]);
  v35 = a3[21];
  v36 = (char *)(a1 + v35);
  v37 = (char *)(a2 + v35);
  v38 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  LODWORD(v27) = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, (uint64_t)v38);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, (uint64_t)v38);
  if (!(_DWORD)v27)
  {
    if (EnumTagSinglePayload)
    {
      sub_22A9AD754((uint64_t)v36, &qword_255B0F3D8);
      goto LABEL_7;
    }
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v46 = v38[12];
    v47 = &v36[v46];
    v48 = &v37[v46];
    v49 = sub_22ABDD5D4();
    v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v49);
    v51 = __swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49);
    if (v50)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
        __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
        goto LABEL_19;
      }
    }
    else
    {
      v61 = *(_QWORD *)(v49 - 8);
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v47, v48, v49);
LABEL_19:
        *(_DWORD *)&v36[v38[13]] = *(_DWORD *)&v37[v38[13]];
        *(_DWORD *)&v36[v38[14]] = *(_DWORD *)&v37[v38[14]];
        *(_QWORD *)&v36[v38[15]] = *(_QWORD *)&v37[v38[15]];
        v63 = v38[16];
        v64 = &v36[v63];
        v65 = &v37[v63];
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
        v80 = *(_QWORD *)(v66 - 8);
        v67 = *(void (**)(char *, char *, uint64_t))(v80 + 40);
        v67(v64, v65, v66);
        v67(&v36[v38[17]], &v37[v38[17]], v66);
        v68 = v38[18];
        v69 = &v36[v68];
        v70 = &v37[v68];
        v71 = __swift_getEnumTagSinglePayload((uint64_t)&v36[v68], 1, v66);
        v72 = __swift_getEnumTagSinglePayload((uint64_t)v70, 1, v66);
        if (v71)
        {
          if (!v72)
          {
            (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v69, v70, v66);
            __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v66);
LABEL_25:
            *(_DWORD *)&v36[v38[19]] = *(_DWORD *)&v37[v38[19]];
            v34 = a3;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v72)
          {
            v67(v69, v70, v66);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v80 + 8))(v69, v66);
        }
        v73 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v49);
    }
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_19;
  }
  if (EnumTagSinglePayload)
  {
LABEL_7:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_26;
  }
  *(_OWORD *)v36 = *(_OWORD *)v37;
  v40 = v38[12];
  v41 = &v36[v40];
  v42 = &v37[v40];
  v43 = sub_22ABDD5D4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
    __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
  }
  *(_DWORD *)&v36[v38[13]] = *(_DWORD *)&v37[v38[13]];
  *(_DWORD *)&v36[v38[14]] = *(_DWORD *)&v37[v38[14]];
  *(_QWORD *)&v36[v38[15]] = *(_QWORD *)&v37[v38[15]];
  v52 = v38[16];
  v53 = &v36[v52];
  v54 = &v37[v52];
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
  v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
  v56(v53, v54, v55);
  v56(&v36[v38[17]], &v37[v38[17]], v55);
  v57 = v38[18];
  v58 = &v36[v57];
  v59 = &v37[v57];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v37[v57], 1, v55))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v56(v58, v59, v55);
    __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v55);
  }
  *(_DWORD *)&v36[v38[19]] = *(_DWORD *)&v37[v38[19]];
  __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, (uint64_t)v38);
  v34 = a3;
LABEL_26:
  v74 = v34[22];
  v75 = a1 + v74;
  v76 = a2 + v74;
  *(_QWORD *)(a1 + v74) = *(_QWORD *)(a2 + v74);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v75 + 8) = *(_QWORD *)(v76 + 8);
  swift_bridgeObjectRelease();
  v77 = v34[24];
  *(_QWORD *)(a1 + v34[23]) = *(_QWORD *)(a2 + v34[23]);
  *(_QWORD *)(a1 + v77) = *(_QWORD *)(a2 + v77);
  v78 = v34[26];
  *(_QWORD *)(a1 + v34[25]) = *(_QWORD *)(a2 + v34[25]);
  *(_QWORD *)(a1 + v78) = *(_QWORD *)(a2 + v78);
  *(_QWORD *)(a1 + v34[27]) = *(_QWORD *)(a2 + v34[27]);
  return a1;
}

uint64_t sub_22A9C8A10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9C8A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = OUTLINED_FUNCTION_21_7();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 84);
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  v11 = *(_QWORD *)(v4 + *(int *)(a3 + 88));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_22A9C8AB4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9C8AC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = OUTLINED_FUNCTION_21_7();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
    return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5 + *(int *)(a4 + 84);
    return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
  }
  *(_QWORD *)(v5 + *(int *)(a4 + 88)) = (v4 - 1);
  return result;
}

void sub_22A9C8B54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B0F4A8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0F3D8);
    v0 = sub_22ABDF5D8();
    if (!v1)
      atomic_store(v0, qword_255B0F4A8);
  }
}

uint64_t sub_22A9C8BAC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_22A9C8C3C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_22A9C8C88 + 4 * byte_22ABEAEAB[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_22A9C8CBC + 4 * byte_22ABEAEA6[v4]))();
}

uint64_t sub_22A9C8CBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9C8CC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9C8CCCLL);
  return result;
}

uint64_t sub_22A9C8CD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9C8CE0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_22A9C8CE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9C8CEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22A9C8CF8()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9C8D08()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9C8D18()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9C8D28@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;
  int v4;
  int v5;

  result = sub_22A9C6AC0(&v5, *a1, a1[1]);
  v4 = v5;
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_22A9C8D60(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22E2E4D80](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_14@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 144) = a1;
  return sub_22ABDFD34();
}

uint64_t OUTLINED_FUNCTION_4_11()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_5_12@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 152) = a1;
  return sub_22ABDFC74();
}

uint64_t OUTLINED_FUNCTION_6_14()
{
  return 0x5365727574616566;
}

_QWORD *OUTLINED_FUNCTION_7_11@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *(*a10)(uint64_t *__return_ptr, int *), uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;

  a13 = a1;
  a14 = v14;
  return a10(&a12, &a13);
}

uint64_t OUTLINED_FUNCTION_9_10()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_11_13()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
  return sub_22ABDD9B8();
}

unint64_t OUTLINED_FUNCTION_13_10()
{
  return 0xD000000000000015;
}

uint64_t OUTLINED_FUNCTION_14_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_15_7()
{
  return 0x656469727473;
}

uint64_t OUTLINED_FUNCTION_16_10()
{
  return 0x736C6562616CLL;
}

uint64_t OUTLINED_FUNCTION_18_7@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 152) = a1;
  return sub_22ABDFC2C();
}

uint64_t OUTLINED_FUNCTION_20_7(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_21_7()
{
  return type metadata accessor for LSTMFCN(0);
}

void OUTLINED_FUNCTION_24_5()
{
  sub_22AB4D280();
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_29_5()
{
  return 0x6F69746172657469;
}

uint64_t OUTLINED_FUNCTION_30_6()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_32_6()
{
  return sub_22ABDEDC8();
}

uint64_t AudioReader.MicrophoneAsyncBuffers.count.getter()
{
  return 0;
}

uint64_t sub_22A9C8F78()
{
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22A9C8F90()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  char v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(void);

  v1 = objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForMediaType_, *MEMORY[0x24BDB1CF0]);
  if (v1 == (id)2)
  {
    v4 = 0;
LABEL_7:
    sub_22A9CA47C();
    v5 = swift_allocError();
    *v6 = v4;
    swift_willThrow(v5);
    v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  if (v1 == (id)1)
  {
    v4 = 1;
    goto LABEL_7;
  }
  if (!v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 16) = v2;
    *v2 = v0;
    v2[1] = sub_22A9C90A8;
    OUTLINED_FUNCTION_50_0();
    return sub_22ABE0118();
  }
  v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_22A9C90A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 24) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9C9100()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9C910C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void AudioReader.MicrophoneAsyncBuffers.makeAsyncIterator()()
{
  unint64_t *v0;
  unint64_t v1;

  v1 = *v0;
  type metadata accessor for AudioReader.MicrophoneAsyncBuffers.Iterator();
  OUTLINED_FUNCTION_33_2();
  sub_22A9C9358(v1);
  OUTLINED_FUNCTION_0_5();
}

uint64_t type metadata accessor for AudioReader.MicrophoneAsyncBuffers.Iterator()
{
  return objc_opt_self();
}

void sub_22A9C916C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F728);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (void *)objc_opt_self();
  v6 = *MEMORY[0x24BDB1CF0];
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_22A9CA51C;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22AABA854;
  aBlock[3] = &block_descriptor;
  v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v5, sel_requestAccessForMediaType_completionHandler_, v6, v9);
  _Block_release(v9);
}

uint64_t sub_22A9C92B8(char a1)
{
  _BYTE *v2;

  if ((a1 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F728);
    return sub_22ABDF164();
  }
  else
  {
    sub_22A9CA47C();
    swift_allocError();
    *v2 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F728);
    return sub_22ABDF158();
  }
}

void sub_22A9C9334(_QWORD *a1@<X8>)
{
  uint64_t v2;

  AudioReader.MicrophoneAsyncBuffers.makeAsyncIterator()();
  *a1 = v2;
}

void sub_22A9C9358(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1800]), sel_init);
  _s8ObserverCMa();
  v5 = swift_allocObject();
  sub_22A9C9B20(v4, a1);
  *(_QWORD *)(v2 + 16) = v5;
  swift_retain();
  sub_22A9C93D8();
  swift_release();
  OUTLINED_FUNCTION_21();
}

void sub_22A9C93D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 16);
  v10[0] = 0;
  if (objc_msgSend(v1, sel_startAndReturnError_, v10))
  {
    v2 = v10[0];
  }
  else
  {
    v3 = v10[0];
    sub_22ABDD004();

    swift_willThrow(v4);
    OUTLINED_FUNCTION_6_15();
    OUTLINED_FUNCTION_6_15();
    v5 = sub_22ABDE7EC();
    v6 = sub_22ABDF4C4();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)OUTLINED_FUNCTION_4_12();
      v10[0] = (id)OUTLINED_FUNCTION_4_12();
      *(_DWORD *)v7 = 136315138;
      OUTLINED_FUNCTION_6_15();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
      v8 = sub_22ABDED80();
      sub_22AAB5318(v8, v9, (uint64_t *)v10);
      sub_22ABDF65C();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_1_12();
      OUTLINED_FUNCTION_1_12();
      _os_log_impl(&dword_22A999000, v5, v6, "Could not start audio engine session with error: %s", v7, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_2_2();
    }
    OUTLINED_FUNCTION_1_12();

    OUTLINED_FUNCTION_1_12();
    OUTLINED_FUNCTION_1_12();
  }
}

void AudioReader.MicrophoneAsyncBuffers.Iterator.deinit()
{
  uint64_t v0;

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 16), sel_stop);
  swift_release();
  OUTLINED_FUNCTION_0_5();
}

uint64_t AudioReader.MicrophoneAsyncBuffers.Iterator.__deallocating_deinit()
{
  AudioReader.MicrophoneAsyncBuffers.Iterator.deinit();
  return swift_deallocClassInstance();
}

uint64_t AudioReader.MicrophoneAsyncBuffers.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[11] = a1;
  v2[12] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F558);
  v2[13] = swift_task_alloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9C9690()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[14] = *(_QWORD *)(v0[12] + 16);
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F560);
  *v1 = v0;
  v1[1] = sub_22A9C9728;
  OUTLINED_FUNCTION_50_0();
  return sub_22ABDFD94();
}

uint64_t sub_22A9C9728()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9C9764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v11 = *(_OWORD *)(v0 + 32);
  v12 = *(_OWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F568);
  OUTLINED_FUNCTION_11_14(v1, v7, v8, v6);
  v9 = v2 + OBJC_IVAR____TtCV18CreateMLComponents11AudioReader8Observer_continuation;
  swift_beginAccess();
  sub_22A9C9908(v1, v9);
  swift_endAccess();
  *(_OWORD *)v3 = v12;
  *(_OWORD *)(v3 + 16) = v11;
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9C9828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F558);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F568);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  v8 = a2 + OBJC_IVAR____TtCV18CreateMLComponents11AudioReader8Observer_continuation;
  swift_beginAccess();
  sub_22A9C9908((uint64_t)v6, v8);
  return swift_endAccess();
}

uint64_t sub_22A9C9900(uint64_t a1)
{
  uint64_t v1;

  return sub_22A9C9828(a1, v1);
}

uint64_t sub_22A9C9908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_22A9C9950(uint64_t a1)
{
  unint64_t result;

  result = sub_22A9C9974();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22A9C9974()
{
  unint64_t result;

  result = qword_255B0F590;
  if (!qword_255B0F590)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AudioReader.MicrophoneAsyncBuffers, &type metadata for AudioReader.MicrophoneAsyncBuffers);
    atomic_store(result, (unint64_t *)&qword_255B0F590);
  }
  return result;
}

unint64_t sub_22A9C99B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B0F598[0];
  if (!qword_255B0F598[0])
  {
    v1 = type metadata accessor for AudioReader.MicrophoneAsyncBuffers.Iterator();
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AudioReader.MicrophoneAsyncBuffers.Iterator, v1);
    atomic_store(result, qword_255B0F598);
  }
  return result;
}

uint64_t sub_22A9C99F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A9C9A44;
  return AudioReader.MicrophoneAsyncBuffers.Iterator.next()(a1);
}

uint64_t sub_22A9C9A44()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9C9A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_255B161B0 + dword_255B161B0);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_22A9AC000;
  return v10(a1, a2, a3);
}

ValueMetadata *type metadata accessor for AudioReader.MicrophoneAsyncBuffers()
{
  return &type metadata for AudioReader.MicrophoneAsyncBuffers;
}

uint64_t method lookup function for AudioReader.MicrophoneAsyncBuffers.Iterator()
{
  return swift_lookUpClassMethod();
}

void sub_22A9C9B20(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  sub_22ABDE7F8();
  v5 = v2 + OBJC_IVAR____TtCV18CreateMLComponents11AudioReader8Observer_continuation;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F568);
  OUTLINED_FUNCTION_11_14(v5, v7, v8, v6);
  *(_QWORD *)(v2 + 16) = a1;
  v9 = a1;
  sub_22A9C9BC4(a2);

  OUTLINED_FUNCTION_21();
}

void sub_22A9C9BC4(unint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *oslog;
  _QWORD aBlock[7];

  v3 = objc_msgSend(*(id *)(v1 + 16), sel_inputNode);
  v4 = (uint64_t)objc_msgSend(v3, sel_numberOfInputs);
  if (v4 < 0)
  {
    __break(1u);
LABEL_10:
    OUTLINED_FUNCTION_9_11();
    sub_22ABDFAD0();
    __break(1u);
    return;
  }
  v5 = v4;
  v6 = v3;
  sub_22A9C9E34(0, v5, v6);
  if ((v8 & 1) == 0)
  {
    v9 = v7;
    v10 = objc_msgSend(v6, sel_inputFormatForBus_, v7);
    if ((a1 & 0x8000000000000000) == 0 && !HIDWORD(a1))
    {
      v11 = v10;
      v12 = OUTLINED_FUNCTION_33_2();
      swift_weakInit();
      v13 = OUTLINED_FUNCTION_33_2();
      *(_QWORD *)(v13 + 16) = v12;
      *(_QWORD *)(v13 + 24) = v11;
      aBlock[4] = sub_22A9CA5C4;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_22A9CA224;
      aBlock[3] = &block_descriptor_16;
      v14 = _Block_copy(aBlock);
      v15 = v11;
      swift_release();
      objc_msgSend(v6, sel_installTapOnBus_bufferSize_format_block_, v9, a1, v15, v14);

      _Block_release(v14);
      return;
    }
    goto LABEL_10;
  }
  oslog = sub_22ABDE7EC();
  v16 = sub_22ABDF4C4();
  if (os_log_type_enabled(oslog, v16))
  {
    v17 = (uint8_t *)OUTLINED_FUNCTION_4_12();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_22A999000, oslog, v16, "Failed to set up audio session. There are no valid input nodes in the audio engine.", v17, 2u);
    OUTLINED_FUNCTION_2_2();
  }

}

void sub_22A9C9E34(uint64_t a1, uint64_t a2, id a3)
{
  uint64_t v5;
  id v6;
  double v7;
  double v8;

  if (a1 == a2)
  {
LABEL_9:

  }
  else
  {
    v5 = a1;
    if (a2 >= a1)
    {
      while (v5 < a2)
      {
        v6 = objc_msgSend(a3, sel_inputFormatForBus_, v5);
        if (objc_msgSend(v6, sel_channelCount))
        {
          objc_msgSend(v6, sel_sampleRate);
          v8 = v7;

          if (v8 > 0.0)
            goto LABEL_9;
        }
        else
        {

        }
        if (a2 == ++v5)
          goto LABEL_9;
      }
      __break(1u);
    }
    __break(1u);
  }
}

id sub_22A9C9F20(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  id v19;
  id v20;
  id result;
  BOOL v22;
  uint64_t v23;
  double v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[10];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F558);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v30 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F568);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v13);
    return (id)sub_22A9CA43C((uint64_t)v12);
  }
  v30[0] = (uint64_t)v10;
  v18 = Strong + OBJC_IVAR____TtCV18CreateMLComponents11AudioReader8Observer_continuation;
  swift_beginAccess();
  sub_22A9CA5CC(v18, (uint64_t)v12);
  swift_release();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
    return (id)sub_22A9CA43C((uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  v19 = objc_msgSend(a2, sel_sampleTime);
  v20 = objc_msgSend(a2, sel_sampleTime);
  result = objc_msgSend(a1, sel_frameLength);
  v22 = __OFADD__(v20, result);
  v23 = (uint64_t)v20 + result;
  if (v22)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v23 < (uint64_t)v19)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  result = objc_msgSend(a4, sel_sampleRate);
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v30[4] = 0xD000000000000028;
  v30[5] = 0x800000022ABE1830;
  v30[6] = (uint64_t)v19;
  v30[7] = v23;
  v30[8] = (uint64_t)v24;
  v30[9] = (uint64_t)a1;
  v25 = a1;
  sub_22ABDEAEC();
  v26 = v25;
  sub_22ABDF164();
  swift_beginAccess();
  v27 = swift_weakLoadStrong();

  swift_bridgeObjectRelease();
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (v27)
  {
    v28 = v30[0];
    __swift_storeEnumTagSinglePayload(v30[0], 1, 1, v13);
    v29 = v27 + OBJC_IVAR____TtCV18CreateMLComponents11AudioReader8Observer_continuation;
    swift_beginAccess();
    sub_22A9C9908(v28, v29);
    swift_endAccess();
    return (id)swift_release();
  }
  return result;
}

void sub_22A9CA224(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, id);
  id v6;
  id v7;

  v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, v6);
  swift_release();

}

void sub_22A9CA290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV18CreateMLComponents11AudioReader8Observer_logger;
  v2 = sub_22ABDE804();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_22A9CA43C(v0 + OBJC_IVAR____TtCV18CreateMLComponents11AudioReader8Observer_continuation);
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A9CA2E8()
{
  sub_22A9CA290();
  return swift_deallocClassInstance();
}

uint64_t sub_22A9CA30C()
{
  return _s8ObserverCMa();
}

uint64_t _s8ObserverCMa()
{
  uint64_t result;

  result = qword_255B0F678;
  if (!qword_255B0F678)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22A9CA34C()
{
  unint64_t v0;
  unint64_t v1;

  sub_22ABDE804();
  if (v0 <= 0x3F)
  {
    sub_22A9CA3E4();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_22A9CA3E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B0F688[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0F568);
    v0 = sub_22ABDF5D8();
    if (!v1)
      atomic_store(v0, qword_255B0F688);
  }
}

uint64_t sub_22A9CA43C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F558);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22A9CA47C()
{
  unint64_t result;

  result = qword_255B0F720;
  if (!qword_255B0F720)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AudioReaderError, &type metadata for AudioReaderError);
    atomic_store(result, (unint64_t *)&qword_255B0F720);
  }
  return result;
}

uint64_t sub_22A9CA4B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F728);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22A9CA51C(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F728);
  return sub_22A9C92B8(a1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_22A9CA574()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22A9CA598()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

id sub_22A9CA5C4(void *a1, void *a2)
{
  uint64_t v2;

  return sub_22A9C9F20(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_22A9CA5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  return swift_slowAlloc();
}

id OUTLINED_FUNCTION_6_15()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_11_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t sub_22A9CA64C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9CA658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    v8 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_22A9CA6C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9CA6D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    v10 = a1 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t type metadata accessor for SGDDenseLayer()
{
  uint64_t result;

  result = qword_255B0F788;
  if (!qword_255B0F788)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for SGDStorage()
{
  return swift_bridgeObjectRelease();
}

void _s18CreateMLComponents10SGDStorageVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_0_5();
}

uint64_t assignWithCopy for SGDStorage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SGDStorage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SGDStorage()
{
  return &type metadata for SGDStorage;
}

void sub_22A9CA860(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v9 = OUTLINED_FUNCTION_26_1();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_33();
  v13 = v12 - v11;
  type metadata accessor for FullyConnectedNetwork();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  v17 = v16 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F818);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_33();
  v21 = v20 - v19;
  sub_22A9CBA48(a2, v20 - v19);
  sub_22A9CBA90(a3, v17, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  sub_22A9CA978(v21, v17, v13, a5);
  if (v23)
    *a4 = v23;
  OUTLINED_FUNCTION_16();
}

void sub_22A9CA978(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[2];
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;

  v80 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  v70 = v9;
  v76 = sub_22ABDD4F0();
  MEMORY[0x24BDAC7A8](v76);
  OUTLINED_FUNCTION_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  v71 = v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v63 - v13;
  v83 = sub_22ABDDA0C();
  v15 = *(_QWORD **)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  OUTLINED_FUNCTION_87();
  v69 = v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v63 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v79 = (char *)v63 - v21;
  v22 = *(int *)(OUTLINED_FUNCTION_24_6() + 20);
  v77 = a4;
  v23 = a4 + v22;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  __swift_storeEnumTagSinglePayload(v23, 1, 1, v75);
  sub_22A9A03BC();
  if (v24)
  {
    v25 = v24;
    v68 = v4;
    v72 = v23;
    v73 = a3;
    v78 = a2;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F818);
    v27 = v80;
    v28 = v80 + *(int *)(v26 + 56);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
    sub_22ABDD664();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v83) == 1)
    {
      sub_22A9A0C1C((uint64_t)v14, &qword_255B0DAB8);
      sub_22A9A0888();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_9_12(v30, 0xD000000000000025);
      swift_release();
      v31 = OUTLINED_FUNCTION_26_1();
      v32 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v73, v31);
      OUTLINED_FUNCTION_22_5(v32, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
      sub_22A9A0C1C(v27, &qword_255B0F818);
    }
    else
    {
      v65 = v29;
      v66 = v28;
      v67 = v25;
      v39 = (void (*)(char *, char *, uint64_t))v15[4];
      v40 = v79;
      v41 = v83;
      v39(v79, v14, v83);
      v64 = (void (*)(char *, char *, uint64_t))v15[2];
      v64(v19, v40, v41);
      OUTLINED_FUNCTION_19_9();
      sub_22ABDD4E4();
      v42 = OUTLINED_FUNCTION_26_5();
      MEMORY[0x24BDAC7A8](v42);
      OUTLINED_FUNCTION_20_8();
      sub_22ABDE81C();
      v43 = (void (*)(char *, uint64_t))v15[1];
      v43(v19, v41);
      v44 = v78;
      sub_22A9A04BC();
      if (!v45)
      {
        OUTLINED_FUNCTION_18_8();
        v51 = OUTLINED_FUNCTION_26_1();
        OUTLINED_FUNCTION_2_15(v51);
        sub_22A9A0B10(v44, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
        OUTLINED_FUNCTION_16_11(v52, &qword_255B0F818);
        v43(v40, v83);
        v53 = v72;
        sub_22A9A0C1C(v72, &qword_2540E8570);
        OUTLINED_FUNCTION_25_5(v53, 1);
        goto LABEL_10;
      }
      v74 = (void (*)(uint64_t, uint64_t))v43;
      v46 = v71;
      v63[1] = v45;
      sub_22ABDD664();
      if (__swift_getEnumTagSinglePayload(v46, 1, v83) != 1)
      {
        v54 = v69;
        v55 = (void (*)(uint64_t, uint64_t, uint64_t))v39;
        v56 = v83;
        v55((uint64_t)v69, v46, v83);
        v64(v19, v54, v56);
        OUTLINED_FUNCTION_19_9();
        sub_22ABDD4E4();
        v57 = OUTLINED_FUNCTION_26_5();
        MEMORY[0x24BDAC7A8](v57);
        OUTLINED_FUNCTION_20_8();
        v58 = v70;
        sub_22ABDE81C();
        v59 = v74;
        v74((uint64_t)v19, v56);
        swift_release();
        OUTLINED_FUNCTION_18_8();
        v60 = OUTLINED_FUNCTION_26_1();
        v61 = OUTLINED_FUNCTION_2_15(v60);
        OUTLINED_FUNCTION_22_5(v61, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
        OUTLINED_FUNCTION_16_11(v62, &qword_255B0F818);
        v59((uint64_t)v54, v56);
        v59((uint64_t)v79, v56);
        OUTLINED_FUNCTION_25_5(v58, 0);
        sub_22A9A8F6C(v58, v72);
        goto LABEL_10;
      }
      sub_22A9A0C1C(v46, &qword_255B0DAB8);
      sub_22A9A0888();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_9_12(v47, 0xD000000000000025);
      swift_release();
      OUTLINED_FUNCTION_18_8();
      v48 = OUTLINED_FUNCTION_26_1();
      v49 = OUTLINED_FUNCTION_2_15(v48);
      OUTLINED_FUNCTION_22_5(v49, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
      OUTLINED_FUNCTION_16_11(v50, &qword_255B0F818);
      v74((uint64_t)v79, v83);
      (*(void (**)(uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v77);
    }
    v23 = v72;
  }
  else
  {
    v81 = 0;
    v82 = 0xE000000000000000;
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    v33 = OUTLINED_FUNCTION_26_1();
    sub_22ABDFA34();
    v34 = v81;
    v35 = v82;
    sub_22A9A0888();
    v36 = OUTLINED_FUNCTION_53();
    *v37 = v34;
    v37[1] = v35;
    swift_willThrow(v36);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a3, v33);
    sub_22A9A0B10(a2, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
    OUTLINED_FUNCTION_16_11(v38, &qword_255B0F818);
  }
  sub_22A9A0C1C(v23, &qword_2540E8570);
LABEL_10:
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9CAF90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1885697139 && a2 == 0xE400000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x676E696E7261656CLL && a2 == 0xEC00000065746152;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x697469636F6C6576 && a2 == 0xEA00000000007365)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_22A9CB0F0(char a1)
{
  if (!a1)
    return 1885697139;
  if (a1 == 1)
    return 0x676E696E7261656CLL;
  return 0x697469636F6C6576;
}

uint64_t sub_22A9CB14C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F7C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_6_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9CB918();
  sub_22ABE02B0();
  sub_22ABDFD34();
  if (!v1)
  {
    sub_22ABDFD28();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F7D0);
    sub_22A9CB954(&qword_255B0F7D8, &qword_255B0F7E0, (uint64_t)&unk_22ABEB27C, MEMORY[0x24BEE12A0]);
    sub_22ABDFD4C();
  }
  return OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

float sub_22A9CB2C8(_QWORD *a1)
{
  uint64_t v2;
  float v4;
  float v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F7E8);
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_34();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9CB918();
  sub_22ABE0298();
  sub_22ABDFC74();
  sub_22ABDFC68();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F7D0);
  sub_22A9CB954(&qword_255B0F7F0, &qword_255B0F7F8, (uint64_t)&unk_22ABEB2A4, MEMORY[0x24BEE12D0]);
  sub_22ABDFC8C();
  OUTLINED_FUNCTION_13_11();
  OUTLINED_FUNCTION_9_8();
  return v5;
}

BOOL sub_22A9CB454(char *a1, char *a2)
{
  return sub_22A9B0EA4(*a1, *a2);
}

uint64_t sub_22A9CB460()
{
  return sub_22A9B1040();
}

uint64_t sub_22A9CB468()
{
  return sub_22A9B0EB4();
}

uint64_t sub_22A9CB470()
{
  char *v0;

  return sub_22A9CB0F0(*v0);
}

uint64_t sub_22A9CB478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9CAF90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9CB49C()
{
  sub_22A9CB918();
  return sub_22ABE02EC();
}

uint64_t sub_22A9CB4C4()
{
  sub_22A9CB918();
  return sub_22ABE02F8();
}

void sub_22A9CB4EC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  float v6;

  v6 = sub_22A9CB2C8(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(float *)(a2 + 8) = v6;
    *(_QWORD *)(a2 + 16) = v5;
  }
}

uint64_t sub_22A9CB51C(_QWORD *a1)
{
  return sub_22A9CB14C(a1);
}

uint64_t sub_22A9CB53C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F810);
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_6_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9CBA0C();
  sub_22ABE02B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  sub_22A9B9F80(&qword_255B0EC58, MEMORY[0x24BEE14F8], MEMORY[0x24BDBFCD8]);
  OUTLINED_FUNCTION_6_11();
  sub_22ABDFD4C();
  if (!v1)
  {
    OUTLINED_FUNCTION_24_6();
    OUTLINED_FUNCTION_6_11();
    sub_22ABDFCF8();
  }
  return OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void sub_22A9CB658(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  v15 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v16 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F800);
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_6_4();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  v18 = v11 - v10 + *(int *)(v13 + 20);
  __swift_storeEnumTagSinglePayload(v18, 1, 1, v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9CBA0C();
  sub_22ABE0298();
  if (v17)
  {
    OUTLINED_FUNCTION_9_8();
    sub_22A9A0C1C(v18, &qword_2540E8570);
  }
  else
  {
    sub_22A9B9F80(&qword_255B0EC68, MEMORY[0x24BEE1520], MEMORY[0x24BDBFCE8]);
    sub_22ABDFC8C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v12, v16, v5);
    sub_22ABDFC38();
    OUTLINED_FUNCTION_5_9();
    sub_22A9A8F6C(v15, v18);
    sub_22A9CBA90(v12, a2, (uint64_t (*)(_QWORD))type metadata accessor for SGDDenseLayer);
    OUTLINED_FUNCTION_9_8();
    sub_22A9A0B10(v12, (uint64_t (*)(_QWORD))type metadata accessor for SGDDenseLayer);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9CB8A0()
{
  sub_22A9CBA0C();
  return sub_22ABE02EC();
}

uint64_t sub_22A9CB8C8()
{
  sub_22A9CBA0C();
  return sub_22ABE02F8();
}

void sub_22A9CB8F0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22A9CB658(a1, a2);
}

uint64_t sub_22A9CB904(_QWORD *a1)
{
  return sub_22A9CB53C(a1);
}

unint64_t sub_22A9CB918()
{
  unint64_t result;

  result = qword_255B0F7C8;
  if (!qword_255B0F7C8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEB4E8, &type metadata for SGDStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0F7C8);
  }
  return result;
}

uint64_t sub_22A9CB954(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0F7D0);
    sub_22A9CB9D0(a2, a3);
    v11 = v10;
    result = MEMORY[0x22E2E4D80](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

void sub_22A9CB9D0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for SGDDenseLayer();
    atomic_store(MEMORY[0x22E2E4D80](a2, v4), a1);
  }
  OUTLINED_FUNCTION_0_5();
}

unint64_t sub_22A9CBA0C()
{
  unint64_t result;

  result = qword_255B0F808;
  if (!qword_255B0F808)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEB498, &type metadata for SGDDenseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0F808);
  }
  return result;
}

uint64_t sub_22A9CBA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_22A9CBA90(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_0_5();
}

uint64_t storeEnumTagSinglePayload for SGDDenseLayer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9CBB1C + 4 * byte_22ABEB245[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9CBB50 + 4 * asc_22ABEB240[v4]))();
}

uint64_t sub_22A9CBB50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9CBB58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9CBB60);
  return result;
}

uint64_t sub_22A9CBB6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9CBB74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9CBB78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9CBB80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SGDDenseLayer.CodingKeys()
{
  return &type metadata for SGDDenseLayer.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SGDStorage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22A9CBBE8 + 4 * byte_22ABEB24F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22A9CBC1C + 4 * byte_22ABEB24A[v4]))();
}

uint64_t sub_22A9CBC1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9CBC24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9CBC2CLL);
  return result;
}

uint64_t sub_22A9CBC38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9CBC40);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22A9CBC44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9CBC4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SGDStorage.CodingKeys()
{
  return &type metadata for SGDStorage.CodingKeys;
}

unint64_t sub_22A9CBC6C()
{
  unint64_t result;

  result = qword_255B0F820;
  if (!qword_255B0F820)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEB3B8, &type metadata for SGDStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0F820);
  }
  return result;
}

unint64_t sub_22A9CBCAC()
{
  unint64_t result;

  result = qword_255B0F828;
  if (!qword_255B0F828)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEB470, &type metadata for SGDDenseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0F828);
  }
  return result;
}

unint64_t sub_22A9CBCEC()
{
  unint64_t result;

  result = qword_255B0F830;
  if (!qword_255B0F830)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEB3E0, &type metadata for SGDDenseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0F830);
  }
  return result;
}

unint64_t sub_22A9CBD2C()
{
  unint64_t result;

  result = qword_255B0F838;
  if (!qword_255B0F838)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEB408, &type metadata for SGDDenseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0F838);
  }
  return result;
}

unint64_t sub_22A9CBD6C()
{
  unint64_t result;

  result = qword_255B0F840;
  if (!qword_255B0F840)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEB328, &type metadata for SGDStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0F840);
  }
  return result;
}

unint64_t sub_22A9CBDAC()
{
  unint64_t result;

  result = qword_255B0F848[0];
  if (!qword_255B0F848[0])
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEB350, &type metadata for SGDStorage.CodingKeys);
    atomic_store(result, qword_255B0F848);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_15(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_9_12@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_13_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_16_11(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_22A9A0C1C(*(_QWORD *)(v2 - 112), a2);
}

uint64_t OUTLINED_FUNCTION_18_8()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  return sub_22ABDD964();
}

uint64_t OUTLINED_FUNCTION_21_8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void OUTLINED_FUNCTION_22_5(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_22A9A0B10(*(_QWORD *)(v2 - 128), a2);
}

uint64_t OUTLINED_FUNCTION_24_6()
{
  return type metadata accessor for SGDDenseLayer();
}

uint64_t OUTLINED_FUNCTION_25_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, *(_QWORD *)(v2 - 152));
}

uint64_t OUTLINED_FUNCTION_26_5()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, *(_QWORD *)(v2 - 144));
}

uint64_t LinearTransformer.scale.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_31_2(a1, a2);
}

uint64_t LinearTransformer.scale.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*LinearTransformer.scale.modify())()
{
  return nullsub_1;
}

uint64_t LinearTransformer.offset.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_31_2(a1, a2);
}

uint64_t LinearTransformer.offset.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*LinearTransformer.offset.modify())()
{
  return nullsub_1;
}

void LinearTransformer.init(scale:offset:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for LinearTransformer();
}

uint64_t sub_22A9CBF4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for LinearTransformer()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t LinearTransformer.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t (*v15)(char *, uint64_t);
  uint64_t v17;

  v5 = v4;
  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v14(v11, v5, v7);
  sub_22ABDF308();
  v15 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  OUTLINED_FUNCTION_6_16();
  v14(v11, v5 + *(int *)(a4 + 52), v7);
  sub_22ABDFAE8();
  OUTLINED_FUNCTION_6_16();
  return v15(v13, v7);
}

uint64_t LinearTransformer.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v10 = *(_QWORD *)(a4 + 16);
  v11 = a5;
  v12 = *(_OWORD *)(a4 + 24);
  v13 = *(_QWORD *)(a4 + 40);
  v14 = a6;
  v15 = a2;
  v16 = a3;
  return sub_22A9C2540((uint64_t)sub_22A9CC184, (uint64_t)&v9, a5, v10, MEMORY[0x24BEE4078], a6, MEMORY[0x24BEE40A8], a8);
}

void sub_22A9CC120()
{
  type metadata accessor for LinearTransformer();
}

uint64_t sub_22A9CC15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return LinearTransformer.applied(to:eventHandler:)(v3, a2, a3, a1);
}

void sub_22A9CC184()
{
  sub_22A9CC120();
}

uint64_t LinearTransformer.hash(into:)()
{
  OUTLINED_FUNCTION_7_12();
  return OUTLINED_FUNCTION_7_12();
}

uint64_t static LinearTransformer.== infix(_:_:)()
{
  if ((sub_22ABDECFC() & 1) != 0)
    type metadata accessor for LinearTransformer();
  return 0;
}

uint64_t sub_22A9CC2B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656C616373 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22A9CC38C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x74657366666FLL;
  else
    return 0x656C616373;
}

uint64_t sub_22A9CC3BC()
{
  char *v0;

  return sub_22A9CC38C(*v0);
}

uint64_t sub_22A9CC3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9CC2B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9CC400(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEB780, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9CC434(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEB780, a1);
  return sub_22ABE02F8();
}

void LinearTransformer.encode(to:)()
{
  OUTLINED_FUNCTION_10_7();
}

void sub_22A9CC4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  MEMORY[0x22E2E4D80](&unk_22ABEB780, a1);
  v11 = sub_22ABDFD58();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&a9 - v13;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v10 - 112) = 0;
  OUTLINED_FUNCTION_9_13();
  v15 = *(_QWORD *)(v10 - 72);
  sub_22ABDFD4C();
  if (!v15)
  {
    *(_BYTE *)(v10 - 112) = 1;
    OUTLINED_FUNCTION_9_13();
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for LinearTransformer.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t LinearTransformer.hashValue.getter()
{
  sub_22ABE0244();
  LinearTransformer.hash(into:)();
  return sub_22ABE0280();
}

void LinearTransformer.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[14];

  v10[0] = a3;
  v10[3] = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_87();
  v10[2] = v3;
  MEMORY[0x24BDAC7A8](v4);
  v10[5] = (char *)v10 - v5;
  v10[10] = v6;
  v10[11] = v7;
  v10[12] = v8;
  v10[13] = v9;
  OUTLINED_FUNCTION_10_7();
}

void sub_22A9CC68C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 - 120) = MEMORY[0x22E2E4D80](&unk_22ABEB780, a1);
  v6 = sub_22ABDFCB0();
  *(_QWORD *)(v5 - 128) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for LinearTransformer();
}

void sub_22A9CC700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v13 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&a9 - v14;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  *(_QWORD *)(v11 - 136) = v10;
  v16 = *(_QWORD *)(v11 - 72);
  sub_22ABE0298();
  if (v16)
  {
    OUTLINED_FUNCTION_8_0();
  }
  else
  {
    *(_QWORD *)(v11 - 120) = v13;
    v17 = *(_QWORD *)(v11 - 176);
    *(_QWORD *)(v11 - 72) = a1;
    v18 = *(_QWORD *)(v11 - 168);
    *(_BYTE *)(v11 - 112) = 0;
    sub_22ABDFC8C();
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
    v20 = *(_QWORD *)(v11 - 152);
    v21 = *(_QWORD *)(v11 - 144);
    *(_QWORD *)(v11 - 152) = v19;
    v19(v15, v20, v21);
    *(_BYTE *)(v11 - 112) = 1;
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_3_15();
    v22 = *(_QWORD *)(v11 - 72);
    (*(void (**)(char *, uint64_t, _QWORD))(v11 - 152))(&v15[*(int *)(v22 + 52)], v17, *(_QWORD *)(v11 - 144));
    v23 = *(_QWORD *)(v11 - 120);
    (*(void (**)(_QWORD, char *, uint64_t))(v23 + 16))(*(_QWORD *)(v11 - 192), v15, v22);
    OUTLINED_FUNCTION_8_0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v22);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9CC870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  LinearTransformer.applied(to:eventHandler:)(a2, a2, a3, a5);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v5 + 8));
}

uint64_t sub_22A9CC8B8()
{
  sub_22ABE0244();
  LinearTransformer.hash(into:)();
  return sub_22ABE0280();
}

void sub_22A9CC8F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  LinearTransformer.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_22A9CC918()
{
  LinearTransformer.encode(to:)();
}

uint64_t sub_22A9CC92C()
{
  return static LinearTransformer.== infix(_:_:)();
}

uint64_t LinearTransformer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  return 0;
}

void sub_22A9CCA04()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9CCA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  _OWORD v31[5];
  uint64_t v32;

  v29 = a2;
  v3 = v2;
  v5 = sub_22ABDE3D8();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v28 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22ABDE324();
  v26 = *(_QWORD *)(v12 - 8);
  v27 = v12;
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_87();
  v25 = v13;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v24 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v11, v3, v8);
  sub_22A99CE8C();
  OUTLINED_FUNCTION_2_16();
  v18 = *(double *)v31;
  v17(v11, v3 + *(int *)(a1 + 52), v8);
  OUTLINED_FUNCTION_2_16();
  sub_22AA25620(v18, v30);
  v20 = v25;
  v19 = v26;
  v21 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v25, v16, v27);
  memset(v31, 0, sizeof(v31));
  v32 = 0;
  v22 = (uint64_t)v28;
  sub_22ABDE3CC();
  sub_22AB314C8(v20, v22, v31, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v16, v21);
}

uint64_t sub_22A9CCBE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22A9CCA18(a1, a2);
}

uint64_t sub_22A9CCBF8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22A9CCC64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  v12 = (v11 & v10) + v7;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, *(_QWORD *)(a3 + 16));
    v17((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)(((unint64_t)a2 + v11) & v10), v5);
  }
  return v4;
}

uint64_t sub_22A9CCD18(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v6(a1, v3);
  return v6((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
}

unint64_t sub_22A9CCD80(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_22A9CCDEC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_22A9CCE58(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_22A9CCEC4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_22A9CCF30(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9CCFF0 + 4 * byte_22ABEB540[(v8 - 1)]))();
}

void sub_22A9CD03C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_22A9CD1F4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9CD240 + 4 * byte_22ABEB553[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9CD274 + 4 * byte_22ABEB54E[v4]))();
}

uint64_t sub_22A9CD274(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9CD27C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9CD284);
  return result;
}

uint64_t sub_22A9CD290(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9CD298);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9CD29C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9CD2A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22A9CD2B0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9CD2C0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9CD2D0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return sub_22ABDEA50();
}

uint64_t OUTLINED_FUNCTION_3_15()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 136), *(_QWORD *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_7_12()
{
  return sub_22ABDEC0C();
}

void OUTLINED_FUNCTION_10_7()
{
  type metadata accessor for LinearTransformer.CodingKeys();
}

void sub_22A9CD33C()
{
  unint64_t v0;

  sub_22A9CDAC4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_22A9CD3D8(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v7 = a3[13];
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v13 = a3[15];
    *(_DWORD *)((char *)v4 + a3[14]) = *(_DWORD *)((char *)a2 + a3[14]);
    *(_DWORD *)((char *)v4 + v13) = *(_DWORD *)((char *)a2 + v13);
    *(_QWORD *)((char *)v4 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    sub_22ABDEAEC();
  }
  return v4;
}

uint64_t sub_22A9CD4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 52);
  v3 = sub_22ABDD5D4();
  if (!__swift_getEnumTagSinglePayload(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A9CD558(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[13];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_22ABDD5D4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22A9CD640(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v6 = a3[13];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_22ABDD5D4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22A9CD7A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[13];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_22ABDD5D4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_22A9CD884(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[13];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_22ABDD5D4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22A9CD9C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9CD9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return OUTLINED_FUNCTION_78_0(a1 + *(int *)(a3 + 52), a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 64));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_22A9CDA44()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9CDA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t result;

  OUTLINED_FUNCTION_24_7();
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == v3)
    return OUTLINED_FUNCTION_77_0(v1 + *(int *)(v2 + 52), v0, v0, result);
  *(_QWORD *)(v1 + *(int *)(v2 + 64)) = (v0 - 1);
  return result;
}

uint64_t type metadata accessor for AdamWStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdamWStorage);
}

void sub_22A9CDAC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B0F9F8)
  {
    sub_22ABDD5D4();
    v0 = sub_22ABDF5D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255B0F9F8);
  }
}

uint64_t sub_22A9CDB18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 1885697139 && a2 == 0xE400000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x676E696E7261656CLL && a2 == 0xEC00000065746152;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x3161746562 && a2 == 0xE500000000000000;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x3261746562 && a2 == 0xE500000000000000;
        if (v8 || (sub_22ABDFF68() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6E6F6C69737065 && a2 == 0xE700000000000000;
          if (v9 || (sub_22ABDFF68() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000014 && a2 == 0x800000022ABE18C0 || (sub_22ABDFF68() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x6544746867696577 && a2 == 0xEB00000000796163;
            if (v10 || (sub_22ABDFF68() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = a1 == 0x746E656964617267 && a2 == 0xED0000656C616353;
              if (v11 || (sub_22ABDFF68() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0x73746E656D6F6DLL && a2 == 0xE700000000000000)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                v13 = sub_22ABDFF68();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 8;
                else
                  return 9;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_22A9CDEDC()
{
  return 9;
}

uint64_t sub_22A9CDEE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22A9CDF10 + 4 * byte_22ABEB7D0[a1]))(1885697139, 0xE400000000000000);
}

uint64_t sub_22A9CDF10()
{
  return 0x676E696E7261656CLL;
}

uint64_t sub_22A9CDF30()
{
  return 0x3161746562;
}

uint64_t sub_22A9CDF44()
{
  return 0x3261746562;
}

uint64_t sub_22A9CDF58()
{
  return 0x6E6F6C69737065;
}

unint64_t sub_22A9CDF70()
{
  return 0xD000000000000014;
}

uint64_t sub_22A9CDF8C()
{
  return 0x6544746867696577;
}

uint64_t sub_22A9CDFAC()
{
  return 0x746E656964617267;
}

uint64_t sub_22A9CDFD0()
{
  return 0x73746E656D6F6DLL;
}

void sub_22A9CDFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  OUTLINED_FUNCTION_12();
  v20 = v1;
  v21 = v0;
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(v2 + 16);
  v18 = *(_QWORD *)(v3 + 24);
  v19 = v6;
  v8 = type metadata accessor for AdamWStorage.CodingKeys(255, v6, v18, v7);
  MEMORY[0x22E2E4D80](&unk_22ABEB9A0, v8);
  v9 = sub_22ABDFD58();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - v11;
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_22ABE02B0();
  v13 = v20;
  sub_22ABDFD34();
  if (!v13)
  {
    v14 = v18;
    v15 = v19;
    OUTLINED_FUNCTION_1_13(1);
    OUTLINED_FUNCTION_1_13(2);
    OUTLINED_FUNCTION_1_13(3);
    OUTLINED_FUNCTION_1_13(4);
    sub_22ABDD5D4();
    sub_22A9CE744(&qword_255B0FA00, MEMORY[0x24BE6BAB8]);
    sub_22ABDFCF8();
    OUTLINED_FUNCTION_1_13(6);
    OUTLINED_FUNCTION_1_13(7);
    v22 = 8;
    type metadata accessor for AdamWStorage.Moment(255, v15, v14, v16);
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_52_3();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  OUTLINED_FUNCTION_16();
}

void sub_22A9CE278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_12();
  v1 = v0;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  type metadata accessor for AdamWStorage.CodingKeys(255, v3, v1, v5);
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9CE2EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;

  v5 = sub_22ABDFCB0();
  *(_QWORD *)(v4 - 136) = v5;
  *(_QWORD *)(v4 - 152) = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v4 - 168) = v2;
  *(_QWORD *)(v4 - 160) = v1;
  v8 = type metadata accessor for AdamWStorage(0, v2, v1, v7);
  *(_QWORD *)(v4 - 176) = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_11_15();
  v11 = v3 + *(int *)(v10 + 52);
  sub_22ABDD5D4();
  *(_QWORD *)(v4 - 120) = v11;
  OUTLINED_FUNCTION_4_6(v11, 1);
  v12 = v0[3];
  *(_QWORD *)(v4 - 128) = v0;
  __swift_project_boxed_opaque_existential_1(v0, v12);
  v13 = *(_QWORD *)(v4 - 112);
  sub_22ABE0298();
  if (!v13)
  {
    v14 = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(v4 - 112) = v8;
    *(_BYTE *)(v4 - 72) = 0;
    *(_QWORD *)v3 = sub_22ABDFC74();
    OUTLINED_FUNCTION_0_13(1);
    *(_DWORD *)(v3 + 8) = v15;
    OUTLINED_FUNCTION_0_13(2);
    *(_DWORD *)(v3 + 12) = v16;
    OUTLINED_FUNCTION_0_13(3);
    *(_DWORD *)(v3 + 16) = v17;
    OUTLINED_FUNCTION_0_13(4);
    *(_DWORD *)(v3 + 20) = v18;
    *(_BYTE *)(v4 - 72) = 5;
    sub_22A9CE744(qword_255B0FA08, MEMORY[0x24BE6BAC0]);
    sub_22ABDFC38();
    sub_22A9D0108(v14, *(_QWORD *)(v4 - 120), &qword_255B0DAD0);
    OUTLINED_FUNCTION_0_13(6);
    v20 = *(_QWORD *)(v4 - 112);
    *(_DWORD *)(v3 + *(int *)(v20 + 56)) = v21;
    OUTLINED_FUNCTION_0_13(7);
    *(_DWORD *)(v3 + *(int *)(v20 + 60)) = v22;
    type metadata accessor for AdamWStorage.Moment(255, *(_QWORD *)(v4 - 168), *(_QWORD *)(v4 - 160), v23);
    OUTLINED_FUNCTION_31_5();
    *(_BYTE *)(v4 - 81) = 8;
    OUTLINED_FUNCTION_52_3();
  }
  v19 = *(_QWORD *)(v4 - 120);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v4 - 128));
  sub_22A9CF82C(v19, &qword_255B0DAD0);
  OUTLINED_FUNCTION_16();
}

BOOL sub_22A9CE5DC(char *a1, char *a2)
{
  return sub_22A9B0EA4(*a1, *a2);
}

uint64_t sub_22A9CE5F0()
{
  return sub_22A9B1040();
}

uint64_t sub_22A9CE60C()
{
  return sub_22A9B0EB4();
}

uint64_t sub_22A9CE618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9CEE1C(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_22A9B0EB4);
}

uint64_t sub_22A9CE624()
{
  unsigned __int8 *v0;

  return sub_22A9CDEE4(*v0);
}

uint64_t sub_22A9CE630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9CDB18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9CE65C(uint64_t a1, uint64_t a2)
{
  return sub_22A9CEEB0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))OUTLINED_FUNCTION_19_1);
}

uint64_t sub_22A9CE668@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9CDEDC();
  *a1 = result;
  return result;
}

uint64_t sub_22A9CE694(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEB9A0, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9CE6C8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEB9A0, a1);
  return sub_22ABE02F8();
}

void sub_22A9CE6FC()
{
  sub_22A9CE278();
}

void sub_22A9CE718()
{
  sub_22A9CDFE8();
}

uint64_t type metadata accessor for AdamWStorage.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdamWStorage.CodingKeys);
}

uint64_t type metadata accessor for AdamWStorage.Moment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdamWStorage.Moment);
}

void sub_22A9CE744(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_22ABDD5D4();
    atomic_store(MEMORY[0x22E2E4D80](a2, v4), a1);
  }
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A9CE780(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x7473726966 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x646E6F636573 && a2 == 0xE600000000000000;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x536D756D6978616DLL && a2 == 0xED0000646E6F6365)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_22ABDFF68();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_22A9CE8E0(char a1)
{
  if (!a1)
    return 0x7473726966;
  if (a1 == 1)
    return 0x646E6F636573;
  return 0x536D756D6978616DLL;
}

void sub_22A9CE93C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_12();
  v3 = v2;
  v6 = type metadata accessor for AdamWStorage.Moment.CodingKeys(255, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v5);
  MEMORY[0x22E2E4D80](&unk_22ABEBAB8, v6);
  v7 = sub_22ABDFD58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_11_15();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_22ABE02B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  sub_22A9B9F80(&qword_255B0EC58, MEMORY[0x24BEE14F8], MEMORY[0x24BDBFCD8]);
  sub_22ABDFD4C();
  if (!v0)
  {
    OUTLINED_FUNCTION_17_5();
    sub_22ABDFD4C();
    OUTLINED_FUNCTION_17_5();
    sub_22ABDFCF8();
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
  OUTLINED_FUNCTION_16();
}

void sub_22A9CEAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  OUTLINED_FUNCTION_12();
  v42 = (_QWORD *)v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v32 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v33 = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v39 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_87();
  v35 = v12;
  MEMORY[0x24BDAC7A8](v13);
  v36 = (char *)&v29 - v14;
  v16 = type metadata accessor for AdamWStorage.Moment.CodingKeys(255, v5, v3, v15);
  MEMORY[0x22E2E4D80](&unk_22ABEBAB8, v16);
  v38 = sub_22ABDFCB0();
  v34 = *(_QWORD *)(v38 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_11_15();
  v19 = type metadata accessor for AdamWStorage.Moment(0, v5, v3, v18);
  v31 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_13_0();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v29 - v22;
  v41 = (uint64_t)&v29 + *(int *)(v21 + 40) - v22;
  v37 = v11;
  __swift_storeEnumTagSinglePayload(v41, 1, 1, v11);
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v40 = v1;
  v24 = (uint64_t)v42;
  sub_22ABE0298();
  if (v24)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_22A9CF82C(v41, &qword_2540E8570);
  }
  else
  {
    v30 = v23;
    v42 = v7;
    sub_22A9B9F80(&qword_255B0EC68, MEMORY[0x24BEE1520], MEMORY[0x24BDBFCE8]);
    OUTLINED_FUNCTION_21_9();
    OUTLINED_FUNCTION_19_10((uint64_t)v30);
    OUTLINED_FUNCTION_21_9();
    OUTLINED_FUNCTION_19_10((uint64_t)&v30[*(int *)(v19 + 36)]);
    v25 = v33;
    sub_22ABDFC38();
    OUTLINED_FUNCTION_3_16();
    sub_22A9D0108(v25, v41, &qword_2540E8570);
    v26 = v19;
    v27 = v31;
    v28 = (uint64_t)v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v32, v30, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9CEE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22A9CEE1C(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_22A9D0228);
}

uint64_t sub_22A9CEE1C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_22ABE0244();
  a4(v8, *v4, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return sub_22ABE0280();
}

uint64_t sub_22A9CEE6C()
{
  char *v0;

  return sub_22A9CE8E0(*v0);
}

uint64_t sub_22A9CEE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9CE780(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9CEEA4(uint64_t a1, uint64_t a2)
{
  return sub_22A9CEEB0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))j__OUTLINED_FUNCTION_19_1);
}

uint64_t sub_22A9CEEB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v3;

  return a3(*v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_22A9CEED4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9A79FC();
  *a1 = result;
  return result;
}

uint64_t sub_22A9CEF00(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEBAB8, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9CEF34(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEBAB8, a1);
  return sub_22ABE02F8();
}

void sub_22A9CEF68()
{
  sub_22A9CEAB8();
}

void sub_22A9CEF84()
{
  sub_22A9CE93C();
}

uint64_t sub_22A9CEF98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t TupleTypeMetadata2;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  int EnumTagSinglePayload;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD v115[2];
  uint64_t v116;

  v85 = a1;
  v110 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v93 = v10;
  v103 = sub_22ABDDA0C();
  v92 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  OUTLINED_FUNCTION_0();
  v102 = v11;
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v106 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  OUTLINED_FUNCTION_87();
  v86 = v12;
  MEMORY[0x24BDAC7A8](v13);
  v101 = (uint64_t)&v82 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0();
  v100 = v16;
  v18 = type metadata accessor for AdamWStorage.Moment(255, a3, a4, v17);
  v83 = sub_22ABDF5D8();
  v82 = *(_QWORD *)(v83 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v19);
  v95 = (char *)&v82 - v20;
  v87 = v18;
  v97 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v21);
  v112 = (char *)&v82 - v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_22ABDD778();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_11_15();
  v29 = type metadata accessor for AdamWStorage(0, a3, a4, v28);
  sub_22A9CF800(a2 + *(int *)(v29 + 52), (uint64_t)v25, &qword_255B0DAD0);
  v99 = a2;
  sub_22ABDD754();
  v84 = v27;
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
  v107 = v26;
  v30(v110, v5, v26);
  v94 = a4;
  v31 = sub_22ABDD814();
  sub_22ABDDB08();
  v98 = a3;
  sub_22ABDFA1C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v33 = sub_22ABDEFFC();
  v116 = v33;
  v104 = TupleTypeMetadata2;
  if (v33 == MEMORY[0x22E2E3364](v31, TupleTypeMetadata2))
  {
LABEL_12:
    OUTLINED_FUNCTION_7_13();
    OUTLINED_FUNCTION_27_7();
    return OUTLINED_FUNCTION_12_11();
  }
  else
  {
    v91 = *(int *)(v29 + 64);
    v90 = v31 + 32;
    v34 = v106;
    v35 = v87;
    v36 = v29;
    v37 = v97;
    v38 = v31;
    v39 = v104;
    v89 = v36;
    v88 = v38;
    while (1)
    {
      v40 = sub_22ABDF08C();
      sub_22ABDF038();
      if ((v40 & 1) == 0)
        break;
      v41 = (uint64_t *)(v90 + 24 * v33);
      v42 = v39;
      v43 = *v41;
      v44 = v41[1];
      v45 = v41[2];
      sub_22ABDEAEC();
      swift_retain();
      sub_22ABDEAEC();
      MEMORY[0x22E2E3370](&v116, v38, v42);
      OUTLINED_FUNCTION_27_7();
      v46 = *(_QWORD *)(v99 + v91);
      v115[0] = v43;
      v115[1] = v44;
      v47 = (uint64_t)v95;
      MEMORY[0x22E2E2DE8](v115, v46, MEMORY[0x24BEE0D00], v35, MEMORY[0x24BEE0D10]);
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v47, 1, v35) == 1)
      {
        OUTLINED_FUNCTION_27_7();
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v47, v83);
        sub_22A9A0888();
        v80 = swift_allocError();
        *v81 = 0xD000000000000025;
        v81[1] = 0x800000022ABE1130;
        swift_willThrow(v80);
        swift_release();
        OUTLINED_FUNCTION_7_13();
        OUTLINED_FUNCTION_12_11();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 8))(v110, v107);
      }
      v48 = (uint64_t)v112;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v112, v47, v35);
      v109 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
      v49 = v101;
      OUTLINED_FUNCTION_49(v101, v48, v109);
      v50 = sub_22A9A9038();
      swift_retain();
      v113 = v45;
      v51 = v102;
      OUTLINED_FUNCTION_18_9();
      sub_22ABDE8F4();
      v111 = v42;
      v52 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v52(v49, v114);
      v108 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 32);
      v53 = v100;
      OUTLINED_FUNCTION_49(v100, v51, v108);
      v54 = OUTLINED_FUNCTION_20_9();
      __swift_storeEnumTagSinglePayload(v54, v55, v56, v57);
      v37 = sub_22ABDD658();
      sub_22ABDD670();
      v109(v49, (uint64_t)&v112[*(int *)(v35 + 36)], v114);
      swift_retain();
      OUTLINED_FUNCTION_18_9();
      v96 = v50;
      sub_22ABDE8F4();
      v111 = v42;
      v105 = v52;
      v52(v49, v114);
      v58 = v35;
      v59 = v107;
      OUTLINED_FUNCTION_49(v53, v51, v108);
      v38 = v110;
      v60 = OUTLINED_FUNCTION_20_9();
      v61 = v114;
      __swift_storeEnumTagSinglePayload(v60, v62, v63, v64);
      v65 = v112;
      sub_22ABDD670();
      v66 = v93;
      sub_22A9CF800((uint64_t)&v65[*(int *)(v58 + 40)], v93, &qword_2540E8570);
      if (__swift_getEnumTagSinglePayload(v66, 1, v61) == 1)
      {
        v67 = OUTLINED_FUNCTION_30_7();
        v68(v67, v58);
        swift_release();
        sub_22A9CF82C(v66, &qword_2540E8570);
        v34 = v106;
        v35 = v58;
        OUTLINED_FUNCTION_27_9();
        v39 = v104;
      }
      else
      {
        v69 = v86;
        OUTLINED_FUNCTION_49(v86, v66, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 32));
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v38 + *(int *)(v59 + 72), 1, v37);
        v39 = v104;
        if (EnumTagSinglePayload)
        {
          swift_release();
          v105(v69, v61);
        }
        else
        {
          v71 = v101;
          v109(v101, v69, v61);
          v38 = v69;
          v72 = v102;
          v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v37;
          v37 = v103;
          v73 = v111;
          sub_22ABDE8F4();
          v111 = v73;
          v74 = v105;
          v105(v71, v114);
          v75 = v100;
          v108(v100, v72, v37);
          OUTLINED_FUNCTION_4_6(v75, 0);
          v39 = v104;
          v76 = v114;
          sub_22ABDD670();
          v74(v38, v76);
        }
        v77 = OUTLINED_FUNCTION_30_7();
        v35 = v87;
        v78(v77, v87);
        v34 = v106;
        OUTLINED_FUNCTION_27_9();
      }
      v33 = v116;
      if (v33 == MEMORY[0x22E2E3364](v38, v39))
        goto LABEL_12;
    }
    result = sub_22ABDF800();
    __break(1u);
  }
  return result;
}

void sub_22A9CF800(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_13_12(a1, a2, a3);
  OUTLINED_FUNCTION_20_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9CF82C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A9CF864(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_22A9CF8EC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_22A9CF938 + 4 * byte_22ABEB7DE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_22A9CF96C + 4 * byte_22ABEB7D9[v4]))();
}

uint64_t sub_22A9CF96C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9CF974(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9CF97CLL);
  return result;
}

uint64_t sub_22A9CF988(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9CF990);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_22A9CF994(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9CF99C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22A9CF9A8()
{
  unint64_t v0;
  unint64_t v1;

  sub_22A9B9E9C();
  if (v0 <= 0x3F)
  {
    sub_22A9B9EEC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

char *sub_22A9CFA2C(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v8(&a1[*(int *)(a3 + 36)], (char *)a2 + *(int *)(a3 + 36), v7);
    v9 = *(int *)(a3 + 40);
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_22A9CFB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v7(a1, v4);
  v7(a1 + *(int *)(a2 + 36), v4);
  v5 = a1 + *(int *)(a2 + 40);
  result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!(_DWORD)result)
    return v7(v5, v4);
  return result;
}

char *sub_22A9CFBE0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(&a1[*(int *)(a3 + 36)], &a2[*(int *)(a3 + 36)], v6);
  v8 = *(int *)(a3 + 40);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_22A9CFCBC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 36)], &a2[*(int *)(a3 + 36)], v6);
  v9 = *(int *)(a3 + 40);
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  return a1;
}

char *sub_22A9CFDE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(&a1[*(int *)(a3 + 36)], &a2[*(int *)(a3 + 36)], v6);
  v8 = *(int *)(a3 + 40);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_22A9CFEC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 36)], &a2[*(int *)(a3 + 36)], v6);
  v9 = *(int *)(a3 + 40);
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  return a1;
}

uint64_t sub_22A9CFFE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9CFFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    v8 = a1 + *(int *)(a3 + 40);
  }
  return OUTLINED_FUNCTION_78_0(v8, a2, v7);
}

uint64_t sub_22A9D005C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9D0068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_24_7();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == v3)
  {
    v5 = v4;
    v6 = v1;
  }
  else
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    v6 = v1 + *(int *)(v2 + 40);
  }
  return OUTLINED_FUNCTION_77_0(v6, v0, v0, v5);
}

void sub_22A9D00CC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9D00DC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9D00EC()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for AdamWStorage.Moment.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdamWStorage.Moment.CodingKeys);
}

void sub_22A9D0108(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_13_12(a1, a2, a3);
  OUTLINED_FUNCTION_20_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A9D0134(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22A9D0180 + 4 * byte_22ABEB7E8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22A9D01B4 + 4 * byte_22ABEB7E3[v4]))();
}

uint64_t sub_22A9D01B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9D01BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9D01C4);
  return result;
}

uint64_t sub_22A9D01D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9D01D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22A9D01DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9D01E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22A9D01F0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9D0200()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9D0210()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_13@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_22ABDFC68();
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 152) + 8))(*(_QWORD *)(v1 - 104), v0);
}

uint64_t OUTLINED_FUNCTION_7_13()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v0 - 272) - 8) + 8))(*(_QWORD *)(v0 - 376));
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_12_11()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(*(_QWORD *)(v1 - 264), v0);
}

uint64_t OUTLINED_FUNCTION_13_12(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_19_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_9()
{
  return sub_22ABDFC8C();
}

void OUTLINED_FUNCTION_22_6()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_30_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_31_5()
{
  return sub_22ABDEB28();
}

void TimeSeriesClassifier.Model.export(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for CoreMLPackage();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_33();
  v8 = v7 - v6;
  sub_22A9D0408(a2, v7 - v6);
  if (!v2)
  {
    sub_22AB31614(a1);
    sub_22A9D1534(v8, (uint64_t (*)(_QWORD))type metadata accessor for CoreMLPackage);
  }
  OUTLINED_FUNCTION_9_14();
}

void sub_22A9D0408(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(void);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(_QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 *v66;
  __n128 v67;
  uint64_t v68;
  void (*v69)(uint64_t, char *, uint64_t, __n128);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t *, _QWORD);
  uint64_t v74;
  __n128 *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 *v90;
  __n128 v91;
  uint64_t v92;
  void (*v93)(uint64_t, _QWORD, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  __n128 *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  __int128 v152;
  _QWORD v153[3];
  __int128 v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  _QWORD v158[3];
  _BYTE v159[24];
  __int128 v160;
  __int128 v161;
  __int128 v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;

  v149 = a1;
  v125 = a2;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0();
  v124 = v3;
  OUTLINED_FUNCTION_36();
  sub_22ABDE798();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  v121 = v5;
  OUTLINED_FUNCTION_36();
  v117 = sub_22ABDDC88();
  v114 = *(_QWORD *)(v117 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v118 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B0E210);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  v113 = v9;
  OUTLINED_FUNCTION_36();
  v10 = sub_22ABDDC10();
  v141 = *(_QWORD *)(v10 - 8);
  v142 = v10;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0();
  v140 = v12;
  OUTLINED_FUNCTION_36();
  v13 = sub_22ABDDC64();
  v137 = *(_QWORD *)(v13 - 8);
  v138 = v13;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_0();
  v139 = v15;
  OUTLINED_FUNCTION_36();
  v16 = sub_22ABDE324();
  v122 = *(_QWORD *)(v16 - 8);
  v123 = v16;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_87();
  v120 = v18;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v19);
  v147 = (char *)&v112 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FB90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_0();
  v135 = v22;
  OUTLINED_FUNCTION_36();
  v119 = sub_22ABDE690();
  v116 = *(_QWORD *)(v119 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_87();
  v115 = v24;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v25);
  v146 = (char *)&v112 - v26;
  OUTLINED_FUNCTION_36();
  v27 = sub_22ABDD544();
  v132 = *(_QWORD *)(v27 - 8);
  v133 = v27;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_0();
  v130 = v29;
  v30 = OUTLINED_FUNCTION_36();
  v131 = type metadata accessor for LSTMFCN(v30);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_0();
  v145 = v32;
  OUTLINED_FUNCTION_36();
  v33 = sub_22ABDE60C();
  v34 = *(_QWORD *)(v33 - 8);
  v127 = v33;
  v128 = v34;
  v35 = v34;
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_33();
  v38 = v37 - v36;
  v39 = sub_22ABDE75C();
  v143 = *(_QWORD *)(v39 - 8);
  v144 = v39;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_87();
  v134 = v41;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v42);
  v151 = (char *)&v112 - v43;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v44);
  v150 = (char *)&v112 - v45;
  sub_22AB5E3C4((uint64_t)&v165);
  v158[0] = MEMORY[0x24BEE4B00];
  v158[1] = MEMORY[0x24BEE4B00];
  v158[2] = MEMORY[0x24BEE4AF8];
  *(_OWORD *)v159 = v165;
  *(_QWORD *)&v159[16] = v166;
  v160 = v167;
  v161 = v168;
  v162 = v169;
  v163 = v170;
  v164 = v171;
  v46 = *MEMORY[0x24BE630B8];
  v129 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 104);
  OUTLINED_FUNCTION_49(v38, v46, v129);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FB98);
  v47 = sub_22ABDE468();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(_QWORD *)(v48 + 72);
  v50 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v51 = swift_allocObject();
  v152 = xmmword_22ABE9FB0;
  *(_OWORD *)(v51 + 16) = xmmword_22ABE9FB0;
  v52 = v51 + v50;
  *(_BYTE *)(v51 + v50) = 0;
  v53 = *(void (**)(void))(v48 + 104);
  ((void (*)(unint64_t, _QWORD, uint64_t))v53)(v51 + v50, *MEMORY[0x24BE62EF8], v47);
  v148 = *(int *)(v149 + 92);
  *(_QWORD *)(v52 + v49) = *(_QWORD *)(v179 + v148);
  v53();
  sub_22ABDE750();
  swift_bridgeObjectRelease();
  v54 = v127;
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_10_8();
  sub_22AA1DE90();
  v129(v38, *MEMORY[0x24BE630A8], v54);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_22ABE8E30;
  sub_22ABDE45C();
  sub_22ABDE750();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_1_14();
  sub_22AA1DE90();
  v56 = v132;
  v55 = v133;
  v57 = v130;
  OUTLINED_FUNCTION_49(v130, *MEMORY[0x24BE6B9A8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 104));
  sub_22A9C6C74();
  v58 = v179;
  sub_22ABDD85C();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v55);
  v59 = v149;
  v60 = *(void (**)(_QWORD))(v58 + v148);
  v172 = *(_QWORD *)(v58 + *(int *)(v149 + 88));
  v153[2] = *(_QWORD *)(v149 + 16);
  v154 = *(_OWORD *)(v149 + 24);
  v155 = *(_OWORD *)(v149 + 40);
  v156 = *(_OWORD *)(v149 + 56);
  v157 = *(_QWORD *)(v149 + 72);
  v61 = sub_22ABDF0F8();
  sub_22ABDEAEC();
  v62 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v61);
  v63 = v136;
  v65 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22A9D14BC, (uint64_t)v153, v61, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], v62, MEMORY[0x24BEE40A8], v64);
  v136 = v63;
  swift_bridgeObjectRelease();
  sub_22AA9B52C((uint64_t)v158, v60, v65);
  swift_bridgeObjectRelease();
  sub_22ABDE684();
  __swift_instantiateConcreteTypeFromMangledName(qword_255B0FBA0);
  sub_22ABDE450();
  v66 = (__n128 *)swift_allocObject();
  v67 = OUTLINED_FUNCTION_7_14(v66);
  v68 = v144;
  v69 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v143 + 16);
  v70 = v134;
  v69(v134, v150, v144, v67);
  OUTLINED_FUNCTION_10_8();
  sub_22ABDE420();
  ((void (*)(uint64_t, char *, uint64_t))v69)(v70, v151, v68);
  OUTLINED_FUNCTION_1_14();
  sub_22ABDE420();
  sub_22ABDE66C();
  sub_22ABDE654();
  sub_22ABDEAEC();
  v71 = (uint64_t)v135;
  sub_22ABDE4A4();
  v72 = sub_22ABDE4B0();
  __swift_storeEnumTagSinglePayload(v71, 0, 1, v72);
  v73 = (void (*)(uint64_t *, _QWORD))sub_22ABDE630();
  sub_22AAF4588(v71, 0x364C4D65726F43, 0xE700000000000000);
  v73(&v172, 0);
  sub_22ABDE318();
  v74 = *MEMORY[0x24BE624E0];
  v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 104);
  v135(v140, v74, v142);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v75 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_7_14(v75);
  v76 = *(_QWORD *)(v179 + *(int *)(v59 + 96));
  v77 = *(_QWORD *)(v179 + v148);
  v78 = v179;
  *(_QWORD *)(v79 + 32) = v76;
  *(_QWORD *)(v79 + 40) = v77;
  v80 = v139;
  sub_22ABDDC1C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B0E220);
  sub_22ABDE7A4();
  v81 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_7_14(v81);
  if (*(_QWORD *)(v78 + *(int *)(v59 + 100)) < v76)
  {
    __break(1u);
  }
  else
  {
    v83 = v82;
    sub_22ABDE7B0();
    sub_22ABDE7B0();
    v84 = (uint64_t)v113;
    *v113 = v83;
    v85 = *MEMORY[0x24BE62510];
    v86 = sub_22ABDDC34();
    OUTLINED_FUNCTION_49(v84, v85, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 104));
    __swift_storeEnumTagSinglePayload(v84, 0, 1, v86);
    sub_22ABDDC40();
    v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
    v87 = *(_QWORD *)(sub_22ABDDE68() - 8);
    v88 = *(_QWORD *)(v87 + 72);
    v89 = *(unsigned __int8 *)(v87 + 80);
    v134 = v88;
    v148 = v89 | 7;
    v149 = ((v89 + 32) & ~v89) + 2 * v88;
    v90 = (__n128 *)swift_allocObject();
    v91 = OUTLINED_FUNCTION_7_14(v90);
    v92 = v118;
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v137 + 16))(v118, v80, v138, v91);
    v93 = *(void (**)(uint64_t, _QWORD, uint64_t))(v114 + 104);
    v94 = v117;
    v93(v92, *MEMORY[0x24BE62400], v117);
    OUTLINED_FUNCTION_3_17();
    v95 = v140;
    v96 = v142;
    v135(v140, *MEMORY[0x24BE624C8], v142);
    sub_22ABDDB74();
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v95, v96);
    OUTLINED_FUNCTION_1_14();
    OUTLINED_FUNCTION_3_17();
    v97 = v147;
    sub_22ABDE2C4();
    v98 = (__n128 *)swift_allocObject();
    OUTLINED_FUNCTION_7_14(v98);
    sub_22ABDDC04();
    v93(v92, *MEMORY[0x24BE62578], v94);
    OUTLINED_FUNCTION_14_8();
    OUTLINED_FUNCTION_3_17();
    sub_22ABDDC7C();
    OUTLINED_FUNCTION_3_17();
    sub_22ABDE300();
    v100 = v115;
    v99 = v116;
    v101 = v146;
    v102 = v119;
    (*(void (**)(uint64_t, char *, uint64_t))(v116 + 16))(v115, v146, v119);
    sub_22ABDE78C();
    v103 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
    v103(v100, v102);
    sub_22ABDE288();
    sub_22ABDE258();
    OUTLINED_FUNCTION_14_8();
    sub_22ABDE240();
    sub_22ABDE270();
    sub_22ABDE228();
    v105 = v122;
    v104 = v123;
    v106 = v120;
    (*(void (**)(uint64_t, char *, uint64_t))(v122 + 16))(v120, v97, v123);
    v173 = *(_OWORD *)&v159[8];
    v174 = v160;
    v175 = v161;
    v176 = v162;
    v172 = *(_QWORD *)v159;
    v177 = v163;
    v178 = v164;
    sub_22A9D14F0(*(uint64_t *)v159, *(unint64_t *)&v159[8]);
    sub_22ABDEAEC();
    v107 = v124;
    sub_22ABDE3CC();
    sub_22AB314C8(v106, v107, &v172, v125);
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v139, v138);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v97, v104);
    v103((uint64_t)v101, v102);
    sub_22A9D1534(v145, type metadata accessor for LSTMFCN);
    v108 = v144;
    v109 = *(void (**)(char *, uint64_t))(v143 + 8);
    v109(v151, v144);
    v109(v150, v108);
    v110 = *(_QWORD *)v159;
    v111 = *(_QWORD *)&v159[8];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22A9D1570(v110, v111);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_16();
  }
}

void TimeSeriesClassifier.Model.export(to:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t *v12;
  _BYTE v13[32];
  uint64_t v14;

  v14 = a1;
  type metadata accessor for CoreMLPackage();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v10 = *(_QWORD *)(a2 + 64);
  sub_22A9D0408(a3, v8 - v7);
  if (!v3)
  {
    sub_22ABDEAEC();
    sub_22ABDE354();
    sub_22ABDEAEC();
    sub_22ABDE3C0();
    sub_22ABDEAEC();
    sub_22ABDE390();
    sub_22ABDEAEC();
    sub_22ABDE3A8();
    sub_22ABDEAEC();
    v11 = (void (*)(_BYTE *, _QWORD))sub_22ABDE360();
    sub_22A9D11D8(v10, (uint64_t)sub_22A9D147C, 0, v12);
    v11(v13, 0);
    sub_22AB31614(v14);
    sub_22A9D1534(v9, (uint64_t (*)(_QWORD))type metadata accessor for CoreMLPackage);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9D10FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_22ABDED80();
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_22A9D117C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22A9D0408(a1, a2);
}

uint64_t sub_22A9D1190(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *a1 = a4;
  a1[1] = a5;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a2;
}

void sub_22A9D11D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *a4;
  *a4 = 0x8000000000000000;
  sub_22A9D1254(a1, a2, a3, isUniquelyReferenced_nonNull_native, &v9);
  *a4 = v9;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_14();
}

uint64_t sub_22A9D1254(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  __int128 v38;

  sub_22AB36E40(a1, a2, a3, &v38);
  sub_22ABDEAEC();
  swift_retain();
  v7 = sub_22AB34114();
  if (v8)
  {
    v11 = v7;
    v12 = v8;
    v13 = v9;
    v14 = v10;
    while (1)
    {
      v15 = (_QWORD *)*a5;
      v17 = sub_22AA03688();
      v18 = v15[2];
      v19 = (v16 & 1) == 0;
      v20 = v18 + v19;
      if (__OFADD__(v18, v19))
        break;
      v21 = v16;
      if (v15[3] >= v20)
      {
        if ((a4 & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F2A0);
          sub_22ABDFA70();
        }
      }
      else
      {
        sub_22AAD82FC(v20, a4 & 1);
        v22 = sub_22AA03688();
        if ((v21 & 1) != (v23 & 1))
          goto LABEL_17;
        v17 = v22;
      }
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
      {
        v25 = (uint64_t *)(v24[7] + 16 * v17);
        v27 = *v25;
        v26 = v25[1];
        sub_22ABDEAEC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = (_QWORD *)(v24[7] + 16 * v17);
        swift_bridgeObjectRelease();
        *v28 = v27;
        v28[1] = v26;
      }
      else
      {
        v24[(v17 >> 6) + 8] |= 1 << v17;
        v29 = (uint64_t *)(v24[6] + 16 * v17);
        *v29 = v11;
        v29[1] = v12;
        v30 = (_QWORD *)(v24[7] + 16 * v17);
        *v30 = v13;
        v30[1] = v14;
        v31 = v24[2];
        v32 = __OFADD__(v31, 1);
        v33 = v31 + 1;
        if (v32)
          goto LABEL_16;
        v24[2] = v33;
      }
      v11 = sub_22AB34114();
      v12 = v34;
      v13 = v35;
      v14 = v36;
      a4 = 1;
      if (!v34)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    result = sub_22ABE0190();
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    sub_22A9C38B4();
    return swift_release();
  }
  return result;
}

uint64_t sub_22A9D147C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  result = sub_22A9D1190(v7, *a1, a1[1], a1[2], a1[3]);
  v4 = v7[0];
  v5 = v7[1];
  *a2 = result;
  a2[1] = v6;
  a2[2] = v4;
  a2[3] = v5;
  return result;
}

uint64_t sub_22A9D14BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22A9D10FC(a1, a2);
}

uint64_t sub_22A9D14F0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_22A9D1534(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22A9D1570(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  return sub_22ABDDE2C();
}

__n128 OUTLINED_FUNCTION_7_14(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[20];
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_8()
{
  return 0x7475706E69;
}

uint64_t OUTLINED_FUNCTION_13_13()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_8()
{
  return 0x6C6562616CLL;
}

void OrdinalEncoder.fitted<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_12();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_33();
  v31 = v30 - v29;
  if ((sub_22AA2F904() & 1) == 0)
    sub_22AA2F98C(0x456C616E6964724FLL, 0xEE007265646F636ELL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v31, v27, v23);
  v32 = v25[2];
  v33 = OUTLINED_FUNCTION_15_8();
  a10 = v25[6];
  v34 = a10;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE4AB0], v33, &a10);
  v35 = sub_22ABDF2E4();
  OrdinalEncoder.Transformer.init(categories:)(v35, v32, v25[3], v25[4], v25[5], v34);
}

void sub_22A9D1704()
{
  OUTLINED_FUNCTION_16();
}

void OrdinalEncoder.Transformer.init(categories:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[7];
  uint64_t v16;
  uint64_t v17;

  v17 = a1;
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  v15[5] = a5;
  v15[6] = a6;
  v9 = sub_22ABDF5D8();
  v16 = a6;
  sub_22ABDEAEC();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE4AB0], v9, &v16);
  v10 = sub_22ABDF2D8();
  v11 = type metadata accessor for ComparableOptional(0, a2, a3, a6);
  v12 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE1728], v10);
  v14 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22A9D2430, (uint64_t)v15, v10, v11, MEMORY[0x24BEE4078], v12, MEMORY[0x24BEE40A8], v13);
  swift_bridgeObjectRelease();
  v17 = v14;
  sub_22ABDF0F8();
  OUTLINED_FUNCTION_106();
}

void sub_22A9D1818()
{
  uint64_t v0;

  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v0);
  sub_22ABDF2E4();
  OUTLINED_FUNCTION_106();
}

uint64_t sub_22A9D1854()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_22AB7AC80();
  *v0 = v1;
  v0[1] = result;
  v0[2] = v3;
  return result;
}

#error "22A9D18AC: call analysis failed (funcsize=18)"

void OrdinalEncoder.makeTransformer()(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[2];
  v3 = sub_22ABDF5D8();
  v6 = a1[6];
  v4 = v6;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE4AB0], v3, &v6);
  v5 = sub_22ABDEA08();
  OrdinalEncoder.Transformer.init(categories:)(v5, v2, a1[3], a1[4], a1[5], v4);
}

void OrdinalEncoder.update<A>(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_12();
  a19 = v22;
  a20 = v23;
  v57 = v20;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v55 = v28[2];
  v34 = sub_22ABDF5D8();
  OUTLINED_FUNCTION_14_9();
  v35 = sub_22ABDF5D8();
  v50 = *(_QWORD *)(v35 - 8);
  v51 = v35;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v36);
  v53 = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_13_0();
  v38 = MEMORY[0x24BDAC7A8](v37);
  v52 = (char *)&v46 - v39;
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_9_15();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v21, v31, v27);
  v54 = v29[6];
  a10 = v54;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE4AB0], v34, &a10);
  v56 = v25;
  v41 = sub_22ABDF2E4();
  sub_22ABDEAEC();
  LOBYTE(v25) = sub_22ABDF2A8();
  v42 = swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    v49 = &v46;
    v58 = v41;
    MEMORY[0x24BDAC7A8](v42);
    *(&v46 - 8) = v55;
    *(&v46 - 7) = v27;
    v43 = v29[3];
    v47 = v29[4];
    v44 = v47;
    v48 = v43;
    *(&v46 - 6) = v43;
    *(&v46 - 5) = v44;
    v45 = v54;
    *(&v46 - 4) = v29[5];
    *(&v46 - 3) = v45;
    *(&v46 - 2) = v56;
    *(&v46 - 1) = (uint64_t)v33;
    OUTLINED_FUNCTION_14_9();
    sub_22ABDF2D8();
    OUTLINED_FUNCTION_106();
  }
  swift_bridgeObjectRelease();
  *v33 = v41;
  OUTLINED_FUNCTION_16();
}

BOOL sub_22A9D1C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v11;

  v9 = sub_22ABDF5D8();
  v11 = a8;
  sub_22ABDEAEC();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE4AB0], v9, &v11);
  LOBYTE(a8) = sub_22ABDF2C0();
  swift_bridgeObjectRelease();
  return (a8 & 1) == 0;
}

uint64_t sub_22A9D1D0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_22ABDED80();
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_22A9D1D90()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  OUTLINED_FUNCTION_12();
  v24 = v3;
  v25 = v2;
  v26 = v4;
  v6 = v5;
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_9_15();
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_33();
  v14 = v13 - v12;
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_33();
  v18 = v17 - v16;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v17 - v16, v20);
  v21 = 1;
  if (__swift_getEnumTagSinglePayload(v18, 1, v9) == 1)
    goto LABEL_5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v14, v18, v9);
  v25(v14, v1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v9);
  if (!v0)
  {
    v21 = 0;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v6, v21, 1, v26);
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v24, v1, v23);
LABEL_6:
  OUTLINED_FUNCTION_16();
}

void OrdinalEncoder.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2)
{
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  OUTLINED_FUNCTION_5_13();
}

void sub_22A9D1F34()
{
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22A9D1F44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  return v4(&v6, v1, a1, v2, v3);
}

void OrdinalEncoder.decodeWithOptimizer(from:)()
{
  OUTLINED_FUNCTION_5_13();
}

void sub_22A9D1FB0()
{
  uint64_t v0;

  __swift_mutable_project_boxed_opaque_existential_1(v0, *(_QWORD *)(v0 + 24));
  OUTLINED_FUNCTION_106();
}

uint64_t sub_22A9D1FD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  return v4(v1, v1, a1, v2, v3);
}

void sub_22A9D2014(_QWORD *a1)
{
  OrdinalEncoder.makeTransformer()(a1);
}

#error "22A9D2054: call analysis failed (funcsize=23)"

void sub_22A9D2084(uint64_t a1, uint64_t a2)
{
  OrdinalEncoder.encodeWithOptimizer(_:to:)(a1, a2);
}

void sub_22A9D2098()
{
  OrdinalEncoder.decodeWithOptimizer(from:)();
}

uint64_t OrdinalEncoder.Transformer.categories.getter()
{
  return sub_22ABDEAEC();
}

uint64_t OrdinalEncoder.Transformer.categories.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*OrdinalEncoder.Transformer.categories.modify())()
{
  return nullsub_1;
}

BOOL sub_22A9D20EC()
{
  uint64_t v0;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_22A9D2134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2E4D80](&unk_22ABEBCE8, a3);
  return sub_22ABDFFF8();
}

uint64_t sub_22A9D2188(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEBCE8, a1);
  return sub_22ABDEF9C();
}

uint64_t sub_22A9D21D4()
{
  MEMORY[0x22E2E4D80](&unk_22ABEBCE8);
  return sub_22ABDEFB4();
}

uint64_t sub_22A9D2224()
{
  MEMORY[0x22E2E4D80](&unk_22ABEBCE8);
  return sub_22ABDEFA8();
}

BOOL sub_22A9D2274@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_22A9D20EC();
  *a1 = result;
  return result;
}

void sub_22A9D22A8(_QWORD *a1@<X8>)
{
  *a1 = 0x69726F6765746163;
  a1[1] = 0xEA00000000007365;
}

uint64_t sub_22A9D22C8()
{
  return 0x69726F6765746163;
}

uint64_t sub_22A9D22E4@<X0>(BOOL *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9D2130();
  *a1 = result != 0;
  return result;
}

void sub_22A9D2310(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_22A9D231C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEBD88, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9D2350(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEBD88, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22A9D2384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  v6 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v11 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)v11 - v7, a1);
  return sub_22A9A2248((uint64_t)v8, a2, a3);
}

uint64_t sub_22A9D2430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22A9D2384(a1, *(_QWORD *)(v2 + 16), a2);
}

BOOL sub_22A9D2454(uint64_t a1)
{
  uint64_t *v1;

  return sub_22A9D1C78(a1, v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_22A9D2488@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22A9D1D0C(a1, a2);
}

void type metadata accessor for OrdinalEncoder.Transformer()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t OrdinalEncoder.Transformer.applied(to:eventHandler:)()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_12();
  v22 = v2;
  v23 = v3;
  v5 = v4;
  v18 = v6;
  v7 = v4[2];
  v8 = OUTLINED_FUNCTION_15_8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - v10;
  v19 = type metadata accessor for ComparableOptional(0, v7, v5[3], v5[6]);
  v17 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_11_15();
  v13 = *((_QWORD *)v0 + 2);
  v20 = *v0;
  v21 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v18, v8);
  sub_22A9A2248((uint64_t)v11, v7, v1);
  v14 = sub_22A9D25F0(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v19);
  return v14;
}

uint64_t sub_22A9D25F0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = a2[2];
  v6 = sub_22ABDF5D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - v8;
  v11 = *(_QWORD *)(v2 + 8);
  v10 = *(_QWORD *)(v2 + 16);
  v12 = type metadata accessor for ComparableOptional(0, v5, a2[3], a2[6]);
  v13 = MEMORY[0x22E2E4D80](&unk_22ABE9080, v12);
  v14 = MEMORY[0x22E2E4D80](&unk_22ABE90C8, v12);
  result = sub_22AB7AE5C(a1, v11, v10, v12, v13, v14);
  if ((v16 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    v17 = sub_22ABDED80();
    v19 = v18;
    sub_22A9B7B50();
    v20 = swift_allocError();
    *(_OWORD *)v21 = xmmword_22ABEBB20;
    *(_QWORD *)(v21 + 16) = v17;
    *(_QWORD *)(v21 + 24) = v19;
    *(_BYTE *)(v21 + 32) = 3;
    return swift_willThrow(v20);
  }
  return result;
}

uint64_t OrdinalEncoder.Transformer.applied<A>(_:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __int128 *v6;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD v13[4];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *((_QWORD *)v6 + 2);
  v13[2] = *(_QWORD *)(a4 + 16);
  v13[3] = a5;
  v10 = *(_OWORD *)(a4 + 40);
  v14 = *(_OWORD *)(a4 + 24);
  v15 = v10;
  v16 = a6;
  v17 = *v6;
  v18 = v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  return sub_22A9C2540((uint64_t)sub_22A9D2984, (uint64_t)v13, a5, MEMORY[0x24BEE1768], v11, a6, MEMORY[0x24BEE3F20], (uint64_t)&v19);
}

void sub_22A9D27F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v21 = a3;
  v22 = a4;
  v19[1] = a8;
  v20 = a2;
  v23 = a1;
  v24 = a9;
  v25 = a7;
  v12 = sub_22ABDF5D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v19 - v14;
  v16 = type metadata accessor for ComparableOptional(0, a5, a6, a10);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v19 - v17;
  v31 = v20;
  v32 = v21;
  v33 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v23, v12);
  sub_22A9A2248((uint64_t)v15, a5, (uint64_t)v18);
  v26 = a5;
  v27 = a6;
  v28 = v25;
  v29 = v24;
  v30 = a10;
  type metadata accessor for OrdinalEncoder.Transformer();
}

uint64_t sub_22A9D2908(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 - 72);
  v6 = sub_22A9D25F0(v3, a1);
  if (v5)
  {
    v7 = *(_QWORD **)(v4 + 40);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
    *v7 = v5;
  }
  else
  {
    v9 = v6;
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
    **(_QWORD **)(v4 - 200) = v9;
  }
  return result;
}

void sub_22A9D2984(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_22A9D27F4(a1, v2[9], v2[10], v2[11], v2[2], v2[4], v2[5], a2, v2[6], v2[7]);
}

void OrdinalEncoder.Transformer.category(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = OUTLINED_FUNCTION_14_9();
  type metadata accessor for ComparableOptional(v0, v1, v2, v3);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_11_15();
  OUTLINED_FUNCTION_106();
}

void sub_22A9D2A1C()
{
  OUTLINED_FUNCTION_106();
}

uint64_t sub_22A9D2A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22AB7AE54();
  OUTLINED_FUNCTION_14_9();
  v2 = sub_22ABDF5D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
}

uint64_t sub_22A9D2A88(uint64_t *a1)
{
  uint64_t v1;

  *a1 = OrdinalEncoder.Transformer.applied(to:eventHandler:)();
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t OrdinalEncoder.Transformer.debugDescription.getter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  uint64_t v8;
  unint64_t v9;

  v3 = *v1;
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  v7[1] = v3;
  v4 = sub_22ABDF5D8();
  v7[0] = *(_QWORD *)(a1 + 48);
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE4AB0], v4, v7);
  v5 = sub_22ABDF2D8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE1730], v5);
  sub_22ABDFF38();
  sub_22ABDEDC8();
  return v8;
}

void OrdinalEncoder.Transformer.encode(to:)()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_17_6();
}

void sub_22A9D2C1C(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x22E2E4D80](&unk_22ABEBD88, a1);
  *(_QWORD *)(v3 - 160) = *(_QWORD *)(sub_22ABDFD58() - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = *v1;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_22ABE02B0();
  *(_QWORD *)(v3 - 128) = v5;
  sub_22ABDF5D8();
  *(_QWORD *)(v3 - 72) = *(_QWORD *)(v3 - 176);
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9D2CD0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_15();
  *(_QWORD *)(v0 - 136) = *(_QWORD *)(v0 - 168);
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9D2CF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 144) = a1;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE1700], v3, v4 - 144);
  sub_22ABDFD4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 160) + 8))(v2, v1);
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for OrdinalEncoder.Transformer.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22A9D2D58()
{
  OrdinalEncoder.Transformer.encode(to:)();
}

void OrdinalEncoder.Transformer.init(from:)()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_17_6();
}

void sub_22A9D2DAC()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9D2DBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_22ABDFCB0();
  *(_QWORD *)(v2 - 152) = v3;
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_11_15();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_22ABE0298();
  if (!v1)
  {
    sub_22ABDF5D8();
    *(_QWORD *)(v2 - 72) = *(_QWORD *)(v2 - 176);
    OUTLINED_FUNCTION_52_3();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  OUTLINED_FUNCTION_16();
}

void sub_22A9D2F14()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9D2F24(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for OrdinalEncoder<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22A9D2F50()
{
  OrdinalEncoder.Transformer.init(from:)();
}

void sub_22A9D2F74()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[8];
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  v5 = sub_22ABDE3D8();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v27 = v6;
  v23 = sub_22ABDDC88();
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_0();
  v22[7] = v8;
  v9 = sub_22ABDE798();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v22[6] = v11;
  v12 = sub_22ABDE324();
  v25 = *(_QWORD *)(v12 - 8);
  v26 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v24 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v22 - v15;
  v17 = v2[2];
  if (swift_dynamicCastMetatype())
  {
    v22[1] = v10;
    v22[2] = v9;
    v22[3] = v7;
    v22[4] = v4;
    v22[5] = v0;
    sub_22ABDE318();
    v28 = v16;
    sub_22ABDE258();
    type metadata accessor for ComparableOptional(0, v17, v2[3], v2[6]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FD90);
    OUTLINED_FUNCTION_52_3();
  }
  type metadata accessor for SerializationError();
  sub_22A9D395C();
  OUTLINED_FUNCTION_53();
  v19 = v18;
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABE0304();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  v20 = v30;
  *v19 = v29;
  v19[1] = v20;
  v21 = swift_storeEnumTagMultiPayload();
  swift_willThrow(v21);
  OUTLINED_FUNCTION_16();
}

void sub_22A9D366C()
{
  sub_22A9D2F74();
}

void type metadata accessor for OrdinalEncoder()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22A9D3690()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22A9D36C0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22A9D370C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22A9D3780(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HumanBodyActionPeriodPredictor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HumanBodyActionPeriodPredictor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AnnotatedFiles.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_22A9D38A0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22A9D38E0 + 4 * byte_22ABEBB30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22A9D3900 + 4 * byte_22ABEBB35[v4]))();
}

_BYTE *sub_22A9D38E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22A9D3900(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22A9D3908(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22A9D3910(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22A9D3918(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22A9D3920(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_22A9D392C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9D393C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9D394C()
{
  JUMPOUT(0x22E2E4D80);
}

unint64_t sub_22A9D395C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540E8B40;
  if (!qword_2540E8B40)
  {
    v1 = type metadata accessor for SerializationError();
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for SerializationError, v1);
    atomic_store(result, (unint64_t *)&qword_2540E8B40);
  }
  return result;
}

unint64_t sub_22A9D399C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B0FD98[0];
  if (!qword_255B0FD98[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0FD90);
    result = MEMORY[0x22E2E4D80](&unk_22ABE90C8, v1);
    atomic_store(result, qword_255B0FD98);
  }
  return result;
}

void OUTLINED_FUNCTION_5_13()
{
  type metadata accessor for OrdinalEncoder.Transformer();
}

uint64_t OUTLINED_FUNCTION_7_15()
{
  return sub_22ABDF2D8();
}

uint64_t OUTLINED_FUNCTION_11_16()
{
  return sub_22ABDDE2C();
}

uint64_t OUTLINED_FUNCTION_12_12()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_13_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 152));
}

uint64_t OUTLINED_FUNCTION_14_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_15_8()
{
  return sub_22ABDF5D8();
}

void OUTLINED_FUNCTION_17_6()
{
  type metadata accessor for OrdinalEncoder.Transformer.CodingKeys();
}

uint64_t AnnotatedBatch.features.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_7();
  v0 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t AnnotatedBatch.features.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_7_16();
  v0 = OUTLINED_FUNCTION_6_17();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t (*AnnotatedBatch.features.modify())()
{
  return nullsub_1;
}

uint64_t AnnotatedBatch.annotations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_7();
  v0 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t AnnotatedBatch.annotations.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_7_16();
  v0 = OUTLINED_FUNCTION_6_17();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t (*AnnotatedBatch.annotations.modify())()
{
  return nullsub_1;
}

uint64_t AnnotatedBatch.count.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_7();
  v0 = sub_22ABDE84C();
  if (*(_QWORD *)(v0 + 16))
    v1 = *(_QWORD *)(v0 + 32);
  else
    v1 = 0;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t AnnotatedBatch.init(features:annotations:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  v10 = sub_22ABDE8A0();
  v11 = sub_22ABDE84C();
  if (!*(_QWORD *)(v11 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v11 + 32);
  swift_bridgeObjectRelease();
  v13 = sub_22ABDE84C();
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v14 = *(_QWORD *)(v13 + 32);
  swift_bridgeObjectRelease();
  if (v12 == v14)
  {
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
    v18(a5, a1, v10);
    v16 = a5 + *(int *)(type metadata accessor for AnnotatedBatch(0, a3, a4, v15) + 36);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v16, a2, v10);
  }
LABEL_7:
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

uint64_t sub_22A9D3CA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7365727574616566 && a2 == 0xE800000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697461746F6E6E61 && a2 == 0xEB00000000736E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22A9D3DA4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x697461746F6E6E61;
  else
    return 0x7365727574616566;
}

BOOL sub_22A9D3DE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22A9AFA2C(*a1, *a2);
}

uint64_t sub_22A9D3DF8()
{
  return sub_22A9AFB4C();
}

uint64_t sub_22A9D3E08()
{
  return _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_22A9D3E18()
{
  sub_22ABE0244();
  _s18CreateMLComponents12MatrixLayoutO4hash4intoys6HasherVz_tF_0();
  return sub_22ABE0280();
}

uint64_t sub_22A9D3E5C()
{
  char *v0;

  return sub_22A9D3DA4(*v0);
}

uint64_t sub_22A9D3E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9D3CA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9D3E98()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22A9D3EBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9AFB44();
  *a1 = result;
  return result;
}

uint64_t sub_22A9D3EE8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEBFA0, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9D3F1C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABEBFA0, a1);
  return sub_22ABE02F8();
}

void AnnotatedBatch<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  v14 = a3;
  v12 = a2;
  v5 = type metadata accessor for AnnotatedBatch.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x22E2E4D80](&unk_22ABEBFA0, v5);
  v6 = sub_22ABDFD58();
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  v18 = 0;
  v9 = sub_22ABDE8A0();
  v16 = v14;
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD8], v9, &v16);
  OUTLINED_FUNCTION_8_12();
  v10 = v15;
  sub_22ABDFD4C();
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
  }
  else
  {
    v11 = v13;
    v17 = 1;
    OUTLINED_FUNCTION_8_12();
    sub_22ABDFD4C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v6);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22A9D40C8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  AnnotatedBatch<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8), a4);
}

void AnnotatedBatch<>.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;

  v31 = a4;
  v26 = a5;
  v33 = sub_22ABDE8A0();
  v30 = *(_QWORD *)(v33 - 8);
  v8 = MEMORY[0x24BDAC7A8](v33);
  v29 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v26 - v10;
  v12 = type metadata accessor for AnnotatedBatch.CodingKeys(255, a2, a3, v11);
  MEMORY[0x22E2E4D80](&unk_22ABEBFA0, v12);
  v35 = sub_22ABDFCB0();
  v28 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v14 = (char *)&v26 - v13;
  v27 = type metadata accessor for AnnotatedBatch(0, a2, a3, v15);
  v16 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v18 = (char *)&v26 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v34 = v14;
  v19 = v36;
  sub_22ABE0298();
  if (v19)
  {
    OUTLINED_FUNCTION_9_16();
  }
  else
  {
    v20 = v27;
    v36 = v16;
    v21 = v18;
    v23 = v29;
    v22 = v30;
    v39 = 0;
    v37 = v31;
    MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCE8], v33, &v37);
    OUTLINED_FUNCTION_1_15();
    v24 = v32;
    v32 = *(char **)(v22 + 32);
    ((void (*)(char *, char *, uint64_t))v32)(v21, v24, v33);
    v38 = 1;
    OUTLINED_FUNCTION_1_15();
    OUTLINED_FUNCTION_4_13();
    ((void (*)(char *, char *, uint64_t))v32)(&v21[*(int *)(v20 + 36)], v23, v33);
    v25 = v36;
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v26, v21, v20);
    OUTLINED_FUNCTION_9_16();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v20);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22A9D4358(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  AnnotatedBatch<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), a4);
}

uint64_t static AnnotatedBatch<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if ((sub_22ABDE894() & 1) == 0)
    return 0;
  type metadata accessor for AnnotatedBatch(0, a3, a4, v6);
  return sub_22ABDE894();
}

uint64_t sub_22A9D43FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static AnnotatedBatch<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t type metadata accessor for AnnotatedBatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnnotatedBatch);
}

uint64_t type metadata accessor for AnnotatedBatch.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnnotatedBatch.CodingKeys);
}

uint64_t sub_22A9D4424()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDE8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22A9D4490(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDE8A0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 36)), (uint64_t *)((char *)a2 + *(int *)(a3 + 36)), v7);
  }
  return a1;
}

uint64_t sub_22A9D4530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_22ABDE8A0();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 36), v4);
}

uint64_t sub_22A9D45A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v6);
  return a1;
}

uint64_t sub_22A9D4614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v6);
  return a1;
}

uint64_t sub_22A9D4688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v6);
  return a1;
}

uint64_t sub_22A9D46FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22ABDE8A0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v6);
  return a1;
}

uint64_t sub_22A9D4770()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9D477C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_7();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_22A9D47B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9D47BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_7();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_22A9D47F4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9D4840 + 4 * byte_22ABEBDE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9D4874 + 4 * byte_22ABEBDE0[v4]))();
}

uint64_t sub_22A9D4874(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9D487C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9D4884);
  return result;
}

uint64_t sub_22A9D4890(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9D4898);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9D489C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9D48A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22A9D48B0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9D48C0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9D48D0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_4_13()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 104));
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_7_16()
{
  return sub_22ABDE8A0();
}

uint64_t OUTLINED_FUNCTION_9_16()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t sub_22A9D4948(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    result = v8;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *v4;
      v4 += 2;
      v5 = v6;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      if (v7 >= *(_QWORD *)(result + 24) >> 1)
      {
        sub_22AB4CE30();
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_QWORD *)(result + 8 * v7 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_22A9D4A04(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v30 = MEMORY[0x24BEE4AF8];
  sub_22AB4D538();
  v7 = v6;
  v29 = a1;
  if (v6)
  {
    v8 = (uint64_t *)(a1 + 32);
    v9 = (uint64_t *)(a2 + 32);
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v10 = a2;
    v11 = v4;
    v12 = v5;
    v13 = v4;
    v14 = v5;
    while (v11)
    {
      if (!v12)
        goto LABEL_23;
      v15 = *v8;
      v16 = *v9;
      v17 = *(_QWORD *)(v30 + 16);
      v18 = v17 + 1;
      if (v17 >= *(_QWORD *)(v30 + 24) >> 1)
      {
        v27 = v13;
        v25 = v14;
        v26 = v10;
        sub_22AB4D538();
        v13 = v27;
        v18 = v17 + 1;
        v10 = v26;
        v14 = v25;
      }
      --v12;
      *(_QWORD *)(v30 + 16) = v18;
      *(float *)(v30 + 4 * v17 + 32) = (float)v15 / (float)v16;
      --v11;
      ++v9;
      ++v8;
      if (!--v6)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v10 = a2;
    v13 = v4;
    v14 = v5;
LABEL_13:
    if (v13 <= v14)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v19 = v10 + 32;
    while (v7 < v13)
    {
      if (v14 == v7)
        goto LABEL_21;
      if (v7 >= v14)
        goto LABEL_25;
      v20 = *(_QWORD *)(v29 + 32 + 8 * v7);
      v21 = *(_QWORD *)(v19 + 8 * v7);
      v22 = *(_QWORD *)(v30 + 16);
      if (v22 >= *(_QWORD *)(v30 + 24) >> 1)
      {
        v23 = v10;
        v28 = v13;
        v24 = v14;
        sub_22AB4D538();
        v13 = v28;
        v14 = v24;
        v10 = v23;
      }
      ++v7;
      *(_QWORD *)(v30 + 16) = v22 + 1;
      *(float *)(v30 + 4 * v22 + 32) = (float)v20 / (float)v21;
      if (v13 == v7)
        goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_22A9D4C3C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int *v7;
  int *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v27 = MEMORY[0x24BEE4AF8];
  sub_22AB4D5D4();
  v25 = a2;
  v26 = a1;
  if (v6)
  {
    v7 = (int *)(a1 + 32);
    v8 = (int *)(a2 + 32);
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v9 = v6;
    v10 = v4;
    v11 = v5;
    v12 = v5;
    while (v4)
    {
      if (!v11)
        goto LABEL_22;
      v13 = *v7;
      v14 = *v8;
      v15 = *(_QWORD *)(v27 + 16);
      if (v15 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        v22 = v10;
        v23 = v12;
        sub_22AB4D5D4();
        v10 = v22;
        v12 = v23;
      }
      *(_QWORD *)(v27 + 16) = v15 + 1;
      v16 = v27 + 8 * v15;
      --v11;
      *(_DWORD *)(v16 + 32) = v13;
      *(_DWORD *)(v16 + 36) = v14;
      --v4;
      ++v8;
      ++v7;
      if (!--v9)
        goto LABEL_13;
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v10 = v4;
    v12 = v5;
LABEL_13:
    if (v10 <= v12)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v6 < v10)
    {
      if (v12 == v6)
        goto LABEL_20;
      if (v6 >= v12)
        goto LABEL_24;
      v17 = *(_DWORD *)(v26 + 32 + 4 * v6);
      v18 = *(_DWORD *)(v25 + 32 + 4 * v6);
      v19 = *(_QWORD *)(v27 + 16);
      if (v19 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        v21 = v10;
        v24 = v12;
        sub_22AB4D5D4();
        v12 = v24;
        v10 = v21;
      }
      ++v6;
      *(_QWORD *)(v27 + 16) = v19 + 1;
      v20 = v27 + 8 * v19;
      *(_DWORD *)(v20 + 32) = v17;
      *(_DWORD *)(v20 + 36) = v18;
      if (v10 == v6)
        goto LABEL_20;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void static MultiLabelClassificationMetrics.meanAveragePrecisionScore<A, B>(classifications:groundTruth:labels:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  OUTLINED_FUNCTION_14_10();
  v57 = v24;
  v58 = v25;
  v27 = v26;
  v29 = v28;
  v62 = v30;
  v56 = a23;
  v64 = v31;
  v65 = v24;
  v32 = v31;
  v66 = v25;
  v67 = a23;
  v33 = OUTLINED_FUNCTION_17_7();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE2620], v33);
  v34 = sub_22ABDF7B8();
  v35 = *(_QWORD *)(v34 - 8);
  v60 = v34;
  v61 = v35;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v52 - v37;
  v39 = *(_QWORD *)(v33 - 8);
  v52 = v38;
  v53 = v39;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v40);
  v41 = OUTLINED_FUNCTION_16_12();
  v63 = v29;
  v54 = v27;
  type metadata accessor for ClassificationDistribution(v41, v29, v27, v42);
  sub_22ABDF2D8();
  v55 = OUTLINED_FUNCTION_11_17();
  v59 = *(_QWORD *)(sub_22ABDFA10() - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_15_9();
  v44 = v32;
  v46 = v57;
  v45 = v58;
  v47 = v56;
  sub_22ABE0178();
  sub_22ABDEEB8();
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v23, v33);
  v48 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v49 = v63;
  v48[2] = v63;
  v48[3] = v44;
  v50 = v54;
  v48[4] = v46;
  v48[5] = v50;
  v48[6] = v45;
  v48[7] = v47;
  v51 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v51[2] = v49;
  v51[3] = v44;
  v51[4] = v46;
  v51[5] = v50;
  v51[6] = v45;
  v51[7] = v47;
  v51[8] = sub_22A9D50A0;
  v51[9] = v48;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE25B0], v60);
  sub_22ABDFBC0();
  OUTLINED_FUNCTION_18_10();
  OUTLINED_FUNCTION_10_9(v61);
  OUTLINED_FUNCTION_23_9();
}

void sub_22A9D5058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  static MultiLabelClassificationMetrics.meanAveragePrecisionScore<A>(_:labels:)(v1, *(_QWORD *)(v4 - 144), *(_QWORD *)(v4 - 136), v2, v3, a1);
  OUTLINED_FUNCTION_51(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 168) + 8));
  OUTLINED_FUNCTION_1_16();
}

uint64_t sub_22A9D5094()
{
  return OUTLINED_FUNCTION_2_17();
}

void sub_22A9D50A4(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, _QWORD)@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)(a3 + 8) = a2(a3, a1, *(_QWORD *)(a1 + 8));
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A9D50D8()
{
  swift_release();
  return swift_deallocObject();
}

float static MultiLabelClassificationMetrics.meanAveragePrecisionScore<A>(_:labels:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  float v12;
  float v13;
  _QWORD v15[10];

  v15[9] = a2;
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = a6;
  v15[6] = a1;
  v6 = sub_22ABDF2D8();
  v7 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE1728], v6);
  v9 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22A9D54DC, (uint64_t)v15, v6, MEMORY[0x24BEE14E8], MEMORY[0x24BEE4078], v7, MEMORY[0x24BEE40A8], v8);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = (float *)(v9 + 32);
    v12 = 0.0;
    do
    {
      v13 = *v11++;
      v12 = v12 + v13;
      --v10;
    }
    while (v10);
  }
  else
  {
    v12 = 0.0;
  }
  swift_bridgeObjectRelease();
  return v12 / (float)sub_22ABDF278();
}

void static MultiLabelClassificationMetrics.meanAveragePrecisionScore<A, B>(classifications:groundTruth:)()
{
  OUTLINED_FUNCTION_14_10();
  OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_23_9();
}

void sub_22A9D5244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v17 = sub_22ABDF7B8();
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v16 - 144) = v17;
  *(_QWORD *)(v16 - 136) = v18;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v16 - 224) = (char *)&a9 - v20;
  *(_QWORD *)(v16 - 208) = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v21);
  v22 = OUTLINED_FUNCTION_16_12();
  *(_QWORD *)(v16 - 216) = v15;
  *(_QWORD *)(v16 - 200) = v14;
  type metadata accessor for ClassificationDistribution(v22, v15, v14, v23);
  sub_22ABDF2D8();
  *(_QWORD *)(v16 - 192) = OUTLINED_FUNCTION_11_17();
  v24 = sub_22ABDFA10();
  v25 = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v16 - 160) = v24;
  *(_QWORD *)(v16 - 152) = v25;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_15_9();
  v27 = v11;
  v28 = *(_QWORD *)(v16 - 184);
  sub_22ABE0178();
  sub_22ABDEEB8();
  OUTLINED_FUNCTION_51(v9, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 208) + 8));
  v29 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v30 = *(_QWORD *)(v16 - 216);
  v29[2] = v30;
  v29[3] = v13;
  v31 = *(_QWORD *)(v16 - 200);
  v29[4] = v12;
  v29[5] = v31;
  v29[6] = v27;
  v29[7] = v28;
  v32 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v32[2] = v30;
  v32[3] = v13;
  v32[4] = v12;
  v32[5] = v31;
  v32[6] = v27;
  v32[7] = v28;
  v32[8] = sub_22A9D50A0;
  v32[9] = v29;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE25B0], *(_QWORD *)(v16 - 144));
  sub_22ABDFBC0();
  OUTLINED_FUNCTION_18_10();
  OUTLINED_FUNCTION_10_9(*(_QWORD *)(v16 - 136));
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], *(_QWORD *)(v16 - 160));
  static MultiLabelClassificationMetrics.meanAveragePrecisionScore<A>(_:)();
}

void sub_22A9D540C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v0, v1);
  OUTLINED_FUNCTION_1_16();
}

uint64_t sub_22A9D5434(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_22ABDEAEC();
  return sub_22ABDEAEC();
}

void static MultiLabelClassificationMetrics.meanAveragePrecisionScore<A>(_:)()
{
  sub_22A9D58E4();
}

float sub_22A9D5494(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  float v6;

  v6 = static MultiLabelClassificationMetrics.meanAveragePrecisionScore<A>(_:labels:)(v5, a1, v4, v3, v2, v1);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_22A9D54DC()
{
  sub_22A9D5518();
}

void sub_22A9D5504(float a1)
{
  float *v1;

  *v1 = a1;
}

void sub_22A9D5518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_14_10();
  v1 = v0;
  v20 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v12 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_22ABDF7B8();
  v23 = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v13);
  v19[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0FEA8);
  v22 = sub_22ABDFA10();
  v24 = *(_QWORD *)(v22 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v14);
  sub_22ABDEEB8();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v8, v6);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = v6;
  *((_QWORD *)v16 + 3) = v4;
  v17 = v20;
  *((_QWORD *)v16 + 4) = v20;
  *((_QWORD *)v16 + 5) = v1;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v15], v12, v6);
  v18 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v18[2] = v6;
  v18[3] = v4;
  v18[4] = v17;
  v18[5] = v1;
  v18[6] = sub_22A9D6820;
  v18[7] = v16;
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_22A9D587C()
{
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_22A9D5888(_QWORD *a1, _QWORD *a2)
{
  return sub_22A9D5434(a1, a2);
}

void sub_22A9D58B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a2 + 8) = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 64))(a2, a1, *(_QWORD *)(a1 + 8));
  OUTLINED_FUNCTION_0_5();
}

void sub_22A9D58E4()
{
  uint64_t v0;

  sub_22ABDF7B8();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v0);
  sub_22ABDF2D8();
  sub_22ABDFA10();
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9D598C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = MEMORY[0x22E2E4D80](MEMORY[0x24BEE1718], v0);
  sub_22ABDF9D4();
  OUTLINED_FUNCTION_37_0();
}

void sub_22A9D59C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_22ABDF7B8();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v4);
  sub_22ABDEEB8();
  v5 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = *(_QWORD *)(v3 - 96);
  v5[5] = v0;
  OUTLINED_FUNCTION_23_9();
}

uint64_t sub_22A9D5A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22ABDFBCC();
  OUTLINED_FUNCTION_18_10();
  OUTLINED_FUNCTION_51(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8));
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE25A0], v1);
  return sub_22ABDF2E4();
}

void sub_22A9D5ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = type metadata accessor for ClassificationDistribution(0, a4, a6, a4);
  ClassificationDistribution.subscript.getter(a3, v7, v8, v9);
}

uint64_t sub_22A9D5B10(uint64_t result)
{
  if ((result & 0x100000000) == 0)
    return sub_22ABDF2C0() & 1;
  __break(1u);
  return result;
}

BOOL sub_22A9D5B54(float *a1, float *a2)
{
  return *a2 < *a1;
}

uint64_t sub_22A9D5B68(uint64_t result)
{
  float v1;
  float v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  float *v7;
  float v8;
  float v9;
  float v10;

  if (*(_QWORD *)(result + 16) >= 2uLL)
  {
    v2 = *(float *)(result + 32);
    v1 = *(float *)(result + 36);
    result = sub_22A99E9B0(1);
    v6 = (v5 >> 1) - v4;
    if (v5 >> 1 != v4)
    {
      if ((uint64_t)(v5 >> 1) <= v4)
      {
        __break(1u);
        return result;
      }
      v7 = (float *)(v3 + 8 * v4 + 4);
      v8 = 0.0;
      do
      {
        v9 = *(v7 - 1);
        v10 = *v7;
        v8 = v8 + (float)((float)(v2 + v9) * (float)(*v7 - v1));
        v7 += 2;
        v1 = v10;
        v2 = v9;
        --v6;
      }
      while (v6);
    }
    sub_22ABDEAEC();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_22A9D5C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  sub_22ABDEAEC();
  sub_22ABDEAEC();
  type metadata accessor for ClassificationDistribution(0, a2, a4, v6);
  sub_22AA72CD4();
}

uint64_t sub_22A9D5C70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  swift_bridgeObjectRelease();
  v1 = sub_22ABDF2D8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE1718], v1);
  result = sub_22ABDF284();
  *v0 = result;
  return result;
}

_QWORD *MultiLabelClassificationMetrics.precisionScore(for:)(uint64_t a1, uint64_t a2)
{
  return sub_22A9D5D04(a1, a2, (uint64_t)sub_22A9D6894, (uint64_t)sub_22A9D6790);
}

_QWORD *MultiLabelClassificationMetrics.recallScore(for:)(uint64_t a1, uint64_t a2)
{
  return sub_22A9D5D04(a1, a2, (uint64_t)sub_22A9D6754, (uint64_t)sub_22A9D6770);
}

_QWORD *sub_22A9D5D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FEA0);
  result = MEMORY[0x22E2E2DE8](&v18, a1, v9, v10, v11, *(_QWORD *)(a2 + 24));
  v13 = v19;
  if (v19)
  {
    v14 = v18;
    v24 = v18;
    v25 = v19;
    v26 = v20 & 1;
    v27 = v21;
    v28 = v22;
    v29 = v23;
    v15 = sub_22A9D5E14(1u);
    sub_22A9D5F2C(1, a3, a4);
    v17 = v16;
    result = (_QWORD *)sub_22A9D5EB4(v14, v13);
    if (__OFADD__(v15, v17))
      __break(1u);
  }
  return result;
}

uint64_t sub_22A9D5E14(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  unint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 40);
  if (*(_QWORD *)(v2 + 16) && ((a1 & 1) == 0 ? (v3 = 0) : (v3 = 256), v4 = sub_22AA03978(v3 | a1 & 1u), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v4);
  else
    return 0;
}

uint64_t sub_22A9D5E60()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 40);
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_22AA039CC(), (v3 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
  else
    return 0;
}

void sub_22A9D5EA0(uint64_t a1)
{
  sub_22A9D5F2C(a1, (uint64_t)sub_22A9D6894, (uint64_t)sub_22A9D6790);
}

uint64_t sub_22A9D5EB4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_22A9D5F04(uint64_t a1)
{
  sub_22A9D5FC8(a1, (uint64_t)sub_22A9D68AC, (uint64_t)sub_22A9D6734);
}

void sub_22A9D5F18(uint64_t a1)
{
  sub_22A9D5F2C(a1, (uint64_t)sub_22A9D6754, (uint64_t)sub_22A9D6770);
}

void sub_22A9D5F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;

  v4 = OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_7_17(v4, v5, v6, (uint64_t)sub_22A9D62D8, v7, v8, v9, v10);
  v11 = OUTLINED_FUNCTION_5_15();
  sub_22A9FC410(v11);
  OUTLINED_FUNCTION_21_10();
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = 0;
    v14 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v15 = *v14++;
      v16 = __OFADD__(v13, v15);
      v13 += v15;
      if (v16)
        break;
      if (!--v12)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_6_18();
  }
}

void sub_22A9D5FB4(uint64_t a1)
{
  sub_22A9D5FC8(a1, (uint64_t)sub_22A9D66BC, (uint64_t)sub_22A9D66D8);
}

void sub_22A9D5FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;

  v4 = OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_7_17(v4, v5, v6, (uint64_t)sub_22A9D648C, v7, v8, v9, v10);
  v11 = OUTLINED_FUNCTION_5_15();
  sub_22A9FC6D0(v11);
  OUTLINED_FUNCTION_21_10();
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = 0;
    v14 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v15 = *v14++;
      v16 = __OFADD__(v13, v15);
      v13 += v15;
      if (v16)
        break;
      if (!--v12)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_6_18();
  }
}

uint64_t sub_22A9D6050(char a1, uint64_t a2, char a3)
{
  uint64_t v3;
  __int16 v4;
  unint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(v3 + 16)
    && ((a1 & 1) == 0 ? (v4 = 0) : (v4 = 256), v5 = sub_22AA03978(v4 & 0xFFFE | a3 & 1u), (v6 & 1) != 0))
  {
    return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v5);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_22A9D60A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_22AA039CC(), (v4 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v3);
  else
    return 0;
}

uint64_t sub_22A9D60F4(int a1, int a2)
{
  return (a1 ^ a2) & 1;
}

BOOL sub_22A9D6100(uint64_t a1, uint64_t a2)
{
  return a1 != a2;
}

uint64_t sub_22A9D610C(char a1, uint64_t a2, char a3)
{
  uint64_t v3;
  __int16 v4;
  unint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(v3 + 16)
    && ((a3 & 1) == 0 ? (v4 = 0) : (v4 = 256), v5 = sub_22AA03978(v4 & 0xFFFE | a1 & 1u), (v6 & 1) != 0))
  {
    return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v5);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_22A9D6164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_22AA039CC(), (v4 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v3);
  else
    return 0;
}

uint64_t sub_22A9D61AC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if ((*(_BYTE *)(a3 + 32) & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    OUTLINED_FUNCTION_9_17();
    OUTLINED_FUNCTION_3_18();
    v6 = OUTLINED_FUNCTION_12_13();
    if (a4)
      swift_willThrow(v6);
  }
  else
  {
    v7 = swift_slowAlloc();
    OUTLINED_FUNCTION_9_17();
    OUTLINED_FUNCTION_3_18();
    OUTLINED_FUNCTION_12_13();
    MEMORY[0x22E2E4E64](v7, -1, -1);
  }
  return v4;
}

void sub_22A9D62D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v4;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v22;
  char v23;

  v7 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
LABEL_4:
  v22 = v7;
  while (v12)
  {
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v15 = v14 | (v8 << 6);
LABEL_18:
    v23 = *(_BYTE *)(*(_QWORD *)(a3 + 48) + v15);
    v19 = a4(&v23);
    if (v4)
      return;
    if ((v19 & 1) != 0)
    {
      *(uint64_t *)((char *)a1 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v7 = v22 + 1;
      if (!__OFADD__(v22, 1))
        goto LABEL_4;
      __break(1u);
LABEL_28:
      swift_retain();
      sub_22AB17928(a1, a2, v22, a3);
      return;
    }
  }
  if (__OFADD__(v8++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v8 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v8);
  if (v17)
  {
LABEL_17:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_18;
  }
  v18 = v8 + 1;
  if (v8 + 1 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v8 + 2;
  if (v8 + 2 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v8 + 3;
  if (v8 + 3 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_16:
    v8 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_31:
  __break(1u);
}

void sub_22A9D648C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *))
{
  uint64_t v4;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v22;
  uint64_t v23;

  v7 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
LABEL_4:
  v22 = v7;
  while (v12)
  {
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v15 = v14 | (v8 << 6);
LABEL_18:
    v23 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v15);
    v19 = a4(&v23);
    if (v4)
      return;
    if ((v19 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v7 = v22 + 1;
      if (!__OFADD__(v22, 1))
        goto LABEL_4;
      __break(1u);
LABEL_28:
      swift_retain();
      sub_22AB17B48(a1, a2, v22, a3);
      return;
    }
  }
  if (__OFADD__(v8++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v8 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v8);
  if (v17)
  {
LABEL_17:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_18;
  }
  v18 = v8 + 1;
  if (v8 + 1 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v8 + 2;
  if (v8 + 2 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v8 + 3;
  if (v8 + 3 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_16:
    v8 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_22A9D6640(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22A9D60F4(*a1, *a2) & 1;
}

uint64_t sub_22A9D6660@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t (*a4)(_QWORD, uint64_t, _QWORD, _BYTE *)@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  _BYTE v8[8];

  result = a4(*a1, a2, *a3, v8);
  if (!v5)
    *a5 = result;
  return result;
}

BOOL sub_22A9D669C(uint64_t *a1, uint64_t *a2)
{
  return sub_22A9D6100(*a1, *a2);
}

BOOL sub_22A9D66BC(uint64_t *a1)
{
  uint64_t v1;

  return sub_22A9D669C(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_22A9D66D8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;

  OUTLINED_FUNCTION_20_10();
  return sub_22A9D66F8(v0, v1, v2, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _BYTE *))sub_22A9D6164, v3);
}

uint64_t sub_22A9D66F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t (*a4)(_QWORD, uint64_t, _QWORD, _BYTE *)@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  _BYTE v8[8];

  result = a4(*a1, a2, *a3, v8);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_22A9D6734()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;

  OUTLINED_FUNCTION_20_10();
  return sub_22A9D66F8(v0, v1, v2, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _BYTE *))sub_22A9D60A4, v3);
}

uint64_t sub_22A9D6754(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_22A9D6640(a1, *(unsigned __int8 **)(v1 + 16)) & 1;
}

uint64_t sub_22A9D6770()
{
  unsigned __int8 *v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t *v3;

  OUTLINED_FUNCTION_20_10();
  return sub_22A9D6660(v0, v1, v2, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _BYTE *))sub_22A9D610C, v3);
}

uint64_t sub_22A9D6790()
{
  unsigned __int8 *v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t *v3;

  OUTLINED_FUNCTION_20_10();
  return sub_22A9D6660(v0, v1, v2, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _BYTE *))sub_22A9D6050, v3);
}

uint64_t sub_22A9D67B0()
{
  return OUTLINED_FUNCTION_2_17();
}

void sub_22A9D67BC(uint64_t a1)
{
  uint64_t *v1;

  sub_22A9D5C1C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_22A9D67C8()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

void sub_22A9D6820(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2[2];
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  sub_22A9D5ABC(a1, a2, (uint64_t)v2 + ((v4 + 48) & ~v4), v3, v2[3], v2[4]);
}

uint64_t sub_22A9D6840()
{
  swift_release();
  return swift_deallocObject();
}

void sub_22A9D6864(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  int v5;

  v4 = (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 48))(a1, *(_QWORD *)(a1 + 8));
  *(_DWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A9D6894(unsigned __int8 *a1)
{
  return sub_22A9D6754(a1) & 1;
}

BOOL sub_22A9D68AC(uint64_t *a1)
{
  return sub_22A9D66BC(a1);
}

uint64_t OUTLINED_FUNCTION_2_17()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_3_18()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v1(v5, v4, v0, v3, v2);
}

uint64_t OUTLINED_FUNCTION_5_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_7_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  va_list va;

  va_start(va, a8);
  return sub_22A9D61AC(v8, (uint64_t)va, v9, a4);
}

uint64_t OUTLINED_FUNCTION_9_17()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_22AAD8D68(0, v0, v1);
}

uint64_t OUTLINED_FUNCTION_10_9@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_11_17()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_12_13()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_16_12()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return sub_22ABDF7E8();
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_21_10()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  return sub_22ABDEAEC();
}

void OUTLINED_FUNCTION_23_9()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.preprocessor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.preprocessor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*PreprocessingUpdatableSupervisedTemporalEstimator.preprocessor.modify())()
{
  return nullsub_1;
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.estimator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*PreprocessingUpdatableSupervisedTemporalEstimator.estimator.modify())()
{
  return nullsub_1;
}

void PreprocessingUpdatableSupervisedTemporalEstimator.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for PreprocessingUpdatableSupervisedTemporalEstimator();
}

uint64_t sub_22A9D6ABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_79(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

void type metadata accessor for PreprocessingUpdatableSupervisedTemporalEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.preprocessed<A, B>(from:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v9[11] = a8;
  v9[12] = v8;
  v9[9] = a6;
  v9[10] = a7;
  v9[7] = a3;
  v9[8] = a5;
  v9[5] = a1;
  v9[6] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[13] = AssociatedTypeWitness;
  v9[14] = OUTLINED_FUNCTION_0_0();
  v9[15] = *(_QWORD *)(a4 + 32);
  v14 = *(_QWORD *)(a4 + 16);
  v9[16] = v14;
  v15 = OUTLINED_FUNCTION_49_4();
  v9[17] = v15;
  v18 = type metadata accessor for PreprocessedFeatureSequence(255, v15, v16, v17);
  v9[18] = v18;
  v9[19] = type metadata accessor for AnnotatedFeature(0, v18, AssociatedTypeWitness, v19);
  v9[20] = OUTLINED_FUNCTION_0_0();
  v9[21] = *(_QWORD *)(a6 - 8);
  v9[22] = OUTLINED_FUNCTION_0_0();
  v9[23] = *(_QWORD *)(v14 - 8);
  v9[24] = OUTLINED_FUNCTION_0_0();
  v20 = OUTLINED_FUNCTION_49_4();
  v9[25] = v20;
  v9[26] = *(_QWORD *)(v20 - 8);
  v9[27] = OUTLINED_FUNCTION_23_0();
  v9[28] = OUTLINED_FUNCTION_38_0();
  v22 = type metadata accessor for AnnotatedFeature(0, a6, AssociatedTypeWitness, v21);
  v9[29] = v22;
  v9[30] = *(_QWORD *)(v22 - 8);
  v9[31] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v9[32] = OUTLINED_FUNCTION_0_0();
  v9[33] = *(_QWORD *)(a5 - 8);
  v9[34] = OUTLINED_FUNCTION_0_0();
  v23 = swift_getAssociatedTypeWitness();
  v9[35] = v23;
  v9[36] = *(_QWORD *)(v23 - 8);
  v9[37] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9D6CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_23_5();
  v17 = v14[33];
  v16 = v14[34];
  v18 = v14[5];
  v14[2] = sub_22ABDE9F0();
  OUTLINED_FUNCTION_27_8(v16, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
  sub_22ABDEE58();
  v19 = v14[32];
  v20 = v14[29];
  swift_getAssociatedConformanceWitness();
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload(v19, 1, v20) == 1)
  {
    OUTLINED_FUNCTION_23_10();
    v44 = v21;
    OUTLINED_FUNCTION_75_1(v22);
    v43 = v14[2];
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_52_4();
    return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, v43, v44, a12, a13, a14);
  }
  else
  {
    OUTLINED_FUNCTION_8_13();
    OUTLINED_FUNCTION_33_6();
    OUTLINED_FUNCTION_66_3();
    OUTLINED_FUNCTION_46_4(*(_QWORD *)(v15 + 40));
    v45 = v32;
    v33 = (_QWORD *)swift_task_alloc();
    OUTLINED_FUNCTION_14_11(v33);
    OUTLINED_FUNCTION_52_4();
    return v42(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, v45, a12, a13, a14);
  }
}

uint64_t sub_22A9D6E18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_68();
  v16 = v2;
  v17 = v3;
  v15 = v1;
  v15 = (_QWORD *)*v1;
  v4 = v15;
  OUTLINED_FUNCTION_69(&v15);
  v4[39] = v0;
  swift_task_dealloc();
  if (v0)
  {
    v5 = v4[23];
    OUTLINED_FUNCTION_30_0(v4[21]);
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
  else
  {
    v8 = v4[27];
    v7 = v4[28];
    v9 = v4[26];
    v10 = v4[23];
    v11 = v4[24];
    v12 = v4[16];
    OUTLINED_FUNCTION_30_0(v4[21]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    OUTLINED_FUNCTION_27_8(v8, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    v13 = (_QWORD *)swift_task_alloc();
    v4[40] = v13;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *v13 = v1;
    v13[1] = sub_22A9D6F60;
    return PreprocessedFeatureSequence.init<A>(_:)((uint64_t)(v4 + 3), v4[27], v4[17], v4[25], AssociatedConformanceWitness);
  }
}

uint64_t sub_22A9D6F60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_69(&v4);
  *(_QWORD *)(v2 + 328) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9D6FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 248);
  v18 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  AnnotatedFeature.annotation.getter(v2, v5);
  AnnotatedFeature.init(feature:annotation:)(v0 + 32, v5, v4, v6, v3);
  sub_22ABDF0F8();
  sub_22ABDF0C8();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 232);
  swift_getAssociatedConformanceWitness();
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload(v7, 1, v8) == 1)
  {
    OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_75_1(v9);
    v17 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v17);
  }
  else
  {
    OUTLINED_FUNCTION_8_13();
    OUTLINED_FUNCTION_33_6();
    OUTLINED_FUNCTION_66_3();
    OUTLINED_FUNCTION_46_4(*(_QWORD *)(v3 + 40));
    v19 = v11;
    v12 = (_QWORD *)swift_task_alloc();
    v13 = OUTLINED_FUNCTION_14_11(v12);
    return v19(v13);
  }
}

uint64_t sub_22A9D7198()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_68();
  v1 = *(_QWORD *)(v0 + 288);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 240));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9D7208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_68();
  v1 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 232);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 208));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.fitted(toPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v8 = a5[2];
  v6[9] = v8;
  v6[10] = *(_QWORD *)(v8 - 8);
  v6[11] = OUTLINED_FUNCTION_0_0();
  v9 = a5[3];
  v6[12] = v9;
  v6[13] = *(_QWORD *)(v9 - 8);
  v6[14] = OUTLINED_FUNCTION_0_0();
  v6[15] = *(_QWORD *)(a5[5] + 8);
  v10 = OUTLINED_FUNCTION_65_2();
  v6[16] = v10;
  v6[17] = *(_QWORD *)(v10 - 8);
  v6[18] = OUTLINED_FUNCTION_23_0();
  v6[19] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22A9D7334()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0[7];
  v2 = v0[4];
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_27_8(v3, v4, v5);
  v0[2] = v2;
  v6 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  v0[20] = v6;
  v0[21] = *(_QWORD *)(v1 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = OUTLINED_FUNCTION_34_6(AssociatedTypeWitness, v8, v9, v10);
  v12 = swift_getAssociatedTypeWitness();
  type metadata accessor for AnnotatedFeature(255, v11, v12, v13);
  v14 = OUTLINED_FUNCTION_33_4();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v14);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessedFeatureSequence<A>, v11);
  *v6 = v0;
  v6[1] = sub_22A9D7468;
  __asm { BR              X8 }
}

uint64_t sub_22A9D7468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  v2 = *(_QWORD *)(v1 + 104);
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v3 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22A9D74D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_5();
  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  OUTLINED_FUNCTION_51_4(v0[8], v0[10]);
  OUTLINED_FUNCTION_27_8(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_19_11();
}

uint64_t sub_22A9D7538()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_33_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_5_0(v0);
}

uint64_t sub_22A9D7554()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.fitted(toPreprocessed:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[9] = a6;
  v7[10] = v6;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  v9 = a6[2];
  v7[11] = v9;
  v7[12] = *(_QWORD *)(v9 - 8);
  v7[13] = OUTLINED_FUNCTION_0_0();
  v10 = a6[3];
  v7[14] = v10;
  v7[15] = *(_QWORD *)(v10 - 8);
  v7[16] = OUTLINED_FUNCTION_0_0();
  v7[17] = *(_QWORD *)(a6[5] + 8);
  v11 = OUTLINED_FUNCTION_65_2();
  v7[18] = v11;
  v7[19] = *(_QWORD *)(v11 - 8);
  v7[20] = OUTLINED_FUNCTION_23_0();
  v7[21] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22A9D7648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 72);
  OUTLINED_FUNCTION_68_2();
  v14 = *(_OWORD *)(v0 + 40);
  v3();
  *(_OWORD *)(v0 + 16) = v14;
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v1 + 48));
  *(_QWORD *)&v14 = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v5;
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v2 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = OUTLINED_FUNCTION_34_6(AssociatedTypeWitness, v7, v8, v9);
  v11 = swift_getAssociatedTypeWitness();
  type metadata accessor for AnnotatedFeature(255, v10, v11, v12);
  v13 = OUTLINED_FUNCTION_33_4();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v13);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessedFeatureSequence<A>, v10);
  *v5 = v0;
  v5[1] = sub_22A9D77A4;
  __asm { BR              X8 }
}

uint64_t sub_22A9D77A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  v2 = *(_QWORD *)(v1 + 120);
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v3 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22A9D780C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_5();
  v2 = v0[20];
  v1 = v0[21];
  v3 = v0[19];
  OUTLINED_FUNCTION_51_4(v0[10], v0[12]);
  OUTLINED_FUNCTION_27_8(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_19_11();
}

uint64_t sub_22A9D7874()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_33_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_5_0(v0);
}

uint64_t sub_22A9D7890()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.fitted<A, B>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_22_8();
  v1[5] = v2;
  v1[6] = v0;
  v1[3] = v3;
  v1[4] = v4;
  v1[2] = v5;
  v6 = (_QWORD *)swift_task_alloc();
  v1[7] = v6;
  v7 = OUTLINED_FUNCTION_13_15(v6, (uint64_t)sub_22A9D7924);
  return OUTLINED_FUNCTION_12_14(v7, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_22A9D7924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v3 + 64) = v2;
  *(_QWORD *)(v3 + 72) = v0;
  OUTLINED_FUNCTION_62_2();
  if (v0)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9D7970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 72);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_72_0();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_2_18(v2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v4;
    *v4 = v0;
    v4[1] = sub_22A9D79F0;
    return PreprocessingUpdatableSupervisedTemporalEstimator.fitted(toPreprocessed:eventHandler:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40));
  }
}

uint64_t sub_22A9D79F0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 88) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9D7A3C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_72_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_1_3(v0);
}

uint64_t sub_22A9D7A60()
{
  uint64_t v0;

  OUTLINED_FUNCTION_72_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.fitted<A, B, C>(to:validateOn:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_68();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v1[10] = v20;
  v1[11] = v0;
  v1[8] = v17;
  v1[9] = v19;
  v1[6] = v4;
  v1[7] = v12;
  v1[4] = v8;
  v1[5] = v6;
  v1[2] = v13;
  v1[3] = v14;
  v15 = (_QWORD *)swift_task_alloc();
  v1[12] = v15;
  *v15 = v1;
  v15[1] = sub_22A9D7B30;
  return PreprocessingUpdatableSupervisedTemporalEstimator.preprocessed<A, B>(from:eventHandler:)(v11, v9, v7, v5, v3, v17, v18, v20);
}

uint64_t sub_22A9D7B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v3 + 104) = v2;
  *(_QWORD *)(v3 + 112) = v0;
  OUTLINED_FUNCTION_62_2();
  if (v0)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9D7B7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;

  v1 = v0[14];
  sub_22ABDF1DC();
  if (v1)
  {
    swift_bridgeObjectRelease();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_2_18(v2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[15] = (uint64_t)v4;
    *v4 = v0;
    v4[1] = sub_22A9D7C04;
    return PreprocessingUpdatableSupervisedTemporalEstimator.preprocessed<A, B>(from:eventHandler:)(v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10]);
  }
}

uint64_t sub_22A9D7C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v2 + 128) = v1;
  *(_QWORD *)(v2 + 136) = v0;
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9D7C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 136);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_44_4();
    OUTLINED_FUNCTION_3_8();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_2_18(v2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v4;
    *v4 = v0;
    v4[1] = sub_22A9D7CDC;
    return PreprocessingUpdatableSupervisedTemporalEstimator.fitted(toPreprocessed:validateOn:eventHandler:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 48));
  }
}

uint64_t sub_22A9D7CDC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22A9D7D28()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_44_4();
  OUTLINED_FUNCTION_3_8();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_1_3(v0);
}

uint64_t sub_22A9D7D50()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9D7D7C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_4();
  OUTLINED_FUNCTION_3_8();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void PreprocessingUpdatableSupervisedTemporalEstimator.makeTransformer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v19 = v4;
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v11 = *(_QWORD *)(v10 + 40);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = *(_QWORD *)(v3 + 16);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v17 = v16 - v15;
  OUTLINED_FUNCTION_27_8(v16 - v15, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  OUTLINED_FUNCTION_79(v9, v1 + *(int *)(v3 + 52), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v5, v11);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  swift_getAssociatedConformanceWitness();
  ComposedTemporalTransformer.init(_:_:)(v17, v14, v19);
}

void sub_22A9D7EF0()
{
  OUTLINED_FUNCTION_3();
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.update<A, B>(_:withPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v9[14] = v12;
  v9[15] = v8;
  v9[12] = a7;
  v9[13] = a8;
  v9[10] = a5;
  v9[11] = a6;
  v9[8] = a3;
  v9[9] = a4;
  v9[6] = a1;
  v9[7] = a2;
  v10 = *(_QWORD *)(a5 + 24);
  v9[16] = v10;
  v9[17] = *(_QWORD *)(v10 - 8);
  v9[18] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22A9D7F5C()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;

  v1 = v0[10];
  OUTLINED_FUNCTION_68_2();
  v2();
  v3 = *(_QWORD *)(v1 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v1 + 32);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[2] = v3;
  v0[3] = AssociatedTypeWitness;
  v0[4] = v5;
  OUTLINED_FUNCTION_71_0(AssociatedConformanceWitness);
}

uint64_t sub_22A9D8004(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = v3 + *(int *)(a1 + 52);
  v6 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  v1[19] = v6;
  *v6 = v1;
  v6[1] = sub_22A9D8068;
  v7 = v1[13];
  v8 = v1[14];
  v9 = v1[11];
  v10 = v1[12];
  v11 = v1[8];
  v12 = v1[9];
  v13 = v1[7];
  *(_QWORD *)(v4 + 16) = v1[16];
  *(_QWORD *)(v4 + 24) = v2;
  return v15(v5, v13, v11, v12, v9, v10, v7, v8);
}

uint64_t sub_22A9D8068()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *v1;
  v5 = v2;
  v3 = *(_QWORD *)(v2 + 136);
  OUTLINED_FUNCTION_69(&v5);
  *(_QWORD *)(v2 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    return ((uint64_t (*)(void))v1[1])();
  }
}

uint64_t sub_22A9D80F8()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableSupervisedTemporalEstimator.update<A, B>(_:with:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_22_8();
  v1[10] = v2;
  v1[11] = v0;
  v1[8] = v3;
  v1[9] = v4;
  v1[7] = v5;
  v6 = *(_QWORD *)(v2 + 24);
  v1[12] = v6;
  v1[13] = *(_QWORD *)(v6 - 8);
  v1[14] = OUTLINED_FUNCTION_0_0();
  v7 = (_QWORD *)swift_task_alloc();
  v1[15] = v7;
  v8 = OUTLINED_FUNCTION_13_15(v7, (uint64_t)sub_22A9D8188);
  return OUTLINED_FUNCTION_12_14(v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_22A9D8188(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  OUTLINED_FUNCTION_62_2();
  if (v1)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_4();
  }
}

uint64_t sub_22A9D81F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;

  v1 = v0[17];
  sub_22ABDF1DC();
  if (!v1)
  {
    v4 = v0[16];
    v5 = v0[10];
    OUTLINED_FUNCTION_68_2();
    v6();
    v0[6] = v4;
    v7 = *(_QWORD *)(v5 + 16);
    v8 = OUTLINED_FUNCTION_36_2();
    v9 = *(_QWORD *)(v5 + 32);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[2] = v7;
    v0[3] = v8;
    v0[4] = v9;
    OUTLINED_FUNCTION_71_0(AssociatedConformanceWitness);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return v2();
}

uint64_t sub_22A9D82E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v3 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  *(_QWORD *)(v0 + 144) = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = OUTLINED_FUNCTION_34_6(AssociatedTypeWitness, v5, v6, v7);
  v9 = OUTLINED_FUNCTION_36_2();
  type metadata accessor for AnnotatedFeature(255, v8, v9, v10);
  v11 = OUTLINED_FUNCTION_33_4();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v11);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessedFeatureSequence<A>, v8);
  *v3 = v0;
  v3[1] = sub_22A9D83BC;
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v2 + 24) = v1;
  OUTLINED_FUNCTION_52_4();
  return v12();
}

uint64_t sub_22A9D83BC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);
  _QWORD *v5;

  v5 = (_QWORD *)*v1;
  v2 = v5;
  OUTLINED_FUNCTION_69(&v5);
  v2[19] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_30_0(v2[13]);
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
    OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_11_3();
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_2_18(v4);
  }
}

uint64_t sub_22A9D8450()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void PreprocessingUpdatableSupervisedTemporalEstimator.encode(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTemporalTransformer();
}

uint64_t sub_22A9D8520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v2 + *(int *)(a1 + 52), v1, v4, v3);
}

void PreprocessingUpdatableSupervisedTemporalEstimator.decode(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v11 = v5;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_27_10();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v4, v10);
    OUTLINED_FUNCTION_37_5();
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_40_4(v11, a3);
  }
  OUTLINED_FUNCTION_16();
}

void PreprocessingUpdatableSupervisedTemporalEstimator.encodeWithOptimizer(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTemporalTransformer();
}

uint64_t sub_22A9D8714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32))(v1 + *(int *)(a1 + 52), v5, v3, v2);
}

void PreprocessingUpdatableSupervisedTemporalEstimator.decodeWithOptimizer(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v9 = v5;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_27_10();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v4, v11);
    OUTLINED_FUNCTION_37_5();
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_40_4(v9, a3);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9D8874()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B72C0;
  return PreprocessingUpdatableSupervisedTemporalEstimator.update<A, B>(_:with:eventHandler:)();
}

void sub_22A9D8928()
{
  PreprocessingUpdatableSupervisedTemporalEstimator.encodeWithOptimizer(_:to:)();
}

void sub_22A9D893C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PreprocessingUpdatableSupervisedTemporalEstimator.decodeWithOptimizer(from:)(a1, a2, a3);
}

uint64_t sub_22A9D8950()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B785C;
  return PreprocessingUpdatableSupervisedTemporalEstimator.fitted<A, B>(to:eventHandler:)();
}

uint64_t sub_22A9D8A08()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B785C;
  return PreprocessingUpdatableSupervisedTemporalEstimator.fitted<A, B, C>(to:validateOn:eventHandler:)();
}

void sub_22A9D8ABC()
{
  PreprocessingUpdatableSupervisedTemporalEstimator.encode(_:to:)();
}

void sub_22A9D8AD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PreprocessingUpdatableSupervisedTemporalEstimator.decode(from:)(a1, a2, a3);
}

void Transformer.appending<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[2];

  OUTLINED_FUNCTION_4_4();
  v16[1] = v4;
  v6 = v5;
  OUTLINED_FUNCTION_50_4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_9_15();
  v12 = type metadata accessor for TransformerToTemporalAdaptor(0, v10, v11, v11);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v16 - v14;
  Transformer.adaptedAsTemporal()(v0, v6);
  OUTLINED_FUNCTION_79(v3, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TransformerToTemporalAdaptor<A>, v12);
  PreprocessingUpdatableSupervisedTemporalEstimator.init(_:_:)((uint64_t)v15, v12, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_4_4();
  v25 = v3;
  v26 = v2;
  v5 = v4;
  v7 = v6;
  v24 = v8;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_23_1();
  v18 = type metadata accessor for TransformerToTemporalAdaptor(0, v16, v17, v17);
  OUTLINED_FUNCTION_10_1();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v23 - v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v14 + 16))(v1, v0, v7, v20);
  TransformerToTemporalAdaptor.init(_:)(v1, v7, v5);
  OUTLINED_FUNCTION_24_11((uint64_t)v12, v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TransformerToTemporalAdaptor<A>, v18);
  PreprocessingUpdatableTemporalEstimator.init(_:_:)((uint64_t)v22, v18, v25);
}

void sub_22A9D8BA4()
{
  OUTLINED_FUNCTION_3();
}

void TemporalTransformer.appending<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_4_4();
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_50_4();
  v10 = type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(0, v7, v9, v8);
  OUTLINED_FUNCTION_10_1();
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_33();
  v15 = v14 - v13;
  OUTLINED_FUNCTION_27_8(v14 - v13, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
  UpdatableSupervisedEstimator<>.adaptedAsTemporal()(v6, v4);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableSupervisedEstimatorToTemporalAdaptor<A>, v10);
  PreprocessingUpdatableSupervisedTemporalEstimator.init(_:_:)(v15, v1, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_4_4();
  v6 = v5;
  OUTLINED_FUNCTION_50_4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_9_15();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v13 = v12 - v11;
  OUTLINED_FUNCTION_27_8(v12 - v11, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4, v2, v6);
  PreprocessingUpdatableSupervisedTemporalEstimator.init(_:_:)(v13, v1, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_4_4();
  v3 = v1;
  v5 = v4;
  v23 = v6;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_9_15();
  v17 = type metadata accessor for UpdatableEstimatorToTemporalAdaptor(0, v14, v16, v15);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v19);
  v21 = OUTLINED_FUNCTION_27_23(v20, v23);
  OUTLINED_FUNCTION_24_11((uint64_t)v21, v3, v22);
  OUTLINED_FUNCTION_27_8(v2, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  UpdatableEstimatorToTemporalAdaptor.init(_:)(v2, v8, v5);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableEstimatorToTemporalAdaptor<A>, v17);
  PreprocessingUpdatableTemporalEstimator.init(_:_:)(v0, v10, v24);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_4_4();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_9_15();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_27_8(v2, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, v8, v4);
  PreprocessingUpdatableTemporalEstimator.init(_:_:)(v2, v6, v10);
}

void sub_22A9D8C7C()
{
  OUTLINED_FUNCTION_3();
}

void sub_22A9D8D30()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22A9D8D3C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessingUpdatableSupervisedTemporalEstimator<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A9D8D68()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22A9D8D8C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9D8E68 + 4 * byte_22ABEBFF0[v21 - 1]))();
}

void sub_22A9D8EDC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t OUTLINED_FUNCTION_2_18(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_8_13()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[30] + 32))(v0[31], v0[32], v0[29]);
}

uint64_t OUTLINED_FUNCTION_9_18()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_12_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return PreprocessingUpdatableSupervisedTemporalEstimator.preprocessed<A, B>(from:eventHandler:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_13_15@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_14_11(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 304) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 224);
}

void OUTLINED_FUNCTION_19_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  ComposedTemporalTransformer.init(_:_:)(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_27_10()
{
  uint64_t (*v0)(_QWORD, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(*(_QWORD *)(v3 - 88), v2, v1);
}

uint64_t OUTLINED_FUNCTION_32_7@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_33_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_34_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for PreprocessedFeatureSequence(255, a1, a3, a4);
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_37_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v0, v3);
}

void OUTLINED_FUNCTION_40_4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  ComposedTemporalTransformer.init(_:_:)(a1, v2, a2);
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_46_4@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(a1 + 4);
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_49_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_51_4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(v2, a1, v3);
}

void OUTLINED_FUNCTION_57_4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_60_3()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_65_2()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_66_3()
{
  uint64_t v0;
  uint64_t v1;

  return AnnotatedFeature.feature.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_71_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  type metadata accessor for ComposedTemporalTransformer();
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_75_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_76_1()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22A9D93CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_22AB4CDFC();
    v2 = v13;
    v4 = *(_QWORD *)(sub_22ABDD400() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_22ABDD3F4();
      v9 = v8;
      v10 = *(_QWORD *)(v13 + 16);
      if (v10 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_22AB4CDFC();
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22A9D94C8()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_22A9D94E4()
{
  return 1;
}

uint64_t sub_22A9D94EC()
{
  return 0;
}

uint64_t sub_22A9D94F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x636972656D756ELL && a2 == 0xE700000000000000;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6564756C636E69 && a2 == 0xE700000000000000;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6564756C637865 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_22ABDFF68();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_22A9D967C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22A9D96A8 + 4 * byte_22ABEC0A0[a1]))(7105633, 0xE300000000000000);
}

uint64_t sub_22A9D96A8()
{
  return 0x636972656D756ELL;
}

uint64_t sub_22A9D96C0()
{
  return 0x6564756C636E69;
}

uint64_t sub_22A9D96D8()
{
  return 0x6564756C637865;
}

uint64_t sub_22A9D96F4()
{
  return sub_22ABE0250();
}

uint64_t sub_22A9D9718()
{
  return 0x614E6E6D756C6F63;
}

uint64_t sub_22A9D9738(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x614E6E6D756C6F63 && a2 == 0xEB0000000073656DLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_22A9D97D4()
{
  sub_22ABE0244();
  OUTLINED_FUNCTION_19_12();
  sub_22ABE0280();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22A9D9808@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9D94C8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22A9D9830()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22A9D9848@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9D94E4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22A9D9870()
{
  sub_22A9D9EC8();
  return sub_22ABE02EC();
}

uint64_t sub_22A9D9898()
{
  sub_22A9D9EC8();
  return sub_22ABE02F8();
}

uint64_t sub_22A9D98C0()
{
  unsigned __int8 *v0;

  return sub_22A9D967C(*v0);
}

uint64_t sub_22A9D98C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9D94F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9D98EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9BFA58();
  *a1 = result;
  return result;
}

uint64_t sub_22A9D9910()
{
  sub_22A9D9DD8();
  return sub_22ABE02EC();
}

uint64_t sub_22A9D9938()
{
  sub_22A9D9DD8();
  return sub_22ABE02F8();
}

void sub_22A9D9964()
{
  sub_22A9D97D4();
}

uint64_t sub_22A9D9984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9D9738(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22A9D99AC()
{
  sub_22A9D9E14();
  return sub_22ABE02EC();
}

uint64_t sub_22A9D99D4()
{
  sub_22A9D9E14();
  return sub_22ABE02F8();
}

void sub_22A9D99FC()
{
  sub_22ABE0244();
  OUTLINED_FUNCTION_19_12();
  sub_22ABE0280();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22A9D9A28()
{
  sub_22A9D9E50();
  return sub_22ABE02EC();
}

uint64_t sub_22A9D9A50()
{
  sub_22A9D9E50();
  return sub_22ABE02F8();
}

uint64_t sub_22A9D9A78()
{
  sub_22A9D9E8C();
  return sub_22ABE02EC();
}

uint64_t sub_22A9D9AA0()
{
  sub_22A9D9E8C();
  return sub_22ABE02F8();
}

void ColumnSelection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FFC8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v34 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FFD0);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_8_14(v9, v25);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FFD8);
  v29 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0();
  v28 = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FFE0);
  v26 = *(_QWORD *)(v13 - 8);
  v27 = v13;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  v17 = v16 - v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FFE8);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_33();
  v22 = v21 - v20;
  v23 = *v2;
  v24 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9D9DD8();
  sub_22ABE02B0();
  if (!v24)
  {
    OUTLINED_FUNCTION_21_11();
    OUTLINED_FUNCTION_1_17();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
    sub_22A9DA870(&qword_255B10008, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_22ABDFD4C();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_8:
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
    goto LABEL_9;
  }
  if (v24 != 1)
  {
    if (v23)
    {
      OUTLINED_FUNCTION_20_11();
      OUTLINED_FUNCTION_1_17();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    }
    else
    {
      sub_22A9D9EC8();
      OUTLINED_FUNCTION_1_17();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v17, v27);
    }
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_1_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  sub_22A9DA870(&qword_255B10008, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_22ABDFD4C();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
LABEL_9:
  OUTLINED_FUNCTION_16();
}

unint64_t sub_22A9D9DD8()
{
  unint64_t result;

  result = qword_255B0FFF0;
  if (!qword_255B0FFF0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC5AC, &type metadata for ColumnSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0FFF0);
  }
  return result;
}

unint64_t sub_22A9D9E14()
{
  unint64_t result;

  result = qword_255B0FFF8;
  if (!qword_255B0FFF8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC55C, &type metadata for ColumnSelection.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B0FFF8);
  }
  return result;
}

unint64_t sub_22A9D9E50()
{
  unint64_t result;

  result = qword_255B10010;
  if (!qword_255B10010)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC50C, &type metadata for ColumnSelection.IncludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10010);
  }
  return result;
}

unint64_t sub_22A9D9E8C()
{
  unint64_t result;

  result = qword_255B10018;
  if (!qword_255B10018)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC4BC, &type metadata for ColumnSelection.NumericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10018);
  }
  return result;
}

unint64_t sub_22A9D9EC8()
{
  unint64_t result;

  result = qword_255B10020;
  if (!qword_255B10020)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC46C, &type metadata for ColumnSelection.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10020);
  }
  return result;
}

void ColumnSelection.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10028);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10030);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_8_14(v4, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10038);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10040);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10048);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_6_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9D9DD8();
  sub_22ABE0298();
  if (!v24)
  {
    v8 = sub_22ABDFC98();
    v9 = *(_QWORD *)(v8 + 16);
    v10 = v7;
    if (v9)
    {
      v23 = v7;
      v11 = *(unsigned __int8 *)(v8 + 32);
      sub_22A9DAF0C(1, v9, v8, v8 + 32, 0, (2 * v9) | 1);
      v13 = v12;
      v15 = v14;
      swift_bridgeObjectRelease();
      if (v13 == v15 >> 1)
        __asm { BR              X9 }
      v10 = v23;
    }
    v16 = sub_22ABDF830();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v18 = &type metadata for ColumnSelection;
    sub_22ABDFC08();
    sub_22ABDF824();
    v19 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow(v19);
    OUTLINED_FUNCTION_13_16();
    v20 = OUTLINED_FUNCTION_10_10();
    v21(v20, v10);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_16();
}

void sub_22A9DA488(_QWORD *a1)
{
  ColumnSelection.init(from:)(a1);
}

void sub_22A9DA49C(_QWORD *a1)
{
  ColumnSelection.encode(to:)(a1);
}

uint64_t DataFrame.selecting(_:)(uint64_t a1)
{
  char v1;
  uint64_t v3;
  char v4;

  v1 = *(_BYTE *)(a1 + 8);
  v3 = *(_QWORD *)a1;
  v4 = v1;
  v3 = sub_22A9DA52C((uint64_t)&v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  sub_22A9DA8D0();
  sub_22ABDD2D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A9DA52C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, unint64_t, uint64_t);

  v3 = sub_22ABDD400();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B100D0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_6_4();
  v9 = *(_QWORD *)a1;
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) == 1)
    {
      v10 = sub_22ABDD2C8();
      v11 = sub_22A9D93CC(v10);
      swift_bridgeObjectRelease();
      sub_22A9DC5EC(v11);
      sub_22AB16C00(v9, v12);
      v9 = (uint64_t)sub_22AB87E88(v13);
      swift_release();
    }
    else
    {
      v14 = sub_22ABDD2C8();
      if (v9)
      {
        v15 = *(_QWORD *)(v14 + 16);
        if (v15)
        {
          v16 = v14 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
          v9 = MEMORY[0x24BEE4AF8];
          v26 = *(_QWORD *)(v4 + 72);
          v27 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
          v25 = v4;
          while (1)
          {
            v27(v1, v16, v3);
            OUTLINED_FUNCTION_18_11(v1, 0);
            if (__swift_getEnumTagSinglePayload(v1, 1, v3) == 1)
              break;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v7, v1, v3);
            sub_22ABDD3E8();
            if (swift_dynamicCastMetatype()
              || swift_dynamicCastMetatype()
              || swift_dynamicCastMetatype()
              || swift_dynamicCastMetatype()
              || (__swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8), OUTLINED_FUNCTION_0_14())
              || (__swift_instantiateConcreteTypeFromMangledName(&qword_255B100D8), OUTLINED_FUNCTION_0_14())
              || (__swift_instantiateConcreteTypeFromMangledName(&qword_255B100E0), OUTLINED_FUNCTION_0_14())
              || (__swift_instantiateConcreteTypeFromMangledName(&qword_2540E85C8), OUTLINED_FUNCTION_0_14())
              || (__swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568), OUTLINED_FUNCTION_0_14())
              || (__swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550), OUTLINED_FUNCTION_0_14())
              || (__swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578), OUTLINED_FUNCTION_0_14()))
            {
              v17 = sub_22ABDD3F4();
              v19 = v18;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_17_8();
                v9 = v22;
              }
              v20 = *(_QWORD *)(v9 + 16);
              if (v20 >= *(_QWORD *)(v9 + 24) >> 1)
              {
                OUTLINED_FUNCTION_17_8();
                v9 = v23;
              }
              *(_QWORD *)(v9 + 16) = v20 + 1;
              v21 = v9 + 16 * v20;
              *(_QWORD *)(v21 + 32) = v17;
              *(_QWORD *)(v21 + 40) = v19;
              v4 = v25;
            }
            (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
            v16 += v26;
            if (!--v15)
              goto LABEL_29;
          }
        }
        else
        {
          v9 = MEMORY[0x24BEE4AF8];
LABEL_29:
          OUTLINED_FUNCTION_18_11(v1, 1);
        }
      }
      else
      {
        v9 = sub_22A9D93CC(v14);
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_22ABDEAEC();
  }
  return v9;
}

uint64_t sub_22A9DA870(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B10000);
    v8 = a2;
    result = MEMORY[0x22E2E4D80](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22A9DA8D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B10060;
  if (!qword_255B10060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B10000);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255B10060);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ColumnSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_22A9DA958(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_22A9DA958(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 1u)
    return sub_22ABDEAEC();
  return result;
}

uint64_t destroy for ColumnSelection(uint64_t a1)
{
  return sub_22A9DA97C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_22A9DA97C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t assignWithCopy for ColumnSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_22A9DA958(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_22A9DA97C(v5, v6);
  return a1;
}

uint64_t assignWithTake for ColumnSelection(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_22A9DA97C(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for ColumnSelection()
{
  return &type metadata for ColumnSelection;
}

uint64_t storeEnumTagSinglePayload for ColumnSelection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22A9DAA78 + 4 * byte_22ABEC0AD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22A9DAAAC + 4 * byte_22ABEC0A8[v4]))();
}

uint64_t sub_22A9DAAAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9DAAB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9DAABCLL);
  return result;
}

uint64_t sub_22A9DAAC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9DAAD0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22A9DAAD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9DAADC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ColumnSelection.CodingKeys()
{
  return &type metadata for ColumnSelection.CodingKeys;
}

ValueMetadata *type metadata accessor for ColumnSelection.AllCodingKeys()
{
  return &type metadata for ColumnSelection.AllCodingKeys;
}

ValueMetadata *type metadata accessor for ColumnSelection.NumericCodingKeys()
{
  return &type metadata for ColumnSelection.NumericCodingKeys;
}

ValueMetadata *type metadata accessor for ColumnSelection.IncludeCodingKeys()
{
  return &type metadata for ColumnSelection.IncludeCodingKeys;
}

uint64_t _s18CreateMLComponents15ColumnSelectionO17IncludeCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22A9DAB70 + 4 * byte_22ABEC0B2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22A9DAB90 + 4 * byte_22ABEC0B7[v4]))();
}

_BYTE *sub_22A9DAB70(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22A9DAB90(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22A9DAB98(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22A9DABA0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22A9DABA8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22A9DABB0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ColumnSelection.ExcludeCodingKeys()
{
  return &type metadata for ColumnSelection.ExcludeCodingKeys;
}

unint64_t sub_22A9DABD0()
{
  unint64_t result;

  result = qword_255B10068;
  if (!qword_255B10068)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC234, &type metadata for ColumnSelection.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10068);
  }
  return result;
}

unint64_t sub_22A9DAC10()
{
  unint64_t result;

  result = qword_255B10070;
  if (!qword_255B10070)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC2EC, &type metadata for ColumnSelection.IncludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10070);
  }
  return result;
}

unint64_t sub_22A9DAC50()
{
  unint64_t result;

  result = qword_255B10078;
  if (!qword_255B10078)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC444, &type metadata for ColumnSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10078);
  }
  return result;
}

unint64_t sub_22A9DAC90()
{
  unint64_t result;

  result = qword_255B10080;
  if (!qword_255B10080)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC364, &type metadata for ColumnSelection.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10080);
  }
  return result;
}

unint64_t sub_22A9DACD0()
{
  unint64_t result;

  result = qword_255B10088;
  if (!qword_255B10088)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC38C, &type metadata for ColumnSelection.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10088);
  }
  return result;
}

unint64_t sub_22A9DAD10()
{
  unint64_t result;

  result = qword_255B10090;
  if (!qword_255B10090)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC314, &type metadata for ColumnSelection.NumericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10090);
  }
  return result;
}

unint64_t sub_22A9DAD50()
{
  unint64_t result;

  result = qword_255B10098;
  if (!qword_255B10098)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC33C, &type metadata for ColumnSelection.NumericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10098);
  }
  return result;
}

unint64_t sub_22A9DAD90()
{
  unint64_t result;

  result = qword_255B100A0;
  if (!qword_255B100A0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC25C, &type metadata for ColumnSelection.IncludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B100A0);
  }
  return result;
}

unint64_t sub_22A9DADD0()
{
  unint64_t result;

  result = qword_255B100A8;
  if (!qword_255B100A8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC284, &type metadata for ColumnSelection.IncludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B100A8);
  }
  return result;
}

unint64_t sub_22A9DAE10()
{
  unint64_t result;

  result = qword_255B100B0;
  if (!qword_255B100B0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC1A4, &type metadata for ColumnSelection.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B100B0);
  }
  return result;
}

unint64_t sub_22A9DAE50()
{
  unint64_t result;

  result = qword_255B100B8;
  if (!qword_255B100B8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC1CC, &type metadata for ColumnSelection.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B100B8);
  }
  return result;
}

unint64_t sub_22A9DAE90()
{
  unint64_t result;

  result = qword_255B100C0;
  if (!qword_255B100C0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC3B4, &type metadata for ColumnSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B100C0);
  }
  return result;
}

unint64_t sub_22A9DAED0()
{
  unint64_t result;

  result = qword_255B100C8;
  if (!qword_255B100C8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEC3DC, &type metadata for ColumnSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B100C8);
  }
  return result;
}

uint64_t sub_22A9DAF0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_0_14()
{
  return swift_dynamicCastMetatype();
}

uint64_t OUTLINED_FUNCTION_6_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_7_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v1, v0);
}

void OUTLINED_FUNCTION_8_14(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_10_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_11_18()
{
  return sub_22ABDFBFC();
}

uint64_t OUTLINED_FUNCTION_13_16()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_14_12()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_17_8()
{
  sub_22AA35C2C();
}

uint64_t OUTLINED_FUNCTION_18_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_19_12()
{
  return sub_22ABE0250();
}

unint64_t OUTLINED_FUNCTION_20_11()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 1;
  return sub_22A9D9E8C();
}

unint64_t OUTLINED_FUNCTION_21_11()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 2;
  return sub_22A9D9E50();
}

unint64_t OUTLINED_FUNCTION_22_9()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 3;
  return sub_22A9D9E14();
}

void sub_22A9DB064(void *a1@<X0>, void *a2@<X2>, void *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE v14[16];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10110);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v14[-v12];
  sub_22A9DB7A4(a2, a3);
  swift_storeEnumTagMultiPayload();
  sub_22A9DBBEC((uint64_t)v11, (uint64_t)v13);
  sub_22A9DBBEC((uint64_t)v13, a4);

}

uint64_t sub_22A9DB174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a1;
  v6[12] = a2;
  return swift_task_switch();
}

uint64_t sub_22A9DB190()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t inited;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;

  v2 = (void *)v0[13];
  v1 = v0[14];
  v3 = (void *)v0[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B100F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  v5 = (void *)*MEMORY[0x24BDF9F38];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDF9F38];
  *(_QWORD *)(inited + 64) = sub_22A9BEDCC(0, &qword_255B100F8);
  *(_QWORD *)(inited + 40) = v2;
  type metadata accessor for VNImageOption(0);
  sub_22A9BED8C(&qword_255B0D920, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22ABE88B8);
  v6 = v3;
  v7 = v5;
  v8 = v2;
  sub_22ABDEAC8();
  v9 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
  v10 = sub_22A9BEBE8(v6);
  v0[15] = v10;
  v11 = sub_22A9DB498((uint64_t)v8, v1);
  v0[16] = v11;
  v12 = v11;
  v14 = v0[13];
  v13 = v0[14];
  v15 = (_QWORD *)swift_task_alloc();
  v0[17] = v15;
  v15[2] = v14;
  v15[3] = v13;
  v15[4] = v12;
  v15[5] = v10;
  v16 = swift_task_alloc();
  v0[18] = v16;
  *(_QWORD *)(v16 + 16) = v12;
  v17 = v12;
  v18 = (_QWORD *)swift_task_alloc();
  v0[19] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  *v18 = v0;
  v18[1] = sub_22A9DB38C;
  return sub_22ABDFF74();
}

uint64_t sub_22A9DB38C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_22A9DB414()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);

  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9DB444()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 120);
  v1 = *(void **)(v0 + 128);

  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v0 + 8));
}

id sub_22A9DB498(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF9B40]), sel_init);
  objc_msgSend(v3, sel_setImageCropAndScaleOption_, a2);
  v8[0] = 0;
  if ((objc_msgSend(v3, sel_setRevision_error_, 3737841671, v8) & 1) != 0)
  {
    v4 = v8[0];
  }
  else
  {
    v5 = v8[0];
    sub_22ABDD004();

    swift_willThrow(v6);
  }
  return v3;
}

uint64_t sub_22A9DB57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22A9DB59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  *v5 = v0;
  v5[1] = sub_22A9DB650;
  return sub_22ABE0118();
}

uint64_t sub_22A9DB650()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_22A9DB6C0()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22A9DB6EC(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10110);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A9DB064(a2, a4, a5, (uint64_t)v10);
  sub_22ABC5740((uint64_t)v10);
  return sub_22A9DBBAC((uint64_t)v10);
}

void sub_22A9DB7A4(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18[3];

  v18[2] = *(id *)MEMORY[0x24BDAC8D0];
  sub_22ABDF1DC();
  if (v2)
    return;
  __swift_instantiateConcreteTypeFromMangledName(qword_2540E8788);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22ABEA720;
  *(_QWORD *)(v5 + 32) = a1;
  sub_22ABDF014();
  sub_22A9BEDCC(0, &qword_255B0EEE8);
  v6 = a1;
  v7 = (void *)sub_22ABDEFE4();
  swift_bridgeObjectRelease();
  v18[0] = 0;
  v8 = objc_msgSend(a2, sel_performRequests_error_, v7, v18);

  if (!v8)
  {
    v16 = v18[0];
    sub_22ABDD004();

LABEL_14:
    swift_willThrow(v17);
    return;
  }
  v9 = v18[0];
  v10 = sub_22A9DBC34(v6);
  if (!v10)
  {
LABEL_13:
    sub_22ABDF17C();
    sub_22A9BED8C(&qword_255B0EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    swift_allocError();
    v17 = sub_22ABDE9FC();
    goto LABEL_14;
  }
  v11 = v10;
  if (v10 >> 62)
  {
    if (sub_22ABDFB60())
      goto LABEL_6;
    goto LABEL_12;
  }
  if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_6:
  sub_22A9B8810(0, (v11 & 0xC000000000000001) == 0, v11);
  if ((v11 & 0xC000000000000001) != 0)
    v12 = (id)MEMORY[0x22E2E3A9C](0, v11);
  else
    v12 = *(id *)(v11 + 32);
  v13 = v12;
  swift_bridgeObjectRelease();
  if (objc_msgSend(v13, sel_elementType) == (id)1)
  {
    v14 = objc_msgSend(v13, sel_data);
    sub_22ABDD19C();

    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(v15 + 32) = objc_msgSend(v13, sel_elementCount);
    sub_22ABDE840();

  }
  else
  {
    v18[0] = 0;
    v18[1] = (id)0xE000000000000000;
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    objc_msgSend(v13, sel_elementType);
    type metadata accessor for VNElementType(0);
    sub_22ABDFA34();
    sub_22ABDEDC8();
    sub_22ABDFADC();
    __break(1u);
  }
}

uint64_t sub_22A9DBB28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_22A9B24D4;
  return sub_22A9DB57C(a1, v4, v5, v7, v6);
}

uint64_t sub_22A9DBBA0(uint64_t a1)
{
  uint64_t v1;

  return sub_22A9DB6EC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_22A9DBBAC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10110);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22A9DBBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A9DBC34(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_results);
  if (!v1)
    return 0;
  v2 = v1;
  sub_22A9BEDCC(0, &qword_255B10118);
  v3 = sub_22ABDEFF0();

  return v3;
}

void sub_22A9DBCA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    v3 = sub_22AA4F4AC(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = v4;
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v10 = v1;
          swift_getAtKeyPath();
          v8 = *(_QWORD *)(v12 + 16);
          if (v8 >= *(_QWORD *)(v12 + 24) >> 1)
            sub_22AB4CE30();
          *(_QWORD *)(v12 + 16) = v8 + 1;
          *(_QWORD *)(v12 + 8 * v8 + 32) = v11;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v9 = sub_22ABDF71C();
          --v1;
          if (v10 == 1)
            goto LABEL_16;
          v5 = v9;
          if ((v9 & 0x8000000000000000) == 0)
          {
            v6 = *(_DWORD *)(a1 + 36);
            if (v9 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_release();
  }
}

uint64_t sub_22A9DBE94(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_22AB4D24C();
    result = v9;
    v4 = a1 + 32;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)v4 + 16);
      if (v5)
        v6 = *(_QWORD *)(*(_QWORD *)v4 + 32);
      else
        v6 = 0;
      v10 = result;
      v7 = *(_QWORD *)(result + 16);
      if (v7 >= *(_QWORD *)(result + 24) >> 1)
      {
        sub_22AB4D24C();
        result = v10;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      v8 = result + 16 * v7;
      *(_QWORD *)(v8 + 32) = v6;
      *(_BYTE *)(v8 + 40) = v5 == 0;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_22A9DBF7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    v3 = sub_22AA4F4AC(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = v4;
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v10 = v1;
          swift_getAtKeyPath();
          v8 = *(_QWORD *)(v12 + 16);
          if (v8 >= *(_QWORD *)(v12 + 24) >> 1)
            sub_22AB4CE30();
          *(_QWORD *)(v12 + 16) = v8 + 1;
          *(_QWORD *)(v12 + 8 * v8 + 32) = v11;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v9 = sub_22ABDF71C();
          --v1;
          if (v10 == 1)
            goto LABEL_16;
          v5 = v9;
          if ((v9 & 0x8000000000000000) == 0)
          {
            v6 = *(_DWORD *)(a1 + 36);
            if (v9 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_release();
  }
}

void sub_22A9DC188(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    v3 = sub_22AA4F4AC(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = v4;
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v10 = v1;
          swift_getAtKeyPath();
          v8 = *(_QWORD *)(v12 + 16);
          if (v8 >= *(_QWORD *)(v12 + 24) >> 1)
            sub_22AB4CE30();
          *(_QWORD *)(v12 + 16) = v8 + 1;
          *(_QWORD *)(v12 + 8 * v8 + 32) = v11;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v6 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v9 = sub_22ABDF71C();
          --v1;
          if (v10 == 1)
            goto LABEL_16;
          v5 = v9;
          if ((v9 & 0x8000000000000000) == 0)
          {
            v6 = *(_DWORD *)(a1 + 36);
            if (v9 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_release();
  }
}

void sub_22A9DC37C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *(*v5)(uint64_t *__return_ptr, char *);
  _QWORD *(*v6)(uint64_t *__return_ptr, char *);
  _QWORD *(*v7)(uint64_t *__return_ptr, char *);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD *(*v25)(uint64_t *__return_ptr, char *);
  _QWORD *(*v26)(uint64_t *__return_ptr, char *);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *(*v32)(uint64_t *__return_ptr, char *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *(*v36)(uint64_t *__return_ptr, char *);
  _QWORD *(*v37)(uint64_t *__return_ptr, char *);
  uint64_t v38;
  char v39;
  _QWORD *v40;
  _QWORD *(*v41)(uint64_t *__return_ptr, char *);

  v5 = *(_QWORD *(**)(uint64_t *__return_ptr, char *))(a1 + 16);
  v6 = *(_QWORD *(**)(uint64_t *__return_ptr, char *))(a2 + 16);
  if ((unint64_t)v6 >= (unint64_t)v5)
    v7 = *(_QWORD *(**)(uint64_t *__return_ptr, char *))(a1 + 16);
  else
    v7 = *(_QWORD *(**)(uint64_t *__return_ptr, char *))(a2 + 16);
  v40 = (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_22AB4D24C();
  v8 = v40;
  v36 = v6;
  v37 = v5;
  v33 = v2;
  v34 = a2;
  v35 = a1;
  v32 = v7;
  if (v7)
  {
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_47_3();
    v9 = OUTLINED_FUNCTION_30_8();
    v17 = a1 + 40;
    v18 = a2 + 40;
    v19 = (char *)v5;
    v20 = (char *)v6;
    while (v19)
    {
      if (!v20)
        goto LABEL_23;
      OUTLINED_FUNCTION_13_17(v9, v10, v11, v12, v13, v14, v15, v16, v32, v33);
      v9 = OUTLINED_FUNCTION_3_19();
      v21 = v38;
      v22 = v40[2];
      v6 = (_QWORD *(*)(uint64_t *__return_ptr, char *))(v22 + 1);
      if (v22 >= v40[3] >> 1)
      {
        sub_22AB4D24C();
        v21 = v38;
      }
      v40[2] = v6;
      v23 = &v40[2 * v22];
      --v20;
      v23[4] = v21;
      *((_BYTE *)v23 + 40) = v39;
      --v19;
      v17 += 16;
      v18 += 16;
      v7 = (_QWORD *(*)(uint64_t *__return_ptr, char *))((char *)v7 - 1);
      if (!v7)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_47_3();
    v9 = OUTLINED_FUNCTION_30_8();
LABEL_13:
    v25 = v36;
    v24 = (unint64_t)v37;
    if ((unint64_t)v37 <= (unint64_t)v36)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      OUTLINED_FUNCTION_72_1();
      return;
    }
    v26 = v32;
    v27 = v34;
    v28 = v35;
    while ((unint64_t)v26 < v24)
    {
      if (v25 == v26)
        goto LABEL_21;
      if ((unint64_t)v26 >= (unint64_t)v25)
        goto LABEL_25;
      OUTLINED_FUNCTION_13_17(v9, v10, v11, v12, v13, v14, v15, v16, v32, v33);
      v9 = OUTLINED_FUNCTION_3_19();
      v41 = v6;
      v30 = *((_QWORD *)v6 + 2);
      v29 = *((_QWORD *)v6 + 3);
      v6 = (_QWORD *(*)(uint64_t *__return_ptr, char *))(v30 + 1);
      if (v30 >= v29 >> 1)
      {
        sub_22AB4D24C();
        v8 = v41;
      }
      v26 = (_QWORD *(*)(uint64_t *__return_ptr, char *))((char *)v26 + 1);
      v8[2] = v6;
      v31 = &v8[2 * v30];
      v31[4] = v38;
      *((_BYTE *)v31 + 40) = v39;
      v28 += 16;
      v27 += 16;
      v25 = v36;
      v24 = (unint64_t)v37;
      if (v37 == v26)
        goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_22A9DC5EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  OUTLINED_FUNCTION_84_1(a1);
  sub_22ABDF26C();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 40;
    do
    {
      v4 = OUTLINED_FUNCTION_16_13();
      OUTLINED_FUNCTION_80_1(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
      sub_22AB470E0();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_32_4();
}

void sub_22A9DC670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_84_1(a1);
  v2 = sub_22ABDF26C();
  if (*(_QWORD *)(v1 + 16))
  {
    while (1)
      OUTLINED_FUNCTION_14_13(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_1_18();
}

void sub_22A9DC6D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FD90);
  sub_22A9C8D60(qword_255B0FD98, &qword_255B0FD90, (uint64_t)&unk_22ABE90C8);
  sub_22ABDF26C();
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 40;
    do
    {
      v4 = OUTLINED_FUNCTION_16_13();
      OUTLINED_FUNCTION_80_1(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
      sub_22AB474D0();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_32_4();
}

void sub_22A9DC788(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_84_1(a1);
  v2 = sub_22ABDF26C();
  if (*(_QWORD *)(v1 + 16))
  {
    while (1)
      OUTLINED_FUNCTION_12_15(v2, v3, v4, v5, v6, v7, v8, v9, v10, SHIDWORD(v10));
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_1_18();
}

uint64_t sub_22A9DC7F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v9[16];
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10120);
  sub_22A9E06CC();
  v2 = sub_22ABDF26C();
  v10 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (char *)(a1 + 40);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *v4;
      v4 += 16;
      sub_22AB476B0((uint64_t)v9, v5, v6);
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

void sub_22A9DC890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_84_1(a1);
  v2 = sub_22ABDF26C();
  if (*(_QWORD *)(v1 + 16))
  {
    while (1)
      OUTLINED_FUNCTION_11_19(v2, v3, v4, v5, v6, v7, v8, v9, v10, SWORD2(v10), SBYTE6(v10), SHIBYTE(v10));
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_1_18();
}

void sub_22A9DC8F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_50_5();
  if (v0)
  {
    while (1)
      OUTLINED_FUNCTION_12_15(v1, v2, v3, v4, v5, v6, v7, v8, v9, SHIDWORD(v9));
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_1_18();
}

uint64_t sub_22A9DC944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _BYTE v8[16];
  uint64_t v9;

  v9 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (char *)(a1 + 40);
    do
    {
      v4 = *((_QWORD *)v3 - 1);
      v5 = *v3;
      v3 += 16;
      sub_22AB476B0((uint64_t)v8, v4, v5);
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    v6 = a2;
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_22A9DC9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_50_5();
  if (v0)
  {
    while (1)
      OUTLINED_FUNCTION_14_13(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_1_18();
}

void sub_22A9DCA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_50_5();
  if (v0)
  {
    while (1)
      OUTLINED_FUNCTION_11_19(v1, v2, v3, v4, v5, v6, v7, v8, v9, SWORD2(v9), SBYTE6(v9), SHIBYTE(v9));
  }
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_1_18();
}

void BaseTreeClassifier.configuration.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_BYTE *)(a1 + 56) = v2;
  OUTLINED_FUNCTION_56_4((__n128 *)a1, *(__n128 *)(v1 + 64));
}

__n128 BaseTreeClassifier.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)v1 = *(_QWORD *)a1;
  *(_OWORD *)(v1 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 40);
  *(_BYTE *)(v1 + 56) = v2;
  result = *(__n128 *)(a1 + 64);
  *(__n128 *)(v1 + 64) = result;
  *(_QWORD *)(v1 + 80) = v3;
  return result;
}

uint64_t (*BaseTreeClassifier.configuration.modify())()
{
  return nullsub_1;
}

void __swiftcall BaseTreeClassifier.init(configuration:)(CreateMLComponents::BaseTreeClassifier *__return_ptr retstr, CreateMLComponents::BoostedTreeConfiguration *configuration)
{
  Swift::Bool is_nil;

  is_nil = configuration->earlyStoppingIterationCount.is_nil;
  retstr->configuration._learningRate = configuration->_learningRate;
  *(_OWORD *)&retstr->configuration.maximumDepth = *(_OWORD *)&configuration->maximumDepth;
  *(_OWORD *)&retstr->configuration.minimumLossReduction = *(_OWORD *)&configuration->minimumLossReduction;
  *(_OWORD *)&retstr->configuration.randomSeed = *(_OWORD *)&configuration->randomSeed;
  retstr->configuration.earlyStoppingIterationCount.is_nil = is_nil;
  OUTLINED_FUNCTION_56_4((__n128 *)retstr, *(__n128 *)&configuration->rowSubsample);
}

void BaseTreeClassifier.fitted(features:annotations:classCount:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_85_1();
  OUTLINED_FUNCTION_82_1();
  v24 = v8;
  v9 = *(_QWORD *)(v3 + 24);
  v10 = *(_QWORD *)(v3 + 32);
  v12 = *(_QWORD *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 48);
  v13 = *(_BYTE *)(v3 + 56);
  v14 = *(_QWORD *)(v3 + 64);
  v15 = *(_QWORD *)(v3 + 72);
  v16 = *(_QWORD *)(v3 + 80);
  v25 = v17;
  v26 = v5;
  LOBYTE(v27) = v18;
  v28 = v6;
  OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_43_3(&v25);
  if (!v4)
  {
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_42_4();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_33_2();
    v19 = OUTLINED_FUNCTION_29_6();
    v20 = sub_22AB7C374(v19, 0);
    sub_22A9DCE14(v20, a3);
    v25 = v7;
    v26 = v22;
    v27 = v24;
    v28 = v9;
    v29 = v10;
    v30 = v12;
    v31 = v11;
    v32 = v13;
    v33 = v14;
    v34 = v15;
    v35 = v16;
    OUTLINED_FUNCTION_59_3(v20, a3, v5);
    if (v24 < 0)
    {
      __break(1u);
    }
    else if (v24)
    {
      OUTLINED_FUNCTION_30_8();
      OUTLINED_FUNCTION_70_1();
      OUTLINED_FUNCTION_15_10();
      swift_release_n();
    }
    else
    {
      OUTLINED_FUNCTION_15_10();
      *v21 = a3;
      v21[1] = v5;
      v21[2] = v20;
      v21[3] = 0;
    }
  }
}

id sub_22A9DCE14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 < 2)
  {
    sub_22A9B7B50();
    v5 = OUTLINED_FUNCTION_53();
    *v6 = 0xD00000000000001CLL;
    v6[1] = 0x800000022ABE1B50;
    v6[2] = 0xD000000000000027;
    v6[3] = 0x800000022ABE1C50;
    return (id)OUTLINED_FUNCTION_65_3(v5, (uint64_t)v6, 5);
  }
  if (a2 == 2)
  {
    OUTLINED_FUNCTION_17_9();
    result = sub_22AB7B960(v3);
    if (v2)
      return result;
  }
  else
  {
    OUTLINED_FUNCTION_17_9();
    result = sub_22AB7B960(v7);
    if (v2)
      return result;
  }
  OUTLINED_FUNCTION_17_9();
  return OUTLINED_FUNCTION_2_3(v8);
}

void sub_22A9DCF48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  double v9;
  double v10;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;

  v8 = *(_QWORD *)(v4 + 8);
  v10 = *(double *)(v4 + 24);
  v9 = *(double *)(v4 + 32);
  v11 = *(_BYTE *)(v4 + 56);
  v12 = *(double *)(v4 + 72);
  v13 = *(_QWORD *)(v4 + 80);
  if ((a4 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_19();
    v14 = OUTLINED_FUNCTION_8_15();
    OUTLINED_FUNCTION_2_3(v14);
    if (v5)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_2_3(0x74656D5F65657274);
  if (!v5)
  {
    OUTLINED_FUNCTION_2_3(0x76697463656A626FLL);
    if (a2 >= 3)
    {
      OUTLINED_FUNCTION_9_19();
      OUTLINED_FUNCTION_2_3(0x73616C635F6D756ELL);
      OUTLINED_FUNCTION_58_1();
    }
    OUTLINED_FUNCTION_24_8();
    OUTLINED_FUNCTION_44_5(v15, v16, v10, v17, 0x800000022ABE1B50);
    OUTLINED_FUNCTION_41_4();
    sub_22ABDF230();
    OUTLINED_FUNCTION_2_3(0x616D6D6167);
    OUTLINED_FUNCTION_58_1();
    if ((v11 & 1) == 0)
    {
      OUTLINED_FUNCTION_9_19();
      OUTLINED_FUNCTION_24_8();
      OUTLINED_FUNCTION_2_3(v18);
      OUTLINED_FUNCTION_58_1();
    }
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_2_3(1684366707);
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_24_8();
    OUTLINED_FUNCTION_44_5(v19, v20, v9, v21, 0x800000022ABE1B50);
    OUTLINED_FUNCTION_41_4();
    sub_22ABDF230();
    OUTLINED_FUNCTION_2_3(0xD000000000000010);
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_36_3(v8, 0x206D756D6978614DLL, 0xED00006874706564, v22, 0x800000022ABE1B50);
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_2_3(0x747065645F78616DLL);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32_8();
    sub_22AA9D970(v23, v24, v25);
    OUTLINED_FUNCTION_41_4();
    sub_22ABDF230();
    OUTLINED_FUNCTION_2_3(0x6C706D6173627573);
    OUTLINED_FUNCTION_51_5();
    OUTLINED_FUNCTION_24_8();
    sub_22AA9D970(v12, 0.0, 1.0);
    OUTLINED_FUNCTION_41_4();
    sub_22ABDF230();
    OUTLINED_FUNCTION_2_3(0xD000000000000010);
    OUTLINED_FUNCTION_51_5();
    OUTLINED_FUNCTION_36_3(v13, 0xD000000000000013, 0x800000022ABE1BF0, v26, a1 | 0x8000000000000000);
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_24_8();
    OUTLINED_FUNCTION_2_3(v27);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32_8();
    sub_22AA9DA1C(v28, v29, v30);
    OUTLINED_FUNCTION_41_4();
    sub_22ABDF230();
    OUTLINED_FUNCTION_2_3(6386789);
    goto LABEL_3;
  }
}

void BaseTreeClassifier.fitted(trainingFeatures:trainingAnnotations:validationFeatures:validationAnnotations:classCount:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_85_1();
  v42 = *(_QWORD *)(v11 + 8);
  v41 = *(_BYTE *)(v11 + 16);
  v43 = *(_QWORD *)(v11 + 24);
  v44 = *(_QWORD *)v11;
  OUTLINED_FUNCTION_82_1();
  v40 = v12;
  v13 = *(_QWORD *)(v6 + 24);
  v14 = *(_QWORD *)(v6 + 32);
  v16 = *(_QWORD *)(v6 + 40);
  v15 = *(_QWORD *)(v6 + 48);
  v17 = *(_BYTE *)(v6 + 56);
  v18 = *(_QWORD *)(v6 + 64);
  v19 = *(_QWORD *)(v6 + 72);
  v20 = *(_QWORD *)(v6 + 80);
  v48 = v21;
  v49 = v8;
  LOBYTE(v50) = v22;
  v51 = v9;
  OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_29_6();
  v23 = OUTLINED_FUNCTION_43_3(&v48);
  if (!v7)
  {
    v24 = (uint64_t)v23;
    v37 = v15;
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_42_4();
    v36 = v24;
    OUTLINED_FUNCTION_51_1();
    v48 = v44;
    v49 = v42;
    LOBYTE(v50) = v41;
    v51 = v43;
    OUTLINED_FUNCTION_13();
    swift_retain();
    v25 = OUTLINED_FUNCTION_43_3(&v48);
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_42_4();
    OUTLINED_FUNCTION_51_1();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_33_2();
    swift_retain();
    swift_retain();
    v26 = sub_22AB7C374(v24, (uint64_t)v25);
    v27 = v26;
    sub_22A9DCE14(v26, a5);
    v48 = v10;
    v28 = v40;
    v49 = v39;
    v50 = v40;
    v51 = v13;
    v52 = v14;
    v53 = v16;
    v54 = v37;
    v55 = v17;
    v56 = v18;
    v57 = v19;
    v58 = v20;
    OUTLINED_FUNCTION_59_3(v27, a5, v8);
    v46 = v27;
    if ((v40 & 0x8000000000000000) != 0)
    {
LABEL_20:
      __break(1u);
      return;
    }
    if (v40)
    {
      swift_retain();
      v29 = 0;
      while (v28 != v29)
      {
        OUTLINED_FUNCTION_70_1();
        OUTLINED_FUNCTION_69_2(v36);
        v30 = v29 + 1;
        if (a6)
        {
          if (v29 < 5 || 10 * (v29 / 0xA) == v29)
          {
            swift_retain();
            v32 = sub_22A9A9840((uint64_t)a6);
            v33 = (_QWORD *)sub_22AB7B79C(v32);
            OUTLINED_FUNCTION_49_5();
            sub_22A9C2C80(v33);
            v35 = v34;
            OUTLINED_FUNCTION_3_8();
            v48 = 0xD000000000000015;
            v49 = 0x800000022ABE1AF0;
            v50 = v30;
            v51 = v40;
            LOBYTE(v52) = 0;
            v53 = v35;
            a6(&v48);
            OUTLINED_FUNCTION_54_3((uint64_t)a6);
            OUTLINED_FUNCTION_2_1();
            swift_bridgeObjectRelease();
          }
        }
        v29 = v30;
        v28 = v40;
        v27 = v46;
        if (v40 == v30)
          goto LABEL_18;
      }
      __break(1u);
      goto LABEL_20;
    }
    swift_retain();
LABEL_18:
    swift_release();
    OUTLINED_FUNCTION_21_12();
    swift_release();
    *v38 = a5;
    v38[1] = v8;
    v38[2] = v27;
    v38[3] = v28;
  }
}

void BaseTreeClassifier.makeTransformer(classCount:featureCount:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_33_2();
  v5 = sub_22AB7C374(0, 0);
  if (!v3)
  {
    v6 = v5;
    sub_22A9DCF48(v5, a1, a2, 0);
    *a3 = a1;
    a3[1] = a2;
    a3[2] = v6;
    a3[3] = 0;
  }
}

void *BaseTreeClassifier.update(_:features:annotations:eventHandler:)(__int128 *a1, uint64_t *a2, uint64_t a3, void (*a4)(__int128 *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t inited;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _QWORD v54[2];
  char v55;
  uint64_t v56;
  _OWORD v57[3];

  v8 = *a2;
  v9 = a2[1];
  v10 = *((_BYTE *)a2 + 16);
  v11 = a2[3];
  v12 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)&v51 = *a2;
  *((_QWORD *)&v51 + 1) = v9;
  LOBYTE(v52) = v10;
  *((_QWORD *)&v52 + 1) = v11;
  OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_13();
  swift_retain();
  result = OUTLINED_FUNCTION_43_3((uint64_t *)&v51);
  if (!v5)
  {
    v14 = (uint64_t)result;
    v49 = v8;
    v48 = v12;
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_42_4();
    OUTLINED_FUNCTION_2_1();
    v15 = a1;
    v16 = *((_QWORD *)a1 + 2);
    if (OUTLINED_FUNCTION_90_0())
    {
      v17 = v9;
      if (v9 != OUTLINED_FUNCTION_90_0())
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
        v18 = OUTLINED_FUNCTION_13();
        *(_OWORD *)(v18 + 16) = xmmword_22ABE9FB0;
        *(_QWORD *)(v18 + 32) = v49;
        *(_QWORD *)(v18 + 40) = v9;
        *(_QWORD *)&v51 = 0;
        *((_QWORD *)&v51 + 1) = 0xE000000000000000;
        sub_22ABDF7A0();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v51 = 0x6465746365707845;
        *((_QWORD *)&v51 + 1) = 0xE900000000000020;
        v54[0] = OUTLINED_FUNCTION_90_0();
        OUTLINED_FUNCTION_38_6();
        sub_22ABDEDC8();
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_24_8();
        sub_22ABDEDC8();
        v54[0] = v9;
        OUTLINED_FUNCTION_38_6();
        sub_22ABDEDC8();
        OUTLINED_FUNCTION_51_1();
        v19 = v51;
        sub_22A9B7B50();
        v20 = OUTLINED_FUNCTION_53();
        *(_QWORD *)v21 = v18;
        *(_OWORD *)(v21 + 8) = v19;
        *(_QWORD *)(v21 + 24) = 0;
        OUTLINED_FUNCTION_65_3(v20, v21, 6);
        return (void *)swift_release();
      }
    }
    else
    {
      v17 = v9;
      *((_QWORD *)v15 + 1) = v9;
      *(_QWORD *)&v51 = v9;
      sub_22ABDFD7C();
      v22 = OUTLINED_FUNCTION_8_15();
      OUTLINED_FUNCTION_2_3(v22);
      OUTLINED_FUNCTION_2_1();
    }
    OUTLINED_FUNCTION_70_1();
    result = OUTLINED_FUNCTION_69_2(v14);
    v23 = *((_QWORD *)v15 + 3);
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
      return result;
    }
    *((_QWORD *)v15 + 3) = v25;
    if (a4)
    {
      v26 = a3;
      v51 = *v15;
      *(_QWORD *)&v52 = v16;
      *((_QWORD *)&v52 + 1) = v25;
      v54[0] = v49;
      v54[1] = v17;
      v55 = v10;
      v56 = v11;
      sub_22A9A9840((uint64_t)a4);
      swift_retain();
      v27 = BaseTreeClassifierModel.applied(features:eventHandler:)((uint64_t)v54);
      OUTLINED_FUNCTION_81_1();
      sub_22A9DBE94(v27);
      OUTLINED_FUNCTION_2_1();
      v28 = sub_22A9DE078(v26);
      MEMORY[0x24BDAC7A8](v28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10120);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10128);
      sub_22A9E06CC();
      sub_22A9C8D60(&qword_255B10138, &qword_255B10128, MEMORY[0x24BEE2B40]);
      swift_getKeyPath();
      swift_retain();
      sub_22ABDEAEC();
      sub_22ABDEAEC();
      v29 = OUTLINED_FUNCTION_20_12();
      sub_22A9DC37C(v29, v30);
      v32 = v31;
      OUTLINED_FUNCTION_49_5();
      v33 = sub_22A9DC7F0(v32);
      MEMORY[0x24BDAC7A8](v33);
      swift_getKeyPath();
      swift_retain();
      v34 = OUTLINED_FUNCTION_20_12();
      sub_22A9DC37C(v34, v35);
      v37 = v36;
      OUTLINED_FUNCTION_15_10();
      sub_22A9DC944(v37, v33);
      v38 = OUTLINED_FUNCTION_20_12();
      sub_22A9DEB48(v38, v39, v40, v41, v42);
      OUTLINED_FUNCTION_3_8();
      swift_bridgeObjectRelease();
      v57[0] = v51;
      v57[1] = v52;
      v57[2] = v53;
      v43 = *((_QWORD *)v15 + 3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E240);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
      *(_QWORD *)(inited + 32) = 0xD000000000000011;
      *(_QWORD *)(inited + 40) = 0x800000022ABE1590;
      sub_22A9DE358();
      v46 = v45;
      sub_22A9E0728((uint64_t)v57);
      *(_QWORD *)(inited + 72) = MEMORY[0x24BEE13C8];
      *(_QWORD *)(inited + 48) = v46;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
      sub_22A9ADA0C();
      v47 = sub_22ABDEAC8();
      *(_QWORD *)&v51 = 0xD000000000000015;
      *((_QWORD *)&v51 + 1) = 0x800000022ABE1AF0;
      *(_QWORD *)&v52 = v43;
      *((_QWORD *)&v52 + 1) = v48;
      LOBYTE(v53) = 0;
      *((_QWORD *)&v53 + 1) = v47;
      a4(&v51);
      OUTLINED_FUNCTION_67_3();
      sub_22A9ADA48((uint64_t)a4);
      OUTLINED_FUNCTION_2_1();
      return (void *)swift_bridgeObjectRelease();
    }
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_22A9DE078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_22AB4D24C();
    v4 = a1 + 32;
    v2 = v10;
    do
    {
      v4 += 8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10120);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AB4D24C();
        v2 = v10;
      }
      v5 = *(_QWORD *)(v2 + 16);
      if (v5 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_22AB4D24C();
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v5 + 1;
      v6 = v2 + 16 * v5;
      *(_QWORD *)(v6 + 32) = v8;
      *(_BYTE *)(v6 + 40) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_22A9DE1A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];

  OUTLINED_FUNCTION_62_3();
  sub_22AA4F470(v2);
  OUTLINED_FUNCTION_26_6();
  while (v6)
  {
    OUTLINED_FUNCTION_35_3();
LABEL_21:
    v11 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v7);
    v12 = __OFADD__(v1, v11);
    v1 += v11;
    if (v12)
    {
      __break(1u);
      goto LABEL_24;
    }
  }
  v8 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
LABEL_32:
    __break(1u);
    return;
  }
  if (v8 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * v8))
    goto LABEL_20;
  if (v5 + 2 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * (v5 + 2)))
    goto LABEL_20;
  if (v5 + 3 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * (v5 + 3)))
    goto LABEL_20;
  if (v5 + 4 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * (v5 + 4)))
    goto LABEL_20;
  if (v5 + 5 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * (v5 + 5)))
    goto LABEL_20;
  if (v5 + 6 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * (v5 + 6)))
  {
LABEL_20:
    OUTLINED_FUNCTION_22_10();
    goto LABEL_21;
  }
  v9 = v5 + 7;
  while (v9 < v4)
  {
    if (*(_QWORD *)(v3 + 8 * v9++))
      goto LABEL_20;
  }
LABEL_24:
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_76_2();
  v13 = OUTLINED_FUNCTION_71_1();
  MEMORY[0x24BDAC7A8](v13);
  swift_getKeyPath();
  OUTLINED_FUNCTION_86_1();
  sub_22A9DBCA0(v0);
  OUTLINED_FUNCTION_21_10();
  OUTLINED_FUNCTION_13_4();
  if (v17)
  {
    v14 = 0;
    v15 = 0;
    while (1)
    {
      v16 = v18[v14];
      v12 = __OFADD__(v15, v16);
      v15 += v16;
      if (v12)
        goto LABEL_32;
      if (v17 == ++v14)
      {
        OUTLINED_FUNCTION_23();
        goto LABEL_30;
      }
    }
  }
  OUTLINED_FUNCTION_23();
LABEL_30:
  OUTLINED_FUNCTION_38();
}

_QWORD *sub_22A9DE358()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 40);
  v28 = v1;
  result = sub_22AA4F470(&v23);
  v3 = 0;
  v4 = v26;
  v5 = v27;
  v6 = (unint64_t)(v25 + 64) >> 6;
  while (v5)
  {
    v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v8 = v7 | (v4 << 6);
LABEL_22:
    v13 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v8);
    v14 = __OFADD__(v3, v13);
    v3 += v13;
    if (v14)
    {
      __break(1u);
      goto LABEL_25;
    }
  }
  v9 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v9 >= v6)
    goto LABEL_25;
  v10 = *(_QWORD *)(v24 + 8 * v9);
  v11 = v4 + 1;
  if (v10)
    goto LABEL_21;
  v11 = v4 + 2;
  if (v4 + 2 >= v6)
    goto LABEL_25;
  v10 = *(_QWORD *)(v24 + 8 * v11);
  if (v10)
    goto LABEL_21;
  v11 = v4 + 3;
  if (v4 + 3 >= v6)
    goto LABEL_25;
  v10 = *(_QWORD *)(v24 + 8 * v11);
  if (v10)
    goto LABEL_21;
  v11 = v4 + 4;
  if (v4 + 4 >= v6)
    goto LABEL_25;
  v10 = *(_QWORD *)(v24 + 8 * v11);
  if (v10)
    goto LABEL_21;
  v11 = v4 + 5;
  if (v4 + 5 >= v6)
    goto LABEL_25;
  v10 = *(_QWORD *)(v24 + 8 * v11);
  if (v10)
    goto LABEL_21;
  v11 = v4 + 6;
  if (v4 + 6 >= v6)
    goto LABEL_25;
  v10 = *(_QWORD *)(v24 + 8 * v11);
  if (v10)
  {
LABEL_21:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
    v4 = v11;
    goto LABEL_22;
  }
  v12 = v4 + 7;
  while (v12 < v6)
  {
    v10 = *(_QWORD *)(v24 + 8 * v12++);
    if (v10)
    {
      v11 = v12 - 1;
      goto LABEL_21;
    }
  }
LABEL_25:
  swift_bridgeObjectRetain_n();
  swift_release();
  v15 = sub_22A9DF8F8(v1);
  v16 = sub_22A9E07F0((uint64_t)&v28);
  MEMORY[0x24BDAC7A8](v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10120);
  sub_22A9E06CC();
  swift_getKeyPath();
  swift_retain();
  sub_22A9DBF7C(v15);
  v18 = v17;
  swift_release();
  result = (_QWORD *)swift_release();
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
    return (_QWORD *)swift_bridgeObjectRelease();
  v20 = 0;
  v21 = 0;
  while (1)
  {
    v22 = *(_QWORD *)(v18 + 8 * v20 + 32);
    v14 = __OFADD__(v21, v22);
    v21 += v22;
    if (v14)
      break;
    if (v19 == ++v20)
      return (_QWORD *)swift_bridgeObjectRelease();
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_22A9DE59C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];

  OUTLINED_FUNCTION_62_3();
  sub_22AA4F470(v2);
  OUTLINED_FUNCTION_26_6();
  while (v6)
  {
    OUTLINED_FUNCTION_35_3();
LABEL_21:
    v11 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v7);
    v12 = __OFADD__(v1, v11);
    v1 += v11;
    if (v12)
    {
      __break(1u);
      goto LABEL_24;
    }
  }
  v8 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
LABEL_32:
    __break(1u);
    return;
  }
  if (v8 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * v8))
    goto LABEL_20;
  if (v5 + 2 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * (v5 + 2)))
    goto LABEL_20;
  if (v5 + 3 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * (v5 + 3)))
    goto LABEL_20;
  if (v5 + 4 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * (v5 + 4)))
    goto LABEL_20;
  if (v5 + 5 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * (v5 + 5)))
    goto LABEL_20;
  if (v5 + 6 >= v4)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * (v5 + 6)))
  {
LABEL_20:
    OUTLINED_FUNCTION_22_10();
    goto LABEL_21;
  }
  v9 = v5 + 7;
  while (v9 < v4)
  {
    if (*(_QWORD *)(v3 + 8 * v9++))
      goto LABEL_20;
  }
LABEL_24:
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_76_2();
  v13 = OUTLINED_FUNCTION_71_1();
  MEMORY[0x24BDAC7A8](v13);
  swift_getKeyPath();
  OUTLINED_FUNCTION_86_1();
  sub_22A9DC188(v0);
  OUTLINED_FUNCTION_21_10();
  OUTLINED_FUNCTION_13_4();
  if (v17)
  {
    v14 = 0;
    v15 = 0;
    while (1)
    {
      v16 = v18[v14];
      v12 = __OFADD__(v15, v16);
      v15 += v16;
      if (v12)
        goto LABEL_32;
      if (v17 == ++v14)
      {
        OUTLINED_FUNCTION_23();
        goto LABEL_30;
      }
    }
  }
  OUTLINED_FUNCTION_23();
LABEL_30:
  OUTLINED_FUNCTION_38();
}

void sub_22A9DE750(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(unint64_t *__return_ptr, unint64_t *)@<X2>, _QWORD *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  void (*v12)(_QWORD *@<X8>);
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char v16;
  char v17;
  unint64_t v18;
  char v19;
  BOOL v20;
  unint64_t v21;
  char v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v48;
  uint64_t v49;
  void (*v50)(_QWORD *@<X8>);
  uint64_t v51;
  uint64_t v52;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v6 = a2;
  v8 = a5;
  v9 = MEMORY[0x24BEE4B00];
  if (!*(_QWORD *)(a1 + 16))
  {
    v51 = 0;
    v12 = 0;
    v10 = 0;
    v14 = (_QWORD *)MEMORY[0x24BEE4B00];
    v15 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_36:
    swift_release();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_27_11((uint64_t)v12);
    sub_22A9ADA48(v10);
    *(_QWORD *)v8 = v51;
    *(_QWORD *)(v8 + 8) = a4;
    *(_BYTE *)(v8 + 16) = 1;
    *(_QWORD *)(v8 + 24) = v14;
    *(_QWORD *)(v8 + 32) = v9;
    *(_QWORD *)(v8 + 40) = v15;
    OUTLINED_FUNCTION_6_20();
    return;
  }
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
  {
    v51 = 0;
    v12 = 0;
    v14 = (_QWORD *)MEMORY[0x24BEE4B00];
    v15 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_36;
  }
  v11 = *(_DWORD *)(a1 + 32);
  OUTLINED_FUNCTION_16_13();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_30_8();
  v50 = 0;
  v51 = 0;
  v12 = 0;
  v13 = 0;
  v14 = (_QWORD *)MEMORY[0x24BEE4B00];
  v15 = (_QWORD *)MEMORY[0x24BEE4B00];
  v48 = a4;
  v49 = v6;
  v52 = a1;
  while (v13 < v10)
  {
    v56 = __PAIR64__(*(_DWORD *)(v6 + 4 * v13 + 32), v11);
    a3(&v55, &v56);
    v56 = v55;
    sub_22A9E0648((unsigned int *)&v56, &v55);
    v54 = v55;
    sub_22AB444C4(v55, a4);
    if ((v16 & 1) == 0)
      goto LABEL_15;
    sub_22AB444C4(HIDWORD(v54), a4);
    if ((v17 & 1) == 0)
    {
      v6 = v49;
LABEL_15:
      v26 = v52;
      goto LABEL_30;
    }
    sub_22A9ADA48((uint64_t)v12);
    swift_isUniquelyReferenced_nonNull_native();
    v56 = (unint64_t)v14;
    OUTLINED_FUNCTION_64_2();
    OUTLINED_FUNCTION_63_3();
    if (v20)
      goto LABEL_39;
    v21 = v18;
    v22 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10148);
    v23 = OUTLINED_FUNCTION_61_3();
    v14 = (_QWORD *)v56;
    if ((v23 & 1) != 0)
    {
      OUTLINED_FUNCTION_64_2();
      OUTLINED_FUNCTION_20_6();
      if (!v25)
        goto LABEL_46;
      v21 = v24;
    }
    OUTLINED_FUNCTION_10_11();
    if ((v22 & 1) != 0)
    {
      sub_22ABDEAEC();
    }
    else
    {
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_87_1(&v56);
      OUTLINED_FUNCTION_33_7((uint64_t)&v14[v21 >> 6]);
      *(_DWORD *)(v14[6] + 4 * v21) = HIDWORD(v54);
      *(_QWORD *)(v14[7] + 8 * v21) = v56;
      v27 = v14[2];
      v20 = __OFADD__(v27, 1);
      v28 = v27 + 1;
      if (v20)
        goto LABEL_44;
      v14[2] = v28;
    }
    OUTLINED_FUNCTION_55_5();
    v29 = *(&v56 + v21);
    v20 = __OFADD__(v29, 1);
    v30 = v29 + 1;
    if (v20)
      goto LABEL_40;
    *(&v56 + v21) = v30;
    sub_22A9ADA48((uint64_t)v50);
    swift_isUniquelyReferenced_nonNull_native();
    v56 = (unint64_t)v15;
    OUTLINED_FUNCTION_58_3();
    OUTLINED_FUNCTION_53_4();
    if (v20)
      goto LABEL_41;
    v33 = v31;
    v34 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10150);
    v35 = OUTLINED_FUNCTION_60_4();
    v15 = (_QWORD *)v56;
    v26 = v52;
    if ((v35 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10158);
      v36 = OUTLINED_FUNCTION_58_3();
      if ((v34 & 1) != (v37 & 1))
        goto LABEL_46;
      v33 = v36;
    }
    OUTLINED_FUNCTION_10_11();
    if ((v34 & 1) != 0)
    {
      sub_22ABDEAEC();
      a4 = v48;
      v38 = v51;
    }
    else
    {
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_87_1(&v56);
      OUTLINED_FUNCTION_33_7((uint64_t)&v15[v33 >> 6]);
      *(_QWORD *)(v15[6] + 8 * v33) = v54;
      *(_QWORD *)(v15[7] + 8 * v33) = v56;
      v39 = v15[2];
      v20 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      a4 = v48;
      v38 = v51;
      if (v20)
        goto LABEL_45;
      v15[2] = v40;
    }
    v41 = v15[7];
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(v41 + 8 * v33);
    v20 = __OFADD__(v42, 1);
    v43 = v42 + 1;
    v6 = v49;
    if (v20)
      goto LABEL_42;
    *(_QWORD *)(v41 + 8 * v33) = v43;
    v20 = __OFADD__(v38, 1);
    v44 = v38 + 1;
    if (v20)
      goto LABEL_43;
    v12 = j__OUTLINED_FUNCTION_39_3;
    v50 = j__OUTLINED_FUNCTION_39_3;
    v51 = v44;
LABEL_30:
    v45 = v13 + 1;
    v46 = *(_QWORD *)(v26 + 16);
    if (v13 + 1 == v46)
      goto LABEL_33;
    if (v13 + 1 >= v46)
      goto LABEL_38;
    v11 = *(_DWORD *)(v26 + 4 * v13 + 36);
    v10 = *(_QWORD *)(v6 + 16);
    ++v13;
    if (v45 == v10)
    {
LABEL_33:
      swift_release();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2_1();
      v8 = a5;
      v9 = MEMORY[0x24BEE4B00];
      v10 = (unint64_t)v50;
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  sub_22ABE0190();
  __break(1u);
}

uint64_t sub_22A9DEB48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr, uint64_t *)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD *@<X8>);
  _QWORD *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v59;
  uint64_t result;
  uint64_t v62;
  unint64_t v63;
  void (*v64)(_QWORD *@<X8>);
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;

  v7 = a5;
  v8 = MEMORY[0x24BEE4B00];
  if (!*(_QWORD *)(a1 + 16))
  {
    v9 = 0;
    v70 = 0;
    v59 = 0;
    v15 = (_QWORD *)MEMORY[0x24BEE4B00];
    v17 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_35:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22A9ADA48(v70);
    result = sub_22A9ADA48(v59);
    *(_QWORD *)v7 = v9;
    *(_QWORD *)(v7 + 8) = a4;
    *(_BYTE *)(v7 + 16) = 1;
    *(_QWORD *)(v7 + 24) = v15;
    *(_QWORD *)(v7 + 32) = v8;
    *(_QWORD *)(v7 + 40) = v17;
    return result;
  }
  v9 = *(_QWORD *)(a2 + 16);
  v10 = a2;
  if (!v9)
  {
    v70 = 0;
    v59 = 0;
    v15 = (_QWORD *)MEMORY[0x24BEE4B00];
    v17 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_35;
  }
  v11 = *(_BYTE *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 32);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  swift_retain();
  v13 = 0;
  v63 = 0;
  v64 = 0;
  v14 = 0;
  v15 = (_QWORD *)MEMORY[0x24BEE4B00];
  v16 = 1;
  v17 = (_QWORD *)MEMORY[0x24BEE4B00];
  v62 = a4;
  v67 = v10;
  v68 = a1;
  while (v16 - 1 < v9)
  {
    v18 = (uint64_t)v14;
    v19 = *(_BYTE *)(v10 + v13 + 40);
    v20 = *(_QWORD *)(v10 + v13 + 32);
    v75 = v12;
    v76 = v11 & 1;
    v77 = v20;
    v78 = v19;
    a3(&v71, &v75);
    v75 = v71;
    v76 = v72;
    v77 = v73;
    v78 = v74;
    sub_22A9E0818((uint64_t)&v71);
    v21 = v71;
    v22 = v72;
    v23 = v73;
    v24 = v74;
    sub_22AB44548(v71, v72, a4);
    if ((v25 & 1) != 0 && (sub_22AB44548(v23, v24, a4), (v26 & 1) != 0))
    {
      sub_22A9ADA48(v18);
      swift_isUniquelyReferenced_nonNull_native();
      v75 = (uint64_t)v15;
      v66 = v23;
      v65 = v24;
      v27 = sub_22AA03864(v23, v24);
      if (__OFADD__(v15[2], (v28 & 1) == 0))
        goto LABEL_38;
      v29 = v27;
      v30 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10180);
      v31 = sub_22ABDFA64();
      v15 = (_QWORD *)v75;
      if ((v31 & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B10120);
        v32 = sub_22AA03864(v23, v65);
        if ((v30 & 1) != (v33 & 1))
          goto LABEL_45;
        v29 = v32;
      }
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
        sub_22ABDEAEC();
      }
      else
      {
        sub_22ABDEAEC();
        j__OUTLINED_FUNCTION_39_3(&v75);
        v35 = v75;
        v15[(v29 >> 6) + 8] |= 1 << v29;
        v36 = v15[6] + 16 * v29;
        *(_QWORD *)v36 = v23;
        *(_BYTE *)(v36 + 8) = v65;
        *(_QWORD *)(v15[7] + 8 * v29) = v35;
        v37 = v15[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_43;
        v15[2] = v39;
      }
      v40 = v15[7];
      swift_bridgeObjectRelease();
      v41 = *(_QWORD *)(v40 + 8 * v29);
      v38 = __OFADD__(v41, 1);
      v42 = v41 + 1;
      if (v38)
        goto LABEL_39;
      *(_QWORD *)(v40 + 8 * v29) = v42;
      sub_22A9ADA48((uint64_t)v64);
      swift_isUniquelyReferenced_nonNull_native();
      v75 = (uint64_t)v17;
      LOBYTE(v71) = v22;
      v43 = sub_22AA038DC(v21, v22, v66, v65);
      if (__OFADD__(v17[2], (v44 & 1) == 0))
        goto LABEL_40;
      v45 = v43;
      v46 = v44;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10188);
      v47 = sub_22ABDFA64();
      v17 = (_QWORD *)v75;
      if ((v47 & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B10190);
        LOBYTE(v71) = v22;
        v48 = sub_22AA038DC(v21, v22, v66, v65);
        if ((v46 & 1) != (v49 & 1))
          goto LABEL_45;
        v45 = v48;
      }
      swift_bridgeObjectRelease();
      if ((v46 & 1) != 0)
      {
        sub_22ABDEAEC();
      }
      else
      {
        sub_22ABDEAEC();
        j__OUTLINED_FUNCTION_39_3(&v75);
        v50 = v75;
        v17[(v45 >> 6) + 8] |= 1 << v45;
        v51 = v17[6] + 32 * v45;
        *(_QWORD *)v51 = v21;
        *(_BYTE *)(v51 + 8) = v22;
        *(_QWORD *)(v51 + 16) = v66;
        *(_BYTE *)(v51 + 24) = v65;
        *(_QWORD *)(v17[7] + 8 * v45) = v50;
        v52 = v17[2];
        v38 = __OFADD__(v52, 1);
        v53 = v52 + 1;
        if (v38)
          goto LABEL_44;
        v17[2] = v53;
      }
      v54 = v17[7];
      swift_bridgeObjectRelease();
      v55 = *(_QWORD *)(v54 + 8 * v45);
      v38 = __OFADD__(v55, 1);
      v56 = v55 + 1;
      a4 = v62;
      v34 = v68;
      if (v38)
        goto LABEL_41;
      *(_QWORD *)(v54 + 8 * v45) = v56;
      v38 = __OFADD__(v63++, 1);
      if (v38)
        goto LABEL_42;
      v14 = j__OUTLINED_FUNCTION_39_3;
      v64 = j__OUTLINED_FUNCTION_39_3;
    }
    else
    {
      v34 = v68;
      v14 = (void (*)(_QWORD *@<X8>))v18;
    }
    v57 = *(_QWORD *)(v34 + 16);
    v10 = v67;
    if (v16 == v57)
      goto LABEL_32;
    if (v16 >= v57)
      goto LABEL_37;
    v11 = *(_BYTE *)(v34 + v13 + 56);
    v12 = *(_QWORD *)(v34 + v13 + 48);
    v9 = *(_QWORD *)(v67 + 16);
    v13 += 16;
    if (v16++ == v9)
    {
LABEL_32:
      v70 = (uint64_t)v14;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = a5;
      v8 = MEMORY[0x24BEE4B00];
      v9 = v63;
      v59 = (uint64_t)v64;
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_22ABE0190();
  __break(1u);
  return result;
}

void sub_22A9DF098(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD *__return_ptr, _QWORD *)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *@<X8>);
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  unint64_t v25;
  char v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_QWORD *@<X8>);
  uint64_t v54;
  uint64_t v55;
  _QWORD v57[2];
  _QWORD v58[2];

  v6 = a2;
  v8 = a5;
  v9 = MEMORY[0x24BEE4B00];
  if (!*(_QWORD *)(a1 + 16))
  {
    v54 = 0;
    v12 = 0;
    v10 = 0;
    v14 = (_QWORD *)MEMORY[0x24BEE4B00];
    v15 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_36:
    OUTLINED_FUNCTION_13_4();
    OUTLINED_FUNCTION_54();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_27_11((uint64_t)v12);
    sub_22A9ADA48(v10);
    *(_QWORD *)v8 = v54;
    *(_QWORD *)(v8 + 8) = a4;
    *(_BYTE *)(v8 + 16) = 1;
    *(_QWORD *)(v8 + 24) = v14;
    *(_QWORD *)(v8 + 32) = v9;
    *(_QWORD *)(v8 + 40) = v15;
    OUTLINED_FUNCTION_6_20();
    return;
  }
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
  {
    v54 = 0;
    v12 = 0;
    v14 = (_QWORD *)MEMORY[0x24BEE4B00];
    v15 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_36;
  }
  v11 = *(_QWORD *)(a1 + 32);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  swift_retain();
  v53 = 0;
  v54 = 0;
  v12 = 0;
  v13 = 0;
  v14 = (_QWORD *)MEMORY[0x24BEE4B00];
  v15 = (_QWORD *)MEMORY[0x24BEE4B00];
  v51 = v6;
  v52 = a4;
  v55 = a1;
  while (v13 < v10)
  {
    v16 = *(_QWORD *)(v6 + 8 * v13 + 32);
    v58[0] = v11;
    v58[1] = v16;
    a3(v57, v58);
    v17 = nullsub_1(v57[0], v57[1]);
    v19 = v18;
    sub_22AB44618(v17, a4);
    if ((v20 & 1) != 0 && (sub_22AB44618(v19, a4), (v21 & 1) != 0))
    {
      sub_22A9ADA48((uint64_t)v12);
      swift_isUniquelyReferenced_nonNull_native();
      v58[0] = v14;
      OUTLINED_FUNCTION_77_1();
      OUTLINED_FUNCTION_63_3();
      if (v24)
        goto LABEL_39;
      v25 = v22;
      v26 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8680);
      v27 = OUTLINED_FUNCTION_61_3();
      v14 = (_QWORD *)v58[0];
      if ((v27 & 1) != 0)
      {
        OUTLINED_FUNCTION_77_1();
        OUTLINED_FUNCTION_20_6();
        if (!v29)
          goto LABEL_46;
        v25 = v28;
      }
      OUTLINED_FUNCTION_10_11();
      if ((v26 & 1) != 0)
      {
        sub_22ABDEAEC();
      }
      else
      {
        sub_22ABDEAEC();
        OUTLINED_FUNCTION_87_1(v58);
        OUTLINED_FUNCTION_34_7((uint64_t)&v14[v25 >> 6]);
        *(_QWORD *)(v14[6] + 8 * v25) = v19;
        *(_QWORD *)(v14[7] + 8 * v25) = v58[0];
        v31 = v14[2];
        v24 = __OFADD__(v31, 1);
        v32 = v31 + 1;
        if (v24)
          goto LABEL_44;
        v14[2] = v32;
      }
      OUTLINED_FUNCTION_55_5();
      v33 = v58[v25];
      v24 = __OFADD__(v33, 1);
      v34 = v33 + 1;
      if (v24)
        goto LABEL_40;
      v58[v25] = v34;
      sub_22A9ADA48((uint64_t)v53);
      swift_isUniquelyReferenced_nonNull_native();
      v58[0] = v15;
      OUTLINED_FUNCTION_45_5();
      OUTLINED_FUNCTION_53_4();
      if (v24)
        goto LABEL_41;
      v37 = v35;
      v38 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8678);
      v39 = OUTLINED_FUNCTION_60_4();
      v15 = (_QWORD *)v58[0];
      if ((v39 & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8528);
        OUTLINED_FUNCTION_45_5();
        OUTLINED_FUNCTION_20_6();
        if (!v29)
          goto LABEL_46;
        v37 = v40;
      }
      OUTLINED_FUNCTION_10_11();
      if ((v38 & 1) != 0)
      {
        sub_22ABDEAEC();
      }
      else
      {
        sub_22ABDEAEC();
        OUTLINED_FUNCTION_87_1(v58);
        OUTLINED_FUNCTION_39_6();
        v41 = (uint64_t *)(v15[6] + 16 * v37);
        *v41 = v17;
        v41[1] = v19;
        *(_QWORD *)(v15[7] + 8 * v37) = v42;
        v43 = v15[2];
        v24 = __OFADD__(v43, 1);
        v44 = v43 + 1;
        if (v24)
          goto LABEL_45;
        v15[2] = v44;
      }
      v45 = v15[7];
      swift_bridgeObjectRelease();
      v46 = *(_QWORD *)(v45 + 8 * v37);
      v24 = __OFADD__(v46, 1);
      v47 = v46 + 1;
      v6 = v51;
      a4 = v52;
      v30 = v55;
      if (v24)
        goto LABEL_42;
      *(_QWORD *)(v45 + 8 * v37) = v47;
      if (__OFADD__(v54, 1))
        goto LABEL_43;
      ++v54;
      v12 = j__OUTLINED_FUNCTION_39_3;
      v53 = j__OUTLINED_FUNCTION_39_3;
    }
    else
    {
      v30 = v55;
    }
    v48 = v13 + 1;
    v49 = *(_QWORD *)(v30 + 16);
    if (v13 + 1 == v49)
      goto LABEL_33;
    if (v13 + 1 >= v49)
      goto LABEL_38;
    v11 = *(_QWORD *)(v30 + 8 * v13 + 40);
    v10 = *(_QWORD *)(v6 + 16);
    ++v13;
    if (v48 == v10)
    {
LABEL_33:
      OUTLINED_FUNCTION_13_4();
      OUTLINED_FUNCTION_54();
      swift_bridgeObjectRelease();
      v8 = a5;
      v9 = MEMORY[0x24BEE4B00];
      v10 = (unint64_t)v53;
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  sub_22ABE0190();
  __break(1u);
}

uint64_t sub_22A9DF458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unsigned __int8 *v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  char v26;
  _QWORD *v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  char v40;
  unint64_t v41;
  char v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD *@<X8>);
  void (*v60)(_QWORD *@<X8>);
  _QWORD *v61;
  int v62;
  _QWORD v63[9];

  v4 = a3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v7 = 0;
    v50 = 0;
    v52 = 0;
    v51 = (_QWORD *)MEMORY[0x24BEE4B00];
    v9 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_36:
    v53 = MEMORY[0x24BEE4B00];
    sub_22A9ADA48(v50);
    result = OUTLINED_FUNCTION_27_11(v52);
    *(_QWORD *)v4 = v7;
    *(_QWORD *)(v4 + 8) = a2;
    *(_BYTE *)(v4 + 16) = 1;
    *(_QWORD *)(v4 + 24) = v51;
    *(_QWORD *)(v4 + 32) = v53;
    *(_QWORD *)(v4 + 40) = v9;
    return result;
  }
  v6 = a1 + 32;
  sub_22ABDEAEC();
  v7 = 0;
  v59 = 0;
  v60 = 0;
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x24BEE4B00];
  v61 = (_QWORD *)MEMORY[0x24BEE4B00];
  v56 = v5;
  v57 = v6;
  while (1)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v10 = (unsigned __int8 *)(v6 + 2 * v8);
      v11 = *v10;
      v62 = v10[1];
      OUTLINED_FUNCTION_52_5();
      sub_22ABE025C();
      sub_22ABE0280();
      OUTLINED_FUNCTION_7_19();
      if ((v13 & 1) != 0)
      {
        if (v11 != *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v12))
        {
          do
          {
            OUTLINED_FUNCTION_23_11();
            if ((v16 & 1) == 0)
              goto LABEL_33;
          }
          while (v11 != *(unsigned __int8 *)(v14 + v15));
        }
        if (*(_QWORD *)(a2 + 16))
        {
          OUTLINED_FUNCTION_52_5();
          sub_22ABE025C();
          sub_22ABE0280();
          OUTLINED_FUNCTION_7_19();
          if ((v18 & 1) != 0)
            break;
        }
      }
    }
LABEL_33:
    if (++v8 == v5)
    {
      swift_bridgeObjectRelease_n();
      v4 = a3;
      v50 = (uint64_t)v60;
      v51 = v61;
      v52 = (uint64_t)v59;
      goto LABEL_36;
    }
  }
  if (v62 != *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v17))
  {
    do
    {
      OUTLINED_FUNCTION_23_11();
      if ((v21 & 1) == 0)
        goto LABEL_33;
    }
    while (v62 != *(unsigned __int8 *)(v19 + v20));
  }
  v58 = v7;
  OUTLINED_FUNCTION_27_11((uint64_t)v60);
  swift_isUniquelyReferenced_nonNull_native();
  v63[0] = v61;
  v22 = sub_22AA03A10(v62);
  if (!__OFADD__(v61[2], (v23 & 1) == 0))
  {
    v24 = v22;
    v25 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10160);
    v26 = sub_22ABDFA64();
    v27 = (_QWORD *)v63[0];
    if ((v26 & 1) != 0)
    {
      v28 = sub_22AA03A10(v62);
      if ((v25 & 1) != (v29 & 1))
        goto LABEL_44;
      v24 = v28;
    }
    OUTLINED_FUNCTION_10_11();
    if ((v25 & 1) != 0)
    {
      sub_22ABDEAEC();
    }
    else
    {
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_87_1(v63);
      OUTLINED_FUNCTION_34_7((uint64_t)&v27[v24 >> 6]);
      *(_BYTE *)(v27[6] + v24) = v62;
      *(_QWORD *)(v27[7] + 8 * v24) = v63[0];
      v30 = v27[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_42;
      v27[2] = v32;
    }
    v33 = v27[7];
    OUTLINED_FUNCTION_2_1();
    v34 = *(_QWORD *)(v33 + 8 * v24);
    v31 = __OFADD__(v34, 1);
    v35 = v34 + 1;
    if (v31)
      goto LABEL_38;
    v61 = v27;
    *(_QWORD *)(v33 + 8 * v24) = v35;
    OUTLINED_FUNCTION_27_11((uint64_t)v59);
    swift_isUniquelyReferenced_nonNull_native();
    v63[0] = v9;
    v36 = OUTLINED_FUNCTION_66_4();
    if (__OFADD__(v9[2], (v37 & 1) == 0))
      goto LABEL_39;
    v38 = v36;
    v39 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10168);
    v40 = sub_22ABDFA64();
    v9 = (_QWORD *)v63[0];
    if ((v40 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10170);
      v41 = OUTLINED_FUNCTION_66_4();
      if ((v39 & 1) != (v42 & 1))
        goto LABEL_44;
      v38 = v41;
    }
    OUTLINED_FUNCTION_10_11();
    if ((v39 & 1) != 0)
    {
      sub_22ABDEAEC();
      v6 = v57;
    }
    else
    {
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_87_1(v63);
      OUTLINED_FUNCTION_39_6();
      v43 = (_BYTE *)(v9[6] + 2 * v38);
      *v43 = v11;
      v43[1] = v62;
      *(_QWORD *)(v9[7] + 8 * v38) = v44;
      v45 = v9[2];
      v31 = __OFADD__(v45, 1);
      v46 = v45 + 1;
      v6 = v57;
      if (v31)
        goto LABEL_43;
      v9[2] = v46;
    }
    v47 = v9[7];
    OUTLINED_FUNCTION_54();
    v48 = *(_QWORD *)(v47 + 8 * v38);
    v31 = __OFADD__(v48, 1);
    v49 = v48 + 1;
    if (v31)
      goto LABEL_40;
    *(_QWORD *)(v47 + 8 * v38) = v49;
    v7 = v58 + 1;
    if (__OFADD__(v58, 1))
      goto LABEL_41;
    v59 = j__OUTLINED_FUNCTION_39_3;
    v60 = j__OUTLINED_FUNCTION_39_3;
    v5 = v56;
    goto LABEL_33;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_22ABE0190();
  __break(1u);
  return result;
}

unint64_t sub_22A9DF864(unsigned int a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

uint64_t sub_22A9DF888(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if ((a3 & 1) != 0)
  {
    sub_22ABE025C();
    if ((a5 & 1) != 0)
      return sub_22ABE025C();
  }
  else
  {
    sub_22ABE025C();
    sub_22ABE0250();
    if ((a5 & 1) != 0)
      return sub_22ABE025C();
  }
  sub_22ABE025C();
  return sub_22ABE0250();
}

uint64_t sub_22A9DF8F8(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1;
  if ((*(_BYTE *)(isStackAllocationSafe + 32) & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    OUTLINED_FUNCTION_48_5();
    v3 = OUTLINED_FUNCTION_25_6();
    if (v1)
      swift_willThrow(v3);
    else
      return v3;
  }
  else
  {
    v4 = swift_slowAlloc();
    OUTLINED_FUNCTION_48_5();
    v2 = OUTLINED_FUNCTION_25_6();
    MEMORY[0x22E2E4E64](v4, -1, -1);
  }
  return v2;
}

unint64_t *sub_22A9DFA20(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_20;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return (unint64_t *)sub_22A9DFE20(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return (unint64_t *)sub_22A9DFE20(result, a2, v4, a3);
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          return (unint64_t *)sub_22A9DFE20(result, a2, v4, a3);
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_20:
    if (*(_DWORD *)(*(_QWORD *)(a3 + 48) + 8 * v12 + 4) == *(_DWORD *)(*(_QWORD *)(a3 + 48) + 8 * v12))
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_22A9DFE20(result, a2, v4, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_22A9DFE20(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_22A9DFE20(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_22A9DFB6C(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  char v17;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v12 = v11 | (v5 << 6);
LABEL_20:
    v16 = *(_QWORD *)(a3 + 48) + 32 * v12;
    v17 = *(_BYTE *)(v16 + 8);
    if ((*(_BYTE *)(v16 + 24) & 1) != 0)
    {
      if (*(_BYTE *)(v16 + 8))
      {
LABEL_26:
        *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        if (__OFADD__(v4++, 1))
        {
          __break(1u);
          return (unint64_t *)sub_22A9E00AC(result, a2, v4, a3);
        }
      }
    }
    else
    {
      if (*(_QWORD *)(v16 + 16) != *(_QWORD *)v16)
        v17 = 1;
      if ((v17 & 1) == 0)
        goto LABEL_26;
    }
  }
  v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v13 >= v10)
    return (unint64_t *)sub_22A9E00AC(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v13);
  ++v5;
  if (v14)
    goto LABEL_19;
  v5 = v13 + 1;
  if (v13 + 1 >= v10)
    return (unint64_t *)sub_22A9E00AC(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v5);
  if (v14)
    goto LABEL_19;
  v5 = v13 + 2;
  if (v13 + 2 >= v10)
    return (unint64_t *)sub_22A9E00AC(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v5);
  if (v14)
  {
LABEL_19:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
    goto LABEL_20;
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_22A9E00AC(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_22A9E00AC(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t *sub_22A9DFCD4(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_20;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return (unint64_t *)sub_22A9E03AC(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return (unint64_t *)sub_22A9E03AC(result, a2, v4, a3);
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          return (unint64_t *)sub_22A9E03AC(result, a2, v4, a3);
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_20:
    if (*(_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v12 + 8) == *(_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v12))
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_22A9E03AC(result, a2, v4, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_22A9E03AC(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_22A9E03AC(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_22A9DFE20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;
  __int128 v30;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10140);
  result = sub_22ABDFB90();
  v10 = result;
  v29 = a1;
  if (a2 < 1)
    v11 = 0;
  else
    v11 = *a1;
  v12 = 0;
  v13 = result + 64;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v12 << 6);
    }
    else
    {
      v16 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_40;
      if (v16 >= a2)
        return v10;
      v17 = v29[v16];
      ++v12;
      if (!v17)
      {
        v12 = v16 + 1;
        if (v16 + 1 >= a2)
          return v10;
        v17 = v29[v12];
        if (!v17)
        {
          v12 = v16 + 2;
          if (v16 + 2 >= a2)
            return v10;
          v17 = v29[v12];
          if (!v17)
          {
            v18 = v16 + 3;
            if (v18 >= a2)
              return v10;
            v17 = v29[v18];
            if (!v17)
            {
              while (1)
              {
                v12 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_41;
                if (v12 >= a2)
                  return v10;
                v17 = v29[v12];
                ++v18;
                if (v17)
                  goto LABEL_24;
              }
            }
            v12 = v18;
          }
        }
      }
LABEL_24:
      v11 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (v12 << 6);
    }
    *(_QWORD *)&v9 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15);
    v30 = v9;
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15);
    sub_22ABE0244();
    sub_22ABE0268();
    sub_22ABE0268();
    result = sub_22ABE0280();
    v20 = -1 << *(_BYTE *)(v10 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6))) == 0)
      break;
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v13 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *((_QWORD *)&v9 + 1) = *((_QWORD *)&v30 + 1);
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v23) = v30;
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v23) = v19;
    ++*(_QWORD *)(v10 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_39;
    if (!v5)
      return v10;
  }
  v24 = 0;
  v25 = (unint64_t)(63 - v20) >> 6;
  while (++v22 != v25 || (v24 & 1) == 0)
  {
    v26 = v22 == v25;
    if (v22 == v25)
      v22 = 0;
    v24 |= v26;
    v27 = *(_QWORD *)(v13 + 8 * v22);
    if (v27 != -1)
    {
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_22A9E00AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10178);
  result = sub_22ABDFB90();
  v8 = result;
  v35 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  v37 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v38 = v10;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_44;
      if (v14 >= v35)
        return v8;
      v15 = a1[v14];
      v16 = v10 + 1;
      if (!v15)
      {
        v16 = v10 + 2;
        if (v10 + 2 >= v35)
          return v8;
        v15 = a1[v16];
        if (!v15)
        {
          v16 = v10 + 3;
          if (v10 + 3 >= v35)
            return v8;
          v15 = a1[v16];
          if (!v15)
          {
            v17 = v10 + 4;
            if (v10 + 4 >= v35)
              return v8;
            v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_45;
                if (v16 >= v35)
                  return v8;
                v15 = a1[v16];
                ++v17;
                if (v15)
                  goto LABEL_24;
              }
            }
            v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v38 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = *(_QWORD *)(v4 + 56);
    v19 = *(_QWORD *)(v4 + 48) + 32 * v13;
    v20 = *(_QWORD *)v19;
    v21 = *(unsigned __int8 *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(unsigned __int8 *)(v19 + 24);
    v24 = *(_QWORD *)(v18 + 8 * v13);
    sub_22ABE0244();
    sub_22ABE025C();
    if (v21 != 1)
      sub_22ABE0250();
    sub_22ABE025C();
    if (!v23)
      sub_22ABE0250();
    result = sub_22ABE0280();
    v25 = -1 << *(_BYTE *)(v8 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) == 0)
      break;
    v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_38:
    *(_QWORD *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = *(_QWORD *)(v8 + 48) + 32 * v28;
    *(_QWORD *)v33 = v20;
    *(_BYTE *)(v33 + 8) = v21;
    *(_QWORD *)(v33 + 16) = v22;
    *(_BYTE *)(v33 + 24) = v23;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v28) = v24;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_43;
    v4 = v37;
    v10 = v38;
    if (!v5)
      return v8;
  }
  v29 = 0;
  v30 = (unint64_t)(63 - v25) >> 6;
  while (++v27 != v30 || (v29 & 1) == 0)
  {
    v31 = v27 == v30;
    if (v27 == v30)
      v27 = 0;
    v29 |= v31;
    v32 = *(_QWORD *)(v11 + 8 * v27);
    if (v32 != -1)
    {
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_22A9E03AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8688);
  result = sub_22ABDFB90();
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    sub_22ABE0244();
    sub_22ABE0250();
    sub_22ABE0250();
    result = sub_22ABE0280();
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) == 0)
      break;
    v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v24);
    *v29 = v19;
    v29[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v24) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_39;
    if (!v5)
      return v8;
  }
  v25 = 0;
  v26 = (unint64_t)(63 - v21) >> 6;
  while (++v23 != v26 || (v25 & 1) == 0)
  {
    v27 = v23 == v26;
    if (v23 == v26)
      v23 = 0;
    v25 |= v27;
    v28 = *(_QWORD *)(v11 + 8 * v23);
    if (v28 != -1)
    {
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_22A9E0648@<X0>(unsigned int *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result;

  result = sub_22A9DF864(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_22A9E0674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;

  result = sub_22A9C6ACC((uint64_t)&v7, *(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = v7;
  v5 = v8;
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v6 & 1;
  *(_QWORD *)(a2 + 16) = v4;
  *(_BYTE *)(a2 + 24) = v5;
  return result;
}

unint64_t sub_22A9E06CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255B10130;
  if (!qword_255B10130)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B10120);
    v2 = MEMORY[0x24BEE1778];
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255B10130);
  }
  return result;
}

uint64_t sub_22A9E0728(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t getEnumTagSinglePayload for BoostedTreeConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 88))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BoostedTreeConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 88) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BaseTreeClassifier()
{
  return &type metadata for BaseTreeClassifier;
}

uint64_t sub_22A9E07F0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_22A9E0818(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  sub_22A9DF870();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5 & 1;
}

uint64_t OUTLINED_FUNCTION_3_19()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_8_15()
{
  return 0x746165665F6D756ELL;
}

uint64_t OUTLINED_FUNCTION_9_19()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_11_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
  uint64_t v12;
  uint64_t v13;

  sub_22AB477E8(&a12, *(_BYTE *)(v12 + v13 + 32));
}

void OUTLINED_FUNCTION_12_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t v10;
  uint64_t v11;

  sub_22AB47618(&a10, *(unsigned int *)(v10 + 4 * v11 + 32));
}

_QWORD *OUTLINED_FUNCTION_13_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *(*a9)(uint64_t *__return_ptr, char *), uint64_t a10, ...)
{
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  return a9((uint64_t *)va, va1);
}

void OUTLINED_FUNCTION_14_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  sub_22AB47210(&a9, *(_QWORD *)(v9 + 8 * v10 + 32));
}

uint64_t OUTLINED_FUNCTION_15_10()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_16_13()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_20_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_12()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_27_11(uint64_t result)
{
  return sub_22A9ADA48(result);
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_30_8()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_33_7(uint64_t a1@<X8>)
{
  char v1;

  *(_QWORD *)(a1 + 64) |= 1 << v1;
}

void OUTLINED_FUNCTION_34_7(uint64_t a1@<X8>)
{
  char v1;

  *(_QWORD *)(a1 + 64) |= 1 << v1;
}

void OUTLINED_FUNCTION_36_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22A9F4E2C(a1, a2, a3, 0xD00000000000001CLL, a5);
}

uint64_t OUTLINED_FUNCTION_38_6()
{
  return sub_22ABDFD7C();
}

void OUTLINED_FUNCTION_39_6()
{
  uint64_t v0;
  char v1;

  *(_QWORD *)(v0 + 64) |= 1 << v1;
}

void OUTLINED_FUNCTION_42_4()
{
  sub_22AA6101C();
}

_QWORD *OUTLINED_FUNCTION_43_3(uint64_t *a1)
{
  return sub_22AA61110(a1);
}

void OUTLINED_FUNCTION_44_5(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5)
{
  sub_22A9F4D90(a1, a2, 0xD00000000000001CLL, a5, a3);
}

unint64_t OUTLINED_FUNCTION_45_5()
{
  return sub_22AA039CC();
}

uint64_t OUTLINED_FUNCTION_47_3()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_48_5()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_22AAD8D68(0, v0, v1);
}

uint64_t OUTLINED_FUNCTION_49_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_51_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_52_5()
{
  return sub_22ABE0244();
}

uint64_t OUTLINED_FUNCTION_54_3(uint64_t result)
{
  return sub_22A9ADA48(result);
}

uint64_t OUTLINED_FUNCTION_55_5()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_56_4(__n128 *a1@<X8>, __n128 a2@<Q0>)
{
  unint64_t v2;

  a1[4] = a2;
  a1[5].n128_u64[0] = v2;
}

unint64_t OUTLINED_FUNCTION_58_3()
{
  uint64_t v0;

  return sub_22AA03808(v0);
}

void OUTLINED_FUNCTION_59_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22A9DCF48(a1, a2, a3, 0);
}

uint64_t OUTLINED_FUNCTION_60_4()
{
  return sub_22ABDFA64();
}

uint64_t OUTLINED_FUNCTION_61_3()
{
  return sub_22ABDFA64();
}

uint64_t OUTLINED_FUNCTION_62_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 - 56) = v2;
  return v2;
}

unint64_t OUTLINED_FUNCTION_64_2()
{
  unsigned int v0;

  return sub_22AA037D4(v0);
}

uint64_t OUTLINED_FUNCTION_65_3@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  *(_BYTE *)(a2 + 32) = a3;
  return swift_willThrow(a1);
}

unint64_t OUTLINED_FUNCTION_66_4()
{
  __int16 v0;

  return sub_22AA03978(v0);
}

uint64_t OUTLINED_FUNCTION_67_3()
{
  return swift_release();
}

id OUTLINED_FUNCTION_69_2(uint64_t a1)
{
  return sub_22AB7BADC(a1);
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  return sub_22ABDF1DC();
}

uint64_t OUTLINED_FUNCTION_71_1()
{
  uint64_t v0;

  return sub_22A9E07F0(v0 - 56);
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  return type metadata accessor for XGBooster();
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  return type metadata accessor for XGBoostMatrix();
}

uint64_t OUTLINED_FUNCTION_75_2()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_76_2()
{
  uint64_t v0;

  return sub_22A9DF8F8(v0);
}

unint64_t OUTLINED_FUNCTION_77_1()
{
  return sub_22AA036F0();
}

uint64_t OUTLINED_FUNCTION_78_1()
{
  uint64_t v0;

  return sub_22A9ADA48(v0);
}

char *OUTLINED_FUNCTION_80_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t OUTLINED_FUNCTION_81_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_84_1(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_87_1(_QWORD *a1@<X8>)
{
  j__OUTLINED_FUNCTION_39_3(a1);
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  return sub_22AB7BA4C();
}

uint64_t sub_22A9E0CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  sub_22ABDCEE4();
  sub_22A9E117C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85B8);
  sub_22A9E11BC();
  sub_22ABDF704();
  v2 = OBJC_IVAR____TtC18CreateMLComponents15BlobJSONEncoder_userInfo;
  sub_22ABDFA4C();
  *(_QWORD *)(v1 + v2) = sub_22ABDEAC8();
  return v1;
}

uint64_t sub_22A9E0DA8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE __dst[88];
  char *v26;

  memcpy(__dst, a2, sizeof(__dst));
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC18CreateMLComponents15BlobJSONEncoder_userInfo);
  _s19IntermediateEncoderCMa();
  swift_allocObject();
  sub_22AA78914(__dst, v9, MEMORY[0x24BEE4AF8]);
  v11 = v10;
  v23 = a3;
  v24 = a4;
  v12 = __swift_allocate_boxed_opaque_existential_1(&v21);
  OUTLINED_FUNCTION_3_20((uint64_t)v12);
  sub_22A9E1144((uint64_t)__dst);
  sub_22ABDEAEC();
  sub_22AA77F30(&v21);
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  }
  else
  {
    v14 = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
    if (v14)
    {
      OUTLINED_FUNCTION_1_19();
      OUTLINED_FUNCTION_0_15(*(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 96));
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_2_19();
      swift_release();
      swift_bridgeObjectRelease();
      return v14;
    }
    v16 = sub_22ABDF848();
    swift_allocError();
    v18 = v17;
    v26 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10198) + 48);
    v18[3] = a3;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
    OUTLINED_FUNCTION_3_20((uint64_t)boxed_opaque_existential_1);
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v21 = 0x6576656C2D706F54;
    v22 = 0xEA0000000000206CLL;
    sub_22ABE0304();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDF824();
    v20 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE2728], v16);
    swift_willThrow(v20);
  }
  OUTLINED_FUNCTION_1_19();
  v14 = a2[10];
  OUTLINED_FUNCTION_0_15(*(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 96));
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_2_19();
  swift_release();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_22A9E101C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC18CreateMLComponents15BlobJSONEncoder_outputFormatting;
  v2 = sub_22ABDCEE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_22A9E107C()
{
  return type metadata accessor for BlobJSONEncoder();
}

uint64_t type metadata accessor for BlobJSONEncoder()
{
  uint64_t result;

  result = qword_2540E8088;
  if (!qword_2540E8088)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22A9E10BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDCEE4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BlobJSONEncoder._Options()
{
  return &type metadata for BlobJSONEncoder._Options;
}

uint64_t sub_22A9E1144(uint64_t a1)
{
  sub_22A9D14F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_22ABDEAEC();
  return a1;
}

unint64_t sub_22A9E117C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540E7750;
  if (!qword_2540E7750)
  {
    v1 = sub_22ABDCEE4();
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BDCB2C8], v1);
    atomic_store(result, (unint64_t *)&qword_2540E7750);
  }
  return result;
}

unint64_t sub_22A9E11BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540E85C0;
  if (!qword_2540E85C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E85B8);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2540E85C0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_15@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v6 = *(_QWORD *)(v3 + 40);
  v7 = *(_OWORD *)(v3 + 48);
  v8 = *(_OWORD *)(v3 + 64);
  v9 = *(_OWORD *)(v3 + 80);
  *(_QWORD *)v4 = a1;
  *(_QWORD *)(v4 + 8) = a2;
  *(_QWORD *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 24) = v7;
  *(_OWORD *)(v4 + 40) = v8;
  *(_OWORD *)(v4 + 56) = v9;
  *(_QWORD *)(v4 + 72) = a3;
  *(_QWORD *)(v4 + 80) = v5;
  return sub_22A9D14F0(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_19()
{
  uint64_t v0;
  unint64_t v1;

  return sub_22A9D1570(v0, v1);
}

uint64_t OUTLINED_FUNCTION_3_20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

void sub_22A9E1240(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v26 = MEMORY[0x24BEE4AF8];
  sub_22AB4CE30();
  v7 = v6;
  v24 = a2;
  v25 = a1;
  if (v6)
  {
    v8 = (uint64_t *)(a1 + 32);
    v9 = (uint64_t *)(a2 + 32);
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_47_3();
    v10 = v7;
    v11 = v4;
    v12 = v5;
    v13 = v5;
    while (v4)
    {
      if (!v12)
        goto LABEL_24;
      v14 = *v8 * *v9;
      if ((unsigned __int128)(*v8 * (__int128)*v9) >> 64 != v14 >> 63)
        goto LABEL_25;
      v15 = *(_QWORD *)(v26 + 16);
      if (v15 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        v21 = v11;
        v22 = v13;
        sub_22AB4CE30();
        v13 = v22;
        v11 = v21;
      }
      --v12;
      *(_QWORD *)(v26 + 16) = v15 + 1;
      *(_QWORD *)(v26 + 8 * v15 + 32) = v14;
      --v4;
      ++v9;
      ++v8;
      if (!--v10)
        goto LABEL_14;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  else
  {
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_47_3();
    v11 = v4;
    v13 = v5;
LABEL_14:
    if (v11 <= v13)
    {
LABEL_22:
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_64_3();
      return;
    }
    while (v7 < v11)
    {
      if (v13 == v7)
        goto LABEL_22;
      if (v7 >= v13)
        goto LABEL_27;
      v16 = *(_QWORD *)(v25 + 32 + 8 * v7);
      v17 = *(_QWORD *)(v24 + 32 + 8 * v7);
      v18 = v16 * v17;
      if ((unsigned __int128)(v16 * (__int128)v17) >> 64 != (v16 * v17) >> 63)
        goto LABEL_28;
      v19 = *(_QWORD *)(v26 + 16);
      if (v19 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        v20 = v11;
        v23 = v13;
        sub_22AB4CE30();
        v13 = v23;
        v11 = v20;
      }
      ++v7;
      *(_QWORD *)(v26 + 16) = v19 + 1;
      *(_QWORD *)(v26 + 8 * v19 + 32) = v18;
      if (v11 == v7)
        goto LABEL_22;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t sub_22A9E145C()
{
  return sub_22ABDEAEC();
}

_QWORD *sub_22A9E1464(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4)
{
  _QWORD *v4;
  _BYTE v10[32];

  v4[2] = MEMORY[0x24BEE4AF8];
  sub_22A9E7618(a1, (uint64_t)v10);
  swift_beginAccess();
  sub_22AA94048((uint64_t)v10);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1(a1);
  v4[15] = a2;
  memcpy(v4 + 3, a3, 0x58uLL);
  v4[14] = a4;
  return v4;
}

void sub_22A9E1504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;

  v7 = OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_68_3(v7, v8, v9, v10, v11, v12, v13, v14, v57, v62, v67, v72);
  if (!v74)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v23 = OUTLINED_FUNCTION_92_0(v15, v16, v17, v18, v19, v20, v21, v22, v58, v63, v68, v72, v73, v74, v75, v76, v77, v78);
  OUTLINED_FUNCTION_2_20((uint64_t)v23, (unint64_t *)&qword_2540E8620);
  if ((OUTLINED_FUNCTION_4_14() & 1) != 0)
  {

    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v25 = sub_22ABDFCB0();
    OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_75_3();
    v26 = OUTLINED_FUNCTION_22_11();
    v27 = OUTLINED_FUNCTION_5_16(v26, *MEMORY[0x24BEE26E0]);
LABEL_9:
    OUTLINED_FUNCTION_9_20(v27);
    return;
  }
  sub_22ABBFDF4(*(_QWORD *)(v3 + 16), &v72);
  if (!v74)
    goto LABEL_11;
  OUTLINED_FUNCTION_92_0(v28, v29, v30, v31, v32, v33, v34, v35, v59, v64, v69, v72, v73, v74, v75, v76, v77, v78);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8598);
  if ((OUTLINED_FUNCTION_4_14() & 1) != 0)
  {
    *(_QWORD *)&v78 = sub_22AAB11E0(v3);
    *((_QWORD *)&v78 + 1) = v37;
    v79 = v38;
    v40 = _s14KeyedContainerVMa(0, a2, a3, v39);
    OUTLINED_FUNCTION_9_3();
    MEMORY[0x22E2E4D80](&unk_22ABF7178, v40);
    sub_22ABDFCBC();
    return;
  }
  v41 = OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_68_3(v41, v42, v43, v44, v45, v46, v47, v48, v60, v65, v70, v72);
  if (v74)
  {
    OUTLINED_FUNCTION_92_0(v49, v50, v51, v52, v53, v54, v55, v56, v61, v66, v71, v72, v73, v74, v75, v76, v77, v78);
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_8_16();
    sub_22AAABA2C(v36, &v78, v4);
    OUTLINED_FUNCTION_2_1();
    v27 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
}

void sub_22A9E172C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  _QWORD v70[4];

  v4 = OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_68_3(v4, v5, v6, v7, v8, v9, v10, v11, v53, v58, v63, v68);
  if (!v69)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v20 = OUTLINED_FUNCTION_93_0(v12, v13, v14, v15, v16, v17, v18, v19, v54, v59, v64, v68);
  OUTLINED_FUNCTION_2_20((uint64_t)v20, (unint64_t *)&qword_2540E8620);
  if ((OUTLINED_FUNCTION_4_14() & 1) != 0)
  {

    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10208);
    OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_75_3();
    v23 = OUTLINED_FUNCTION_22_11();
    v24 = OUTLINED_FUNCTION_24_9(v23, *MEMORY[0x24BEE26E0]);
LABEL_9:
    OUTLINED_FUNCTION_9_20(v24);
    return;
  }
  sub_22ABBFDF4(*(_QWORD *)(v1 + 16), &v68);
  if (!v69)
    goto LABEL_11;
  OUTLINED_FUNCTION_93_0(v25, v26, v27, v28, v29, v30, v31, v32, v55, v60, v65, v68);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F0);
  if ((OUTLINED_FUNCTION_4_14() & 1) != 0)
  {
    v34 = v68;
    OUTLINED_FUNCTION_0_16();
    v35 = *(_QWORD *)(v1 + 120);
    a1[3] = &_s16UnkeyedContainerVN_0;
    a1[4] = sub_22A9E7D20();
    v36 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    *a1 = v36;
    v36[2] = v1;
    v36[3] = v34;
    v36[4] = v35;
    v36[5] = 0;
    OUTLINED_FUNCTION_9_3();
    OUTLINED_FUNCTION_47_3();
    return;
  }
  v37 = OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_68_3(v37, v38, v39, v40, v41, v42, v43, v44, v56, v61, v66, v68);
  if (v69)
  {
    OUTLINED_FUNCTION_93_0(v45, v46, v47, v48, v49, v50, v51, v52, v57, v62, v67, v68);
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_8_16();
    sub_22AAABA2C(v33, v70, v2);
    OUTLINED_FUNCTION_2_1();
    v24 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_22A9E1930@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = _s19IntermediateDecoderCMa();
  sub_22A9E7CF0(&qword_2540E7DB8);
  a1[4] = v3;
  *a1 = v1;
  return OUTLINED_FUNCTION_9_3();
}

void sub_22A9E197C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_22A9D1570(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A9E19C0()
{
  sub_22A9E197C();
  return swift_deallocClassInstance();
}

uint64_t _s19IntermediateDecoderCMa()
{
  return objc_opt_self();
}

uint64_t sub_22A9E1A04()
{
  return sub_22A9E145C();
}

void sub_22A9E1A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22A9E1504(a1, a2, a3);
}

void sub_22A9E1A44(_QWORD *a1@<X8>)
{
  sub_22A9E172C(a1);
}

uint64_t sub_22A9E1A64@<X0>(_QWORD *a1@<X8>)
{
  return sub_22A9E1930(a1);
}

void sub_22A9E1A84()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE1328];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E1B98()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE1768];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E1CAC()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE3E50];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E1DC0()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE3F30];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E1ED4()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE3F88];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E1FE8()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE4008];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E20FC()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE1E88];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E2210()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE4260];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E2324()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE4478];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E2438()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE44F0];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E254C()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE4568];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E2660()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE14E8];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E2774()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE13C8];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E2888()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_22A9E2AFC();
  if ((v0 & 1) != 0)
  {
    v1 = sub_22ABDF830();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v3 = MEMORY[0x24BEE0D00];
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABDF824();
    v4 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x24BEE26E0], v1);
    swift_willThrow(v4);
  }
}

void sub_22A9E299C(uint64_t a1)
{
  char v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  sub_22A9E2AFC();
  if ((v2 & 1) != 0)
  {
    v3 = sub_22ABDF830();
    swift_allocError();
    v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v5 = a1;
    swift_beginAccess();
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22ABE0304();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDF824();
    v6 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x24BEE26E0], v3);
    swift_willThrow(v6);
  }
}

void sub_22A9E2AFC()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  __int128 v3;

  OUTLINED_FUNCTION_0_16();
  sub_22ABBFDF4(*(_QWORD *)(v0 + 16), &v1);
  if (v2)
  {
    sub_22A9C38BC(&v1, &v3);
    sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8620);
    if (swift_dynamicCast())

  }
  else
  {
    __break(1u);
  }
}

void sub_22A9E2B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  sub_22A9E1A84();
  if (!v0)
  {
    v1 = OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_29_7(v1, v2, v3, v4, v5, v6, v7, v8, v24, v26);
    if (v28)
    {
      v9 = sub_22A9C38BC(&v26, &v29);
      v17 = OUTLINED_FUNCTION_90_1((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v25, v26, *((uint64_t *)&v26 + 1), v27, v28, v29);
      v18 = sub_22A9E2C24((uint64_t)v17);
      v19 = v18;
      OUTLINED_FUNCTION_30_9(v18, v20, v21, v22, v23);
      if (v19 != 2)
        return;
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_22A9E2C24(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[32];
  id v10;

  v2 = sub_22A9E7618(a1, (uint64_t)v9);
  OUTLINED_FUNCTION_2_20(v2, (unint64_t *)&qword_2540E8620);
  if (OUTLINED_FUNCTION_4_14())
  {

    return 2;
  }
  v4 = sub_22A9E7618(a1, (uint64_t)v9);
  OUTLINED_FUNCTION_2_20(v4, (unint64_t *)&qword_2540E8628);
  result = OUTLINED_FUNCTION_4_14();
  if ((result & 1) == 0)
    goto LABEL_8;
  if (!*MEMORY[0x24BDBD270])
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  v5 = v10;
  if (v10 == (id)*MEMORY[0x24BDBD270])
  {

    return 1;
  }
  v6 = (id)*MEMORY[0x24BDBD268];
  if (!*MEMORY[0x24BDBD268])
    goto LABEL_13;

  if (v5 != v6)
  {
LABEL_8:
    OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    v7 = OUTLINED_FUNCTION_12_16();
    OUTLINED_FUNCTION_62_4(v7, MEMORY[0x24BEE1328]);
    v8 = OUTLINED_FUNCTION_3_8();
    return OUTLINED_FUNCTION_9_20(v8);
  }
  return 0;
}

#error "22A9E2DBC: call analysis failed (funcsize=123)"

#error "22A9E2FCC: call analysis failed (funcsize=138)"

#error "22A9E320C: call analysis failed (funcsize=137)"

#error "22A9E3440: call analysis failed (funcsize=126)"

#error "22A9E3654: call analysis failed (funcsize=122)"

#error "22A9E3858: call analysis failed (funcsize=123)"

void sub_22A9E3A14(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;

  OUTLINED_FUNCTION_113_0(a1);
  if (v1)
    goto LABEL_4;
  v2 = OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_29_7(v2, v3, v4, v5, v6, v7, v8, v9, v21, v22);
  if (v23)
  {
    v10 = sub_22A9C38BC(&v22, &v24);
    v15 = OUTLINED_FUNCTION_132((uint64_t)v10, v11, v12, v13, v14);
    v20 = v15;
    OUTLINED_FUNCTION_30_9(v15, v16, v17, v18, v19);
    if ((v20 & 0x100) != 0)
    {
      __break(1u);
      goto LABEL_7;
    }
LABEL_4:
    OUTLINED_FUNCTION_64_3();
    return;
  }
LABEL_7:
  __break(1u);
}

#error "22A9E3AE8: call analysis failed (funcsize=137)"

void sub_22A9E3CCC(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;

  OUTLINED_FUNCTION_113_0(a1);
  if (v1)
    goto LABEL_4;
  v2 = OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_29_7(v2, v3, v4, v5, v6, v7, v8, v9, v21, v22);
  if (v23)
  {
    v10 = sub_22A9C38BC(&v22, &v24);
    v15 = OUTLINED_FUNCTION_132((uint64_t)v10, v11, v12, v13, v14);
    v20 = v15;
    OUTLINED_FUNCTION_30_9(v15, v16, v17, v18, v19);
    if ((v20 & 0x10000) != 0)
    {
      __break(1u);
      goto LABEL_7;
    }
LABEL_4:
    OUTLINED_FUNCTION_64_3();
    return;
  }
LABEL_7:
  __break(1u);
}

#error "22A9E3DA0: call analysis failed (funcsize=137)"

void sub_22A9E3F84(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  OUTLINED_FUNCTION_113_0(a1);
  if (v1)
    goto LABEL_4;
  v3 = OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_29_7(v3, v4, v5, v6, v7, v8, v9, v10, v26, v28);
  if (v30)
  {
    v11 = sub_22A9C38BC(&v28, &v31);
    v19 = OUTLINED_FUNCTION_90_1((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18, v27, v28, *((uint64_t *)&v28 + 1), v29, v30, v31);
    v20 = v2(v19);
    v25 = v20;
    OUTLINED_FUNCTION_30_9(v20, v21, v22, v23, v24);
    if ((v25 & 0x100000000) != 0)
    {
      __break(1u);
      goto LABEL_7;
    }
LABEL_4:
    OUTLINED_FUNCTION_64_3();
    return;
  }
LABEL_7:
  __break(1u);
}

#error "22A9E4050: call analysis failed (funcsize=127)"

void sub_22A9E4218(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  OUTLINED_FUNCTION_113_0(a1);
  if (v1)
    goto LABEL_4;
  v3 = OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_29_7(v3, v4, v5, v6, v7, v8, v9, v10, v26, v28);
  if (v30)
  {
    v11 = sub_22A9C38BC(&v28, &v31);
    v19 = OUTLINED_FUNCTION_90_1((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18, v27, v28, *((uint64_t *)&v28 + 1), v29, v30, v31);
    v20 = v2(v19);
    v25 = v21;
    OUTLINED_FUNCTION_30_9(v20, v21, v22, v23, v24);
    if ((v25 & 1) != 0)
    {
      __break(1u);
      goto LABEL_7;
    }
LABEL_4:
    OUTLINED_FUNCTION_64_3();
    return;
  }
LABEL_7:
  __break(1u);
}

#error "22A9E42E8: call analysis failed (funcsize=123)"

void sub_22A9E44A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  sub_22A9E2660();
  if (!v0)
  {
    v1 = OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_29_7(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28);
    if (v30)
    {
      v9 = sub_22A9C38BC(&v28, &v31);
      v17 = OUTLINED_FUNCTION_90_1((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v27, v28, *((uint64_t *)&v28 + 1), v29, v30, v31);
      sub_22A9E4524(v17, v18, v19);
      v25 = v20;
      OUTLINED_FUNCTION_30_9(v20, v21, v22, v23, v24);
      if ((v25 & 0x100000000) == 0)
        return;
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_22A9E4524(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;
  double v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  BOOL v26;
  char v28;
  uint64_t v29;
  id v30;

  v5 = OUTLINED_FUNCTION_47_4((uint64_t)a1, a2, a3);
  OUTLINED_FUNCTION_2_20(v5, (unint64_t *)&qword_2540E8620);
  v6 = MEMORY[0x24BEE4AD8];
  v7 = (void *)(MEMORY[0x24BEE4AD8] + 8);
  v8 = OUTLINED_FUNCTION_4_14();
  if ((_DWORD)v8)
  {
    OUTLINED_FUNCTION_46_5(v8, v9, v10, v11, v12, v13, v14, v15, v30);
    goto LABEL_34;
  }
  v16 = OUTLINED_FUNCTION_122(v8, v9);
  OUTLINED_FUNCTION_2_20(v16, (unint64_t *)&qword_2540E8628);
  v17 = OUTLINED_FUNCTION_4_14();
  if ((v17 & 1) != 0)
  {
    v7 = v30;
    if (*MEMORY[0x24BDBD270])
      v19 = v30 == (id)*MEMORY[0x24BDBD270];
    else
      v19 = 0;
    if (!v19 && (!*MEMORY[0x24BDBD268] || v30 != (id)*MEMORY[0x24BDBD268]))
    {
      objc_msgSend(v30, sel_doubleValue);
      if (fabs(v21) <= 3.40282347e38)
      {

      }
      else
      {
        OUTLINED_FUNCTION_6_21();
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_0_16();
        OUTLINED_FUNCTION_60_5();
        sub_22ABDF7A0();
        OUTLINED_FUNCTION_1_8();
        OUTLINED_FUNCTION_37_6();
        v22 = objc_msgSend(v30, sel_description, 0, 0xE000000000000000);
        OUTLINED_FUNCTION_39_7();
        OUTLINED_FUNCTION_17_10();
        OUTLINED_FUNCTION_15_11();
        OUTLINED_FUNCTION_27_7();
        sub_22ABDEDC8();
        OUTLINED_FUNCTION_89();
        OUTLINED_FUNCTION_13_18();
        v23 = OUTLINED_FUNCTION_22_11();
        v24 = OUTLINED_FUNCTION_24_9(v23, *MEMORY[0x24BEE26D8]);
        OUTLINED_FUNCTION_9_20(v24);

      }
      goto LABEL_34;
    }

  }
  OUTLINED_FUNCTION_122(v17, v18);
  if ((OUTLINED_FUNCTION_4_14() & 1) == 0)
    goto LABEL_33;
  OUTLINED_FUNCTION_85_2();
  v20 = v19 && v7 == (void *)0xE800000000000000;
  if (v20
    || (OUTLINED_FUNCTION_53_5() & 1) != 0
    || ((OUTLINED_FUNCTION_80_2(), v19) ? (v26 = v7 == v25) : (v26 = 0), v26 || (OUTLINED_FUNCTION_43_4() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  if (v6 == 5136718 && v7 == (void *)0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  v28 = OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54();
  if ((v28 & 1) == 0)
  {
LABEL_33:
    OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_12_16();
    sub_22AAABA2C(MEMORY[0x24BEE14E8], a1, v3);
    v29 = OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_9_20(v29);
  }
LABEL_34:
  OUTLINED_FUNCTION_64_3();
}

void sub_22A9E4864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  sub_22A9E2774();
  if (!v0)
  {
    v1 = OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_29_7(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28);
    if (v30)
    {
      v9 = sub_22A9C38BC(&v28, &v31);
      v17 = OUTLINED_FUNCTION_90_1((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v27, v28, *((uint64_t *)&v28 + 1), v29, v30, v31);
      v20 = sub_22A9E48F4((uint64_t)v17, v18, v19);
      v25 = v21;
      OUTLINED_FUNCTION_30_9(v20, v21, v22, v23, v24);
      if ((v25 & 1) == 0)
        return;
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_22A9E48F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;

  v3 = OUTLINED_FUNCTION_47_4(a1, a2, a3);
  OUTLINED_FUNCTION_2_20(v3, (unint64_t *)&qword_2540E8620);
  v4 = MEMORY[0x24BEE4AD8];
  v5 = MEMORY[0x24BEE4AD8] + 8;
  v6 = OUTLINED_FUNCTION_4_14();
  if ((_DWORD)v6)
  {
    OUTLINED_FUNCTION_46_5(v6, v7, v8, v9, v10, v11, v12, v13, v28);
    return 0;
  }
  v15 = OUTLINED_FUNCTION_86_2(v6, v7);
  OUTLINED_FUNCTION_2_20(v15, (unint64_t *)&qword_2540E8628);
  v16 = OUTLINED_FUNCTION_4_14();
  if ((v16 & 1) != 0)
  {
    v5 = (uint64_t)v28;
    if (*MEMORY[0x24BDBD270])
      v18 = v28 == (id)*MEMORY[0x24BDBD270];
    else
      v18 = 0;
    if (!v18 && (!*MEMORY[0x24BDBD268] || v28 != (id)*MEMORY[0x24BDBD268]))
    {
      objc_msgSend(v28, sel_doubleValue);
      v21 = v20;

      return v21;
    }

  }
  OUTLINED_FUNCTION_86_2(v16, v17);
  if ((OUTLINED_FUNCTION_4_14() & 1) == 0)
    goto LABEL_30;
  OUTLINED_FUNCTION_85_2();
  v19 = v18 && v5 == 0xE800000000000000;
  if (v19 || (OUTLINED_FUNCTION_53_5() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0x7FF0000000000000;
  }
  OUTLINED_FUNCTION_80_2();
  v23 = v18 && v5 == v22;
  if (v23 || (OUTLINED_FUNCTION_43_4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0xFFF0000000000000;
  }
  if (v4 == 5136718 && v5 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_54();
    if ((v25 & 1) == 0)
    {
LABEL_30:
      OUTLINED_FUNCTION_0_16();
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      v26 = OUTLINED_FUNCTION_12_16();
      OUTLINED_FUNCTION_62_4(v26, MEMORY[0x24BEE13C8]);
      v27 = OUTLINED_FUNCTION_3_8();
      return OUTLINED_FUNCTION_9_20(v27);
    }
  }
  return 0x7FF8000000000000;
}

void sub_22A9E4B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  sub_22A9E2888();
  if (!v0)
  {
    v1 = OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_29_7(v1, v2, v3, v4, v5, v6, v7, v8, v26, v28);
    if (!v30)
    {
LABEL_7:
      __break(1u);
      return;
    }
    v9 = sub_22A9C38BC(&v28, &v31);
    v17 = OUTLINED_FUNCTION_90_1((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v27, v28, *((uint64_t *)&v28 + 1), v29, v30, v31);
    v20 = sub_22A9E4BA0((uint64_t)v17, v18, v19);
    v22 = v21;
    OUTLINED_FUNCTION_30_9(v20, v21, v23, v24, v25);
    if (!v22)
    {
      __break(1u);
      goto LABEL_7;
    }
  }
}

uint64_t sub_22A9E4BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v3 = OUTLINED_FUNCTION_47_4(a1, a2, a3);
  OUTLINED_FUNCTION_2_20(v3, (unint64_t *)&qword_2540E8620);
  v4 = OUTLINED_FUNCTION_4_14();
  if ((_DWORD)v4)
  {
    OUTLINED_FUNCTION_46_5(v4, v5, v6, v7, v8, v9, v10, v11, v15);
    return 0;
  }
  else
  {
    OUTLINED_FUNCTION_86_2(v4, v5);
    if (OUTLINED_FUNCTION_4_14())
    {
      return (uint64_t)v15;
    }
    else
    {
      OUTLINED_FUNCTION_0_16();
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      v13 = OUTLINED_FUNCTION_12_16();
      OUTLINED_FUNCTION_62_4(v13, MEMORY[0x24BEE0D00]);
      v14 = OUTLINED_FUNCTION_3_8();
      return OUTLINED_FUNCTION_9_20(v14);
    }
  }
}

void sub_22A9E4C80(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD v17[2];

  v10 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v14 - v11;
  sub_22A9E299C(a1);
  if (!v5)
  {
    OUTLINED_FUNCTION_0_16();
    sub_22ABBFDF4(*(_QWORD *)(v4 + 16), &v15);
    if (v16)
    {
      sub_22A9C38BC(&v15, v17);
      sub_22A9E501C(v17, a1, a2, a3, (uint64_t)v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      OUTLINED_FUNCTION_106_0((uint64_t)v12, 1, a2);
      if (!v13)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a4, v12, a2);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

_QWORD *sub_22A9E4D9C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD *result;
  _QWORD v5[5];

  v3 = sub_22A9E7C0C();
  result = sub_22A9E6F9C(v5, a1, &type metadata for InlineData, v3);
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2540E86F8);
    if (swift_dynamicCast())
      return (_QWORD *)v5[4];
    else
      return 0;
  }
  return result;
}

_QWORD *sub_22A9E4E28(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD *result;
  _QWORD v5[5];

  v3 = sub_22A9E7BD0();
  result = sub_22A9E6F9C(v5, a1, &type metadata for DataReference, v3);
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2540E86F8);
    if (swift_dynamicCast())
      return (_QWORD *)v5[4];
    else
      return 0;
  }
  return result;
}

_QWORD *sub_22A9E4EC0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD *result;
  _QWORD v5[5];

  v3 = sub_22A9E7B94();
  result = sub_22A9E6F9C(v5, a1, &type metadata for ShapedArrayReference, v3);
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2540E86F8);
    if (swift_dynamicCast())
      return (_QWORD *)v5[4];
    else
      return 0;
  }
  return result;
}

_QWORD *sub_22A9E4F64(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  _QWORD v10[5];

  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_22A9A0B88(a3, a2);
  result = sub_22A9E6F9C(v10, a1, v7, v8);
  if (!v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2540E86F8);
    if (OUTLINED_FUNCTION_4_14())
      return (_QWORD *)v10[4];
    else
      return 0;
  }
  return result;
}

void sub_22A9E501C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v8;
  uint64_t v9;

  sub_22A9E6F9C(a1, a2, a4, (uint64_t)&v9);
  if (!v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2540E86F8);
    v8 = OUTLINED_FUNCTION_4_14();
    __swift_storeEnumTagSinglePayload(a5, v8 ^ 1u, 1, a3);
  }
}

uint64_t sub_22A9E5098()
{
  OUTLINED_FUNCTION_0_16();
  return sub_22ABDEAEC();
}

uint64_t sub_22A9E50D0()
{
  char v0;

  sub_22A9E2AFC();
  return v0 & 1;
}

uint64_t sub_22A9E50F4()
{
  char v0;

  sub_22A9E2B98();
  return v0 & 1;
}

void sub_22A9E5118()
{
  sub_22A9E4B14();
}

void sub_22A9E5138()
{
  sub_22A9E4864();
}

void sub_22A9E5158()
{
  sub_22A9E44A0();
}

void sub_22A9E5178()
{
  sub_22A9E4218((uint64_t (*)(void))sub_22A9E1B98);
}

void sub_22A9E51A8()
{
  sub_22A9E3A14((uint64_t (*)(void))sub_22A9E1CAC);
}

void sub_22A9E51D8()
{
  sub_22A9E3CCC((uint64_t (*)(void))sub_22A9E1DC0);
}

void sub_22A9E5208()
{
  sub_22A9E3F84((uint64_t (*)(void))sub_22A9E1ED4);
}

void sub_22A9E5238()
{
  sub_22A9E4218((uint64_t (*)(void))sub_22A9E1FE8);
}

uint64_t sub_22A9E5268()
{
  return sub_22ABDFF98();
}

void sub_22A9E527C()
{
  sub_22A9E4218((uint64_t (*)(void))sub_22A9E20FC);
}

void sub_22A9E52AC()
{
  sub_22A9E3A14((uint64_t (*)(void))sub_22A9E2210);
}

void sub_22A9E52DC()
{
  sub_22A9E3CCC((uint64_t (*)(void))sub_22A9E2324);
}

void sub_22A9E530C()
{
  sub_22A9E3F84((uint64_t (*)(void))sub_22A9E2438);
}

void sub_22A9E533C()
{
  sub_22A9E4218((uint64_t (*)(void))sub_22A9E254C);
}

uint64_t sub_22A9E536C()
{
  return sub_22ABDFFA4();
}

void sub_22A9E5380(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_22A9E4C80(a1, a2, a3, a4);
}

uint64_t sub_22A9E53A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[32];
  id v24;

  __swift_instantiateConcreteTypeFromMangledName(qword_2540E7770);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_34();
  v8 = OUTLINED_FUNCTION_35_4(v7, (uint64_t)v23);
  OUTLINED_FUNCTION_2_20(v8, (unint64_t *)&qword_2540E8620);
  if (OUTLINED_FUNCTION_4_14())
  {

    v11 = OUTLINED_FUNCTION_134();
    v12 = a2;
    v13 = 1;
    return __swift_storeEnumTagSinglePayload(v12, v13, 1, v11);
  }
  result = sub_22A9E4BA0(a1, v9, v10);
  if (!v2)
  {
    if (v15)
    {
      if (qword_255B0D730 != -1)
      {
        v22 = result;
        swift_once();
        result = v22;
      }
      MEMORY[0x24BDAC7A8](result);
      sub_22AA785C0((void (*)(_QWORD))sub_22A9E76C0);
      OUTLINED_FUNCTION_58_1();
      v16 = OUTLINED_FUNCTION_134();
      OUTLINED_FUNCTION_106_0(v3, 1, v16);
      if (!v17)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a2, v3, v16);
        v12 = a2;
        v13 = 0;
        v11 = v16;
        return __swift_storeEnumTagSinglePayload(v12, v13, 1, v11);
      }
      sub_22A9CF82C(v3, qword_2540E7770);
      v18 = OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      v20 = v19;
      OUTLINED_FUNCTION_0_16();
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_110_0();
      OUTLINED_FUNCTION_22_11();
      v21 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D8], v18);
      return OUTLINED_FUNCTION_9_20(v21);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_22A9E55D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (void *)sub_22ABDED2C();
  v5 = objc_msgSend(a1, sel_dateFromString_, v4);

  if (v5)
  {
    sub_22ABDD1D8();

    v6 = 0;
  }
  else
  {
    v6 = 1;
  }
  v7 = sub_22ABDD1E4();
  return __swift_storeEnumTagSinglePayload(a2, v6, 1, v7);
}

void sub_22A9E5674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v7 = OUTLINED_FUNCTION_98_0(a1, a2, a3, a4);
  OUTLINED_FUNCTION_2_20(v7, (unint64_t *)&qword_2540E8620);
  v8 = OUTLINED_FUNCTION_4_14();
  if ((_DWORD)v8)
  {
    OUTLINED_FUNCTION_77_2(v8, v9, v10, v11, v12, v13, v14, v15, v36, v37, v38);
LABEL_15:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
    OUTLINED_FUNCTION_52_6(v31);
    goto LABEL_16;
  }
  v16 = OUTLINED_FUNCTION_94_0(v8, &qword_255B101B0, &qword_255B101B8);
  if (v4)
  {
    OUTLINED_FUNCTION_1_12();
  }
  else if (v16)
  {
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_123(&qword_255B101A8);
    OUTLINED_FUNCTION_66_5();
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_95();
  if (!v4)
  {
    v18 = v17;
    if (v17)
    {
      OUTLINED_FUNCTION_116();
      if (v20)
      {
        v21 = OUTLINED_FUNCTION_119();
      }
      else
      {
        if (v19 == 1)
          v5 = 0xE600000000000000;
        else
          v5 = 0xE500000000000000;
        OUTLINED_FUNCTION_55();
        v21 = OUTLINED_FUNCTION_124();
        if ((v6 & 1) == 0)
        {
          OUTLINED_FUNCTION_58_1();
          OUTLINED_FUNCTION_54();
          OUTLINED_FUNCTION_6_21();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_0_16();
          OUTLINED_FUNCTION_75_3();
          v29 = OUTLINED_FUNCTION_22_11();
          v30 = OUTLINED_FUNCTION_24_9(v29, *MEMORY[0x24BEE26D8]);
LABEL_18:
          OUTLINED_FUNCTION_9_20(v30);
          goto LABEL_16;
        }
      }
      OUTLINED_FUNCTION_103_0(v21, v22, v23, v24, v25, v26, v27, v28, v36, v37, (uint64_t)v38, v39, v40, v41, v42, v43);
      OUTLINED_FUNCTION_99_0();
      OUTLINED_FUNCTION_105_0();
      if (!v32)
      {
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_54();
        __asm { BR              X10 }
      }
      if (*(_QWORD *)(v18 + 32) == 1)
      {
        if (v32 == 1)
LABEL_27:
          __asm { BR              X10 }
        v33 = 5;
        while (1)
        {
          v34 = v33 - 3;
          if (__OFADD__(v33 - 4, 1))
            break;
          if (*(_QWORD *)(v18 + 8 * v33) != 1)
            goto LABEL_28;
          ++v33;
          if (v34 == v32)
            goto LABEL_27;
        }
        __break(1u);
      }
      else
      {
LABEL_28:
        OUTLINED_FUNCTION_54_4();
        OUTLINED_FUNCTION_60_5();
        OUTLINED_FUNCTION_74_2();
        OUTLINED_FUNCTION_58_1();
        OUTLINED_FUNCTION_54();
        OUTLINED_FUNCTION_141();
        OUTLINED_FUNCTION_72_2();
        OUTLINED_FUNCTION_100_0();
        if (v35)
          __asm { BR              X10 }
      }
      __break(1u);
      JUMPOUT(0x22A9E5B2CLL);
    }
    OUTLINED_FUNCTION_0_16();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_12_16();
    OUTLINED_FUNCTION_63_4();
    v30 = OUTLINED_FUNCTION_3_8();
    goto LABEL_18;
  }
LABEL_16:
  OUTLINED_FUNCTION_57_5();
}

void sub_22A9E5B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v8 = OUTLINED_FUNCTION_98_0(a1, a2, a3, a4);
  OUTLINED_FUNCTION_2_20(v8, (unint64_t *)&qword_2540E8620);
  v9 = OUTLINED_FUNCTION_4_14();
  if ((_DWORD)v9)
  {
    OUTLINED_FUNCTION_77_2(v9, v10, v11, v12, v13, v14, v15, v16, v37, v38, v39);
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    OUTLINED_FUNCTION_52_6(v30);
    goto LABEL_13;
  }
  v17 = OUTLINED_FUNCTION_94_0(v9, &qword_2540E8250, &qword_2540E8248);
  if (v4)
  {
    OUTLINED_FUNCTION_1_12();
  }
  else if (v17)
  {
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_123(&qword_2540E85D0);
    OUTLINED_FUNCTION_66_5();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_95();
  if (!v4)
  {
    v19 = v18;
    if (v18)
    {
      OUTLINED_FUNCTION_116();
      if (!v21 && v20 == 1)
      {
        v22 = swift_bridgeObjectRelease();
LABEL_16:
        OUTLINED_FUNCTION_103_0(v22, v23, v24, v25, v26, v27, v28, v29, v37, v38, (uint64_t)v39, v40, v41, v42, v43, v44);
        OUTLINED_FUNCTION_99_0();
        OUTLINED_FUNCTION_105_0();
        if (!v33)
        {
          OUTLINED_FUNCTION_58_1();
          OUTLINED_FUNCTION_54();
          __asm { BR              X10 }
        }
        if (*(_QWORD *)(v19 + 32) == 1)
        {
          if (v33 == 1)
LABEL_26:
            __asm { BR              X10 }
          v34 = 5;
          while (1)
          {
            v35 = v34 - 3;
            if (__OFADD__(v34 - 4, 1))
              break;
            if (*(_QWORD *)(v19 + 8 * v34) != 1)
              goto LABEL_27;
            ++v34;
            if (v35 == v33)
              goto LABEL_26;
          }
          __break(1u);
        }
        else
        {
LABEL_27:
          OUTLINED_FUNCTION_54_4();
          OUTLINED_FUNCTION_60_5();
          OUTLINED_FUNCTION_74_2();
          OUTLINED_FUNCTION_58_1();
          OUTLINED_FUNCTION_54();
          OUTLINED_FUNCTION_141();
          OUTLINED_FUNCTION_72_2();
          if ((v7 & 1) != 0)
            v36 = 1;
          else
            v36 = v6;
          if ((unint64_t)(v36 - 0x1000000000000000) >> 61 == 7)
            __asm { BR              X10 }
        }
        __break(1u);
        JUMPOUT(0x22A9E6050);
      }
      v5 = OUTLINED_FUNCTION_55();
      v22 = OUTLINED_FUNCTION_119();
      if ((v5 & 1) != 0)
        goto LABEL_16;
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_54();
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_0_16();
      OUTLINED_FUNCTION_75_3();
      OUTLINED_FUNCTION_110_0();
      v32 = OUTLINED_FUNCTION_22_11();
      v31 = OUTLINED_FUNCTION_24_9(v32, *MEMORY[0x24BEE26D8]);
    }
    else
    {
      OUTLINED_FUNCTION_0_16();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_12_16();
      OUTLINED_FUNCTION_63_4();
      v31 = OUTLINED_FUNCTION_3_8();
    }
    OUTLINED_FUNCTION_9_20(v31);
  }
LABEL_13:
  OUTLINED_FUNCTION_57_5();
}

_QWORD *sub_22A9E60AC(uint64_t a1)
{
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29[4];
  char v30;
  id v31;

  v3 = a1;
  v4 = sub_22A9E7618(a1, (uint64_t)v29);
  OUTLINED_FUNCTION_2_20(v4, (unint64_t *)&qword_2540E8620);
  v5 = OUTLINED_FUNCTION_4_14();
  if (!(_DWORD)v5)
  {
    v6 = OUTLINED_FUNCTION_94_0(v5, &qword_255B101D8, &qword_255B101E0);
    if (v1)
    {
      OUTLINED_FUNCTION_1_12();
    }
    else if (v6)
    {
      v29[0] = v7;
      OUTLINED_FUNCTION_126();
      OUTLINED_FUNCTION_123(&qword_255B101D0);
      OUTLINED_FUNCTION_66_5();
      goto LABEL_12;
    }
    result = OUTLINED_FUNCTION_95();
    if (v1)
      return result;
    v10 = v9;
    if (!v9)
    {
      OUTLINED_FUNCTION_0_16();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_12_16();
      OUTLINED_FUNCTION_63_4();
      v14 = OUTLINED_FUNCTION_3_8();
      return (_QWORD *)OUTLINED_FUNCTION_9_20(v14);
    }
    OUTLINED_FUNCTION_116();
    if (v12)
    {
      v3 = 0xE500000000000000;
    }
    else
    {
      if (v11 != 1)
      {
        v15 = OUTLINED_FUNCTION_119();
        goto LABEL_20;
      }
      v3 = 0xE600000000000000;
    }
    OUTLINED_FUNCTION_55();
    v15 = OUTLINED_FUNCTION_124();
    if ((v2 & 1) == 0)
    {
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_54();
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_0_16();
      OUTLINED_FUNCTION_75_3();
      v23 = OUTLINED_FUNCTION_22_11();
      v14 = OUTLINED_FUNCTION_24_9(v23, *MEMORY[0x24BEE26D8]);
      return (_QWORD *)OUTLINED_FUNCTION_9_20(v14);
    }
LABEL_20:
    OUTLINED_FUNCTION_104_0(v15, v16, v17, v18, v19, v20, v21, v22, v28, v29[0], v29[1], v29[2], v29[3], v30);
    OUTLINED_FUNCTION_99_0();
    OUTLINED_FUNCTION_105_0();
    if (!v24)
    {
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_54();
      __asm { BR              X10 }
    }
    if (*(_QWORD *)(v10 + 32) == 1)
    {
      if (v24 == 1)
LABEL_27:
        __asm { BR              X10 }
      v25 = 5;
      while (1)
      {
        v26 = v25 - 3;
        if (__OFADD__(v25 - 4, 1))
          break;
        if (*(_QWORD *)(v10 + 8 * v25) != 1)
          goto LABEL_28;
        ++v25;
        if (v26 == v24)
          goto LABEL_27;
      }
      __break(1u);
    }
    else
    {
LABEL_28:
      OUTLINED_FUNCTION_54_4();
      OUTLINED_FUNCTION_60_5();
      OUTLINED_FUNCTION_74_2();
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_54();
      OUTLINED_FUNCTION_141();
      OUTLINED_FUNCTION_72_2();
      OUTLINED_FUNCTION_100_0();
      if (v27)
        __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x22A9E65B4);
  }

LABEL_12:
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
  return (_QWORD *)OUTLINED_FUNCTION_52_6(v13);
}

uint64_t sub_22A9E6610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20[4];
  char v21;
  id v22;

  v4 = sub_22A9E7618(a1, (uint64_t)v20);
  OUTLINED_FUNCTION_2_20(v4, (unint64_t *)&qword_2540E8620);
  if (OUTLINED_FUNCTION_4_14())
  {

    return 0;
  }
  else
  {
    v5 = sub_22A9E4D9C(a1);
    if (v1)
    {
      OUTLINED_FUNCTION_1_12();
    }
    else if (v5)
    {
      return sub_22AB5E264((uint64_t)v5);
    }
    v6 = sub_22A9E4E28(a1);
    if ((v8 & 1) == 0)
    {
      v14 = (unint64_t)v6;
      OUTLINED_FUNCTION_104_0((int)v6, v7, v8, v9, v10, v11, v12, v13, v19, v20[0], v20[1], v20[2], v20[3], v21);
      sub_22AB5E044(v14);
      __asm { BR              X10 }
    }
    OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    v16 = OUTLINED_FUNCTION_12_16();
    OUTLINED_FUNCTION_62_4(v16, MEMORY[0x24BDCDDE8]);
    v17 = OUTLINED_FUNCTION_3_8();
    OUTLINED_FUNCTION_9_20(v17);
  }
  return v2;
}

uint64_t sub_22A9E67C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  _BYTE v11[32];

  v3 = sub_22A9E7618(a1, (uint64_t)v11);
  OUTLINED_FUNCTION_2_20(v3, (unint64_t *)&qword_2540E8620);
  v4 = OUTLINED_FUNCTION_4_14();
  v5 = v4;
  if (v4)
  {

    result = 0;
  }
  else
  {
    sub_22A9E7618(a1, (uint64_t)v11);
    type metadata accessor for Decimal(0);
    if (OUTLINED_FUNCTION_4_14())
    {
      result = (uint64_t)v10;
    }
    else
    {
      result = sub_22A9E48F4(a1, v7, v8);
      if (v1)
        return result;
      if ((v9 & 1) != 0)
      {
        __break(1u);
        return result;
      }
      result = MEMORY[0x22E2E37FC](*(double *)&result);
    }
  }
  v11[0] = v5;
  return result;
}

void sub_22A9E68C0(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _OWORD *v27;
  unint64_t v28;
  char v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _OWORD *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[2];
  _OWORD v52[2];
  __int128 v53;
  ValueMetadata *v54;
  unint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  _QWORD *v59;

  v5 = v4;
  sub_22A9E7618((uint64_t)a1, (uint64_t)&v56);
  sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8620);
  if (swift_dynamicCast())
  {

    *a4 = 0u;
    a4[1] = 0u;
  }
  else
  {
    sub_22A9E7618((uint64_t)a1, (uint64_t)&v56);
    sub_22A9BEDCC(0, &qword_255B101F8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v45 = a4;
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
      v47 = v11;
      v48 = v10;
      v46 = (void *)v53;
      sub_22ABDF4A0();
      swift_retain();
      sub_22ABDF4AC();
      sub_22A9E7C48((uint64_t)&v53, (uint64_t)&v56);
      if (v57)
      {
        v12 = (uint64_t *)(v49 + 120);
        v13 = (_QWORD *)MEMORY[0x24BEE4B00];
        v14 = MEMORY[0x24BEE0D00];
        while (1)
        {
          sub_22A9C38BC(&v58, v52);
          sub_22A9C38BC(&v56, &v53);
          swift_dynamicCast();
          v15 = *((_QWORD *)&v51[0] + 1);
          v50 = *(_QWORD *)&v51[0];
          swift_beginAccess();
          v16 = *v12;
          sub_22ABDEAEC();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v12 = v16;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_22AA35D20();
            v16 = v39;
            *v12 = v39;
          }
          v18 = *(_QWORD *)(v16 + 16);
          if (v18 >= *(_QWORD *)(v16 + 24) >> 1)
          {
            sub_22AA35D20();
            v16 = v40;
            *v12 = v40;
          }
          v54 = &type metadata for _JSONKey;
          v55 = sub_22A9E7C90();
          v19 = swift_allocObject();
          *(_QWORD *)&v53 = v19;
          *(_QWORD *)(v19 + 16) = v50;
          *(_QWORD *)(v19 + 24) = v15;
          *(_QWORD *)(v19 + 32) = 0;
          *(_BYTE *)(v19 + 40) = 1;
          *(_QWORD *)(v16 + 16) = v18 + 1;
          sub_22A9A1880(&v53, v16 + 40 * v18 + 32);
          swift_endAccess();
          sub_22A9E6F9C(&v53, v52, v48, v47);
          if (v5)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_beginAccess();
            sub_22AA7A4F8((uint64_t)&v53);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
            swift_endAccess();

            swift_release();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
            return;
          }
          if (v54)
          {
            v20 = v14;
            sub_22A9C38BC(&v53, v51);
            swift_isUniquelyReferenced_nonNull_native();
            v59 = v13;
            v21 = sub_22AA03688();
            if (__OFADD__(v13[2], (v22 & 1) == 0))
              goto LABEL_39;
            v23 = v21;
            v24 = v22;
            __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F270);
            if ((sub_22ABDFA64() & 1) != 0)
            {
              v25 = sub_22AA03688();
              if ((v24 & 1) != (v26 & 1))
                goto LABEL_41;
              v23 = v25;
            }
            v13 = v59;
            if ((v24 & 1) != 0)
            {
              v27 = (_OWORD *)(v59[7] + 32 * v23);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
              sub_22A9C38BC(v51, v27);
            }
            else
            {
              v59[(v23 >> 6) + 8] |= 1 << v23;
              v31 = (_QWORD *)(v13[6] + 16 * v23);
              *v31 = v50;
              v31[1] = v15;
              sub_22A9C38BC(v51, (_OWORD *)(v13[7] + 32 * v23));
              v32 = v13[2];
              v33 = __OFADD__(v32, 1);
              v34 = v32 + 1;
              if (v33)
                goto LABEL_40;
              v13[2] = v34;
              sub_22ABDEAEC();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v14 = v20;
            v5 = 0;
          }
          else
          {
            sub_22A9CF82C((uint64_t)&v53, qword_2540E86F8);
            sub_22ABDEAEC();
            v28 = sub_22AA03688();
            v30 = v29;
            swift_bridgeObjectRelease();
            if ((v30 & 1) != 0)
            {
              swift_isUniquelyReferenced_nonNull_native();
              v59 = v13;
              __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F270);
              sub_22ABDFA64();
              v13 = v59;
              swift_bridgeObjectRelease();
              sub_22A9C38BC((_OWORD *)(v13[7] + 32 * v28), v51);
              sub_22ABDFA7C();
              swift_bridgeObjectRelease();
            }
            else
            {
              memset(v51, 0, sizeof(v51));
            }
            swift_bridgeObjectRelease();
            sub_22A9CF82C((uint64_t)v51, qword_2540E86F8);
          }
          swift_beginAccess();
          v35 = *v12;
          if (!*(_QWORD *)(*v12 + 16))
            break;
          v36 = swift_isUniquelyReferenced_nonNull_native();
          *v12 = v35;
          if ((v36 & 1) == 0)
          {
            sub_22AB5D794();
            v35 = v41;
            *v12 = v41;
          }
          v37 = *(_QWORD *)(v35 + 16);
          if (!v37)
            goto LABEL_38;
          v38 = v37 - 1;
          __swift_destroy_boxed_opaque_existential_1(v35 + 40 * (v37 - 1) + 32);
          *(_QWORD *)(v35 + 16) = v38;
          *v12 = v35;
          swift_endAccess();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
          sub_22ABDF4AC();
          sub_22A9E7C48((uint64_t)&v53, (uint64_t)&v56);
          if (!v57)
            goto LABEL_33;
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        sub_22ABE0190();
        __break(1u);
      }
      else
      {
        v13 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_33:

        swift_release_n();
        *(_QWORD *)&v56 = v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8598);
        if ((swift_dynamicCast() & 1) == 0)
        {
          *v45 = 0u;
          v45[1] = 0u;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_22ABDF830();
      swift_allocError();
      v43 = v42;
      sub_22ABDEAEC();
      sub_22AAABA2C(a2, a1, v43);
      v44 = swift_bridgeObjectRelease();
      swift_willThrow(v44);
    }
  }
}

void sub_22A9E6F9C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(void);
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74[3];
  uint64_t v75;
  uint64_t v76;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E7768);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_33();
  v70 = v10 - v9;
  v71 = sub_22ABDD0E8();
  v11 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  OUTLINED_FUNCTION_33();
  v14 = v13 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8580);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_33();
  v18 = v17 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8560);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_33();
  v22 = v21 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_34();
  __swift_instantiateConcreteTypeFromMangledName(qword_2540E7770);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_33();
  v27 = v26 - v25;
  v28 = OUTLINED_FUNCTION_134();
  v29 = v28;
  if (v28 == a2 || OUTLINED_FUNCTION_2_20(v28, &qword_2540E8618) == a2)
  {
    v37 = OUTLINED_FUNCTION_34_8();
    sub_22A9E53A0(v37, v38);
    if (v4)
      return;
    OUTLINED_FUNCTION_106_0(v27, 1, v29);
    if (!v39)
    {
      *(_QWORD *)(a4 + 24) = v29;
      __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a4);
      v46 = *(void (**)(void))(*(_QWORD *)(v29 - 8) + 32);
LABEL_39:
      v46();
      return;
    }
    v40 = qword_2540E7770;
    v41 = v27;
    goto LABEL_18;
  }
  if (__swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568) == a2)
  {
    v42 = OUTLINED_FUNCTION_34_8();
    sub_22A9E5674(v42, v43, v44, v45);
    if (v4)
      return;
    OUTLINED_FUNCTION_106_0(v5, 1, a2);
    if (!v39)
    {
LABEL_21:
      OUTLINED_FUNCTION_88();
      v46 = *(void (**)(void))(*(_QWORD *)(a2 - 8) + 32);
      goto LABEL_39;
    }
    v40 = &qword_2540E8570;
    v41 = v5;
LABEL_18:
    sub_22A9CF82C(v41, v40);
    OUTLINED_FUNCTION_108_0();
    return;
  }
  if (__swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550) == a2)
  {
    v47 = OUTLINED_FUNCTION_34_8();
    sub_22A9E5B88(v47, v48, v49, v50);
    if (v4)
      return;
    OUTLINED_FUNCTION_106_0(v22, 1, a2);
    if (!v39)
      goto LABEL_21;
    v40 = &qword_2540E8560;
    v41 = v22;
    goto LABEL_18;
  }
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
  if (v30 != a2)
  {
    v31 = MEMORY[0x24BDCDDE8];
    if (a2 == MEMORY[0x24BDCDDE8] || (v32 = OUTLINED_FUNCTION_2_20(v30, &qword_2540E8610), v32 == a2))
    {
      v51 = OUTLINED_FUNCTION_34_8();
      v52 = sub_22A9E6610(v51);
      if (v4)
        return;
      if (v53 >> 60 != 15)
      {
        *(_QWORD *)(a4 + 24) = v31;
        *(_QWORD *)a4 = v52;
        *(_QWORD *)(a4 + 8) = v53;
        return;
      }
    }
    else if (v71 == a2 || OUTLINED_FUNCTION_2_20(v32, &qword_2540E8608) == a2)
    {
      v55 = OUTLINED_FUNCTION_34_8();
      sub_22A9E4BA0(v55, v56, v57);
      if (v4)
        return;
      if (v58)
      {
        sub_22ABDD0D0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_106_0(v70, 1, v71);
        if (v39)
        {
          sub_22A9CF82C(v70, &qword_2540E7768);
          v59 = OUTLINED_FUNCTION_6_21();
          OUTLINED_FUNCTION_53();
          v61 = v60;
          OUTLINED_FUNCTION_0_16();
          OUTLINED_FUNCTION_75_3();
          OUTLINED_FUNCTION_110_0();
          OUTLINED_FUNCTION_22_11();
          v62 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v61, *MEMORY[0x24BEE26D8], v59);
          swift_willThrow(v62);
        }
        else
        {
          v67 = *(void (**)(void))(v11 + 32);
          ((void (*)(uint64_t, uint64_t, uint64_t))v67)(v14, v70, v71);
          *(_QWORD *)(a4 + 24) = v71;
          __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a4);
          v67();
        }
        return;
      }
    }
    else
    {
      type metadata accessor for Decimal(0);
      v34 = v33;
      if (v33 != a2 && OUTLINED_FUNCTION_2_20(v33, &qword_2540E8600) != a2)
      {
        v35 = dynamic_cast_existential_1_conditional(a2);
        if (v35)
        {
          sub_22A9E68C0(a1, v35, v36, (_OWORD *)a4);
        }
        else
        {
          OUTLINED_FUNCTION_35_4(0, (uint64_t)v74);
          OUTLINED_FUNCTION_102_0();
          sub_22AA94048((uint64_t)v74);
          swift_endAccess();
          _s19IntermediateDecoderCMa();
          sub_22A9E7CF0(&qword_2540E7DB0);
          v75 = a2;
          v76 = a3;
          __swift_allocate_boxed_opaque_existential_1Tm(v74);
          swift_retain();
          sub_22ABDF23C();
          if (v73)
          {
            __swift_deallocate_boxed_opaque_existential_1((uint64_t)v74);
          }
          else
          {
            v68 = v75;
            __swift_project_boxed_opaque_existential_1(v74, v75);
            *(_QWORD *)(a4 + 24) = v68;
            __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a4);
            (*(void (**)(void))(*(_QWORD *)(v68 - 8) + 16))();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
          }
          OUTLINED_FUNCTION_102_0();
          sub_22AA7A564(v74);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
          swift_endAccess();
        }
        return;
      }
      v63 = OUTLINED_FUNCTION_34_8();
      v64 = sub_22A9E67C0(v63);
      if (v4)
        return;
      if ((v66 & 0x100000000) == 0)
      {
        *(_QWORD *)(a4 + 24) = v34;
        *(_QWORD *)a4 = v64;
        *(_QWORD *)(a4 + 8) = v65;
        *(_DWORD *)(a4 + 16) = v66;
        return;
      }
    }
    OUTLINED_FUNCTION_108_0();
    return;
  }
  v54 = OUTLINED_FUNCTION_34_8();
  sub_22A9E60AC(v54);
  if (!v4)
  {
    OUTLINED_FUNCTION_106_0(v18, 1, a2);
    if (v39)
    {
      sub_22A9CF82C(v18, &qword_2540E8580);
      OUTLINED_FUNCTION_108_0();
    }
    else
    {
      OUTLINED_FUNCTION_88();
      (*(void (**)(void))(*(_QWORD *)(a2 - 8) + 32))();
    }
  }
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1)
{
  if (swift_conformsToProtocol2())
    return a1;
  else
    return 0;
}

uint64_t sub_22A9E7618(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x22E2E4E64);
  return result;
}

void __swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
    *a1 = swift_allocBox();
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22A9E76C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22A9E55D4(a1, a2);
}

void sub_22A9E76D8(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = v2;
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_71_2();
  if ((a1 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_91_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F270);
    OUTLINED_FUNCTION_45_6();
    OUTLINED_FUNCTION_51_6();
    OUTLINED_FUNCTION_109_0();
    sub_22ABDFA7C();
    *v3 = a1;
    OUTLINED_FUNCTION_61_4();
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
    OUTLINED_FUNCTION_101_0();
  }
}

uint64_t sub_22A9E7780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_71_2();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_130();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F290);
    OUTLINED_FUNCTION_45_6();
    OUTLINED_FUNCTION_51_6();
    v6 = *(_QWORD *)(a2 + 56);
    v7 = type metadata accessor for TensorDescription();
    sub_22A9E7D90(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * a1, a3);
    sub_22ABDFA7C();
    OUTLINED_FUNCTION_131();
    v8 = a3;
    v9 = 0;
    v10 = 1;
    v11 = v7;
  }
  else
  {
    type metadata accessor for TensorDescription();
    v8 = OUTLINED_FUNCTION_15();
  }
  return __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
}

uint64_t sub_22A9E7864@<X0>(uint64_t a1@<X8>)
{
  return sub_22A9E78A0(&qword_255B0F288, (uint64_t (*)(_QWORD))MEMORY[0x24BE63098], a1);
}

uint64_t sub_22A9E7878@<X0>(uint64_t a1@<X8>)
{
  return sub_22A9E78A0(&qword_255B0F280, (uint64_t (*)(_QWORD))MEMORY[0x24BE62F58], a1);
}

uint64_t sub_22A9E788C@<X0>(uint64_t a1@<X8>)
{
  return sub_22A9E78A0(&qword_255B0F298, (uint64_t (*)(_QWORD))MEMORY[0x24BE62580], a1);
}

uint64_t sub_22A9E78A0@<X0>(uint64_t *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_60_5();
  v6 = sub_22AA03688();
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_130();
    __swift_instantiateConcreteTypeFromMangledName(a1);
    sub_22ABDFA64();
    swift_bridgeObjectRelease();
    v9 = *(_QWORD *)(v16 + 56);
    v10 = a2(0);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a3, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v6, v10);
    sub_22ABDFA7C();
    OUTLINED_FUNCTION_131();
    return __swift_storeEnumTagSinglePayload(a3, 0, 1, v10);
  }
  else
  {
    a2(0);
    v12 = OUTLINED_FUNCTION_15();
    return __swift_storeEnumTagSinglePayload(v12, v13, v14, v15);
  }
}

void sub_22A9E79D0(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;

  v4 = v3;
  v8 = *v4;
  OUTLINED_FUNCTION_47_3();
  sub_22AA03684(a1, a2);
  OUTLINED_FUNCTION_71_2();
  if ((v8 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_91_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8670);
    OUTLINED_FUNCTION_45_6();
    OUTLINED_FUNCTION_51_6();
    OUTLINED_FUNCTION_109_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
    sub_22A9ADA0C();
    sub_22ABDFA7C();
    *v4 = v8;
    OUTLINED_FUNCTION_61_4();
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
    OUTLINED_FUNCTION_101_0();
  }
}

uint64_t sub_22A9E7A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unsigned int *v3;

  if (OUTLINED_FUNCTION_70_2())
  {
    result = OUTLINED_FUNCTION_128();
    if (__OFSUB__(v0, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    v3 = (unsigned int *)(v1 + v0 - result);
  }
  else
  {
    v3 = 0;
  }
  result = sub_22ABDCF38();
  if (v3)
    return *v3;
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_22A9E7AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (OUTLINED_FUNCTION_70_2())
  {
    result = OUTLINED_FUNCTION_128();
    if (__OFSUB__(v0, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    v3 = v1 + v0 - result;
  }
  else
  {
    v3 = 0;
  }
  result = sub_22ABDCF38();
  if (!v3)
LABEL_8:
    __break(1u);
  return result;
}

uint64_t sub_22A9E7B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (OUTLINED_FUNCTION_70_2())
  {
    result = OUTLINED_FUNCTION_128();
    if (__OFSUB__(v0, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    v3 = v1 + v0 - result;
  }
  else
  {
    v3 = 0;
  }
  result = sub_22ABDCF38();
  if (!v3)
LABEL_8:
    __break(1u);
  return result;
}

unint64_t sub_22A9E7B94()
{
  unint64_t result;

  result = qword_2540E8298;
  if (!qword_2540E8298)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABFBBD8, &type metadata for ShapedArrayReference);
    atomic_store(result, (unint64_t *)&qword_2540E8298);
  }
  return result;
}

unint64_t sub_22A9E7BD0()
{
  unint64_t result;

  result = qword_255B101E8;
  if (!qword_255B101E8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABFA864, &type metadata for DataReference);
    atomic_store(result, (unint64_t *)&qword_255B101E8);
  }
  return result;
}

unint64_t sub_22A9E7C0C()
{
  unint64_t result;

  result = qword_255B101F0;
  if (!qword_255B101F0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABFA83C, &type metadata for InlineData);
    atomic_store(result, (unint64_t *)&qword_255B101F0);
  }
  return result;
}

uint64_t sub_22A9E7C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22A9E7C90()
{
  unint64_t result;

  result = qword_2540E84A0[0];
  if (!qword_2540E84A0[0])
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6FC0, &type metadata for _JSONKey);
    atomic_store(result, qword_2540E84A0);
  }
  return result;
}

uint64_t sub_22A9E7CCC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_22A9E7CF0(_QWORD *a1)
{
  if (!*a1)
  {
    _s19IntermediateDecoderCMa();
    OUTLINED_FUNCTION_61();
  }
  OUTLINED_FUNCTION_0_5();
}

unint64_t sub_22A9E7D20()
{
  unint64_t result;

  result = qword_2540E7DA8;
  if (!qword_2540E7DA8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABFDB84, &_s16UnkeyedContainerVN_0);
    atomic_store(result, (unint64_t *)&qword_2540E7DA8);
  }
  return result;
}

uint64_t sub_22A9E7D5C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22A9E7D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TensorDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_20(uint64_t a1, unint64_t *a2)
{
  return sub_22A9BEDCC(0, a2);
}

uint64_t OUTLINED_FUNCTION_3_21()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_4_14()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_5_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_6_21()
{
  return sub_22ABDF830();
}

uint64_t OUTLINED_FUNCTION_7_20()
{
  uint64_t v0;
  unint64_t v1;

  return sub_22A9D1570(v0, v1);
}

uint64_t OUTLINED_FUNCTION_8_16()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_9_20(uint64_t a1)
{
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_10_12()
{
  return sub_22ABDF824();
}

uint64_t OUTLINED_FUNCTION_11_20()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_12_16()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_13_18()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_14_14(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_22A9E7618(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_16_14()
{
  return sub_22ABDEAEC();
}

void OUTLINED_FUNCTION_17_10()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_18_12(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  return sub_22AAABA2C(a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_19_13()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_20_13()
{
  return sub_22ABDF560();
}

uint64_t OUTLINED_FUNCTION_22_11()
{
  return sub_22ABDF824();
}

uint64_t OUTLINED_FUNCTION_24_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

double OUTLINED_FUNCTION_29_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10)
{
  uint64_t v10;

  return sub_22ABBFDF4(*(_QWORD *)(v10 + 16), &a10);
}

uint64_t OUTLINED_FUNCTION_30_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

id OUTLINED_FUNCTION_31_6(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_33_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return sub_22A9E7618(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_34_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_35_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22A9E7618(v2, a2);
}

uint64_t OUTLINED_FUNCTION_38_7()
{
  return sub_22ABDE834();
}

uint64_t OUTLINED_FUNCTION_39_7()
{
  return sub_22ABDED50();
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  return sub_22ABDF7A0();
}

void OUTLINED_FUNCTION_42_5()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_43_4()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_44_6()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_45_6()
{
  return sub_22ABDFA64();
}

void OUTLINED_FUNCTION_46_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

}

uint64_t OUTLINED_FUNCTION_47_4(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_22A9E7618(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return sub_22ABDD184();
}

uint64_t OUTLINED_FUNCTION_51_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_52_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(v2, v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_53_5()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_54_4()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_60_5()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_61_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_62_4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  return sub_22AAABA2C(a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_63_4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  return sub_22AAABA2C(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_65_4()
{
  return sub_22ABDE864();
}

uint64_t OUTLINED_FUNCTION_66_5()
{
  return sub_22ABDE864();
}

uint64_t OUTLINED_FUNCTION_67_4()
{
  return swift_retain();
}

double OUTLINED_FUNCTION_68_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12)
{
  uint64_t v12;

  return sub_22ABBFDF4(*(_QWORD *)(v12 + 16), &a12);
}

uint64_t OUTLINED_FUNCTION_69_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_70_2()
{
  return sub_22ABDCF2C();
}

uint64_t OUTLINED_FUNCTION_71_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_72_2()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_74_2()
{
  uint64_t v0;
  uint64_t v1;

  sub_22A9E1240(v0, v1);
}

uint64_t OUTLINED_FUNCTION_75_3()
{
  return sub_22ABDEAEC();
}

id OUTLINED_FUNCTION_76_3(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

void OUTLINED_FUNCTION_77_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

}

uint64_t OUTLINED_FUNCTION_79_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_81_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_84_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_86_2(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return sub_22A9E7618(v2, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_87_2()
{
  uint64_t v0;
  unint64_t v1;

  return sub_22A9D14F0(v0, v1);
}

void OUTLINED_FUNCTION_88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v2 = *(uint64_t **)(v1 - 176);
  v2[3] = v0;
  __swift_allocate_boxed_opaque_existential_1Tm(v2);
}

uint64_t OUTLINED_FUNCTION_89()
{
  return sub_22ABDEDC8();
}

char *OUTLINED_FUNCTION_90_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  return &a14;
}

void OUTLINED_FUNCTION_91_0()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

_OWORD *OUTLINED_FUNCTION_92_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __int128 a18)
{
  return sub_22A9C38BC(&a12, &a18);
}

_OWORD *OUTLINED_FUNCTION_93_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12)
{
  uint64_t v12;

  return sub_22A9C38BC(&a12, (_OWORD *)(v12 - 64));
}

_QWORD *OUTLINED_FUNCTION_94_0(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_22A9E4F64(v3, a2, a3);
}

_QWORD *OUTLINED_FUNCTION_95()
{
  uint64_t v0;

  return sub_22A9E4EC0(v0);
}

uint64_t OUTLINED_FUNCTION_98_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_22A9E7618(a1, (uint64_t)va);
}

void OUTLINED_FUNCTION_99_0()
{
  unint64_t v0;

  sub_22AB5E044(v0);
}

uint64_t OUTLINED_FUNCTION_102_0()
{
  return swift_beginAccess();
}

void *OUTLINED_FUNCTION_103_0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char __dst)
{
  uint64_t v16;

  return memcpy(&__dst, (const void *)(v16 + 24), 0x58uLL);
}

void *OUTLINED_FUNCTION_104_0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char __dst)
{
  uint64_t v14;

  return memcpy(&__dst, (const void *)(v14 + 24), 0x58uLL);
}

uint64_t OUTLINED_FUNCTION_106_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

double OUTLINED_FUNCTION_108_0()
{
  uint64_t v0;
  double result;
  _OWORD *v2;

  result = 0.0;
  v2 = *(_OWORD **)(v0 - 176);
  *v2 = 0u;
  v2[1] = 0u;
  return result;
}

_OWORD *OUTLINED_FUNCTION_109_0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;

  return sub_22A9C38BC((_OWORD *)(*(_QWORD *)(v0 + 56) + 32 * v2), v1);
}

uint64_t OUTLINED_FUNCTION_111_0()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_112_0()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_113_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_119()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_121()
{
  return sub_22ABDE858();
}

uint64_t OUTLINED_FUNCTION_122(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return sub_22A9E7618(v2, (uint64_t)va);
}

void OUTLINED_FUNCTION_123(_QWORD *a1)
{
  uint64_t *v1;

  sub_22A9A0B88(a1, v1);
}

uint64_t OUTLINED_FUNCTION_124()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_125(_QWORD *a1)
{
  uint64_t *v1;

  sub_22A9A0B88(a1, v1);
}

uint64_t OUTLINED_FUNCTION_126()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_127()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_128()
{
  return sub_22ABDCF44();
}

uint64_t OUTLINED_FUNCTION_129()
{
  return 1953384789;
}

void OUTLINED_FUNCTION_130()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_131()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_132(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t (*v5)(char *);
  va_list va;

  va_start(va, a5);
  return v5(va);
}

uint64_t OUTLINED_FUNCTION_134()
{
  return sub_22ABDD1E4();
}

uint64_t OUTLINED_FUNCTION_135()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_136()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_138()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_139()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_140()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_141()
{
  _QWORD *v0;

  return sub_22A9F4EC4(v0);
}

uint64_t sub_22A9E84C0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = result;
  v8 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v10 = *(_QWORD *)(a3 + 16);
  v11 = v10 - v8;
  if (__OFSUB__(v10, v8))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (__OFADD__(v6, v11))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v6 + v11 > *(_QWORD *)(v5 + 24) >> 1)
  {
    sub_22AA35FF0();
    v5 = v12;
  }
  v13 = v5 + 32 + 40 * v7;
  result = swift_arrayDestroy();
  if (!v11)
    goto LABEL_13;
  v14 = *(_QWORD *)(v5 + 16);
  if (__OFSUB__(v14, a2))
    goto LABEL_22;
  result = (uint64_t)sub_22AA37CA8((char *)(v5 + 32 + 40 * a2), v14 - a2, (char *)(v13 + 40 * v10));
  v15 = *(_QWORD *)(v5 + 16);
  v16 = __OFADD__(v15, v11);
  v17 = v15 + v11;
  if (v16)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *(_QWORD *)(v5 + 16) = v17;
LABEL_13:
  if (!v10)
  {
LABEL_16:
    result = OUTLINED_FUNCTION_23();
    *v3 = v5;
    return result;
  }
  if (*(_QWORD *)(a3 + 16) == v10)
  {
    swift_arrayInitWithCopy();
    goto LABEL_16;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_22A9E8604(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, v8))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v7 > *(_QWORD *)(v4 + 24) >> 1)
  {
    sub_22AA35FF0();
    v4 = v9;
  }
  v10 = (char *)(v4 + 32 + 40 * v6);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_13;
  v11 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v11, a2))
    goto LABEL_19;
  result = (uint64_t)sub_22AA37CA8((char *)(v4 + 32 + 40 * a2), v11 - a2, v10);
  v12 = *(_QWORD *)(v4 + 16);
  v13 = __OFADD__(v12, v8);
  v14 = v12 - v7;
  if (!v13)
  {
    *(_QWORD *)(v4 + 16) = v14;
LABEL_13:
    *v2 = v4;
    return result;
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_22A9E8708(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_14;
  }
  else
  {
    sub_22AA362A0();
    v4 = v10;
    if (!v8)
    {
LABEL_14:
      *v2 = v4;
      return;
    }
  }
  v11 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v11, a2))
    goto LABEL_20;
  sub_22AA37B90((char *)(v4 + 32 + 4 * a2), v11 - a2, (char *)(v4 + 32 + 4 * a1));
  v12 = *(_QWORD *)(v4 + 16);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *(_QWORD *)(v4 + 16) = v14;
    goto LABEL_14;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_22A9E87F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!(*v4 >> 62))
    {
      v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  OUTLINED_FUNCTION_47_3();
  v9 = sub_22ABDFB60();
  OUTLINED_FUNCTION_51_1();
LABEL_4:
  if (v9 < v5)
  {
    __break(1u);
    goto LABEL_32;
  }
  v10 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v7 = *v4;
  if (!(*v4 >> 62))
  {
    v11 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_34:
  OUTLINED_FUNCTION_47_3();
  v11 = sub_22ABDFB60();
  OUTLINED_FUNCTION_51_1();
LABEL_9:
  v12 = v11 + v8;
  if (__OFADD__(v11, v8))
  {
    __break(1u);
LABEL_36:
    OUTLINED_FUNCTION_47_3();
    v15 = sub_22ABDFB60();
    OUTLINED_FUNCTION_51_1();
    goto LABEL_17;
  }
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v7;
  v11 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v14 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v12 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_20;
    v11 = 1;
  }
  if (v7 >> 62)
    goto LABEL_36;
  v15 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  if (v15 <= v12)
    v15 = v12;
  OUTLINED_FUNCTION_47_3();
  v7 = MEMORY[0x22E2E3AA8](v11, v15, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v14 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_20:
  v16 = v14 + 32 + 8 * v6;
  sub_22A9EB690();
  swift_arrayDestroy();
  if (!v8)
  {
LABEL_28:
    *(_QWORD *)v16 = v3;
    return sub_22ABDF014();
  }
  if (v7 >> 62)
  {
    OUTLINED_FUNCTION_47_3();
    v17 = sub_22ABDFB60();
    OUTLINED_FUNCTION_51_1();
  }
  else
  {
    v17 = *(_QWORD *)(v14 + 16);
  }
  if (__OFSUB__(v17, v5))
  {
    __break(1u);
  }
  else
  {
    result = (uint64_t)sub_22AA37AD8((char *)(v14 + 32 + 8 * v5), v17 - v5, (char *)(v16 + 8));
    if (!(v7 >> 62))
    {
      v19 = *(_QWORD *)(v14 + 16);
      goto LABEL_26;
    }
  }
  OUTLINED_FUNCTION_47_3();
  v19 = sub_22ABDFB60();
  result = OUTLINED_FUNCTION_51_1();
LABEL_26:
  if (!__OFADD__(v19, v8))
  {
    *(_QWORD *)(v14 + 16) = v19 + v8;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_22A9E8A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)(v7 + 312) = a4;
  *(_QWORD *)(v7 + 320) = a5;
  *(_QWORD *)(v7 + 296) = a2;
  *(_QWORD *)(v7 + 304) = a3;
  *(_QWORD *)(v7 + 288) = a1;
  v9 = a6[2];
  *(_QWORD *)(v7 + 328) = v9;
  *(_QWORD *)(v7 + 336) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 344) = OUTLINED_FUNCTION_28_7();
  *(_QWORD *)(v7 + 352) = OUTLINED_FUNCTION_29_8();
  *(_QWORD *)(v7 + 360) = OUTLINED_FUNCTION_29_8();
  v10 = a6[3];
  *(_QWORD *)(v7 + 368) = v10;
  *(_QWORD *)(v7 + 376) = a6[4];
  v11 = OUTLINED_FUNCTION_91_1();
  *(_QWORD *)(v7 + 384) = _s5StateOMa(v11, v12, v13, v14);
  *(_QWORD *)(v7 + 392) = OUTLINED_FUNCTION_0_0();
  v15 = OUTLINED_FUNCTION_91_1();
  v19 = type metadata accessor for MultivariateLinearRegressor.Model(v15, v16, v17, v18);
  *(_QWORD *)(v7 + 400) = v19;
  *(_QWORD *)(v7 + 408) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v7 + 416) = OUTLINED_FUNCTION_0_0();
  v21 = type metadata accessor for AnnotatedBatch(255, v9, v10, v20);
  *(_QWORD *)(v7 + 424) = v21;
  v22 = sub_22ABDF5D8();
  *(_QWORD *)(v7 + 432) = v22;
  *(_QWORD *)(v7 + 440) = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v7 + 448) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v7 + 456) = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v7 + 464) = OUTLINED_FUNCTION_0_0();
  v23 = sub_22ABDF5D8();
  *(_QWORD *)(v7 + 472) = v23;
  *(_QWORD *)(v7 + 480) = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v7 + 488) = OUTLINED_FUNCTION_2_21();
  *(_QWORD *)(v7 + 496) = OUTLINED_FUNCTION_5_17();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10218);
  *(_QWORD *)(v7 + 504) = v24;
  *(_QWORD *)(v7 + 512) = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v7 + 520) = OUTLINED_FUNCTION_0_0();
  v25 = sub_22ABDDA0C();
  *(_QWORD *)(v7 + 528) = v25;
  *(_QWORD *)(v7 + 536) = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v7 + 544) = OUTLINED_FUNCTION_2_21();
  *(_QWORD *)(v7 + 552) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v7 + 560) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v7 + 568) = OUTLINED_FUNCTION_5_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
  *(_QWORD *)(v7 + 576) = OUTLINED_FUNCTION_0_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  *(_QWORD *)(v7 + 584) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v7 + 592) = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
  *(_QWORD *)(v7 + 600) = OUTLINED_FUNCTION_0_0();
  v26 = sub_22ABDD544();
  *(_QWORD *)(v7 + 608) = v26;
  *(_QWORD *)(v7 + 616) = *(_QWORD *)(v26 - 8);
  *(_QWORD *)(v7 + 624) = OUTLINED_FUNCTION_0_0();
  v27 = sub_22ABDD538();
  *(_QWORD *)(v7 + 632) = v27;
  *(_QWORD *)(v7 + 640) = *(_QWORD *)(v27 - 8);
  *(_QWORD *)(v7 + 648) = OUTLINED_FUNCTION_0_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  *(_QWORD *)(v7 + 656) = OUTLINED_FUNCTION_2_21();
  *(_QWORD *)(v7 + 664) = OUTLINED_FUNCTION_5_17();
  v28 = sub_22ABDD7D8();
  *(_QWORD *)(v7 + 672) = v28;
  *(_QWORD *)(v7 + 680) = *(_QWORD *)(v28 - 8);
  *(_QWORD *)(v7 + 688) = OUTLINED_FUNCTION_2_21();
  *(_QWORD *)(v7 + 696) = OUTLINED_FUNCTION_5_17();
  v29 = sub_22ABDE8A0();
  *(_QWORD *)(v7 + 704) = v29;
  *(_QWORD *)(v7 + 712) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(v7 + 720) = OUTLINED_FUNCTION_0_0();
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  *(_QWORD *)(v7 + 728) = v30;
  *(_QWORD *)(v7 + 736) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(v7 + 744) = OUTLINED_FUNCTION_27_12();
  *(_QWORD *)(v7 + 752) = OUTLINED_FUNCTION_27_12();
  *(_QWORD *)(v7 + 760) = OUTLINED_FUNCTION_27_12();
  *(_OWORD *)(v7 + 768) = *(_OWORD *)v6;
  *(_DWORD *)(v7 + 868) = *(_DWORD *)(v6 + 16);
  *(_QWORD *)(v7 + 784) = *(_QWORD *)(v6 + 24);
  *(_DWORD *)(v7 + 872) = *(_DWORD *)(v6 + 32);
  *(_QWORD *)(v7 + 792) = *(_QWORD *)(v6 + 40);
  *(_BYTE *)(v7 + 884) = *(_BYTE *)(v6 + 48);
  return OUTLINED_FUNCTION_4();
}

void sub_22A9E8CF4()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumTagSinglePayload;
  uint64_t v33;
  float v34;
  float v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  BOOL v64;
  int64_t v65;
  unint64_t v66;
  uint64_t v67;
  int64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_QWORD);
  unint64_t v89;
  int64_t v90;
  uint64_t v91;
  __n128 *inited;
  double v93;
  uint64_t v94;
  uint64_t v95;
  _BOOL4 v96;
  void (*v97)(_QWORD);
  uint64_t v98;
  float v99;
  float v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __n128 *v109;
  _QWORD *v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v179)(uint64_t, uint64_t, uint64_t);
  int64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(_QWORD);
  uint64_t v191;
  int64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  v2 = OUTLINED_FUNCTION_71_3();
  v3 = OUTLINED_FUNCTION_42_6(v2);
  v5 = v4;
  OUTLINED_FUNCTION_3_8();
  *(_QWORD *)(v0 + 800) = v3;
  if ((v5 & 1) != 0)
    goto LABEL_66;
  v6 = *(_QWORD *)(v0 + 296) + *(int *)(*(_QWORD *)(v0 + 424) + 36);
  v7 = sub_22ABDE84C();
  v8 = OUTLINED_FUNCTION_42_6(v7);
  v10 = v9;
  OUTLINED_FUNCTION_3_8();
  *(_QWORD *)(v0 + 808) = v8;
  if ((v10 & 1) == 0)
  {
    v11 = OUTLINED_FUNCTION_71_3();
    v12 = 1;
    sub_22A9A6674(1, v11);
    v16 = (v15 >> 1) - v14;
    if (v15 >> 1 == v14)
    {
LABEL_8:
      *(_QWORD *)(v0 + 816) = v12;
      v20 = *(_QWORD *)(v0 + 720);
      v181 = v3;
      v21 = *(_QWORD *)(v0 + 712);
      v22 = *(_QWORD *)(v0 + 704);
      v194 = *(_QWORD *)(v0 + 664);
      v197 = *(_QWORD *)(v0 + 632);
      v185 = v6;
      v23 = *(_QWORD *)(v0 + 296);
      swift_unknownObjectRelease();
      v179 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
      OUTLINED_FUNCTION_38_8(v20, v23, v179);
      v24 = MEMORY[0x24BDBFCD0];
      *(_QWORD *)(v0 + 824) = sub_22A9C8D60((unint64_t *)&qword_255B0DAF8, &qword_2540E8568, MEMORY[0x24BDBFCD0]);
      MEMORY[0x22E2E4D80](v24, v22);
      OUTLINED_FUNCTION_14_15();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
      v25 = OUTLINED_FUNCTION_33_2();
      *(_OWORD *)(v25 + 16) = xmmword_22ABE9FB0;
      *(_QWORD *)(v25 + 32) = v12;
      *(_QWORD *)(v25 + 40) = v181;
      OUTLINED_FUNCTION_52_7();
      v179(v20, v185, v22);
      OUTLINED_FUNCTION_14_15();
      v26 = OUTLINED_FUNCTION_33_2();
      *(_OWORD *)(v26 + 16) = xmmword_22ABE9FB0;
      *(_QWORD *)(v26 + 32) = v12;
      *(_QWORD *)(v26 + 40) = v8;
      OUTLINED_FUNCTION_52_7();
      OUTLINED_FUNCTION_33_9();
      OUTLINED_FUNCTION_11_14(v194, v27, v28, v197);
      sub_22ABDD5E0();
      sub_22A9AD754(v194, &qword_255B0DE30);
      if (v1 < 0.0)
      {
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      v29 = *(_QWORD *)(v0 + 664);
      v30 = *(_QWORD *)(v0 + 656);
      v31 = *(_QWORD *)(v0 + 632);
      OUTLINED_FUNCTION_48_6(v29);
      sub_22ABDD5EC();
      sub_22A9AD754(v29, &qword_255B0DE30);
      sub_22ABDD7C0();
      sub_22ABDD520();
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v30, 1, v31);
      v33 = *(_QWORD *)(v0 + 656);
      if (EnumTagSinglePayload == 1)
      {
        sub_22ABDD514();
        sub_22A9AD754(v33, &qword_255B0DE30);
      }
      else
      {
        OUTLINED_FUNCTION_65_5(*(_QWORD *)(v0 + 648), *(_QWORD *)(v0 + 640));
      }
      v34 = *(float *)(v0 + 872);
      v35 = *(float *)(v0 + 868);
      v198 = *(_QWORD *)(v0 + 776);
      v201 = *(_QWORD *)(v0 + 784);
      v176 = v0;
      v36 = *(_QWORD *)(v0 + 648);
      v37 = *(_QWORD *)(v0 + 640);
      v38 = *(_QWORD *)(v0 + 632);
      v39 = *(_QWORD *)(v0 + 624);
      v40 = *(_QWORD *)(v0 + 616);
      v41 = *(_QWORD *)(v0 + 608);
      v188 = *(_QWORD *)(v0 + 584);
      v191 = *(_QWORD *)(v0 + 576);
      sub_22ABDD82C();
      v42 = v36;
      v43 = v0;
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v42, v38);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 104))(v39, *MEMORY[0x24BE6B9A0], v41);
      sub_22ABDD850();
      OUTLINED_FUNCTION_66_6(v39, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
      v44 = sub_22ABDD5D4();
      v47 = OUTLINED_FUNCTION_87_3(v188, v45, v46, v44);
      OUTLINED_FUNCTION_11_14(v191, v48, v49, v47);
      sub_22ABDD694();
      *(float *)(v0 + 876) = powf(0.00001 / v34, 1.0 / (float)v198);
      v50 = v35;
      sub_22AA0AEEC(v201, 0.0);
      *(double *)(v0 + 248) = v35;
      *(_QWORD *)(v0 + 256) = v51;
      *(_QWORD *)(v0 + 832) = v198 * v12;
      if ((unsigned __int128)(v198 * (__int128)v12) >> 64 != (v198 * v12) >> 63)
        goto LABEL_62;
      v52 = *(_QWORD *)(v0 + 776);
      sub_22AA362A0();
      *(_QWORD *)(v0 + 264) = v53;
      if (v52 < 0)
      {
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      v54 = *(_QWORD *)(v0 + 776);
      if (!v54)
      {
LABEL_53:
        OUTLINED_FUNCTION_3_8();
        OUTLINED_FUNCTION_1_20();
        OUTLINED_FUNCTION_9_21();
        OUTLINED_FUNCTION_13_19();
        OUTLINED_FUNCTION_36_4();
        OUTLINED_FUNCTION_22_12();
        OUTLINED_FUNCTION_55_6();
        v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10230);
        v131 = OUTLINED_FUNCTION_7_21(v123, v124, v125, v126, v127, v128, v129, v130, v157, v160, v163, v166, v169, v171, v172);
        OUTLINED_FUNCTION_50_7(v131, v132, v133, v134, v135, v136, v137, v138, v158, v161, v164, v167);
        v139 = OUTLINED_FUNCTION_21_14();
        OUTLINED_FUNCTION_18_13(v139, v140, v141, v142, v143, v144, v145, v146, v159, v162, v165, v168, v170);
        OUTLINED_FUNCTION_13_3();
        OUTLINED_FUNCTION_89_0();
        OUTLINED_FUNCTION_17();
        OUTLINED_FUNCTION_88_0();
        OUTLINED_FUNCTION_12_3();
        OUTLINED_FUNCTION_85_3();
        OUTLINED_FUNCTION_60_6();
        OUTLINED_FUNCTION_84_3();
        OUTLINED_FUNCTION_47_5();
        OUTLINED_FUNCTION_83_2();
        OUTLINED_FUNCTION_28_0();
        OUTLINED_FUNCTION_82_2();
        OUTLINED_FUNCTION_46_6();
        OUTLINED_FUNCTION_45_7();
        OUTLINED_FUNCTION_79_2();
        OUTLINED_FUNCTION_78_2();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        OUTLINED_FUNCTION_31();
        swift_task_dealloc();
        OUTLINED_FUNCTION_56_6();
        swift_task_dealloc();
        OUTLINED_FUNCTION_72_3();
        __asm { BR              X0 }
      }
      if (!*(_QWORD *)(v0 + 768))
        goto LABEL_64;
      v55 = 0;
      v175 = v0 + 152;
      v171 = v0 + 200;
      v172 = v0 + 96;
      v166 = v0 + 272;
      v56 = (uint64_t *)(v0 + 264);
      v174 = (uint64_t *)(v0 + 264);
      v169 = 0x800000022ABE2220;
      while (1)
      {
        *(_QWORD *)(v43 + 840) = v55;
        if (v55 == v54)
          break;
        v57 = *v56;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_22A9E8708(0, *(_QWORD *)(v57 + 16));
        }
        else
        {
          *v56 = (uint64_t)OUTLINED_FUNCTION_74_3(*(_QWORD *)(v57 + 24));
          OUTLINED_FUNCTION_2_1();
        }
        OUTLINED_FUNCTION_73_1();
        v60 = v59 >= 0;
        if (v61 > 0)
          v60 = v58;
        if (!v60)
        {
          v173 = v55;
          v62 = 0;
          while (1)
          {
            v63 = *(_QWORD *)(v43 + 768);
            v64 = __OFADD__(v62, v63);
            v65 = v62 + v63;
            v66 = v64 ? (v65 >> 63) ^ 0x8000000000000000 : v65;
            __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
            v67 = OUTLINED_FUNCTION_33_2();
            *(_OWORD *)(v67 + 16) = xmmword_22ABE9FB0;
            v68 = v62 + 1;
            if (__OFADD__(v62, 1))
              break;
            v69 = (_QWORD *)v67;
            v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
            v69[7] = v70;
            v71 = sub_22A9C8D60((unint64_t *)&qword_255B0EBA0, &qword_2540E85F8, MEMORY[0x24BDBFE50]);
            v69[8] = v71;
            if (v68 < v62)
              goto LABEL_56;
            v72 = v71;
            v73 = *(_QWORD *)(v43 + 800);
            v69[4] = v62;
            v69[5] = v68;
            v69[12] = v70;
            v69[13] = v71;
            if (v73 < 0)
              goto LABEL_57;
            v180 = v66;
            v199 = v62 + 1;
            v202 = *(_QWORD *)(v43 + 808);
            v192 = v62;
            v195 = *(_QWORD *)(v43 + 568);
            v74 = *(_QWORD *)(v43 + 560);
            v189 = *(_QWORD *)(v43 + 536);
            v75 = *(_QWORD *)(v43 + 528);
            v76 = *(_QWORD *)(v43 + 520);
            v183 = *(_QWORD *)(v43 + 504);
            v186 = *(_QWORD *)(v43 + 512);
            v69[9] = 0;
            v69[10] = v73;
            sub_22ABDE96C();
            OUTLINED_FUNCTION_58_1();
            v77 = v74;
            sub_22A9C8D60(&qword_255B10228, &qword_255B10218, MEMORY[0x24BDBFD50]);
            sub_22ABDE8F4();
            v78 = *(void (**)(uint64_t, uint64_t))(v186 + 8);
            v78(v76, v183);
            v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 32);
            v79(v195, v77, v75);
            v80 = OUTLINED_FUNCTION_33_2();
            *(_OWORD *)(v80 + 16) = xmmword_22ABE9FB0;
            *(_QWORD *)(v80 + 56) = v70;
            *(_QWORD *)(v80 + 64) = v72;
            *(_QWORD *)(v80 + 32) = v192;
            *(_QWORD *)(v80 + 40) = v199;
            *(_QWORD *)(v80 + 96) = v70;
            *(_QWORD *)(v80 + 104) = v72;
            if (v202 < 0)
              goto LABEL_58;
            v184 = *(_QWORD *)(v43 + 688);
            v187 = *(_QWORD *)(v43 + 696);
            v182 = *(_QWORD *)(v43 + 680);
            v81 = *(_QWORD *)(v43 + 672);
            v193 = *(_QWORD *)(v43 + 568);
            v178 = v79;
            v82 = *(_QWORD *)(v43 + 560);
            v177 = *(_QWORD *)(v43 + 552);
            v190 = *(void (**)(_QWORD))(v43 + 544);
            v203 = *(_QWORD *)(v43 + 536);
            v83 = *(_QWORD *)(v43 + 528);
            v84 = *(_QWORD *)(v43 + 520);
            v85 = *(_QWORD *)(v43 + 504);
            OUTLINED_FUNCTION_51_7(v80, *(_QWORD *)(v43 + 808));
            OUTLINED_FUNCTION_58_1();
            sub_22ABDE8F4();
            v78(v84, v85);
            v86 = v83;
            v178(v177, v82, v83);
            v40 = v187;
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v182 + 16))(v184, v187, v81);
            v87 = swift_task_alloc();
            *(_QWORD *)(v87 + 16) = v193;
            *(_QWORD *)(v87 + 24) = v177;
            sub_22ABDD580();
            OUTLINED_FUNCTION_28_0();
            (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v184, v81);
            sub_22ABDD6AC();
            OUTLINED_FUNCTION_2_1();
            v88 = v190;
            sub_22ABDD9AC();
            (*(void (**)(void (*)(_QWORD), uint64_t))(v203 + 8))(v190, v86);
            LODWORD(v50) = *(_DWORD *)(v43 + 864);
            if ((OUTLINED_FUNCTION_31_7() & 1) == 0)
            {
              OUTLINED_FUNCTION_17_11();
              v88 = v97;
            }
            v89 = *((_QWORD *)v88 + 2);
            v90 = v89 + 1;
            if (v89 >= *((_QWORD *)v88 + 3) >> 1)
              OUTLINED_FUNCTION_17_11();
            OUTLINED_FUNCTION_44_7();
            if (v91)
            {
              OUTLINED_FUNCTION_20_14();
              sub_22ABDD6A0();
              __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E240);
              inited = (__n128 *)swift_initStackObject();
              v93 = OUTLINED_FUNCTION_4_15(inited, (__n128)xmmword_22ABE8E30);
              *(_QWORD *)(v94 + 72) = MEMORY[0x24BEE13C8];
              *(double *)(v94 + 48) = v93;
              __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
              sub_22A9ADA0C();
              v95 = sub_22ABDEAC8();
              v40 = 0x800000022ABE2220;
              OUTLINED_FUNCTION_63_5(v95, 0xD00000000000001BLL);
              v190(v175);
              OUTLINED_FUNCTION_53_6();
              OUTLINED_FUNCTION_2_1();
            }
            OUTLINED_FUNCTION_15_12();
            OUTLINED_FUNCTION_69_4();
            v62 = v180;
            v96 = v90 >= v180;
            if ((uint64_t)v190 > 0)
              v96 = v180 >= v90;
            if (v96)
            {
              v55 = v173;
              v56 = v174;
              goto LABEL_42;
            }
          }
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
LABEL_42:
        v98 = *(_QWORD *)(*v56 + 16);
        if (v98)
          v99 = sub_22A9F6344(*v56) / (float)v98;
        else
          v99 = 0.0;
        v100 = OUTLINED_FUNCTION_59_4(v99);
        v101 = *(_QWORD *)(v43 + 440);
        v102 = *(_QWORD *)(v43 + 448);
        v103 = *(_QWORD *)(v43 + 424);
        *(float *)v40 = *(float *)&v50 * powf(v100, (float)v55);
        OUTLINED_FUNCTION_58_4(v102, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 16));
        if (__swift_getEnumTagSinglePayload(v102, 1, v103) != 1)
        {
          OUTLINED_FUNCTION_10_13();
          v204 = v149;
          v205 = v148;
          v196 = *(_QWORD *)(v43 + 328);
          v200 = *(_QWORD *)(v43 + 368);
          OUTLINED_FUNCTION_40_6(v150, v151);
          __swift_instantiateConcreteTypeFromMangledName(&qword_255B10230);
          OUTLINED_FUNCTION_11_21();
          OUTLINED_FUNCTION_62_5();
          OUTLINED_FUNCTION_21_14();
          sub_22ABBFF08(v101, v196, v200, v205, v204);
          v152 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v43 + 848) = v152;
          OUTLINED_FUNCTION_26_7(v152, (uint64_t)sub_22A9E9B34);
          OUTLINED_FUNCTION_72_3();
          sub_22ABBFF44(v153, v154, v155, v156);
          return;
        }
        v104 = *(_QWORD *)(v43 + 496);
        OUTLINED_FUNCTION_24_10();
        OUTLINED_FUNCTION_49_6(v104);
        v105 = *(_QWORD *)(v43 + 312);
        if (v105)
        {
          LODWORD(v50) = *(_DWORD *)(v43 + 880);
          v106 = *(_QWORD *)(v43 + 488);
          v107 = *(_QWORD *)(v43 + 496);
          v108 = *(_QWORD *)(v176 + 480);
          __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F260);
          v109 = (__n128 *)swift_initStackObject();
          OUTLINED_FUNCTION_3_22(v109, (__n128)xmmword_22ABE8E30);
          sub_22A9A9840(v105);
          sub_22A9ADA0C();
          v110 = (_QWORD *)sub_22ABDEAC8();
          OUTLINED_FUNCTION_37_7(v106, v107, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 16));
          v111 = OUTLINED_FUNCTION_86_3(v106);
          v112 = *(_QWORD *)(v176 + 488);
          if (v111 == 1)
          {
            OUTLINED_FUNCTION_35_5(v112);
          }
          else
          {
            v113 = *(_QWORD *)(v176 + 344);
            v114 = *(_QWORD *)(v176 + 352);
            v115 = *(_QWORD *)(v176 + 328);
            v116 = *(_QWORD *)(v176 + 336);
            OUTLINED_FUNCTION_90_2(v113, v112);
            OUTLINED_FUNCTION_37_7(v114, v113, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 16));
            sub_22A99CE8C();
            sub_22ABDEA50();
            v50 = *(double *)(v176 + 272);
            swift_isUniquelyReferenced_nonNull_native();
            OUTLINED_FUNCTION_6_22();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v113, v115);
          }
          v117 = *(_QWORD *)(v176 + 832);
          v118 = *(_QWORD *)(v176 + 496);
          v119 = *(_QWORD *)(v176 + 480);
          v120 = *(_QWORD *)(v176 + 472);
          v40 = *(_QWORD *)(v176 + 320);
          v121 = *(_QWORD *)(v176 + 312);
          v122 = sub_22ABDD6A0();
          sub_22A9C2C80(v110);
          OUTLINED_FUNCTION_51_1();
          *(_QWORD *)(v176 + 200) = 0xD00000000000001BLL;
          *(_QWORD *)(v176 + 208) = 0x800000022ABE2220;
          *(_QWORD *)(v176 + 216) = v122;
          *(_QWORD *)(v176 + 224) = v117;
          v43 = v176;
          OUTLINED_FUNCTION_39_8();
          sub_22A9ADA48(v121);
          (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v118, v120);
          OUTLINED_FUNCTION_51_1();
          OUTLINED_FUNCTION_30();
          v56 = v174;
        }
        else
        {
          OUTLINED_FUNCTION_34_9();
        }
        v54 = *(_QWORD *)(v43 + 776);
        v55 = *(_QWORD *)(v43 + 840) + 1;
        if (v55 == v54)
          goto LABEL_53;
      }
    }
    else
    {
      if ((uint64_t)(v15 >> 1) <= v14)
      {
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      v17 = (uint64_t *)(v13 + 8 * v14);
      v18 = 1;
      while (1)
      {
        v19 = *v17++;
        v12 = v18 * v19;
        if ((unsigned __int128)(v18 * (__int128)v19) >> 64 != (v18 * v19) >> 63)
          break;
        v18 = v12;
        if (!--v16)
          goto LABEL_8;
      }
LABEL_59:
      __break(1u);
    }
    __break(1u);
    goto LABEL_61;
  }
LABEL_67:
  __break(1u);
}

uint64_t sub_22A9E9B34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 856) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22A9E9BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *inited;
  _QWORD *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  int64_t v32;
  uint64_t v33;
  BOOL v34;
  int64_t v35;
  unint64_t v36;
  uint64_t result;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  __n128 *v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  _BOOL4 v64;
  uint64_t v65;
  float v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t);
  uint64_t v130;
  int64_t v131;
  uint64_t v132;
  uint64_t v133;
  int64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;

  v121 = v0 + 152;
  v120 = (uint64_t *)(v0 + 264);
  v118 = v0 + 272;
  v2 = *(_QWORD *)(v0 + 840);
  v3 = *(_QWORD *)(v0 + 496);
  v138 = *(_QWORD *)(v0 + 456);
  v141 = *(_QWORD *)(v0 + 424);
  v146 = *(_QWORD *)(v0 + 464);
  v127 = *(_QWORD *)(v0 + 408);
  v130 = *(_QWORD *)(v0 + 400);
  v133 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 360);
  v7 = *(_QWORD *)(v0 + 336);
  OUTLINED_FUNCTION_64_4(v3);
  v8 = v3;
  v9 = v0;
  OUTLINED_FUNCTION_70_3(v8, 0);
  OUTLINED_FUNCTION_64_4(v6);
  v116 = sub_22A99CE8C();
  sub_22ABDEA50();
  sub_22AA3ABA4(v2, *(double *)(v0 + 280));
  v11 = v10;
  OUTLINED_FUNCTION_48_2(v5, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v133, v130);
  (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v146, v141);
  while (1)
  {
    v12 = *(_QWORD *)(v9 + 312);
    if (v12)
    {
      v142 = v11;
      LODWORD(v1) = *(_DWORD *)(v9 + 880);
      v14 = *(_QWORD *)(v9 + 488);
      v13 = *(_QWORD *)(v9 + 496);
      v15 = *(_QWORD *)(v9 + 480);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F260);
      inited = (__n128 *)swift_initStackObject();
      OUTLINED_FUNCTION_3_22(inited, (__n128)xmmword_22ABE8E30);
      sub_22A9A9840(v12);
      sub_22A9ADA0C();
      v17 = (_QWORD *)sub_22ABDEAC8();
      OUTLINED_FUNCTION_37_7(v14, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
      v18 = OUTLINED_FUNCTION_86_3(v14);
      v19 = *(_QWORD *)(v9 + 488);
      if (v18 == 1)
      {
        OUTLINED_FUNCTION_35_5(v19);
      }
      else
      {
        v21 = *(_QWORD *)(v9 + 344);
        v20 = *(_QWORD *)(v9 + 352);
        v22 = *(_QWORD *)(v9 + 336);
        OUTLINED_FUNCTION_90_2(v21, v19);
        OUTLINED_FUNCTION_37_7(v20, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
        sub_22ABDEA50();
        v1 = *(_QWORD *)(v9 + 272);
        swift_isUniquelyReferenced_nonNull_native();
        OUTLINED_FUNCTION_6_22();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_23_12(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
      }
      v23 = *(_QWORD *)(v9 + 832);
      v139 = *(_QWORD *)(v9 + 496);
      v4 = *(_QWORD *)(v9 + 480);
      v24 = *(_QWORD *)(v9 + 312);
      v7 = *(_QWORD *)(v9 + 320);
      v12 = sub_22ABDD6A0();
      sub_22A9C2C80(v17);
      OUTLINED_FUNCTION_23();
      *(_QWORD *)(v9 + 200) = 0xD00000000000001BLL;
      *(_QWORD *)(v9 + 208) = 0x800000022ABE2220;
      *(_QWORD *)(v9 + 216) = v12;
      *(_QWORD *)(v9 + 224) = v23;
      OUTLINED_FUNCTION_39_8();
      sub_22A9ADA48(v24);
      OUTLINED_FUNCTION_48_2(v139, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_30();
      if ((v142 & 1) != 0)
      {
LABEL_39:
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_1_20();
        OUTLINED_FUNCTION_9_21();
        OUTLINED_FUNCTION_13_19();
        OUTLINED_FUNCTION_36_4();
        OUTLINED_FUNCTION_22_12();
        OUTLINED_FUNCTION_55_6();
        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10230);
        v79 = OUTLINED_FUNCTION_7_21(v71, v72, v73, v74, v75, v76, v77, v78, v104, v107, v110, v113, v116, v118, (uint64_t)"l value instead.");
        OUTLINED_FUNCTION_50_7(v79, v80, v81, v82, v83, v84, v85, v86, v105, v108, v111, v114);
        v87 = OUTLINED_FUNCTION_21_14();
        OUTLINED_FUNCTION_18_13(v87, v88, v89, v90, v91, v92, v93, v94, v106, v109, v112, v115, v117);
        OUTLINED_FUNCTION_13_3();
        OUTLINED_FUNCTION_89_0();
        OUTLINED_FUNCTION_17();
        OUTLINED_FUNCTION_88_0();
        OUTLINED_FUNCTION_12_3();
        OUTLINED_FUNCTION_85_3();
        OUTLINED_FUNCTION_60_6();
        OUTLINED_FUNCTION_84_3();
        OUTLINED_FUNCTION_47_5();
        OUTLINED_FUNCTION_81_3();
        OUTLINED_FUNCTION_28_0();
        OUTLINED_FUNCTION_80_3();
        OUTLINED_FUNCTION_46_6();
        OUTLINED_FUNCTION_45_7();
        OUTLINED_FUNCTION_79_2();
        OUTLINED_FUNCTION_78_2();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        OUTLINED_FUNCTION_56_6();
        OUTLINED_FUNCTION_31();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v4 + 8))();
      }
    }
    else
    {
      OUTLINED_FUNCTION_34_9();
      if ((v11 & 1) != 0)
        goto LABEL_39;
    }
    v25 = *(_QWORD *)(v9 + 840) + 1;
    if (v25 == *(_QWORD *)(v9 + 776))
      goto LABEL_39;
    v119 = *(_QWORD *)(v9 + 840) + 1;
    *(_QWORD *)(v9 + 840) = v25;
    if (OUTLINED_FUNCTION_31_7())
    {
      sub_22A9E8708(0, *(_QWORD *)(v12 + 16));
    }
    else
    {
      *v120 = (uint64_t)OUTLINED_FUNCTION_74_3(*(_QWORD *)(v12 + 24));
      OUTLINED_FUNCTION_3_8();
    }
    OUTLINED_FUNCTION_73_1();
    v28 = v27 >= 0;
    if (v29 > 0)
      v28 = v26;
    if (!v28)
      break;
LABEL_16:
    v30 = *(_QWORD *)(*v120 + 16);
    if (v30)
      v31 = sub_22A9F6344(*v120) / (float)v30;
    else
      v31 = 0.0;
    v66 = OUTLINED_FUNCTION_59_4(v31);
    v68 = *(_QWORD *)(v9 + 440);
    v67 = *(_QWORD *)(v9 + 448);
    v69 = *(_QWORD *)(v9 + 424);
    *(float *)v7 = *(float *)&v1 * powf(v66, (float)v119);
    OUTLINED_FUNCTION_58_4(v67, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 16));
    if (__swift_getEnumTagSinglePayload(v67, 1, v69) != 1)
    {
      OUTLINED_FUNCTION_10_13();
      v145 = v96;
      v147 = v95;
      v137 = *(_QWORD *)(v9 + 328);
      v140 = *(_QWORD *)(v9 + 368);
      OUTLINED_FUNCTION_40_6(v97, v98);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10230);
      OUTLINED_FUNCTION_11_21();
      OUTLINED_FUNCTION_62_5();
      OUTLINED_FUNCTION_21_14();
      sub_22ABBFF08(v68, v137, v140, v147, v145);
      v99 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v9 + 848) = v99;
      v100 = OUTLINED_FUNCTION_26_7(v99, (uint64_t)sub_22A9E9B34);
      return sub_22ABBFF44(v100, v101, v102, v103);
    }
    v70 = *(_QWORD *)(v9 + 496);
    OUTLINED_FUNCTION_24_10();
    OUTLINED_FUNCTION_49_6(v70);
    v11 = 0;
  }
  v32 = 0;
  while (1)
  {
    v33 = *(_QWORD *)(v9 + 768);
    v34 = __OFADD__(v32, v33);
    v35 = v32 + v33;
    v36 = v34 ? (v35 >> 63) ^ 0x8000000000000000 : v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
    result = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(result + 16) = xmmword_22ABE9FB0;
    v38 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    v39 = (_QWORD *)result;
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
    v39[7] = v40;
    result = sub_22A9C8D60((unint64_t *)&qword_255B0EBA0, &qword_2540E85F8, MEMORY[0x24BDBFE50]);
    v39[8] = result;
    if (v38 < v32)
      goto LABEL_42;
    v41 = result;
    v42 = *(_QWORD *)(v9 + 800);
    v39[4] = v32;
    v39[5] = v38;
    v39[12] = v40;
    v39[13] = result;
    if (v42 < 0)
      goto LABEL_43;
    v125 = v36;
    v143 = *(_QWORD *)(v9 + 808);
    v134 = v32 + 1;
    v136 = *(_QWORD *)(v9 + 568);
    v43 = *(_QWORD *)(v9 + 560);
    v128 = *(_QWORD *)(v9 + 536);
    v131 = v32;
    v44 = *(_QWORD *)(v9 + 528);
    v45 = *(_QWORD *)(v9 + 520);
    v126 = *(_QWORD *)(v9 + 512);
    v46 = *(_QWORD *)(v9 + 504);
    v39[9] = 0;
    v39[10] = v42;
    sub_22ABDE96C();
    OUTLINED_FUNCTION_51_1();
    sub_22A9C8D60(&qword_255B10228, &qword_255B10218, MEMORY[0x24BDBFD50]);
    sub_22ABDE8F4();
    v47 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
    v47(v45, v46);
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 32);
    v48(v136, v43, v44);
    result = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(result + 16) = xmmword_22ABE9FB0;
    *(_QWORD *)(result + 56) = v40;
    *(_QWORD *)(result + 64) = v41;
    *(_QWORD *)(result + 32) = v131;
    *(_QWORD *)(result + 40) = v134;
    *(_QWORD *)(result + 96) = v40;
    *(_QWORD *)(result + 104) = v41;
    if (v143 < 0)
      goto LABEL_44;
    v129 = *(void (**)(uint64_t))(v9 + 696);
    v123 = *(_QWORD *)(v9 + 680);
    v124 = *(_QWORD *)(v9 + 688);
    v49 = *(_QWORD *)(v9 + 672);
    v135 = *(_QWORD *)(v9 + 568);
    v50 = *(_QWORD *)(v9 + 560);
    v122 = *(_QWORD *)(v9 + 552);
    v132 = *(_QWORD *)(v9 + 544);
    v144 = *(_QWORD *)(v9 + 536);
    v51 = *(_QWORD *)(v9 + 528);
    v52 = *(_QWORD *)(v9 + 520);
    v53 = *(_QWORD *)(v9 + 504);
    OUTLINED_FUNCTION_51_7(result, *(_QWORD *)(v9 + 808));
    OUTLINED_FUNCTION_30();
    sub_22ABDE8F4();
    v47(v52, v53);
    v54 = v51;
    v48(v122, v50, v51);
    v4 = v123;
    v7 = v124;
    (*(void (**)(uint64_t, void (*)(uint64_t), uint64_t))(v123 + 16))(v124, v129, v49);
    v55 = swift_task_alloc();
    *(_QWORD *)(v55 + 16) = v135;
    *(_QWORD *)(v55 + 24) = v122;
    sub_22ABDD580();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_66_6(v124, *(uint64_t (**)(uint64_t, uint64_t))(v123 + 8));
    sub_22ABDD6AC();
    OUTLINED_FUNCTION_2_1();
    v56 = v132;
    sub_22ABDD9AC();
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v132, v54);
    LODWORD(v1) = *(_DWORD *)(v9 + 864);
    if ((OUTLINED_FUNCTION_31_7() & 1) == 0)
    {
      OUTLINED_FUNCTION_17_11();
      v56 = v65;
    }
    v57 = *(_QWORD *)(v56 + 16);
    v58 = v57 + 1;
    if (v57 >= *(_QWORD *)(v56 + 24) >> 1)
      OUTLINED_FUNCTION_17_11();
    OUTLINED_FUNCTION_44_7();
    if (v59)
    {
      OUTLINED_FUNCTION_20_14();
      sub_22ABDD6A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E240);
      v60 = (__n128 *)swift_initStackObject();
      v61 = OUTLINED_FUNCTION_4_15(v60, (__n128)xmmword_22ABE8E30);
      *(_QWORD *)(v62 + 72) = MEMORY[0x24BEE13C8];
      *(double *)(v62 + 48) = v61;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
      sub_22A9ADA0C();
      v63 = sub_22ABDEAC8();
      v7 = 0x800000022ABE2220;
      OUTLINED_FUNCTION_63_5(v63, 0xD00000000000001BLL);
      v129(v121);
      OUTLINED_FUNCTION_53_6();
      OUTLINED_FUNCTION_2_1();
    }
    OUTLINED_FUNCTION_15_12();
    OUTLINED_FUNCTION_69_4();
    v32 = v125;
    v64 = v58 >= v125;
    if ((uint64_t)v129 > 0)
      v64 = v125 >= v58;
    if (v64)
      goto LABEL_16;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_22A9EA590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 760);
  v2 = *(_QWORD *)(v0 + 744);
  v13 = *(_QWORD *)(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 696);
  v5 = *(_QWORD *)(v0 + 680);
  v12 = *(_QWORD *)(v0 + 672);
  v6 = *(_QWORD *)(v0 + 600);
  v7 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 464);
  v9 = *(_QWORD *)(v0 + 424);
  (*(void (**)(void))(*(_QWORD *)(v0 + 408) + 8))();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  sub_22A9AD754(v6, &qword_255B10220);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v12);
  v10 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v10(v2, v3);
  v10(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_60_6();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_84_3();
  OUTLINED_FUNCTION_47_5();
  OUTLINED_FUNCTION_81_3();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_83_2();
  OUTLINED_FUNCTION_82_2();
  OUTLINED_FUNCTION_46_6();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  swift_task_dealloc();
  OUTLINED_FUNCTION_45_7();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9EA78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_22ABDDA0C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22ABDD7D8();
  sub_22ABDD7FC();
  sub_22ABDD574();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_22A9EA84C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v5 + 72) = a2;
  *(_QWORD *)(v5 + 80) = a3;
  *(_QWORD *)(v5 + 64) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
  *(_QWORD *)(v5 + 88) = OUTLINED_FUNCTION_0_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  *(_QWORD *)(v5 + 96) = OUTLINED_FUNCTION_0_0();
  v7 = sub_22ABDD544();
  *(_QWORD *)(v5 + 104) = v7;
  *(_QWORD *)(v5 + 112) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 120) = OUTLINED_FUNCTION_0_0();
  v8 = sub_22ABDD538();
  *(_QWORD *)(v5 + 128) = v8;
  *(_QWORD *)(v5 + 136) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 144) = OUTLINED_FUNCTION_0_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  *(_QWORD *)(v5 + 152) = OUTLINED_FUNCTION_28_7();
  *(_QWORD *)(v5 + 160) = OUTLINED_FUNCTION_29_8();
  v9 = a4[2];
  *(_QWORD *)(v5 + 168) = v9;
  v10 = a4[3];
  *(_QWORD *)(v5 + 176) = v10;
  v11 = sub_22ABDE8A0();
  *(_QWORD *)(v5 + 184) = v11;
  v12 = sub_22ABDF5D8();
  *(_QWORD *)(v5 + 192) = v12;
  *(_QWORD *)(v5 + 200) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v5 + 208) = OUTLINED_FUNCTION_0_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  *(_QWORD *)(v5 + 216) = OUTLINED_FUNCTION_0_0();
  v13 = sub_22ABDDA0C();
  *(_QWORD *)(v5 + 224) = v13;
  *(_QWORD *)(v5 + 232) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v5 + 240) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v5 + 248) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v5 + 256) = OUTLINED_FUNCTION_0_0();
  v14 = a4[4];
  *(_QWORD *)(v5 + 264) = v14;
  v15 = _s5StateOMa(0, v9, v10, v14);
  *(_QWORD *)(v5 + 272) = v15;
  *(_QWORD *)(v5 + 280) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v5 + 288) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v5 + 296) = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
  *(_QWORD *)(v5 + 304) = OUTLINED_FUNCTION_0_0();
  v16 = sub_22ABDD7D8();
  *(_QWORD *)(v5 + 312) = v16;
  *(_QWORD *)(v5 + 320) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v5 + 328) = OUTLINED_FUNCTION_27_12();
  v17 = OUTLINED_FUNCTION_27_12();
  *(_DWORD *)(v5 + 356) = *(_DWORD *)(v4 + 32);
  v18 = *(_QWORD *)(v4 + 40);
  *(_QWORD *)(v5 + 336) = v17;
  *(_QWORD *)(v5 + 344) = v18;
  *(_BYTE *)(v5 + 360) = *(_BYTE *)(v4 + 48);
  return swift_task_switch();
}

uint64_t sub_22A9EAA3C()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t inited;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int EnumTagSinglePayload;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;

  v2 = OUTLINED_FUNCTION_68_4();
  v3 = OUTLINED_FUNCTION_42_6(v2);
  v5 = v4;
  result = OUTLINED_FUNCTION_3_8();
  if ((v5 & 1) != 0)
    goto LABEL_22;
  type metadata accessor for AnnotatedBatch(0, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), v7);
  v8 = sub_22ABDE84C();
  v9 = OUTLINED_FUNCTION_42_6(v8);
  v11 = v10;
  result = OUTLINED_FUNCTION_3_8();
  if ((v11 & 1) == 0)
  {
    v12 = OUTLINED_FUNCTION_68_4();
    v13 = 1;
    result = sub_22A9A6674(1, v12);
    v17 = (v16 >> 1) - v15;
    if (v16 >> 1 != v15)
    {
      if ((uint64_t)(v16 >> 1) > v15)
      {
        v18 = (uint64_t *)(v14 + 8 * v15);
        v19 = 1;
        while (1)
        {
          v20 = *v18++;
          v13 = v19 * v20;
          if ((unsigned __int128)(v19 * (__int128)v20) >> 64 != (v19 * v20) >> 63)
            break;
          v19 = v13;
          if (!--v17)
            goto LABEL_8;
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_21;
    }
LABEL_8:
    v22 = *(_QWORD *)(v0 + 280);
    v21 = *(_QWORD *)(v0 + 288);
    v23 = *(_QWORD *)(v0 + 72);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_38_8(v21, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    v80 = v3;
    v81 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = *(_QWORD *)(v0 + 248);
      v25 = (uint64_t *)type metadata accessor for MultivariateLinearRegressor.Model(0, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 264));
      MultivariateLinearRegressor.Model.weight.getter(v25);
      v26 = (_QWORD *)sub_22ABDE84C();
      OUTLINED_FUNCTION_23_12(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_22ABE9FB0;
      *(_QWORD *)(inited + 32) = v9;
      *(_QWORD *)(inited + 40) = v3;
      v28 = sub_22A99EB90(v26, (_QWORD *)inited);
      swift_setDeallocating();
      OUTLINED_FUNCTION_3_8();
      if ((v28 & 1) != 0)
      {
        v30 = *(_QWORD *)(v0 + 256);
        v29 = *(_QWORD *)(v0 + 264);
        v31 = *(_QWORD *)(v0 + 240);
        v32 = *(_QWORD *)(v0 + 208);
        v79 = *(_QWORD *)(v0 + 200);
        v78 = *(_QWORD *)(v0 + 192);
        v33 = *(_QWORD *)(v0 + 168);
        v34 = *(_QWORD *)(v0 + 176);
        MultivariateLinearRegressor.Model.weight.getter(v25);
        sub_22AA5A180(v30, v33, v31);
        MultivariateLinearRegressor.Model.bias.getter(v25);
        v35 = (_QWORD *)swift_task_alloc();
        v35[2] = v33;
        v35[3] = v34;
        v35[4] = v29;
        sub_22A9D1D90();
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v32, v78);
        swift_task_dealloc();
        sub_22ABDD79C();
      }
      else
      {
        v42 = *(_QWORD *)(v0 + 160);
        OUTLINED_FUNCTION_33_9();
        OUTLINED_FUNCTION_70_3(v42, 1);
        sub_22ABDD5E0();
        result = sub_22A9AD754(v42, &qword_255B0DE30);
        if (v1 < 0.0)
        {
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        v43 = *(_QWORD *)(v0 + 152);
        v44 = *(_QWORD *)(v0 + 160);
        v45 = *(_QWORD *)(v0 + 128);
        OUTLINED_FUNCTION_48_6(v44);
        sub_22ABDD5EC();
        sub_22A9AD754(v44, &qword_255B0DE30);
        sub_22ABDD7C0();
        sub_22ABDD520();
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v43, 1, v45);
        v47 = *(_QWORD *)(v0 + 152);
        if (EnumTagSinglePayload == 1)
        {
          sub_22ABDD514();
          sub_22A9AD754(v47, &qword_255B0DE30);
        }
        else
        {
          OUTLINED_FUNCTION_65_5(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 136));
        }
        v49 = *(_QWORD *)(v0 + 136);
        v48 = *(_QWORD *)(v0 + 144);
        v50 = *(_QWORD *)(v0 + 120);
        v52 = *(_QWORD *)(v0 + 104);
        v51 = *(_QWORD *)(v0 + 112);
        sub_22ABDD82C();
        OUTLINED_FUNCTION_48_2(v48, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v51 + 104))(v50, *MEMORY[0x24BE6B9A0], v52);
        sub_22ABDD850();
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
      }
      v53 = *(_QWORD *)(v0 + 280);
      v54 = *(_QWORD *)(v0 + 88);
      v55 = *(_QWORD *)(v0 + 96);
      v56 = sub_22ABDD5D4();
      v59 = OUTLINED_FUNCTION_87_3(v55, v57, v58, v56);
      OUTLINED_FUNCTION_11_14(v54, v60, v61, v59);
      sub_22ABDD694();
      OUTLINED_FUNCTION_23_12(*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
    }
    else
    {
      v36 = *(_DWORD *)(v0 + 356);
      v37 = *(_QWORD *)(v0 + 336);
      v38 = *(_QWORD *)(v0 + 320);
      v39 = *(_DWORD **)(v0 + 304);
      v40 = *(_QWORD *)(v0 + 288);
      v41 = v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      OUTLINED_FUNCTION_38_8(v37, v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 32));
      sub_22A9EB5FC(v41, (uint64_t)v39);
      *v39 = v36;
    }
    v62 = *(_QWORD *)(v0 + 328);
    v63 = *(_QWORD *)(v0 + 336);
    v64 = *(_QWORD *)(v0 + 312);
    v65 = *(_QWORD *)(v0 + 320);
    v74 = *(_QWORD *)(v0 + 304);
    v66 = *(_QWORD *)(v0 + 264);
    v75 = *(_QWORD *)(v0 + 280);
    v72 = *(_QWORD *)(v0 + 240);
    v76 = *(_QWORD *)(v0 + 232);
    v77 = *(_QWORD *)(v0 + 224);
    v67 = *(_QWORD *)(v0 + 80);
    v68 = *(_QWORD *)(v0 + 72);
    v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 16);
    v82 = *(_OWORD *)(v0 + 168);
    OUTLINED_FUNCTION_38_8(v62, v63, v73);
    v69 = swift_task_alloc();
    *(_OWORD *)(v69 + 16) = v82;
    *(_QWORD *)(v69 + 32) = v66;
    *(_QWORD *)(v69 + 40) = v67;
    *(_QWORD *)(v69 + 48) = v13;
    *(_QWORD *)(v69 + 56) = v80;
    *(_QWORD *)(v69 + 64) = v81;
    sub_22ABDD580();
    OUTLINED_FUNCTION_12_3();
    v70 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v70(v62, v64);
    sub_22ABDD6AC();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_66_6(v68, *(uint64_t (**)(uint64_t, uint64_t))(v75 + 8));
    v71 = v68 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v73(v68, v63, v64);
    sub_22A9EB644(v74, v71);
    OUTLINED_FUNCTION_21_14();
    sub_22ABDD9AC();
    sub_22ABDEA8C();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v72, v77);
    sub_22A9AD754(v74, &qword_255B10220);
    v70(v63, v64);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_81_3();
    OUTLINED_FUNCTION_47_5();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_80_3();
    OUTLINED_FUNCTION_83_2();
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_46_6();
    OUTLINED_FUNCTION_45_7();
    OUTLINED_FUNCTION_79_2();
    OUTLINED_FUNCTION_78_2();
    OUTLINED_FUNCTION_56_6();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_22A9EB164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  v6 = sub_22ABDE8A0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v11 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)v11 - v7, a1);
  return sub_22AA5A180((uint64_t)v8, a2, a3);
}

uint64_t sub_22A9EB210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD, _QWORD)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v50 = a8;
  v51 = a3;
  v47 = a1;
  v48 = a5;
  v45 = a4;
  v41 = a2;
  v49 = a9;
  v46 = sub_22ABDD4F0();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a7;
  v14 = sub_22ABDE8A0();
  v15 = *(_QWORD *)(v14 - 8);
  v43 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v36 - v16;
  v18 = sub_22ABDDA0C();
  v40 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v36 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v36 = (char *)&v36 - v25;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v42(v17, a2, v14);
  sub_22AA5A180((uint64_t)v17, a6, (uint64_t)v21);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v26 = swift_allocObject();
  v38 = xmmword_22ABE9FB0;
  *(_OWORD *)(v26 + 16) = xmmword_22ABE9FB0;
  v27 = v45;
  *(_QWORD *)(v26 + 32) = v51;
  *(_QWORD *)(v26 + 40) = v27;
  sub_22ABDD4FC();
  sub_22ABDD9D0();
  v45 = *(void (**)(_QWORD, _QWORD))(v44 + 8);
  v28 = v46;
  v45(v13, v46);
  v29 = *(void (**)(char *, uint64_t))(v40 + 8);
  v29(v21, v18);
  sub_22ABDD7D8();
  v30 = v36;
  sub_22ABDD7FC();
  v29(v24, v18);
  v32 = type metadata accessor for AnnotatedBatch(0, a6, v37, v31);
  v42(v17, v41 + *(int *)(v32 + 36), v43);
  sub_22AA5A180((uint64_t)v17, a6, (uint64_t)v21);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v38;
  v34 = v48;
  *(_QWORD *)(v33 + 32) = v51;
  *(_QWORD *)(v33 + 40) = v34;
  sub_22ABDD4FC();
  sub_22ABDD9D0();
  v45(v13, v28);
  v29(v21, v18);
  sub_22ABDD574();
  v29(v24, v18);
  return ((uint64_t (*)(char *, uint64_t))v29)(v30, v18);
}

_QWORD *sub_22A9EB510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(qword_255B10248);
  v4 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 40);
  return v4;
}

_QWORD *sub_22A9EB584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B101A0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 4);
  return v4;
}

uint64_t sub_22A9EB5F4()
{
  return sub_22A9EA78C();
}

uint64_t sub_22A9EB5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22A9EB644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22A9EB690()
{
  unint64_t result;

  result = qword_255B10238;
  if (!qword_255B10238)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_255B10238);
  }
  return result;
}

uint64_t sub_22A9EB6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22A9EB210(a1, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void (**)(_QWORD, _QWORD))(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_22A9EB6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22A9EB164(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t OUTLINED_FUNCTION_2_21()
{
  return swift_task_alloc();
}

double OUTLINED_FUNCTION_3_22(__n128 *a1, __n128 a2)
{
  float v2;
  double result;

  a1[1] = a2;
  strcpy((char *)&a1[2], "training_loss");
  a1[2].n128_u16[7] = -4864;
  result = v2;
  a1[3].n128_f64[0] = v2;
  return result;
}

double OUTLINED_FUNCTION_4_15(__n128 *a1, __n128 a2)
{
  float v2;

  a1[1] = a2;
  strcpy((char *)&a1[2], "training_loss");
  a1[2].n128_u16[7] = -4864;
  return v2;
}

uint64_t OUTLINED_FUNCTION_5_17()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_6_22()
{
  double v0;

  return sub_22A9C3750(0x69746164696C6176, 0xEF73736F6C5F6E6FLL, v0);
}

uint64_t OUTLINED_FUNCTION_7_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a10 + 32))(v15, a15, a14);
}

uint64_t OUTLINED_FUNCTION_11_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_14_15()
{
  return sub_22ABDE918();
}

uint64_t OUTLINED_FUNCTION_15_12()
{
  uint64_t (*v0)(_QWORD, _QWORD);
  uint64_t v1;

  return v0(*(_QWORD *)(v1 + 552), *(_QWORD *)(v1 + 528));
}

void OUTLINED_FUNCTION_17_11()
{
  sub_22AA362A0();
}

uint64_t OUTLINED_FUNCTION_18_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  return sub_22ABBFF08(v14, v15, a11, a13, v13);
}

uint64_t OUTLINED_FUNCTION_20_14()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_21_14()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_22_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_23_12@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_24_10()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[55] + 8))(v0[56], v0[54]);
}

uint64_t OUTLINED_FUNCTION_26_7@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 360);
}

uint64_t OUTLINED_FUNCTION_27_12()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_28_7()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_29_8()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_31_7()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_33_9()
{
  return sub_22ABDD628();
}

uint64_t OUTLINED_FUNCTION_34_9()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[60] + 8))(v0[62], v0[59]);
}

uint64_t OUTLINED_FUNCTION_35_5@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 480) + 8))(a1, *(_QWORD *)(v1 + 472));
}

uint64_t OUTLINED_FUNCTION_36_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_37_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_38_8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_39_8()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 232) = 0;
  *(_QWORD *)(v2 + 240) = v1;
  return v0();
}

uint64_t OUTLINED_FUNCTION_40_6@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 32))(v2, a1, v3);
}

uint64_t OUTLINED_FUNCTION_42_6(uint64_t a1)
{
  return sub_22ABBFDD0(a1);
}

void OUTLINED_FUNCTION_44_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_QWORD *)(v1 + 16) = v0;
  *(_DWORD *)(v1 + 4 * v2 + 32) = v4;
  *(_QWORD *)(v3 + 264) = v1;
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_46_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_48_6(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_49_6(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_50_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return sub_22A9EB5FC(a12, v12);
}

uint64_t OUTLINED_FUNCTION_51_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = a2;
  return sub_22ABDE96C();
}

uint64_t OUTLINED_FUNCTION_52_7()
{
  return sub_22ABDE888();
}

uint64_t OUTLINED_FUNCTION_53_6()
{
  uint64_t v0;

  sub_22A9ADA48(v0);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_55_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_56_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_58_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

float OUTLINED_FUNCTION_59_4(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 880) = a1;
  return *(float *)(v1 + 876);
}

uint64_t OUTLINED_FUNCTION_60_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_62_5()
{
  uint64_t v0;
  uint64_t v1;

  return sub_22A9EB644(v0, v1);
}

uint64_t OUTLINED_FUNCTION_63_5@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 152) = a2;
  *(_QWORD *)(v5 + 160) = v3;
  *(_QWORD *)(v5 + 168) = v2;
  *(_QWORD *)(v5 + 176) = v4;
  *(_BYTE *)(v5 + 184) = 0;
  *(_QWORD *)(v5 + 192) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_64_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_65_5@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, v2);
}

uint64_t OUTLINED_FUNCTION_66_6@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_69_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_70_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_71_3()
{
  return sub_22ABDE84C();
}

_QWORD *OUTLINED_FUNCTION_74_3@<X0>(unint64_t a1@<X8>)
{
  return sub_22A9EB584(0, a1 >> 1);
}

uint64_t OUTLINED_FUNCTION_78_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_79_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_80_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_81_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_82_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_83_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_84_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_85_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_86_3(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_87_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  return sub_22ABDD598();
}

uint64_t OUTLINED_FUNCTION_88_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_90_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_91_1()
{
  return 0;
}

void MaxAbsScaler.fitted<A>(to:eventHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)();
  _QWORD *v33;
  _QWORD v34[6];

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v27 = v7;
  v8 = *(_QWORD *)(v5 + 16);
  v9 = sub_22ABDF5D8();
  v24 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_22();
  v23[1] = *(_QWORD *)(v8 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v26 = (uint64_t)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - v14;
  v34[2] = v8;
  v16 = *(_OWORD *)(v6 + 24);
  v17 = *(_QWORD *)(*(_QWORD *)(v6 + 24) + 16);
  v34[3] = *(_QWORD *)(*(_QWORD *)(v17 + 24) + 8);
  v34[4] = *(_QWORD *)(v17 + 16);
  v28[2] = v8;
  v28[3] = v4;
  v29 = v16;
  v30 = *(_QWORD *)(v6 + 40);
  v31 = v2;
  v32 = sub_22A9EBE50;
  v33 = v34;
  sub_22A9C2540((uint64_t)sub_22A9EBE5C, (uint64_t)v28, v4, v8, MEMORY[0x24BEE4078], v2, MEMORY[0x24BEE40A8], v18);
  v19 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v19);
  sub_22ABDEF48();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v0, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v0, v25);
    sub_22A9B7B50();
    v20 = swift_allocError();
    *(_QWORD *)v21 = 0xD000000000000013;
    *(_QWORD *)(v21 + 8) = 0x800000022ABE2240;
    *(_QWORD *)(v21 + 16) = 0;
    *(_QWORD *)(v21 + 24) = 0;
    *(_BYTE *)(v21 + 32) = 2;
    swift_willThrow(v20);
  }
  else
  {
    OUTLINED_FUNCTION_7_22((uint64_t)v15, v0);
    if ((sub_22AA2F904() & 1) == 0)
      sub_22AA2F98C(0x635373624178614DLL, 0xEC00000072656C61);
    v22 = v26;
    OUTLINED_FUNCTION_7_22(v26, (uint64_t)v15);
    OUTLINED_FUNCTION_7_22(v27, v22);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9EBE50()
{
  return sub_22ABE0154();
}

uint64_t sub_22A9EBE5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t MaxAbsScaler.Transformer.init(maximumAbsoluteValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_22A9EBE9C()
{
  uint64_t v0;

  MaxAbsScaler.fitted<A>(to:eventHandler:)();
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t MaxAbsScaler.Transformer.maximumAbsoluteValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t MaxAbsScaler.Transformer.maximumAbsoluteValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*MaxAbsScaler.Transformer.maximumAbsoluteValue.modify())()
{
  return nullsub_1;
}

uint64_t MaxAbsScaler.Transformer.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_3_23();
  (*(void (**)(uint64_t))(v6 + 16))(v4);
  sub_22ABDEB88();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
}

uint64_t MaxAbsScaler.Transformer.hash(into:)()
{
  return sub_22ABDEC0C();
}

uint64_t static MaxAbsScaler.Transformer.== infix(_:_:)()
{
  return sub_22ABDECFC() & 1;
}

uint64_t sub_22A9EC018(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x800000022ABE2290)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_22A9EC09C()
{
  sub_22ABE0244();
  sub_22ABE0250();
  return sub_22ABE0280();
}

unint64_t sub_22A9EC0DC()
{
  return 0xD000000000000014;
}

uint64_t sub_22A9EC0F8()
{
  return sub_22A9D94E4();
}

uint64_t sub_22A9EC108()
{
  return sub_22A9EC09C();
}

uint64_t sub_22A9EC118()
{
  return sub_22A9D96F4();
}

uint64_t sub_22A9EC128()
{
  sub_22ABE0244();
  sub_22A9D96F4();
  return sub_22ABE0280();
}

unint64_t sub_22A9EC16C()
{
  return sub_22A9EC0DC();
}

uint64_t sub_22A9EC17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9EC018(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22A9EC1B0()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22A9EC1D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9D94E4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22A9EC208(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABECA58, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9EC23C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABECA58, a1);
  return sub_22ABE02F8();
}

uint64_t MaxAbsScaler.Transformer.hashValue.getter()
{
  sub_22ABE0244();
  MaxAbsScaler.Transformer.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22A9EC2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  MaxAbsScaler.Transformer.applied(to:eventHandler:)(a2, a2, a3, a5);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v5 + 8));
}

uint64_t sub_22A9EC2FC()
{
  sub_22ABE0244();
  MaxAbsScaler.Transformer.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22A9EC33C()
{
  return static MaxAbsScaler.Transformer.== infix(_:_:)();
}

uint64_t MaxAbsScaler.Transformer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  return 0;
}

void MaxAbsScaler.Transformer.encode(to:)()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_5_18();
}

void sub_22A9EC418(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x22E2E4D80](&unk_22ABECA58, a1);
  v3 = sub_22ABDFD58();
  v4 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_22();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_22ABE02B0();
  sub_22ABDFD4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for MaxAbsScaler.Transformer.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22A9EC4E0()
{
  MaxAbsScaler.Transformer.encode(to:)();
}

void MaxAbsScaler.Transformer.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[12];

  OUTLINED_FUNCTION_12();
  v8[5] = v0;
  v8[4] = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v8[6] = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[8] = v4;
  v8[9] = v5;
  v8[10] = v6;
  v8[11] = v7;
  OUTLINED_FUNCTION_5_18();
}

void sub_22A9EC568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x22E2E4D80](&unk_22ABECA58, a1);
  v6 = sub_22ABDFCB0();
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 152) = v4;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for MaxAbsScaler.Transformer();
}

void sub_22A9EC5D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_22();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v7 = *(_QWORD *)(v3 - 72);
  sub_22ABE0298();
  if (!v7)
  {
    v8 = v2;
    *(_QWORD *)(v3 - 176) = v5;
    *(_QWORD *)(v3 - 72) = a1;
    v9 = *(_QWORD *)(v3 - 160);
    v11 = *(_QWORD *)(v3 - 144);
    v10 = *(_QWORD *)(v3 - 136);
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_1_21();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 32))(v8, *(_QWORD *)(v3 - 128), v9);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 176) + 32))(v10, v8, *(_QWORD *)(v3 - 72));
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for MaxAbsScaler.Transformer()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22A9EC6C8()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9EC6D8()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9EC6E8()
{
  MaxAbsScaler.Transformer.init(from:)();
}

void sub_22A9EC708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20[12];

  OUTLINED_FUNCTION_12();
  v2 = v0;
  v4 = v3;
  v19 = v5;
  v6 = sub_22ABDE3D8();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_3_23();
  v7 = sub_22ABDE324();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v18 - v13;
  v15 = *(_QWORD *)(v4 + 16);
  MEMORY[0x24BDAC7A8](v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v15);
  sub_22A99CE8C();
  sub_22ABDEA50();
  sub_22AA25620(1.0 / v20[0], 0.0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, v7);
  memset(v20, 0, 88);
  sub_22ABDE3CC();
  sub_22AB314C8((uint64_t)v11, v1, v20, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  OUTLINED_FUNCTION_16();
}

void sub_22A9EC890()
{
  sub_22A9EC708();
}

void type metadata accessor for MaxAbsScaler()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22A9EC8B0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9EC960 + 4 * byte_22ABEC7F0[(v8 - 1)]))();
}

void sub_22A9EC9AC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_22A9ECB54(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22A9ECB94 + 4 * byte_22ABEC7FE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22A9ECBB4 + 4 * byte_22ABEC803[v4]))();
}

_BYTE *sub_22A9ECB94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22A9ECBB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22A9ECBBC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22A9ECBC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22A9ECBCC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22A9ECBD4(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_22A9ECBE0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9ECBF0()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9ECC00()
{
  JUMPOUT(0x22E2E4D80);
}

void OUTLINED_FUNCTION_5_18()
{
  type metadata accessor for MaxAbsScaler.Transformer.CodingKeys();
}

uint64_t OUTLINED_FUNCTION_7_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void sub_22A9ECC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _DWORD *v16;
  int *v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  _DWORD v22[8];
  uint64_t v23;

  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7)
  {
    swift_release();
    return;
  }
  v13 = a1;
  v23 = MEMORY[0x24BEE4AF8];
  sub_22AB4D010();
  if (a2 >= v13 && (v7 & 0x8000000000000000) == 0)
  {
    v14 = a5 & 1;
    v15 = v23;
    while (a2 != v13)
    {
      swift_retain();
      v16 = sub_22A9ED7F8(v22, a7, v13, a3, a4, v14, a6);
      v18 = *v17;
      ((void (*)(_DWORD *, _QWORD))v16)(v22, 0);
      swift_release();
      v23 = v15;
      v19 = *(_QWORD *)(v15 + 16);
      if (v19 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_22AB4D010();
        v15 = v23;
      }
      *(_QWORD *)(v15 + 16) = v19 + 1;
      v20 = v15 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v13;
      *(_DWORD *)(v20 + 40) = v18;
      if (a2 == ++v13)
      {
        swift_release();
        return;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
}

uint64_t BaseTreeClassifierModel.applied(features:eventHandler:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18[2];
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  if (v4 == *(_QWORD *)(v1 + 8))
  {
    v5 = v2;
    v6 = *(_QWORD *)(a1 + 24);
    v7 = *(_BYTE *)(a1 + 16);
    v18[0] = *(_QWORD *)a1;
    v18[1] = v4;
    v19 = v7;
    v20 = v6;
    type metadata accessor for XGBoostMatrix();
    v8 = OUTLINED_FUNCTION_13();
    swift_retain();
    v9 = v8;
    v10 = sub_22AA61110(v18);
    if (!v5)
    {
      sub_22AB7BB88((uint64_t)v10);
      OUTLINED_FUNCTION_13_2();
      if (v22 == 1)
      {
        OUTLINED_FUNCTION_8_17();
        v12 = sub_22A9ED128(v11);
      }
      else
      {
        OUTLINED_FUNCTION_8_17();
        v12 = sub_22A9ED4EC(v17);
      }
      v9 = v12;
      swift_release();
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v13 = OUTLINED_FUNCTION_13();
    *(_OWORD *)(v13 + 16) = xmmword_22ABE9FB0;
    *(_QWORD *)(v13 + 32) = v3;
    *(_QWORD *)(v13 + 40) = v4;
    OUTLINED_FUNCTION_5_19();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2_23();
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_6_23();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_4_16();
    v18[0] = v4;
    OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_6_23();
    swift_bridgeObjectRelease();
    v9 = v21;
    sub_22A9B7B50();
    v14 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_3_24(v14, v15);
  }
  return v9;
}

uint64_t BaseTreeClassifierModel.classCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t BaseTreeClassifierModel.classCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*BaseTreeClassifierModel.classCount.modify())()
{
  return nullsub_1;
}

uint64_t BaseTreeClassifierModel.featureCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t BaseTreeClassifierModel.featureCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*BaseTreeClassifierModel.featureCount.modify())()
{
  return nullsub_1;
}

uint64_t BaseTreeClassifierModel.applied(features:eventHandler:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 != *(_QWORD *)(v2 + 8))
    goto LABEL_6;
  type metadata accessor for XGBoostMatrix();
  OUTLINED_FUNCTION_13();
  v6 = swift_retain();
  result = sub_22AA61320(v6);
  if (v3)
    return result;
  sub_22AB7BB88(result);
  swift_release();
  if (v14 != 1)
  {
    OUTLINED_FUNCTION_7_23();
    v9 = sub_22A9ED4EC(v13);
    result = OUTLINED_FUNCTION_13_2();
    if (!*(_QWORD *)(v9 + 16))
    {
      __break(1u);
      return result;
    }
LABEL_9:
    *a2 = *(_QWORD *)(v9 + 32);
    sub_22ABDEAEC();
    return swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_7_23();
  v9 = sub_22A9ED128(v8);
  OUTLINED_FUNCTION_13_2();
  if (*(_QWORD *)(v9 + 16))
    goto LABEL_9;
  __break(1u);
LABEL_6:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v10 = OUTLINED_FUNCTION_13();
  *(_OWORD *)(v10 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v10 + 32) = 1;
  *(_QWORD *)(v10 + 40) = v4;
  OUTLINED_FUNCTION_5_19();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_23();
  OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_6_23();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_6_23();
  swift_bridgeObjectRelease();
  sub_22A9B7B50();
  v11 = OUTLINED_FUNCTION_53();
  return OUTLINED_FUNCTION_3_24(v11, v12);
}

uint64_t sub_22A9ED128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  float *v6;
  float v7;
  _DWORD *v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[5];

  v1 = *(_QWORD *)a1;
  v34 = *(_QWORD *)(a1 + 8);
  v33 = *(_BYTE *)(a1 + 16);
  v32 = *(_QWORD *)(a1 + 24);
  sub_22AA35C48();
  if ((v1 & 0x8000000000000000) == 0)
  {
    v3 = v2;
    if (!v1)
      return v3;
    v4 = 0;
    v31 = v1;
    while (v4 != v1)
    {
      v35 = v3;
      swift_retain();
      v5 = sub_22A9ED7F8(v36, v4, 0, v1, v34, v33, v32);
      v7 = *v6;
      ((void (*)(uint64_t *, _QWORD))v5)(v36, 0);
      swift_release();
      swift_retain();
      v8 = sub_22A9ED7F8(v36, v4, 0, v1, v34, v33, v32);
      v10 = *v9;
      ((void (*)(uint64_t *, _QWORD))v8)(v36, 0);
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10430);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_22ABE9FB0;
      *(_QWORD *)(v11 + 32) = 0;
      *(float *)(v11 + 40) = 1.0 - v7;
      *(_QWORD *)(v11 + 48) = 1;
      *(_DWORD *)(v11 + 56) = v10;
      MEMORY[0x24BDAC7A8](v11);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10438);
      sub_22A9ED9E4();
      swift_getKeyPath();
      swift_retain();
      v12 = sub_22ABDEAEC();
      v13 = sub_22AA5CEB0(v12);
      swift_release();
      v14 = sub_22ABDF26C();
      v15 = *(_QWORD *)(v13 + 16);
      if (v15)
      {
        v16 = 0;
        do
        {
          v17 = v14 + 56;
          while (1)
          {
            v18 = *(_QWORD *)(v13 + 32 + 8 * v16++);
            v19 = sub_22ABE0238();
            v20 = -1 << *(_BYTE *)(v14 + 32);
            v21 = v19 & ~v20;
            if (((*(_QWORD *)(v17 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
              break;
            v22 = *(_QWORD *)(v14 + 48);
            if (*(_QWORD *)(v22 + 8 * v21) != v18)
            {
              v23 = ~v20;
              do
              {
                v21 = (v21 + 1) & v23;
                if (((*(_QWORD *)(v17 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
                  goto LABEL_15;
              }
              while (*(_QWORD *)(v22 + 8 * v21) != v18);
            }
            if (v16 == v15)
              goto LABEL_16;
          }
LABEL_15:
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v36[0] = v14;
          sub_22AB48DD0(v18, v21, isUniquelyReferenced_nonNull_native);
          v14 = v36[0];
          swift_bridgeObjectRelease();
        }
        while (v16 != v15);
LABEL_16:
        swift_bridgeObjectRelease();
        v1 = v31;
        v3 = v35;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v25 = *(_QWORD *)(v14 + 16);
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v11 + 16);
      swift_bridgeObjectRelease();
      if (v25 != v26)
        goto LABEL_24;
      v36[0] = v11;
      sub_22ABDEAEC();
      sub_22AA5EAD4(v36);
      swift_bridgeObjectRelease();
      v27 = v36[0];
      v28 = *(_QWORD *)(v3 + 16);
      if (v28 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_22AA35C48();
        v3 = v29;
      }
      ++v4;
      *(_QWORD *)(v3 + 16) = v28 + 1;
      *(_QWORD *)(v3 + 8 * v28 + 32) = v27;
      if (v4 == v1)
        return v3;
    }
    __break(1u);
LABEL_24:
    __break(1u);
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_22A9ED4EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)a1;
  v30 = *(_QWORD *)(a1 + 8);
  v29 = *(_BYTE *)(a1 + 16);
  v28 = *(_QWORD *)(a1 + 24);
  sub_22AA35C48();
  if (v1 < 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v3 = v2;
  if (!v1)
    return v3;
  if ((v30 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v27 = v1;
    while (v4 != v1)
    {
      swift_retain();
      sub_22A9ECC4C(0, v30, v1, v30, v29, v28, v4);
      v6 = v5;
      MEMORY[0x24BDAC7A8](v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10438);
      sub_22A9ED9E4();
      swift_getKeyPath();
      swift_retain();
      v7 = sub_22ABDEAEC();
      v8 = sub_22AA5CEB0(v7);
      swift_release();
      v9 = sub_22ABDF26C();
      v10 = *(_QWORD *)(v8 + 16);
      if (v10)
      {
        v31 = v4;
        v32 = v3;
        v11 = 0;
        v12 = v8 + 32;
        do
        {
          v13 = v9 + 56;
          while (1)
          {
            v14 = *(_QWORD *)(v12 + 8 * v11++);
            v15 = sub_22ABE0238();
            v16 = -1 << *(_BYTE *)(v9 + 32);
            v17 = v15 & ~v16;
            if (((*(_QWORD *)(v13 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
              break;
            v18 = *(_QWORD *)(v9 + 48);
            if (*(_QWORD *)(v18 + 8 * v17) != v14)
            {
              v19 = ~v16;
              do
              {
                v17 = (v17 + 1) & v19;
                if (((*(_QWORD *)(v13 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
                  goto LABEL_16;
              }
              while (*(_QWORD *)(v18 + 8 * v17) != v14);
            }
            if (v11 == v10)
              goto LABEL_17;
          }
LABEL_16:
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v33 = v9;
          sub_22AB48DD0(v14, v17, isUniquelyReferenced_nonNull_native);
          v9 = v33;
          swift_bridgeObjectRelease();
        }
        while (v11 != v10);
LABEL_17:
        swift_bridgeObjectRelease();
        v1 = v27;
        v4 = v31;
        v3 = v32;
      }
      else
      {
        swift_bridgeObjectRelease();
        v1 = v27;
      }
      v21 = *(_QWORD *)(v9 + 16);
      swift_bridgeObjectRelease();
      v22 = *(_QWORD *)(v6 + 16);
      swift_bridgeObjectRelease();
      if (v21 != v22)
        goto LABEL_25;
      v33 = v6;
      sub_22ABDEAEC();
      sub_22AA5EAD4(&v33);
      swift_bridgeObjectRelease();
      v23 = v33;
      v24 = *(_QWORD *)(v3 + 16);
      if (v24 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_22AA35C48();
        v3 = v25;
      }
      ++v4;
      *(_QWORD *)(v3 + 16) = v24 + 1;
      *(_QWORD *)(v3 + 8 * v24 + 32) = v23;
      if (v4 == v1)
        return v3;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_27:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

_DWORD *sub_22A9ED7F8(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  v7 = result;
  if ((a6 & 1) == 0)
  {
    v8 = a2 * a5;
    if ((unsigned __int128)(a2 * (__int128)a5) >> 64 == (a2 * a5) >> 63)
    {
      result = (_DWORD *)(v8 + a3);
      if (!__OFADD__(v8, a3))
        goto LABEL_7;
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  v9 = a3 * a4;
  if ((unsigned __int128)(a3 * (__int128)a4) >> 64 != (a3 * a4) >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  result = (_DWORD *)(v9 + a2);
  if (!__OFADD__(v9, a2))
  {
LABEL_7:
    sub_22AB56404((unint64_t)result, a7);
    *v7 = v10;
    return nullsub_1;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for BaseTreeClassifierModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for BaseTreeClassifierModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for BaseTreeClassifierModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for BaseTreeClassifierModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BaseTreeClassifierModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BaseTreeClassifierModel()
{
  return &type metadata for BaseTreeClassifierModel;
}

unint64_t sub_22A9ED9E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B10440[0];
  if (!qword_255B10440[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B10438);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, qword_255B10440);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_17()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_3_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 6;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_5_19()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_6_23()
{
  return sub_22ABDEDC8();
}

uint64_t (*MinMaxScaler.range.modify())()
{
  return nullsub_1;
}

uint64_t MinMaxScaler.init(range:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_5_20();
  return OUTLINED_FUNCTION_81(a2, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 32));
}

void MinMaxScaler.fitted<A>(to:eventHandler:)(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t TupleTypeMetadata2;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;

  v47 = a3;
  v51 = (char *)a2;
  v5 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_14_9();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_87();
  v39 = v7;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_28_1();
  v37 = v9;
  v46 = a1;
  v44 = *(_QWORD *)(a1 + 24);
  OUTLINED_FUNCTION_14_9();
  v43 = sub_22ABDECCC();
  v41 = *(_QWORD *)(v43 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  v42 = v11;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_28_1();
  v40 = v13;
  OUTLINED_FUNCTION_14_9();
  v14 = sub_22ABDF5D8();
  v49 = *(_QWORD *)(v14 - 8);
  v50 = v14;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_13_20();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v36 - v18;
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_87();
  v48 = (char *)v21;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v36 - v23;
  sub_22ABDEF54();
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v5) == 1)
  {
    v3 = (uint64_t)v19;
LABEL_5:
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v3, v50);
    sub_22A9B7B50();
    v25 = swift_allocError();
    *(_QWORD *)v26 = 0xD000000000000013;
    *(_QWORD *)(v26 + 8) = 0x800000022ABE22C0;
    *(_QWORD *)(v26 + 16) = 0;
    *(_QWORD *)(v26 + 24) = 0;
    *(_BYTE *)(v26 + 32) = 2;
    swift_willThrow(v25);
    OUTLINED_FUNCTION_16();
    return;
  }
  v36 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v36(v24, v19, v5);
  sub_22ABDEF48();
  if (__swift_getEnumTagSinglePayload(v3, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v5);
    goto LABEL_5;
  }
  v27 = (uint64_t)v48;
  v36(v48, (char *)v3, v5);
  if ((sub_22ABDEC48() & 1) != 0)
  {
    v29 = v37;
    v28 = TupleTypeMetadata2;
    v30 = v37 + *(int *)(TupleTypeMetadata2 + 48);
    v51 = v24;
    OUTLINED_FUNCTION_15_13(v37, (uint64_t)v24);
    OUTLINED_FUNCTION_15_13(v30, v27);
    v31 = v39;
    v32 = v39 + *(int *)(v28 + 48);
    OUTLINED_FUNCTION_15_13(v39, v29);
    OUTLINED_FUNCTION_15_13(v32, v30);
    v33 = v42;
    v36((char *)v42, (char *)v31, v5);
    OUTLINED_FUNCTION_16_15(v32);
    v34 = v31 + *(int *)(v28 + 48);
    OUTLINED_FUNCTION_23_13(v31, v29);
    OUTLINED_FUNCTION_23_13(v34, v30);
    OUTLINED_FUNCTION_23_13(v33 + *(int *)(v43 + 36), v34);
    OUTLINED_FUNCTION_16_15(v31);
    v35 = v41;
    OUTLINED_FUNCTION_24_11(v40, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32));
    if ((sub_22AA2F904() & 1) == 0)
      sub_22AA2F98C(0x635378614D6E694DLL, 0xEC00000072656C61);
    OUTLINED_FUNCTION_16_15((uint64_t)v48);
    OUTLINED_FUNCTION_16_15((uint64_t)v51);
    OUTLINED_FUNCTION_24_11(v33, v45, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16));
    MinMaxScaler.Transformer.init(desiredRange:fittedRange:)(v33, v47);
  }
  __break(1u);
}

void MinMaxScaler.Transformer.init(desiredRange:fittedRange:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  OUTLINED_FUNCTION_11_22();
  v4 = sub_22ABDECCC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for MinMaxScaler.Transformer();
}

uint64_t sub_22A9EDF90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v2 + *(int *)(a1 + 52), v1, v3);
}

void type metadata accessor for MinMaxScaler.Transformer()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22A9EDFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  MinMaxScaler.fitted<A>(to:eventHandler:)(a7, a6, a1);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v7 + 8));
}

uint64_t _s18CreateMLComponents12MinMaxScalerV5rangeSNyxGvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_5_20();
  v0 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t _s18CreateMLComponents12MinMaxScalerV5rangeSNyxGvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_7_24();
  v0 = OUTLINED_FUNCTION_6_17();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t (*MinMaxScaler.Transformer.desiredRange.modify())()
{
  return nullsub_1;
}

uint64_t MinMaxScaler.Transformer.fittedRange.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_5_20();
  v0 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t MinMaxScaler.Transformer.fittedRange.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_7_24();
  v0 = OUTLINED_FUNCTION_6_17();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t (*MinMaxScaler.Transformer.fittedRange.modify())()
{
  return nullsub_1;
}

uint64_t MinMaxScaler.Transformer.applied(to:eventHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(void);
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  void (*v29)(void);
  uint64_t v31;
  void (*v32)(void);
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[4];
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  uint64_t (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;

  v55[3] = a1;
  v58 = a3;
  v6 = *(_QWORD *)(a2 + 16);
  v65 = *(char **)(v6 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_87();
  v57 = v8;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_12_0();
  v61 = v10;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_12_0();
  v64 = v12;
  OUTLINED_FUNCTION_4_0();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v55 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v55 - v17;
  v66 = *(_QWORD *)(*(_QWORD *)(v19 + 24) + 16);
  OUTLINED_FUNCTION_11_22();
  v20 = sub_22ABDECCC();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_13_20();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v55 - v23;
  v67 = v3;
  MinMaxScaler.Transformer.fittedRange.getter();
  v25 = (void (*)(void))*((_QWORD *)v65 + 2);
  OUTLINED_FUNCTION_29_9();
  v25();
  v26 = *(void (**)(char *, uint64_t))(v21 + 8);
  v26(v24, v20);
  MinMaxScaler.Transformer.fittedRange.getter();
  v27 = &v4[*(int *)(v20 + 36)];
  v59 = v25;
  ((void (*)(char *, char *, uint64_t))v25)(v16, v27, v6);
  v56 = v4;
  v62 = v20;
  v60 = (uint64_t (*)(char *, uint64_t))v26;
  v26(v4, v20);
  OUTLINED_FUNCTION_14_16();
  LOBYTE(v26) = sub_22ABDECFC();
  v63 = v16;
  OUTLINED_FUNCTION_2_24((uint64_t)v16);
  v65 = v18;
  OUTLINED_FUNCTION_2_24((uint64_t)v18);
  v28 = a2;
  MinMaxScaler.Transformer.fittedRange.getter();
  if ((v26 & 1) != 0)
  {
    OUTLINED_FUNCTION_29_9();
    v29();
    return v60(v24, v62);
  }
  else
  {
    v31 = v64;
    OUTLINED_FUNCTION_29_9();
    v32 = v59;
    v59();
    v33 = v62;
    v34 = (void (*)(char *, uint64_t))v60;
    v60(v24, v62);
    v35 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v66 + 16) + 8) + 8);
    v55[1] = *(_QWORD *)(*(_QWORD *)(v66 + 16) + 8);
    v55[2] = v35;
    OUTLINED_FUNCTION_14_16();
    sub_22ABDFAF4();
    OUTLINED_FUNCTION_2_24(v31);
    v36 = v28;
    v37 = v67;
    MinMaxScaler.Transformer.fittedRange.getter();
    ((void (*)(uint64_t, char *, uint64_t))v32)(v61, &v24[*(int *)(v33 + 36)], v6);
    v34(v24, v33);
    v38 = v56;
    MinMaxScaler.Transformer.fittedRange.getter();
    v39 = OUTLINED_FUNCTION_30_10();
    ((void (*)(uint64_t))v32)(v39);
    v34(v38, v33);
    v40 = v64;
    v41 = v61;
    OUTLINED_FUNCTION_14_16();
    sub_22ABDFAF4();
    OUTLINED_FUNCTION_2_24(v37);
    v42 = v41;
    OUTLINED_FUNCTION_2_24(v41);
    v43 = (uint64_t)v63;
    sub_22ABDEB88();
    OUTLINED_FUNCTION_2_24(v40);
    OUTLINED_FUNCTION_2_24(v43);
    v44 = v36;
    v55[0] = v36;
    v45 = v67;
    MinMaxScaler.Transformer.desiredRange.getter(v36);
    v46 = v59;
    ((void (*)(uint64_t, char *, uint64_t))v59)(v42, &v24[*(int *)(v33 + 36)], v6);
    v47 = v33;
    v48 = v33;
    v49 = (void (*)(uint64_t, uint64_t))v60;
    v60(v24, v47);
    MinMaxScaler.Transformer.desiredRange.getter(v44);
    v50 = OUTLINED_FUNCTION_30_10();
    ((void (*)(uint64_t))v46)(v50);
    v49((uint64_t)v38, v48);
    v51 = v64;
    v52 = v61;
    OUTLINED_FUNCTION_14_16();
    sub_22ABDFAF4();
    OUTLINED_FUNCTION_2_24(v45);
    OUTLINED_FUNCTION_2_24(v52);
    v53 = (uint64_t)v63;
    v54 = (uint64_t)v65;
    sub_22ABDF308();
    OUTLINED_FUNCTION_2_24(v51);
    MinMaxScaler.Transformer.desiredRange.getter(v55[0]);
    OUTLINED_FUNCTION_29_9();
    v46();
    v49((uint64_t)v24, v62);
    OUTLINED_FUNCTION_14_16();
    sub_22ABDFAE8();
    OUTLINED_FUNCTION_2_24(v51);
    OUTLINED_FUNCTION_2_24(v53);
    return OUTLINED_FUNCTION_2_24(v54);
  }
}

void MinMaxScaler.Transformer.hash(into:)()
{
  sub_22ABDECCC();
  OUTLINED_FUNCTION_18_14();
}

void sub_22A9EE57C()
{
  OUTLINED_FUNCTION_18_14();
}

uint64_t static MinMaxScaler.Transformer.== infix(_:_:)()
{
  if ((sub_22ABDECC0() & 1) != 0)
    type metadata accessor for MinMaxScaler.Transformer();
  return 0;
}

uint64_t sub_22A9EE63C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x5264657269736564 && a2 == 0xEC00000065676E61;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6152646574746966 && a2 == 0xEB0000000065676ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22A9EE758(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6152646574746966;
  else
    return 0x5264657269736564;
}

uint64_t sub_22A9EE7A0()
{
  char *v0;

  return sub_22A9EE758(*v0);
}

uint64_t sub_22A9EE7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9EE63C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9EE7E4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABECD88, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9EE818(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABECD88, a1);
  return sub_22ABE02F8();
}

void MinMaxScaler.Transformer.hashValue.getter()
{
  sub_22ABE0244();
  MinMaxScaler.Transformer.hash(into:)();
}

uint64_t sub_22A9EE878()
{
  return sub_22ABE0280();
}

uint64_t sub_22A9EE890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  MinMaxScaler.Transformer.applied(to:eventHandler:)(a2, a5, a1);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v5 + 8));
}

void sub_22A9EE8D8()
{
  sub_22ABE0244();
  MinMaxScaler.Transformer.hash(into:)();
}

uint64_t sub_22A9EE900()
{
  return sub_22ABE0280();
}

uint64_t sub_22A9EE918()
{
  return static MinMaxScaler.Transformer.== infix(_:_:)();
}

uint64_t MinMaxScaler.Transformer.debugDescription.getter()
{
  uint64_t v0;

  sub_22ABDF7A0();
  sub_22ABDEDC8();
  v0 = OUTLINED_FUNCTION_5_20();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE0918], v0);
  OUTLINED_FUNCTION_25_8();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_25_8();
  sub_22ABDEDC8();
  return 0;
}

void MinMaxScaler.Transformer.encode(to:)()
{
  OUTLINED_FUNCTION_26_8();
}

void sub_22A9EEA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x22E2E4D80](&unk_22ABECD88, a1);
  v11 = sub_22ABDFD58();
  *(_QWORD *)(v10 - 128) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&a9 - v12;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v10 - 112) = 0;
  OUTLINED_FUNCTION_11_22();
  v14 = sub_22ABDECCC();
  *(_QWORD *)(v10 - 72) = *(_QWORD *)(v10 - 136);
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE08E0], v14, v10 - 72);
  OUTLINED_FUNCTION_27_13();
  v15 = *(_QWORD *)(v10 - 120);
  sub_22ABDFD4C();
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 128) + 8))(v13, v11);
  }
  else
  {
    v16 = *(_QWORD *)(v10 - 128);
    *(_BYTE *)(v10 - 112) = 1;
    OUTLINED_FUNCTION_27_13();
    sub_22ABDFD4C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v11);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22A9EEBA8()
{
  MinMaxScaler.Transformer.encode(to:)();
}

void MinMaxScaler.Transformer.init(from:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_11_22();
  sub_22ABDECCC();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_26_8();
}

void sub_22A9EEC4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x22E2E4D80](&unk_22ABECD88, a1);
  OUTLINED_FUNCTION_14_9();
  v6 = sub_22ABDFCB0();
  *(_QWORD *)(v5 - 136) = v6;
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 176) = v1;
  *(_QWORD *)(v5 - 96) = v1;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for MinMaxScaler.Transformer();
}

void sub_22A9EECB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v10 - 200) = a1;
  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&a9 - v12;
  v14 = *(_QWORD **)(v10 - 120);
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  *(_QWORD *)(v10 - 144) = v9;
  v15 = *(_QWORD *)(v10 - 128);
  sub_22ABE0298();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    *(_QWORD *)(v10 - 128) = v11;
    v16 = v13;
    v17 = *(_QWORD *)(v10 - 200);
    v18 = *(_QWORD *)(v10 - 192);
    v20 = *(_QWORD *)(v10 - 184);
    v19 = *(_QWORD *)(v10 - 176);
    *(_BYTE *)(v10 - 112) = 0;
    *(_QWORD *)(v10 - 72) = v19;
    v21 = *(_QWORD *)(v10 - 152);
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE0900], v21, v10 - 72);
    v22 = *(_QWORD *)(v10 - 168);
    OUTLINED_FUNCTION_10_14();
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
    *(_QWORD *)(v10 - 176) = v16;
    v24 = v22;
    v25 = v23;
    v23((uint64_t)v16, v24, v21);
    *(_BYTE *)(v10 - 112) = 1;
    OUTLINED_FUNCTION_10_14();
    OUTLINED_FUNCTION_8_18();
    v26 = *(_QWORD *)(v10 - 176);
    v25(v26 + *(int *)(v17 + 52), v18, v21);
    v27 = *(_QWORD *)(v10 - 128);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v27 + 16))(*(_QWORD *)(v10 - 208), v26, v17);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v10 - 120));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v17);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22A9EEE3C()
{
  MinMaxScaler.Transformer.init(from:)();
}

uint64_t sub_22A9EEE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[3];
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  _OWORD v62[5];
  uint64_t v63;

  v54 = a2;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  v53 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_22ABDE324();
  v51 = *(_QWORD *)(v52 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_87();
  v50 = v6;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_28_1();
  v49 = v8;
  v9 = *(_QWORD *)(a1 + 16);
  v43[1] = a1;
  v58 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_87();
  v46 = v11;
  OUTLINED_FUNCTION_4_0();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v43 - v14;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_12_0();
  v48 = v16;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_12_0();
  v55 = v18;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_12_0();
  v57 = v20;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_12_0();
  v56 = v22;
  OUTLINED_FUNCTION_4_0();
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v43 - v25;
  v60 = (uint64_t)v43 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v59 = (uint64_t)v43 - v27;
  v47 = *(_QWORD *)(v28 + 24);
  v29 = *(_QWORD *)(v47 + 16);
  sub_22ABDECCC();
  v44 = *(_QWORD *)(*(_QWORD *)(v29 + 16) + 8);
  v43[2] = *(_QWORD *)(v44 + 8);
  sub_22ABDFAF4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  OUTLINED_FUNCTION_28_8((uint64_t)v26);
  v45 = v30;
  sub_22ABDFAF4();
  OUTLINED_FUNCTION_28_8(v57);
  v31 = v55;
  OUTLINED_FUNCTION_17_12();
  v32 = v46;
  sub_22ABDF308();
  OUTLINED_FUNCTION_17_12();
  OUTLINED_FUNCTION_6_24(v32);
  v33 = v48;
  sub_22ABDFAF4();
  OUTLINED_FUNCTION_6_24((uint64_t)v15);
  v34 = v45;
  v45(v15, v31, v9);
  sub_22A99CE8C();
  OUTLINED_FUNCTION_22_13();
  sub_22ABDEA50();
  v35 = *(double *)v62;
  v36 = v33;
  v34(v15, v33, v9);
  OUTLINED_FUNCTION_22_13();
  sub_22ABDEA50();
  v37 = v49;
  sub_22AA25620(v35, v61);
  v38 = v51;
  v39 = v50;
  v40 = v52;
  OUTLINED_FUNCTION_24_11(v50, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16));
  memset(v62, 0, sizeof(v62));
  v63 = 0;
  v41 = (uint64_t)v53;
  sub_22ABDE3CC();
  sub_22AB314C8(v39, v41, v62, v54);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v40);
  OUTLINED_FUNCTION_6_24(v36);
  OUTLINED_FUNCTION_6_24(v55);
  OUTLINED_FUNCTION_6_24(v57);
  OUTLINED_FUNCTION_6_24(v56);
  OUTLINED_FUNCTION_6_24(v60);
  return OUTLINED_FUNCTION_6_24(v59);
}

uint64_t sub_22A9EF288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22A9EEE5C(a1, a2);
}

void type metadata accessor for MinMaxScaler.Transformer.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22A9EF2A8()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9EF2B8()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9EF2C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDECCC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22A9EF340(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9EF400 + 4 * byte_22ABECB00[(v8 - 1)]))();
}

void sub_22A9EF44C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void type metadata accessor for MinMaxScaler()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22A9EF610()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDECCC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22A9EF688(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v20;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  v12 = (v11 & v10) + v7;
  v13 = v12 + v8;
  v14 = (v13 & v10) + v12;
  v15 = v8 & 0x100000;
  if (v9 > 7 || v15 != 0 || v14 > 0x18)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v19(a1, a2, *(_QWORD *)(a3 + 16));
    v19((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)(((unint64_t)a2 + v11) & v10), v5);
    v20 = ((unint64_t)a2 + v13) & v10;
    v19((uint64_t *)(((unint64_t)v4 + v13) & v10), (uint64_t *)v20, v5);
    v19((uint64_t *)((v11 + (((unint64_t)v4 + v13) & v10)) & v10), (uint64_t *)((v11 + v20) & v10), v5);
  }
  return v4;
}

uint64_t sub_22A9EF788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v11(a1, v3);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  v8 = v5 + v6 + a1;
  v11(v8 & ~v6, v3);
  v9 = (v8 + (v7 & ~v6)) & ~v6;
  v11(v9, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)((v7 + v9) & ~v6, v3);
}

uint64_t sub_22A9EF820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  v10 = ((v8 + v9) & ~v9) + v8;
  v11 = (v9 + a1 + v10) & ~v9;
  v12 = (v9 + a2 + v10) & ~v9;
  v7(v11, v12, v5);
  v7((v8 + v9 + v11) & ~v9, (v8 + v9 + v12) & ~v9, v5);
  return a1;
}

uint64_t sub_22A9EF8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  v10 = ((v8 + v9) & ~v9) + v8;
  v11 = (v9 + a1 + v10) & ~v9;
  v12 = (v9 + a2 + v10) & ~v9;
  v7(v11, v12, v5);
  v7((v8 + v9 + v11) & ~v9, (v8 + v9 + v12) & ~v9, v5);
  return a1;
}

uint64_t sub_22A9EF998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  v10 = ((v8 + v9) & ~v9) + v8;
  v11 = (v9 + a1 + v10) & ~v9;
  v12 = (v9 + a2 + v10) & ~v9;
  v7(v11, v12, v5);
  v7((v8 + v9 + v11) & ~v9, (v8 + v9 + v12) & ~v9, v5);
  return a1;
}

uint64_t sub_22A9EFA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v7((v8 + v9 + a1) & ~v9, (v8 + v9 + a2) & ~v9, v5);
  v10 = ((v8 + v9) & ~v9) + v8;
  v11 = (v9 + a1 + v10) & ~v9;
  v12 = (v9 + a2 + v10) & ~v9;
  v7(v11, v12, v5);
  v7((v8 + v9 + v11) & ~v9, (v8 + v9 + v12) & ~v9, v5);
  return a1;
}

uint64_t sub_22A9EFB10(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v13;
  int v14;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = ((((v8 + v9) & ~v9) + v8 + v9) & ~v9) + ((v8 + v9) & ~v9) + v8;
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v13 = ((v7 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v13 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v13 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_18;
LABEL_11:
  v14 = (v12 - 1) << v11;
  if (v10 > 3)
    v14 = 0;
  if (!(_DWORD)v10)
    return (v6 + v14 + 1);
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9EFBDC + 4 * byte_22ABECB0E[(v10 - 1)]))();
}

void sub_22A9EFC28(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  char v11;
  BOOL v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = ((((v8 + v9) & ~v9) + v8 + v9) & ~v9) + ((v8 + v9) & ~v9) + v8;
  v11 = 8 * v10;
  v12 = a3 >= v7;
  v13 = a3 - v7;
  if (v13 != 0 && v12)
  {
    if (v10 <= 3)
    {
      v16 = ((v13 + ~(-1 << v11)) >> v11) + 1;
      if (HIWORD(v16))
      {
        v14 = 4u;
      }
      else if (v16 >= 0x100)
      {
        v14 = 2;
      }
      else
      {
        v14 = v16 > 1;
      }
    }
    else
    {
      v14 = 1u;
    }
  }
  else
  {
    v14 = 0;
  }
  if (v7 < a2)
  {
    v15 = ~v7 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v17 = v15 & ~(-1 << v11);
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v10 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_22A9EFDEC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9EFE38 + 4 * byte_22ABECB21[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9EFE6C + 4 * byte_22ABECB1C[v4]))();
}

uint64_t sub_22A9EFE6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9EFE74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9EFE7CLL);
  return result;
}

uint64_t sub_22A9EFE88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9EFE90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9EFE94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9EFE9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22A9EFEA8()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9EFEB8()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9EFEC8()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_2_24(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_5_20()
{
  return sub_22ABDECCC();
}

uint64_t OUTLINED_FUNCTION_6_24(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_7_24()
{
  return sub_22ABDECCC();
}

uint64_t OUTLINED_FUNCTION_8_18()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 160) + 8))(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 136));
}

uint64_t OUTLINED_FUNCTION_10_14()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_11_22()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_15_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_16_15(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_17_12()
{
  return sub_22ABDEB88();
}

void OUTLINED_FUNCTION_18_14()
{
  JUMPOUT(0x22E2E2F68);
}

uint64_t OUTLINED_FUNCTION_22_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_13(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_24_11@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_25_8()
{
  return sub_22ABDFF38();
}

void OUTLINED_FUNCTION_26_8()
{
  type metadata accessor for MinMaxScaler.Transformer.CodingKeys();
}

uint64_t OUTLINED_FUNCTION_28_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_30_10()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 168);
}

uint64_t SupervisedTabularEstimator.fitted(to:validateOn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  v11 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9ABF58;
  return v13(a1, a2, a3, 0, 0, a4, a5);
}

uint64_t SupervisedTabularEstimator<>.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;

  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return v9(a1, AssociatedTypeWitness, a5, v7, v8);
}

uint64_t SupervisedTabularEstimator<>.decode(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(AssociatedTypeWitness, AssociatedTypeWitness, a4, v7, v8);
}

uint64_t UpdatableSupervisedTabularEstimator.update(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  v9 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_22A9ADC14;
  return v11(a1, a2, 0, 0, a3, a4);
}

uint64_t dispatch thunk of SupervisedTabularEstimator.annotationColumnID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SupervisedTabularEstimator.annotationColumnID.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of SupervisedTabularEstimator.annotationColumnID.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SupervisedTabularEstimator.fitted(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9ABF58;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of SupervisedTabularEstimator.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of SupervisedTabularEstimator.decode(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of UpdatableSupervisedTabularEstimator.makeTransformer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UpdatableSupervisedTabularEstimator.update(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_22A9ADC14;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of UpdatableSupervisedTabularEstimator.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of UpdatableSupervisedTabularEstimator.decodeWithOptimizer(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_22A9F0410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16[6];
  uint64_t v17;

  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_22ABDF8D8();
    v9 = (uint64_t *)(a1 + 48);
    while (1)
    {
      v11 = *(v9 - 2);
      v10 = *(v9 - 1);
      v12 = *v9;
      v16[3] = a2;
      v16[4] = a3;
      v16[5] = a4;
      v16[0] = v11;
      v16[1] = v10;
      v16[2] = v12;
      sub_22ABDEAEC();
      sub_22ABDEAEC();
      sub_22A9F1054(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4)
        break;
      v9 += 3;
      sub_22ABDF884();
      sub_22ABDF908();
      sub_22ABDF914();
      sub_22ABDF8A8();
      if (!--v6)
      {
        v13 = v17;
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
    }
    v13 = v17;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v13;
}

void sub_22A9F057C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int *v7;
  int *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v27 = MEMORY[0x24BEE4AF8];
  sub_22AB4D044();
  v25 = a2;
  v26 = a1;
  if (v6)
  {
    v7 = (int *)(a1 + 32);
    v8 = (int *)(a2 + 32);
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v9 = v6;
    v10 = v4;
    v11 = v5;
    v12 = v5;
    while (v4)
    {
      if (!v11)
        goto LABEL_22;
      v13 = *v7;
      v14 = *v8;
      v15 = *(_QWORD *)(v27 + 16);
      if (v15 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        v22 = v10;
        v23 = v12;
        sub_22AB4D044();
        v10 = v22;
        v12 = v23;
      }
      *(_QWORD *)(v27 + 16) = v15 + 1;
      v16 = v27 + 8 * v15;
      --v11;
      *(_DWORD *)(v16 + 32) = v13;
      *(_DWORD *)(v16 + 36) = v14;
      --v4;
      ++v8;
      ++v7;
      if (!--v9)
        goto LABEL_13;
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    v10 = v4;
    v12 = v5;
LABEL_13:
    if (v10 <= v12)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v6 < v10)
    {
      if (v12 == v6)
        goto LABEL_20;
      if (v6 >= v12)
        goto LABEL_24;
      v17 = *(_DWORD *)(v26 + 32 + 4 * v6);
      v18 = *(_DWORD *)(v25 + 32 + 4 * v6);
      v19 = *(_QWORD *)(v27 + 16);
      if (v19 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        v21 = v10;
        v24 = v12;
        sub_22AB4D044();
        v12 = v24;
        v10 = v21;
      }
      ++v6;
      *(_QWORD *)(v27 + 16) = v19 + 1;
      v20 = v27 + 8 * v19;
      *(_DWORD *)(v20 + 32) = v17;
      *(_DWORD *)(v20 + 36) = v18;
      if (v10 == v6)
        goto LABEL_20;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t HumanBodyActionPeriodPredictor.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;

  type metadata accessor for HumanBodyActionPeriodPredictor.RequestActor();
  swift_allocObject();
  v2 = sub_22A9F254C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10648);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABECE50;
  if (qword_255B0D760 != -1)
    swift_once();
  v4 = *(_QWORD *)algn_255B16718;
  *(_QWORD *)(inited + 32) = qword_255B16710;
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = 0;
  v5 = qword_255B0D758;
  sub_22ABDEAEC();
  if (v5 != -1)
    swift_once();
  v6 = *(_QWORD *)algn_255B16708;
  *(_QWORD *)(inited + 56) = qword_255B16700;
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = 1;
  v7 = qword_255B0D780;
  sub_22ABDEAEC();
  if (v7 != -1)
    swift_once();
  v8 = *(_QWORD *)algn_255B16758;
  *(_QWORD *)(inited + 80) = qword_255B16750;
  *(_QWORD *)(inited + 88) = v8;
  *(_QWORD *)(inited + 96) = 2;
  v9 = qword_255B0D788;
  sub_22ABDEAEC();
  if (v9 != -1)
    swift_once();
  v10 = *(_QWORD *)algn_255B16768;
  *(_QWORD *)(inited + 104) = qword_255B16760;
  *(_QWORD *)(inited + 112) = v10;
  *(_QWORD *)(inited + 120) = 3;
  v11 = qword_255B0D790;
  sub_22ABDEAEC();
  if (v11 != -1)
    swift_once();
  v12 = *(_QWORD *)algn_255B16778;
  *(_QWORD *)(inited + 128) = qword_255B16770;
  *(_QWORD *)(inited + 136) = v12;
  *(_QWORD *)(inited + 144) = 4;
  v13 = qword_255B0D768;
  sub_22ABDEAEC();
  if (v13 != -1)
    swift_once();
  v14 = *(_QWORD *)algn_255B16728;
  *(_QWORD *)(inited + 152) = qword_255B16720;
  *(_QWORD *)(inited + 160) = v14;
  *(_QWORD *)(inited + 168) = 5;
  v15 = qword_255B0D770;
  sub_22ABDEAEC();
  if (v15 != -1)
    swift_once();
  v16 = *(_QWORD *)algn_255B16738;
  *(_QWORD *)(inited + 176) = qword_255B16730;
  *(_QWORD *)(inited + 184) = v16;
  *(_QWORD *)(inited + 192) = 6;
  v17 = qword_255B0D778;
  sub_22ABDEAEC();
  if (v17 != -1)
    swift_once();
  v18 = *(_QWORD *)algn_255B16748;
  *(_QWORD *)(inited + 200) = qword_255B16740;
  *(_QWORD *)(inited + 208) = v18;
  *(_QWORD *)(inited + 216) = 7;
  v19 = qword_255B0D7B8;
  sub_22ABDEAEC();
  if (v19 != -1)
    swift_once();
  v20 = *(_QWORD *)algn_255B167C8;
  *(_QWORD *)(inited + 224) = qword_255B167C0;
  *(_QWORD *)(inited + 232) = v20;
  *(_QWORD *)(inited + 240) = 8;
  v21 = qword_255B0D7C0;
  sub_22ABDEAEC();
  if (v21 != -1)
    swift_once();
  v22 = *(_QWORD *)algn_255B167D8;
  *(_QWORD *)(inited + 248) = qword_255B167D0;
  *(_QWORD *)(inited + 256) = v22;
  *(_QWORD *)(inited + 264) = 9;
  v23 = qword_255B0D7C8;
  sub_22ABDEAEC();
  if (v23 != -1)
    swift_once();
  v24 = *(_QWORD *)algn_255B167E8;
  *(_QWORD *)(inited + 272) = qword_255B167E0;
  *(_QWORD *)(inited + 280) = v24;
  *(_QWORD *)(inited + 288) = 10;
  v25 = qword_255B0D7A0;
  sub_22ABDEAEC();
  if (v25 != -1)
    swift_once();
  v26 = *(_QWORD *)algn_255B16798;
  *(_QWORD *)(inited + 296) = qword_255B16790;
  *(_QWORD *)(inited + 304) = v26;
  *(_QWORD *)(inited + 312) = 11;
  v27 = qword_255B0D7A8;
  sub_22ABDEAEC();
  if (v27 != -1)
    swift_once();
  v28 = *(_QWORD *)algn_255B167A8;
  *(_QWORD *)(inited + 320) = qword_255B167A0;
  *(_QWORD *)(inited + 328) = v28;
  *(_QWORD *)(inited + 336) = 12;
  v29 = qword_255B0D7B0;
  sub_22ABDEAEC();
  if (v29 != -1)
    swift_once();
  v30 = *(_QWORD *)algn_255B167B8;
  *(_QWORD *)(inited + 344) = qword_255B167B0;
  *(_QWORD *)(inited + 352) = v30;
  *(_QWORD *)(inited + 360) = 13;
  v31 = qword_255B0D750;
  sub_22ABDEAEC();
  if (v31 != -1)
    swift_once();
  v32 = *(_QWORD *)algn_255B166F8;
  *(_QWORD *)(inited + 368) = qword_255B166F0;
  *(_QWORD *)(inited + 376) = v32;
  *(_QWORD *)(inited + 384) = 14;
  v33 = qword_255B0D740;
  sub_22ABDEAEC();
  if (v33 != -1)
    swift_once();
  v34 = *(_QWORD *)algn_255B166D8;
  *(_QWORD *)(inited + 392) = qword_255B166D0;
  *(_QWORD *)(inited + 400) = v34;
  *(_QWORD *)(inited + 408) = 15;
  v35 = qword_255B0D748;
  sub_22ABDEAEC();
  if (v35 != -1)
    swift_once();
  v36 = *(_QWORD *)algn_255B166E8;
  *(_QWORD *)(inited + 416) = qword_255B166E0;
  *(_QWORD *)(inited + 424) = v36;
  *(_QWORD *)(inited + 432) = 16;
  v37 = qword_255B0D738;
  sub_22ABDEAEC();
  if (v37 != -1)
    swift_once();
  v38 = *(_QWORD *)algn_255B166C8;
  *(_QWORD *)(inited + 440) = qword_255B166C0;
  *(_QWORD *)(inited + 448) = v38;
  *(_QWORD *)(inited + 456) = 17;
  sub_22A9F25A8();
  sub_22ABDEAEC();
  result = sub_22ABDEAC8();
  *a1 = v2;
  a1[1] = 90;
  a1[2] = result;
  return result;
}

uint64_t type metadata accessor for HumanBodyActionPeriodPredictor.RequestActor()
{
  return objc_opt_self();
}

uint64_t HumanBodyActionPeriodPredictor.applied(to:eventHandler:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 32) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 40) = v5;
  *v5 = v2;
  v5[1] = sub_22A9F0D74;
  return sub_22A9F0DF4(a1);
}

uint64_t sub_22A9F0D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_22A9F0DE8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9F0DF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_22A9F0E1C()
{
  uint64_t *v0;

  v0[6] = (uint64_t)sub_22A9F18D8(v0[2]);
  v0[7] = 0;
  return swift_task_switch();
}

uint64_t sub_22A9F0E9C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[7];
  v0[8] = (uint64_t)sub_22A9F2088(v0[6]);
  v0[9] = v1;
  return swift_task_switch();
}

void sub_22A9F0EF8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  v2 = *(_QWORD *)(v0 + 64);
  if ((int64_t)v1 >= *(_QWORD *)(v0 + 32))
    goto LABEL_4;
  if (*(_QWORD *)(v2 + 16) >= v1)
  {
    v2 = sub_22A99EA8C(*(_QWORD *)(v0 + 64), v2 + 32, 0, (2 * v1) | 1);
LABEL_4:

    (*(void (**)(uint64_t))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_22A9F0F74()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22A9F0FA8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *a2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_22A9BEB54;
  return HumanBodyActionPeriodPredictor.applied(to:eventHandler:)(v3);
}

float *sub_22A9F0FF8(void *a1, float a2)
{
  uint64_t v2;
  id v4;
  float *result;
  uint64_t v6;

  v4 = a1;
  result = (float *)sub_22ABDF638();
  if (!v2 && result)
  {
    if (v6 < 0)
    {
      __break(1u);
    }
    else
    {
      for (; v6; --v6)
        *result++ = a2;
    }
  }
  return result;
}

void sub_22A9F1054(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  char v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  double v36;
  double v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  id v49;
  id v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  id v59;
  id v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  id v69;
  id v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  float v95;
  float v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;

  v3 = *a1;
  v4 = *(_QWORD *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(qword_2540E8788);
  v5 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v5 + 16) = xmmword_22ABECE60;
  OUTLINED_FUNCTION_2_20(v5, (unint64_t *)&qword_2540E8628);
  *(_QWORD *)(v5 + 32) = sub_22ABDF548();
  *(_QWORD *)(v5 + 40) = sub_22ABDF548();
  *(_QWORD *)(v5 + 48) = sub_22ABDF548();
  sub_22ABDF014();
  v6 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
  v7 = OUTLINED_FUNCTION_11_23();
  v9 = sub_22ABC7628(v7, v8);
  v10 = v9;
  if (v2)
    return;
  v128 = v4;
  sub_22A9F0FF8(v9, 0.0);
  v11 = v10;
  v104 = sub_22ABDF638();
  v109 = (uint64_t)v10;
  v138 = v11;
  v118 = v3 + 64;
  v12 = 1 << *(_BYTE *)(v3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v3 + 64);
  v123 = (unint64_t)(v12 + 63) >> 6;
  sub_22ABDEAEC();
  v15 = 0;
  v16 = v128;
  while (v14)
  {
    v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v18 = v17 | (v15 << 6);
LABEL_30:
    v29 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v18);
    v30 = *v29;
    v31 = v29[1];
    v32 = *(_QWORD *)(v3 + 16);
    sub_22ABDEAEC();
    if (!v32)
      goto LABEL_55;
    sub_22ABDEAEC();
    v33 = sub_22AA03684(v30, v31);
    if ((v34 & 1) == 0)
    {
      OUTLINED_FUNCTION_27_7();
LABEL_55:
      sub_22ABDF7A0();
      sub_22ABDEDC8();
      sub_22ABDFA34();
      OUTLINED_FUNCTION_27_7();
      sub_22A9B7B50();
      v97 = OUTLINED_FUNCTION_53();
      *(_QWORD *)v98 = 0;
      *(_QWORD *)(v98 + 8) = 0xE000000000000000;
      *(_QWORD *)(v98 + 16) = 0;
      *(_QWORD *)(v98 + 24) = 0;
      *(_BYTE *)(v98 + 32) = 0;
      swift_willThrow(v97);
      OUTLINED_FUNCTION_21_3();

      return;
    }
    v35 = *(_QWORD *)(v3 + 56) + 40 * v33;
    v37 = *(double *)(v35 + 16);
    v36 = *(double *)(v35 + 24);
    v38 = *(_DWORD *)(v35 + 32);
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_27_7();
    if (*(_QWORD *)(v16 + 16) && (v39 = v16, v40 = sub_22AA03684(v30, v31), (v41 & 1) != 0))
    {
      v133 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v40);
      v42 = OUTLINED_FUNCTION_27_7();
      v49 = OUTLINED_FUNCTION_3_25(v42, sel_strides, v43, v44, v45, v46, v47, v48, v99, v104, v109, v114, v118, v123, v128, v133, v138);
      OUTLINED_FUNCTION_1_22();
      OUTLINED_FUNCTION_0_18();
      sub_22A9B8810(2uLL, (v16 & 0xC000000000000001) == 0, v16);
      if ((v16 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_16_16();
      v50 = *(id *)(v16 + 48);
      v51 = OUTLINED_FUNCTION_2_25();
      OUTLINED_FUNCTION_17_13(v51, sel_integerValue);
      OUTLINED_FUNCTION_0_18();
      if ((unsigned __int128)(v134 * (__int128)v16) >> 64 != (v134 * v16) >> 63)
        goto LABEL_60;
      v59 = OUTLINED_FUNCTION_3_25(v52, sel_strides, v53, v54, v55, v56, v57, v58, v100, v105, v110, v134 * v16, v119, v124, v129, v134, v139);
      OUTLINED_FUNCTION_1_22();
      OUTLINED_FUNCTION_0_18();
      OUTLINED_FUNCTION_6_25();
      if ((v16 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_16_16();
      v60 = *(id *)(v16 + 40);
      v61 = OUTLINED_FUNCTION_2_25();
      OUTLINED_FUNCTION_17_13(v61, sel_integerValue);
      OUTLINED_FUNCTION_0_18();
      v69 = OUTLINED_FUNCTION_3_25(v62, sel_strides, v63, v64, v65, v66, v67, v68, v101, v106, v111, v115, v120, v125, v130, v135, v140);
      OUTLINED_FUNCTION_1_22();
      OUTLINED_FUNCTION_8_19();
      OUTLINED_FUNCTION_7_25();
      if (((unint64_t)v59 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_15_14();
      v70 = *((id *)v59 + 6);
      OUTLINED_FUNCTION_21_15();
      objc_msgSend(v69, sel_integerValue);
      OUTLINED_FUNCTION_8_19();
      OUTLINED_FUNCTION_20_15();
      if (!v79)
        goto LABEL_61;
      v80 = v16 + v78;
      if (__OFADD__(v39, v78))
        goto LABEL_62;
      v81 = OUTLINED_FUNCTION_3_25(v71, sel_strides, v72, v73, v74, v75, v76, v77, v102, v107, v112, v116, v121, v126, v131, v136, v141);
      OUTLINED_FUNCTION_1_22();
      OUTLINED_FUNCTION_0_18();
      OUTLINED_FUNCTION_6_25();
      if ((v39 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_16_16();
      v82 = *(id *)(v39 + 40);
      v83 = OUTLINED_FUNCTION_2_25();
      OUTLINED_FUNCTION_17_13(v83, sel_integerValue);
      OUTLINED_FUNCTION_0_18();
      if (v39 + 0x4000000000000000 < 0)
        goto LABEL_63;
      v91 = OUTLINED_FUNCTION_3_25(v84, sel_strides, v85, v86, v87, v88, v89, v90, v103, v108, v113, v117, v122, v127, v132, v137, v142);
      OUTLINED_FUNCTION_1_22();
      OUTLINED_FUNCTION_8_19();
      OUTLINED_FUNCTION_7_25();
      if ((v39 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_15_14();
      v92 = *(id *)((v39 & 0xC000000000000001) + 0x30);
      OUTLINED_FUNCTION_21_15();
      objc_msgSend((id)(v39 & 0xC000000000000001), sel_integerValue);
      OUTLINED_FUNCTION_8_19();
      OUTLINED_FUNCTION_20_15();
      if (!v79)
        goto LABEL_64;
      v22 = __OFADD__(2 * v39, v93);
      v94 = 2 * v39 + v93;
      if (v22)
        goto LABEL_65;
      v95 = v37;
      *(float *)(v104 + 4 * v114) = v95;
      v96 = v36;
      *(float *)(v104 + 4 * v80) = v96;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v104 + 4 * v94) = v38;
      v16 = v128;
    }
    else
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_27_7();
    }
  }
  v19 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if (v19 >= v123)
    goto LABEL_57;
  v20 = *(_QWORD *)(v118 + 8 * v19);
  ++v15;
  if (v20)
    goto LABEL_29;
  v15 = v19 + 1;
  OUTLINED_FUNCTION_14_17();
  if (v21 == v22)
    goto LABEL_57;
  OUTLINED_FUNCTION_13_21();
  if (v20)
    goto LABEL_29;
  v15 = v23 + 2;
  OUTLINED_FUNCTION_14_17();
  if (v21 == v22)
    goto LABEL_57;
  OUTLINED_FUNCTION_13_21();
  if (v20)
    goto LABEL_29;
  v15 = v24 + 3;
  OUTLINED_FUNCTION_14_17();
  if (v21 == v22)
    goto LABEL_57;
  OUTLINED_FUNCTION_13_21();
  if (v20)
    goto LABEL_29;
  v15 = v25 + 4;
  OUTLINED_FUNCTION_14_17();
  if (v21 == v22)
    goto LABEL_57;
  OUTLINED_FUNCTION_13_21();
  if (v20)
  {
LABEL_29:
    v14 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
    goto LABEL_30;
  }
  v27 = v26 + 5;
  if (v27 >= v123)
  {
LABEL_57:
    OUTLINED_FUNCTION_21_3();
    return;
  }
  v20 = *(_QWORD *)(v118 + 8 * v27);
  if (v20)
  {
    v15 = v27;
    goto LABEL_29;
  }
  while (1)
  {
    v15 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    OUTLINED_FUNCTION_14_17();
    if (v21 == v22)
      goto LABEL_57;
    OUTLINED_FUNCTION_13_21();
    v27 = v28 + 1;
    if (v20)
      goto LABEL_29;
  }
LABEL_66:
  __break(1u);
}

void sub_22A9F1678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a2);
  __swift_instantiateConcreteTypeFromMangledName(qword_2540E8788);
  v5 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v5 + 16) = xmmword_22ABECE60;
  *(_QWORD *)(v5 + 32) = v4;
  sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8628);
  v6 = v4;
  *(_QWORD *)(v5 + 40) = sub_22ABDF548();
  *(_QWORD *)(v5 + 48) = sub_22ABDF548();
  sub_22ABDF014();
  v7 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
  v8 = OUTLINED_FUNCTION_11_23();
  v10 = sub_22ABC7628(v8, v9);
  if (v2)
  {

  }
  else
  {
    v11 = v10;
    sub_22A9F0FF8(v10, 0.0);
    v12 = v11;
    v13 = sub_22ABDEAEC();
    v14 = MEMORY[0x22E2E3268](v13);
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      v14 = sub_22ABDF050();
    OUTLINED_FUNCTION_2_20(v14, &qword_255B10788);
    sub_22ABDF0A4();
    sub_22ABDF014();

    sub_22A9F1840(a1, 0, 65568);
  }
}

id sub_22A9F1840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;

  sub_22A9BEDCC(0, &qword_255B10788);
  v5 = (void *)sub_22ABDEFE4();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v5, a2, a3);

  return v6;
}

id sub_22A9F18D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = v1[1];
  v4 = *(_QWORD *)(a1 + 16);
  if (v3 < v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v5 = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(v5 + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(v5 + 32) = v4;
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_9_22();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_9_22();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    v6 = 0xD000000000000023;
    sub_22A9B7B50();
    v7 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v8 = v5;
    *(_QWORD *)(v8 + 8) = 0xD000000000000023;
    *(_QWORD *)(v8 + 16) = 0x800000022ABE2400;
    *(_QWORD *)(v8 + 24) = 0;
    *(_BYTE *)(v8 + 32) = 6;
    swift_willThrow(v7);
    return (id)v6;
  }
  v10 = v1[2];
  v6 = *v1;
  swift_retain();
  sub_22ABDEAEC();
  v11 = sub_22A9F0410(a1, v6, v3, v10);
  if (v2)
    return (id)v6;
  v13 = v11;
  if (v3 > (unint64_t)v4)
  {
    sub_22A9F1678(v11, v3 - v4);
    v6 = v14;
    swift_bridgeObjectRelease();
    return (id)v6;
  }
  OUTLINED_FUNCTION_2_20(v11, &qword_255B10788);
  return sub_22A9F1840(v13, 0, 65568);
}

float HumanBodyActionPeriodPredictor.Prediction.period.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void HumanBodyActionPeriodPredictor.Prediction.period.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*HumanBodyActionPeriodPredictor.Prediction.period.modify())()
{
  return nullsub_1;
}

float HumanBodyActionPeriodPredictor.Prediction.periodicity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void HumanBodyActionPeriodPredictor.Prediction.periodicity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*HumanBodyActionPeriodPredictor.Prediction.periodicity.modify())()
{
  return nullsub_1;
}

CreateMLComponents::HumanBodyActionPeriodPredictor::Prediction __swiftcall HumanBodyActionPeriodPredictor.Prediction.init(period:periodicity:)(Swift::Float period, Swift::Float periodicity)
{
  Swift::Float *v2;
  CreateMLComponents::HumanBodyActionPeriodPredictor::Prediction result;

  *v2 = period;
  v2[1] = periodicity;
  result.periodicity = periodicity;
  result.period = period;
  return result;
}

uint64_t sub_22A9F1B10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x646F69726570 && a2 == 0xE600000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6369646F69726570 && a2 == 0xEB00000000797469)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22A9F1C0C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6369646F69726570;
  else
    return 0x646F69726570;
}

uint64_t sub_22A9F1C48()
{
  char *v0;

  return sub_22A9F1C0C(*v0);
}

uint64_t sub_22A9F1C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9F1B10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9F1C74()
{
  sub_22A9F25E4();
  return sub_22ABE02EC();
}

uint64_t sub_22A9F1C9C()
{
  sub_22A9F25E4();
  return sub_22ABE02F8();
}

uint64_t HumanBodyActionPeriodPredictor.Prediction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10668);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9F25E4();
  sub_22ABE02B0();
  v8[15] = 0;
  OUTLINED_FUNCTION_10_15();
  if (!v1)
  {
    v8[14] = 1;
    OUTLINED_FUNCTION_10_15();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_22A9F1DC8(_QWORD *a1)
{
  return HumanBodyActionPeriodPredictor.Prediction.encode(to:)(a1);
}

uint64_t HumanBodyActionPeriodPredictor.Prediction.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B10678);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9F25E4();
  sub_22ABE0298();
  if (!v2)
  {
    OUTLINED_FUNCTION_12_17();
    v7 = v6;
    OUTLINED_FUNCTION_12_17();
    v9 = v8;
    OUTLINED_FUNCTION_14_5();
    *a2 = v7;
    a2[1] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_22A9F1EFC@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return HumanBodyActionPeriodPredictor.Prediction.init(from:)(a1, a2);
}

BOOL static HumanBodyActionPeriodPredictor.Prediction.== infix(_:_:)(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t HumanBodyActionPeriodPredictor.Prediction.hash(into:)()
{
  sub_22ABE0268();
  return sub_22ABE0268();
}

uint64_t HumanBodyActionPeriodPredictor.Prediction.hashValue.getter()
{
  sub_22ABE0244();
  HumanBodyActionPeriodPredictor.Prediction.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22A9F1FD4()
{
  sub_22ABE0244();
  HumanBodyActionPeriodPredictor.Prediction.hash(into:)();
  return sub_22ABE0280();
}

id sub_22A9F2018()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_22ABDED2C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithModelName_, v1);

  return v2;
}

id sub_22A9F2088(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  id v10;
  id v11;
  id v12;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  id v34;
  id v35[12];

  v3 = v1;
  v35[11] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10778);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(inited + 32) = 0x7365736F70;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v10 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, a1);
  *(_QWORD *)(inited + 72) = sub_22A9BEDCC(0, &qword_255B10780);
  *(_QWORD *)(inited + 48) = v10;
  sub_22ABDEAC8();
  v11 = objc_allocWithZone(MEMORY[0x24BDBFF80]);
  v12 = sub_22A9F76E0();
  if (!v2)
  {
    v14 = v12;
    v15 = objc_msgSend(*(id *)(v3 + 112), sel_model);
    v35[0] = 0;
    v16 = objc_msgSend(v15, sel_predictionFromFeatures_error_, v14, v35);

    v11 = v35[0];
    if (v16)
    {
      v17 = v35[0];
      v11 = (id)sub_22ABDED2C();
      v18 = objc_msgSend(v16, sel_featureValueForName_, v11);

      if (v18
        && (v11 = objc_msgSend(v18, sel_multiArrayValue), v18, v11))
      {
        v19 = (void *)sub_22ABDED2C();
        v20 = objc_msgSend(v16, (SEL)&stru_24F4D15B0.align, v19);

        if (v20
          && (v21 = objc_msgSend(v20, sel_multiArrayValue), v20, v21))
        {
          v34 = v11;
          sub_22ABDE8B8();
          sub_22A9A9038();
          v22 = sub_22ABDE930();
          v32 = *(void (**)(char *, uint64_t))(v6 + 8);
          v33 = v22;
          v32(v8, v5);
          v23 = v21;
          sub_22ABDE8B8();
          v24 = sub_22ABDE930();
          v32(v8, v5);
          sub_22A9F057C(v33, v24);
          v11 = v25;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_unknownObjectRelease();
        }
        else
        {
          sub_22A9B7B50();
          v30 = swift_allocError();
          *(_QWORD *)v31 = 0xD000000000000026;
          *(_QWORD *)(v31 + 8) = 0x800000022ABE23A0;
          *(_QWORD *)(v31 + 16) = 0xD00000000000002ALL;
          *(_QWORD *)(v31 + 24) = 0x800000022ABE23D0;
          *(_BYTE *)(v31 + 32) = 5;
          swift_willThrow(v30);

          swift_unknownObjectRelease();
        }
      }
      else
      {
        sub_22A9B7B50();
        v26 = swift_allocError();
        *(_QWORD *)v27 = 0xD000000000000026;
        *(_QWORD *)(v27 + 8) = 0x800000022ABE23A0;
        *(_QWORD *)(v27 + 16) = 0xD00000000000002ALL;
        *(_QWORD *)(v27 + 24) = 0x800000022ABE23D0;
        *(_BYTE *)(v27 + 32) = 5;
        swift_willThrow(v26);

        swift_unknownObjectRelease();
      }
    }
    else
    {
      v28 = v35[0];
      sub_22ABDD004();

      swift_willThrow(v29);
    }
  }
  return v11;
}

uint64_t sub_22A9F2528()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_22A9F254C()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  sub_22A9BEDCC(0, &qword_255B10790);
  sub_22ABDED50();
  *(_QWORD *)(v0 + 112) = sub_22A9F2018();
  return v0;
}

unint64_t sub_22A9F25A8()
{
  unint64_t result;

  result = qword_255B10650;
  if (!qword_255B10650)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for JointKey, &type metadata for JointKey);
    atomic_store(result, (unint64_t *)&qword_255B10650);
  }
  return result;
}

unint64_t sub_22A9F25E4()
{
  unint64_t result;

  result = qword_255B10670;
  if (!qword_255B10670)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED080, &type metadata for HumanBodyActionPeriodPredictor.Prediction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10670);
  }
  return result;
}

unint64_t sub_22A9F2624()
{
  unint64_t result;

  result = qword_255B106A8;
  if (!qword_255B106A8)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for HumanBodyActionPeriodPredictor.Prediction, &type metadata for HumanBodyActionPeriodPredictor.Prediction);
    atomic_store(result, (unint64_t *)&qword_255B106A8);
  }
  return result;
}

uint64_t destroy for HumanBodyActionPeriodPredictor()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s18CreateMLComponents30HumanBodyActionPeriodPredictorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *assignWithCopy for HumanBodyActionPeriodPredictor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for HumanBodyActionPeriodPredictor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HumanBodyActionPeriodPredictor()
{
  return &type metadata for HumanBodyActionPeriodPredictor;
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HumanBodyActionPeriodPredictor.Prediction(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HumanBodyActionPeriodPredictor.Prediction(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HumanBodyActionPeriodPredictor.Prediction()
{
  return &type metadata for HumanBodyActionPeriodPredictor.Prediction;
}

uint64_t storeEnumTagSinglePayload for HumanBodyActionPeriodPredictor.Prediction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9F2830 + 4 * byte_22ABECE75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9F2864 + 4 * byte_22ABECE70[v4]))();
}

uint64_t sub_22A9F2864(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9F286C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9F2874);
  return result;
}

uint64_t sub_22A9F2880(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9F2888);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9F288C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9F2894(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HumanBodyActionPeriodPredictor.Prediction.CodingKeys()
{
  return &type metadata for HumanBodyActionPeriodPredictor.Prediction.CodingKeys;
}

unint64_t sub_22A9F28B4()
{
  unint64_t result;

  result = qword_255B10760;
  if (!qword_255B10760)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED030, &type metadata for HumanBodyActionPeriodPredictor.Prediction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10760);
  }
  return result;
}

unint64_t sub_22A9F28F4()
{
  unint64_t result;

  result = qword_255B10768;
  if (!qword_255B10768)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABECFA0, &type metadata for HumanBodyActionPeriodPredictor.Prediction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10768);
  }
  return result;
}

unint64_t sub_22A9F2934()
{
  unint64_t result;

  result = qword_255B10770;
  if (!qword_255B10770)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABECFC8, &type metadata for HumanBodyActionPeriodPredictor.Prediction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10770);
  }
  return result;
}

void OUTLINED_FUNCTION_0_18()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_2_25()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_3_25(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id a17)
{
  return objc_msgSend(a17, a2);
}

unint64_t OUTLINED_FUNCTION_6_25()
{
  char v0;
  uint64_t v1;
  char v2;

  if (v0)
    v2 = 1;
  else
    v2 = 0;
  return sub_22A9B8810(1uLL, v2, v1);
}

unint64_t OUTLINED_FUNCTION_7_25()
{
  char v0;
  uint64_t v1;
  char v2;

  if (v0)
    v2 = 1;
  else
    v2 = 0;
  return sub_22A9B8810(2uLL, v2, v1);
}

void OUTLINED_FUNCTION_8_19()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_9_22()
{
  return sub_22ABDFD7C();
}

uint64_t OUTLINED_FUNCTION_10_15()
{
  return sub_22ABDFD28();
}

uint64_t OUTLINED_FUNCTION_11_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_12_17()
{
  return sub_22ABDFC68();
}

void OUTLINED_FUNCTION_15_14()
{
  JUMPOUT(0x22E2E3A9CLL);
}

void OUTLINED_FUNCTION_16_16()
{
  JUMPOUT(0x22E2E3A9CLL);
}

id OUTLINED_FUNCTION_17_13(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_21_15()
{
  return swift_bridgeObjectRelease();
}

uint64_t DenseMatrix.subscript.read(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;

  v8 = *(_QWORD *)(a4 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  *a1 = v8;
  a1[1] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  a1[2] = malloc(v10);
  a1[3] = malloc(v10);
  if ((v4[2] & 1) != 0)
  {
    v11 = *v4;
    v12 = a3 * *v4;
    v13 = (unsigned __int128)(a3 * (__int128)v11) >> 64 != v12 >> 63;
    result = swift_retain();
    if (v13)
    {
      __break(1u);
    }
    else
    {
      result = v12 + a2;
      if (!__OFADD__(v12, a2))
      {
        OUTLINED_FUNCTION_12_18();
        v15 = sub_22A9F2B98;
LABEL_8:
        swift_release();
        return (uint64_t)v15;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
  v16 = v4[1];
  v17 = a2 * v16;
  v18 = (unsigned __int128)(a2 * (__int128)v16) >> 64 != (a2 * v16) >> 63;
  result = swift_retain();
  if (v18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  result = v17 + a3;
  if (!__OFADD__(v17, a3))
  {
    OUTLINED_FUNCTION_12_18();
    v15 = sub_22A9F2B64;
    goto LABEL_8;
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_22A9F2B64(uint64_t *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)a1[3];
  OUTLINED_FUNCTION_75_1(a1[1]);
  v3 = (void *)a1[2];
  free(v2);
  OUTLINED_FUNCTION_0_2(v3);
}

void sub_22A9F2B98(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 16);
  OUTLINED_FUNCTION_75_1(*(_QWORD *)(a1 + 8));
  free(*(void **)(a1 + 24));
  OUTLINED_FUNCTION_0_2(v2);
}

uint64_t DenseMatrix.rowCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DenseMatrix.columnCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t DenseMatrix.layout.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DenseMatrix.leadingDimension.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 8;
  if (*(_BYTE *)(v0 + 16))
    v1 = 0;
  return *(_QWORD *)(v0 + v1);
}

uint64_t DenseMatrix.storage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*DenseMatrix.storage.modify())()
{
  return nullsub_1;
}

uint64_t DenseMatrix.scalars.getter()
{
  return swift_retain();
}

uint64_t DenseMatrix.count.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[1];
  result = *v0 * v1;
  if ((unsigned __int128)(*v0 * (__int128)v1) >> 64 != result >> 63)
    __break(1u);
  return result;
}

void DenseMatrix.init(rowCount:columnCount:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;

  OUTLINED_FUNCTION_13_22();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_34();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  sub_22ABDFF20();
  if ((unsigned __int128)(v3 * (__int128)a2) >> 64 == (v3 * a2) >> 63)
  {
    v7 = sub_22ABDF95C();
    *(_QWORD *)v2 = v3;
    *(_QWORD *)(v2 + 8) = a2;
    *(_BYTE *)(v2 + 16) = 0;
    *(_QWORD *)(v2 + 24) = v7;
    OUTLINED_FUNCTION_3();
  }
  else
  {
    __break(1u);
  }
}

{
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_3_23();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v4);
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  sub_22ABDFF20();
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 == (a1 * a2) >> 63)
  {
    sub_22ABDF95C();
    OUTLINED_FUNCTION_11_85();
    OUTLINED_FUNCTION_17_18();
  }
  else
  {
    __break(1u);
  }
}

void DenseMatrix.init<A>(rowCount:columnCount:layout:scalars:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_13_22();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16 - v15, v17, v18);
  v19 = sub_22ABDF11C();
  swift_retain();
  v20 = sub_22ABDF920();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a4, a6);
  swift_release();
  if ((unsigned __int128)(v7 * (__int128)a2) >> 64 == (v7 * a2) >> 63)
  {
    if (v20 == v7 * a2)
    {
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = a2;
      *(_BYTE *)(v6 + 16) = a3 & 1;
      *(_QWORD *)(v6 + 24) = v19;
      OUTLINED_FUNCTION_3();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void DenseMatrix.init(rowCount:columnCount:layout:repeating:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  OUTLINED_FUNCTION_13_22();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_6_26();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v7, v15, v16);
  if ((unsigned __int128)(v6 * (__int128)a2) >> 64 == (v6 * a2) >> 63)
  {
    v17 = a3 & 1;
    v18 = sub_22ABDF95C();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a4, a5);
    *(_QWORD *)v5 = v6;
    *(_QWORD *)(v5 + 8) = a2;
    *(_BYTE *)(v5 + 16) = v17;
    *(_QWORD *)(v5 + 24) = v18;
    OUTLINED_FUNCTION_3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t DenseMatrix.init(rowCount:columnCount:layout:initializingWith:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_13_22();
  result = v5 * v3;
  if ((unsigned __int128)(v2 * (__int128)v3) >> 64 == result >> 63)
  {
    v7 = v4;
    v8 = v3;
    MEMORY[0x24BDAC7A8](result);
    result = sub_22A9F2FBC();
    if (!v1)
    {
      *(_QWORD *)v0 = v2;
      *(_QWORD *)(v0 + 8) = v8;
      *(_BYTE *)(v0 + 16) = v7 & 1;
      *(_QWORD *)(v0 + 24) = result;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22A9F2FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22ABDF080();
  if (!v0)
  {
    sub_22ABDEAEC();
    v1 = sub_22ABDF7F4();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      v2 = sub_22ABDF0F8();
      MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v2);
      v1 = sub_22ABE0124();
    }
    swift_bridgeObjectRelease();
  }
  return v1;
}

void DenseMatrix.subscript.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD v6[4];

  DenseMatrix.subscript.read(v6, a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))(a4);
  OUTLINED_FUNCTION_9_23((uint64_t)v6);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_22A9F30B4@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, _QWORD);
  _QWORD v15[4];
  __int128 v16;
  char v17;
  uint64_t v18;

  v6 = *(uint64_t *)((char *)a2 + a3 - 16);
  v5 = *(uint64_t *)((char *)a2 + a3 - 8);
  v7 = *((_BYTE *)a1 + 16);
  v8 = *((_QWORD *)a1 + 3);
  v9 = *a2;
  v10 = a2[1];
  v16 = *a1;
  v17 = v7;
  v18 = v8;
  swift_retain();
  v12 = type metadata accessor for DenseMatrix(0, v6, v5, v11);
  v13 = (void (*)(_QWORD *, _QWORD))DenseMatrix.subscript.read(v15, v9, v10, v12);
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4);
  v13(v15, 0);
  return swift_release();
}

uint64_t sub_22A9F3168(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  void (*v11[4])(uint64_t);

  v5 = *(uint64_t *)((char *)a3 + a4 - 16);
  v6 = *a3;
  v7 = a3[1];
  type metadata accessor for DenseMatrix(0, v5, *(uint64_t *)((char *)a3 + a4 - 8), a4);
  v8 = DenseMatrix.subscript.modify(v11, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(v9, a1, v5);
  return ((uint64_t (*)(void (**)(uint64_t), _QWORD))v8)(v11, 0);
}

void (*DenseMatrix.subscript.modify(void (**a1)(uint64_t a1), uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t *v3;
  void (*result)(uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;

  result = (void (*)(uint64_t))malloc(0x60uLL);
  v8 = result;
  *a1 = result;
  if ((v3[2] & 1) != 0)
  {
    v9 = a3 * *v3;
    if ((unsigned __int128)(a3 * (__int128)*v3) >> 64 == v9 >> 63)
    {
      if (!__OFADD__(v9, a2))
      {
        *((_QWORD *)result + 10) = DenseMatrix.storage.modify();
        OUTLINED_FUNCTION_14_18();
        *((_QWORD *)v8 + 11) = OUTLINED_FUNCTION_8_20();
        return sub_22A9F3314;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  v10 = v3[1];
  if ((unsigned __int128)(a2 * (__int128)v10) >> 64 != (a2 * v10) >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!__OFADD__(a2 * v10, a3))
  {
    *((_QWORD *)result + 8) = DenseMatrix.storage.modify();
    OUTLINED_FUNCTION_14_18();
    *((_QWORD *)v8 + 9) = OUTLINED_FUNCTION_8_20();
    return sub_22A9F32E0;
  }
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t *v3;
  void (*result)(uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;

  result = (void (*)(uint64_t))malloc(0x30uLL);
  v8 = result;
  *a1 = result;
  if ((v3[2] & 1) != 0)
  {
    v9 = a3 * *v3;
    if ((unsigned __int128)(a3 * (__int128)*v3) >> 64 == v9 >> 63)
    {
      if (!__OFADD__(v9, a2))
      {
        OUTLINED_FUNCTION_33_59();
        *((_QWORD *)v8 + 5) = OUTLINED_FUNCTION_46_41();
        return sub_22AB8EA94;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  v10 = v3[1];
  if ((unsigned __int128)(a2 * (__int128)v10) >> 64 != (a2 * v10) >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!__OFADD__(a2 * v10, a3))
  {
    OUTLINED_FUNCTION_33_59();
    *((_QWORD *)v8 + 4) = OUTLINED_FUNCTION_46_41();
    return sub_22AB8EA70;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_22A9F32E0(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  OUTLINED_FUNCTION_9_23((uint64_t)v1);
  OUTLINED_FUNCTION_0_2(v1);
}

void sub_22A9F3314(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 88))(*(_QWORD *)a1 + 32, 0);
  OUTLINED_FUNCTION_9_23((uint64_t)v1);
  OUTLINED_FUNCTION_0_2(v1);
}

uint64_t type metadata accessor for DenseMatrix(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DenseMatrix);
}

{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DenseMatrix);
}

uint64_t sub_22A9F3354(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 56);
  result = (*(uint64_t (**)(void))(v2 + 32))();
  if (!v3)
  {
    if ((unsigned __int128)(v5 * (__int128)v6) >> 64 == (v5 * v6) >> 63)
      *a2 = v5 * v6;
    else
      __break(1u);
  }
  return result;
}

void DenseMatrix.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9[4])(uint64_t);

  DenseMatrix.subscript.modify(v9, a2, a3);
  v6 = *(_QWORD *)(a4 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v8, a1, v6);
  OUTLINED_FUNCTION_9_23((uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  OUTLINED_FUNCTION_21_1();
}

uint64_t static DenseMatrix.identity(rowCount:columnCount:)()
{
  return DenseMatrix.init(rowCount:columnCount:layout:initializingWith:)();
}

uint64_t sub_22A9F3450(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedTypeWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a3;
  v20 = *(_QWORD *)(a4 - 8);
  v21 = a1;
  MEMORY[0x24BDAC7A8](a1);
  v19 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(v7 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  if (a2 < 0)
    goto LABEL_15;
  if (a2)
  {
    if (v26 < 0)
    {
LABEL_16:
      __break(1u);
      return result;
    }
    v27 = 0;
    v9 = 0;
    v18 = a2;
    while (v9 != a2)
    {
      if (v26)
      {
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v11 = 0;
        v22 = v27 - 0x7FFFFFFFFFFFFFFFLL;
        v23 = AssociatedConformanceWitness;
        while (1)
        {
          v12 = v27 + v11;
          v13 = v22 + v11;
          v14 = *v21;
          v15 = v9;
          sub_22ABE0130();
          v16 = v19;
          sub_22ABDFF20();
          result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 40))(v14 + *(_QWORD *)(v20 + 72) * v12, v16, a4);
          if (!v13)
            break;
          ++v11;
          v9 = v15;
          if (v26 == v11)
          {
            v27 += v11;
            a2 = v18;
            goto LABEL_11;
          }
        }
        __break(1u);
        break;
      }
LABEL_11:
      if (++v9 == a2)
        return result;
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_22A9F3644(uint64_t *a1)
{
  uint64_t *v1;

  return sub_22A9F3450(a1, v1[4], v1[5], v1[2]);
}

uint64_t static DenseMatrix.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (!v2 || ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) != 0)
    return 0;
  else
    return sub_22ABDF980();
}

BOOL static MatrixLayout.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_22A9F36B4(uint64_t a1, uint64_t a2)
{
  return static DenseMatrix.== infix(_:_:)(a1, a2);
}

uint64_t sub_22A9F36C0(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  double v13;
  double v14;
  double v15;

  if ((a4 & 1) == 0)
    goto LABEL_4;
  if ((unsigned __int128)(result * (__int128)a2) >> 64 == (result * a2) >> 63)
  {
    a3 = 1;
    result *= a2;
LABEL_4:
    sub_22A9F4300(a5 + 8 * result + 32, a2, a3);
    v14 = v13;
    sub_22AB56428(a10, *(_QWORD *)(a9 + 280));
    return sub_22A9F437C(a6, a7, a8, 1.0 / (v14 * v15));
  }
  __break(1u);
  return result;
}

uint64_t sub_22A9F3760()
{
  return sub_22ABDF8F0();
}

uint64_t sub_22A9F37B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10)
{
  uint64_t result;
  uint64_t v16;

  result = sub_22ABDED08();
  if ((a5 & 1) == 0)
  {
    if (result)
    {
LABEL_7:
      v16 = UnsafeVectorPointer.init(start:count:stride:)(result + *(_QWORD *)(*(_QWORD *)(a10 - 8) + 72) * a7, a3, a4, a10);
      return a8(v16);
    }
    __break(1u);
  }
  if (result)
  {
    if ((unsigned __int128)(a7 * (__int128)a3) >> 64 == (a7 * a3) >> 63)
    {
      a4 = 1;
      a7 *= a3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_22A9F3874(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v14[2];

  v7 = *(_QWORD *)(a4 + 16);
  sub_22ABDF974();
  sub_22ABDF8E4();
  v8 = v4[3];
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v11 = v8 + ((v10 + 32) & ~v10);
  v14[0] = v11;
  v14[1] = v9;
  sub_22A9F3954((uint64_t)v14, v4, a1, a2, a3, v7);
  return sub_22A9F43F4(v14, v11, v9);
}

uint64_t sub_22A9F3954(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v10 = *((_BYTE *)a2 + 16);
  result = sub_22ABDED08();
  if ((v10 & 1) != 0)
  {
    if (result)
    {
      v12 = *a2;
      v13 = a3 * *a2;
      if ((unsigned __int128)(a3 * (__int128)*a2) >> 64 == v13 >> 63)
      {
        v14 = result + *(_QWORD *)(*(_QWORD *)(a6 - 8) + 72) * v13;
        v15 = 1;
LABEL_7:
        v16 = UnsafeMutableVectorPointer.init(start:count:stride:)(v14, v12, v15, a6);
        return a4(v16);
      }
      __break(1u);
    }
    __break(1u);
  }
  else if (result)
  {
    v14 = result + *(_QWORD *)(*(_QWORD *)(a6 - 8) + 72) * a3;
    v12 = *a2;
    v15 = a2[1];
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t MatrixLayout.debugDescription.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D2D6E6D756C6F63;
  else
    return 0x6F6A616D2D776F72;
}

{
  if ((a1 & 1) != 0)
    return 0x6D2D6E6D756C6F63;
  else
    return 0x6F6A616D2D776F72;
}

uint64_t sub_22A9F3A5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x726F6A614D776F72 && a2 == 0xE800000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614D6E6D756C6F63 && a2 == 0xEB00000000726F6ALL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22A9F3B64(char a1)
{
  if ((a1 & 1) != 0)
    return 0x614D6E6D756C6F63;
  else
    return 0x726F6A614D776F72;
}

void sub_22A9F3BA4()
{
  _s13LinearAlgebra12MatrixLayoutO9hashValueSivg_0();
}

uint64_t sub_22A9F3BC0()
{
  char *v0;

  return sub_22A9F3B64(*v0);
}

uint64_t sub_22A9F3BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9F3A5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9F3BEC()
{
  sub_22A9F3E58();
  return sub_22ABE02EC();
}

uint64_t sub_22A9F3C14()
{
  sub_22A9F3E58();
  return sub_22ABE02F8();
}

uint64_t sub_22A9F3C3C()
{
  sub_22A9F3E94();
  return sub_22ABE02EC();
}

uint64_t sub_22A9F3C64()
{
  sub_22A9F3E94();
  return sub_22ABE02F8();
}

uint64_t sub_22A9F3C8C()
{
  sub_22A9F3ED0();
  return sub_22ABE02EC();
}

uint64_t sub_22A9F3CB4()
{
  sub_22A9F3ED0();
  return sub_22ABE02F8();
}

uint64_t MatrixLayout.encode(to:)(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10798);
  v6 = OUTLINED_FUNCTION_17_14(v5);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_6_26();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B107A0);
  v7 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  v10 = v9 - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B107A8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_34();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9F3E58();
  sub_22ABE02B0();
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_10_16();
    OUTLINED_FUNCTION_7();
    (*(void (**)(uint64_t))(v15 + 8))(v3);
  }
  else
  {
    sub_22A9F3ED0();
    OUTLINED_FUNCTION_7();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v14);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v2, v11);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1C2C8);
  v4 = OUTLINED_FUNCTION_17_14(v3);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v7 = v6 - v5;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1C2D0);
  v8 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_33();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1C2D8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABD1F9C();
  sub_22ABE02B0();
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_5_106();
    OUTLINED_FUNCTION_7();
    (*(void (**)(uint64_t))(v19 + 8))(v7);
  }
  else
  {
    sub_22ABD2014();
    OUTLINED_FUNCTION_7();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
}

unint64_t sub_22A9F3E58()
{
  unint64_t result;

  result = qword_255B107B0;
  if (!qword_255B107B0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED480, &type metadata for MatrixLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B107B0);
  }
  return result;
}

unint64_t sub_22A9F3E94()
{
  unint64_t result;

  result = qword_255B107B8;
  if (!qword_255B107B8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED430, &type metadata for MatrixLayout.ColumnMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B107B8);
  }
  return result;
}

unint64_t sub_22A9F3ED0()
{
  unint64_t result;

  result = qword_255B107C0;
  if (!qword_255B107C0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED3E0, &type metadata for MatrixLayout.RowMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B107C0);
  }
  return result;
}

void _s13LinearAlgebra12MatrixLayoutO9hashValueSivg_0()
{
  sub_22ABE0244();
  sub_22ABE0250();
  sub_22ABE0280();
  OUTLINED_FUNCTION_16_0();
}

uint64_t MatrixLayout.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B107C8);
  v3 = OUTLINED_FUNCTION_17_14(v2);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v30 = v5 - v4;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B107D0);
  v6 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B107D8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v14 = v13 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22A9F3E58();
  sub_22ABE0298();
  if (v32)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = v11;
  v15 = sub_22ABDFC98();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16
    || (v17 = *(unsigned __int8 *)(v15 + 32),
        sub_22A9DA86C(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
        v19 = v18,
        v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    v23 = sub_22ABDF830();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v25 = &type metadata for MatrixLayout;
    sub_22ABDFC08();
    sub_22ABDF824();
    v26 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow(v26);
    OUTLINED_FUNCTION_11_24();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v14, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  if ((v17 & 1) != 0)
  {
    OUTLINED_FUNCTION_10_16();
    OUTLINED_FUNCTION_3_2();
    v22 = v28;
    (*(void (**)(uint64_t))(v31 + 8))(v30);
  }
  else
  {
    sub_22A9F3ED0();
    OUTLINED_FUNCTION_3_2();
    v22 = v28;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v29);
  }
  OUTLINED_FUNCTION_11_24();
  (*(void (**)(uint64_t, unint64_t))(v22 + 8))(v14, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v17;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1C2F8);
  v3 = OUTLINED_FUNCTION_17_14(v2);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v30 = v5 - v4;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1C300);
  v6 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B1C308);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v14 = v13 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABD1F9C();
  sub_22ABE0298();
  if (v32)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = v11;
  v15 = sub_22ABDFC98();
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16
    || (v17 = *(unsigned __int8 *)(v15 + 32),
        sub_22A9DAF0C(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
        v19 = v18,
        v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    v23 = sub_22ABDF830();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v25 = &type metadata for MatrixLayout;
    sub_22ABDFC08();
    sub_22ABDF824();
    v26 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow(v26);
    OUTLINED_FUNCTION_11_24();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v14, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  if ((v17 & 1) != 0)
  {
    OUTLINED_FUNCTION_5_106();
    OUTLINED_FUNCTION_3_2();
    v22 = v28;
    (*(void (**)(uint64_t))(v31 + 8))(v30);
  }
  else
  {
    sub_22ABD2014();
    OUTLINED_FUNCTION_3_2();
    v22 = v28;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v29);
  }
  OUTLINED_FUNCTION_11_24();
  (*(void (**)(uint64_t, unint64_t))(v22 + 8))(v14, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v17;
}

BOOL sub_22A9F4268(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MatrixLayout.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_22A9F4274()
{
  unsigned __int8 *v0;

  return j___s13LinearAlgebra12MatrixLayoutO9hashValueSivg_0(*v0);
}

void sub_22A9F427C()
{
  sub_22ABE0244();
  sub_22ABE0250();
  sub_22ABE0280();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22A9F42B4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = MatrixLayout.init(from:)(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_22A9F42E0(_QWORD *a1)
{
  char *v1;

  return MatrixLayout.encode(to:)(a1, *v1);
}

uint64_t sub_22A9F42F8()
{
  char *v0;

  return MatrixLayout.debugDescription.getter(*v0);
}

uint64_t sub_22A9F4300(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  double v5;
  int64_t v6;
  double v7;
  BOOL v8;

  v3 = a2 * a3;
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 != (a2 * a3) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!a3)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v4 = v3 >= 0;
  if (a3 > 0)
    v4 = v3 < 1;
  v5 = 0.0;
  if (!v4)
  {
    v6 = 0;
    do
    {
      v7 = *(double *)(result + 8 * v6);
      if (__OFADD__(v6, a3))
        v6 = ((v6 + a3) >> 63) ^ 0x8000000000000000;
      else
        v6 += a3;
      v5 = v5 + v7 * v7;
      v8 = v3 >= v6;
      if (a3 > 0)
        v8 = v6 >= v3;
    }
    while (!v8);
  }
  return result;
}

uint64_t sub_22A9F437C(uint64_t result, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  BOOL v5;
  int64_t v6;
  BOOL v7;

  v4 = a2 * a3;
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 != (a2 * a3) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!a3)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v5 = v4 >= 0;
  if (a3 > 0)
    v5 = v4 < 1;
  if (!v5)
  {
    v6 = 0;
    do
    {
      *(double *)(result + 8 * v6) = *(double *)(result + 8 * v6) * a4;
      if (__OFADD__(v6, a3))
        v6 = ((v6 + a3) >> 63) ^ 0x8000000000000000;
      else
        v6 += a3;
      v7 = v4 >= v6;
      if (a3 > 0)
        v7 = v6 >= v4;
    }
    while (!v7);
  }
  return result;
}

_QWORD *sub_22A9F43F4(_QWORD *result, uint64_t a2, uint64_t a3)
{
  if (*result)
  {
    if (*result == a2)
    {
      if (result[1] == a3)
        return (_QWORD *)sub_22ABDF974();
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_22A9F442C()
{
  unint64_t result;

  result = qword_255B107E0;
  if (!qword_255B107E0)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for MatrixLayout, &type metadata for MatrixLayout);
    atomic_store(result, (unint64_t *)&qword_255B107E0);
  }
  return result;
}

uint64_t sub_22A9F4470()
{
  return 16;
}

__n128 sub_22A9F447C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_22A9F4488()
{
  return swift_release();
}

uint64_t sub_22A9F4490(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t sub_22A9F44CC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22A9F451C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_22A9F455C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22A9F459C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MatrixLayout()
{
  return &type metadata for MatrixLayout;
}

{
  return &type metadata for MatrixLayout;
}

uint64_t _s18CreateMLComponents12MatrixLayoutOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9F4640 + 4 * byte_22ABED0D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9F4674 + 4 * byte_22ABED0D0[v4]))();
}

uint64_t sub_22A9F4674(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9F467C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9F4684);
  return result;
}

uint64_t sub_22A9F4690(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9F4698);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9F469C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9F46A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MatrixLayout.CodingKeys()
{
  return &type metadata for MatrixLayout.CodingKeys;
}

{
  return &type metadata for MatrixLayout.CodingKeys;
}

ValueMetadata *type metadata accessor for MatrixLayout.RowMajorCodingKeys()
{
  return &type metadata for MatrixLayout.RowMajorCodingKeys;
}

{
  return &type metadata for MatrixLayout.RowMajorCodingKeys;
}

ValueMetadata *type metadata accessor for MatrixLayout.ColumnMajorCodingKeys()
{
  return &type metadata for MatrixLayout.ColumnMajorCodingKeys;
}

{
  return &type metadata for MatrixLayout.ColumnMajorCodingKeys;
}

unint64_t sub_22A9F46E4()
{
  unint64_t result;

  result = qword_255B107E8;
  if (!qword_255B107E8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED3B8, &type metadata for MatrixLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B107E8);
  }
  return result;
}

unint64_t sub_22A9F4724()
{
  unint64_t result;

  result = qword_255B107F0;
  if (!qword_255B107F0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED2D8, &type metadata for MatrixLayout.RowMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B107F0);
  }
  return result;
}

unint64_t sub_22A9F4764()
{
  unint64_t result;

  result = qword_255B107F8;
  if (!qword_255B107F8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED300, &type metadata for MatrixLayout.RowMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B107F8);
  }
  return result;
}

unint64_t sub_22A9F47A4()
{
  unint64_t result;

  result = qword_255B10800;
  if (!qword_255B10800)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED288, &type metadata for MatrixLayout.ColumnMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10800);
  }
  return result;
}

unint64_t sub_22A9F47E4()
{
  unint64_t result;

  result = qword_255B10808;
  if (!qword_255B10808)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED2B0, &type metadata for MatrixLayout.ColumnMajorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10808);
  }
  return result;
}

unint64_t sub_22A9F4824()
{
  unint64_t result;

  result = qword_255B10810;
  if (!qword_255B10810)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED328, &type metadata for MatrixLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10810);
  }
  return result;
}

unint64_t sub_22A9F4864()
{
  unint64_t result;

  result = qword_255B10818;
  if (!qword_255B10818)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABED350, &type metadata for MatrixLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10818);
  }
  return result;
}

uint64_t sub_22A9F48A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22A9F37B8(a1, a2, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_BYTE *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(uint64_t (**)(uint64_t))(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 16));
}

uint64_t OUTLINED_FUNCTION_8_20()
{
  return sub_22ABDF998();
}

uint64_t OUTLINED_FUNCTION_9_23(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(a1, 0);
}

unint64_t OUTLINED_FUNCTION_10_16()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_22A9F3E94();
}

uint64_t OUTLINED_FUNCTION_11_24()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_12_18()
{
  return _s13LinearAlgebra11DenseVectorV10_uncheckedxSi_tcig_0();
}

uint64_t OUTLINED_FUNCTION_14_18()
{
  return sub_22ABDF974();
}

uint64_t OUTLINED_FUNCTION_17_14(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = *(_QWORD *)(result - 8);
  *(_QWORD *)(v1 - 96) = result;
  return result;
}

void sub_22A9F4968(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  float *v7;
  float *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  float v13;
  float v14;
  unint64_t v15;
  float v16;
  float v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v25 = MEMORY[0x24BEE4AF8];
  sub_22AB4D538();
  v23 = a2;
  v24 = a1;
  if (v6)
  {
    v7 = (float *)(a1 + 32);
    v8 = (float *)(a2 + 32);
    swift_retain();
    swift_retain();
    v9 = v6;
    v10 = v4;
    v11 = v5;
    v12 = v5;
    while (v4)
    {
      if (!v11)
        goto LABEL_22;
      v13 = *v7;
      v14 = *v8;
      v15 = *(_QWORD *)(v25 + 16);
      if (v15 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        v20 = v10;
        v21 = v12;
        sub_22AB4D538();
        v10 = v20;
        v12 = v21;
      }
      --v11;
      *(_QWORD *)(v25 + 16) = v15 + 1;
      *(float *)(v25 + 4 * v15 + 32) = (float)(v13 - v14) * (float)(v13 - v14);
      --v4;
      ++v8;
      ++v7;
      if (!--v9)
        goto LABEL_13;
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_retain();
    v10 = v4;
    v12 = v5;
LABEL_13:
    if (v10 <= v12)
    {
LABEL_20:
      swift_release();
      swift_release();
      return;
    }
    while (v6 < v10)
    {
      if (v12 == v6)
        goto LABEL_20;
      if (v6 >= v12)
        goto LABEL_24;
      v16 = *(float *)(v24 + 32 + 4 * v6);
      v17 = *(float *)(v23 + 32 + 4 * v6);
      v18 = *(_QWORD *)(v25 + 16);
      if (v18 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        v19 = v10;
        v22 = v12;
        sub_22AB4D538();
        v12 = v22;
        v10 = v19;
      }
      ++v6;
      *(_QWORD *)(v25 + 16) = v18 + 1;
      *(float *)(v25 + 4 * v18 + 32) = (float)(v16 - v17) * (float)(v16 - v17);
      if (v10 == v6)
        goto LABEL_20;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_22A9F4B80(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  float *v7;
  float *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  float v13;
  float v14;
  unint64_t v15;
  float v16;
  float v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v25 = MEMORY[0x24BEE4AF8];
  sub_22AB4D538();
  v23 = a2;
  v24 = a1;
  if (v6)
  {
    v7 = (float *)(a1 + 32);
    v8 = (float *)(a2 + 32);
    swift_retain();
    swift_retain();
    v9 = v6;
    v10 = v4;
    v11 = v5;
    v12 = v5;
    while (v4)
    {
      if (!v11)
        goto LABEL_22;
      v13 = *v7;
      v14 = *v8;
      v15 = *(_QWORD *)(v25 + 16);
      if (v15 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        v20 = v10;
        v21 = v12;
        sub_22AB4D538();
        v10 = v20;
        v12 = v21;
      }
      --v11;
      *(_QWORD *)(v25 + 16) = v15 + 1;
      *(float *)(v25 + 4 * v15 + 32) = vabds_f32(v13, v14);
      --v4;
      ++v8;
      ++v7;
      if (!--v9)
        goto LABEL_13;
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_retain();
    v10 = v4;
    v12 = v5;
LABEL_13:
    if (v10 <= v12)
    {
LABEL_20:
      swift_release();
      swift_release();
      return;
    }
    while (v6 < v10)
    {
      if (v12 == v6)
        goto LABEL_20;
      if (v6 >= v12)
        goto LABEL_24;
      v16 = *(float *)(v24 + 32 + 4 * v6);
      v17 = *(float *)(v23 + 32 + 4 * v6);
      v18 = *(_QWORD *)(v25 + 16);
      if (v18 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        v19 = v10;
        v22 = v12;
        sub_22AB4D538();
        v12 = v22;
        v10 = v19;
      }
      ++v6;
      *(_QWORD *)(v25 + 16) = v18 + 1;
      *(float *)(v25 + 4 * v18 + 32) = vabds_f32(v16, v17);
      if (v10 == v6)
        goto LABEL_20;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_22A9F4D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v9;
  _QWORD *v10;

  if (a5 < 0.0)
  {
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_37_8();
    OUTLINED_FUNCTION_36_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_25();
    sub_22A9B7B50();
    v9 = OUTLINED_FUNCTION_53();
    *v10 = a3;
    v10[1] = a4;
    v10[2] = a1;
    v10[3] = a2;
    OUTLINED_FUNCTION_65_3(v9, (uint64_t)v10, 5);
  }
  OUTLINED_FUNCTION_13_23();
}

void sub_22A9F4E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  _QWORD *v10;

  if (a1 < 0)
  {
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_37_8();
    OUTLINED_FUNCTION_36_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_25();
    sub_22A9B7B50();
    v9 = OUTLINED_FUNCTION_53();
    *v10 = a4;
    v10[1] = a5;
    v10[2] = a2;
    v10[3] = a3;
    OUTLINED_FUNCTION_65_3(v9, (uint64_t)v10, 5);
  }
  OUTLINED_FUNCTION_13_23();
}

uint64_t sub_22A9F4EC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[2];
  if (!v1)
    return 0;
  result = a1[4];
  v4 = v1 - 1;
  if (v1 != 1)
  {
    v5 = a1 + 5;
    do
    {
      v7 = *v5++;
      v6 = v7;
      if (result <= v7)
        result = v6;
      --v4;
    }
    while (v4);
  }
  return result;
}

unint64_t sub_22A9F4F08(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v3;
  float *v4;
  float v5;
  float v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(float *)(a1 + 32);
    v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        v5 = *v4++;
        v6 = v5;
        if (v2 < v5)
          v2 = v6;
        --v3;
      }
      while (v3);
    }
    v7 = LODWORD(v2);
  }
  else
  {
    v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_22A9F4F60(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v2 < v5)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

void BaseTreeRegressor.configuration.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_BYTE *)(a1 + 56) = v2;
  OUTLINED_FUNCTION_56_4((__n128 *)a1, *(__n128 *)(v1 + 64));
}

__n128 BaseTreeRegressor.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)v1 = *(_QWORD *)a1;
  *(_OWORD *)(v1 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 40);
  *(_BYTE *)(v1 + 56) = v2;
  result = *(__n128 *)(a1 + 64);
  *(__n128 *)(v1 + 64) = result;
  *(_QWORD *)(v1 + 80) = v3;
  return result;
}

uint64_t (*BaseTreeRegressor.configuration.modify())()
{
  return nullsub_1;
}

void __swiftcall BaseTreeRegressor.init(configuration:)(CreateMLComponents::BaseTreeRegressor *__return_ptr retstr, CreateMLComponents::BoostedTreeConfiguration *configuration)
{
  Swift::Bool is_nil;

  is_nil = configuration->earlyStoppingIterationCount.is_nil;
  retstr->configuration._learningRate = configuration->_learningRate;
  *(_OWORD *)&retstr->configuration.maximumDepth = *(_OWORD *)&configuration->maximumDepth;
  *(_OWORD *)&retstr->configuration.minimumLossReduction = *(_OWORD *)&configuration->minimumLossReduction;
  *(_OWORD *)&retstr->configuration.randomSeed = *(_OWORD *)&configuration->randomSeed;
  retstr->configuration.earlyStoppingIterationCount.is_nil = is_nil;
  OUTLINED_FUNCTION_56_4((__n128 *)retstr, *(__n128 *)&configuration->rowSubsample);
}

uint64_t BaseTreeRegressor.fitted(features:annotations:eventHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  _QWORD *v32;
  void (*v33)(uint64_t *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __int128 v48;
  __int128 v49;
  char v50;
  __int128 v51;
  uint64_t v52;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)v4;
    v8 = *(_QWORD *)(v4 + 8);
    v7 = *(_QWORD *)(v4 + 16);
    v43 = *(_OWORD *)(v4 + 40);
    v44 = *(_OWORD *)(v4 + 24);
    v9 = *(_BYTE *)(v4 + 56);
    v42 = *(_OWORD *)(v4 + 64);
    v10 = *(_QWORD *)(v4 + 80);
    v11 = *(_QWORD *)(a1 + 24);
    v12 = *(_BYTE *)(a1 + 16);
    v45 = *(_QWORD *)a1;
    v46 = v5;
    LOBYTE(v47) = v12;
    *(_QWORD *)&v48 = v11;
    OUTLINED_FUNCTION_74_1();
    v13 = OUTLINED_FUNCTION_13();
    swift_retain();
    result = (uint64_t)OUTLINED_FUNCTION_43_3(&v45);
    if (!v13)
    {
      v15 = result;
      v38 = v7;
      OUTLINED_FUNCTION_29_10();
      type metadata accessor for XGBooster();
      OUTLINED_FUNCTION_26_9();
      v16 = OUTLINED_FUNCTION_25_9();
      v22 = sub_22AB7C374(v16, 0);
      v45 = v6;
      v46 = v8;
      v47 = v7;
      v48 = v44;
      v49 = v43;
      v50 = v9;
      v51 = v42;
      v52 = v10;
      OUTLINED_FUNCTION_33_10(v22, v5);
      v23 = OUTLINED_FUNCTION_6_27();
      OUTLINED_FUNCTION_2_3(v23);
      v24 = OUTLINED_FUNCTION_7_26();
      result = (uint64_t)OUTLINED_FUNCTION_2_3(v24);
      if ((v7 & 0x8000000000000000) == 0)
      {
        v25 = a3;
        if (!v7)
        {
LABEL_19:
          result = OUTLINED_FUNCTION_3_26();
          *a4 = v5;
          a4[1] = v22;
          a4[2] = v38;
          return result;
        }
        result = OUTLINED_FUNCTION_12_19();
        v26 = 0;
        v27 = a2;
        v28 = v38;
        while (v28 != v26)
        {
          OUTLINED_FUNCTION_70_1();
          result = (uint64_t)OUTLINED_FUNCTION_69_2(v15);
          v29 = v26 + 1;
          if (v27)
          {
            if (v26 < 5 || 10 * (v26 / 0xA) == v26)
            {
              OUTLINED_FUNCTION_12_19();
              v31 = sub_22A9A9840(v27);
              v32 = (_QWORD *)sub_22AB7B79C(v31);
              OUTLINED_FUNCTION_15_10();
              sub_22A9C2C80(v32);
              v33 = (void (*)(uint64_t *))v27;
              v34 = v25;
              v36 = v35;
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_24_12();
              v45 = v37;
              v46 = 0x800000022ABE2450;
              v47 = v29;
              *(_QWORD *)&v48 = v38;
              BYTE8(v48) = 0;
              *(_QWORD *)&v49 = v36;
              v33(&v45);
              sub_22A9ADA48((uint64_t)v33);
              v25 = v34;
              v27 = (uint64_t)v33;
              swift_bridgeObjectRelease();
              result = swift_bridgeObjectRelease();
            }
          }
          v26 = v29;
          v28 = v38;
          if (v38 == v29)
          {
            OUTLINED_FUNCTION_15_10();
            goto LABEL_19;
          }
        }
        __break(1u);
      }
      __break(1u);
    }
  }
  else
  {
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_24_12();
    OUTLINED_FUNCTION_38_9(v17, v18);
    *(_QWORD *)(v19 + 16) = v20;
    *(_QWORD *)(v19 + 24) = 0x800000022ABE2470;
    return OUTLINED_FUNCTION_65_3(v21, v19, 4);
  }
  return result;
}

void sub_22A9F53AC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  char v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;

  v5 = *(_QWORD *)(v3 + 8);
  v7 = *(double *)(v3 + 24);
  v6 = *(double *)(v3 + 32);
  v8 = *(_BYTE *)(v3 + 56);
  v9 = *(double *)(v3 + 72);
  v10 = *(_QWORD *)(v3 + 80);
  if ((a3 & 1) == 0)
  {
    OUTLINED_FUNCTION_9_19();
    v11 = OUTLINED_FUNCTION_8_21();
    OUTLINED_FUNCTION_0_19(v11);
    if (v4)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_0_19(0x74656D5F65657274);
  if (!v4)
  {
    OUTLINED_FUNCTION_0_19(0x76697463656A626FLL);
    OUTLINED_FUNCTION_24_8();
    OUTLINED_FUNCTION_20_16(v12, v13, v7, v14, 0x800000022ABE25C0);
    OUTLINED_FUNCTION_41_4();
    sub_22ABDF230();
    OUTLINED_FUNCTION_0_19(0x616D6D6167);
    OUTLINED_FUNCTION_30();
    if ((v8 & 1) == 0)
    {
      OUTLINED_FUNCTION_9_19();
      OUTLINED_FUNCTION_24_8();
      OUTLINED_FUNCTION_0_19(v15);
      OUTLINED_FUNCTION_30();
    }
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_0_19(1684366707);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_20_16(0xD000000000000014, 0x800000022ABE1B70, v6, v16, 0x800000022ABE25C0);
    OUTLINED_FUNCTION_41_4();
    sub_22ABDF230();
    OUTLINED_FUNCTION_0_19(0xD000000000000010);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_22_14(v5, 0x206D756D6978614DLL, 0xED00006874706564, v17, 0x800000022ABE25C0);
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_0_19(0x747065645F78616DLL);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_16_17();
    sub_22AA9D970(v18, v19, v20);
    OUTLINED_FUNCTION_41_4();
    sub_22ABDF230();
    OUTLINED_FUNCTION_0_19(0x6C706D6173627573);
    OUTLINED_FUNCTION_58_1();
    sub_22AA9D970(v9, 0.0, 1.0);
    OUTLINED_FUNCTION_41_4();
    sub_22ABDF230();
    OUTLINED_FUNCTION_0_19(0xD000000000000010);
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_22_14(v10, 0xD000000000000013, 0x800000022ABE1BF0, v21, 0x800000022ABE25C0);
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_24_8();
    OUTLINED_FUNCTION_0_19(v22);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_16_17();
    sub_22AA9DA1C(v23, v24, v25);
    OUTLINED_FUNCTION_41_4();
    sub_22ABDF230();
    OUTLINED_FUNCTION_0_19(6386789);
    goto LABEL_3;
  }
}

uint64_t BaseTreeRegressor.fitted(trainingFeatures:trainingAnnotations:validationFeatures:validationAnnotations:eventHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void (*a3)(uint64_t *)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  __int128 v47;
  __int128 v48;
  char v49;
  __int128 v50;
  uint64_t v51;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
  {
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_24_12();
    OUTLINED_FUNCTION_38_9(v15, v16);
    v20 = "There are no usable features in the input. Features must be Int, Float, Double, String or Dictionary";
LABEL_7:
    v18[2] = v19;
    v18[3] = (unint64_t)(v20 - 32) | 0x8000000000000000;
    return OUTLINED_FUNCTION_65_3(v17, (uint64_t)v18, 4);
  }
  v7 = *(_QWORD *)(a2 + 8);
  if (!v7)
  {
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_24_12();
    *v18 = v21;
    v18[1] = 0x800000022ABE2450;
    v19 = v21 + 90;
    v20 = "There are no usable features in the validation data. Features must be Int, Float, Double, String or Dictionary";
    goto LABEL_7;
  }
  v8 = *(_BYTE *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v39 = *(_BYTE *)(a2 + 16);
  v40 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)v4;
  v41 = *(_QWORD *)(v4 + 8);
  v42 = *(_QWORD *)(v4 + 16);
  v43 = *(_QWORD *)a2;
  v37 = *(_OWORD *)(v4 + 40);
  v38 = *(_OWORD *)(v4 + 24);
  v11 = *(_BYTE *)(v4 + 56);
  v36 = *(_OWORD *)(v4 + 64);
  v12 = *(_QWORD *)(v4 + 80);
  v44 = *(_QWORD *)a1;
  v45 = v6;
  LOBYTE(v46) = v8;
  *(_QWORD *)&v47 = v9;
  OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_13();
  swift_retain();
  result = (uint64_t)OUTLINED_FUNCTION_43_3(&v44);
  if (!v5)
  {
    v33 = v6;
    v14 = result;
    sub_22AA61034();
    v44 = v43;
    v45 = v7;
    LOBYTE(v46) = v39;
    *(_QWORD *)&v47 = v40;
    OUTLINED_FUNCTION_13();
    swift_retain();
    v22 = OUTLINED_FUNCTION_43_3(&v44);
    OUTLINED_FUNCTION_29_10();
    type metadata accessor for XGBooster();
    OUTLINED_FUNCTION_26_9();
    OUTLINED_FUNCTION_25_9();
    swift_retain();
    v23 = sub_22AB7C374(v14, (uint64_t)v22);
    v44 = v10;
    v45 = v41;
    v46 = v42;
    v24 = v42;
    v47 = v38;
    v48 = v37;
    v49 = v11;
    v50 = v36;
    v51 = v12;
    OUTLINED_FUNCTION_33_10(v23, v33);
    v25 = OUTLINED_FUNCTION_6_27();
    OUTLINED_FUNCTION_2_3(v25);
    v26 = OUTLINED_FUNCTION_7_26();
    result = (uint64_t)OUTLINED_FUNCTION_2_3(v26);
    if ((v42 & 0x8000000000000000) != 0)
    {
LABEL_25:
      __break(1u);
      return result;
    }
    if (v42)
    {
      result = swift_retain();
      v27 = 0;
      while (v24 != v27)
      {
        OUTLINED_FUNCTION_70_1();
        result = (uint64_t)OUTLINED_FUNCTION_69_2(v14);
        v28 = v27 + 1;
        if (a3)
        {
          if (v27 < 5 || 10 * (v27 / 0xA) == v27)
          {
            swift_retain();
            v30 = sub_22A9A9840((uint64_t)a3);
            v31 = (_QWORD *)sub_22AB7B79C(v30);
            OUTLINED_FUNCTION_72_1();
            sub_22A9C2C80(v31);
            OUTLINED_FUNCTION_2_25();
            OUTLINED_FUNCTION_24_12();
            v44 = v32;
            v45 = 0x800000022ABE2450;
            v46 = v27 + 1;
            v24 = v42;
            *(_QWORD *)&v47 = v42;
            BYTE8(v47) = 0;
            *(_QWORD *)&v48 = v41;
            a3(&v44);
            sub_22A9ADA48((uint64_t)a3);
            OUTLINED_FUNCTION_58_1();
            result = swift_bridgeObjectRelease();
            v28 = v27 + 1;
          }
        }
        v27 = v28;
        if (v24 == v28)
          goto LABEL_23;
      }
      __break(1u);
      goto LABEL_25;
    }
    swift_retain();
LABEL_23:
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_3_26();
    result = OUTLINED_FUNCTION_72_1();
    *a4 = v33;
    a4[1] = v23;
    a4[2] = v24;
  }
  return result;
}

void BaseTreeRegressor.makeTransformer()(_QWORD *a1@<X8>)
{
  uint64_t v2;

  type metadata accessor for XGBooster();
  swift_allocObject();
  v2 = sub_22AB7C374(0, 0);
  sub_22A9F53AC(v2, 0, 1);
  *a1 = 0;
  a1[1] = v2;
  a1[2] = 0;
}

uint64_t BaseTreeRegressor.update(_:features:annotations:eventHandler:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  void (*v21)(uint64_t *);
  uint64_t v22;
  _QWORD *v23;
  uint64_t inited;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float v28;
  float v29;
  double v30;
  _QWORD *v31;
  uint64_t v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v34 = *(_BYTE *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v32 = *(_QWORD *)(v4 + 16);
  v11 = a1[1];
  if (sub_22AB7BA4C())
  {
    if (v9 != *a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
      result = OUTLINED_FUNCTION_13();
      *(_OWORD *)(result + 16) = xmmword_22ABE9FB0;
      *(_QWORD *)(result + 32) = v8;
      if ((unsigned __int128)(v8 * (__int128)v9) >> 64 == (v8 * v9) >> 63)
      {
        v13 = result;
        *(_QWORD *)(result + 40) = v8 * v9;
        sub_22ABDF7A0();
        swift_bridgeObjectRelease();
        sub_22AB7BA4C();
        OUTLINED_FUNCTION_21_16();
        sub_22ABDEDC8();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_24_8();
        sub_22ABDEDC8();
        v42 = v9;
        OUTLINED_FUNCTION_21_16();
        sub_22ABDEDC8();
        swift_bridgeObjectRelease();
        sub_22A9B7B50();
        v14 = OUTLINED_FUNCTION_53();
        *v15 = v13;
        v15[1] = 0x6465746365707845;
        v15[2] = 0xE900000000000020;
        v15[3] = 0;
        return OUTLINED_FUNCTION_65_3(v14, (uint64_t)v15, 6);
      }
      __break(1u);
      goto LABEL_26;
    }
  }
  else
  {
    *a1 = v9;
    v36 = v9;
    sub_22ABDFD7C();
    v16 = OUTLINED_FUNCTION_8_21();
    OUTLINED_FUNCTION_2_3(v16);
    if (v5)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v36 = v8;
  v37 = v9;
  LOBYTE(v38) = v34;
  v39 = v10;
  OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_12_19();
  result = (uint64_t)OUTLINED_FUNCTION_43_3(&v36);
  if (!v5)
  {
    v17 = result;
    OUTLINED_FUNCTION_29_10();
    OUTLINED_FUNCTION_70_1();
    result = (uint64_t)OUTLINED_FUNCTION_69_2(v17);
    v18 = a1[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
    {
LABEL_26:
      __break(1u);
      return result;
    }
    a1[2] = v20;
    if (a4)
    {
      v42 = v9;
      v43 = v11;
      v44 = v20;
      v36 = v8;
      v37 = v9;
      LOBYTE(v38) = v34;
      v39 = v10;
      v21 = (void (*)(uint64_t *))a4;
      v22 = v20;
      sub_22A9A9840(a4);
      OUTLINED_FUNCTION_25_9();
      v23 = BaseTreeRegressorModel.applied(features:eventHandler:)((uint64_t)&v36);
      OUTLINED_FUNCTION_3_26();
      v35 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F260);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_22ABE9FB0;
      strcpy((char *)(inited + 32), "training_error");
      *(_BYTE *)(inited + 47) = -18;
      if (v23[2])
      {
        OUTLINED_FUNCTION_12_19();
        v25 = a3;
        swift_retain();
        sub_22A9F4968((uint64_t)v23, a3);
        OUTLINED_FUNCTION_17_15();
        OUTLINED_FUNCTION_15_10();
        v26 = *(_QWORD *)(v11 + 16);
        v27 = v32;
        if (v26)
        {
          v28 = sub_22A9F6344(v11);
          OUTLINED_FUNCTION_30();
          v29 = v28 / (float)v26;
        }
        else
        {
          OUTLINED_FUNCTION_30();
          v29 = 0.0;
        }
      }
      else
      {
        v29 = NAN;
        v27 = v32;
        v25 = a3;
      }
      *(double *)(inited + 48) = sqrtf(v29);
      *(_QWORD *)(inited + 56) = 0xD000000000000012;
      *(_QWORD *)(inited + 64) = 0x800000022ABE2580;
      if (v23[2])
      {
        OUTLINED_FUNCTION_12_19();
        swift_retain();
        sub_22A9F4B80((uint64_t)v23, v25);
        OUTLINED_FUNCTION_17_15();
        OUTLINED_FUNCTION_15_10();
        v25 = sub_22A9F4F08(v11);
        OUTLINED_FUNCTION_15_10();
        OUTLINED_FUNCTION_30();
        v30 = NAN;
        if ((v25 & 0x100000000) == 0)
          v30 = *(float *)&v25;
      }
      else
      {
        OUTLINED_FUNCTION_15_10();
        v30 = NAN;
      }
      *(double *)(inited + 72) = v30;
      sub_22A9ADA0C();
      v31 = (_QWORD *)sub_22ABDEAC8();
      sub_22A9C2C80(v31);
      OUTLINED_FUNCTION_2_25();
      v36 = 0xD000000000000014;
      v37 = 0x800000022ABE2450;
      v38 = v35;
      v39 = v27;
      v40 = 0;
      v41 = v25;
      v21(&v36);
      sub_22A9ADA48((uint64_t)v21);
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_30();
    }
    return OUTLINED_FUNCTION_35_2();
  }
  return result;
}

float sub_22A9F6344(uint64_t a1)
{
  uint64_t v1;
  float *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  float result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0.0;
  v2 = (float *)(a1 + 32);
  v3 = 0.0;
  v4 = 0.0;
  do
  {
    v5 = *v2++;
    v6 = v5 - v3;
    result = v4 + v6;
    v3 = (float)((float)(v4 + v6) - v4) - v6;
    v4 = result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_22A9F6384(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;

  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 == (a2 * a3) >> 63)
  {
    if (a2 * a3)
    {
      v3 = 0;
      v4 = 0.0;
      v5 = 0.0;
      do
      {
        v6 = *(double *)(result + v3) - v4;
        v7 = v5 + v6;
        v4 = v5 + v6 - v5 - v6;
        v3 += 8 * a3;
        v5 = v7;
      }
      while (8 * a3 * a2 != v3);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_22A9F63E4(uint64_t a1)
{
  uint64_t v1;
  double *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double result;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0.0;
  v2 = (double *)(a1 + 32);
  v3 = 0.0;
  v4 = 0.0;
  do
  {
    v5 = *v2++;
    v6 = v5 - v3;
    result = v4 + v6;
    v3 = v4 + v6 - v4 - v6;
    v4 = result;
    --v1;
  }
  while (v1);
  return result;
}

ValueMetadata *type metadata accessor for BaseTreeRegressor()
{
  return &type metadata for BaseTreeRegressor;
}

id OUTLINED_FUNCTION_0_19(uint64_t a1)
{
  return sub_22AB7B960(a1);
}

uint64_t OUTLINED_FUNCTION_3_26()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_6_27()
{
  return 0x74656D5F6C617665;
}

uint64_t OUTLINED_FUNCTION_7_26()
{
  return 0x74656D5F6C617665;
}

uint64_t OUTLINED_FUNCTION_8_21()
{
  return 0x746165665F6D756ELL;
}

uint64_t OUTLINED_FUNCTION_11_25()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_12_19()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_17_15()
{
  return swift_release();
}

void OUTLINED_FUNCTION_20_16(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5)
{
  sub_22A9F4D90(a1, a2, 0xD00000000000001BLL, a5, a3);
}

uint64_t OUTLINED_FUNCTION_21_16()
{
  return sub_22ABDFD7C();
}

void OUTLINED_FUNCTION_22_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22A9F4E2C(a1, a2, a3, 0xD00000000000001BLL, a5);
}

uint64_t OUTLINED_FUNCTION_25_9()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_26_9()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_29_10()
{
  sub_22AA61034();
}

void OUTLINED_FUNCTION_33_10(uint64_t a1, uint64_t a2)
{
  sub_22A9F53AC(a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_37_8()
{
  return sub_22ABDF7A0();
}

void OUTLINED_FUNCTION_38_9(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

id MLModelTransformerAdaptor.model.getter()
{
  id *v0;

  return *v0;
}

void MLModelTransformerAdaptor.init(contentsOf:configuration:)(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a3;
  v8 = OUTLINED_FUNCTION_18_15();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  OUTLINED_FUNCTION_2_20(v13, &qword_255B10820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  v14 = a2;
  v15 = sub_22A9F66C8(v12, v14);
  if (v4)
  {

    OUTLINED_FUNCTION_12_20();
  }
  else
  {
    MLModelTransformerAdaptor.init(model:)(v15, &v17);

    OUTLINED_FUNCTION_12_20();
    v16 = v18;
    *(_OWORD *)a4 = v17;
    *(_QWORD *)(a4 + 16) = v16;
  }
  OUTLINED_FUNCTION_16();
}

id sub_22A9F66C8(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_22ABDD070();
  v11[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v11);

  if (v5)
  {
    v6 = v11[0];
  }
  else
  {
    v7 = v11[0];
    sub_22ABDD004();

    OUTLINED_FUNCTION_9_20(v8);
  }

  v9 = OUTLINED_FUNCTION_18_15();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  return v5;
}

void MLModelTransformerAdaptor.init(model:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1;
  OUTLINED_FUNCTION_23_14();
  OUTLINED_FUNCTION_22_15(v5, v6, v7, v8, v9);
  if (v2)
  {

  }
  else
  {
    OUTLINED_FUNCTION_23_14();
    OUTLINED_FUNCTION_21_17(v10, v11, v12, v13, v14);
    v18 = (id)sub_22A9F6918(v4, v15, v16, v17, (uint64_t)&selRef_inputDescriptionsByName, 3);
    v22 = sub_22A9F6918(v4, v19, v20, v21, (uint64_t)&selRef_outputDescriptionsByName, 4);

    *a2 = v4;
    a2[1] = v18;
    a2[2] = v22;
  }
}

void sub_22A9F68A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  sub_22A9F6EFC(a1);
  if (!v6)
  {
    v13 = (void *)sub_22A9F6918(a1, v10, v11, v12, a5, a6);
    sub_22A9F6FB4(v13);

  }
  OUTLINED_FUNCTION_9_14();
}

uint64_t sub_22A9F6918(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void *v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = OUTLINED_FUNCTION_20_17(objc_msgSend(a1, sel_modelDescription));

  OUTLINED_FUNCTION_2_20(v9, (unint64_t *)&qword_255B108E8);
  v10 = sub_22ABDEAB0();

  sub_22AB4EE78(v10);
  v12 = v11;
  v14 = v13;
  swift_bridgeObjectRelease();
  if (v12)
  {
    OUTLINED_FUNCTION_51_1();
  }
  else
  {
    sub_22A9F77C0();
    v15 = OUTLINED_FUNCTION_53();
    *(_OWORD *)v16 = xmmword_22ABED510;
    *(_BYTE *)(v16 + 16) = a6;
    swift_willThrow(v15);
  }
  return v14;
}

uint64_t MLModelTransformerAdaptor.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 96) = a1;
  *(_QWORD *)(v6 + 104) = a2;
  *(_QWORD *)(v6 + 112) = *(_QWORD *)(a5 + 16);
  *(_QWORD *)(v6 + 120) = *(_QWORD *)(a5 + 24);
  v7 = sub_22ABDE8A0();
  *(_QWORD *)(v6 + 128) = v7;
  *(_QWORD *)(v6 + 136) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 144) = swift_task_alloc();
  *(_OWORD *)(v6 + 152) = *(_OWORD *)v5;
  *(_QWORD *)(v6 + 168) = *(_QWORD *)(v5 + 16);
  return swift_task_switch();
}

uint64_t sub_22A9F6A88()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  _QWORD *v17;

  v1 = (void *)v0[20];
  v3 = v0[17];
  v2 = v0[18];
  v4 = v0[16];
  v5 = v0[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10778);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  v7 = objc_msgSend(v1, sel_name);
  v8 = sub_22ABDED50();
  v10 = v9;

  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  sub_22A9BEDCC(0, &qword_255B10788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v4);
  v11 = (void *)sub_22ABDF494();
  v12 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, v11);

  *(_QWORD *)(inited + 72) = sub_22A9BEDCC(0, &qword_255B10780);
  *(_QWORD *)(inited + 48) = v12;
  sub_22ABDEAC8();
  v13 = objc_allocWithZone(MEMORY[0x24BDBFF80]);
  v14 = sub_22A9F76E0();
  v0[22] = v14;
  v15 = v14;
  v16 = objc_allocWithZone(MEMORY[0x24BDC0018]);
  v0[23] = OUTLINED_FUNCTION_26_10((uint64_t)v15, sel_init);
  v17 = (_QWORD *)swift_task_alloc();
  v0[24] = v17;
  *v17 = v0;
  v17[1] = sub_22A9F6CB4;
  return sub_22ABDF530();
}

uint64_t sub_22A9F6CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;

  v3 = *v2;
  *(_QWORD *)(v3 + 200) = a1;
  *(_QWORD *)(v3 + 208) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v4 = *(void **)(v3 + 176);

  }
  return swift_task_switch();
}

uint64_t sub_22A9F6D2C()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t (*v6)(void);
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = objc_msgSend(*(id *)(v0 + 168), sel_name);
  if (!v1)
  {
    sub_22ABDED50();
    v1 = (id)sub_22ABDED2C();
    swift_bridgeObjectRelease();
  }
  v2 = objc_msgSend(*(id *)(v0 + 200), sel_featureValueForName_, v1);

  if (!v2)
  {
    v5 = *(void **)(v0 + 176);
    v7 = objc_msgSend(*(id *)(v0 + 168), sel_name);
    v8 = sub_22ABDED50();
    v10 = v9;

    sub_22A9F77C0();
    v11 = OUTLINED_FUNCTION_53();
    *v12 = v8;
    v12[1] = v10;
    OUTLINED_FUNCTION_24_13(v11, (uint64_t)v12, 6);
LABEL_8:
    swift_unknownObjectRelease();

    OUTLINED_FUNCTION_25_10();
    v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  v4 = OUTLINED_FUNCTION_26_10(v3, sel_multiArrayValue);
  v5 = *(void **)(v0 + 176);
  if (!v4)
  {
    v13 = OUTLINED_FUNCTION_26_10(0, sel_type);
    sub_22A9F77C0();
    v14 = OUTLINED_FUNCTION_53();
    *v15 = 5;
    v15[1] = v13;
    OUTLINED_FUNCTION_24_13(v14, (uint64_t)v15, 2);

    goto LABEL_8;
  }
  sub_22ABDE8B8();

  swift_unknownObjectRelease();
  swift_task_dealloc();
  v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_22A9F6EC4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 176);

  OUTLINED_FUNCTION_25_10();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22A9F6EFC(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = OUTLINED_FUNCTION_20_17(objc_msgSend(a1, sel_modelDescription));

  OUTLINED_FUNCTION_2_20(v3, (unint64_t *)&qword_255B108E8);
  v4 = sub_22ABDEAB0();

  v5 = *(_QWORD *)(v4 + 16);
  OUTLINED_FUNCTION_51_1();
  if (v5 != 1)
  {
    sub_22A9F77C0();
    v6 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_8_22(v6, v7, 1);
  }
  OUTLINED_FUNCTION_17_16();
}

void sub_22A9F6FB4(void *a1)
{
  uint64_t v2;
  uint64_t v3;

  if (objc_msgSend(a1, sel_type) != (id)5)
  {
    objc_msgSend(a1, sel_type);
    sub_22A9F77C0();
    v2 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_8_22(v2, v3, 5);
  }
  OUTLINED_FUNCTION_17_16();
}

uint64_t sub_22A9F7020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_22A9B24D4;
  return MLModelTransformerAdaptor.applied(to:eventHandler:)(a1, a2, v10, v11, a5);
}

void sub_22A9F7088(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B108E0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v7 = v6 - v5;
  if (objc_msgSend(a1, sel_type) != (id)5)
  {
    type metadata accessor for SerializationError();
    OUTLINED_FUNCTION_15_15();
    v16 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_2_26(v16, v17);
LABEL_7:
    v23 = OUTLINED_FUNCTION_5_21(v18, v19);
    OUTLINED_FUNCTION_9_20(v23);
    goto LABEL_8;
  }
  v8 = objc_msgSend(a1, sel_multiArrayConstraint);
  if (!v8)
  {
    type metadata accessor for SerializationError();
    OUTLINED_FUNCTION_15_15();
    v20 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_2_26(v20, v21);
    v19 = v22 + 2;
    goto LABEL_7;
  }
  v9 = v8;
  sub_22AB59960(v9, v7);
  v10 = sub_22ABDDC64();
  if (__swift_getEnumTagSinglePayload(v7, 1, v10) == 1)
  {
    sub_22A9F7930(v7);
    type metadata accessor for SerializationError();
    OUTLINED_FUNCTION_15_15();
    v11 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_2_26(v11, v12);
    v15 = OUTLINED_FUNCTION_5_21(v14, v13 + 11);
    OUTLINED_FUNCTION_9_20(v15);

  }
  else
  {

    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a2, v7, v10);
    v24 = *MEMORY[0x24BE62400];
    v25 = sub_22ABDDC88();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(a2, v24, v25);
  }
LABEL_8:
  OUTLINED_FUNCTION_9_14();
}

void sub_22A9F722C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  id v29;
  id v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[5];
  uint64_t v61;
  uint64_t v62;

  v47 = a1;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_33();
  v46 = v4 - v3;
  sub_22ABDDC88();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_87();
  v50 = v6;
  MEMORY[0x24BDAC7A8](v7);
  v53 = (uint64_t)&v44 - v8;
  v62 = sub_22ABDE798();
  v52 = *(_QWORD *)(v62 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_33();
  v12 = v11 - v10;
  v13 = OUTLINED_FUNCTION_18_15();
  v59 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_2();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v44 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v44 - v21;
  v58 = sub_22ABDE324();
  v56 = *(_QWORD *)(v58 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_87();
  v45 = v24;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v44 - v26;
  v28 = *(void **)v1;
  v51 = *(id *)(v1 + 8);
  v49 = *(id *)(v1 + 16);
  sub_22ABDE318();
  sub_22ABDE258();
  v29 = objc_msgSend(v28, sel_modelDescription);
  v30 = objc_msgSend(v29, sel_modelURL);

  sub_22ABDD0B8();
  sub_22ABDD064();
  v57 = v22;
  sub_22ABDD01C();
  sub_22ABDD0A0();
  v31 = *(void (**)(char *, uint64_t))(v59 + 8);
  v31(v17, v13);
  sub_22ABDD0C4();
  v59 = v13;
  v54 = v31;
  v31(v20, v13);
  sub_22ABDDF94();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104))(v12, *MEMORY[0x24BE632B0], v62);
  v62 = (uint64_t)v27;
  sub_22ABDE288();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
  v32 = *(unsigned __int8 *)(*(_QWORD *)(sub_22ABDDE68() - 8) + 80);
  v52 = (v32 + 32) & ~v32;
  v33 = OUTLINED_FUNCTION_9_24();
  v48 = xmmword_22ABE8E30;
  *(_OWORD *)(v33 + 16) = xmmword_22ABE8E30;
  v34 = v51;
  v35 = objc_msgSend(v51, sel_name);
  sub_22ABDED50();

  v36 = v55;
  sub_22A9F7088(v34, v53);
  if (v36)
  {
    OUTLINED_FUNCTION_51_1();
    *(_QWORD *)(v33 + 16) = 0;
    swift_release();
    OUTLINED_FUNCTION_11_26();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v62, v58);
  }
  else
  {
    OUTLINED_FUNCTION_27();
    sub_22ABDE2C4();
    *(_OWORD *)(OUTLINED_FUNCTION_9_24() + 16) = v48;
    v37 = v49;
    v38 = objc_msgSend(v49, sel_name);
    sub_22ABDED50();

    sub_22A9F7088(v37, v50);
    OUTLINED_FUNCTION_27();
    v39 = v62;
    sub_22ABDE300();
    v40 = v56;
    v41 = v45;
    v42 = v58;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v45, v39, v58);
    memset(v60, 0, sizeof(v60));
    v61 = 0;
    v43 = v46;
    sub_22ABDE3CC();
    sub_22AB314C8(v41, v43, v60, v47);
    OUTLINED_FUNCTION_11_26();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v42);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22A9F76CC(uint64_t a1@<X8>)
{
  sub_22A9F722C(a1);
}

id sub_22A9F76E0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (void *)sub_22ABDEAA4();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithDictionary_error_, v1, v7);

  if (v2)
  {
    v3 = v7[0];
  }
  else
  {
    v4 = v7[0];
    sub_22ABDD004();

    OUTLINED_FUNCTION_9_20(v5);
  }
  return v2;
}

unint64_t sub_22A9F77C0()
{
  unint64_t result;

  result = qword_255B10830[0];
  if (!qword_255B10830[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for ModelCompatibilityError, &type metadata for ModelCompatibilityError);
    atomic_store(result, qword_255B10830);
  }
  return result;
}

_QWORD *sub_22A9F77FC(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void sub_22A9F7840(id *a1)
{

}

uint64_t sub_22A9F7870(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t sub_22A9F78D8(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t type metadata accessor for MLModelTransformerAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MLModelTransformerAdaptor);
}

uint64_t sub_22A9F7930(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B108E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_2_26(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_5_21@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_8_22@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v4;

  *(_QWORD *)a2 = a3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v3;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_9_24()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_11_26()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 - 224))(*(_QWORD *)(v0 - 200), *(_QWORD *)(v0 - 184));
}

uint64_t OUTLINED_FUNCTION_12_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

unint64_t OUTLINED_FUNCTION_15_15()
{
  return sub_22A9D395C();
}

uint64_t OUTLINED_FUNCTION_18_15()
{
  return sub_22ABDD0E8();
}

id OUTLINED_FUNCTION_20_17(void *a1)
{
  SEL *v1;

  return objc_msgSend(a1, *v1);
}

void OUTLINED_FUNCTION_21_17(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22A9F68A8(a1, a2, a3, a4, a5, 4);
}

void OUTLINED_FUNCTION_22_15(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22A9F68A8(a1, a2, a3, a4, a5, 3);
}

uint64_t OUTLINED_FUNCTION_24_13@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  *(_BYTE *)(a2 + 16) = a3;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_25_10()
{
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_26_10(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t PreprocessedFeatureSequence.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a1;
  v5[4] = a2;
  v8 = type metadata accessor for TemporalFeature(0, a3, a3, a4);
  v5[7] = v8;
  v5[8] = *(_QWORD *)(v8 - 8);
  v5[9] = OUTLINED_FUNCTION_0_0();
  v5[10] = *(_QWORD *)(a5 + 8);
  v9 = OUTLINED_FUNCTION_4_17();
  v5[11] = v9;
  v5[12] = *(_QWORD *)(v9 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  sub_22ABDF5D8();
  v5[15] = OUTLINED_FUNCTION_0_0();
  v5[16] = *(_QWORD *)(a4 - 8);
  v5[17] = OUTLINED_FUNCTION_0_0();
  v10 = OUTLINED_FUNCTION_4_17();
  v5[18] = v10;
  v5[19] = *(_QWORD *)(v10 - 8);
  v5[20] = OUTLINED_FUNCTION_0_0();
  return swift_task_switch();
}

uint64_t sub_22A9F7B5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;

  v1 = v0[6];
  v2 = v0[5];
  v0[2] = sub_22ABDF068();
  (*(void (**)(uint64_t, uint64_t))(v1 + 24))(v2, v1);
  if ((v3 & 1) == 0)
  {
    sub_22ABDF0F8();
    sub_22ABDF044();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[16] + 16))(v0[17], v0[4], v0[5]);
  sub_22ABDF200();
  v0[21] = swift_getAssociatedConformanceWitness();
  v4 = (_QWORD *)swift_task_alloc();
  v0[22] = v4;
  OUTLINED_FUNCTION_2_27(v4);
  return sub_22ABDF194();
}

uint64_t sub_22A9F7C54()
{
  uint64_t v0;

  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_22A9F7CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 56);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 152);
    v4 = *(_QWORD **)(v0 + 24);
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 128));
    OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    *v4 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 64) + 32))(*(_QWORD *)(v0 + 72), v1, v2);
    sub_22ABDF0F8();
    sub_22ABDF0C8();
    *(_QWORD *)(v0 + 168) = swift_getAssociatedConformanceWitness();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v6;
    OUTLINED_FUNCTION_2_27(v6);
    return sub_22ABDF194();
  }
}

uint64_t sub_22A9F7E10()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (uint64_t *)(v0 + 96);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 96) + 32);
  v2(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
  swift_getAssociatedConformanceWitness();
  if (sub_22ABDFF14())
  {
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 128));
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 88);
    swift_allocError();
    v2(v5, v3, v4);
    v1 = (uint64_t *)(v0 + 128);
  }
  v6 = *(_QWORD *)(v0 + 152);
  OUTLINED_FUNCTION_30_0(*v1);
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessedFeatureSequence.features.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PreprocessedFeatureSequence.features.modify())()
{
  return nullsub_1;
}

uint64_t PreprocessedFeatureSequence.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_6_28(a1, a2, a3, a4);
  v5 = sub_22ABDEAEC();
  v6 = MEMORY[0x22E2E3340](v5, v4);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t PreprocessedFeatureSequence.makeAsyncIterator()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
  return sub_22ABDEAEC();
}

uint64_t sub_22A9F7FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PreprocessedFeatureSequence.count.getter(a1, a2, a3, a4);
}

uint64_t sub_22A9F8000@<X0>(_QWORD *a1@<X8>)
{
  PreprocessedFeatureSequence.makeAsyncIterator()(a1);
  return swift_bridgeObjectRelease();
}

uint64_t PreprocessedFeatureSequence.AsyncIterator.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t PreprocessedFeatureSequence.AsyncIterator.index.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*PreprocessedFeatureSequence.AsyncIterator.index.modify())()
{
  return nullsub_1;
}

uint64_t PreprocessedFeatureSequence.AsyncIterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v7 = *(_QWORD *)(v5 + 8);
  v8 = OUTLINED_FUNCTION_6_28(a1, a2, a3, a4);
  v9 = sub_22ABDEAEC();
  v10 = MEMORY[0x22E2E3340](v9, v8);
  swift_bridgeObjectRelease();
  if (v7 >= v10)
    return __swift_storeEnumTagSinglePayload(a5, 1, 1, v8);
  sub_22ABDEAEC();
  sub_22ABDF140();
  swift_bridgeObjectRelease();
  result = __swift_storeEnumTagSinglePayload(a5, 0, 1, v8);
  v12 = *(_QWORD *)(v5 + 8);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    *(_QWORD *)(v5 + 8) = v14;
  return result;
}

uint64_t sub_22A9F810C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  PreprocessedFeatureSequence.AsyncIterator.next()(a2, a2, a3, a4, a1);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_22A9F8148()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9F81CC;
  return sub_22ABDF1A0();
}

uint64_t sub_22A9F81CC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22A9F821C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessedFeatureSequence<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22A9F8248()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22A9F8258()
{
  return MEMORY[0x24BEE40A8];
}

uint64_t type metadata accessor for PreprocessedFeatureSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreprocessedFeatureSequence);
}

_QWORD *sub_22A9F8270(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_22ABDEAEC();
  return a1;
}

uint64_t destroy for FullyConnectedNetworkConfiguration()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22A9F82A4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *sub_22A9F82F0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for SampledPrecisionRecallCurve(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SampledPrecisionRecallCurve(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for PreprocessedFeatureSequence.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreprocessedFeatureSequence.AsyncIterator);
}

uint64_t OUTLINED_FUNCTION_2_27(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 120);
}

uint64_t OUTLINED_FUNCTION_3_27()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_6_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for TemporalFeature(0, *(_QWORD *)(a1 + 16), a3, a4);
}

uint64_t AnnotatedFeature.feature.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t AnnotatedFeature.annotation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t AnnotatedFeature.init(feature:annotation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for AnnotatedFeature(0, a3, a4, v9) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v10, a2, a4);
}

uint64_t type metadata accessor for AnnotatedFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnnotatedFeature);
}

uint64_t AnnotatedFeature.feature.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*AnnotatedFeature.feature.modify())()
{
  return nullsub_1;
}

uint64_t AnnotatedFeature.annotation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 36), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*AnnotatedFeature.annotation.modify())()
{
  return nullsub_1;
}

uint64_t sub_22A9F84F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65727574616566 && a2 == 0xE700000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697461746F6E6E61 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22A9F85E8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x697461746F6E6E61;
  else
    return 0x65727574616566;
}

uint64_t sub_22A9F8624()
{
  char *v0;

  return sub_22A9F85E8(*v0);
}

uint64_t sub_22A9F8634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9F84F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22A9F8660(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABED930, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22A9F8694(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABED930, a1);
  return sub_22ABE02F8();
}

void AnnotatedFeature<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v14[6];
  char v15;
  char v16;

  v14[4] = a3;
  v14[2] = a4;
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v14[0] = a2;
  v14[1] = v6;
  v8 = type metadata accessor for AnnotatedFeature.CodingKeys(255, v7, v6, a4);
  MEMORY[0x22E2E4D80](&unk_22ABED930, v8);
  v9 = sub_22ABDFD58();
  OUTLINED_FUNCTION_6_29();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v14 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  v16 = 0;
  v13 = v14[5];
  sub_22ABDFD4C();
  if (!v13)
  {
    v15 = 1;
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v9);
  OUTLINED_FUNCTION_16();
}

uint64_t type metadata accessor for AnnotatedFeature.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnnotatedFeature.CodingKeys);
}

void sub_22A9F8808(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  AnnotatedFeature<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16));
}

void AnnotatedFeature<>.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;

  v33 = a6;
  v34 = a5;
  v39 = a4;
  v32 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v37 = v10;
  v36 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0();
  v40 = v13;
  v17 = type metadata accessor for AnnotatedFeature.CodingKeys(255, v14, v15, v16);
  MEMORY[0x22E2E4D80](&unk_22ABED930, v17);
  v43 = sub_22ABDFCB0();
  v35 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v19 = (char *)&v31 - v18;
  v41 = a2;
  v38 = a3;
  v21 = type metadata accessor for AnnotatedFeature(0, a2, a3, v20);
  OUTLINED_FUNCTION_6_29();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v31 - v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v42 = v19;
  v25 = v44;
  sub_22ABE0298();
  if (v25)
  {
    OUTLINED_FUNCTION_9_16();
  }
  else
  {
    v26 = v36;
    v44 = v6;
    v27 = v24;
    v28 = v37;
    v29 = v38;
    v46 = 0;
    sub_22ABDFC8C();
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v27, v40, v41);
    v45 = 1;
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_2_28();
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v27[*(int *)(v21 + 36)], v28, v29);
    v30 = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v33, v27, v21);
    OUTLINED_FUNCTION_9_16();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v21);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22A9F8A80(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  AnnotatedFeature<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16), a4);
}

uint64_t static AnnotatedFeature<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if ((sub_22ABDECFC() & 1) == 0)
    return 0;
  type metadata accessor for AnnotatedFeature(0, a3, a4, v6);
  return sub_22ABDECFC() & 1;
}

uint64_t sub_22A9F8B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static AnnotatedFeature<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t AnnotatedFeature<>.hash(into:)()
{
  sub_22ABDEC0C();
  return sub_22ABDEC0C();
}

uint64_t AnnotatedFeature<>.hashValue.getter()
{
  sub_22ABE0244();
  AnnotatedFeature<>.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22A9F8BD8()
{
  return AnnotatedFeature<>.hashValue.getter();
}

uint64_t sub_22A9F8BE4()
{
  return AnnotatedFeature<>.hash(into:)();
}

uint64_t sub_22A9F8BF0()
{
  sub_22ABE0244();
  AnnotatedFeature<>.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22A9F8C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v5[2];

  v3 = *(_QWORD *)(*(_QWORD *)(a3 - 16) + 8);
  v5[0] = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  v5[1] = v3;
  return MEMORY[0x22E2E4D80](&protocol conformance descriptor for <> AnnotatedFeature<A, B>, a1, v5);
}

uint64_t sub_22A9F8C80()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22A9F8D0C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22A9F8DE8 + 4 * byte_22ABED6E0[v21 - 1]))();
}

void sub_22A9F8E5C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_22A9F9050(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22A9F909C + 4 * byte_22ABED6F3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22A9F90D0 + 4 * byte_22ABED6EE[v4]))();
}

uint64_t sub_22A9F90D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9F90D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22A9F90E0);
  return result;
}

uint64_t sub_22A9F90EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22A9F90F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22A9F90F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22A9F9100(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22A9F910C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9F911C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22A9F912C()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_2_28()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 104), *(_QWORD *)(v1 - 96));
}

uint64_t ModelUpdateError.errorDescription.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_20();
  return v0;
}

uint64_t ModelUpdateError.debugDescription.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_20();
  return v0;
}

uint64_t static ModelUpdateError.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_22ABDFF68();
}

_QWORD *assignWithCopy for MetricsKey(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MetricsKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ModelUpdateError()
{
  return &type metadata for ModelUpdateError;
}

uint64_t OUTLINED_FUNCTION_0_20()
{
  return sub_22ABDEAEC();
}

unint64_t DataFrameTemporalAnnotationParameters.FilePathType.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  unint64_t v18;

  v2 = v1;
  v4 = 0xD000000000000013;
  v5 = sub_22ABDD0E8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v11, v2, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  v13 = OUTLINED_FUNCTION_33_11();
  if (__swift_getEnumTagSinglePayload(v13, v14, v15) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v17 = 0xD000000000000021;
    v18 = 0x800000022ABE2690;
    sub_22A9F9410();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    v4 = v17;
    OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  }
  return v4;
}

unint64_t sub_22A9F9410()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540E89D0;
  if (!qword_2540E89D0)
  {
    v1 = sub_22ABDD0E8();
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_2540E89D0);
  }
  return result;
}

uint64_t static DataFrameTemporalAnnotationParameters.FilePathType.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v8 = sub_22ABDD0E8();
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v30 = v10;
  v12 = *(_QWORD *)(type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(0, a3, a4, v11) - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v29 - v14;
  v16 = *(_QWORD *)(swift_getTupleTypeMetadata2() - 8);
  OUTLINED_FUNCTION_6();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v29 - v19;
  v21 = (char *)&v29 + *(int *)(v18 + 48) - v19;
  OUTLINED_FUNCTION_30_11((uint64_t)&v29 - v19, a1);
  OUTLINED_FUNCTION_30_11((uint64_t)v21, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  OUTLINED_FUNCTION_19_14((uint64_t)v20);
  if (v23)
  {
    v22 = 1;
    OUTLINED_FUNCTION_19_14((uint64_t)v21);
    if (v23)
      goto LABEL_10;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_30_11((uint64_t)v15, (uint64_t)v20);
  OUTLINED_FUNCTION_19_14((uint64_t)v21);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
LABEL_9:
    v22 = 0;
    v12 = v16;
    goto LABEL_10;
  }
  v25 = v30;
  v24 = v31;
  v26 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v30, v21, v32);
  v22 = MEMORY[0x22E2E133C](v15, v25);
  v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v27(v25, v26);
  v27((uint64_t)v15, v26);
LABEL_10:
  OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  return v22 & 1;
}

uint64_t type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataFrameTemporalAnnotationParameters.FilePathType);
}

uint64_t sub_22A9F9630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static DataFrameTemporalAnnotationParameters.FilePathType.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t DataFrameTemporalAnnotationParameters.filePathType.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  v4 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v4, v5, v6, v7);
}

uint64_t DataFrameTemporalAnnotationParameters.filePathType.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v4 = OUTLINED_FUNCTION_6_17();
  return OUTLINED_FUNCTION_81(v4, v5, v6, v7);
}

uint64_t (*DataFrameTemporalAnnotationParameters.filePathType.modify())()
{
  return nullsub_1;
}

uint64_t DataFrameTemporalAnnotationParameters.filePathColumnID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
  v0 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t DataFrameTemporalAnnotationParameters.filePathColumnID.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
  v0 = OUTLINED_FUNCTION_6_17();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t (*DataFrameTemporalAnnotationParameters.filePathColumnID.modify())()
{
  return nullsub_1;
}

uint64_t DataFrameTemporalAnnotationParameters.annotationColumnID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_22ABDD3C4();
  v0 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t DataFrameTemporalAnnotationParameters.annotationColumnID.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_22ABDD3C4();
  v0 = OUTLINED_FUNCTION_6_17();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t (*DataFrameTemporalAnnotationParameters.annotationColumnID.modify())()
{
  return nullsub_1;
}

uint64_t DataFrameTemporalAnnotationParameters.startTimeColumnID.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_16_18(a2, *(int *)(a1 + 44));
}

uint64_t sub_22A9F9798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DataFrameTemporalAnnotationParameters.startTimeColumnID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22A9FA818(a1, v2 + *(int *)(a2 + 44), &qword_255B10AB8);
}

uint64_t (*DataFrameTemporalAnnotationParameters.startTimeColumnID.modify())()
{
  return nullsub_1;
}

uint64_t DataFrameTemporalAnnotationParameters.endTimeColumnID.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_16_18(a2, *(int *)(a1 + 48));
}

uint64_t DataFrameTemporalAnnotationParameters.endTimeColumnID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22A9FA818(a1, v2 + *(int *)(a2 + 48), &qword_255B10AB8);
}

uint64_t (*DataFrameTemporalAnnotationParameters.endTimeColumnID.modify())()
{
  return nullsub_1;
}

uint64_t DataFrameTemporalAnnotationParameters.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  __swift_storeEnumTagSinglePayload(a3, 1, 1, v6);
  v8 = type metadata accessor for DataFrameTemporalAnnotationParameters(0, a1, a2, v7);
  sub_22ABDD3D0();
  sub_22ABDD3D0();
  v9 = a3 + *(int *)(v8 + 44);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AC0);
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  return OUTLINED_FUNCTION_77_0(a3 + *(int *)(v8 + 48), 1, 1, v10);
}

uint64_t type metadata accessor for DataFrameTemporalAnnotationParameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataFrameTemporalAnnotationParameters);
}

void DataFrame.loadRangedAnnotations<A>(parameters:continueOnFailure:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int EnumTagSinglePayload;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  double v105;
  char v106;
  char v107;
  double *v108;
  void (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD v122[4];
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD v157[3];
  uint64_t v158;
  _QWORD v159[3];
  double v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  v153 = a2;
  v7 = sub_22ABDE804();
  OUTLINED_FUNCTION_40_1(v7, (uint64_t)v157);
  v126 = v8;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v10);
  type metadata accessor for TemporalFileSegment();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0();
  v13 = OUTLINED_FUNCTION_16_6(v12);
  v140 = v14;
  v16 = type metadata accessor for AnnotatedFeature(v13, v14, a3, v15);
  OUTLINED_FUNCTION_40_1(v16, (uint64_t)&v165);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v17);
  v136 = (uint64_t)v122 - v18;
  v19 = OUTLINED_FUNCTION_18_16();
  v22 = type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(v19, v20, a4, v21);
  OUTLINED_FUNCTION_40_1(v22, (uint64_t)&v163);
  v142 = v23;
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_16_6((uint64_t)v122 - v25);
  v146 = sub_22ABDD0E8();
  v156 = *(_QWORD *)(v146 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_28_1();
  v138 = v28;
  OUTLINED_FUNCTION_18_16();
  v29 = sub_22ABDF5D8();
  OUTLINED_FUNCTION_40_1(v29, (uint64_t)&v164);
  v154 = v30;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_28_1();
  v155 = v33;
  v150 = *(_QWORD *)(a3 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_28_1();
  v148 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_28_1();
  v130 = v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AC0);
  OUTLINED_FUNCTION_40_1(v40, (uint64_t)v159);
  v132 = v41;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_28_1();
  v127 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AC8);
  OUTLINED_FUNCTION_2();
  v46 = MEMORY[0x24BDAC7A8](v45);
  v48 = (char *)v122 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x24BDAC7A8](v46);
  v151 = (uint64_t)v122 - v50;
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_28_1();
  v149 = v51;
  OUTLINED_FUNCTION_18_16();
  v52 = sub_22ABDD3A0();
  v53 = *(_QWORD *)(v52 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v54);
  v159[1] = (char *)v122 - v55;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AD0);
  v57 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  OUTLINED_FUNCTION_0();
  v159[2] = v58;
  v147 = a1;
  v59 = v159[0];
  sub_22A9FA4E0(a1, a3, a4);
  if (v59)
    return;
  v123 = v48;
  v122[3] = 0;
  v158 = v53;
  v159[0] = v57;
  v157[1] = v52;
  v157[2] = v56;
  v61 = a3;
  v62 = (int *)type metadata accessor for DataFrameTemporalAnnotationParameters(0, a3, a4, v60);
  v63 = v147;
  v122[1] = v147 + v62[9];
  sub_22ABDD2F8();
  v122[2] = v63 + v62[10];
  sub_22ABDD2F8();
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AD8);
  v65 = v149;
  OUTLINED_FUNCTION_18_11(v149, 1);
  OUTLINED_FUNCTION_18_11(v151, 1);
  v66 = v130;
  sub_22A9F9798(v63 + v62[11], v130);
  v67 = v129;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v66, 1, v129);
  v135 = v64;
  if (EnumTagSinglePayload == 1)
  {
    sub_22A9AD754(v66, &qword_255B10AB8);
    OUTLINED_FUNCTION_10_17();
    v69 = (uint64_t)v123;
  }
  else
  {
    v70 = v132;
    v61 = v127;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 32))(v127, v66, v67);
    v69 = (uint64_t)v123;
    sub_22ABDD2F8();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v61, v67);
    OUTLINED_FUNCTION_18_11(v69, 0);
    sub_22A9FA818(v69, v65, &qword_255B10AC8);
    OUTLINED_FUNCTION_10_17();
  }
  v71 = v131;
  sub_22A9F9798(v147 + v62[12], v131);
  v72 = OUTLINED_FUNCTION_33_11();
  if (__swift_getEnumTagSinglePayload(v72, v73, v65) == 1)
  {
    sub_22A9AD754(v71, &qword_255B10AB8);
  }
  else
  {
    v74 = v69;
    v75 = v128;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 32))(v128, v71, v65);
    sub_22ABDD2F8();
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v75, v65);
    __swift_storeEnumTagSinglePayload(v74, 0, 1, v135);
    sub_22A9FA818(v74, v151, &qword_255B10AC8);
  }
  v76 = v155;
  v162 = sub_22ABDE9F0();
  v77 = sub_22ABDD37C();
  if (v77 < 0)
    goto LABEL_60;
  v78 = v158;
  v79 = v159[0];
  if (!v77)
    goto LABEL_52;
  v80 = 0;
  v81 = 0;
  v133 = a3;
  v157[0] = v77;
  while (1)
  {
    if (v77 == v81)
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      return;
    }
    OUTLINED_FUNCTION_9_25();
    if (!v161)
      goto LABEL_15;
    OUTLINED_FUNCTION_11_27();
    if (OUTLINED_FUNCTION_23_15() == 1)
    {
      OUTLINED_FUNCTION_2_1();
      v61 = v154;
      OUTLINED_FUNCTION_35_6(v76, *(uint64_t (**)(uint64_t, uint64_t))(v154 + 8));
LABEL_15:
      if ((v153 & 1) == 0)
      {
        OUTLINED_FUNCTION_9_25();
        v82 = v161;
        swift_bridgeObjectRelease();
        if (v82)
        {
          swift_bridgeObjectRelease();
          sub_22ABDD3C4();
          v118 = (uint64_t *)&v152;
        }
        else
        {
          v83 = v144;
          OUTLINED_FUNCTION_11_27();
          v84 = OUTLINED_FUNCTION_23_15();
          v85 = v83;
          v76 = v155;
          OUTLINED_FUNCTION_35_6(v85, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
          if (v84 == 1)
            goto LABEL_18;
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
          v118 = &v151;
        }
        v119 = *(v118 - 32);
        sub_22ABDD3B8();
        OUTLINED_FUNCTION_34_10();
        v120 = OUTLINED_FUNCTION_53();
        *(_QWORD *)v121 = 0xD000000000000013;
        *(_QWORD *)(v121 + 8) = 0x800000022ABE26E0;
        *(_QWORD *)(v121 + 16) = v64;
        *(_QWORD *)(v121 + 24) = v119;
        *(_OWORD *)(v121 + 32) = 0u;
        *(_OWORD *)(v121 + 48) = 0u;
        *(_BYTE *)(v121 + 64) = 2;
        swift_willThrow(v120);
        OUTLINED_FUNCTION_25_11(v158);
        OUTLINED_FUNCTION_32_9(*(uint64_t (**)(_QWORD, uint64_t))(v159[0] + 8));
        sub_22A9AD754(v151, &qword_255B10AC8);
        sub_22A9AD754(v149, &qword_255B10AC8);
        return;
      }
LABEL_18:
      if (__OFADD__(v80++, 1))
        goto LABEL_58;
      goto LABEL_42;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 32))(v67, v76, a3);
    v87 = v141;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v142 + 16))(v141, v147, v143);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
    v88 = OUTLINED_FUNCTION_33_11();
    if (__swift_getEnumTagSinglePayload(v88, v89, v90) == 1)
    {
      v91 = v138;
      sub_22ABDD058();
      OUTLINED_FUNCTION_2_1();
    }
    else
    {
      v92 = v156;
      v93 = v134;
      v76 = v146;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v156 + 32))(v134, v87, v146);
      v94 = v138;
      sub_22ABDD088();
      OUTLINED_FUNCTION_2_1();
      v95 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v67 = v148;
      v96 = v93;
      v91 = v94;
      v95(v96, v76);
    }
    v79 = v151;
    v97 = 1;
    v98 = v135;
    v99 = __swift_getEnumTagSinglePayload(v149, 1, v135);
    v100 = v150;
    if (v99)
    {
      v101 = 0.0;
    }
    else
    {
      sub_22ABDD3AC();
      v79 = v151;
      v101 = v160;
      v97 = v161;
    }
    v102 = OUTLINED_FUNCTION_33_11();
    if (__swift_getEnumTagSinglePayload(v102, v103, v98))
    {
      OUTLINED_FUNCTION_13_24();
      if ((v104 & 1) == 0)
        goto LABEL_40;
      v101 = 0.0;
LABEL_35:
      v105 = 1.79769313e308;
      goto LABEL_41;
    }
    sub_22ABDD3AC();
    v105 = v160;
    if (v101 < 0.0)
      v106 = 1;
    else
      v106 = v97;
    if ((v106 & 1) != 0)
    {
      v101 = 0.0;
      OUTLINED_FUNCTION_13_24();
      if ((v107 & 1) == 0)
      {
        if (v105 < 0.0)
          goto LABEL_61;
        goto LABEL_41;
      }
      goto LABEL_35;
    }
    if (v101 >= v160)
      v78 = 1;
    else
      v78 = v161;
    v79 = v140;
    v76 = v139;
    v97 = v137;
    if ((v78 & 1) != 0)
    {
LABEL_40:
      v105 = 1.79769313e308;
      if (v101 > 1.79769313e308)
        goto LABEL_59;
      goto LABEL_41;
    }
    if (v101 > v160)
      break;
LABEL_41:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v156 + 16))(v76, v91, v146);
    v108 = (double *)(v76 + *(int *)(v79 + 20));
    *v108 = v101;
    v108[1] = v105;
    v109 = *(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16);
    v110 = v67;
    v111 = v100;
    a3 = v133;
    v109(v97, v110, v133);
    AnnotatedFeature.init(feature:annotation:)(v76, v97, v79, a3, v136);
    sub_22ABDF0F8();
    sub_22ABDF0C8();
    OUTLINED_FUNCTION_35_6(v91, *(uint64_t (**)(uint64_t, uint64_t))(v156 + 8));
    v112 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
    v67 = v148;
    v112(v148, a3);
    v64 = v145;
    v61 = v154;
    v76 = v155;
LABEL_42:
    ++v81;
    v77 = v157[0];
    v78 = v158;
    v79 = v159[0];
    if (v157[0] == v81)
      goto LABEL_48;
  }
  __break(1u);
LABEL_48:
  v113 = v126;
  if (v80 >= 1)
  {
    v114 = v124;
    sub_22ABDE7F8();
    v115 = sub_22ABDE7EC();
    v116 = sub_22ABDF4D0();
    if (os_log_type_enabled(v115, v116))
    {
      v117 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v117 = 134349056;
      v113 = v126;
      v160 = *(double *)&v80;
      sub_22ABDF65C();
      _os_log_impl(&dword_22A999000, v115, v116, "Skipped %{public}ld rows from the dataframe since they do not have a file path or annotation or both.", v117, 0xCu);
      MEMORY[0x22E2E4E64](v117, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v114, v125);
    v78 = v158;
    v79 = v159[0];
  }
LABEL_52:
  OUTLINED_FUNCTION_25_11(v78);
  OUTLINED_FUNCTION_32_9(*(uint64_t (**)(_QWORD, uint64_t))(v79 + 8));
  sub_22A9AD754(v151, &qword_255B10AC8);
  sub_22A9AD754(v149, &qword_255B10AC8);
}

uint64_t sub_22A9FA4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = v3;
  v7 = sub_22ABDD400();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_87();
  v41 = v8;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)&v39 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - v12;
  v42 = a2;
  type metadata accessor for DataFrameTemporalAnnotationParameters(0, a2, a3, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
  v15 = sub_22ABDD3B8();
  v17 = v16;
  v43 = v4;
  sub_22ABDD250();
  if ((v18 & 1) == 0)
  {
    OUTLINED_FUNCTION_20_18();
    sub_22ABDD3E8();
    OUTLINED_FUNCTION_28_9((uint64_t)v13);
    if (!swift_dynamicCastMetatype())
    {
      v27 = v41;
      OUTLINED_FUNCTION_20_18();
      v28 = sub_22ABDD3E8();
      OUTLINED_FUNCTION_28_9(v27);
      v44 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10BF8);
      OUTLINED_FUNCTION_15_16();
      OUTLINED_FUNCTION_34_10();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_24_14();
      OUTLINED_FUNCTION_29_11(v29, v30);
      *(_OWORD *)(v31 + 48) = xmmword_22ABEDA80;
LABEL_9:
      *(_BYTE *)(v31 + 64) = 1;
      return swift_willThrow(v24);
    }
    swift_bridgeObjectRelease();
    v19 = v42;
    sub_22ABDD3C4();
    v15 = sub_22ABDD3B8();
    v17 = v20;
    sub_22ABDD250();
    if ((v21 & 1) == 0)
    {
      v22 = (uint64_t)v40;
      OUTLINED_FUNCTION_20_18();
      sub_22ABDD3E8();
      OUTLINED_FUNCTION_28_9(v22);
      if (swift_dynamicCastMetatype())
        return swift_bridgeObjectRelease();
      v32 = v41;
      OUTLINED_FUNCTION_20_18();
      v33 = sub_22ABDD3E8();
      OUTLINED_FUNCTION_28_9(v32);
      v44 = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10BF8);
      OUTLINED_FUNCTION_15_16();
      v44 = v19;
      swift_getMetatypeMetadata();
      v34 = OUTLINED_FUNCTION_15_16();
      v36 = v35;
      sub_22A9FA7DC();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_24_14();
      OUTLINED_FUNCTION_29_11(v37, v38);
      *(_QWORD *)(v31 + 48) = v34;
      *(_QWORD *)(v31 + 56) = v36;
      goto LABEL_9;
    }
  }
  sub_22A9FA7DC();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_24_14();
  *(_QWORD *)v25 = v26;
  *(_QWORD *)(v25 + 8) = 0x800000022ABE26E0;
  *(_QWORD *)(v25 + 16) = v15;
  *(_QWORD *)(v25 + 24) = v17;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(_BYTE *)(v25 + 64) = 0;
  return swift_willThrow(v24);
}

unint64_t sub_22A9FA7DC()
{
  unint64_t result;

  result = qword_255B10AE0[0];
  if (!qword_255B10AE0[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for TabularPipelineDataError, &type metadata for TabularPipelineDataError);
    atomic_store(result, qword_255B10AE0);
  }
  return result;
}

uint64_t sub_22A9FA818(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_22A9FA85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v4 <= 0x3F)
  {
    sub_22A9FB7E4();
    if (v5 <= 0x3F)
    {
      sub_22ABDD3C4();
      if (v6 <= 0x3F)
      {
        sub_22A9FB82C();
        if (v7 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_22A9FA924(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v9 = type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_22ABDD0E8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v12 = *(int *)(a3 + 36);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = *(int *)(a3 + 40);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_22ABDD3C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = *(int *)(a3 + 44);
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AC0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
    }
    v25 = *(int *)(a3 + 48);
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v23))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v26, v27, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v23);
    }
  }
  return a1;
}

uint64_t sub_22A9FAB54(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    v5 = sub_22ABDD0E8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  v6 = a1 + a2[9];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[10];
  v9 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[11];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AC0);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[12];
  result = __swift_getEnumTagSinglePayload(v12, 1, v11);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v12, v11);
  return result;
}

char *sub_22A9FAC84(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v8 = type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v7);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_22ABDD0E8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 36);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = *(int *)(a3 + 40);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_22ABDD3C4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = *(int *)(a3 + 44);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AC0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  v23 = *(int *)(a3 + 48);
  v24 = &a1[v23];
  v25 = &a2[v23];
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v21))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v24, v25, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v21);
  }
  return a1;
}

char *sub_22A9FAE88(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v10 = sub_22ABDD0E8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_22A9AD754((uint64_t)a1, &qword_255B10AA8);
LABEL_6:
    v11 = type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v9);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  v36 = sub_22ABDD0E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(a1, a2, v36);
LABEL_7:
  v12 = *(int *)(a3 + 36);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = *(int *)(a3 + 40);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_22ABDD3C4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = *(int *)(a3 + 44);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AC0);
  v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v26 = *(_QWORD *)(v23 - 8);
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v23);
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v21, v22, v23);
LABEL_13:
  v28 = *(int *)(a3 + 48);
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v28], 1, v23);
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v23);
  if (!v31)
  {
    v33 = *(_QWORD *)(v23 - 8);
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v29, v30, v23);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v23);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v29, v30, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v23);
  return a1;
}

char *sub_22A9FB174(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v8 = type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v7);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_22ABDD0E8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 36);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = *(int *)(a3 + 40);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_22ABDD3C4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = *(int *)(a3 + 44);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AC0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  v23 = *(int *)(a3 + 48);
  v24 = &a1[v23];
  v25 = &a2[v23];
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v21))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v24, v25, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v21);
  }
  return a1;
}

char *sub_22A9FB378(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v10 = sub_22ABDD0E8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_22A9AD754((uint64_t)a1, &qword_255B10AA8);
LABEL_6:
    v11 = type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v9);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  v36 = sub_22ABDD0E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(a1, a2, v36);
LABEL_7:
  v12 = *(int *)(a3 + 36);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(a3 + 40);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_22ABDD3C4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = *(int *)(a3 + 44);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AC0);
  v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v26 = *(_QWORD *)(v23 - 8);
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v23);
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v21, v22, v23);
LABEL_13:
  v28 = *(int *)(a3 + 48);
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v28], 1, v23);
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v23);
  if (!v31)
  {
    v33 = *(_QWORD *)(v23 - 8);
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v29, v30, v23);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v23);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v29, v30, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v23);
  return a1;
}

uint64_t sub_22A9FB664()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9FB670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  OUTLINED_FUNCTION_21_18();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
    OUTLINED_FUNCTION_21_18();
    if (v10)
    {
      v8 = v11;
      v12 = *(int *)(a3 + 36);
    }
    else
    {
      sub_22ABDD3C4();
      OUTLINED_FUNCTION_21_18();
      if (v13)
      {
        v8 = v14;
        v12 = *(int *)(a3 + 40);
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
        v12 = *(int *)(a3 + 44);
      }
    }
    v9 = a1 + v12;
  }
  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t sub_22A9FB71C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9FB728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  type metadata accessor for DataFrameTemporalAnnotationParameters.FilePathType(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a4);
  OUTLINED_FUNCTION_22_16();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB0);
    OUTLINED_FUNCTION_22_16();
    if (v10)
    {
      v8 = v11;
      v12 = *(int *)(a4 + 36);
    }
    else
    {
      sub_22ABDD3C4();
      OUTLINED_FUNCTION_22_16();
      if (v13)
      {
        v8 = v14;
        v12 = *(int *)(a4 + 40);
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AB8);
        v12 = *(int *)(a4 + 44);
      }
    }
    v9 = a1 + v12;
  }
  return __swift_storeEnumTagSinglePayload(v9, a2, a2, v8);
}

void sub_22A9FB7E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B10B68)
  {
    v0 = sub_22ABDD3C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255B10B68);
  }
}

void sub_22A9FB82C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B10B70[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B10AC0);
    v0 = sub_22ABDF5D8();
    if (!v1)
      atomic_store(v0, qword_255B10B70);
  }
}

uint64_t sub_22A9FB884()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_22A9FB8D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_22ABDD0E8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_22A9FB99C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  result = __swift_getEnumTagSinglePayload(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_22ABDD0E8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_22A9FB9FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_22ABDD0E8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_22A9FBA9C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v11 = sub_22ABDD0E8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_22A9AD754((uint64_t)a1, &qword_255B10AA8);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_22ABDD0E8();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_22A9FBB94(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_22ABDD0E8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_22A9FBC34(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v11 = sub_22ABDD0E8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_22A9AD754((uint64_t)a1, &qword_255B10AA8);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_22ABDD0E8();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_22A9FBD2C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9FBD38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

uint64_t sub_22A9FBD80()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9FBD8C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  return OUTLINED_FUNCTION_77_0(a1, v5, a3, v6);
}

uint64_t sub_22A9FBDD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  return __swift_getEnumTagSinglePayload(a1, 1, v2);
}

uint64_t sub_22A9FBE04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AA8);
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v4);
}

uint64_t OUTLINED_FUNCTION_9_25()
{
  return sub_22ABDD3AC();
}

uint64_t OUTLINED_FUNCTION_11_27()
{
  return sub_22ABDD3AC();
}

uint64_t OUTLINED_FUNCTION_15_16()
{
  return sub_22ABDED80();
}

uint64_t OUTLINED_FUNCTION_16_18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22A9F9798(v2 + a2, a1);
}

uint64_t OUTLINED_FUNCTION_18_16()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_14(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_20_18()
{
  return sub_22ABDD298();
}

uint64_t OUTLINED_FUNCTION_23_15()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_25_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a1 + 8))(*(_QWORD *)(v1 - 136), *(_QWORD *)(v1 - 168));
}

uint64_t OUTLINED_FUNCTION_28_9(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_29_11(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v3;
  a1[5] = v4;
}

uint64_t OUTLINED_FUNCTION_30_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_31_8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_32_9@<X0>(uint64_t (*a1)(_QWORD, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(*(_QWORD *)(v2 - 128), v1);
}

uint64_t OUTLINED_FUNCTION_33_11()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_34_10()
{
  return sub_22A9FA7DC();
}

uint64_t OUTLINED_FUNCTION_35_6@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_22A9FBF98()
{
  sub_22A9FBFE0();
}

void sub_22A9FBFBC()
{
  sub_22A9FBFE0();
}

void sub_22A9FBFE0()
{
  uint64_t v0;
  void (*v1)(BOOL, unint64_t, uint64_t);
  void (*v2)(BOOL, unint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(BOOL, unint64_t, uint64_t);
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  v19 = v5;
  v20 = v6;
  v18 = v7;
  v8 = *(_QWORD *)(v7(0) - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v16 - v9;
  v11 = *(_QWORD *)(v4 + 16);
  if (v11)
  {
    v21 = MEMORY[0x24BEE4AF8];
    v16 = v2;
    v2(0, v11, 0);
    v12 = *(_QWORD *)(sub_22ABDD7D8() - 8);
    v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v17 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_12_21();
      if (v0)
        break;
      v15 = *(_QWORD *)(v21 + 16);
      v14 = *(_QWORD *)(v21 + 24);
      if (v15 >= v14 >> 1)
        v16(v14 > 1, v15 + 1, 1);
      *(_QWORD *)(v21 + 16) = v15 + 1;
      sub_22AA001C0((uint64_t)v10, v21+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v15, v18);
      v13 += v17;
      if (!--v11)
        goto LABEL_9;
    }
    swift_release();
  }
LABEL_9:
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22A9FC144(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;

  v25 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v31 = MEMORY[0x24BEE4AF8];
    sub_22AB4D078(0, v4, 0);
    v5 = v31;
    v7 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v8 = *v7;
      v27[0] = *(v7 - 1);
      v27[1] = v8;
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_8_23((uint64_t)v27, (uint64_t)&v26, v9, v10, v11, v12, v13, v14, v24, v25);
      if (v3)
        break;
      OUTLINED_FUNCTION_30();
      v16 = v27[2];
      v15 = v28;
      v17 = v29;
      v18 = v30;
      v31 = v5;
      v20 = *(_QWORD *)(v5 + 16);
      v19 = *(_QWORD *)(v5 + 24);
      if (v20 >= v19 >> 1)
      {
        v22 = v28;
        HIDWORD(v24) = v30;
        sub_22AB4D078(v19 > 1, v20 + 1, 1);
        v18 = BYTE4(v24);
        v15 = v22;
        v5 = v31;
      }
      v7 += 2;
      *(_QWORD *)(v5 + 16) = v20 + 1;
      v21 = v5 + 32 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v15;
      *(_QWORD *)(v21 + 48) = v17;
      *(_BYTE *)(v21 + 56) = v18;
      if (!--v4)
        return v5;
    }
    OUTLINED_FUNCTION_81_1();
    OUTLINED_FUNCTION_30();
  }
  return v5;
}

void sub_22A9FC274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_12();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v5 = OUTLINED_FUNCTION_47_6(v4);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_20_19();
  if (v1)
  {
    OUTLINED_FUNCTION_34_11();
    sub_22AB4D4FC();
    v6 = v3 + 32;
    while (1)
    {
      v6 += 4;
      OUTLINED_FUNCTION_12_21();
      if (v0)
        break;
      OUTLINED_FUNCTION_38_10();
      if (v7)
        sub_22AB4D4FC();
      OUTLINED_FUNCTION_3_28();
      if (!--v1)
        goto LABEL_9;
    }
    OUTLINED_FUNCTION_3_26();
  }
LABEL_9:
  OUTLINED_FUNCTION_16();
}

void sub_22A9FC344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_12();
  v3 = v2;
  v4 = sub_22ABDDA0C();
  v5 = OUTLINED_FUNCTION_47_6(v4);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_20_19();
  if (v1)
  {
    OUTLINED_FUNCTION_34_11();
    sub_22AB4D4C0();
    v6 = v3 + 32;
    while (1)
    {
      v6 += 4;
      OUTLINED_FUNCTION_12_21();
      if (v0)
        break;
      OUTLINED_FUNCTION_38_10();
      if (v7)
        sub_22AB4D4C0();
      OUTLINED_FUNCTION_3_28();
      if (!--v1)
        goto LABEL_9;
    }
    OUTLINED_FUNCTION_3_26();
  }
LABEL_9:
  OUTLINED_FUNCTION_16();
}

#error "22A9FC484: call analysis failed (funcsize=55)"

uint64_t sub_22A9FC4EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_22AB4D624();
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      sub_22ABDEAEC();
      if (v8 >= v7 >> 1)
        sub_22AB4D624();
      v4 += 2;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

#error "22A9FC634: call analysis failed (funcsize=68)"

#error "22A9FC744: call analysis failed (funcsize=55)"

uint64_t sub_22A9FC7AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = sub_22AB880B0(a1);
  swift_bridgeObjectRelease();
  v6 = v1;
  swift_retain();
  sub_22A9FF7A4((uint64_t *)&v6);
  swift_release();
  v2 = (uint64_t)v6;
  v3 = v6[2];
  v4 = swift_retain();
  sub_22AAD6DC8(v4, 0, v3);
  return v2;
}

__n128 BoostedTreeClassifier.configuration.getter@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __n128 result;

  v3 = v2 + *(int *)(a1 + 68);
  v4 = *(_BYTE *)(v3 + 56);
  v5 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v3 + 40);
  *(_BYTE *)(a2 + 56) = v4;
  result = *(__n128 *)(v3 + 64);
  *(__n128 *)(a2 + 64) = result;
  *(_QWORD *)(a2 + 80) = v5;
  return result;
}

void sub_22A9FC880()
{
  type metadata accessor for BoostedTreeClassifier();
}

double sub_22A9FC8BC(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  double result;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;
  __int128 v10;
  uint64_t v11;

  BoostedTreeClassifier.configuration.getter(a1, (uint64_t)&v5);
  v2 = v9;
  v3 = v11;
  *(_QWORD *)v1 = v5;
  *(_OWORD *)(v1 + 8) = v6;
  *(_OWORD *)(v1 + 24) = v7;
  *(_OWORD *)(v1 + 40) = v8;
  *(_BYTE *)(v1 + 56) = v2;
  result = *(double *)&v10;
  *(_OWORD *)(v1 + 64) = v10;
  *(_QWORD *)(v1 + 80) = v3;
  return result;
}

void sub_22A9FC90C()
{
  type metadata accessor for BoostedTreeClassifier();
}

void sub_22A9FC978(uint64_t a1)
{
  uint64_t v1;

  BoostedTreeClassifier.configuration.setter((uint64_t)&v1, a1);
}

__n128 BoostedTreeClassifier.configuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  v3 = *(_BYTE *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = v2 + *(int *)(a2 + 68);
  *(_QWORD *)v5 = *(_QWORD *)a1;
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(a1 + 40);
  *(_BYTE *)(v5 + 56) = v3;
  result = *(__n128 *)(a1 + 64);
  *(__n128 *)(v5 + 64) = result;
  *(_QWORD *)(v5 + 80) = v4;
  return result;
}

void (*BoostedTreeClassifier.configuration.modify(_QWORD *a1, uint64_t a2))(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = malloc(0x68uLL);
  *a1 = v5;
  v5[11] = a2;
  v5[12] = v2;
  BoostedTreeClassifier.configuration.getter(a2, (uint64_t)v5);
  return sub_22A9FCA2C;
}

void sub_22A9FCA2C(_QWORD **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[7];
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *a1;
  v3 = (*a1)[1];
  v2 = (*a1)[2];
  v5 = (*a1)[3];
  v4 = (*a1)[4];
  v7 = (*a1)[5];
  v6 = (*a1)[6];
  v8 = *((_BYTE *)*a1 + 56);
  v10 = (*a1)[8];
  v9 = (*a1)[9];
  v11 = (*a1)[11];
  v12 = (*a1)[10];
  v13[0] = **a1;
  v13[1] = v3;
  v13[2] = v2;
  v13[3] = v5;
  v13[4] = v4;
  v13[5] = v7;
  v13[6] = v6;
  v14 = v8;
  v15 = v10;
  v16 = v9;
  v17 = v12;
  BoostedTreeClassifier.configuration.setter((uint64_t)v13, v11);
  free(v1);
}

uint64_t BoostedTreeClassifier.annotationColumnID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_37_9();
  return OUTLINED_FUNCTION_81(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t BoostedTreeClassifier.annotationColumnID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_37_9();
  return OUTLINED_FUNCTION_81(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*BoostedTreeClassifier.annotationColumnID.modify())()
{
  return nullsub_1;
}

uint64_t BoostedTreeClassifier.featureColumnNames.getter()
{
  return OUTLINED_FUNCTION_21_19();
}

void BoostedTreeClassifier.featureColumnNames.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 60);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  OUTLINED_FUNCTION_21();
}

uint64_t (*BoostedTreeClassifier.featureColumnNames.modify())()
{
  return nullsub_1;
}

uint64_t BoostedTreeClassifier.labels.getter()
{
  return OUTLINED_FUNCTION_21_19();
}

void BoostedTreeClassifier.labels.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  OUTLINED_FUNCTION_21();
}

uint64_t (*BoostedTreeClassifier.labels.modify())()
{
  return nullsub_1;
}

void BoostedTreeClassifier.init(labels:annotationColumnName:featureColumnNames:configuration:)()
{
  type metadata accessor for BoostedTreeClassifier();
}

uint64_t sub_22A9FCC24(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  *(_QWORD *)(v3 + a1[15]) = v1;
  result = sub_22ABDD3D0();
  *(_QWORD *)(v3 + a1[16]) = v17;
  v14 = v3 + a1[17];
  *(_QWORD *)v14 = v7;
  *(_QWORD *)(v14 + 8) = v4;
  *(_QWORD *)(v14 + 16) = v5;
  *(_QWORD *)(v14 + 24) = v8;
  *(_QWORD *)(v14 + 32) = v9;
  *(_QWORD *)(v14 + 40) = v6;
  *(_QWORD *)(v14 + 48) = v2;
  *(_BYTE *)(v14 + 56) = v16;
  *(_QWORD *)(v14 + 64) = v10;
  *(_QWORD *)(v14 + 72) = v11;
  *(_QWORD *)(v14 + 80) = v15;
  return result;
}

void type metadata accessor for BoostedTreeClassifier()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t BoostedTreeClassifier.fitted(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;

  v7[11] = a6;
  v7[12] = v6;
  v7[9] = a4;
  v7[10] = a5;
  v7[7] = a2;
  v7[8] = a3;
  v7[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0ECF8);
  v7[13] = OUTLINED_FUNCTION_0_0();
  v9 = sub_22ABDD2EC();
  v7[14] = v9;
  v7[15] = *(_QWORD *)(v9 - 8);
  v7[16] = OUTLINED_FUNCTION_0_0();
  v7[17] = *(_QWORD *)(a6 + 16);
  v10 = sub_22ABDD3A0();
  v7[18] = v10;
  v7[19] = *(_QWORD *)(v10 - 8);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  return swift_task_switch();
}

void sub_22A9FCD74()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = v0;
  v2 = v0[17];
  v3 = v0[11];
  v0[2] = *(_QWORD *)(v0[12] + *(int *)(v3 + 64));
  v4 = (uint64_t)(v0 + 2);
  v5 = sub_22ABDF5D8();
  v6 = *(_QWORD *)(v3 + 48);
  v1[3] = v6;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE4AB0], v5, v1 + 3);
  v7 = sub_22ABDF2D8();
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(_QWORD *)(v3 + 32);
  v10 = *(_QWORD *)(v3 + 40);
  v11 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE1728], v7);
  v12 = sub_22A9FD71C(v4, v2, v7, v8, v9, v10, v6, v11);
  v14 = v13;
  sub_22ABDD2F8();
  v15 = (_QWORD *)swift_task_alloc();
  v15[2] = v2;
  v15[3] = v8;
  v15[4] = v9;
  v15[5] = v10;
  v15[6] = v6;
  v15[7] = v12;
  v15[8] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22A9FCEB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  __int128 v77;
  _QWORD *v78;
  void (*v79)(uint64_t *);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  __int128 v129;
  _QWORD *v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  _BYTE v138[24];
  uint64_t v139;

  sub_22AA726CC((void (*)(char *, uint64_t))sub_22A9FD8F4, v3, v1, MEMORY[0x24BEE1768], v4, a1, MEMORY[0x24BEE3F20], v128);
  v7 = *(_QWORD *)(v2 + 128);
  v120 = v4;
  v121 = a1;
  v8 = v2;
  v9 = v130[11];
  v10 = v130[12];
  v11 = v130[7];
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  v12(v130[21], v130[18]);
  swift_task_dealloc();
  v13 = *(_QWORD *)(v10 + *(int *)(v9 + 60));
  v14 = swift_task_alloc();
  *(_QWORD *)(v14 + 16) = v11;
  sub_22ABDEAEC();
  v17 = sub_22A9FC144(sub_22AA00204, v14, v13);
  v115 = v12;
  OUTLINED_FUNCTION_23();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_17();
  sub_22AAEADEC(v18, v19, v20, v21);
  v22 = v17;
  v23 = v135;
  v24 = v136;
  if ((_QWORD)v135)
  {
    v25 = BYTE8(v135);
    OUTLINED_FUNCTION_22_17();
    sub_22AB7AF88(v26, v27, v28, v29);
    v110 = v134;
    v112 = v22;
    v32 = v130[13];
    v33 = v130[14];
    sub_22A9BCAEC(v130[8], v32);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v32, 1, v33);
    if (EnumTagSinglePayload == 1)
    {
      v35 = v130[12];
      v36 = v130[11];
      sub_22A9BCB34(v130[13]);
      v37 = v35 + *(int *)(v36 + 68);
      v38 = *(_BYTE *)(v37 + 56);
      v39 = *(_QWORD *)(v37 + 80);
      v134 = *(_QWORD *)v37;
      v40 = *(_OWORD *)(v37 + 24);
      v135 = *(_OWORD *)(v37 + 8);
      v136 = v40;
      v137 = *(_OWORD *)(v37 + 40);
      v138[0] = v38;
      *(_OWORD *)&v138[8] = *(_OWORD *)(v37 + 64);
      v139 = v39;
      *(_QWORD *)(v5 - 128) = v110;
      *(_QWORD *)(v5 - 120) = v23;
      *(_BYTE *)(v5 - 112) = v25;
      *(_QWORD *)(v5 - 104) = v24;
      v41 = v126;
      OUTLINED_FUNCTION_44_8();
      BaseTreeClassifier.fitted(features:annotations:classCount:eventHandler:)(v42, v43, v44);
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_13_2();
      v49 = *(_OWORD *)(v5 - 160);
      v51 = *(_QWORD *)(v5 - 144);
      v50 = *(_QWORD *)(v5 - 136);
      v52 = v112;
      v53 = v123;
    }
    else
    {
      v45 = v130[17];
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v130[15] + 32))(v130[16], v130[13], v130[14]);
      OUTLINED_FUNCTION_22_17();
      sub_22AB7AF88(v46, v47, v48, v45);
      HIDWORD(v103) = BYTE8(v135);
      v62 = v130[20];
      v105 = v130[11];
      v108 = v130[18];
      sub_22ABDD2F8();
      sub_22A9FDBC8(v62, v126, v123, v105, v108);
      OUTLINED_FUNCTION_22_17();
      sub_22AAEADEC(v63, v64, v65, v66);
      v67 = v135;
      v68 = v136;
      v106 = v130[20];
      v69 = v130[18];
      v70 = v8 + 16;
      v71 = v134;
      v72 = BYTE8(v135);
      v73 = v130[17];
      v74 = v130[12] + *(int *)(v130[11] + 68);
      v75 = *(_BYTE *)(v74 + 56);
      v76 = *(_QWORD *)(v74 + 80);
      v134 = *(_QWORD *)v74;
      v77 = *(_OWORD *)(v74 + 24);
      v135 = *(_OWORD *)(v74 + 8);
      v136 = v77;
      v137 = *(_OWORD *)(v74 + 40);
      v138[0] = v75;
      *(_OWORD *)&v138[8] = *(_OWORD *)(v74 + 64);
      v139 = v76;
      *(_QWORD *)(v5 - 160) = v110;
      *(_QWORD *)(v5 - 152) = v23;
      *(_BYTE *)(v5 - 144) = BYTE4(v103);
      *(_QWORD *)(v5 - 136) = v24;
      *(_QWORD *)(v5 - 128) = v71;
      *(_QWORD *)(v5 - 120) = v67;
      *(_BYTE *)(v5 - 112) = v72;
      *(_QWORD *)(v5 - 104) = v68;
      v78 = (_QWORD *)swift_task_alloc();
      v78[2] = v73;
      v78[3] = v118;
      v78[4] = v117;
      v78[5] = v119;
      v78[6] = v125;
      v78[7] = v126;
      v53 = v123;
      v78[8] = v123;
      sub_22AA726CC((void (*)(char *, uint64_t))sub_22A9FDF84, (uint64_t)v78, v69, MEMORY[0x24BEE1768], v120, v121, MEMORY[0x24BEE3F20], v70);
      v79 = (void (*)(uint64_t *))v130[9];
      swift_task_dealloc();
      OUTLINED_FUNCTION_44_8();
      BaseTreeClassifier.fitted(trainingFeatures:trainingAnnotations:validationFeatures:validationAnnotations:classCount:eventHandler:)(v80, v81, v82, v83, v84, v79);
      v85 = v130[20];
      v122 = v130[16];
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_23();
      v93 = OUTLINED_FUNCTION_10_18(v85, v86, v87, v88, v89, v90, v91, v92, v101, v103, v106, 0, v110, v112, v115);
      OUTLINED_FUNCTION_36_6(v93, v94, v95, v96, v97, v98, v99, v100, v102, v104, v107, v109, v111, v113, v116, v117, v118, v119, v68,
        v122);
      swift_release();
      OUTLINED_FUNCTION_81_1();
      v49 = v131;
      v51 = v132;
      v50 = v133;
      v41 = v126;
      v52 = v114;
    }
    *(_OWORD *)(v5 - 128) = v49;
    *(_QWORD *)(v5 - 112) = v51;
    *(_QWORD *)(v5 - 104) = v50;
    OUTLINED_FUNCTION_111();
    swift_retain();
    v54 = sub_22ABDD3B8();
    sub_22AB510A0(v5 - 128, v52, v54, v55, v41, v53, (uint64_t)&v134);
    v56 = v136;
    v57 = v137;
    v124 = v134;
    v127 = *(_OWORD *)v138;
    v129 = v135;
    if ((sub_22AA2F904() & 1) == 0)
    {
      type metadata accessor for TreeClassifierModel(0, v130[17], v125, v58);
      v59 = TreeClassifierModel.debugDescription.getter();
      sub_22AA2F98C(v59, v60);
      swift_bridgeObjectRelease();
    }
    v61 = v130[6];
    swift_release();
    *(_QWORD *)v61 = v124;
    *(_OWORD *)(v61 + 8) = v129;
    *(_OWORD *)(v61 + 24) = v56;
    *(_OWORD *)(v61 + 40) = v57;
    *(_OWORD *)(v61 + 56) = v127;
    OUTLINED_FUNCTION_28_0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v15 = (uint64_t (*)(void))v130[1];
  }
  else
  {
    OUTLINED_FUNCTION_6_30();
    OUTLINED_FUNCTION_5_22();
    OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_81_1();
    sub_22A9B7B50();
    v30 = OUTLINED_FUNCTION_53();
    *v31 = 0xD000000000000015;
    v31[1] = 0x800000022ABEDB50;
    OUTLINED_FUNCTION_13_25(v30, (uint64_t)v31, 0xD000000000000052);
    swift_task_dealloc();
    OUTLINED_FUNCTION_28_0();
    swift_task_dealloc();
    swift_task_dealloc();
    v15 = (uint64_t (*)(void))v130[1];
  }
  return v15();
}

uint64_t sub_22A9FD71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[10];

  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a4;
  v16[5] = a5;
  v16[6] = a6;
  v16[7] = a7;
  v16[8] = a8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FD90);
  sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA0018C, (uint64_t)v16, a3, v10, MEMORY[0x24BEE4078], a8, MEMORY[0x24BEE40A8], v11);
  v12 = sub_22ABDEAEC();
  sub_22A9DC6D8(v12);
  v14 = sub_22A9FC7AC(v13);
  OUTLINED_FUNCTION_23();
  return v14;
}

uint64_t sub_22A9FD7C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  v7 = sub_22ABDF5D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - v9;
  result = sub_22A9FD910();
  if (!v3)
  {
    if ((v12 & 1) == 0)
    {
      *a2 = result;
      return result;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
    v13 = sub_22ABDED80();
    v15 = v14;
    sub_22A9B7B50();
    v4 = swift_allocError();
    *(_QWORD *)v16 = 0xD000000000000015;
    *(_QWORD *)(v16 + 8) = 0x800000022ABEDB50;
    *(_QWORD *)(v16 + 16) = v13;
    *(_QWORD *)(v16 + 24) = v15;
    *(_BYTE *)(v16 + 32) = 3;
    result = swift_willThrow(v4);
  }
  *a3 = v4;
  return result;
}

uint64_t sub_22A9FD8F4(uint64_t a1, uint64_t a2)
{
  return sub_22A9FDFA0(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_22A9FD7C4);
}

uint64_t sub_22A9FD910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int EnumTagSinglePayload;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_12();
  v32 = v1;
  v33 = v2;
  v31 = v0;
  v4 = v3;
  v30 = v5;
  v6 = sub_22ABDF5D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_23_8();
  v10 = v8 - v9;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - v13;
  v15 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_23_8();
  v18 = v16 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v29 - v20;
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_46_7((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v14, v4);
      swift_dynamicCast();
    }
    v23 = v30;
  }
  else
  {
    if (!swift_dynamicCastMetatype())
    {
      sub_22A9B7B50();
      v27 = OUTLINED_FUNCTION_53();
      *(_QWORD *)v28 = 0xD000000000000015;
      *(_QWORD *)(v28 + 8) = 0x800000022ABEDB50;
      *(_QWORD *)(v28 + 16) = 0xD000000000000024;
      *(_QWORD *)(v28 + 24) = 0x800000022ABE2800;
      *(_BYTE *)(v28 + 32) = 4;
      swift_willThrow(v27);
      return v15;
    }
    OUTLINED_FUNCTION_46_7(v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v10, 1, v4);
    v23 = v30;
    if (EnumTagSinglePayload == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v18, v10, v4);
      swift_dynamicCast();
      sub_22ABDFD7C();
    }
  }
  if (*(_QWORD *)(v23 + 16) && (v24 = sub_22AA0371C(), (v25 & 1) != 0))
    v15 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
  else
    v15 = 0;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_22A9FDBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  void (**v20)(char *, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (**v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v38 = a1;
  v34 = *(_QWORD *)(a4 + 16);
  v35 = a3;
  v7 = sub_22ABDF5D8();
  v31 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v30 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - v10;
  v12 = sub_22ABDF5D8();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v30 - v14;
  v33 = *(void (***)(char *, uint64_t, uint64_t))(a5 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v20 = (void (**)(char *, uint64_t, uint64_t))((char *)&v30 - v19);
  v33[2](v17, v38, a5);
  sub_22ABDEE58();
  swift_getAssociatedConformanceWitness();
  v33 = v20;
  v38 = AssociatedTypeWitness;
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v7) == 1)
  {
    v21 = (char *)v33;
  }
  else
  {
    v22 = v31;
    v23 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v21 = (char *)v33;
    while (1)
    {
      v23(v11, v15, v7);
      sub_22A9FD910();
      if (v5)
        break;
      if ((v24 & 1) != 0)
      {
        v36 = 0;
        v37 = 0xE000000000000000;
        sub_22ABDF7A0();
        sub_22ABDEDC8();
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v30, v11, v7);
        sub_22ABDED80();
        sub_22ABDEDC8();
        swift_bridgeObjectRelease();
        sub_22ABDEDC8();
        v25 = v36;
        v26 = v37;
        sub_22A9B7B50();
        v27 = swift_allocError();
        *(_QWORD *)v28 = 0xD000000000000015;
        *(_QWORD *)(v28 + 8) = 0x800000022ABEDB50;
        *(_QWORD *)(v28 + 16) = v25;
        *(_QWORD *)(v28 + 24) = v26;
        *(_BYTE *)(v28 + 32) = 5;
        swift_willThrow(v27);
        break;
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v7);
      sub_22ABDF650();
      if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v7) == 1)
        return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v21, v38);
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v21, v38);
}

uint64_t sub_22A9FDF44@<X0>(uint64_t *a1@<X8>, _QWORD *a2)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_22A9FD910();
  if (v2)
  {
    *a2 = v2;
  }
  else if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
  }
  return result;
}

uint64_t sub_22A9FDF84(uint64_t a1, uint64_t a2)
{
  return sub_22A9FDFA0(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_22A9FDF44);
}

uint64_t sub_22A9FDFA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[7], v3[8], v3[2], v3[3], v3[4], v3[5], v3[6], a2);
}

uint64_t BoostedTreeClassifier.encodeLabels<A>(_:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = a2[2];
  v6 = a2[3];
  v8 = a2[4];
  v7 = a2[5];
  v9 = a2[6];
  v16 = v5;
  v17 = a3;
  v18 = v6;
  v19 = v8;
  v20 = v7;
  v21 = v9;
  v10 = sub_22A9FD71C(a1, v5, a3, v6, v8, v7, v9, a4);
  v22 = a4;
  v23 = v10;
  v24 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  sub_22AA726CC((void (*)(char *, uint64_t))sub_22A9FE230, (uint64_t)v15, v17, MEMORY[0x24BEE1768], v12, a4, MEMORY[0x24BEE3F20], (uint64_t)&v25);
  swift_bridgeObjectRelease();
  if (!v14)
    v7 = sub_22A9FC4EC(v10);
  OUTLINED_FUNCTION_23();
  return v7;
}

uint64_t sub_22A9FE100@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = v5;
  v9 = sub_22ABDF5D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - v11;
  result = sub_22A9FD910();
  if (!v5)
  {
    if ((v14 & 1) == 0)
    {
      *a2 = result;
      return result;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
    v15 = sub_22ABDED80();
    v17 = v16;
    sub_22A9B7B50();
    v6 = swift_allocError();
    *(_QWORD *)v18 = 0xD000000000000015;
    *(_QWORD *)(v18 + 8) = 0x800000022ABEDB50;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_BYTE *)(v18 + 32) = 3;
    result = swift_willThrow(v6);
  }
  *a5 = v6;
  return result;
}

uint64_t sub_22A9FE230@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_22A9FE100(a1, a3, *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), a2);
}

void BoostedTreeClassifier.encode(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22A9FF0C8(a1, a2, a3, a4);
}

void BoostedTreeClassifier.decode(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 48);
  sub_22AB513D4(a1, v7, v8, &v35);
  if (!v4)
  {
    v9 = v40;
    if (v40)
    {
      v31 = v35;
      v32 = v36;
      v29 = v39;
      v30 = v38;
      v10 = v42;
      v33 = v43;
      v34 = v37;
      v11 = (uint64_t *)(v3 + *(int *)(a2 + 68));
      v12 = *v11;
      v13 = v11[1];
      v27 = v11[2];
      v28 = v41;
      v14 = v11[3];
      v15 = v11[4];
      v25 = v11[6];
      v26 = v11[5];
      v24 = *((_BYTE *)v11 + 56);
      v16 = v11[8];
      v17 = v11[9];
      v23 = v11[10];
      v18 = *(_QWORD *)(v42 + 16);
      v19 = swift_retain();
      sub_22A9DCE14(v19, v18);
      swift_release();
      v35 = v12;
      v36 = v13;
      v37 = v27;
      v38 = v14;
      v39 = v15;
      v40 = v26;
      v41 = v25;
      LOBYTE(v42) = v24;
      v43 = v16;
      v44 = v17;
      v45 = v23;
      type metadata accessor for TreeClassifierModel(0, v7, v8, v20);
      v21 = sub_22AB51914();
      v22 = swift_retain();
      sub_22A9DCF48(v22, v18, v21, 0);
      swift_release();
      *a3 = v31;
      a3[1] = v32;
      a3[2] = v34;
      a3[3] = v30;
      a3[4] = v29;
      a3[5] = v9;
      a3[6] = v28;
      a3[7] = v10;
      a3[8] = v33;
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_22A9FE4B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[4];

  v6 = sub_22ABDF5D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)v17 - v11, a1, v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, a2) == 1)
  {
    *a3 = 0;
    a3[1] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  v13(v10, (uint64_t)v12, v6);
  if (swift_dynamicCast())
  {
    v14 = v17[1];
    *a3 = v17[0];
    a3[1] = v14;
LABEL_7:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v10, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (swift_dynamicCast())
  {
    v17[3] = v17[0];
    *a3 = sub_22ABDFD7C();
    a3[1] = v15;
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v10, a2);
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

void (*sub_22A9FE6A8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BoostedTreeClassifier.annotationColumnID.modify();
  return sub_22A9B4798;
}

uint64_t sub_22A9FE6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_22A99DE80;
  return BoostedTreeClassifier.fitted(to:validateOn:eventHandler:)(a1, a2, a3, a4, a5, a6);
}

void sub_22A9FE77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BoostedTreeClassifier.encodeWithOptimizer(_:to:)(a1, a2, a3, a4);
}

void sub_22A9FE790(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BoostedTreeClassifier.decode(from:)(a1, a2, a3);
}

void BoostedTreeClassifier.makeTransformer()()
{
  OUTLINED_FUNCTION_111();
  sub_22ABDD3B8();
  sub_22ABDF5D8();
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9FE81C()
{
  sub_22ABDF2D8();
  OUTLINED_FUNCTION_52_3();
}

void sub_22A9FE844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = sub_22A9FD71C((uint64_t)&v12, v1, v2, v8, v9, v6, v7, a1);
  sub_22AB510A0((uint64_t)&v13, MEMORY[0x24BEE4AF8], v5, v4, v10, v11, v3);
}

uint64_t BoostedTreeClassifier.update(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = *(_QWORD *)(a5 + 16);
  v7 = sub_22ABDD3A0();
  v6[10] = v7;
  v6[11] = *(_QWORD *)(v7 - 8);
  v6[12] = OUTLINED_FUNCTION_0_0();
  return swift_task_switch();
}

uint64_t sub_22A9FE918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  BOOL v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(__int128 *);
  char v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  _BYTE v51[24];
  __int128 v52;
  __int128 v53;
  char v54;
  __int128 v55;
  uint64_t v56;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 24);
  sub_22ABDD2F8();
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(v3 + 24);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v5 + 56) = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  v7 = MEMORY[0x22E2E4D80](MEMORY[0x24BDF5FA0], v1);
  v8 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22A9FEDD8, v5, v1, MEMORY[0x24BEE1768], v6, v7, MEMORY[0x24BEE3F20], v0 + 16);
  v9 = *(_QWORD **)(v0 + 24);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 88));
  swift_task_dealloc();
  if (v9[5])
  {
LABEL_2:
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_22_17();
    sub_22AAEADEC(v10, v11, v12, v13);
    v32 = (__int128 *)(v9 + 3);
    v34 = *(_QWORD *)(v0 + 56);
    v33 = *(_QWORD *)(v0 + 64);
    v35 = *(void (**)(__int128 *))(v0 + 40);
    swift_bridgeObjectRelease();
    v36 = v51[16];
    v37 = v52;
    v38 = *(_OWORD *)v51;
    v39 = v33 + *(int *)(v34 + 68);
    v40 = *(_BYTE *)(v39 + 56);
    v41 = *(_QWORD *)(v39 + 80);
    *(_QWORD *)v51 = *(_QWORD *)v39;
    *(_OWORD *)&v51[8] = *(_OWORD *)(v39 + 8);
    v52 = *(_OWORD *)(v39 + 24);
    v53 = *(_OWORD *)(v39 + 40);
    v54 = v40;
    v55 = *(_OWORD *)(v39 + 64);
    v56 = v41;
    v48 = v38;
    v49 = v36;
    v50 = v37;
    BaseTreeClassifier.update(_:features:annotations:eventHandler:)(v32, (uint64_t *)&v48, v8, v35);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_28_0();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = sub_22A9FEDFC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56));
  v16 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 16) = v14;
  v18 = (uint64_t *)(v15 + *(int *)(v16 + 68));
  v19 = *v18;
  v20 = *(_OWORD *)(v18 + 1);
  v21 = *(_OWORD *)(v18 + 3);
  v22 = *(_OWORD *)(v18 + 5);
  v23 = *((_BYTE *)v18 + 56);
  v24 = *((_OWORD *)v18 + 4);
  v25 = v18[10];
  v26 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 16);
  v27 = *(_QWORD *)(v14 + 16);
  if (!v27)
  {
    v28 = 0;
LABEL_11:
    v44 = v24;
    v45 = v22;
    v46 = v21;
    v47 = v20;
    type metadata accessor for XGBooster();
    swift_allocObject();
    v42 = sub_22AB7C374(0, 0);
    *(_QWORD *)v51 = v19;
    *(_OWORD *)&v51[8] = v47;
    v52 = v46;
    v53 = v45;
    v54 = v23;
    v55 = v44;
    v56 = v25;
    sub_22A9DCF48(v42, v26, v28, 0);
    v9[3] = v26;
    v9[4] = v28;
    v9[5] = v42;
    v9[6] = 0;
    goto LABEL_2;
  }
  v28 = 0;
  v29 = (unsigned __int8 *)(v14 + 56);
  while (1)
  {
    v30 = *((_QWORD *)v29 - 1);
    if (*v29 >= 4u)
      v30 = 1;
    v31 = __OFADD__(v28, v30);
    v28 += v30;
    if (v31)
      break;
    v29 += 32;
    if (!--v27)
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_22A9FEC68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X7>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;

  v20 = a2;
  v4 = v3;
  v19 = a3;
  v6 = sub_22ABDF5D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - v8;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v10 = sub_22A9FD910();
  v12 = v11;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    if ((v12 & 1) == 0)
    {
      *v19 = v10;
      return result;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    v14 = sub_22ABDED80();
    v16 = v15;
    sub_22A9B7B50();
    v4 = swift_allocError();
    *(_QWORD *)v17 = 0xD000000000000015;
    *(_QWORD *)(v17 + 8) = 0x800000022ABEDB50;
    *(_QWORD *)(v17 + 16) = v14;
    *(_QWORD *)(v17 + 24) = v16;
    *(_BYTE *)(v17 + 32) = 3;
    result = swift_willThrow(v4);
  }
  *v20 = v4;
  return result;
}

uint64_t sub_22A9FEDD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_22A9FEC68(a1, a2, a3);
}

uint64_t sub_22A9FEDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  v3 = *(_QWORD *)(v2 + *(int *)(a2 + 60));
  v6[2] = a1;
  sub_22ABDEAEC();
  v4 = sub_22A9FC144(sub_22AA00170, (uint64_t)v6, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22A9FEE64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t *v12;

  OUTLINED_FUNCTION_12();
  v12 = v0;
  v2 = v1;
  v3 = sub_22ABDD400();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_23_8();
  MEMORY[0x24BDAC7A8](v4);
  v6 = *v2;
  v5 = v2[1];
  sub_22ABDD250();
  if ((v7 & 1) == 0)
    OUTLINED_FUNCTION_41_5();
  sub_22A9FA7DC();
  v8 = OUTLINED_FUNCTION_53();
  *(_QWORD *)v9 = 0xD000000000000015;
  *(_QWORD *)(v9 + 8) = 0x800000022ABEDB50;
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v5;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_BYTE *)(v9 + 64) = 0;
  v10 = sub_22ABDEAEC();
  result = swift_willThrow(v10);
  *v12 = v8;
  return result;
}

void sub_22A9FF018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_22ABDD3E8();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 120) + 8))(v0, *(_QWORD *)(v3 - 112));
  sub_22ABE0304();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_23();
  sub_22ABDEDC8();
  sub_22ABDEDC8();
  v4 = *(_QWORD *)(v3 - 96);
  v5 = *(_QWORD *)(v3 - 88);
  sub_22A9B7B50();
  OUTLINED_FUNCTION_53();
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = v2 | 0x8000000000000000;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 32) = 4;
  JUMPOUT(0x22A9FEF94);
}

void BoostedTreeClassifier.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_22A9FF0C8(a1, a2, a3, a4);
}

void sub_22A9FF0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for TreeClassifierModel(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 48), a4);
  sub_22AB510D8(a2, v5);
}

void BoostedTreeClassifier.decodeWithOptimizer(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_22AB513D4(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 48), a3);
}

uint64_t sub_22A9FF160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A99E4B4;
  return BoostedTreeClassifier.update(_:with:eventHandler:)(a1, a2, a3, a4, a5);
}

void sub_22A9FF1DC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BoostedTreeClassifier.decodeWithOptimizer(from:)(a1, a2, a3);
}

_UNKNOWN **sub_22A9FF1F0()
{
  return &protocol witness table for TreeClassifierModel<A>;
}

uint64_t sub_22A9FF1FC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for BoostedTreeClassifier<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22A9FF230()
{
  return 40;
}

__n128 sub_22A9FF23C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_22A9FF250()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD3C4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22A9FF2D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD3C4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[16];
    *(uint64_t *)((char *)a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    memcpy((char *)a1 + a3[17], (char *)a2 + a3[17], 0x58uLL);
    sub_22ABDEAEC();
    sub_22ABDEAEC();
  }
  return a1;
}

uint64_t sub_22A9FF394(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22A9FF3E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  memcpy((void *)(a1 + a3[17]), (const void *)(a2 + a3[17]), 0x58uLL);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22A9FF47C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v7 = a3[17];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  v10 = *(_QWORD *)(v9 + 48);
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_QWORD *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  return a1;
}

uint64_t sub_22A9FF56C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  memcpy((void *)(a1 + a3[17]), (const void *)(a2 + a3[17]), 0x58uLL);
  return a1;
}

uint64_t sub_22A9FF5E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD3C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  v7 = a3[17];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  v10 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v10;
  *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  return a1;
}

uint64_t sub_22A9FF6A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22A9FF6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_37_9();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 60));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_22A9FF72C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22A9FF738(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_37_9();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 60)) = (a2 - 1);
    OUTLINED_FUNCTION_21();
  }
}

void sub_22A9FF7A4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_22AB88488();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_22A9FF80C(v5);
  *a1 = v2;
}

void sub_22A9FF80C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  __int128 v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;

  v3 = a1[1];
  v4 = sub_22ABDFD70();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_22A9FFEDC(0, v3, 1, a1);
      return;
    }
    goto LABEL_156;
  }
  v5 = v4;
  sub_22AA035FC(v3 / 2);
  v103 = v6;
  v104 = v3;
  v106 = v7;
  v101 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v40 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_122:
    if (v40 < 2)
    {
LABEL_133:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v103 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_161;
    }
    v93 = *v101;
    while (1)
    {
      v94 = v40 - 2;
      if (v40 < 2)
        break;
      if (!v93)
        goto LABEL_165;
      v95 = *(_QWORD *)&v10[16 * v94 + 32];
      v96 = *(_QWORD *)&v10[16 * v40 + 24];
      sub_22A9FFFA8((char *)(v93 + 16 * v95), (char *)(v93 + 16 * *(_QWORD *)&v10[16 * v40 + 16]), v93 + 16 * v96, v106);
      if (v1)
        goto LABEL_118;
      if (v96 < v95)
        goto LABEL_151;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_22AA71F6C((uint64_t)v10);
      if (v94 >= *((_QWORD *)v10 + 2))
        goto LABEL_152;
      v97 = &v10[16 * v94 + 32];
      *(_QWORD *)v97 = v95;
      *((_QWORD *)v97 + 1) = v96;
      v98 = *((_QWORD *)v10 + 2);
      if (v40 > v98)
        goto LABEL_153;
      memmove(&v10[16 * v40 + 16], &v10[16 * v40 + 32], 16 * (v98 - v40));
      *((_QWORD *)v10 + 2) = v98 - 1;
      v40 = v98 - 1;
      v3 = v104;
      if (v98 <= 2)
        goto LABEL_133;
    }
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  v102 = v5;
  v8 = 0;
  v9 = *a1;
  v99 = v9 - 16;
  v100 = v9 + 8;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  while (2)
  {
    v11 = v8++;
    if (v8 >= v3)
      goto LABEL_41;
    v12 = (_QWORD *)(v9 + 16 * v8);
    v13 = v12[1];
    if (!v13)
      goto LABEL_13;
    v14 = (_QWORD *)(v9 + 16 * v11);
    v15 = v14[1];
    if (!v15)
    {
      v18 = v11 + 2;
      if (v11 + 2 >= v3)
      {
LABEL_34:
        if (v11 < v18)
        {
          v24 = (__int128 *)(v99 + 16 * v18);
          v25 = v18;
          v26 = v11;
          v27 = (__int128 *)(v9 + 16 * v11);
          do
          {
            if (v26 != --v25)
            {
              if (!v9)
                goto LABEL_164;
              v28 = *v27;
              *v27 = *v24;
              *v24 = v28;
            }
            ++v26;
            --v24;
            ++v27;
          }
          while (v26 < v25);
        }
LABEL_40:
        v8 = v18;
        goto LABEL_41;
      }
      v17 = 1;
      goto LABEL_17;
    }
    if (*v12 == *v14 && v13 == v15)
    {
LABEL_13:
      v18 = v11 + 2;
      if (v11 + 2 >= v3)
        goto LABEL_40;
      v17 = 0;
    }
    else
    {
      v17 = sub_22ABDFF68();
      v18 = v11 + 2;
      if (v11 + 2 >= v3)
        goto LABEL_32;
    }
LABEL_17:
    v19 = (_QWORD *)(v100 + 16 * v18);
    v20 = v18;
    do
    {
      v18 = v20;
      if (!*v19)
        goto LABEL_26;
      v21 = (_QWORD *)(v9 + 16 * v8);
      v22 = v21[1];
      if (v22)
      {
        if (*(v19 - 1) != *v21 || *v19 != v22)
        {
          if (((v17 ^ sub_22ABDFF68()) & 1) != 0)
            goto LABEL_31;
          goto LABEL_29;
        }
LABEL_26:
        if ((v17 & 1) != 0)
        {
          v3 = v104;
          goto LABEL_33;
        }
        goto LABEL_29;
      }
      if ((v17 & 1) == 0)
      {
        v8 = v18;
        v3 = v104;
        goto LABEL_41;
      }
LABEL_29:
      v19 += 2;
      v20 = v18 + 1;
      v8 = v18;
    }
    while (v18 + 1 < v104);
    ++v18;
LABEL_31:
    v3 = v104;
LABEL_32:
    v8 = v18;
    if ((v17 & 1) != 0)
    {
LABEL_33:
      if (v18 >= v11)
        goto LABEL_34;
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
      return;
    }
LABEL_41:
    if (v8 < v3)
    {
      if (!__OFSUB__(v8, v11))
      {
        if (v8 - v11 >= v102)
          goto LABEL_63;
        if (!__OFADD__(v11, v102))
        {
          if (v11 + v102 >= v3)
            v29 = v3;
          else
            v29 = v11 + v102;
          if (v29 >= v11)
          {
            if (v8 != v29)
            {
              v30 = (_QWORD *)(v9 + 16 * v8);
              do
              {
                v31 = (uint64_t *)(v9 + 16 * v8);
                v32 = *v31;
                v33 = v31[1];
                v34 = v11;
                v35 = v30;
                do
                {
                  if (!v33)
                    break;
                  v36 = *(v35 - 1);
                  if (v36)
                  {
                    v37 = v32 == *(v35 - 2) && v33 == v36;
                    if (v37 || (sub_22ABDFF68() & 1) == 0)
                      break;
                  }
                  if (!v9)
                    goto LABEL_162;
                  v32 = *v35;
                  v33 = v35[1];
                  *(_OWORD *)v35 = *((_OWORD *)v35 - 1);
                  *(v35 - 1) = v33;
                  *(v35 - 2) = v32;
                  v35 -= 2;
                  ++v34;
                }
                while (v8 != v34);
                ++v8;
                v30 += 2;
              }
              while (v8 != v29);
              v8 = v29;
            }
            goto LABEL_63;
          }
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
LABEL_158:
        __break(1u);
        goto LABEL_159;
      }
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
      goto LABEL_158;
    }
LABEL_63:
    if (v8 < v11)
      goto LABEL_154;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_22AA71E78(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v39 = *((_QWORD *)v10 + 2);
    v38 = *((_QWORD *)v10 + 3);
    v40 = v39 + 1;
    if (v39 >= v38 >> 1)
      v10 = sub_22AA71E78((char *)(v38 > 1), v39 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v40;
    v41 = v10 + 32;
    v42 = &v10[16 * v39 + 32];
    *(_QWORD *)v42 = v11;
    *((_QWORD *)v42 + 1) = v8;
    if (!v39)
    {
      v40 = 1;
LABEL_112:
      v3 = v104;
      if (v8 >= v104)
        goto LABEL_122;
      continue;
    }
    break;
  }
  v105 = v8;
  while (2)
  {
    v43 = v40 - 1;
    if (v40 >= 4)
    {
      v48 = &v41[16 * v40];
      v49 = *((_QWORD *)v48 - 8);
      v50 = *((_QWORD *)v48 - 7);
      v54 = __OFSUB__(v50, v49);
      v51 = v50 - v49;
      if (v54)
        goto LABEL_139;
      v53 = *((_QWORD *)v48 - 6);
      v52 = *((_QWORD *)v48 - 5);
      v54 = __OFSUB__(v52, v53);
      v46 = v52 - v53;
      v47 = v54;
      if (v54)
        goto LABEL_140;
      v55 = v40 - 2;
      v56 = &v41[16 * v40 - 32];
      v58 = *(_QWORD *)v56;
      v57 = *((_QWORD *)v56 + 1);
      v54 = __OFSUB__(v57, v58);
      v59 = v57 - v58;
      if (v54)
        goto LABEL_141;
      v54 = __OFADD__(v46, v59);
      v60 = v46 + v59;
      if (v54)
        goto LABEL_143;
      if (v60 >= v51)
      {
        v78 = &v41[16 * v43];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v54 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v54)
          goto LABEL_149;
        v71 = v46 < v81;
      }
      else
      {
LABEL_83:
        if ((v47 & 1) != 0)
          goto LABEL_142;
        v55 = v40 - 2;
        v61 = &v41[16 * v40 - 32];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v64 = __OFSUB__(v62, v63);
        v65 = v62 - v63;
        v66 = v64;
        if (v64)
          goto LABEL_144;
        v67 = &v41[16 * v43];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v54 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v54)
          goto LABEL_146;
        if (__OFADD__(v65, v70))
          goto LABEL_148;
        if (v65 + v70 < v46)
          goto LABEL_95;
        v71 = v46 < v70;
      }
      if (v71)
        v43 = v55;
    }
    else
    {
      if (v40 == 3)
      {
        v45 = *((_QWORD *)v10 + 4);
        v44 = *((_QWORD *)v10 + 5);
        v54 = __OFSUB__(v44, v45);
        v46 = v44 - v45;
        v47 = v54;
        goto LABEL_83;
      }
      v72 = *((_QWORD *)v10 + 4);
      v73 = *((_QWORD *)v10 + 5);
      v54 = __OFSUB__(v73, v72);
      v65 = v73 - v72;
      v66 = v54;
LABEL_95:
      if ((v66 & 1) != 0)
        goto LABEL_145;
      v74 = &v41[16 * v43];
      v76 = *(_QWORD *)v74;
      v75 = *((_QWORD *)v74 + 1);
      v54 = __OFSUB__(v75, v76);
      v77 = v75 - v76;
      if (v54)
        goto LABEL_147;
      if (v77 < v65)
        goto LABEL_112;
    }
    v82 = v43 - 1;
    if (v43 - 1 >= v40)
    {
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
      goto LABEL_150;
    }
    v83 = v9;
    if (!v9)
      goto LABEL_163;
    v84 = v10;
    v85 = &v41[16 * v82];
    v86 = *(_QWORD *)v85;
    v87 = v41;
    v88 = v43;
    v89 = &v41[16 * v43];
    v90 = *((_QWORD *)v89 + 1);
    v91 = v83;
    sub_22A9FFFA8((char *)(v83 + 16 * *(_QWORD *)v85), (char *)(v83 + 16 * *(_QWORD *)v89), v83 + 16 * v90, v106);
    if (!v1)
    {
      if (v90 < v86)
        goto LABEL_136;
      if (v88 > *((_QWORD *)v84 + 2))
        goto LABEL_137;
      *(_QWORD *)v85 = v86;
      *(_QWORD *)&v87[16 * v82 + 8] = v90;
      v92 = *((_QWORD *)v84 + 2);
      if (v88 >= v92)
        goto LABEL_138;
      v10 = v84;
      v40 = v92 - 1;
      memmove(v89, v89 + 16, 16 * (v92 - 1 - v88));
      v41 = v87;
      *((_QWORD *)v84 + 2) = v92 - 1;
      v9 = v91;
      v8 = v105;
      if (v92 <= 2)
        goto LABEL_112;
      continue;
    }
    break;
  }
LABEL_118:
  swift_bridgeObjectRelease();
  if (v104 < -1)
    goto LABEL_157;
  *(_QWORD *)(v103 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_22A9FFEDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        if (!v10)
          break;
        v13 = *(v12 - 1);
        if (v13)
        {
          if (result == *(v12 - 2) && v10 == v13)
            break;
          result = sub_22ABDFF68();
          if ((result & 1) == 0)
            break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_22A9FFFA8(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char *v17;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_22AA37B38(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_51;
    v20 = (char *)(a3 - 16);
    while (1)
    {
      v21 = v20 + 16;
      v22 = *(_QWORD *)(v12 - 8);
      v23 = (char *)(v12 - 16);
      if (!v22
        || (v24 = *((_QWORD *)v6 - 1)) != 0
        && (*(_QWORD *)(v12 - 16) == *((_QWORD *)v6 - 2) ? (v25 = v22 == v24) : (v25 = 0),
            v25 || (sub_22ABDFF68() & 1) == 0))
      {
        v27 = v21 != (char *)v12 || (unint64_t)v20 >= v12;
        v12 -= 16;
        if (!v27)
          goto LABEL_47;
      }
      else
      {
        v26 = v21 != v6 || v20 >= v6;
        v23 = v6 - 16;
        v6 -= 16;
        if (!v26)
          goto LABEL_47;
      }
      *(_OWORD *)v20 = *(_OWORD *)v23;
LABEL_47:
      v20 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_51;
    }
  }
  sub_22AA37B38(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *((_QWORD *)v6 + 1);
      if (v14)
      {
        v15 = *((_QWORD *)v4 + 1);
        if (!v15)
          break;
        v16 = *(_QWORD *)v6 == *(_QWORD *)v4 && v14 == v15;
        if (!v16 && (sub_22ABDFF68() & 1) != 0)
          break;
      }
      v17 = v4;
      v16 = v7 == v4;
      v4 += 16;
      if (!v16)
        goto LABEL_17;
LABEL_18:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_23;
    }
    v17 = v6;
    v16 = v7 == v6;
    v6 += 16;
    if (v16)
      goto LABEL_18;
LABEL_17:
    *(_OWORD *)v7 = *(_OWORD *)v17;
    goto LABEL_18;
  }
LABEL_23:
  v6 = v7;
LABEL_51:
  sub_22AA37B38(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

uint64_t sub_22AA00164(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_22AA00170()
{
  return sub_22A9FEE64();
}

uint64_t sub_22AA0018C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_22A9FE4B8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_22AA001C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22AA00204()
{
  return sub_22AA00170();
}

uint64_t OUTLINED_FUNCTION_3_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 16) = v4;
  return (*(uint64_t (**)(unint64_t, uint64_t, _QWORD))(v0 + 32))(v3+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(_QWORD *)(v0 + 72) * v1, v2, *(_QWORD *)(v5 - 112));
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_22()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_6_30()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  return a10();
}

uint64_t OUTLINED_FUNCTION_10_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t, uint64_t))
{
  uint64_t v15;

  return a15(a1, v15);
}

void OUTLINED_FUNCTION_11_28()
{
  sub_22AB4CE30();
}

uint64_t OUTLINED_FUNCTION_12_21()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_13_25@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)(a2 + 16) = a3;
  *(_QWORD *)(a2 + 24) = (v3 - 32) | 0x8000000000000000;
  *(_BYTE *)(a2 + 32) = 4;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_14_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 8 * v0 + 32) = v2;
  return v4;
}

uint64_t OUTLINED_FUNCTION_18_17()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21_19()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_27_14()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  return sub_22AA00164(v1, v2, v0);
}

void OUTLINED_FUNCTION_30_12()
{
  sub_22AB4CE30();
}

uint64_t OUTLINED_FUNCTION_34_11()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_36_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(a20, v20);
}

uint64_t OUTLINED_FUNCTION_37_9()
{
  return sub_22ABDD3C4();
}

void OUTLINED_FUNCTION_38_10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

void OUTLINED_FUNCTION_41_5()
{
  JUMPOUT(0x22E2E15A0);
}

uint64_t OUTLINED_FUNCTION_45_8()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_46_7@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_47_6(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = result;
  return result;
}

void Pose.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10CF0);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v7 = v6 - v5;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA006C8();
  sub_22ABE02B0();
  v9 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  sub_22ABDEAEC();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    if (!v18)
      break;
LABEL_18:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_19:
    v20 = *(_QWORD *)(v8 + 56) + 40 * v16;
    v21 = *(_QWORD *)(v20 + 8);
    v22 = *(_QWORD *)(v20 + 16);
    v23 = *(_QWORD *)(v20 + 24);
    v24 = *(_DWORD *)(v20 + 32);
    v27 = *(_QWORD *)v20;
    v28 = v21;
    sub_22ABDEAEC();
    if (sub_22AA00704((uint64_t)&v27) != 40)
    {
      v27 = v22;
      v28 = v23;
      v29 = v24;
      sub_22AA0138C();
      sub_22ABDFD4C();
      if (v2)
      {
LABEL_26:
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v7, v26);
        OUTLINED_FUNCTION_10_19();
        return;
      }
    }
  }
  v19 = v14 + 1;
  if (v14 + 1 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v14 + 2;
  if (v14 + 2 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v14 + 3;
  if (v14 + 3 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v14 + 4;
  if (v14 + 4 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v14 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_28:
  __break(1u);
}

unint64_t sub_22AA006C8()
{
  unint64_t result;

  result = qword_255B10CF8;
  if (!qword_255B10CF8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEDE20, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B10CF8);
  }
  return result;
}

uint64_t sub_22AA00704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  char v83;

  v1 = *(_QWORD *)(a1 + 8);
  if (qword_255B0D738 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B166C0);
  v3 = v3 && v2 == v1;
  if (v3 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    OUTLINED_FUNCTION_23();
    return 0;
  }
  else
  {
    if (qword_255B0D740 != -1)
      swift_once();
    OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B166D0);
    v6 = v3 && v5 == v1;
    if (v6 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
    {
      OUTLINED_FUNCTION_23();
      return 1;
    }
    else
    {
      if (qword_255B0D748 != -1)
        swift_once();
      OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B166E0);
      v8 = v3 && v7 == v1;
      if (v8 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
      {
        OUTLINED_FUNCTION_23();
        return 2;
      }
      else
      {
        if (qword_255B0D750 != -1)
          swift_once();
        OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B166F0);
        v10 = v3 && v9 == v1;
        if (v10 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
        {
          OUTLINED_FUNCTION_23();
          return 3;
        }
        else
        {
          if (qword_255B0D758 != -1)
            swift_once();
          OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16700);
          v12 = v3 && v11 == v1;
          if (v12 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
          {
            OUTLINED_FUNCTION_23();
            return 4;
          }
          else
          {
            if (qword_255B0D760 != -1)
              swift_once();
            OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16710);
            v14 = v3 && v13 == v1;
            if (v14 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
            {
              OUTLINED_FUNCTION_23();
              return 5;
            }
            else
            {
              if (qword_255B0D768 != -1)
                swift_once();
              OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16720);
              v16 = v3 && v15 == v1;
              if (v16 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
              {
                OUTLINED_FUNCTION_23();
                return 6;
              }
              else
              {
                if (qword_255B0D770 != -1)
                  swift_once();
                OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16730);
                v18 = v3 && v17 == v1;
                if (v18 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                {
                  OUTLINED_FUNCTION_23();
                  return 7;
                }
                else
                {
                  if (qword_255B0D778 != -1)
                    swift_once();
                  OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16740);
                  v20 = v3 && v19 == v1;
                  if (v20 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                  {
                    OUTLINED_FUNCTION_23();
                    return 8;
                  }
                  else
                  {
                    if (qword_255B0D780 != -1)
                      swift_once();
                    OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16750);
                    v22 = v3 && v21 == v1;
                    if (v22 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                    {
                      OUTLINED_FUNCTION_23();
                      return 9;
                    }
                    else
                    {
                      if (qword_255B0D788 != -1)
                        swift_once();
                      OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16760);
                      v24 = v3 && v23 == v1;
                      if (v24 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                      {
                        OUTLINED_FUNCTION_23();
                        return 10;
                      }
                      else
                      {
                        if (qword_255B0D790 != -1)
                          swift_once();
                        OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16770);
                        v26 = v3 && v25 == v1;
                        if (v26 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                        {
                          OUTLINED_FUNCTION_23();
                          return 11;
                        }
                        else
                        {
                          if (qword_255B0D798 != -1)
                            swift_once();
                          OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16780);
                          v28 = v3 && v27 == v1;
                          if (v28 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                          {
                            OUTLINED_FUNCTION_23();
                            return 12;
                          }
                          else
                          {
                            if (qword_255B0D7A0 != -1)
                              swift_once();
                            OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16790);
                            v30 = v3 && v29 == v1;
                            if (v30 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                            {
                              OUTLINED_FUNCTION_23();
                              return 13;
                            }
                            else
                            {
                              if (qword_255B0D7A8 != -1)
                                swift_once();
                              OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B167A0);
                              v32 = v3 && v31 == v1;
                              if (v32 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                              {
                                OUTLINED_FUNCTION_23();
                                return 14;
                              }
                              else
                              {
                                if (qword_255B0D7B0 != -1)
                                  swift_once();
                                OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B167B0);
                                v34 = v3 && v33 == v1;
                                if (v34 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                {
                                  OUTLINED_FUNCTION_23();
                                  return 15;
                                }
                                else
                                {
                                  if (qword_255B0D7B8 != -1)
                                    swift_once();
                                  OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B167C0);
                                  v36 = v3 && v35 == v1;
                                  if (v36 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                  {
                                    OUTLINED_FUNCTION_23();
                                    return 16;
                                  }
                                  else
                                  {
                                    if (qword_255B0D7C0 != -1)
                                      swift_once();
                                    OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B167D0);
                                    v38 = v3 && v37 == v1;
                                    if (v38 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                    {
                                      OUTLINED_FUNCTION_23();
                                      return 17;
                                    }
                                    else
                                    {
                                      if (qword_255B0D7C8 != -1)
                                        swift_once();
                                      OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B167E0);
                                      v40 = v3 && v39 == v1;
                                      if (v40 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                      {
                                        OUTLINED_FUNCTION_23();
                                        return 18;
                                      }
                                      else
                                      {
                                        if (qword_255B0D7D0 != -1)
                                          swift_once();
                                        OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B167F0);
                                        v42 = v3 && v41 == v1;
                                        if (v42 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                        {
                                          OUTLINED_FUNCTION_23();
                                          return 19;
                                        }
                                        else
                                        {
                                          if (qword_255B0D7D8 != -1)
                                            swift_once();
                                          OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16800);
                                          v44 = v3 && v43 == v1;
                                          if (v44 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                          {
                                            OUTLINED_FUNCTION_23();
                                            return 20;
                                          }
                                          else
                                          {
                                            if (qword_255B0D7E0 != -1)
                                              swift_once();
                                            OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16810);
                                            v46 = v3 && v45 == v1;
                                            if (v46 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                            {
                                              OUTLINED_FUNCTION_23();
                                              return 21;
                                            }
                                            else
                                            {
                                              if (qword_255B0D7E8 != -1)
                                                swift_once();
                                              OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16820);
                                              v48 = v3 && v47 == v1;
                                              if (v48 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                              {
                                                OUTLINED_FUNCTION_23();
                                                return 22;
                                              }
                                              else
                                              {
                                                if (qword_255B0D7F0 != -1)
                                                  swift_once();
                                                OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16830);
                                                v50 = v3 && v49 == v1;
                                                if (v50 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                {
                                                  OUTLINED_FUNCTION_23();
                                                  return 23;
                                                }
                                                else
                                                {
                                                  if (qword_255B0D7F8 != -1)
                                                    swift_once();
                                                  OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16840);
                                                  v52 = v3 && v51 == v1;
                                                  if (v52 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                  {
                                                    OUTLINED_FUNCTION_23();
                                                    return 24;
                                                  }
                                                  else
                                                  {
                                                    if (qword_255B0D800 != -1)
                                                      swift_once();
                                                    OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16850);
                                                    v54 = v3 && v53 == v1;
                                                    if (v54 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                    {
                                                      OUTLINED_FUNCTION_23();
                                                      return 25;
                                                    }
                                                    else
                                                    {
                                                      if (qword_255B0D808 != -1)
                                                        swift_once();
                                                      OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16860);
                                                      v56 = v3 && v55 == v1;
                                                      if (v56 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                      {
                                                        OUTLINED_FUNCTION_23();
                                                        return 26;
                                                      }
                                                      else
                                                      {
                                                        if (qword_255B0D810 != -1)
                                                          swift_once();
                                                        OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16870);
                                                        v58 = v3 && v57 == v1;
                                                        if (v58 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                        {
                                                          OUTLINED_FUNCTION_23();
                                                          return 27;
                                                        }
                                                        else
                                                        {
                                                          if (qword_255B0D818 != -1)
                                                            swift_once();
                                                          OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16880);
                                                          v60 = v3 && v59 == v1;
                                                          if (v60 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                          {
                                                            OUTLINED_FUNCTION_23();
                                                            return 28;
                                                          }
                                                          else
                                                          {
                                                            if (qword_255B0D820 != -1)
                                                              swift_once();
                                                            OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16890);
                                                            v62 = v3 && v61 == v1;
                                                            if (v62 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                            {
                                                              OUTLINED_FUNCTION_23();
                                                              return 29;
                                                            }
                                                            else
                                                            {
                                                              if (qword_255B0D828 != -1)
                                                                swift_once();
                                                              OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B168A0);
                                                              v64 = v3 && v63 == v1;
                                                              if (v64 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                              {
                                                                OUTLINED_FUNCTION_23();
                                                                return 30;
                                                              }
                                                              else
                                                              {
                                                                if (qword_255B0D830 != -1)
                                                                  swift_once();
                                                                OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B168B0);
                                                                v66 = v3 && v65 == v1;
                                                                if (v66 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                                {
                                                                  OUTLINED_FUNCTION_23();
                                                                  return 31;
                                                                }
                                                                else
                                                                {
                                                                  if (qword_255B0D838 != -1)
                                                                    swift_once();
                                                                  OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B168C0);
                                                                  v68 = v3 && v67 == v1;
                                                                  if (v68 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                                  {
                                                                    OUTLINED_FUNCTION_23();
                                                                    return 32;
                                                                  }
                                                                  else
                                                                  {
                                                                    if (qword_255B0D840 != -1)
                                                                      swift_once();
                                                                    OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B168D0);
                                                                    v70 = v3 && v69 == v1;
                                                                    if (v70 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                                    {
                                                                      OUTLINED_FUNCTION_23();
                                                                      return 33;
                                                                    }
                                                                    else
                                                                    {
                                                                      if (qword_255B0D848 != -1)
                                                                        swift_once();
                                                                      OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B168E0);
                                                                      v72 = v3 && v71 == v1;
                                                                      if (v72 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                                      {
                                                                        OUTLINED_FUNCTION_23();
                                                                        return 34;
                                                                      }
                                                                      else
                                                                      {
                                                                        if (qword_255B0D850 != -1)
                                                                          swift_once();
                                                                        OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B168F0);
                                                                        v74 = v3 && v73 == v1;
                                                                        if (v74 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                                        {
                                                                          OUTLINED_FUNCTION_23();
                                                                          return 35;
                                                                        }
                                                                        else
                                                                        {
                                                                          if (qword_255B0D858 != -1)
                                                                            swift_once();
                                                                          OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16900);
                                                                          v76 = v3 && v75 == v1;
                                                                          if (v76
                                                                            || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                                          {
                                                                            OUTLINED_FUNCTION_23();
                                                                            return 36;
                                                                          }
                                                                          else
                                                                          {
                                                                            if (qword_255B0D860 != -1)
                                                                              swift_once();
                                                                            OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16910);
                                                                            v78 = v3 && v77 == v1;
                                                                            if (v78
                                                                              || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                                            {
                                                                              OUTLINED_FUNCTION_23();
                                                                              return 37;
                                                                            }
                                                                            else
                                                                            {
                                                                              if (qword_255B0D868 != -1)
                                                                                swift_once();
                                                                              OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16920);
                                                                              v80 = v3 && v79 == v1;
                                                                              if (v80
                                                                                || (OUTLINED_FUNCTION_0_22() & 1) != 0)
                                                                              {
                                                                                OUTLINED_FUNCTION_23();
                                                                                return 38;
                                                                              }
                                                                              else
                                                                              {
                                                                                if (qword_255B0D870 != -1)
                                                                                  swift_once();
                                                                                OUTLINED_FUNCTION_2_29((uint64_t)&qword_255B16930);
                                                                                if (v3 && v81 == v1)
                                                                                {
                                                                                  OUTLINED_FUNCTION_23();
                                                                                  return 39;
                                                                                }
                                                                                else
                                                                                {
                                                                                  v83 = OUTLINED_FUNCTION_0_22();
                                                                                  OUTLINED_FUNCTION_23();
                                                                                  if ((v83 & 1) != 0)
                                                                                    return 39;
                                                                                  else
                                                                                    return 40;
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_22AA0138C()
{
  unint64_t result;

  result = qword_255B10D00;
  if (!qword_255B10D00)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEDDF8, &_s5PointVN);
    atomic_store(result, (unint64_t *)&qword_255B10D00);
  }
  return result;
}

void sub_22AA013C8(_QWORD *a1)
{
  Pose.encode(to:)(a1);
}

void Pose.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  int v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10D08);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_33();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA006C8();
  sub_22ABE0298();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
LABEL_17:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_19();
    return;
  }
  v24 = a2;
  sub_22A9F25A8();
  v6 = (_QWORD *)sub_22ABDEAC8();
  v7 = sub_22ABDFC98();
  v25 = *(_QWORD *)(v7 + 16);
  v26 = v7;
  if (!v25)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_19_15();
    *v24 = v6;
    v24[1] = 0x6C6C414F50494E56;
    v24[2] = 0xE800000000000000;
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_22AA0352C();
  v8 = 0;
  while (1)
  {
    v9 = *(_BYTE *)(v26 + v8 + 32);
    sub_22ABDFC8C();
    v10 = v27;
    sub_22AA01720(v9);
    if (!v28)
      goto LABEL_15;
    v11 = v27;
    sub_22ABDEAEC();
    swift_isUniquelyReferenced_nonNull_native();
    v27 = v6;
    v12 = sub_22AA03780();
    if (__OFADD__(v6[2], (v13 & 1) == 0))
      break;
    v14 = v12;
    v15 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10D18);
    if ((sub_22ABDFA64() & 1) != 0)
    {
      v16 = sub_22AA03780();
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_20;
      v14 = v16;
    }
    if ((v15 & 1) != 0)
    {
      v18 = v6[7] + 40 * v14;
      swift_bridgeObjectRelease();
      *(_QWORD *)v18 = v11;
      *(_QWORD *)(v18 + 8) = v28;
      *(_QWORD *)(v18 + 16) = v10;
      *(_QWORD *)(v18 + 24) = v28;
      *(_DWORD *)(v18 + 32) = v29;
    }
    else
    {
      v6[(v14 >> 6) + 8] |= 1 << v14;
      v19 = (_QWORD *)(v6[6] + 16 * v14);
      *v19 = v11;
      v19[1] = v28;
      v20 = v6[7] + 40 * v14;
      *(_QWORD *)v20 = v11;
      *(_QWORD *)(v20 + 8) = v28;
      *(_QWORD *)(v20 + 16) = v10;
      *(_QWORD *)(v20 + 24) = v28;
      *(_DWORD *)(v20 + 32) = v29;
      v21 = v6[2];
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        goto LABEL_19;
      v6[2] = v23;
      sub_22ABDEAEC();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    if (v25 == ++v8)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  sub_22ABE0190();
  __break(1u);
}

void sub_22AA01720(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_22AA0174C()
{
  _QWORD *v0;
  uint64_t v1;

  if (qword_255B0D738 != -1)
    swift_once();
  v1 = *(_QWORD *)algn_255B166C8;
  *v0 = qword_255B166C0;
  v0[1] = v1;
  return sub_22ABDEAEC();
}

uint64_t sub_22AA01F7C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  unsigned int v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  unsigned int v19;
  BOOL v20;
  BOOL v21;
  unsigned int v22;
  BOOL v23;
  unsigned int v24;
  BOOL v25;
  unsigned int v26;
  BOOL v27;
  unsigned int v28;
  BOOL v29;
  unsigned int v30;
  BOOL v31;
  unsigned int v32;
  BOOL v33;
  unsigned int v34;
  BOOL v35;
  BOOL v36;
  BOOL v37;
  unsigned int v38;
  BOOL v39;
  unsigned int v40;
  BOOL v41;
  unsigned int v42;
  BOOL v43;
  unsigned int v44;
  BOOL v45;
  unsigned int v46;
  BOOL v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v54;
  unsigned int v56;
  BOOL v57;
  BOOL v58;
  BOOL v59;
  BOOL v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v67;
  char v70;

  OUTLINED_FUNCTION_21_20();
  v3 = v0 == (v2 | 0x72614500000000) && v1 == 0xE700000000000000;
  if (v3 || (v4 = v1, v5 = v0, (OUTLINED_FUNCTION_0_22() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  OUTLINED_FUNCTION_21_20();
  v8 = v5 == (v7 | 0x65794500000000) && v4 == 0xE700000000000000;
  if (v8 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  v9 = v5 == 0x7261457468676972 && v4 == 0xE800000000000000;
  if (v9 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  v10 = v5 == 0x6579457468676972 && v4 == 0xE800000000000000;
  if (v10 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  v11 = v5 == 1801676142 && v4 == 0xE400000000000000;
  if (v11 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  v12 = v5 == 1702063982 && v4 == 0xE400000000000000;
  if (v12 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  v13 = v5 == 0x756F68537466656CLL && v4 == 0xEC0000007265646CLL;
  if (v13 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  v14 = v5 == 0x6F626C457466656CLL && v4 == 0xE900000000000077;
  if (v14 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  OUTLINED_FUNCTION_21_20();
  v16 = v5 == (v15 | 0x7369725700000000) && v4 == 0xE900000000000074;
  if (v16 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  v17 = v5 == 0x6F68537468676972 && v4 == 0xED00007265646C75;
  if (v17 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  v18 = v5 == 0x626C457468676972 && v4 == 0xEA0000000000776FLL;
  if (v18 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  OUTLINED_FUNCTION_30_13();
  v20 = v5 == (v19 | 0x6972577400000000) && v4 == 0xEA00000000007473;
  if (v20 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  v21 = v5 == 1953460082 && v4 == 0xE400000000000000;
  if (v21 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  OUTLINED_FUNCTION_21_20();
  v23 = v5 == (v22 | 0x70694800000000) && v4 == 0xE700000000000000;
  if (v23 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  OUTLINED_FUNCTION_21_20();
  v25 = v5 == (v24 | 0x65656E4B00000000) && v4 == 0xE800000000000000;
  if (v25 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  OUTLINED_FUNCTION_21_20();
  v27 = v5 == (v26 | 0x6C6B6E4100000000) && v4 == 0xE900000000000065;
  if (v27 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  OUTLINED_FUNCTION_30_13();
  v29 = v5 == (v28 | 0x7069487400000000) && v4 == 0xE800000000000000;
  if (v29 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  OUTLINED_FUNCTION_30_13();
  v31 = v5 == (v30 | 0x656E4B7400000000) && v4 == 0xE900000000000065;
  if (v31 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  OUTLINED_FUNCTION_30_13();
  v33 = v5 == (v32 | 0x6B6E417400000000) && v4 == 0xEA0000000000656CLL;
  if (v33 || (OUTLINED_FUNCTION_29_13(), (OUTLINED_FUNCTION_0_22() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  OUTLINED_FUNCTION_37_10();
  v35 = v5 == (v34 | 0x7069546200000000) && v4 == 0xE800000000000000;
  if (v35 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  OUTLINED_FUNCTION_37_10();
  OUTLINED_FUNCTION_26_12();
  v36 = v3 && v4 == 0xE700000000000000;
  if (v36 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  OUTLINED_FUNCTION_37_10();
  OUTLINED_FUNCTION_26_12();
  v37 = v3 && v4 == 0xE700000000000000;
  if (v37 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  OUTLINED_FUNCTION_37_10();
  v39 = v5 == (v38 | 0x434D436200000000) && v4 == 0xE800000000000000;
  if (v39 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  OUTLINED_FUNCTION_36_7();
  v41 = v5 == (v40 | 0x7069547800000000) && v4 == 0xE800000000000000;
  if (v41 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  OUTLINED_FUNCTION_36_7();
  v43 = v5 == (v42 | 0x5049447800000000) && v4 == 0xE800000000000000;
  if (v43 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  OUTLINED_FUNCTION_36_7();
  v45 = v5 == (v44 | 0x5049507800000000) && v4 == 0xE800000000000000;
  if (v45 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  OUTLINED_FUNCTION_36_7();
  v47 = v5 == (v46 | 0x50434D7800000000) && v4 == 0xE800000000000000;
  if (v47 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  OUTLINED_FUNCTION_14_20();
  v49 = v5 == (v48 & 0xFFFFFFFFFFFFLL | 0x6954000000000000) && v4 == 0xE900000000000070;
  if (v49 || (OUTLINED_FUNCTION_13_26(), (OUTLINED_FUNCTION_0_22() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  OUTLINED_FUNCTION_14_20();
  if (v5 == (v50 & 0xFFFFFFFFFFFFLL | 0x4944000000000000) && v4 == 0xE900000000000050)
  {
    OUTLINED_FUNCTION_20_20();
LABEL_176:
    swift_bridgeObjectRelease();
    return 28;
  }
  OUTLINED_FUNCTION_13_26();
  if ((OUTLINED_FUNCTION_0_22() & 1) != 0)
    goto LABEL_176;
  OUTLINED_FUNCTION_14_20();
  if (v5 == (v52 & 0xFFFFFFFFFFFFLL | 0x4950000000000000) && v4 == 0xE900000000000050)
  {
    OUTLINED_FUNCTION_20_20();
LABEL_184:
    swift_bridgeObjectRelease();
    return 29;
  }
  OUTLINED_FUNCTION_13_26();
  if ((OUTLINED_FUNCTION_0_22() & 1) != 0)
    goto LABEL_184;
  OUTLINED_FUNCTION_14_20();
  if (v5 == (v54 & 0xFFFFFFFFFFFFLL | 0x434D000000000000) && v4 == 0xE900000000000050)
  {
    OUTLINED_FUNCTION_20_20();
LABEL_192:
    swift_bridgeObjectRelease();
    return 30;
  }
  OUTLINED_FUNCTION_13_26();
  if ((OUTLINED_FUNCTION_0_22() & 1) != 0)
    goto LABEL_192;
  OUTLINED_FUNCTION_31_9();
  v57 = v5 == (v56 | 0x70695400000000) && v4 == 0xE700000000000000;
  if (v57 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  OUTLINED_FUNCTION_31_9();
  OUTLINED_FUNCTION_26_12();
  v58 = v3 && v4 == 0xE700000000000000;
  if (v58 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  OUTLINED_FUNCTION_31_9();
  OUTLINED_FUNCTION_26_12();
  v59 = v3 && v4 == 0xE700000000000000;
  if (v59 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  OUTLINED_FUNCTION_31_9();
  OUTLINED_FUNCTION_26_12();
  v60 = v3 && v4 == 0xE700000000000000;
  if (v60 || (OUTLINED_FUNCTION_0_22() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  OUTLINED_FUNCTION_18_18();
  v62 = v5 == (v61 & 0xFFFFFFFFFFFFLL | 0x6954000000000000) && v4 == 0xE900000000000070;
  if (v62 || (OUTLINED_FUNCTION_17_17(), (OUTLINED_FUNCTION_0_22() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  OUTLINED_FUNCTION_18_18();
  if (v5 == (v63 & 0xFFFFFFFFFFFFLL | 0x4944000000000000) && v4 == 0xE900000000000050)
  {
    OUTLINED_FUNCTION_20_20();
LABEL_230:
    swift_bridgeObjectRelease();
    return 36;
  }
  OUTLINED_FUNCTION_17_17();
  if ((OUTLINED_FUNCTION_0_22() & 1) != 0)
    goto LABEL_230;
  OUTLINED_FUNCTION_18_18();
  if (v5 == (v65 & 0xFFFFFFFFFFFFLL | 0x4950000000000000) && v4 == 0xE900000000000050)
  {
    OUTLINED_FUNCTION_20_20();
LABEL_238:
    swift_bridgeObjectRelease();
    return 37;
  }
  OUTLINED_FUNCTION_17_17();
  if ((OUTLINED_FUNCTION_0_22() & 1) != 0)
    goto LABEL_238;
  OUTLINED_FUNCTION_18_18();
  if (v5 == (v67 & 0xFFFFFFFFFFFFLL | 0x434D000000000000) && v4 == 0xE900000000000050)
  {
    OUTLINED_FUNCTION_20_20();
LABEL_246:
    swift_bridgeObjectRelease();
    return 38;
  }
  OUTLINED_FUNCTION_17_17();
  if ((OUTLINED_FUNCTION_0_22() & 1) != 0)
    goto LABEL_246;
  if (v5 == 0x7473697277 && v4 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else
  {
    v70 = OUTLINED_FUNCTION_0_22();
    OUTLINED_FUNCTION_23();
    if ((v70 & 1) != 0)
      return 39;
    else
      return 40;
  }
}

uint64_t sub_22AA02BE0()
{
  sub_22ABE0244();
  sub_22ABE0250();
  return OUTLINED_FUNCTION_7_27();
}

uint64_t sub_22AA02C20(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA02C54 + 4 * byte_22ABEDC78[a1]))(0x7261457466656CLL, 0xE700000000000000);
}

uint64_t sub_22AA02C54()
{
  return 0x6579457466656CLL;
}

uint64_t sub_22AA02C68()
{
  return 0x7261457468676972;
}

uint64_t sub_22AA02C80()
{
  return 0x6579457468676972;
}

uint64_t sub_22AA02C98()
{
  return 1801676142;
}

uint64_t sub_22AA02CA8()
{
  return 1702063982;
}

uint64_t sub_22AA02CB8()
{
  return 0x756F68537466656CLL;
}

uint64_t sub_22AA02CD8()
{
  return 0x6F626C457466656CLL;
}

uint64_t sub_22AA02CFC()
{
  return 0x736972577466656CLL;
}

uint64_t sub_22AA02D20()
{
  return 0x6F68537468676972;
}

uint64_t sub_22AA02D44()
{
  return 0x626C457468676972;
}

uint64_t sub_22AA02D60()
{
  return 0x6972577468676972;
}

uint64_t sub_22AA02D80()
{
  return 1953460082;
}

uint64_t sub_22AA02D90()
{
  return 0x7069487466656CLL;
}

uint64_t sub_22AA02F14()
{
  return 0x504944676E6972;
}

uint64_t sub_22AA02F24()
{
  return 0x504950676E6972;
}

void sub_22AA02F48()
{
  JUMPOUT(0x22AA02F5CLL);
}

uint64_t sub_22AA02FAC()
{
  return 0x7473697277;
}

void sub_22AA02FC0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  Pose.init(from:)(a1, a2);
}

uint64_t sub_22AA02FD4()
{
  return sub_22AA02BE0();
}

uint64_t sub_22AA02FDC()
{
  unsigned __int8 *v0;

  return sub_22AA02C20(*v0);
}

uint64_t sub_22AA02FE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA01F7C();
  *a1 = result;
  return result;
}

void sub_22AA03008(_BYTE *a1@<X8>)
{
  *a1 = 40;
}

uint64_t sub_22AA03014()
{
  sub_22AA006C8();
  return sub_22ABE02EC();
}

uint64_t sub_22AA0303C()
{
  sub_22AA006C8();
  return sub_22ABE02F8();
}

uint64_t sub_22AA03064(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA0315C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E656469666E6F63;
  else
    return 0x6E6F697461636F6CLL;
}

uint64_t sub_22AA03198(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10D38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA044E4();
  sub_22ABE02B0();
  type metadata accessor for CGPoint(0);
  sub_22AA04520(&qword_255B10D48, MEMORY[0x24BDBD878]);
  sub_22ABDFD4C();
  if (!v1)
    sub_22ABDFD28();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

double sub_22AA032E8(_QWORD *a1)
{
  uint64_t v2;
  double v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10D50);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_33();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA044E4();
  sub_22ABE0298();
  type metadata accessor for CGPoint(0);
  sub_22AA04520(&qword_255B10D58, MEMORY[0x24BDBD888]);
  sub_22ABDFC8C();
  sub_22ABDFC68();
  OUTLINED_FUNCTION_13_11();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

uint64_t sub_22AA0345C()
{
  char *v0;

  return sub_22AA0315C(*v0);
}

uint64_t sub_22AA03464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA03064(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA03488()
{
  sub_22AA044E4();
  return sub_22ABE02EC();
}

uint64_t sub_22AA034B0()
{
  sub_22AA044E4();
  return sub_22ABE02F8();
}

void sub_22AA034D8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  int v6;

  v4 = sub_22AA032E8(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
  }
}

uint64_t sub_22AA03504(_QWORD *a1)
{
  return sub_22AA03198(a1);
}

void sub_22AA03520(uint64_t a1)
{
  sub_22AA03614(a1, &qword_255B10D68);
}

unint64_t sub_22AA0352C()
{
  unint64_t result;

  result = qword_255B10D10;
  if (!qword_255B10D10)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEDDD0, &_s5PointVN);
    atomic_store(result, (unint64_t *)&qword_255B10D10);
  }
  return result;
}

void sub_22AA03568(uint64_t a1)
{
  sub_22AA0358C(a1);
}

void sub_22AA03574(uint64_t a1)
{
  sub_22AA0358C(a1);
}

void sub_22AA03580(uint64_t a1)
{
  sub_22AA0358C(a1);
}

void sub_22AA0358C(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_25_12();
    OUTLINED_FUNCTION_16_1();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_22ABDF074() + 16) = a1;
    OUTLINED_FUNCTION_33_13();
  }
}

void sub_22AA035F0(uint64_t a1)
{
  sub_22AA03614(a1, &qword_255B10D60);
}

void sub_22AA035FC(uint64_t a1)
{
  sub_22AA03614(a1, &qword_255B0FD90);
}

void sub_22AA03608(uint64_t a1)
{
  sub_22AA03614(a1, &qword_255B0FEA8);
}

void sub_22AA03614(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_25_12();
    OUTLINED_FUNCTION_16_1();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(a2);
      *(_QWORD *)(sub_22ABDF074() + 16) = a1;
    }
    OUTLINED_FUNCTION_33_13();
  }
}

unint64_t sub_22AA03688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_11_29();
  OUTLINED_FUNCTION_7_27();
  v0 = OUTLINED_FUNCTION_12_22();
  return sub_22AA03A54(v0, v1, v2);
}

unint64_t sub_22AA036C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22ABDF554();
  return sub_22AA03B34(a1, v2);
}

unint64_t sub_22AA036F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_27_15();
  return sub_22AA040EC(v0, v1);
}

unint64_t sub_22AA0371C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_3_29();
  sub_22ABE025C();
  if (v0)
  {
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_11_29();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_7_27();
  v1 = OUTLINED_FUNCTION_12_22();
  return sub_22AA03C3C(v1, v2, v3);
}

uint64_t sub_22AA03780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_29();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_11_29();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_27();
  v0 = OUTLINED_FUNCTION_12_22();
  return sub_22AA03D04(v0, v1, v2);
}

unint64_t sub_22AA037D4(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x22E2E44BC](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_22AA03E2C(a1, v3);
}

unint64_t sub_22AA03808(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_6_31();
  sub_22ABE0268();
  sub_22ABE0268();
  v2 = OUTLINED_FUNCTION_7_27();
  return sub_22AA03DB4(a1, v2);
}

unint64_t sub_22AA03864(uint64_t a1, char a2)
{
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  sub_22ABE0244();
  sub_22ABE025C();
  if ((a2 & 1) == 0)
    OUTLINED_FUNCTION_35_7();
  v5 = OUTLINED_FUNCTION_7_27();
  return sub_22AA03F6C(a1, v4, v5);
}

unint64_t sub_22AA038DC(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v8;
  _BYTE v10[72];

  sub_22ABE0244();
  a2 &= 1u;
  sub_22A9DF888((uint64_t)v10, a1, a2, a3, a4 & 1);
  v8 = sub_22ABE0280();
  return sub_22AA03EC8(a1, a2, a3, a4 & 1, v8);
}

unint64_t sub_22AA03978(__int16 a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_6_31();
  OUTLINED_FUNCTION_32_10();
  sub_22ABE025C();
  v2 = OUTLINED_FUNCTION_7_27();
  return sub_22AA03FF0(a1 & 0x101, v2);
}

unint64_t sub_22AA039CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_35_7();
  sub_22ABE0250();
  OUTLINED_FUNCTION_7_27();
  v0 = OUTLINED_FUNCTION_12_22();
  return sub_22AA04074(v0, v1, v2);
}

unint64_t sub_22AA03A10(unsigned __int8 a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_6_31();
  OUTLINED_FUNCTION_32_10();
  v2 = OUTLINED_FUNCTION_7_27();
  return sub_22AA04188(a1, v2);
}

unint64_t sub_22AA03A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_22ABDFF68() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_22ABDFF68() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_22AA03B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_22A9C38CC();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_22ABDF560();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_22ABDF560();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_22AA03C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v8 = ~v4;
    do
    {
      v9 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v5);
      v10 = v9[1];
      if (v10)
      {
        if (a2)
        {
          v11 = *v9 == a1 && v10 == a2;
          if (v11 || (sub_22ABDFF68() & 1) != 0)
            return v5;
        }
      }
      else if (!a2)
      {
        return v5;
      }
      v5 = (v5 + 1) & v8;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_22AA03D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  BOOL v17;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  OUTLINED_FUNCTION_28_11();
  if ((v8 & 1) != 0)
  {
    v9 = v7;
    v10 = v6;
    v11 = *(_QWORD *)(v3 + 48);
    v12 = (_QWORD *)(v11 + 16 * v5);
    v13 = *v12 == v6 && v12[1] == v7;
    if (!v13 && (OUTLINED_FUNCTION_24_15() & 1) == 0)
    {
      v14 = ~v4;
      do
      {
        v5 = (v5 + 1) & v14;
        OUTLINED_FUNCTION_28_11();
        if ((v15 & 1) == 0)
          break;
        v16 = (_QWORD *)(v11 + 16 * v5);
        v17 = *v16 == v10 && v16[1] == v9;
      }
      while (!v17 && (OUTLINED_FUNCTION_24_15() & 1) == 0);
    }
  }
  return v5;
}

unint64_t sub_22AA03DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  int *v7;
  int v8;
  int v9;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = (int *)(*(_QWORD *)(v2 + 48) + 8 * result);
      v9 = *v7;
      v8 = v7[1];
      if (v9 == (_DWORD)a1 && v8 == HIDWORD(a1))
        break;
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_22AA03E2C(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_22AA03EC8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;

  v7 = -1 << *(_BYTE *)(v5 + 32);
  result = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v9 = ~v7;
    do
    {
      v10 = *(_QWORD *)(v5 + 48) + 32 * result;
      if ((*(_BYTE *)(v10 + 8) & 1) != 0)
      {
        if ((a2 & 1) == 0)
          goto LABEL_13;
      }
      else if ((a2 & 1) != 0 || *(_QWORD *)v10 != a1)
      {
        goto LABEL_13;
      }
      if ((*(_BYTE *)(v10 + 24) & 1) != 0)
      {
        if ((a4 & 1) != 0)
          return result;
      }
      else if ((a4 & 1) == 0 && *(_QWORD *)(v10 + 16) == a3)
      {
        return result;
      }
LABEL_13:
      result = (result + 1) & v9;
    }
    while (((*(_QWORD *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_22AA03F6C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = *(_QWORD *)(v3 + 48) + 16 * result;
      if ((*(_BYTE *)(v8 + 8) & 1) != 0)
      {
        if ((a2 & 1) != 0)
          return result;
      }
      else if ((a2 & 1) == 0 && *(_QWORD *)v8 == a1)
      {
        return result;
      }
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_22AA03FF0(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      if (((a1 ^ *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + 2 * result) | *(unsigned __int8 *)(*(_QWORD *)(v2 + 48)
                                                                                               + 2 * result
                                                                                               + 1) ^ ((unsigned __int16)(a1 & 0x100) >> 8)) & 1) == 0)
        break;
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_22AA04074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * result);
      v10 = *v8;
      v9 = v8[1];
      if (v10 == a1 && v9 == a2)
        break;
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_22AA040EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_22AA04188(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_BYTE *)(v7 + result) != (a1 & 1))
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((*(_BYTE *)(v7 + result) ^ a1) & 1) == 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_22AA04230(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  result = OUTLINED_FUNCTION_4_19(a1, a2, a3, a4, a5);
  v8 = v7 + 40 * result;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_DWORD *)(v8 + 32) = *(_DWORD *)(v9 + 32);
  v11 = *(_QWORD *)(v6 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    *(_QWORD *)(v6 + 16) = v13;
  return result;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

ValueMetadata *_s5PointVMa()
{
  return &_s5PointVN;
}

uint64_t _s10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xD9)
  {
    if (a2 + 39 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 39) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 40;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x28;
  v5 = v6 - 40;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 39 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 39) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD8)
    return ((uint64_t (*)(void))((char *)&loc_22AA04364 + 4 * byte_22ABEDCA5[v4]))();
  *a1 = a2 + 39;
  return ((uint64_t (*)(void))((char *)sub_22AA04398 + 4 * byte_22ABEDCA0[v4]))();
}

uint64_t sub_22AA04398(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA043A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA043A8);
  return result;
}

uint64_t sub_22AA043B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA043BCLL);
  *(_BYTE *)result = a2 + 39;
  return result;
}

uint64_t sub_22AA043C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA043C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_22AA043E8()
{
  unint64_t result;

  result = qword_255B10D20;
  if (!qword_255B10D20)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEDDA8, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B10D20);
  }
  return result;
}

unint64_t sub_22AA04428()
{
  unint64_t result;

  result = qword_255B10D28;
  if (!qword_255B10D28)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEDD18, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B10D28);
  }
  return result;
}

unint64_t sub_22AA04468()
{
  unint64_t result;

  result = qword_255B10D30;
  if (!qword_255B10D30)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEDD40, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B10D30);
  }
  return result;
}

_OWORD *sub_22AA044A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v6 = OUTLINED_FUNCTION_4_19(a1, a2, a3, a4, a5);
  result = sub_22A9C38BC(v8, (_OWORD *)(v7 + 32 * v6));
  v10 = *(_QWORD *)(a5 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    *(_QWORD *)(a5 + 16) = v12;
  return result;
}

unint64_t sub_22AA044E4()
{
  unint64_t result;

  result = qword_255B10D40;
  if (!qword_255B10D40)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEDF28, &_s5PointV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B10D40);
  }
  return result;
}

uint64_t sub_22AA04520(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGPoint(255);
    result = MEMORY[0x22E2E4D80](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22AA04564(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a7[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a7[6] + 8 * result) = a2;
  v7 = a7[7] + 32 * result;
  *(_QWORD *)v7 = a3;
  *(_QWORD *)(v7 + 8) = a4;
  *(_QWORD *)(v7 + 16) = a5;
  *(_BYTE *)(v7 + 24) = a6;
  v8 = a7[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a7[2] = v10;
  return result;
}

void sub_22AA045B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_9_26(a1, a2, a3, a4);
  if (v6)
    __break(1u);
  else
    OUTLINED_FUNCTION_22_18(v4, v5);
}

unint64_t sub_22AA045CC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_22AA04618(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = OUTLINED_FUNCTION_4_19(a1, a2, a3, a4, a5);
  *(_QWORD *)(v8 + 8 * result) = v7;
  v9 = *(_QWORD *)(v6 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    *(_QWORD *)(v6 + 16) = v11;
  return result;
}

void sub_22AA04640(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  OUTLINED_FUNCTION_5_23(a1, a2, a3, a4, a5);
  v9 = type metadata accessor for TensorDescription();
  sub_22A9E7D90(v6, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v7);
  v10 = *(_QWORD *)(v5 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v5 + 16) = v12;
    OUTLINED_FUNCTION_21();
  }
}

void sub_22AA04688(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22AA046AC(a1, a2, a3, a4, a5);
}

void sub_22AA04694(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22AA046AC(a1, a2, a3, a4, a5);
}

void sub_22AA046A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22AA046AC(a1, a2, a3, a4, a5);
}

void sub_22AA046AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v9 = OUTLINED_FUNCTION_5_23(a1, a2, a3, a4, a5);
  v11 = v10(v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v7, v6, v11);
  v12 = *(_QWORD *)(v5 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v5 + 16) = v14;
    OUTLINED_FUNCTION_21();
  }
}

void sub_22AA046FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v4 = OUTLINED_FUNCTION_8_24(a1, a2, a3, a4);
  v7 = (_QWORD *)(v6 + 16 * v4);
  *v7 = v8;
  v7[1] = v9;
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4) = v10;
  v11 = *(_QWORD *)(v5 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    OUTLINED_FUNCTION_22_18(v5, v13);
}

void sub_22AA0472C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v4 = OUTLINED_FUNCTION_8_24(a1, a2, a3, a4);
  *(_BYTE *)(v7 + v4) = v6;
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4) = v8;
  v9 = *(_QWORD *)(v5 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    OUTLINED_FUNCTION_22_18(v5, v11);
}

void sub_22AA04758(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v4 = OUTLINED_FUNCTION_8_24(a1, a2, a3, a4);
  v7 = (_BYTE *)(v6 + 2 * v4);
  *v7 = v8 & 1;
  v7[1] = v9 & 1;
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4) = v10;
  v11 = *(_QWORD *)(v5 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    OUTLINED_FUNCTION_22_18(v5, v13);
}

uint64_t _s5PointV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA047E0 + 4 * byte_22ABEDCAF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA04814 + 4 * byte_22ABEDCAA[v4]))();
}

uint64_t sub_22AA04814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA0481C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA04824);
  return result;
}

uint64_t sub_22AA04830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA04838);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA0483C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA04844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5PointV10CodingKeysOMa()
{
  return &_s5PointV10CodingKeysON;
}

unint64_t sub_22AA04864()
{
  unint64_t result;

  result = qword_255B10D70;
  if (!qword_255B10D70)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEDF00, &_s5PointV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B10D70);
  }
  return result;
}

unint64_t sub_22AA048A4()
{
  unint64_t result;

  result = qword_255B10D78;
  if (!qword_255B10D78)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEDE70, &_s5PointV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B10D78);
  }
  return result;
}

unint64_t sub_22AA048E4()
{
  unint64_t result;

  result = qword_255B10D80;
  if (!qword_255B10D80)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEDE98, &_s5PointV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255B10D80);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_22()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_2_29@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_3_29()
{
  return sub_22ABE0244();
}

unint64_t OUTLINED_FUNCTION_4_19(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  *(_QWORD *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  v5 = (_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_23(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  *(_QWORD *)(a5 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  v5 = (_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a1);
  *v5 = a2;
  v5[1] = a3;
  return 0;
}

uint64_t OUTLINED_FUNCTION_6_31()
{
  return sub_22ABE0244();
}

uint64_t OUTLINED_FUNCTION_7_27()
{
  return sub_22ABE0280();
}

unint64_t OUTLINED_FUNCTION_8_24(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

unint64_t OUTLINED_FUNCTION_9_26(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * result) = a2;
  *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * result) = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_29()
{
  return sub_22ABDEDB0();
}

uint64_t OUTLINED_FUNCTION_12_22()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_13_26()
{
  return 0x656C6464696DLL;
}

uint64_t OUTLINED_FUNCTION_17_17()
{
  return 0x656C7474696CLL;
}

uint64_t OUTLINED_FUNCTION_19_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v1, v0);
}

unint64_t OUTLINED_FUNCTION_20_20()
{
  return 0xE900000000000050;
}

void OUTLINED_FUNCTION_22_18(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 16) = a2;
}

uint64_t OUTLINED_FUNCTION_24_15()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_27_15()
{
  return sub_22ABE0238();
}

uint64_t OUTLINED_FUNCTION_29_13()
{
  return 0x6B6E417468676972;
}

uint64_t OUTLINED_FUNCTION_32_10()
{
  return sub_22ABE025C();
}

uint64_t OUTLINED_FUNCTION_35_7()
{
  return sub_22ABE0250();
}

uint64_t Regressor.prediction(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  v8 = *(_QWORD *)(a4 + 8);
  v11 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v8 + 24)
                                                                                   + *(_QWORD *)(v8 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_22AA04C40;
  return v11(a1, a2, 0, 0, a3, v8);
}

uint64_t sub_22AA04C40()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Regressor.prediction<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  v12 = *(_QWORD *)(a4 + 8);
  *v11 = v5;
  v11[1] = sub_22AA04CF4;
  return Transformer.applied<A>(to:eventHandler:)(a1, 0, 0, a2, a3, v12, a5);
}

uint64_t sub_22AA04CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_0();
  if (!v1)
    v4 = a1;
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

uint64_t *sub_22AA04D2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD7D8();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 24)), (uint64_t *)((char *)a2 + *(int *)(a3 + 24)), v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return a1;
}

uint64_t sub_22AA04DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_22ABDD7D8();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 24), v4);
}

uint64_t sub_22AA04E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22ABDD7D8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_22AA04EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22ABDD7D8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_22AA04F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22ABDD7D8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_22AA04FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22ABDD7D8();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_22AA0502C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA05038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_26_1();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_22AA05068()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA05074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_26_1();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for LSTMFCN.SqueezeExciteBlock(uint64_t a1)
{
  return sub_22AA062F0(a1, qword_255B10DF0);
}

uint64_t sub_22AA050BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD7D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22AA05144(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD8A4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22ABDDAE4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_22AA051EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_22ABDD8A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_22ABDDAE4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_22AA05248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDAE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_22AA052C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDAE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_22AA05340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDAE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_22AA053BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD8A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDDAE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_22AA05438()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA05444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_83_3();
  sub_22ABDD8A4();
  OUTLINED_FUNCTION_21_18();
  if (v4)
  {
    v5 = v3;
    v6 = v1;
  }
  else
  {
    v5 = OUTLINED_FUNCTION_88_1();
    v6 = v1 + *(int *)(v2 + 20);
  }
  return OUTLINED_FUNCTION_78_0(v6, v0, v5);
}

uint64_t sub_22AA0548C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA05498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_65_6();
  sub_22ABDD8A4();
  OUTLINED_FUNCTION_22_16();
  if (v4)
  {
    v5 = v3;
    v6 = v1;
  }
  else
  {
    v5 = OUTLINED_FUNCTION_88_1();
    v6 = v1 + *(int *)(v2 + 20);
  }
  return OUTLINED_FUNCTION_77_0(v6, v0, v0, v5);
}

uint64_t type metadata accessor for LSTMFCN.ConvolutionBlock(uint64_t a1)
{
  return sub_22AA062F0(a1, qword_255B10E88);
}

uint64_t sub_22AA054F8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22ABDD8A4();
  if (v1 <= 0x3F)
  {
    result = sub_22ABDDAE4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LSTMFCN.Storage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_22ABDEAEC();
  return a1;
}

_QWORD *assignWithCopy for LSTMFCN.Storage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LSTMFCN.Storage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LSTMFCN.Storage()
{
  return &type metadata for LSTMFCN.Storage;
}

char *sub_22AA05640(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD73C();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_22ABDD8A4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
    v14 = *(int *)(v13 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = sub_22ABDDAE4();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v19 = a3[6];
    v20 = &a1[v19];
    v21 = (char *)a2 + v19;
    v12(&a1[v19], (char *)a2 + v19, v11);
    v18(&v20[*(int *)(v13 + 20)], &v21[*(int *)(v13 + 20)], v17);
    v22 = a3[7];
    v23 = &a1[v22];
    v24 = (char *)a2 + v22;
    v12(&a1[v22], (char *)a2 + v22, v11);
    v18(&v23[*(int *)(v13 + 20)], &v24[*(int *)(v13 + 20)], v17);
    v25 = a3[8];
    v26 = &a1[v25];
    v27 = (char *)a2 + v25;
    v28 = sub_22ABDD7D8();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    v29(v26, v27, v28);
    v30 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
    v29(&v26[*(int *)(v30 + 24)], &v27[*(int *)(v30 + 24)], v28);
    *(_QWORD *)&v26[*(int *)(v30 + 28)] = *(_QWORD *)&v27[*(int *)(v30 + 28)];
    v31 = a3[9];
    v32 = &a1[v31];
    v33 = (char *)a2 + v31;
    v29(&a1[v31], (char *)a2 + v31, v28);
    v29(&v32[*(int *)(v30 + 24)], &v33[*(int *)(v30 + 24)], v28);
    *(_QWORD *)&v32[*(int *)(v30 + 28)] = *(_QWORD *)&v33[*(int *)(v30 + 28)];
    v29(&a1[a3[11]], (char *)a2 + a3[11], v28);
    v34 = a3[13];
    *(_QWORD *)&a1[a3[12]] = *(uint64_t *)((char *)a2 + a3[12]);
    *(_QWORD *)&a1[v34] = *(uint64_t *)((char *)a2 + v34);
  }
  return a1;
}

uint64_t sub_22AA05860(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(uint64_t, uint64_t);

  v4 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_22ABDD8A4();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v9 = v5 + *(int *)(v8 + 20);
  v10 = sub_22ABDDAE4();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v12 = a1 + a2[6];
  v7(v12, v6);
  v11(v12 + *(int *)(v8 + 20), v10);
  v13 = a1 + a2[7];
  v7(v13, v6);
  v11(v13 + *(int *)(v8 + 20), v10);
  v14 = a1 + a2[8];
  v15 = sub_22ABDD7D8();
  v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v19(v14, v15);
  v16 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v19(v14 + *(int *)(v16 + 24), v15);
  v17 = a1 + a2[9];
  v19(v17, v15);
  v19(v17 + *(int *)(v16 + 24), v15);
  return ((uint64_t (*)(uint64_t, uint64_t))v19)(a1 + a2[11], v15);
}

uint64_t sub_22AA059EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDD8A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v13 = *(int *)(v12 + 20);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_22ABDDAE4();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v11(a1 + v18, a2 + v18, v10);
  v17(v19 + *(int *)(v12 + 20), v20 + *(int *)(v12 + 20), v16);
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v11(a1 + v21, a2 + v21, v10);
  v17(v22 + *(int *)(v12 + 20), v23 + *(int *)(v12 + 20), v16);
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_22ABDD7D8();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v28(v25, v26, v27);
  v29 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v28(v25 + *(int *)(v29 + 24), v26 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v25 + *(int *)(v29 + 28)) = *(_QWORD *)(v26 + *(int *)(v29 + 28));
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v28(a1 + v30, a2 + v30, v27);
  v28(v31 + *(int *)(v29 + 24), v32 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v31 + *(int *)(v29 + 28)) = *(_QWORD *)(v32 + *(int *)(v29 + 28));
  v28(a1 + a3[11], a2 + a3[11], v27);
  v33 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  return a1;
}

uint64_t sub_22AA05BE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDD8A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v13 = *(int *)(v12 + 20);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_22ABDDAE4();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v11(a1 + v18, a2 + v18, v10);
  v17(v19 + *(int *)(v12 + 20), v20 + *(int *)(v12 + 20), v16);
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v11(a1 + v21, a2 + v21, v10);
  v17(v22 + *(int *)(v12 + 20), v23 + *(int *)(v12 + 20), v16);
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_22ABDD7D8();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24);
  v28(v25, v26, v27);
  v29 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v28(v25 + *(int *)(v29 + 24), v26 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v25 + *(int *)(v29 + 28)) = *(_QWORD *)(v26 + *(int *)(v29 + 28));
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v28(a1 + v30, a2 + v30, v27);
  v28(v31 + *(int *)(v29 + 24), v32 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v31 + *(int *)(v29 + 28)) = *(_QWORD *)(v32 + *(int *)(v29 + 28));
  v28(a1 + a3[11], a2 + a3[11], v27);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_22AA05DD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDD8A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v13 = *(int *)(v12 + 20);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_22ABDDAE4();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v11(a1 + v18, a2 + v18, v10);
  v17(v19 + *(int *)(v12 + 20), v20 + *(int *)(v12 + 20), v16);
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v11(a1 + v21, a2 + v21, v10);
  v17(v22 + *(int *)(v12 + 20), v23 + *(int *)(v12 + 20), v16);
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_22ABDD7D8();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32);
  v28(v25, v26, v27);
  v29 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v28(v25 + *(int *)(v29 + 24), v26 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v25 + *(int *)(v29 + 28)) = *(_QWORD *)(v26 + *(int *)(v29 + 28));
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v28(a1 + v30, a2 + v30, v27);
  v28(v31 + *(int *)(v29 + 24), v32 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v31 + *(int *)(v29 + 28)) = *(_QWORD *)(v32 + *(int *)(v29 + 28));
  v28(a1 + a3[11], a2 + a3[11], v27);
  v33 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  return a1;
}

uint64_t sub_22AA05FCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_22ABDD8A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v13 = *(int *)(v12 + 20);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_22ABDDAE4();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v11(a1 + v18, a2 + v18, v10);
  v17(v19 + *(int *)(v12 + 20), v20 + *(int *)(v12 + 20), v16);
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v11(a1 + v21, a2 + v21, v10);
  v17(v22 + *(int *)(v12 + 20), v23 + *(int *)(v12 + 20), v16);
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_22ABDD7D8();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40);
  v28(v25, v26, v27);
  v29 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v28(v25 + *(int *)(v29 + 24), v26 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v25 + *(int *)(v29 + 28)) = *(_QWORD *)(v26 + *(int *)(v29 + 28));
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v28(a1 + v30, a2 + v30, v27);
  v28(v31 + *(int *)(v29 + 24), v32 + *(int *)(v29 + 24), v27);
  *(_QWORD *)(v31 + *(int *)(v29 + 28)) = *(_QWORD *)(v32 + *(int *)(v29 + 28));
  v28(a1 + a3[11], a2 + a3[11], v27);
  v33 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  return a1;
}

uint64_t sub_22AA061C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA061CC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_83_3();
  sub_22ABDD73C();
  OUTLINED_FUNCTION_21_18();
  if (v6)
  {
    v4 = v3;
    v5 = v1;
  }
  else
  {
    type metadata accessor for LSTMFCN.ConvolutionBlock(0);
    OUTLINED_FUNCTION_21_18();
    if (v6)
    {
      v4 = v7;
      v8 = v2[5];
    }
    else
    {
      type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
      OUTLINED_FUNCTION_21_18();
      if (v9)
      {
        v4 = v10;
        v8 = v2[8];
      }
      else
      {
        v4 = OUTLINED_FUNCTION_26_1();
        v8 = v2[11];
      }
    }
    v5 = v1 + v8;
  }
  return OUTLINED_FUNCTION_78_0(v5, v0, v4);
}

uint64_t sub_22AA0624C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA06258()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_65_6();
  sub_22ABDD73C();
  OUTLINED_FUNCTION_22_16();
  if (v6)
  {
    v4 = v3;
    v5 = v1;
  }
  else
  {
    type metadata accessor for LSTMFCN.ConvolutionBlock(0);
    OUTLINED_FUNCTION_22_16();
    if (v6)
    {
      v4 = v7;
      v8 = v2[5];
    }
    else
    {
      type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
      OUTLINED_FUNCTION_22_16();
      if (v9)
      {
        v4 = v10;
        v8 = v2[8];
      }
      else
      {
        v4 = OUTLINED_FUNCTION_26_1();
        v8 = v2[11];
      }
    }
    v5 = v1 + v8;
  }
  return OUTLINED_FUNCTION_77_0(v5, v0, v0, v4);
}

uint64_t type metadata accessor for LSTMFCN(uint64_t a1)
{
  return sub_22AA062F0(a1, qword_255B10F18);
}

uint64_t sub_22AA062F0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22AA06320()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_22ABDD73C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for LSTMFCN.ConvolutionBlock(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for LSTMFCN.SqueezeExciteBlock(319);
      if (v3 <= 0x3F)
      {
        result = sub_22ABDD7D8();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

void sub_22AA06400(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;

  v22 = OUTLINED_FUNCTION_26_1();
  v20 = *(_QWORD *)(v22 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  v19 = v9;
  type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_6_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  v12 = OUTLINED_FUNCTION_42_7();
  v13 = type metadata accessor for LSTMFCN(v12);
  *(_QWORD *)(a3 + *(int *)(v13 + 48)) = a1;
  v14 = (int *)v13;
  *(_QWORD *)(a3 + *(int *)(v13 + 52)) = a2;
  sub_22ABDD628();
  v15 = sub_22ABDD538();
  OUTLINED_FUNCTION_38_11();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_71_4(v4);
  OUTLINED_FUNCTION_38_11();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_71_4(v4);
  sub_22ABDD724();
  sub_22AA078D8();
  sub_22AA0A3D4(v3, a3 + v14[5], type metadata accessor for LSTMFCN.ConvolutionBlock);
  sub_22AA078D8();
  sub_22AA078D8();
  v16 = a3 + v14[8];
  v17 = OUTLINED_FUNCTION_67_5();
  *(_QWORD *)(v16 + *(int *)(v17 + 28)) = 32;
  sub_22ABDD5A4();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v15);
  OUTLINED_FUNCTION_26_13();
  OUTLINED_FUNCTION_71_4(v4);
  OUTLINED_FUNCTION_21_21();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
  v21(v16, v19, v22);
  OUTLINED_FUNCTION_53_7();
  OUTLINED_FUNCTION_26_13();
  sub_22A9A0C1C(v4, &qword_255B0DE30);
  OUTLINED_FUNCTION_21_21();
  v18 = a3 + v14[9];
  *(_QWORD *)(v18 + *(int *)(v17 + 28)) = 64;
  sub_22ABDD5A4();
  OUTLINED_FUNCTION_53_7();
  OUTLINED_FUNCTION_26_13();
  OUTLINED_FUNCTION_24_16();
  OUTLINED_FUNCTION_21_21();
  v21(v18, v19, v22);
  OUTLINED_FUNCTION_22_19();
  sub_22ABDD610();
  OUTLINED_FUNCTION_24_16();
  OUTLINED_FUNCTION_21_21();
  sub_22ABDD5A4();
  OUTLINED_FUNCTION_22_19();
  sub_22ABDD5E0();
  OUTLINED_FUNCTION_24_16();
  sub_22ABDD604();
  sub_22ABDD7C0();
  OUTLINED_FUNCTION_3();
}

void sub_22AA06710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(unint64_t, char *, uint64_t);
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81[2];
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  char *v102;
  char *v103;

  v91 = a5;
  v97 = a4;
  v87 = a1;
  v88 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10FE8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_44_9(v9, v81[0]);
  v10 = sub_22ABDD4F0();
  v98 = *(_QWORD *)(v10 - 8);
  v99 = v10;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_43_5(v13, v81[0]);
  *(_QWORD *)&v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10FF0);
  v90 = *(char **)(v96 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_6_26();
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10FF8);
  v86 = *(_QWORD *)(v94 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_22ABDDA0C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_87();
  v82 = v20;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v21);
  v85 = (char *)v81 - v22;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v23);
  v84 = (char *)v81 - v24;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v25);
  v103 = (char *)v81 - v26;
  OUTLINED_FUNCTION_4_0();
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v81 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)v81 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)v81 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)v81 - v37;
  v81[1] = a3;
  sub_22ABDD8C8();
  v39 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v83 = v38;
  v101 = v39;
  v39(v36, v38, v18);
  sub_22AA0A234(v97, v89);
  sub_22ABDD718();
  sub_22ABDD5B0();
  sub_22ABDD73C();
  sub_22ABDD7FC();
  (*((void (**)(uint64_t, _QWORD))v90 + 1))(v6, v96);
  v90 = v17;
  sub_22ABDD640();
  v97 = *(_QWORD *)(v91 + 16);
  v102 = v33;
  v92 = v36;
  v100 = v19;
  if (v97)
  {
    v40 = v18;
    v41 = sub_22ABDEAEC();
    v42 = 0;
    v43 = MEMORY[0x24BEE4AF8];
    v96 = xmmword_22ABEDF90;
    v44 = v100;
    while (1)
    {
      v45 = v41;
      v46 = *(_QWORD *)(v41 + 8 * v42 + 32);
      sub_22ABDD964();
      v47 = sub_22ABDD508();
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v5, v99);
      v48 = v47 - v46;
      if (__OFSUB__(v47, v46))
        break;
      v49 = v48 - 1;
      if (__OFSUB__(v48, 1))
        goto LABEL_14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B11000);
      v50 = OUTLINED_FUNCTION_33_2();
      *(_OWORD *)(v50 + 16) = v96;
      v51 = MEMORY[0x24BEE1768];
      *(_QWORD *)(v50 + 56) = MEMORY[0x24BEE1768];
      v52 = MEMORY[0x24BE6C248];
      *(_QWORD *)(v50 + 64) = MEMORY[0x24BE6C248];
      *(_QWORD *)(v50 + 72) = v42;
      *(_QWORD *)(v50 + 32) = v49;
      *(_QWORD *)(v50 + 96) = v51;
      *(_QWORD *)(v50 + 104) = v52;
      *(_OWORD *)(v50 + 112) = 0u;
      *(_OWORD *)(v50 + 128) = 0u;
      *(_QWORD *)(v50 + 144) = 0;
      sub_22ABDDA30();
      OUTLINED_FUNCTION_63_1();
      v101(v103, v30, v40);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_74_4();
        v43 = v56;
      }
      v53 = *(_QWORD *)(v43 + 16);
      if (v53 >= *(_QWORD *)(v43 + 24) >> 1)
      {
        OUTLINED_FUNCTION_74_4();
        v43 = v57;
      }
      ++v42;
      *(_QWORD *)(v43 + 16) = v53 + 1;
      v54 = *(void (**)(unint64_t, char *, uint64_t))(v44 + 32);
      v54(v43+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v53, v103, v40);
      v55 = *(void (**)(char *, uint64_t))(v44 + 8);
      v55(v30, v40);
      v41 = v45;
      if (v97 == v42)
      {
        swift_bridgeObjectRelease();
        v58 = sub_22ABDD4D8();
        OUTLINED_FUNCTION_11_14(v93, v59, v60, v58);
        v61 = (uint64_t)v92;
        sub_22ABDD9F4();
        v62 = (uint64_t)v102;
        v55(v102, v40);
        v54(v62, (char *)v61, v40);
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B11000);
    v63 = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(v63 + 16) = xmmword_22ABEDF90;
    v64 = MEMORY[0x24BE6C248];
    *(_QWORD *)(v63 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v63 + 64) = v64;
    *(_QWORD *)(v63 + 32) = -1;
    *(_OWORD *)(v63 + 72) = 0u;
    *(_OWORD *)(v63 + 88) = 0u;
    *(_OWORD *)(v63 + 104) = 0u;
    *(_OWORD *)(v63 + 120) = 0u;
    *(_OWORD *)(v63 + 136) = 0u;
    sub_22ABDDA30();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_8_25((uint64_t)v33);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v33, v36, v18);
LABEL_12:
    sub_22ABDD8C8();
    v65 = type metadata accessor for LSTMFCN(0);
    v66 = v95;
    v103 = (char *)type metadata accessor for LSTMFCN.ConvolutionBlock(0);
    sub_22A99D7D4(&qword_255B11008, type metadata accessor for LSTMFCN.ConvolutionBlock, (uint64_t)&unk_22ABEE1B4);
    v99 = v67;
    v68 = (uint64_t)v84;
    sub_22ABDD7FC();
    v97 = OUTLINED_FUNCTION_67_5();
    sub_22A99D7D4(&qword_255B11010, type metadata accessor for LSTMFCN.SqueezeExciteBlock, (uint64_t)&unk_22ABEE2D8);
    v69 = (uint64_t)v85;
    sub_22ABDD7FC();
    OUTLINED_FUNCTION_8_25(v68);
    OUTLINED_FUNCTION_7_28();
    *(_QWORD *)&v96 = v66 + *(int *)(v65 + 36);
    v98 = v65;
    v70 = v82;
    OUTLINED_FUNCTION_54_5();
    sub_22ABDD7FC();
    OUTLINED_FUNCTION_8_25(v70);
    OUTLINED_FUNCTION_8_25(v68);
    OUTLINED_FUNCTION_7_28();
    OUTLINED_FUNCTION_54_5();
    OUTLINED_FUNCTION_8_25(v68);
    OUTLINED_FUNCTION_7_28();
    OUTLINED_FUNCTION_76_4();
    OUTLINED_FUNCTION_8_25(v68);
    OUTLINED_FUNCTION_7_28();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B11018);
    v71 = *(_QWORD *)(v100 + 72);
    v72 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_22ABE9FB0;
    v74 = v73 + v72;
    v75 = (uint64_t)v102;
    OUTLINED_FUNCTION_90_3(v74, (uint64_t)v102);
    OUTLINED_FUNCTION_90_3(v74 + v71, v68);
    v76 = sub_22ABDD4D8();
    OUTLINED_FUNCTION_11_14(v93, v77, v78, v76);
    sub_22ABDD8D4();
    OUTLINED_FUNCTION_8_25(v68);
    OUTLINED_FUNCTION_7_28();
    OUTLINED_FUNCTION_26_1();
    OUTLINED_FUNCTION_76_4();
    OUTLINED_FUNCTION_90_3(v87, v69);
    v79 = v94;
    v80 = v90;
    sub_22ABDD634();
    OUTLINED_FUNCTION_8_25(v69);
    OUTLINED_FUNCTION_8_25(v68);
    OUTLINED_FUNCTION_8_25((uint64_t)v92);
    OUTLINED_FUNCTION_8_25(v75);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v80, v79);
    OUTLINED_FUNCTION_8_25((uint64_t)v83);
    OUTLINED_FUNCTION_3();
  }
}

void sub_22AA06ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(unint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  void (*v45)(char *, unint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void (*v51)(unint64_t, uint64_t, uint64_t);
  unint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  _QWORD *v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD v64[3];
  char *v65;
  void (*v66)(unint64_t, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;

  OUTLINED_FUNCTION_12();
  v84 = v1;
  v85 = v2;
  v82 = v0;
  v4 = v3;
  v75 = sub_22ABDD4F0();
  v71 = *(_QWORD *)(v75 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v76 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v77 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_87();
  v69 = v9;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_28_1();
  v74 = v11;
  v12 = sub_22ABDDA0C();
  v72 = *(_QWORD *)(v12 - 8);
  v73 = v12;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0();
  v70 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v64 - v19;
  v21 = OUTLINED_FUNCTION_68_5();
  v22 = *(_QWORD *)(v4 + *(int *)(v21 + 48));
  sub_22A99D7D4(qword_255B0F3E8, type metadata accessor for LSTMFCN, (uint64_t)&unk_22ABEE338);
  v24 = v23;
  if ((sub_22ABDD820() & 1) == 0)
  {
    sub_22A9A0888();
    v62 = OUTLINED_FUNCTION_53();
    *v63 = 0xD000000000000021;
    v63[1] = 0x800000022ABE28E0;
    v82 = v62;
    swift_willThrow(v62);
    sub_22A9A0B10(v4, type metadata accessor for LSTMFCN);
    return;
  }
  v64[1] = *(_QWORD *)(v4 + *(int *)(v21 + 52));
  v64[2] = v22;
  v25 = (_QWORD *)sub_22ABDEAC8();
  v26 = sub_22ABDD814();
  v27 = *(_QWORD *)(v26 + 16);
  v64[0] = v26;
  if (!v27)
  {
LABEL_19:
    sub_22A9A0B10(v4, type metadata accessor for LSTMFCN);
    swift_bridgeObjectRelease();
    return;
  }
  v67 = v24;
  v68 = v20;
  v28 = (_QWORD *)(v26 + 48);
  v81 = v7;
  v65 = v18;
  while (1)
  {
    v79 = v28;
    v80 = v27;
    v30 = *(v28 - 2);
    v29 = (void (*)(unint64_t, uint64_t, uint64_t))*(v28 - 1);
    v31 = *v28;
    sub_22ABDEAEC();
    swift_retain();
    v32 = v70;
    v78 = v31;
    v33 = v4;
    sub_22ABDD838();
    v34 = v76;
    sub_22ABDD964();
    sub_22ABDD4E4();
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v34, v75);
    MEMORY[0x24BDAC7A8](v35);
    v64[-2] = v32;
    v36 = v74;
    v37 = v82;
    sub_22ABDE81C();
    v82 = v37;
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v32, v73);
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 32);
    v39 = (uint64_t)v68;
    v40 = v81;
    v38(v68, v36, v81);
    __swift_storeEnumTagSinglePayload(v39, 0, 1, v40);
    if (__swift_getEnumTagSinglePayload(v39, 1, v40) == 1)
    {
      sub_22A9A0C1C(v39, &qword_2540E8570);
      sub_22ABDEAEC();
      v66 = v29;
      v41 = OUTLINED_FUNCTION_81_4();
      v43 = v42;
      swift_bridgeObjectRelease();
      if ((v43 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v83 = v25;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B110D8);
        v44 = v81;
        sub_22ABDFA64();
        v25 = v83;
        swift_bridgeObjectRelease();
        v45 = (void (*)(char *, unint64_t, uint64_t))v38;
        v46 = (uint64_t)v65;
        v45(v65, v25[7] + *(_QWORD *)(v77 + 72) * v41, v44);
        v47 = v44;
        sub_22ABDFA7C();
        swift_bridgeObjectRelease();
        v48 = 0;
        v49 = v79;
        v4 = v33;
      }
      else
      {
        v48 = 1;
        v46 = (uint64_t)v65;
        v49 = v79;
        v4 = v33;
        v47 = v81;
      }
      __swift_storeEnumTagSinglePayload(v46, v48, 1, v47);
      swift_bridgeObjectRelease();
      sub_22A9A0C1C(v46, &qword_2540E8570);
      swift_release();
      goto LABEL_18;
    }
    v38(v69, v39, v40);
    swift_isUniquelyReferenced_nonNull_native();
    v83 = v25;
    v50 = v30;
    v51 = v29;
    v52 = OUTLINED_FUNCTION_81_4();
    if (__OFADD__(v25[2], (v53 & 1) == 0))
      break;
    v54 = v52;
    v55 = v53;
    v66 = (void (*)(unint64_t, uint64_t, uint64_t))v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B110D8);
    v4 = v33;
    if ((sub_22ABDFA64() & 1) != 0)
    {
      v56 = sub_22AA03688();
      if ((v55 & 1) != (v57 & 1))
        goto LABEL_23;
      v54 = v56;
    }
    v25 = v83;
    if ((v55 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v77 + 40))(v83[7] + *(_QWORD *)(v77 + 72) * v54, v69, v81);
    }
    else
    {
      v83[(v54 >> 6) + 8] |= 1 << v54;
      v58 = (_QWORD *)(v25[6] + 16 * v54);
      *v58 = v50;
      v58[1] = v51;
      v66(v25[7] + *(_QWORD *)(v77 + 72) * v54, (uint64_t)v69, v81);
      v59 = v25[2];
      v60 = __OFADD__(v59, 1);
      v61 = v59 + 1;
      if (v60)
        goto LABEL_22;
      v25[2] = v61;
      sub_22ABDEAEC();
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v49 = v79;
LABEL_18:
    v28 = v49 + 3;
    v27 = v80 - 1;
    if (v80 == 1)
      goto LABEL_19;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  sub_22ABE0190();
  __break(1u);
}

void sub_22AA074EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD v47[2];
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  OUTLINED_FUNCTION_12();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_22ABDDA0C();
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_87();
  v55 = v10;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_28_1();
  v54 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0();
  v53 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v59 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_87();
  v52 = v20;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_28_1();
  v51 = v22;
  sub_22AA06400(v5, v3, v7);
  OUTLINED_FUNCTION_68_5();
  sub_22A99D7D4(qword_255B0F3E8, type metadata accessor for LSTMFCN, (uint64_t)&unk_22ABEE338);
  v50 = v23;
  v58 = v7;
  v24 = sub_22ABDD814();
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v47[1] = v24;
    v48 = v1;
    v26 = v24 + 48;
    v27 = v1;
    v49 = v17;
    v28 = v51;
    while (1)
    {
      if (*(_QWORD *)(v27 + 16))
      {
        swift_retain();
        sub_22ABDEAEC();
        sub_22ABDEAEC();
        v29 = sub_22AA03688();
        if ((v30 & 1) != 0)
        {
          OUTLINED_FUNCTION_49((uint64_t)v17, *(_QWORD *)(v27 + 56) + *(_QWORD *)(v59 + 72) * v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16));
          v31 = (uint64_t)v17;
          v32 = 0;
        }
        else
        {
          v31 = (uint64_t)v17;
          v32 = 1;
        }
        OUTLINED_FUNCTION_73_2(v31, v32);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_3_8();
      }
      else
      {
        OUTLINED_FUNCTION_73_2((uint64_t)v17, 1);
        swift_retain();
      }
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18) == 1)
        break;
      v60 = v26;
      v33 = v59;
      OUTLINED_FUNCTION_49(v28, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32));
      v34 = v52;
      OUTLINED_FUNCTION_49(v52, v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16));
      sub_22A9A9038();
      v61 = v25;
      v35 = v55;
      v36 = v57;
      sub_22ABDE8F4();
      v37 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v37(v34, v18);
      v38 = v56;
      v39 = v54;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v54, v35, v36);
      v40 = v53;
      sub_22ABDD7F0();
      v27 = v48;
      v41 = v60;
      swift_release();
      v42 = v36;
      v17 = v49;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v42);
      v43 = v40;
      v44 = v61;
      sub_22A9A0C1C(v43, &qword_255B0DAB8);
      v37(v28, v18);
      v26 = v41 + 24;
      v25 = v44 - 1;
      if (!v25)
      {
        OUTLINED_FUNCTION_3_8();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    OUTLINED_FUNCTION_3_8();
    swift_bridgeObjectRelease();
    sub_22A9A0C1C((uint64_t)v17, &qword_2540E8570);
    sub_22A9A0888();
    v45 = OUTLINED_FUNCTION_53();
    *v46 = 0xD000000000000021;
    v46[1] = 0x800000022ABE28E0;
    swift_willThrow(v45);
    swift_release();
    sub_22A9A0B10(v58, type metadata accessor for LSTMFCN);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  OUTLINED_FUNCTION_16();
}

void sub_22AA078D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_42_7();
  type metadata accessor for LSTMFCN.ConvolutionBlock(v2);
  sub_22ABDD628();
  sub_22ABDD604();
  sub_22ABDD5F8();
  sub_22ABDDAB4();
  v3 = sub_22ABDD538();
  OUTLINED_FUNCTION_11_14(v0, v4, v5, v3);
  sub_22ABDD61C();
  sub_22A9A0C1C(v0, &qword_255B0DE30);
  sub_22ABDD604();
  sub_22ABDD874();
  OUTLINED_FUNCTION_17_18();
}

void sub_22AA079E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_45_9();
  v8 = sub_22ABDD718();
  OUTLINED_FUNCTION_56_7();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_6_26();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v8);
  sub_22AA06710(a2, v3, a1, v2, MEMORY[0x24BEE4AF8]);
  sub_22A9A0C1C(v2, &qword_255B0F3B0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v8);
  OUTLINED_FUNCTION_17_18();
}

uint64_t sub_22AA07AA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  char v14;

  v2 = a1 == 1836348268 && a2 == 0xE400000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x31766E6F63 && a2 == 0xE500000000000000;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x32766E6F63 && a2 == 0xE500000000000000;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x33766E6F63 && a2 == 0xE500000000000000;
        if (v8 || (sub_22ABDFF68() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 3237235 && a2 == 0xE300000000000000;
          if (v9 || (sub_22ABDFF68() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 3302771 && a2 == 0xE300000000000000;
            if (v10 || (sub_22ABDFF68() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x676E696C6F6F70 && a2 == 0xE700000000000000;
              if (v11 || (sub_22ABDFF68() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x65736E6564 && a2 == 0xE500000000000000;
                if (v12 || (sub_22ABDFF68() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x756F437373616C63 && a2 == 0xEA0000000000746ELL;
                  if (v13 || (sub_22ABDFF68() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else if (a1 == 0xD000000000000015 && a2 == 0x800000022ABE0ED0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    v14 = sub_22ABDFF68();
                    swift_bridgeObjectRelease();
                    if ((v14 & 1) != 0)
                      return 9;
                    else
                      return 10;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_22AA07E40()
{
  return 10;
}

uint64_t sub_22AA07E48(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA07E74 + 4 * byte_22ABEDFA0[a1]))(1836348268, 0xE400000000000000);
}

uint64_t sub_22AA07E74()
{
  return 0x31766E6F63;
}

uint64_t sub_22AA07E88()
{
  return 0x32766E6F63;
}

uint64_t sub_22AA07E9C()
{
  return 0x33766E6F63;
}

uint64_t sub_22AA07EB0()
{
  return 3237235;
}

uint64_t sub_22AA07EC0()
{
  return 3302771;
}

uint64_t sub_22AA07ED4()
{
  return 0x676E696C6F6F70;
}

uint64_t sub_22AA07EEC()
{
  return 0x65736E6564;
}

uint64_t sub_22AA07F00()
{
  return 0x756F437373616C63;
}

unint64_t sub_22AA07F1C()
{
  return 0xD000000000000015;
}

void sub_22AA07F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B110B8);
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_29_14();
  sub_22AA0A398();
  OUTLINED_FUNCTION_19_16();
  sub_22ABDD73C();
  sub_22A99D7D4(&qword_255B110C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BC38], MEMORY[0x24BE6BC48]);
  OUTLINED_FUNCTION_84_4();
  OUTLINED_FUNCTION_5_24();
  if (!v0)
  {
    OUTLINED_FUNCTION_68_5();
    v3 = OUTLINED_FUNCTION_52_8();
    type metadata accessor for LSTMFCN.ConvolutionBlock(v3);
    sub_22A99D7D4(&qword_255B110C8, type metadata accessor for LSTMFCN.ConvolutionBlock, (uint64_t)&unk_22ABEE164);
    OUTLINED_FUNCTION_3_30();
    OUTLINED_FUNCTION_3_30();
    OUTLINED_FUNCTION_3_30();
    OUTLINED_FUNCTION_67_5();
    sub_22A99D7D4(&qword_255B110D0, type metadata accessor for LSTMFCN.SqueezeExciteBlock, (uint64_t)&unk_22ABEE288);
    OUTLINED_FUNCTION_3_30();
    OUTLINED_FUNCTION_3_30();
    sub_22AA0A2F4();
    OUTLINED_FUNCTION_5_24();
    OUTLINED_FUNCTION_26_1();
    sub_22A99D7D4(&qword_255B11050, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BCD0], MEMORY[0x24BE6BCE0]);
    OUTLINED_FUNCTION_5_24();
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_63();
  }
  OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_16();
}

void sub_22AA081C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;

  OUTLINED_FUNCTION_12();
  v52 = v0;
  v4 = v3;
  v38 = v5;
  v48 = OUTLINED_FUNCTION_26_1();
  v46 = *(_QWORD *)(v48 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_43_5(v7, v36);
  v41 = OUTLINED_FUNCTION_67_5();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_87();
  v40 = v9;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_28_1();
  v42 = v11;
  v44 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_40_8();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v36 - v17;
  v19 = sub_22ABDD73C();
  v49 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_44_9(v21, v36);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11090);
  v22 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_23_1();
  v54 = OUTLINED_FUNCTION_68_5();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_0();
  v53 = v24;
  v25 = v4[3];
  v51 = v4;
  __swift_project_boxed_opaque_existential_1(v4, v25);
  sub_22AA0A398();
  v45 = v2;
  v26 = v52;
  sub_22ABE0298();
  v47 = v19;
  if (v26)
  {
    OUTLINED_FUNCTION_77_3();
  }
  else
  {
    v37 = v1;
    v52 = v22;
    sub_22A99D7D4(&qword_255B110A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BC38], MEMORY[0x24BE6BC50]);
    OUTLINED_FUNCTION_84_4();
    v27 = v43;
    OUTLINED_FUNCTION_79_3();
    v28 = v53;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v53, v27, v19);
    OUTLINED_FUNCTION_51_8();
    sub_22A99D7D4(&qword_255B110A8, type metadata accessor for LSTMFCN.ConvolutionBlock, (uint64_t)&unk_22ABEE18C);
    OUTLINED_FUNCTION_79_3();
    v29 = (int *)v54;
    sub_22AA0A3D4((uint64_t)v18, v28 + *(int *)(v54 + 20), type metadata accessor for LSTMFCN.ConvolutionBlock);
    OUTLINED_FUNCTION_69_5();
    sub_22ABDFC8C();
    sub_22AA0A3D4((uint64_t)v16, v28 + v29[6], type metadata accessor for LSTMFCN.ConvolutionBlock);
    v30 = v37;
    OUTLINED_FUNCTION_69_5();
    OUTLINED_FUNCTION_39_9();
    sub_22AA0A3D4(v30, v28 + v29[7], type metadata accessor for LSTMFCN.ConvolutionBlock);
    sub_22A99D7D4(&qword_255B110B0, type metadata accessor for LSTMFCN.SqueezeExciteBlock, (uint64_t)&unk_22ABEE2B0);
    v31 = v42;
    OUTLINED_FUNCTION_34_12();
    sub_22AA0A3D4(v31, v28 + v29[8], type metadata accessor for LSTMFCN.SqueezeExciteBlock);
    v32 = v40;
    OUTLINED_FUNCTION_34_12();
    sub_22AA0A3D4(v32, v28 + v29[9], type metadata accessor for LSTMFCN.SqueezeExciteBlock);
    sub_22AA0A2B8();
    sub_22ABDFC8C();
    sub_22A99D7D4(&qword_255B11038, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BCD0], MEMORY[0x24BE6BCE8]);
    v33 = v39;
    sub_22ABDFC8C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v28 + v29[11], v33, v48);
    v56 = 8;
    *(_QWORD *)(v28 + v29[12]) = OUTLINED_FUNCTION_78_3();
    v55 = 9;
    v34 = OUTLINED_FUNCTION_78_3();
    OUTLINED_FUNCTION_12_23(v45, *(uint64_t (**)(uint64_t, _QWORD))(v52 + 8));
    v35 = v53;
    *(_QWORD *)(v53 + *(int *)(v54 + 52)) = v34;
    sub_22AA0A36C(v35, v38, type metadata accessor for LSTMFCN);
    OUTLINED_FUNCTION_77_3();
    sub_22A9A0B10(v35, type metadata accessor for LSTMFCN);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AA08840()
{
  sub_22AA09D28();
}

uint64_t sub_22AA08858()
{
  unsigned __int8 *v0;

  return sub_22AA07E48(*v0);
}

uint64_t sub_22AA08860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA07AA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA08884@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA07E40();
  *a1 = result;
  return result;
}

uint64_t sub_22AA088A8()
{
  sub_22AA0A398();
  return sub_22ABE02EC();
}

uint64_t sub_22AA088D0()
{
  sub_22AA0A398();
  return sub_22ABE02F8();
}

void sub_22AA088FC()
{
  sub_22AA081C0();
}

void sub_22AA08910()
{
  sub_22AA07F38();
}

uint64_t sub_22AA08924()
{
  sub_22A99D7D4(qword_255B0F3E8, type metadata accessor for LSTMFCN, (uint64_t)&unk_22ABEE338);
  return sub_22ABDD82C();
}

uint64_t sub_22AA08974()
{
  sub_22A99D7D4(qword_255B0F3E8, type metadata accessor for LSTMFCN, (uint64_t)&unk_22ABEE338);
  return sub_22ABDD844();
}

void sub_22AA089CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v3 = sub_22ABDDA0C();
  OUTLINED_FUNCTION_56_7();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_40_8();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_50_8();
  type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  sub_22ABDD8A4();
  sub_22ABDD7FC();
  OUTLINED_FUNCTION_88_1();
  sub_22ABDD7FC();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0, v3);
  sub_22ABDD748();
  v6(v1, v3);
  OUTLINED_FUNCTION_17_18();
}

uint64_t sub_22AA08AA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1986948963 && a2 == 0xE400000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F4E6863746162 && a2 == 0xE90000000000006DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA08B88(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726F4E6863746162;
  else
    return 1986948963;
}

uint64_t sub_22AA08BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11078);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_29_14();
  sub_22AA0A330();
  OUTLINED_FUNCTION_19_16();
  sub_22ABDD8A4();
  sub_22A99D7D4(&qword_255B11080, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BDD0], MEMORY[0x24BE6BDE0]);
  OUTLINED_FUNCTION_84_4();
  OUTLINED_FUNCTION_13_27();
  if (!v0)
  {
    type metadata accessor for LSTMFCN.ConvolutionBlock(0);
    OUTLINED_FUNCTION_52_8();
    sub_22ABDDAE4();
    sub_22A99D7D4(&qword_255B11088, (uint64_t (*)(uint64_t))MEMORY[0x24BE6C190], MEMORY[0x24BE6C1A0]);
    OUTLINED_FUNCTION_13_27();
  }
  return OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void sub_22AA08CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_12();
  v5 = v4;
  v15 = v6;
  v7 = sub_22ABDDAE4();
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_14_7();
  v17 = sub_22ABDD8A4();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v16 = v10;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11058);
  MEMORY[0x24BDAC7A8](v18);
  v11 = OUTLINED_FUNCTION_45_9();
  type metadata accessor for LSTMFCN.ConvolutionBlock(v11);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_23_1();
  v14 = v2 + *(int *)(v13 + 20);
  sub_22ABDD628();
  sub_22ABDD604();
  sub_22ABDD5F8();
  sub_22ABDDAB4();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_22AA0A330();
  sub_22ABE0298();
  if (v0)
  {
    OUTLINED_FUNCTION_8_0();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    sub_22A99D7D4(&qword_255B11068, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BDD0], MEMORY[0x24BE6BDE8]);
    OUTLINED_FUNCTION_84_4();
    OUTLINED_FUNCTION_39_9();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v16, v17);
    OUTLINED_FUNCTION_51_8();
    sub_22A99D7D4(&qword_255B11070, (uint64_t (*)(uint64_t))MEMORY[0x24BE6C190], MEMORY[0x24BE6C1A8]);
    OUTLINED_FUNCTION_39_9();
    OUTLINED_FUNCTION_18_19();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))(v14, v1, v20);
    sub_22AA0A36C(v2, v15, type metadata accessor for LSTMFCN.ConvolutionBlock);
    OUTLINED_FUNCTION_8_0();
    sub_22A9A0B10(v2, type metadata accessor for LSTMFCN.ConvolutionBlock);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA08F70()
{
  char *v0;

  return sub_22AA08B88(*v0);
}

uint64_t sub_22AA08F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA08AA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA08F9C()
{
  sub_22AA0A330();
  return sub_22ABE02EC();
}

uint64_t sub_22AA08FC4()
{
  sub_22AA0A330();
  return sub_22ABE02F8();
}

void sub_22AA08FF0()
{
  sub_22AA08CFC();
}

uint64_t sub_22AA09004()
{
  return sub_22AA08BBC();
}

uint64_t sub_22AA09018()
{
  sub_22A99D7D4(&qword_255B11008, type metadata accessor for LSTMFCN.ConvolutionBlock, (uint64_t)&unk_22ABEE1B4);
  return sub_22ABDD82C();
}

uint64_t sub_22AA09068()
{
  sub_22A99D7D4(&qword_255B11008, type metadata accessor for LSTMFCN.ConvolutionBlock, (uint64_t)&unk_22ABEE1B4);
  return sub_22ABDD844();
}

void sub_22AA090C0()
{
  sub_22A99D7D4(&qword_255B10F70, type metadata accessor for LSTMFCN.ConvolutionBlock, (uint64_t)&unk_22ABEE148);
}

void sub_22AA090EC()
{
  sub_22A99D7D4(&qword_255B10F78, type metadata accessor for LSTMFCN.ConvolutionBlock, (uint64_t)&unk_22ABEE118);
}

void sub_22AA09118()
{
  sub_22A99D7D4(&qword_255B10F80, type metadata accessor for LSTMFCN.ConvolutionBlock, (uint64_t)&unk_22ABEE0F0);
}

void sub_22AA09144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_22ABDD4F0();
  v11 = *(_QWORD *)(v3 - 8);
  v12 = v3;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_14_7();
  v5 = sub_22ABDDA0C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_13_20();
  v8 = MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_50_8();
  sub_22ABDD7FC();
  OUTLINED_FUNCTION_26_1();
  sub_22ABDD7FC();
  sub_22ABDD748();
  OUTLINED_FUNCTION_20_21(v2);
  OUTLINED_FUNCTION_16_19();
  OUTLINED_FUNCTION_14_21();
  OUTLINED_FUNCTION_67_5();
  sub_22ABDD7FC();
  sub_22ABDDA84();
  OUTLINED_FUNCTION_20_21(v2);
  OUTLINED_FUNCTION_16_19();
  OUTLINED_FUNCTION_14_21();
  sub_22ABDD8F8();
  OUTLINED_FUNCTION_16_19();
  OUTLINED_FUNCTION_14_21();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v0, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v9 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v9 + 16) = xmmword_22ABEDF90;
  *(int64x2_t *)(v9 + 32) = vdupq_n_s64(1uLL);
  sub_22ABDD964();
  v10 = sub_22ABDD508();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v12);
  *(_QWORD *)(v9 + 48) = v10;
  sub_22ABDD97C();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_20_21(v2);
  OUTLINED_FUNCTION_16_19();
  OUTLINED_FUNCTION_14_21();
  sub_22ABDD91C();
  OUTLINED_FUNCTION_16_19();
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AA09358(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x676E696C6F6F70 && a2 == 0xE700000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x3165736E6564 && a2 == 0xE600000000000000;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x3265736E6564 && a2 == 0xE600000000000000;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x800000022ABE2910)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_22ABDFF68();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_22AA094FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA09530 + 4 * byte_22ABEDFAA[a1]))(0x676E696C6F6F70, 0xE700000000000000);
}

uint64_t sub_22AA09530()
{
  return 0x3165736E6564;
}

uint64_t sub_22AA09544()
{
  return 0x3265736E6564;
}

unint64_t sub_22AA09558()
{
  return 0xD000000000000011;
}

void sub_22AA09574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11040);
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_29_14();
  sub_22AA0A27C();
  OUTLINED_FUNCTION_19_16();
  sub_22AA0A2F4();
  OUTLINED_FUNCTION_13_27();
  if (!v0)
  {
    OUTLINED_FUNCTION_52_8();
    sub_22ABDD7D8();
    sub_22A99D7D4(&qword_255B11050, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BCD0], MEMORY[0x24BE6BCE0]);
    OUTLINED_FUNCTION_13_27();
    OUTLINED_FUNCTION_67_5();
    OUTLINED_FUNCTION_13_27();
    OUTLINED_FUNCTION_25_13();
  }
  OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_16();
}

void sub_22AA096BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_12();
  v4 = v3;
  v13 = v5;
  v17 = OUTLINED_FUNCTION_26_1();
  v15 = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_13_20();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_50_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B11020);
  OUTLINED_FUNCTION_56_7();
  MEMORY[0x24BDAC7A8](v8);
  v14 = OUTLINED_FUNCTION_67_5();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v16 = v10;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_22AA0A27C();
  sub_22ABE0298();
  if (v0)
  {
    OUTLINED_FUNCTION_8_0();
  }
  else
  {
    sub_22AA0A2B8();
    OUTLINED_FUNCTION_47_7();
    OUTLINED_FUNCTION_51_8();
    sub_22A99D7D4(&qword_255B11038, (uint64_t (*)(uint64_t))MEMORY[0x24BE6BCD0], MEMORY[0x24BE6BCE8]);
    OUTLINED_FUNCTION_47_7();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
    v12(v16, v1, v17);
    OUTLINED_FUNCTION_47_7();
    v12(v16 + *(int *)(v14 + 24), v2, v17);
    v11 = sub_22ABDFC74();
    OUTLINED_FUNCTION_15_18();
    *(_QWORD *)(v16 + *(int *)(v14 + 28)) = v11;
    sub_22AA0A36C(v16, v13, type metadata accessor for LSTMFCN.SqueezeExciteBlock);
    OUTLINED_FUNCTION_8_0();
    sub_22A9A0B10(v16, type metadata accessor for LSTMFCN.SqueezeExciteBlock);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA09978()
{
  unsigned __int8 *v0;

  return sub_22AA094FC(*v0);
}

uint64_t sub_22AA09980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA09358(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA099A4()
{
  sub_22AA0A27C();
  return sub_22ABE02EC();
}

uint64_t sub_22AA099CC()
{
  sub_22AA0A27C();
  return sub_22ABE02F8();
}

void sub_22AA099F8()
{
  sub_22AA096BC();
}

void sub_22AA09A0C()
{
  sub_22AA09574();
}

uint64_t sub_22AA09A20()
{
  sub_22A99D7D4(&qword_255B11010, type metadata accessor for LSTMFCN.SqueezeExciteBlock, (uint64_t)&unk_22ABEE2D8);
  return sub_22ABDD82C();
}

uint64_t sub_22AA09A70()
{
  sub_22A99D7D4(&qword_255B11010, type metadata accessor for LSTMFCN.SqueezeExciteBlock, (uint64_t)&unk_22ABEE2D8);
  return sub_22ABDD844();
}

void sub_22AA09AC8()
{
  sub_22A99D7D4(&qword_255B10F88, type metadata accessor for LSTMFCN.SqueezeExciteBlock, (uint64_t)&unk_22ABEE26C);
}

void sub_22AA09AF4()
{
  sub_22A99D7D4(&qword_255B10F90, type metadata accessor for LSTMFCN.SqueezeExciteBlock, (uint64_t)&unk_22ABEE23C);
}

void sub_22AA09B20()
{
  sub_22A99D7D4(&qword_255B10F98, type metadata accessor for LSTMFCN.SqueezeExciteBlock, (uint64_t)&unk_22ABEE214);
}

void sub_22AA09B4C()
{
  sub_22A99D7D4(&qword_255B10FA0, type metadata accessor for LSTMFCN, (uint64_t)&unk_22ABEE084);
}

void sub_22AA09B78()
{
  sub_22A99D7D4(&qword_255B10FA8, type metadata accessor for LSTMFCN, (uint64_t)&unk_22ABEE054);
}

void sub_22AA09BA4()
{
  sub_22A99D7D4(&qword_255B10FB0, type metadata accessor for LSTMFCN, (uint64_t)&unk_22ABEE02C);
}

uint64_t sub_22AA09BD0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x756F437373616C63 && a2 == 0xEA0000000000746ELL;
  if (v3 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000022ABE0ED0 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_22AA09D28()
{
  sub_22ABE0244();
  sub_22ABE0250();
  sub_22ABE0280();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_22AA09D64(char a1)
{
  if (!a1)
    return 0x756F437373616C63;
  if (a1 == 1)
    return 0xD000000000000015;
  return 0x6574656D61726170;
}

void sub_22AA09DC4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10FB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_6_4();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_22AA0A0F0();
  sub_22ABE02B0();
  OUTLINED_FUNCTION_25_13();
  if (!v0)
  {
    OUTLINED_FUNCTION_51_8();
    OUTLINED_FUNCTION_25_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10FC8);
    sub_22AA0A12C();
    OUTLINED_FUNCTION_13_27();
  }
  OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA09ED8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10FD8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_34();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA0A0F0();
  sub_22ABE0298();
  v3 = OUTLINED_FUNCTION_61_5();
  OUTLINED_FUNCTION_51_8();
  OUTLINED_FUNCTION_61_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10FC8);
  sub_22AA0A1B0();
  OUTLINED_FUNCTION_79_3();
  OUTLINED_FUNCTION_13_11();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_22AA0A02C()
{
  char *v0;

  return sub_22AA09D64(*v0);
}

uint64_t sub_22AA0A034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA09BD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA0A058()
{
  sub_22AA0A0F0();
  return sub_22ABE02EC();
}

uint64_t sub_22AA0A080()
{
  sub_22AA0A0F0();
  return sub_22ABE02F8();
}

uint64_t sub_22AA0A0A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_22AA09ED8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

void sub_22AA0A0D4()
{
  sub_22AA09DC4();
}

unint64_t sub_22AA0A0F0()
{
  unint64_t result;

  result = qword_255B10FC0;
  if (!qword_255B10FC0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE7C4, &type metadata for LSTMFCN.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B10FC0);
  }
  return result;
}

unint64_t sub_22AA0A12C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255B10FD0;
  if (!qword_255B10FD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B10FC8);
    v2 = sub_22A9B9F80(&qword_255B0EC58, MEMORY[0x24BEE14F8], MEMORY[0x24BDBFCD8]);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255B10FD0);
  }
  return result;
}

unint64_t sub_22AA0A1B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255B10FE0;
  if (!qword_255B10FE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B10FC8);
    v2 = sub_22A9B9F80(&qword_255B0EC68, MEMORY[0x24BEE1520], MEMORY[0x24BDBFCE8]);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255B10FE0);
  }
  return result;
}

uint64_t sub_22AA0A234(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22AA0A27C()
{
  unint64_t result;

  result = qword_255B11028;
  if (!qword_255B11028)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE774, &type metadata for LSTMFCN.SqueezeExciteBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11028);
  }
  return result;
}

unint64_t sub_22AA0A2B8()
{
  unint64_t result;

  result = qword_255B11030;
  if (!qword_255B11030)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BE6BA58], MEMORY[0x24BE6BA48]);
    atomic_store(result, (unint64_t *)&qword_255B11030);
  }
  return result;
}

unint64_t sub_22AA0A2F4()
{
  unint64_t result;

  result = qword_255B11048;
  if (!qword_255B11048)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BE6BA50], MEMORY[0x24BE6BA48]);
    atomic_store(result, (unint64_t *)&qword_255B11048);
  }
  return result;
}

unint64_t sub_22AA0A330()
{
  unint64_t result;

  result = qword_255B11060;
  if (!qword_255B11060)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE724, &type metadata for LSTMFCN.ConvolutionBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11060);
  }
  return result;
}

void sub_22AA0A36C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_35(a1, a2, a3);
  OUTLINED_FUNCTION_20_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_0_5();
}

unint64_t sub_22AA0A398()
{
  unint64_t result;

  result = qword_255B11098;
  if (!qword_255B11098)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE6D4, &type metadata for LSTMFCN.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11098);
  }
  return result;
}

void sub_22AA0A3D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_35(a1, a2, a3);
  OUTLINED_FUNCTION_20_2(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_0_5();
}

uint64_t getEnumTagSinglePayload for LSTMFCN.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LSTMFCN.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_22AA0A4D4 + 4 * byte_22ABEDFB3[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_22AA0A508 + 4 * byte_22ABEDFAE[v4]))();
}

uint64_t sub_22AA0A508(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA0A510(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA0A518);
  return result;
}

uint64_t sub_22AA0A524(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA0A52CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_22AA0A530(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA0A538(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LSTMFCN.CodingKeys()
{
  return &type metadata for LSTMFCN.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LSTMFCN.ConvolutionBlock.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA0A5A0 + 4 * byte_22ABEDFBD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA0A5D4 + 4 * byte_22ABEDFB8[v4]))();
}

uint64_t sub_22AA0A5D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA0A5DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA0A5E4);
  return result;
}

uint64_t sub_22AA0A5F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA0A5F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA0A5FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA0A604(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LSTMFCN.ConvolutionBlock.CodingKeys()
{
  return &type metadata for LSTMFCN.ConvolutionBlock.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LSTMFCN.SqueezeExciteBlock.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22AA0A66C + 4 * byte_22ABEDFC7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22AA0A6A0 + 4 * byte_22ABEDFC2[v4]))();
}

uint64_t sub_22AA0A6A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA0A6A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA0A6B0);
  return result;
}

uint64_t sub_22AA0A6BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA0A6C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22AA0A6C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA0A6D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LSTMFCN.SqueezeExciteBlock.CodingKeys()
{
  return &type metadata for LSTMFCN.SqueezeExciteBlock.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LSTMFCN.Storage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22AA0A738 + 4 * byte_22ABEDFD1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22AA0A76C + 4 * byte_22ABEDFCC[v4]))();
}

uint64_t sub_22AA0A76C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA0A774(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA0A77CLL);
  return result;
}

uint64_t sub_22AA0A788(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA0A790);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22AA0A794(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA0A79C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LSTMFCN.Storage.CodingKeys()
{
  return &type metadata for LSTMFCN.Storage.CodingKeys;
}

unint64_t sub_22AA0A7BC()
{
  unint64_t result;

  result = qword_255B110E0;
  if (!qword_255B110E0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE484, &type metadata for LSTMFCN.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B110E0);
  }
  return result;
}

unint64_t sub_22AA0A7FC()
{
  unint64_t result;

  result = qword_255B110E8;
  if (!qword_255B110E8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE53C, &type metadata for LSTMFCN.SqueezeExciteBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B110E8);
  }
  return result;
}

unint64_t sub_22AA0A83C()
{
  unint64_t result;

  result = qword_255B110F0;
  if (!qword_255B110F0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE5F4, &type metadata for LSTMFCN.ConvolutionBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B110F0);
  }
  return result;
}

unint64_t sub_22AA0A87C()
{
  unint64_t result;

  result = qword_255B110F8;
  if (!qword_255B110F8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE6AC, &type metadata for LSTMFCN.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B110F8);
  }
  return result;
}

unint64_t sub_22AA0A8BC()
{
  unint64_t result;

  result = qword_255B11100;
  if (!qword_255B11100)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE61C, &type metadata for LSTMFCN.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11100);
  }
  return result;
}

unint64_t sub_22AA0A8FC()
{
  unint64_t result;

  result = qword_255B11108;
  if (!qword_255B11108)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE644, &type metadata for LSTMFCN.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11108);
  }
  return result;
}

unint64_t sub_22AA0A93C()
{
  unint64_t result;

  result = qword_255B11110;
  if (!qword_255B11110)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE564, &type metadata for LSTMFCN.ConvolutionBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11110);
  }
  return result;
}

unint64_t sub_22AA0A97C()
{
  unint64_t result;

  result = qword_255B11118;
  if (!qword_255B11118)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE58C, &type metadata for LSTMFCN.ConvolutionBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11118);
  }
  return result;
}

unint64_t sub_22AA0A9BC()
{
  unint64_t result;

  result = qword_255B11120;
  if (!qword_255B11120)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE4AC, &type metadata for LSTMFCN.SqueezeExciteBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11120);
  }
  return result;
}

unint64_t sub_22AA0A9FC()
{
  unint64_t result;

  result = qword_255B11128;
  if (!qword_255B11128)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE4D4, &type metadata for LSTMFCN.SqueezeExciteBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11128);
  }
  return result;
}

unint64_t sub_22AA0AA3C()
{
  unint64_t result;

  result = qword_255B11130;
  if (!qword_255B11130)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE3F4, &type metadata for LSTMFCN.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11130);
  }
  return result;
}

unint64_t sub_22AA0AA7C()
{
  unint64_t result;

  result = qword_255B11138;
  if (!qword_255B11138)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEE41C, &type metadata for LSTMFCN.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B11138);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_30()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 112) + 8))(v0, *(_QWORD *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_3_30()
{
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_5_24()
{
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_6_32@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_7_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_8_25(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_12_23@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_13_27()
{
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_14_21()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_15_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_16_19()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_18_19()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 88) + 8))(v0, *(_QWORD *)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_19_16()
{
  return sub_22ABE02B0();
}

uint64_t OUTLINED_FUNCTION_20_21(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_21_21()
{
  return sub_22ABDD7C0();
}

uint64_t OUTLINED_FUNCTION_22_19()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
  return 0;
}

void OUTLINED_FUNCTION_24_16()
{
  uint64_t v0;
  uint64_t *v1;

  sub_22A9A0C1C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_25_13()
{
  return sub_22ABDFD34();
}

uint64_t OUTLINED_FUNCTION_26_13()
{
  return sub_22ABDD610();
}

_QWORD *OUTLINED_FUNCTION_29_14()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_34_12()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_36_8()
{
  return sub_22ABDD5E0();
}

uint64_t OUTLINED_FUNCTION_38_11()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_39_9()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_42_7()
{
  return 0;
}

void OUTLINED_FUNCTION_43_5(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_44_9(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_45_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_47_7()
{
  return sub_22ABDFC8C();
}

void OUTLINED_FUNCTION_51_8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

uint64_t OUTLINED_FUNCTION_52_8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_53_7()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_54_5()
{
  return sub_22ABDD7FC();
}

uint64_t OUTLINED_FUNCTION_61_5()
{
  return sub_22ABDFC74();
}

uint64_t OUTLINED_FUNCTION_65_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_67_5()
{
  return type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
}

uint64_t OUTLINED_FUNCTION_68_5()
{
  return type metadata accessor for LSTMFCN(0);
}

uint64_t OUTLINED_FUNCTION_69_5()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_71_4(uint64_t a1)
{
  uint64_t *v1;

  sub_22A9A0C1C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_73_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_74_4()
{
  sub_22AA35CF0();
}

uint64_t OUTLINED_FUNCTION_76_4()
{
  return sub_22ABDD7FC();
}

uint64_t OUTLINED_FUNCTION_77_3()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_78_3()
{
  return sub_22ABDFC74();
}

uint64_t OUTLINED_FUNCTION_79_3()
{
  return sub_22ABDFC8C();
}

unint64_t OUTLINED_FUNCTION_81_4()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_83_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_88_1()
{
  return sub_22ABDDAE4();
}

uint64_t OUTLINED_FUNCTION_90_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void sub_22AA0AE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_25_12();
    OUTLINED_FUNCTION_16_1();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = OUTLINED_FUNCTION_91_2();
      v5 = OUTLINED_FUNCTION_175(v4);
      do
      {
        v7 = v5 + 8 * v6++;
        *(_QWORD *)(v7 + 32) = a1;
      }
      while (a2 != v6);
    }
    OUTLINED_FUNCTION_33_13();
  }
}

void sub_22AA0AEEC(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_25_12();
    OUTLINED_FUNCTION_16_1();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      v4 = OUTLINED_FUNCTION_91_2();
      v5 = OUTLINED_FUNCTION_175(v4);
      do
      {
        v7 = v5 + 8 * v6++;
        *(double *)(v7 + 32) = a2;
      }
      while (a1 != v6);
    }
    OUTLINED_FUNCTION_127_0();
  }
}

uint64_t sub_22AA0AF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_25_12();
    result = OUTLINED_FUNCTION_16_1();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v3 = sub_22ABDE468();
      v4 = sub_22ABDF074();
      *(_QWORD *)(v4 + 16) = a2;
      v5 = *(_QWORD *)(v3 - 8);
      v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      OUTLINED_FUNCTION_159(v4 + v6);
      v7 = a2 - 1;
      if (a2 != 1)
      {
        v8 = *(_QWORD *)(v5 + 72);
        v9 = v4 + v8 + v6;
        do
        {
          OUTLINED_FUNCTION_159(v9);
          v9 += v8;
          --v7;
        }
        while (v7);
      }
    }
    else
    {
      v4 = MEMORY[0x24BEE4AF8];
    }
    v10 = sub_22ABDE468();
    OUTLINED_FUNCTION_135_0(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v10 - 8) + 8));
    return v4;
  }
  return result;
}

void sub_22AA0B064(uint64_t a1, float a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_25_12();
    OUTLINED_FUNCTION_16_1();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      v4 = OUTLINED_FUNCTION_91_2();
      v5 = OUTLINED_FUNCTION_175(v4);
      do
      {
        v7 = v5 + 4 * v6++;
        *(float *)(v7 + 32) = a2;
      }
      while (a1 != v6);
    }
    OUTLINED_FUNCTION_127_0();
  }
}

uint64_t sub_22AA0B0E4(char a1, size_t a2)
{
  uint64_t v4;
  uint64_t result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_25_12();
    result = OUTLINED_FUNCTION_16_1();
    __break(1u);
  }
  else
  {
    if (!a2)
      return MEMORY[0x24BEE4AF8];
    v4 = OUTLINED_FUNCTION_91_2();
    *(_QWORD *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1 & 1, a2);
    return v4;
  }
  return result;
}

void sub_22AA0B174(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_25_12();
    OUTLINED_FUNCTION_16_1();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = OUTLINED_FUNCTION_91_2();
      v5 = OUTLINED_FUNCTION_175(v4);
      do
      {
        v7 = v5 + 4 * v6++;
        *(_DWORD *)(v7 + 32) = a1;
      }
      while (a2 != v6);
    }
    OUTLINED_FUNCTION_33_13();
  }
}

float LinearTimeSeriesForecaster.configuration.getter@<S0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  float result;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;
  __int128 v7;

  result = *(float *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_DWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_BYTE *)(v1 + 64);
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v7;
  *(float *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  return result;
}

uint64_t LinearTimeSeriesForecaster.inputWindowSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t LinearTimeSeriesForecaster.forecastWindowSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

float LinearTimeSeriesForecaster.init(configuration:)@<S0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  float result;
  uint64_t v11;
  __n128 v12;
  __int128 v13;
  __int128 v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  __n128 v20;
  float v21;
  uint64_t v22;

  v13 = *a1;
  v3 = *((_QWORD *)a1 + 2);
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_DWORD *)a1 + 8);
  v6 = *((_QWORD *)a1 + 5);
  v7 = *((_DWORD *)a1 + 12);
  v8 = *((_QWORD *)a1 + 7);
  v9 = *((_BYTE *)a1 + 64);
  v14 = xmmword_22ABEE820;
  v15 = 1008981770;
  v16 = 5;
  v17 = 1000593162;
  v18 = 0;
  v19 = 1;
  MultivariateLinearRegressor.init(configuration:)((__n128 *)&v14, &v20);
  result = v21;
  v11 = v22;
  v12 = v20;
  *(_OWORD *)a2 = v13;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_DWORD *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = v6;
  *(_DWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = v8;
  *(_BYTE *)(a2 + 64) = v9;
  *(__n128 *)(a2 + 72) = v12;
  *(float *)(a2 + 88) = result;
  *(_QWORD *)(a2 + 96) = v11;
  *(_DWORD *)(a2 + 104) = v7;
  *(_QWORD *)(a2 + 112) = v8;
  *(_BYTE *)(a2 + 120) = v9;
  return result;
}

uint64_t LinearTimeSeriesForecaster.fitted<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int v20;

  *(_QWORD *)(v8 + 472) = a6;
  *(_QWORD *)(v8 + 480) = a7;
  *(_QWORD *)(v8 + 456) = a4;
  *(_QWORD *)(v8 + 464) = a5;
  *(_QWORD *)(v8 + 440) = a2;
  *(_QWORD *)(v8 + 448) = a3;
  *(_QWORD *)(v8 + 432) = a1;
  v10 = *(_QWORD *)(a5 + 16);
  *(_QWORD *)(v8 + 488) = v10;
  v11 = *(_QWORD *)(a5 + 24);
  *(_QWORD *)(v8 + 496) = v11;
  v12 = type metadata accessor for TimeSeriesForecasterAnnotatedWindows(0, v10, v11, a4);
  *(_QWORD *)(v8 + 504) = v12;
  *(_QWORD *)(v8 + 512) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 520) = OUTLINED_FUNCTION_0_0();
  sub_22ABDE8DC();
  *(_QWORD *)(v8 + 528) = OUTLINED_FUNCTION_0_0();
  v13 = sub_22ABDE8A0();
  *(_QWORD *)(v8 + 536) = v13;
  v17 = OUTLINED_FUNCTION_101_1(v13, v14, v15, v16);
  *(_QWORD *)(v8 + 544) = v17;
  *(_QWORD *)(v8 + 552) = OUTLINED_FUNCTION_75_4();
  sub_22ABDF5D8();
  *(_QWORD *)(v8 + 560) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v8 + 568) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 576) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v8 + 584) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v8 + 592) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v8 + 600) = OUTLINED_FUNCTION_5_17();
  v18 = OUTLINED_FUNCTION_161();
  *(_QWORD *)(v8 + 608) = v18;
  *(_QWORD *)(v8 + 616) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v8 + 624) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v8 + 632) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v8 + 640) = OUTLINED_FUNCTION_29_8();
  *(_QWORD *)(v8 + 648) = OUTLINED_FUNCTION_29_8();
  *(_QWORD *)(v8 + 656) = *(_QWORD *)(a6 - 8);
  *(_QWORD *)(v8 + 664) = OUTLINED_FUNCTION_0_0();
  v19 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v8 + 672) = *(_OWORD *)v7;
  *(_OWORD *)(v8 + 688) = v19;
  OUTLINED_FUNCTION_114();
  *(_DWORD *)(v8 + 372) = v20;
  *(_QWORD *)(v8 + 704) = *(_QWORD *)(v7 + 40);
  *(_DWORD *)(v8 + 736) = *(_DWORD *)(v7 + 48);
  *(_DWORD *)(v8 + 740) = *(_DWORD *)(v7 + 52);
  *(_QWORD *)(v8 + 712) = *(_QWORD *)(v7 + 56);
  OUTLINED_FUNCTION_17_19();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA0B4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  unsigned __int8 v50;
  float v51;
  __n128 v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD, _QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 544);
  OUTLINED_FUNCTION_126_0(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 656));
  v3 = OUTLINED_FUNCTION_92_1();
  *(_QWORD *)(v0 + 416) = v3;
  v4 = OUTLINED_FUNCTION_89_1();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v4);
  v59 = v4;
  sub_22ABDF404();
  OUTLINED_FUNCTION_106_0(v1, 1, v2);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 616);
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_27_16();
    *v7 = v8;
    v7[1] = 0x800000022ABEE810;
    v7[2] = 0;
    v7[3] = 0;
    OUTLINED_FUNCTION_118_0(v9, (uint64_t)v7, 2);
LABEL_15:
    OUTLINED_FUNCTION_34_13();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_174();
    return OUTLINED_FUNCTION_16_20(*(uint64_t (**)(void))(v0 + 8));
  }
  v10 = *(_QWORD *)(v0 + 648);
  v58 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 632) + 32);
  ((void (*)(uint64_t, _QWORD, _QWORD))v58)(v10, *(_QWORD *)(v0 + 624), *(_QWORD *)(v0 + 544));
  sub_22ABDE84C();
  OUTLINED_FUNCTION_116_0();
  v11 = *(_QWORD *)(v0 + 648);
  if (v10 != 1)
  {
    v30 = *(_QWORD *)(v0 + 632);
    OUTLINED_FUNCTION_58_1();
    sub_22ABDE84C();
    OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_27_16();
    *v32 = v1;
    v32[1] = v33 + 6;
    v34 = "Features must be one-dimensional";
LABEL_13:
    v32[2] = (unint64_t)(v34 - 32) | 0x8000000000000000;
    v32[3] = 0;
    OUTLINED_FUNCTION_118_0(v31, (uint64_t)v32, 6);
    v36 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8);
LABEL_14:
    OUTLINED_FUNCTION_48_2(v11, v36);
    goto LABEL_15;
  }
  v12 = v11 + *(int *)(*(_QWORD *)(v0 + 544) + 36);
  sub_22ABDE84C();
  OUTLINED_FUNCTION_116_0();
  v11 = *(_QWORD *)(v0 + 648);
  if (v12 != 1)
  {
    v30 = *(_QWORD *)(v0 + 632);
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_56_8();
    OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_27_16();
    *v32 = v12;
    v32[1] = v35 + 9;
    v34 = "Annotations must be one-dimensional";
    goto LABEL_13;
  }
  result = sub_22ABDE84C();
  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_20;
  }
  v14 = v3;
  v62 = *(_QWORD *)(result + 32);
  swift_bridgeObjectRelease();
  result = OUTLINED_FUNCTION_56_8();
  if (!*(_QWORD *)(result + 16))
  {
LABEL_20:
    __break(1u);
    return result;
  }
  v57 = *(_QWORD *)(v0 + 632);
  v56 = *(_QWORD *)(v0 + 552);
  v15 = *(_QWORD *)(v0 + 544);
  v16 = *(_QWORD *)(result + 32);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v17 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v17 + 16) = xmmword_22ABE9FB0;
  v18 = MEMORY[0x22E2E3340](v14, v15);
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 40) = v62;
  OUTLINED_FUNCTION_54_6();
  v19 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v19 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v19 + 32) = v18;
  *(_QWORD *)(v19 + 40) = v16;
  OUTLINED_FUNCTION_54_6();
  *(_QWORD *)(v0 + 424) = 0;
  *(_QWORD *)(v0 + 408) = v14;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11148);
  v21 = sub_22AA10448();
  v22 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v59);
  sub_22ABE0178();
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v0 + 384);
  *(_QWORD *)(v0 + 392) = *(_QWORD *)(v0 + 376);
  *(_QWORD *)(v0 + 400) = v23;
  v63 = v20;
  *(_QWORD *)(v0 + 280) = v20;
  *(_QWORD *)(v0 + 288) = v59;
  *(_QWORD *)(v0 + 296) = v21;
  *(_QWORD *)(v0 + 304) = v22;
  sub_22ABDF7E8();
  sub_22ABDF7C4();
  v24 = v20;
  while (1)
  {
    v25 = *(_QWORD *)(v0 + 560);
    v26 = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 312) = v63;
    *(_QWORD *)(v0 + 320) = v59;
    *(_QWORD *)(v0 + 328) = v21;
    *(_QWORD *)(v0 + 336) = v22;
    sub_22ABDF7DC();
    sub_22ABDF7D0();
    OUTLINED_FUNCTION_106_0(v25, 1, v26);
    if (v5)
      break;
    v27 = *(_QWORD *)(v0 + 640);
    v60 = *(_QWORD *)(v0 + 544);
    v28 = *(_QWORD *)(v0 + 536);
    v58(v27, *(_QWORD *)(v0 + 560) + *(int *)(v56 + 48));
    *(_QWORD *)(v0 + 264) = v24;
    v29 = sub_22AA104B4();
    *(_QWORD *)(v0 + 272) = v29;
    *(_QWORD *)(v0 + 240) = 0;
    MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v28);
    sub_22ABDE960();
    OUTLINED_FUNCTION_143();
    sub_22ABDE8AC();
    __swift_destroy_boxed_opaque_existential_1(v0 + 240);
    *(_QWORD *)(v0 + 224) = v24;
    *(_QWORD *)(v0 + 232) = v29;
    *(_QWORD *)(v0 + 200) = 0;
    sub_22ABDE960();
    OUTLINED_FUNCTION_143();
    sub_22ABDE8AC();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v27, v60);
    __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  }
  v61 = *(_QWORD *)(v0 + 672);
  v64 = *(_QWORD *)(v0 + 680);
  v37 = *(_QWORD *)(v0 + 600);
  v38 = *(_QWORD *)(v0 + 584);
  v39 = *(_QWORD *)(v0 + 568);
  v40 = *(_QWORD *)(v0 + 536);
  v41 = *(_QWORD *)(v0 + 488);
  v42 = *(_QWORD *)(v0 + 496);
  swift_bridgeObjectRelease();
  v43 = *(void (**)(void))(v39 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v43)(v38, v37, v40);
  OUTLINED_FUNCTION_100_1();
  v43();
  v44 = OUTLINED_FUNCTION_142();
  OUTLINED_FUNCTION_166(v44, v45, v61, v64, 1, 1, v41, v42, v46);
  if (v37)
  {
    v11 = *(_QWORD *)(v0 + 648);
    v47 = *(_QWORD *)(v0 + 600);
    v48 = *(_QWORD *)(v0 + 536);
    v49 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 568) + 8);
    v49(*(_QWORD *)(v0 + 592), v48);
    v49(v47, v48);
    v36 = *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8);
    goto LABEL_14;
  }
  v50 = *(_BYTE *)(v0 + 137);
  v51 = *(float *)(v0 + 736);
  v52 = *(__n128 *)(v0 + 688);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 672);
  v53 = *(_QWORD *)(v0 + 504);
  OUTLINED_FUNCTION_58_5(v50, v51, *(float *)(v0 + 140), v52);
  OUTLINED_FUNCTION_65_7(v0 + 144);
  v54 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v54;
  v55 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for TimeSeriesForecasterAnnotatedWindows<A>, v53);
  *v54 = v0;
  v54[1] = sub_22AA0BB44;
  return LinearTimeSeriesForecaster.fitted<A>(toWindows:eventHandler:)(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456), *(_QWORD **)(v0 + 464), *(_QWORD *)(v0 + 504), v55);
}

uint64_t sub_22AA0BB44()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 728) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA0BB94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_94();
  v1 = v0[81];
  v2 = v0[79];
  v3 = v0[75];
  v4 = v0[71];
  v5 = v0[67];
  (*(void (**)(_QWORD, _QWORD))(v0[64] + 8))(v0[65], v0[63]);
  v6 = *(void (**)(uint64_t))(v4 + 8);
  v7 = OUTLINED_FUNCTION_134_0();
  v6(v7);
  ((void (*)(uint64_t, uint64_t))v6)(v3, v5);
  OUTLINED_FUNCTION_48_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_28_0();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_12_24(v8);
}

uint64_t sub_22AA0BC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 648);
  v2 = *(_QWORD *)(v0 + 632);
  v3 = *(_QWORD *)(v0 + 600);
  v4 = *(_QWORD *)(v0 + 592);
  v5 = *(_QWORD *)(v0 + 568);
  v6 = *(_QWORD *)(v0 + 536);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 512));
  v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(v4, v6);
  v7(v3, v6);
  OUTLINED_FUNCTION_48_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_34_13();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_82_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LinearTimeSeriesForecaster.fitted<A>(toWindows:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;

  *(_QWORD *)(v8 + 384) = a6;
  *(_QWORD *)(v8 + 392) = a7;
  *(_QWORD *)(v8 + 368) = a4;
  *(_QWORD *)(v8 + 376) = a5;
  *(_QWORD *)(v8 + 352) = a2;
  *(_QWORD *)(v8 + 360) = a3;
  *(_QWORD *)(v8 + 344) = a1;
  v11 = a5[2];
  *(_QWORD *)(v8 + 400) = v11;
  *(_QWORD *)(v8 + 408) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 416) = OUTLINED_FUNCTION_77_4();
  *(_QWORD *)(v8 + 424) = swift_task_alloc();
  *(_QWORD *)(v8 + 432) = a5[3];
  *(_QWORD *)(v8 + 440) = a5[4];
  v12 = OUTLINED_FUNCTION_162();
  type metadata accessor for MultivariateLinearRegressor.Model(v12, v13, v14, v15);
  *(_QWORD *)(v8 + 448) = OUTLINED_FUNCTION_0_0();
  v16 = OUTLINED_FUNCTION_162();
  v20 = type metadata accessor for LinearTimeSeriesForecaster.Model(v16, v17, v18, v19);
  *(_QWORD *)(v8 + 456) = v20;
  *(_QWORD *)(v8 + 464) = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v8 + 472) = OUTLINED_FUNCTION_0_0();
  v21 = sub_22ABDE8A0();
  *(_QWORD *)(v8 + 480) = v21;
  v23 = type metadata accessor for AnnotatedFeature(255, v21, v21, v22);
  *(_QWORD *)(v8 + 488) = v23;
  v24 = OUTLINED_FUNCTION_164();
  *(_QWORD *)(v8 + 496) = v24;
  *(_QWORD *)(v8 + 504) = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v8 + 512) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v8 + 520) = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v8 + 528) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v8 + 536) = *(_QWORD *)(a6 - 8);
  *(_QWORD *)(v8 + 544) = OUTLINED_FUNCTION_0_0();
  v25 = OUTLINED_FUNCTION_124_0();
  *(_QWORD *)(v8 + 552) = v25;
  *(_QWORD *)(v8 + 560) = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v8 + 568) = OUTLINED_FUNCTION_0_0();
  v26 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v8 + 576) = *(_OWORD *)v7;
  *(_OWORD *)(v8 + 592) = v26;
  *(_DWORD *)(v8 + 716) = *(_DWORD *)(v7 + 32);
  *(_DWORD *)(v8 + 720) = *(_DWORD *)(v7 + 36);
  *(_QWORD *)(v8 + 608) = *(_QWORD *)(v7 + 40);
  *(_DWORD *)(v8 + 724) = *(_DWORD *)(v7 + 48);
  *(_DWORD *)(v8 + 728) = *(_DWORD *)(v7 + 52);
  *(_QWORD *)(v8 + 616) = *(_QWORD *)(v7 + 56);
  v27 = *(_BYTE *)(v7 + 64);
  *(_BYTE *)(v8 + 273) = v27;
  *(_BYTE *)(v8 + 712) = v27;
  *(__n128 *)(v8 + 624) = OUTLINED_FUNCTION_97_1();
  *(_DWORD *)(v8 + 732) = *(_DWORD *)(v7 + 88);
  *(_DWORD *)(v8 + 736) = *(_DWORD *)(v7 + 92);
  *(_QWORD *)(v8 + 640) = *(_QWORD *)(v7 + 96);
  *(_DWORD *)(v8 + 740) = *(_DWORD *)(v7 + 104);
  *(_DWORD *)(v8 + 744) = *(_DWORD *)(v7 + 108);
  *(_QWORD *)(v8 + 648) = *(_QWORD *)(v7 + 112);
  *(_BYTE *)(v8 + 274) = *(_BYTE *)(v7 + 120);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AA0BF00()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;

  v1 = *(_BYTE *)(v0 + 273);
  OUTLINED_FUNCTION_125_0(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 536));
  OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_84_5();
  OUTLINED_FUNCTION_60_7();
  if (v29)
  {
    v2 = *(_QWORD *)(v0 + 568);
    v3 = *(_QWORD *)(v0 + 560);
    v4 = *(_QWORD *)(v0 + 552);
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 504));
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_47_8(v5, v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    OUTLINED_FUNCTION_43_6();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    goto LABEL_4;
  }
  v57 = v1;
  OUTLINED_FUNCTION_157(*(_QWORD *)(v0 + 520));
  sub_22AA0F394();
  sub_22ABDE84C();
  OUTLINED_FUNCTION_155();
  if (!v9)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v69 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v0 + 656) = v69;
  swift_bridgeObjectRelease();
  sub_22ABDE84C();
  OUTLINED_FUNCTION_155();
  if (!v9)
    goto LABEL_20;
  v12 = *(_QWORD *)(v0 + 640);
  v13 = *(_DWORD *)(v0 + 732);
  v14 = *(_QWORD *)(v0 + 632);
  v15 = *(_QWORD *)(v0 + 624);
  v16 = *(_QWORD *)(v0 + 616);
  v17 = *(float *)(v0 + 724);
  v60 = *(_QWORD *)(v0 + 472);
  v62 = *(_QWORD *)(v0 + 600);
  v19 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v0 + 448);
  v20 = *(_QWORD *)(v0 + 432);
  v21 = *(_QWORD *)(v0 + 400);
  v67 = *(_QWORD *)(v0 + 592);
  v22 = *(_QWORD *)(v11 + 40);
  *(_QWORD *)(v0 + 664) = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 224) = v15;
  *(_QWORD *)(v0 + 232) = v14;
  *(_DWORD *)(v0 + 240) = v13;
  *(_QWORD *)(v0 + 248) = v12;
  *(_QWORD *)(v0 + 264) = v16;
  *(_BYTE *)(v0 + 272) = v57 & 1;
  *(float *)(v0 + 256) = v17;
  v23 = (_QWORD *)type metadata accessor for MultivariateLinearRegressor(0, v21, v20, v19);
  MultivariateLinearRegressor.makeTransformer()(v23, v18);
  sub_22AABF228(v18, v69, v22, 1, v21, v20, v19, v60);
  *(float *)(v0 + 748) = OUTLINED_FUNCTION_147(0.00001 / v17, (float)v62);
  *(_QWORD *)(v0 + 328) = sub_22ABDE9F0();
  v24 = sub_22ABDEE70();
  v25 = v24 + v67;
  if (__OFADD__(v24, v67))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v28 = *(_QWORD *)(v0 + 592);
  if (!v28)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v29 = v27 == 0x8000000000000000 && v28 == -1;
  if (v29)
    goto LABEL_25;
  v30 = *(_QWORD *)(v0 + 600);
  *(_QWORD *)(v0 + 672) = OUTLINED_FUNCTION_146();
  sub_22ABDF044();
  if ((v30 & 0x8000000000000000) == 0)
  {
    v31 = *(_QWORD *)(v0 + 600);
    if (v31)
    {
      *(_QWORD *)(v0 + 680) = 0;
      v68 = *(_BYTE *)(v0 + 274);
      v66 = *(_QWORD *)(v0 + 648);
      v64 = *(_DWORD *)(v0 + 744);
      v61 = *(_QWORD *)(v0 + 640);
      v58 = *(_DWORD *)(v0 + 736);
      v32 = *(_DWORD *)(v0 + 732);
      v54 = *(_QWORD *)(v0 + 632);
      v33 = *(_QWORD *)(v0 + 624);
      v34 = *(_QWORD *)(v0 + 616);
      v35 = *(_DWORD *)(v0 + 728);
      v36 = *(_DWORD *)(v0 + 724);
      v37 = *(_QWORD *)(v0 + 608);
      v38 = *(_DWORD *)(v0 + 720);
      v39 = *(_DWORD *)(v0 + 716);
      v40 = *(_QWORD *)(v0 + 592);
      v53 = *(_OWORD *)(v0 + 576);
      v65 = *(_QWORD *)(v0 + 472);
      v59 = *(_QWORD *)(v0 + 400);
      v63 = *(_QWORD *)(v0 + 392);
      v56 = *(_QWORD *)(v0 + 384);
      OUTLINED_FUNCTION_102_1();
      *(_OWORD *)(v0 + 16) = v53;
      *(_QWORD *)(v0 + 32) = v40;
      *(_QWORD *)(v0 + 40) = v31;
      *(_DWORD *)(v0 + 48) = v39;
      *(_DWORD *)(v0 + 52) = v38;
      *(_QWORD *)(v0 + 56) = v37;
      *(_DWORD *)(v0 + 64) = v36;
      *(_DWORD *)(v0 + 68) = v35;
      *(_QWORD *)(v0 + 72) = v34;
      *(_BYTE *)(v0 + 80) = *(_BYTE *)(v0 + 712);
      OUTLINED_FUNCTION_141_0();
      *(_QWORD *)(v0 + 88) = v33;
      *(_QWORD *)(v0 + 96) = v54;
      *(_DWORD *)(v0 + 104) = v32;
      *(_DWORD *)(v0 + 108) = v58;
      OUTLINED_FUNCTION_139_0(v61);
      *(_DWORD *)(v0 + 124) = v64;
      *(_QWORD *)(v0 + 128) = v66;
      v41 = OUTLINED_FUNCTION_137(v68);
      *(_QWORD *)(v0 + 688) = v41;
      *(_QWORD *)(v41 + 16) = v59;
      *(_QWORD *)(v41 + 24) = v56;
      *(_OWORD *)(v41 + 32) = v55;
      *(_QWORD *)(v41 + 48) = v63;
      *(_QWORD *)(v41 + 56) = v0 + 224;
      *(_QWORD *)(v41 + 64) = v65;
      *(_QWORD *)(v41 + 72) = v0 + 328;
      v42 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 696) = v42;
      OUTLINED_FUNCTION_95_0(v42, (uint64_t)sub_22AA0C4B0);
      OUTLINED_FUNCTION_40_9(v43);
      OUTLINED_FUNCTION_154();
      sub_22AA0F5F0(v44, v45, v46, v47, v48, v49, v50, v51);
      return;
    }
    OUTLINED_FUNCTION_39_10();
    OUTLINED_FUNCTION_57_6(v52);
    OUTLINED_FUNCTION_87_4(v16, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    OUTLINED_FUNCTION_90_4();
    OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_53_8();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_83_2();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_46_6();
    OUTLINED_FUNCTION_45_7();
    OUTLINED_FUNCTION_19_3();
LABEL_4:
    OUTLINED_FUNCTION_154();
    __asm { BR              X0 }
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_22AA0C4B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_41_0();
  *v3 = *v2;
  *(_QWORD *)(v0 + 704) = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AA0C514()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 328);
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA0C580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __n128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  float v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  void (*v19)(__int8 *);
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  unsigned __int32 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unsigned __int32 v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unsigned __int32 v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char v65;

  OUTLINED_FUNCTION_83_4(a1, a2, a3, a4, a5, a6, a7, a8, v39, v41, v42, v44, v46, v48, v49, v50, v52, v54, v56, v58);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(inited + 16);
  v16(v11, v10, v12);
  sub_22AA10574();
  OUTLINED_FUNCTION_61_6();
  v9[16].n128_f32[0] = v15 * OUTLINED_FUNCTION_160();
  if (*(_QWORD *)(v14 - 112))
  {
    v63 = v9[42].n128_u64[1];
    v18 = v9[26].n128_u64[0];
    v17 = v9[26].n128_i64[1];
    v61 = v9[37].n128_u64[1];
    v8 = v9[25].n128_i64[0];
    *(_QWORD *)(v14 - 112) = v9[25].n128_u64[1];
    v19 = (void (*)(__int8 *))v9[22].n128_u64[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E240);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
    OUTLINED_FUNCTION_46_8(inited);
    v16(v18, v17, v8);
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE13C8];
    sub_22A9A9840((uint64_t)v19);
    sub_22A99CE8C();
    sub_22ABDEA50();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
    sub_22A9ADA0C();
    sub_22ABDEAC8();
    OUTLINED_FUNCTION_27_16();
    v9[17].n128_u64[1] = v20;
    v9[18].n128_u64[0] = 0x800000022ABEE810;
    v9[18].n128_u64[1] = v63;
    v9[19].n128_u64[0] = v61;
    v9[19].n128_u8[8] = 0;
    v9[20].n128_u64[0] = v21;
    v19(&v9[17].n128_i8[8]);
    sub_22A9ADA48((uint64_t)v19);
    OUTLINED_FUNCTION_35_6(v17, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 112) + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_30_0(v9[25].n128_i64[1]);
  }
  v22 = v9[42].n128_u64[1] + 1;
  if (v22 == v9[37].n128_u64[1])
  {
    OUTLINED_FUNCTION_39_10();
    *(_QWORD *)(v14 - 112) = v9[26].n128_u64[0];
    OUTLINED_FUNCTION_57_6(v23);
    OUTLINED_FUNCTION_87_4(v8, *(uint64_t (**)(uint64_t, uint64_t))(inited + 8));
    OUTLINED_FUNCTION_90_4();
    OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_53_8();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_81_3();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_80_3();
    OUTLINED_FUNCTION_83_2();
    OUTLINED_FUNCTION_62_6();
    v24 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_16_20(v24);
  }
  else
  {
    *(_QWORD *)(v14 - 112) = v9 + 14;
    v9[42].n128_u64[1] = v22;
    v65 = v9[17].n128_i8[2];
    v64 = v9[40].n128_u64[1];
    v60 = v9[46].n128_u32[2];
    v53 = v9[46].n128_u32[0];
    v26 = v9[45].n128_u32[3];
    v43 = v9[39].n128_u64[0];
    v45 = v9[39].n128_u64[1];
    v40 = v9[36];
    v62 = v9[29].n128_u64[1];
    v55 = v9[25].n128_u64[0];
    v57 = v9[40].n128_i64[0];
    v59 = v9[24].n128_u64[1];
    v51 = v9[24].n128_u64[0];
    OUTLINED_FUNCTION_102_1();
    OUTLINED_FUNCTION_51_9(v40);
    OUTLINED_FUNCTION_121_0(v9[44].n128_i8[8]);
    v9[5].n128_u64[1] = v43;
    v9[6].n128_u64[0] = v45;
    v9[6].n128_u32[2] = v26;
    v9[6].n128_u32[3] = v53;
    OUTLINED_FUNCTION_139_0(v57);
    v9[7].n128_u32[3] = v60;
    v9[8].n128_u64[0] = v64;
    v27 = OUTLINED_FUNCTION_137(v65);
    v9[43].n128_u64[0] = v27;
    *(_QWORD *)(v27 + 16) = v55;
    *(_QWORD *)(v27 + 24) = v51;
    *(_OWORD *)(v27 + 32) = v47;
    v28 = *(_QWORD *)(v14 - 112);
    *(_QWORD *)(v27 + 48) = v59;
    *(_QWORD *)(v27 + 56) = v28;
    *(_QWORD *)(v27 + 64) = v62;
    *(_QWORD *)(v27 + 72) = (char *)v9 + 328;
    v29 = (_QWORD *)swift_task_alloc();
    v9[43].n128_u64[1] = (unint64_t)v29;
    OUTLINED_FUNCTION_95_0(v29, (uint64_t)sub_22AA0C4B0);
    v31 = OUTLINED_FUNCTION_40_9(v30);
    return sub_22AA0F5F0(v31, v32, v33, v34, v35, v36, v37, v38);
  }
}

uint64_t sub_22AA0C8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 472);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 520));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_48_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_43_6();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LinearTimeSeriesForecaster.fitted<A, B>(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  int v24;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v9 + 752) = v27;
  *(_QWORD *)(v9 + 744) = v26;
  *(_QWORD *)(v9 + 736) = a8;
  *(_QWORD *)(v9 + 728) = a7;
  *(_QWORD *)(v9 + 720) = a6;
  *(_QWORD *)(v9 + 712) = a5;
  *(_QWORD *)(v9 + 704) = a4;
  *(_QWORD *)(v9 + 696) = a3;
  *(_QWORD *)(v9 + 688) = a2;
  *(_QWORD *)(v9 + 680) = a1;
  *(_QWORD *)(v9 + 760) = *(_QWORD *)(a8 - 8);
  *(_QWORD *)(v9 + 768) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v9 + 776) = *(_QWORD *)(a6 + 16);
  *(_QWORD *)(v9 + 784) = *(_QWORD *)(a6 + 24);
  OUTLINED_FUNCTION_40_3();
  v16 = type metadata accessor for TimeSeriesForecasterAnnotatedWindows(v12, v13, v14, v15);
  *(_QWORD *)(v9 + 792) = v16;
  *(_QWORD *)(v9 + 800) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v9 + 808) = OUTLINED_FUNCTION_76_5();
  *(_QWORD *)(v9 + 816) = swift_task_alloc();
  OUTLINED_FUNCTION_40_3();
  sub_22ABDE8DC();
  *(_QWORD *)(v9 + 824) = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_40_3();
  v17 = sub_22ABDE8A0();
  *(_QWORD *)(v9 + 832) = v17;
  v21 = OUTLINED_FUNCTION_101_1(v17, v18, v19, v20);
  *(_QWORD *)(v9 + 840) = v21;
  *(_QWORD *)(v9 + 848) = OUTLINED_FUNCTION_75_4();
  sub_22ABDF5D8();
  *(_QWORD *)(v9 + 856) = OUTLINED_FUNCTION_76_5();
  *(_QWORD *)(v9 + 864) = swift_task_alloc();
  *(_QWORD *)(v9 + 872) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v9 + 880) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 888) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 896) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 904) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 912) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 920) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 928) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 936) = OUTLINED_FUNCTION_5_17();
  v22 = OUTLINED_FUNCTION_161();
  *(_QWORD *)(v9 + 944) = v22;
  *(_QWORD *)(v9 + 952) = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v9 + 960) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 968) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 976) = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v9 + 984) = OUTLINED_FUNCTION_29_8();
  *(_QWORD *)(v9 + 992) = OUTLINED_FUNCTION_29_8();
  *(_QWORD *)(v9 + 1000) = OUTLINED_FUNCTION_29_8();
  *(_QWORD *)(v9 + 1008) = *(_QWORD *)(a7 - 8);
  *(_QWORD *)(v9 + 1016) = OUTLINED_FUNCTION_0_0();
  v23 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v9 + 1024) = *(_OWORD *)v8;
  *(_OWORD *)(v9 + 1040) = v23;
  OUTLINED_FUNCTION_114();
  *(_DWORD *)(v9 + 532) = v24;
  *(_QWORD *)(v9 + 1056) = *(_QWORD *)(v8 + 40);
  *(_DWORD *)(v9 + 564) = *(_DWORD *)(v8 + 48);
  *(_DWORD *)(v9 + 1088) = *(_DWORD *)(v8 + 52);
  *(_QWORD *)(v9 + 1064) = *(_QWORD *)(v8 + 56);
  OUTLINED_FUNCTION_17_19();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22AA0CBBC()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(void);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  _QWORD *v78;
  char v79;
  __n128 *v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  __n128 *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  __n128 v93;
  uint64_t v94;
  _QWORD *v95;
  __n128 *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  const char *v127;
  uint64_t v128;
  void (*v129)(uint64_t, _QWORD);
  unsigned __int8 v130;
  float v131;
  float v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(void);
  uint64_t v168;
  uint64_t v169;
  void (*v170)(_QWORD, _QWORD);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  uint64_t v185;

  v1 = *(_QWORD *)(inited + 968);
  v2 = *(_QWORD *)(inited + 840);
  OUTLINED_FUNCTION_126_0(*(_QWORD *)(inited + 688), *(_QWORD *)(inited + 1008));
  v3 = OUTLINED_FUNCTION_92_1();
  *(_QWORD *)(inited + 672) = v3;
  v4 = OUTLINED_FUNCTION_89_1();
  v5 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v4);
  v174 = v4;
  sub_22ABDF404();
  OUTLINED_FUNCTION_106_0(v1, 1, v2);
  if (v6)
  {
    v7 = *(_QWORD *)(inited + 968);
    v8 = *(_QWORD *)(inited + 952);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_48_2(v7, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_27_16();
    *v9 = v10;
    v9[1] = 0x800000022ABEE810;
    v9[2] = 0;
    v9[3] = 0;
    OUTLINED_FUNCTION_36_9(v11, (uint64_t)v9, 2);
    goto LABEL_14;
  }
  v12 = *(_QWORD *)(inited + 1000);
  v13 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(inited + 976) + 32);
  ((void (*)(uint64_t, _QWORD, _QWORD))v13)(v12, *(_QWORD *)(inited + 968), *(_QWORD *)(inited + 840));
  sub_22ABDE84C();
  OUTLINED_FUNCTION_116_0();
  v14 = *(_QWORD *)(inited + 1000);
  if (v12 != 1)
  {
    v42 = *(_QWORD *)(inited + 976);
    v43 = *(_QWORD *)(inited + 840);
    OUTLINED_FUNCTION_23();
    v44 = sub_22ABDE84C();
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_27_16();
    *v46 = v44;
    v46[1] = v47 + 10;
    v48 = "The features must be one-dimensional";
LABEL_13:
    v46[2] = (unint64_t)(v48 - 32) | 0x8000000000000000;
    v46[3] = 0;
    OUTLINED_FUNCTION_36_9(v45, (uint64_t)v46, 6);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v14, v43);
    goto LABEL_14;
  }
  v15 = *(_QWORD *)(inited + 840);
  v16 = v14 + *(int *)(v15 + 36);
  sub_22ABDE84C();
  OUTLINED_FUNCTION_116_0();
  v14 = *(_QWORD *)(inited + 1000);
  if (v16 != 1)
  {
    v42 = *(_QWORD *)(inited + 976);
    v43 = *(_QWORD *)(inited + 840);
    OUTLINED_FUNCTION_23();
    v49 = OUTLINED_FUNCTION_56_8();
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_27_16();
    *v46 = v49;
    v46[1] = v50 + 13;
    v48 = "The annotations must be one-dimensional";
    goto LABEL_13;
  }
  result = sub_22ABDE84C();
  if (*(_QWORD *)(result + 16))
  {
    v169 = v15;
    v170 = v13;
    v164 = *(_QWORD *)(result + 32);
    swift_bridgeObjectRelease();
    result = OUTLINED_FUNCTION_56_8();
    if (*(_QWORD *)(result + 16))
    {
      v165 = inited + 280;
      v166 = inited + 240;
      v18 = *(_QWORD *)(inited + 976);
      v161 = *(_QWORD *)(inited + 928);
      v168 = *(_QWORD *)(inited + 848);
      v19 = *(_QWORD *)(inited + 840);
      v20 = *(_QWORD *)(result + 32);
      swift_bridgeObjectRelease();
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
      v22 = OUTLINED_FUNCTION_33_2();
      *(_OWORD *)(v22 + 16) = xmmword_22ABE9FB0;
      v23 = MEMORY[0x22E2E3340](v3, v19);
      *(_QWORD *)(v22 + 32) = v23;
      *(_QWORD *)(v22 + 40) = v164;
      OUTLINED_FUNCTION_132_0();
      v24 = (__n128 *)OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_119_0(v24, v25, v26, v27, v28, v29, v30, v31, inited + 144, inited + 648, inited + 640, inited + 584, inited + 568, inited + 200, inited + 400, v21, inited + 632, v152, v5,
        inited + 320,
        inited + 504,
        v161,
        v32);
      *(_QWORD *)(v33 + 32) = v23;
      *(_QWORD *)(v33 + 40) = v20;
      v153 = v20;
      OUTLINED_FUNCTION_132_0();
      *(_QWORD *)(inited + 664) = 0;
      *(_QWORD *)(inited + 656) = v3;
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11148);
      v35 = sub_22AA10448();
      v36 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v174);
      sub_22ABE0178();
      OUTLINED_FUNCTION_23();
      v37 = *(_QWORD *)(inited + 624);
      *(_QWORD *)(inited + 600) = *(_QWORD *)(inited + 616);
      *(_QWORD *)(inited + 608) = v37;
      *(_QWORD *)(inited + 472) = v34;
      *(_QWORD *)(inited + 480) = v174;
      *(_QWORD *)(inited + 488) = v35;
      *(_QWORD *)(inited + 496) = v36;
      v162 = sub_22ABDF7E8();
      sub_22ABDF7C4();
      v183 = (_QWORD *)inited;
      v172 = v18;
      while (1)
      {
        *(_QWORD *)(inited + 440) = v34;
        *(_QWORD *)(inited + 448) = v174;
        *(_QWORD *)(inited + 456) = v35;
        *(_QWORD *)(inited + 464) = v36;
        v38 = sub_22ABDF7DC();
        sub_22ABDF7D0();
        OUTLINED_FUNCTION_60_7();
        if (v6)
          break;
        v39 = *(_QWORD *)(inited + 992);
        v40 = *(_QWORD *)(inited + 832);
        ((void (*)(uint64_t, _QWORD, _QWORD))v170)(v39, *(_QWORD *)(inited + 864) + *(int *)(v168 + 48), *(_QWORD *)(inited + 840));
        *(_QWORD *)(inited + 304) = v34;
        v41 = sub_22AA104B4();
        v183[39] = v41;
        v183[35] = 0;
        MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v40);
        sub_22ABDE960();
        sub_22ABDE8AC();
        __swift_destroy_boxed_opaque_existential_1(v165);
        v183[33] = v34;
        v183[34] = v41;
        inited = (uint64_t)v183;
        v183[30] = 0;
        sub_22ABDE960();
        sub_22ABDE8AC();
        OUTLINED_FUNCTION_48_2(v39, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
        __swift_destroy_boxed_opaque_existential_1(v166);
      }
      v171 = v34;
      v176 = *(_QWORD *)(inited + 1024);
      v179 = *(_QWORD *)(inited + 1032);
      v51 = *(_QWORD *)(inited + 936);
      v52 = *(_QWORD *)(inited + 920);
      v53 = *(_QWORD *)(inited + 872);
      v54 = *(_QWORD *)(inited + 832);
      v173 = *(_QWORD *)(inited + 784);
      v55 = *(_QWORD *)(inited + 776);
      swift_bridgeObjectRelease();
      v56 = *(void (**)(void))(v53 + 16);
      ((void (*)(uint64_t, uint64_t, uint64_t))v56)(v52, v51, v54);
      OUTLINED_FUNCTION_100_1();
      v56();
      v57 = OUTLINED_FUNCTION_142();
      OUTLINED_FUNCTION_166(v57, v58, v176, v179, 1, 1, v55, v173, v59);
      if (v51)
      {
        v60 = *(_QWORD *)(inited + 1000);
        v61 = *(_QWORD *)(inited + 936);
        v62 = *(_QWORD *)(inited + 840);
        OUTLINED_FUNCTION_74_5(*(_QWORD *)(inited + 928));
        OUTLINED_FUNCTION_74_5(v61);
        (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v60, v62);
      }
      else
      {
        v167 = v56;
        v63 = *(_QWORD *)(inited + 960);
        v64 = *(_QWORD *)(inited + 840);
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(inited + 760) + 16))(*(_QWORD *)(inited + 768), *(_QWORD *)(inited + 696), *(_QWORD *)(inited + 736));
        v65 = sub_22ABDF11C();
        *(_QWORD *)(inited + 632) = v65;
        sub_22ABDF404();
        OUTLINED_FUNCTION_106_0(v63, 1, v64);
        v66 = (_QWORD *)inited;
        v67 = v153;
        if (v6)
        {
          v68 = *(_QWORD *)(inited + 1000);
          v69 = *(_QWORD *)(inited + 960);
          v70 = *(_QWORD *)(inited + 952);
          inited = *(_QWORD *)(inited + 944);
          v175 = v66[117];
          v71 = v66[116];
          v72 = v66[109];
          v177 = v66[105];
          v180 = v68;
          v73 = v66[104];
          OUTLINED_FUNCTION_63_1();
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, inited);
          sub_22A9B7B50();
          OUTLINED_FUNCTION_53();
          OUTLINED_FUNCTION_27_16();
          *v74 = v75;
          v74[1] = 0x800000022ABEE810;
          v74[2] = 0;
          v74[3] = 0;
          OUTLINED_FUNCTION_36_9(v76, (uint64_t)v74, 2);
          OUTLINED_FUNCTION_71_5();
          v77 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
          v77(v71, v73);
          v77(v175, v73);
          (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v180, v177);
        }
        else
        {
          ((void (*)(_QWORD, _QWORD, _QWORD))v170)(*(_QWORD *)(inited + 984), *(_QWORD *)(inited + 960), *(_QWORD *)(inited + 840));
          v78 = (_QWORD *)sub_22ABDE84C();
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
          *(_QWORD *)(inited + 32) = v164;
          v79 = sub_22A99EB90(v78, (_QWORD *)inited);
          swift_setDeallocating();
          swift_bridgeObjectRelease();
          if ((v79 & 1) != 0)
          {
            v54 = v169;
            inited = sub_22ABDE84C();
            v80 = (__n128 *)swift_initStackObject();
            OUTLINED_FUNCTION_173(v80);
            *(_QWORD *)(v81 + 32) = v153;
            v82 = sub_22A99EB90((_QWORD *)inited, v80);
            swift_setDeallocating();
            swift_bridgeObjectRelease();
            if ((v82 & 1) != 0)
            {
              v178 = v66[107];
              v181 = v66[106];
              v83 = v66[105];
              v84 = (__n128 *)OUTLINED_FUNCTION_33_2();
              v93 = OUTLINED_FUNCTION_119_0(v84, v85, v86, v87, v88, v89, v90, v91, v133, v136, v138, v140, v142, v144, v146, v148, v150, v153, v155,
                      v157,
                      v159,
                      v162,
                      v92);
              v94 = MEMORY[0x22E2E3340](v65, v83, v93);
              v84[2].n128_u64[0] = v94;
              v84[2].n128_u64[1] = v164;
              v95 = v183;
              OUTLINED_FUNCTION_54_6();
              v96 = (__n128 *)OUTLINED_FUNCTION_33_2();
              OUTLINED_FUNCTION_119_0(v96, v97, v98, v99, v100, v101, v102, v103, v134, v137, v139, v141, v143, v145, v147, v149, v151, v154, v156,
                v158,
                v160,
                v163,
                v104);
              *(_QWORD *)(v105 + 32) = v94;
              *(_QWORD *)(v105 + 40) = v67;
              OUTLINED_FUNCTION_54_6();
              v183[81] = 0;
              v183[80] = v65;
              sub_22ABE0178();
              OUTLINED_FUNCTION_63_1();
              v106 = v183[74];
              v183[71] = v183[73];
              v183[72] = v106;
              sub_22ABDF7C4();
              sub_22ABDF7D0();
              OUTLINED_FUNCTION_106_0(v178, 1, v181);
              if (!v6)
              {
                v170(v183[124], v183[107] + *(int *)(v168 + 48));
                v183[48] = v171;
                v183[49] = sub_22AA104B4();
                v183[45] = 0;
                OUTLINED_FUNCTION_86_4();
              }
              v184 = v183[129];
              v107 = v95[128];
              v108 = v95[113];
              v109 = v95[112];
              v110 = v95[111];
              v111 = v95[110];
              v112 = v95[104];
              v113 = v95[101];
              v114 = v95[98];
              inited = (uint64_t)v95;
              v115 = v95[97];
              swift_bridgeObjectRelease();
              ((void (*)(uint64_t, uint64_t, uint64_t))v167)(v110, v108, v112);
              ((void (*)(uint64_t, uint64_t, uint64_t))v167)(v111, v109, v112);
              OUTLINED_FUNCTION_166(v110, v111, v107, v184, 1, 1, v115, v114, v113);
              if (!v109)
              {
                v130 = *(_BYTE *)(inited + 137);
                v131 = *(float *)(inited + 564);
                v132 = *(float *)(inited + 140);
                *(_OWORD *)(inited + 16) = *(_OWORD *)(inited + 1024);
                OUTLINED_FUNCTION_58_5(v130, v131, v132, *(__n128 *)(inited + 1040));
                OUTLINED_FUNCTION_65_7(v135);
                *(_QWORD *)(inited + 1072) = swift_task_alloc();
                OUTLINED_FUNCTION_86_4();
              }
              v185 = *(_QWORD *)(inited + 1000);
              v116 = *(_QWORD *)(inited + 984);
              v182 = *(_QWORD *)(inited + 936);
              v117 = *(_QWORD *)(inited + 928);
              v118 = *(_QWORD *)(inited + 904);
              v119 = *(_QWORD *)(inited + 840);
              v120 = *(_QWORD *)(inited + 816);
              v121 = *(_QWORD *)(inited + 800);
              v122 = *(_QWORD *)(inited + 792);
              OUTLINED_FUNCTION_8_25(*(_QWORD *)(inited + 896));
              OUTLINED_FUNCTION_8_25(v118);
              v123 = *(void (**)(uint64_t, uint64_t))(v172 + 8);
              v123(v116, v119);
              (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v120, v122);
              OUTLINED_FUNCTION_8_25(v117);
              OUTLINED_FUNCTION_8_25(v182);
              v123(v185, v119);
              goto LABEL_14;
            }
            OUTLINED_FUNCTION_22_20();
            sub_22ABDE84C();
            OUTLINED_FUNCTION_123_0();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_27_16();
            *v125 = v65;
            v125[1] = v128 + 47;
            v127 = "The validation annotations' shape must match the input annotations' shape";
          }
          else
          {
            OUTLINED_FUNCTION_22_20();
            sub_22ABDE84C();
            OUTLINED_FUNCTION_123_0();
            OUTLINED_FUNCTION_53();
            OUTLINED_FUNCTION_27_16();
            *v125 = v65;
            v125[1] = v126 + 41;
            v127 = "The validation features' shape must match the input features' shape";
          }
          v125[2] = (unint64_t)(v127 - 32) | 0x8000000000000000;
          v125[3] = 0;
          OUTLINED_FUNCTION_36_9(v124, (uint64_t)v125, 6);
          OUTLINED_FUNCTION_74_5(inited);
          OUTLINED_FUNCTION_71_5();
          v129 = *(void (**)(uint64_t, _QWORD))(v38 + 8);
          v129(v54, v170);
          v129(v176, v170);
          OUTLINED_FUNCTION_74_5(1);
        }
      }
LABEL_14:
      swift_task_dealloc();
      OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_28_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_12_3();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_148();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_62_6();
      OUTLINED_FUNCTION_174();
      return (*(uint64_t (**)(void))(inited + 8))();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22AA0D984()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 1080) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA0D9D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v8)(uint64_t, uint64_t);
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = v0[125];
  v1 = v0[123];
  v2 = v0[122];
  v11 = v0[116];
  v12 = v0[117];
  v14 = v0[113];
  v3 = v0[112];
  v4 = v0[105];
  v5 = v0[102];
  v6 = v0[99];
  v7 = *(void (**)(void))(v0[100] + 8);
  v7();
  OUTLINED_FUNCTION_107_0(v3);
  OUTLINED_FUNCTION_107_0(v14);
  v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v1, v4);
  ((void (*)(uint64_t, uint64_t))v7)(v5, v6);
  OUTLINED_FUNCTION_107_0(v11);
  OUTLINED_FUNCTION_107_0(v12);
  v8(v13, v4);
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_12_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_60_6();
  swift_task_dealloc();
  OUTLINED_FUNCTION_111_1();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_5();
  OUTLINED_FUNCTION_81_3();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_174();
  OUTLINED_FUNCTION_46_0();
  swift_task_dealloc();
  swift_task_dealloc();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v9();
}

uint64_t sub_22AA0DB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = *(_QWORD *)(v0 + 936);
  v10 = *(_QWORD *)(v0 + 1000);
  v7 = *(_QWORD *)(v0 + 984);
  v8 = *(_QWORD *)(v0 + 928);
  v1 = *(_QWORD *)(v0 + 904);
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(_QWORD *)(v0 + 816);
  v4 = *(_QWORD *)(v0 + 792);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 800) + 8);
  v5(*(_QWORD *)(v0 + 808), v4);
  OUTLINED_FUNCTION_108_1(v2);
  OUTLINED_FUNCTION_108_1(v1);
  OUTLINED_FUNCTION_8_25(v7);
  v5(v3, v4);
  OUTLINED_FUNCTION_108_1(v8);
  OUTLINED_FUNCTION_108_1(v9);
  OUTLINED_FUNCTION_8_25(v10);
  swift_task_dealloc();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  swift_task_dealloc();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_85_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LinearTimeSeriesForecaster.fitted<A, B>(toWindows:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)(v9 + 352) = v36;
  *(_QWORD *)(v9 + 360) = v37;
  *(_QWORD *)(v9 + 336) = a7;
  *(_QWORD *)(v9 + 344) = a8;
  *(_QWORD *)(v9 + 320) = a5;
  *(_QWORD *)(v9 + 328) = a6;
  *(_QWORD *)(v9 + 304) = a3;
  *(_QWORD *)(v9 + 312) = a4;
  *(_QWORD *)(v9 + 288) = a1;
  *(_QWORD *)(v9 + 296) = a2;
  v13 = a6[2];
  *(_QWORD *)(v9 + 368) = v13;
  *(_QWORD *)(v9 + 376) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v9 + 384) = OUTLINED_FUNCTION_177();
  *(_QWORD *)(v9 + 392) = OUTLINED_FUNCTION_177();
  *(_QWORD *)(v9 + 400) = OUTLINED_FUNCTION_177();
  *(_QWORD *)(v9 + 408) = a6[3];
  OUTLINED_FUNCTION_100_1();
  sub_22ABDE8DC();
  *(_QWORD *)(v9 + 416) = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_100_1();
  v14 = sub_22ABDE8A0();
  *(_QWORD *)(v9 + 424) = v14;
  *(_QWORD *)(v9 + 432) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v9 + 440) = swift_task_alloc();
  *(_QWORD *)(v9 + 448) = swift_task_alloc();
  OUTLINED_FUNCTION_100_1();
  v19 = type metadata accessor for AnnotatedBatch(v15, v16, v17, v18);
  *(_QWORD *)(v9 + 456) = v19;
  *(_QWORD *)(v9 + 464) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v9 + 472) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v9 + 480) = *(_QWORD *)(a8 - 8);
  *(_QWORD *)(v9 + 488) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v9 + 496) = a6[4];
  v20 = OUTLINED_FUNCTION_163();
  type metadata accessor for MultivariateLinearRegressor.Model(v20, v21, v22, v23);
  *(_QWORD *)(v9 + 504) = OUTLINED_FUNCTION_0_0();
  v24 = OUTLINED_FUNCTION_163();
  v28 = type metadata accessor for LinearTimeSeriesForecaster.Model(v24, v25, v26, v27);
  *(_QWORD *)(v9 + 512) = v28;
  *(_QWORD *)(v9 + 520) = *(_QWORD *)(v28 - 8);
  *(_QWORD *)(v9 + 528) = OUTLINED_FUNCTION_0_0();
  v30 = type metadata accessor for AnnotatedFeature(255, v14, v14, v29);
  *(_QWORD *)(v9 + 536) = v30;
  v31 = OUTLINED_FUNCTION_164();
  *(_QWORD *)(v9 + 544) = v31;
  *(_QWORD *)(v9 + 552) = *(_QWORD *)(v31 - 8);
  *(_QWORD *)(v9 + 560) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v9 + 568) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(v9 + 576) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 584) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 592) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 600) = *(_QWORD *)(a7 - 8);
  *(_QWORD *)(v9 + 608) = OUTLINED_FUNCTION_0_0();
  v32 = OUTLINED_FUNCTION_124_0();
  *(_QWORD *)(v9 + 616) = v32;
  *(_QWORD *)(v9 + 624) = *(_QWORD *)(v32 - 8);
  *(_QWORD *)(v9 + 632) = OUTLINED_FUNCTION_0_0();
  v33 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v9 + 640) = *(_OWORD *)v8;
  *(_OWORD *)(v9 + 656) = v33;
  *(_DWORD *)(v9 + 804) = *(_DWORD *)(v8 + 32);
  *(_DWORD *)(v9 + 808) = *(_DWORD *)(v8 + 36);
  *(_QWORD *)(v9 + 672) = *(_QWORD *)(v8 + 40);
  *(_DWORD *)(v9 + 812) = *(_DWORD *)(v8 + 48);
  *(_DWORD *)(v9 + 816) = *(_DWORD *)(v8 + 52);
  *(_QWORD *)(v9 + 680) = *(_QWORD *)(v8 + 56);
  v34 = *(_BYTE *)(v8 + 64);
  *(_BYTE *)(v9 + 193) = v34;
  *(_BYTE *)(v9 + 800) = v34;
  *(__n128 *)(v9 + 688) = OUTLINED_FUNCTION_97_1();
  *(_DWORD *)(v9 + 820) = *(_DWORD *)(v8 + 88);
  *(_DWORD *)(v9 + 824) = *(_DWORD *)(v8 + 92);
  *(_QWORD *)(v9 + 704) = *(_QWORD *)(v8 + 96);
  *(_DWORD *)(v9 + 828) = *(_DWORD *)(v8 + 104);
  *(_DWORD *)(v9 + 832) = *(_DWORD *)(v8 + 108);
  *(_QWORD *)(v9 + 712) = *(_QWORD *)(v8 + 112);
  *(_BYTE *)(v9 + 194) = *(_BYTE *)(v8 + 120);
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AA0DFA0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v13;
  char v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  float v43;
  uint64_t v44;
  float v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  char v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v1 = *(_BYTE *)(v0 + 193);
  OUTLINED_FUNCTION_125_0(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 600));
  OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_84_5();
  OUTLINED_FUNCTION_60_7();
  if (v54)
  {
    v2 = *(_QWORD *)(v0 + 632);
    v3 = *(_QWORD *)(v0 + 624);
    v4 = *(_QWORD *)(v0 + 616);
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 552));
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_27_16();
    OUTLINED_FUNCTION_47_8(v5, v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
LABEL_6:
    OUTLINED_FUNCTION_42_8();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_46_6();
    OUTLINED_FUNCTION_45_7();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_148();
    swift_task_dealloc();
    goto LABEL_7;
  }
  v102 = v1;
  v8 = *(_QWORD *)(v0 + 328);
  OUTLINED_FUNCTION_157(*(_QWORD *)(v0 + 568));
  OUTLINED_FUNCTION_81_5();
  if (v8)
  {
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 568));
    v9 = OUTLINED_FUNCTION_134_0();
    v11(v9, v10);
    goto LABEL_6;
  }
  sub_22ABDE84C();
  OUTLINED_FUNCTION_155();
  if (!v14)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v120 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v0 + 720) = v120;
  swift_bridgeObjectRelease();
  sub_22ABDE84C();
  OUTLINED_FUNCTION_155();
  if (!v14)
    goto LABEL_28;
  v16 = *(_DWORD *)(v0 + 820);
  v17 = *(_QWORD *)(v0 + 696);
  v18 = *(_QWORD *)(v0 + 688);
  v19 = *(_QWORD *)(v0 + 680);
  v20 = *(_DWORD *)(v0 + 812);
  v104 = *(_QWORD *)(v0 + 536);
  v90 = *(_QWORD *)(v0 + 704);
  v92 = *(_QWORD *)(v0 + 528);
  v21 = *(_QWORD *)(v0 + 496);
  v22 = *(_QWORD *)(v0 + 504);
  v98 = *(_QWORD *)(v0 + 480);
  v100 = *(_QWORD *)(v0 + 488);
  v114 = *(_QWORD *)(v0 + 648);
  v117 = *(_QWORD *)(v0 + 472);
  v106 = *(_QWORD *)(v0 + 448);
  v108 = *(_QWORD *)(v0 + 640);
  v111 = *(_QWORD *)(v0 + 440);
  v23 = *(_QWORD *)(v0 + 408);
  v24 = *(_QWORD *)(v0 + 368);
  v25 = *(_QWORD *)(v0 + 344);
  v96 = *(_QWORD *)(v0 + 304);
  v26 = *(_QWORD *)(v15 + 40);
  *(_QWORD *)(v0 + 728) = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 144) = v18;
  *(_QWORD *)(v0 + 152) = v17;
  *(_DWORD *)(v0 + 160) = v16;
  *(_QWORD *)(v0 + 168) = v90;
  *(_QWORD *)(v0 + 184) = v19;
  *(_BYTE *)(v0 + 192) = v102 & 1;
  *(_DWORD *)(v0 + 176) = v20;
  v27 = (_QWORD *)type metadata accessor for MultivariateLinearRegressor(0, v24, v23, v21);
  MultivariateLinearRegressor.makeTransformer()(v27, v22);
  v28 = v22;
  v29 = v26;
  sub_22AABF228(v28, v120, v26, 1, v24, v23, v21, v92);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v100, v96, v25);
  OUTLINED_FUNCTION_143();
  v30 = sub_22ABDF11C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v31 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v31 + 16) = xmmword_22ABEDF90;
  v32 = MEMORY[0x22E2E3340](v30, v104);
  *(_QWORD *)(v31 + 32) = v32;
  *(_QWORD *)(v31 + 40) = v108;
  *(_QWORD *)(v31 + 48) = v120;
  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_132_0();
  v33 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v33 + 16) = xmmword_22ABEDF90;
  *(_QWORD *)(v33 + 32) = v32;
  *(_QWORD *)(v33 + 40) = v114;
  *(_QWORD *)(v33 + 48) = v29;
  OUTLINED_FUNCTION_132_0();
  AnnotatedBatch.init(features:annotations:)(v106, v111, v24, v23, v117);
  if (v32 < 0)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v32)
  {
    v121 = *(_QWORD *)(v0 + 432);
    v89 = *(_QWORD *)(v0 + 568);
    v34 = *(_QWORD *)(v0 + 328);
    sub_22ABDF140();
    OUTLINED_FUNCTION_81_5();
    if (!v34)
    {
      v35 = *(_QWORD *)(v0 + 576);
      v36 = *(_QWORD *)(v0 + 536);
      v37 = *(_QWORD *)(v0 + 448);
      v38 = *(_QWORD *)(v0 + 424);
      v39 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
      v39(*(_QWORD *)(v0 + 584), v36);
      sub_22ABDF140();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v37, v35, v38);
      v39(v35, v36);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
      v40 = OUTLINED_FUNCTION_33_2();
      *(_OWORD *)(v40 + 16) = xmmword_22ABE9FB0;
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11148);
      *(_QWORD *)(v40 + 56) = v41;
      v42 = sub_22AA104B4();
      *(_QWORD *)(v40 + 32) = 0;
      *(_QWORD *)(v40 + 96) = v41;
      *(_QWORD *)(v40 + 104) = v42;
      *(_QWORD *)(v40 + 64) = v42;
      *(_QWORD *)(v40 + 72) = 0;
      OUTLINED_FUNCTION_86_4();
    }
    v123 = *(_QWORD *)(v0 + 632);
    v77 = *(_QWORD *)(v0 + 624);
    v78 = *(_QWORD *)(v0 + 592);
    v79 = *(_QWORD *)(v0 + 536);
    v116 = *(_QWORD *)(v0 + 616);
    v119 = *(_QWORD *)(v0 + 528);
    v110 = *(_QWORD *)(v0 + 520);
    v113 = *(_QWORD *)(v0 + 512);
    v80 = *(_QWORD *)(v0 + 464);
    v81 = *(_QWORD *)(v0 + 472);
    swift_bridgeObjectRelease();
    v82 = *(void (**)(uint64_t))(v89 + 8);
    v83 = OUTLINED_FUNCTION_142();
    v82(v83);
    OUTLINED_FUNCTION_35_6(v81, *(uint64_t (**)(uint64_t, uint64_t))(v80 + 8));
    ((void (*)(uint64_t, uint64_t))v82)(v78, v79);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v123, v116);
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v119, v113);
    goto LABEL_6;
  }
  v43 = *(float *)(v0 + 812);
  v44 = *(_QWORD *)(v0 + 672);
  v45 = *(float *)(v0 + 804);
  v46 = *(_QWORD *)(v0 + 664);
  v47 = *(_QWORD *)(v0 + 656);
  swift_bridgeObjectRelease();
  *(float *)(v0 + 836) = OUTLINED_FUNCTION_147(0.00001 / v43, (float)v46);
  sub_22AA0AEEC(v44, 0.0);
  *(double *)(v0 + 248) = v45;
  *(_QWORD *)(v0 + 256) = v48;
  *(_QWORD *)(v0 + 264) = sub_22ABDE9F0();
  v49 = sub_22ABDEE70();
  v50 = v49 + v47;
  if (__OFADD__(v49, v47))
    goto LABEL_30;
  v51 = __OFSUB__(v50, 1);
  v52 = v50 - 1;
  if (v51)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v53 = *(_QWORD *)(v0 + 656);
  if (!v53)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v54 = v52 == 0x8000000000000000 && v53 == -1;
  if (v54)
    goto LABEL_34;
  v55 = *(_QWORD *)(v0 + 664);
  *(_QWORD *)(v0 + 736) = OUTLINED_FUNCTION_146();
  sub_22ABDF044();
  if (v55 < 0)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    return;
  }
  v56 = *(_QWORD *)(v0 + 664);
  if (!v56)
  {
    v91 = *(_QWORD *)(v0 + 592);
    v94 = *(_QWORD *)(v0 + 624);
    v84 = *(_QWORD *)(v0 + 568);
    v85 = *(_QWORD *)(v0 + 528);
    v86 = *(_QWORD *)(v0 + 520);
    v88 = *(_QWORD *)(v0 + 464);
    v87 = *(_QWORD *)(v0 + 472);
    OUTLINED_FUNCTION_42_8();
    OUTLINED_FUNCTION_150();
    OUTLINED_FUNCTION_48_2(v87, *(uint64_t (**)(uint64_t, uint64_t))(v88 + 8));
    OUTLINED_FUNCTION_35_6(v91, *(uint64_t (**)(uint64_t, uint64_t))(v84 + 8));
    OUTLINED_FUNCTION_135_0(*(uint64_t (**)(uint64_t))(v94 + 8));
    OUTLINED_FUNCTION_78_4();
    OUTLINED_FUNCTION_105_1();
    OUTLINED_FUNCTION_87_4(v85, *(uint64_t (**)(uint64_t, uint64_t))(v86 + 8));
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_88_0();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_60_6();
    swift_task_dealloc();
    OUTLINED_FUNCTION_47_5();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_80_3();
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_46_6();
    OUTLINED_FUNCTION_45_7();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_148();
    swift_task_dealloc();
    OUTLINED_FUNCTION_19_3();
LABEL_7:
    OUTLINED_FUNCTION_149();
    __asm { BR              X0 }
  }
  v122 = *(_QWORD *)(v0 + 496);
  *(_QWORD *)(v0 + 744) = 0;
  v118 = *(_BYTE *)(v0 + 194);
  v115 = *(_QWORD *)(v0 + 712);
  v109 = *(_DWORD *)(v0 + 832);
  v105 = *(_QWORD *)(v0 + 704);
  v101 = *(_DWORD *)(v0 + 824);
  v57 = *(_DWORD *)(v0 + 820);
  v95 = *(_QWORD *)(v0 + 696);
  v58 = *(_QWORD *)(v0 + 688);
  v59 = *(_QWORD *)(v0 + 680);
  v60 = *(_DWORD *)(v0 + 816);
  v61 = *(_DWORD *)(v0 + 812);
  v62 = *(_QWORD *)(v0 + 672);
  v63 = *(_DWORD *)(v0 + 808);
  v64 = *(_DWORD *)(v0 + 804);
  v65 = *(_QWORD *)(v0 + 656);
  v93 = *(_OWORD *)(v0 + 640);
  v112 = *(_QWORD *)(v0 + 528);
  v107 = *(_QWORD *)(v0 + 408);
  v99 = *(_QWORD *)(v0 + 368);
  v97 = *(_OWORD *)(v0 + 336);
  v103 = *(_OWORD *)(v0 + 352);
  sub_22ABDF0EC();
  *(_OWORD *)(v0 + 16) = v93;
  *(_QWORD *)(v0 + 32) = v65;
  *(_QWORD *)(v0 + 40) = v56;
  *(_DWORD *)(v0 + 48) = v64;
  *(_DWORD *)(v0 + 52) = v63;
  *(_QWORD *)(v0 + 56) = v62;
  *(_DWORD *)(v0 + 64) = v61;
  *(_DWORD *)(v0 + 68) = v60;
  *(_QWORD *)(v0 + 72) = v59;
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v0 + 800);
  OUTLINED_FUNCTION_141_0();
  *(_QWORD *)(v0 + 88) = v58;
  *(_QWORD *)(v0 + 96) = v95;
  *(_DWORD *)(v0 + 104) = v57;
  *(_DWORD *)(v0 + 108) = v101;
  OUTLINED_FUNCTION_139_0(v105);
  *(_DWORD *)(v0 + 124) = v109;
  *(_QWORD *)(v0 + 128) = v115;
  v66 = OUTLINED_FUNCTION_138_0(v118);
  *(_QWORD *)(v0 + 752) = v66;
  *(_QWORD *)(v66 + 16) = v99;
  *(_OWORD *)(v66 + 24) = v97;
  *(_QWORD *)(v66 + 40) = v107;
  *(_QWORD *)(v66 + 48) = v122;
  *(_OWORD *)(v66 + 56) = v103;
  *(_QWORD *)(v66 + 72) = v0 + 144;
  *(_QWORD *)(v66 + 80) = v112;
  *(_QWORD *)(v66 + 88) = v0 + 264;
  v67 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 760) = v67;
  OUTLINED_FUNCTION_94_1(v67, (uint64_t)sub_22AA0EB2C);
  OUTLINED_FUNCTION_40_9(v68);
  OUTLINED_FUNCTION_149();
  sub_22AA0F5F0(v69, v70, v71, v72, v73, v74, v75, v76);
}

uint64_t sub_22AA0EB2C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_41_0();
  *v3 = *v2;
  *(_QWORD *)(v0 + 768) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28_0();
  }
  else
  {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AA0EB98()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 264);
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA0EC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_83_4(a1, a2, a3, a4, a5, a6, a7, a8, v18, v19, v21, v23, v24, v25, v26, v27, v28, v29, v30, v31);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  *(_QWORD *)(v8 + 776) = v14;
  v14(v10, v9, v11);
  sub_22AA10574();
  OUTLINED_FUNCTION_61_6();
  *(float *)(v8 + 176) = v13 * OUTLINED_FUNCTION_160();
  v15 = v22 + *(int *)(v20 + 36);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 784) = v16;
  *v16 = v8;
  v16[1] = sub_22AA0ECA8;
  return sub_22AABF2D0(*(_QWORD *)(v8 + 384), *(_QWORD *)(v8 + 472), v15, *(_QWORD *)(v8 + 512));
}

uint64_t sub_22AA0ECA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_41_0();
  *v3 = *v2;
  *(_QWORD *)(v0 + 792) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AA0ED04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  int v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;

  v1 = *(_QWORD *)(v0 + 744);
  v2 = *(_QWORD *)(v0 + 312);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 776))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 368));
  sub_22A99CE8C();
  v3 = MEMORY[0x24BEE13C8];
  OUTLINED_FUNCTION_140_0();
  sub_22AA3ABA4(v1, *(double *)(v0 + 280));
  v5 = v4;
  if (v2)
  {
    v53 = *(_QWORD *)(v0 + 664);
    v55 = *(_QWORD *)(v0 + 744);
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
    v6 = *(_QWORD *)(v0 + 392);
    v7 = *(_QWORD *)(v0 + 400);
    v48 = *(_QWORD *)(v0 + 384);
    v57 = *(_QWORD *)(v0 + 376);
    v59 = v4;
    v8 = *(_QWORD *)(v0 + 368);
    v9 = *(void (**)(void))(v0 + 312);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E240);
    v10 = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(v10 + 16) = xmmword_22ABE9FB0;
    OUTLINED_FUNCTION_46_8(v10);
    v45(v6, v7, v8);
    *(_QWORD *)(v10 + 72) = v3;
    sub_22A9A9840((uint64_t)v9);
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_140_0();
    *(_QWORD *)(v10 + 80) = 0x69746164696C6176;
    *(_QWORD *)(v10 + 88) = 0xEF73736F6C5F6E6FLL;
    v45(v6, v48, v8);
    *(_QWORD *)(v10 + 120) = v3;
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_140_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
    sub_22A9ADA0C();
    v11 = sub_22ABDEAC8();
    OUTLINED_FUNCTION_27_16();
    *(_QWORD *)(v0 + 200) = v12;
    *(_QWORD *)(v0 + 208) = 0x800000022ABEE810;
    *(_QWORD *)(v0 + 216) = v55;
    *(_QWORD *)(v0 + 224) = v53;
    *(_BYTE *)(v0 + 232) = 0;
    *(_QWORD *)(v0 + 240) = v11;
    v9();
    sub_22A9ADA48((uint64_t)v9);
    v13 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    OUTLINED_FUNCTION_74_5(v48);
    v14 = v8;
    v5 = v59;
    v13(v7, v14);
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_23();
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 400);
    v16 = *(_QWORD *)(v0 + 368);
    v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 376) + 8);
    v17(*(_QWORD *)(v0 + 384), v16);
    v17(v15, v16);
  }
  v18 = *(_QWORD *)(v0 + 744) + 1;
  if (v5 & 1 | (v18 == *(_QWORD *)(v0 + 664)))
  {
    v38 = *(_QWORD *)(v0 + 592);
    v39 = *(_QWORD *)(v0 + 624);
    v19 = *(_QWORD *)(v0 + 568);
    v20 = *(_QWORD *)(v0 + 528);
    v21 = *(_QWORD *)(v0 + 520);
    v23 = *(_QWORD *)(v0 + 464);
    v22 = *(_QWORD *)(v0 + 472);
    OUTLINED_FUNCTION_150();
    OUTLINED_FUNCTION_48_2(v22, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    OUTLINED_FUNCTION_35_6(v38, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    OUTLINED_FUNCTION_135_0(*(uint64_t (**)(uint64_t))(v39 + 8));
    OUTLINED_FUNCTION_78_4();
    OUTLINED_FUNCTION_105_1();
    OUTLINED_FUNCTION_87_4(v20, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_111_1();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_88_0();
    OUTLINED_FUNCTION_85_3();
    OUTLINED_FUNCTION_60_6();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_47_5();
    OUTLINED_FUNCTION_81_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_80_3();
    OUTLINED_FUNCTION_83_2();
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_46_6();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_19_3();
    OUTLINED_FUNCTION_165();
    __asm { BR              X0 }
  }
  *(_QWORD *)(v0 + 744) = v18;
  v58 = *(_BYTE *)(v0 + 194);
  v56 = *(_QWORD *)(v0 + 712);
  v52 = *(_DWORD *)(v0 + 832);
  v46 = *(_DWORD *)(v0 + 824);
  v25 = *(_DWORD *)(v0 + 820);
  v41 = *(_QWORD *)(v0 + 688);
  v42 = *(_QWORD *)(v0 + 696);
  v40 = *(__n128 *)(v0 + 640);
  v54 = *(_QWORD *)(v0 + 528);
  v50 = *(_QWORD *)(v0 + 704);
  v51 = *(_QWORD *)(v0 + 496);
  v49 = *(_QWORD *)(v0 + 408);
  v44 = *(_QWORD *)(v0 + 368);
  v43 = *(_OWORD *)(v0 + 336);
  v47 = *(_OWORD *)(v0 + 352);
  sub_22ABDF0EC();
  OUTLINED_FUNCTION_51_9(v40);
  OUTLINED_FUNCTION_121_0(*(_BYTE *)(v0 + 800));
  *(_QWORD *)(v0 + 88) = v41;
  *(_QWORD *)(v0 + 96) = v42;
  *(_DWORD *)(v0 + 104) = v25;
  *(_DWORD *)(v0 + 108) = v46;
  OUTLINED_FUNCTION_139_0(v50);
  *(_DWORD *)(v0 + 124) = v52;
  *(_QWORD *)(v0 + 128) = v56;
  v26 = OUTLINED_FUNCTION_138_0(v58);
  *(_QWORD *)(v0 + 752) = v26;
  *(_QWORD *)(v26 + 16) = v44;
  *(_OWORD *)(v26 + 24) = v43;
  *(_QWORD *)(v26 + 40) = v49;
  *(_QWORD *)(v26 + 48) = v51;
  *(_OWORD *)(v26 + 56) = v47;
  *(_QWORD *)(v26 + 72) = v0 + 144;
  *(_QWORD *)(v26 + 80) = v54;
  *(_QWORD *)(v26 + 88) = v0 + 264;
  v27 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 760) = v27;
  OUTLINED_FUNCTION_94_1(v27, (uint64_t)sub_22AA0EB2C);
  OUTLINED_FUNCTION_40_9(v28);
  OUTLINED_FUNCTION_165();
  return sub_22AA0F5F0(v29, v30, v31, v32, v33, v34, v35, v36);
}

uint64_t sub_22AA0F1FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  OUTLINED_FUNCTION_94();
  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 568);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 464));
  OUTLINED_FUNCTION_48_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_105_1();
  v4 = OUTLINED_FUNCTION_142();
  v5(v4);
  OUTLINED_FUNCTION_3_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  return OUTLINED_FUNCTION_12_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA0F2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_94();
  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 568);
  v5 = *(_QWORD *)(v0 + 520);
  v6 = *(_QWORD *)(v0 + 512);
  v7 = *(_QWORD *)(v0 + 528);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 376));
  OUTLINED_FUNCTION_53_8();
  OUTLINED_FUNCTION_48_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_105_1();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v6);
  OUTLINED_FUNCTION_3_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  return OUTLINED_FUNCTION_12_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA0F394()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  const char *v14;
  uint64_t v15;

  v2 = *v0;
  v1 = v0[1];
  v3 = sub_22ABDE8A0();
  v4 = *(_QWORD *)(sub_22ABDE84C() + 16);
  swift_bridgeObjectRelease();
  if (v4 != 2)
    goto LABEL_8;
  result = OUTLINED_FUNCTION_88_2();
  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_12;
  }
  v6 = *(_QWORD *)(result + 32);
  swift_bridgeObjectRelease();
  if (v6 != v2)
  {
LABEL_8:
    v13 = 0xD000000000000040;
    v15 = OUTLINED_FUNCTION_88_2();
    sub_22A9B7B50();
    v11 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v12 = v15;
    v14 = "The shape of the features must be [inputWindowSize, featureSize]";
    goto LABEL_9;
  }
  type metadata accessor for AnnotatedFeature(0, v3, v3, v7);
  v8 = *(_QWORD *)(OUTLINED_FUNCTION_88_2() + 16);
  swift_bridgeObjectRelease();
  if (v8 == 2)
  {
    result = OUTLINED_FUNCTION_88_2();
    if (*(_QWORD *)(result + 16))
    {
      v9 = *(_QWORD *)(result + 32);
      result = swift_bridgeObjectRelease();
      if (v9 == v1)
        return result;
      goto LABEL_7;
    }
LABEL_12:
    __break(1u);
    return result;
  }
LABEL_7:
  v10 = OUTLINED_FUNCTION_88_2();
  sub_22A9B7B50();
  v11 = OUTLINED_FUNCTION_53();
  *(_QWORD *)v12 = v10;
  v13 = 0xD000000000000049;
  v14 = "The shape of the annotations must be [forecastWindowSize, annotationSize]";
LABEL_9:
  *(_QWORD *)(v12 + 8) = v13;
  *(_QWORD *)(v12 + 16) = (unint64_t)(v14 - 32) | 0x8000000000000000;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = 6;
  return swift_willThrow(v11);
}

uint64_t sub_22AA0F4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a2;
  v8[11] = a3;
  v8[9] = a1;
  v8[16] = *(_QWORD *)(a5 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22AA0F568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_18_20();
  v0 = swift_task_alloc();
  OUTLINED_FUNCTION_52_9(v0);
  v1 = OUTLINED_FUNCTION_106_1((uint64_t)sub_22AA0F5B4);
  return OUTLINED_FUNCTION_41_6(v1, v2, v3, v4);
}

uint64_t sub_22AA0F5B4()
{
  OUTLINED_FUNCTION_44_10();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA0F5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v9 + 248) = a7;
  *(_QWORD *)(v9 + 256) = a8;
  *(_QWORD *)(v9 + 232) = a5;
  *(_QWORD *)(v9 + 240) = a6;
  *(_QWORD *)(v9 + 216) = a3;
  *(_QWORD *)(v9 + 224) = a4;
  *(_QWORD *)(v9 + 200) = a1;
  *(_QWORD *)(v9 + 208) = a2;
  v11 = *(_QWORD *)(a6 + 16);
  *(_QWORD *)(v9 + 264) = v11;
  v12 = *(_QWORD *)(a6 + 24);
  *(_QWORD *)(v9 + 272) = v12;
  v13 = sub_22ABDE8DC();
  *(_QWORD *)(v9 + 280) = v13;
  *(_QWORD *)(v9 + 288) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v9 + 296) = OUTLINED_FUNCTION_77_4();
  *(_QWORD *)(v9 + 304) = swift_task_alloc();
  v14 = sub_22ABDE8A0();
  *(_QWORD *)(v9 + 312) = v14;
  v16 = type metadata accessor for AnnotatedFeature(255, v14, v14, v15);
  *(_QWORD *)(v9 + 320) = v16;
  v17 = sub_22ABDF5D8();
  *(_QWORD *)(v9 + 328) = v17;
  *(_QWORD *)(v9 + 336) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v9 + 344) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v9 + 352) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v9 + 360) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v9 + 368) = *(_QWORD *)(a7 - 8);
  *(_QWORD *)(v9 + 376) = OUTLINED_FUNCTION_0_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v9 + 384) = AssociatedTypeWitness;
  *(_QWORD *)(v9 + 392) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v9 + 400) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v9 + 408) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v9 + 416) = OUTLINED_FUNCTION_5_17();
  *(_QWORD *)(v9 + 424) = OUTLINED_FUNCTION_5_17();
  v20 = type metadata accessor for AnnotatedBatch(0, v11, v12, v19);
  *(_QWORD *)(v9 + 432) = v20;
  *(_QWORD *)(v9 + 440) = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v9 + 448) = OUTLINED_FUNCTION_0_0();
  v21 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v9 + 456) = *(_OWORD *)v8;
  *(_OWORD *)(v9 + 472) = v21;
  OUTLINED_FUNCTION_114();
  *(_DWORD *)(v9 + 544) = v22;
  v23 = *(_QWORD *)(v8 + 40);
  *(_DWORD *)(v9 + 548) = *(_DWORD *)(v8 + 48);
  *(_DWORD *)(v9 + 552) = *(_DWORD *)(v8 + 52);
  v24 = *(_QWORD *)(v8 + 56);
  *(_QWORD *)(v9 + 488) = v23;
  *(_QWORD *)(v9 + 496) = v24;
  OUTLINED_FUNCTION_17_19();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AA0F7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  int EnumTagSinglePayload;
  char v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t (*v34)(void);
  __int128 v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 504) = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v4 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v4 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v4 + 32) = v1;
  v5 = v2 * v3;
  if ((unsigned __int128)(v2 * (__int128)v3) >> 64 != (v2 * v3) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = *(_QWORD *)(v0 + 464);
  v7 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 512) = v5;
  *(_QWORD *)(v4 + 40) = v5;
  sub_22AA3EF3C();
  v8 = (__n128 *)OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_173(v8);
  *(_QWORD *)(v9 + 32) = v1;
  v10 = v6 * v7;
  if ((unsigned __int128)(v6 * (__int128)v7) >> 64 != (v6 * v7) >> 63)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v36 = *(_QWORD *)(v0 + 472);
  v12 = *(_QWORD *)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 272);
  v13 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)&v35 = *(_QWORD *)(v0 + 256);
  *(_QWORD *)(v0 + 520) = v10;
  *(_QWORD *)(v9 + 40) = v10;
  sub_22AA3EF3C();
  v14 = OUTLINED_FUNCTION_134_0();
  AnnotatedBatch.init(features:annotations:)(v14, v15, v12, v11, v16);
  OUTLINED_FUNCTION_143();
  v17();
  sub_22ABDEE58();
  if (v36 >= 1)
  {
    v18 = *(_QWORD *)(v0 + 344);
    v19 = *(_QWORD *)(v0 + 320);
    swift_getAssociatedConformanceWitness();
    sub_22ABDF650();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v18, 1, v19);
    *(_DWORD *)(v0 + 556) = EnumTagSinglePayload;
    if (EnumTagSinglePayload != 1)
    {
      v21 = *(_BYTE *)(v0 + 137);
      v22 = *(_DWORD *)(v0 + 552);
      v23 = *(_DWORD *)(v0 + 548);
      v25 = *(_QWORD *)(v0 + 488);
      v24 = *(_QWORD *)(v0 + 496);
      v26 = *(_DWORD *)(v0 + 544);
      v27 = *(_DWORD *)(v0 + 140);
      v29 = *(_QWORD *)(v0 + 472);
      v28 = *(_QWORD *)(v0 + 480);
      OUTLINED_FUNCTION_72_4();
      OUTLINED_FUNCTION_156(v30);
      *(_OWORD *)(v0 + 16) = v35;
      *(_QWORD *)(v0 + 32) = v29;
      *(_QWORD *)(v0 + 40) = v28;
      *(_DWORD *)(v0 + 48) = v27;
      *(_DWORD *)(v0 + 52) = v26;
      *(_QWORD *)(v0 + 56) = v25;
      *(_DWORD *)(v0 + 64) = v23;
      *(_DWORD *)(v0 + 68) = v22;
      *(_QWORD *)(v0 + 72) = v24;
      *(_BYTE *)(v0 + 80) = v21;
      OUTLINED_FUNCTION_66_7(v0 + 144);
      sub_22AA0F394();
      OUTLINED_FUNCTION_117();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
      v31 = (__n128 *)OUTLINED_FUNCTION_33_2();
      OUTLINED_FUNCTION_173(v31);
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11148);
      v33 = OUTLINED_FUNCTION_176(v32);
      OUTLINED_FUNCTION_151(v33);
      OUTLINED_FUNCTION_110_1();
    }
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 336));
  }
  OUTLINED_FUNCTION_23_16();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_80_3();
  OUTLINED_FUNCTION_62_6();
  v34 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  OUTLINED_FUNCTION_16_20(v34);
}

uint64_t sub_22AA0FC7C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 536) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA0FCCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumTagSinglePayload;
  char v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;

  if (*(_DWORD *)(v0 + 556) == 1)
    goto LABEL_2;
  v3 = *(_QWORD *)(v0 + 536);
  v4 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 320);
  swift_getAssociatedConformanceWitness();
  sub_22ABDF650();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1, v5);
  *(_DWORD *)(v0 + 556) = EnumTagSinglePayload;
  if (EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 336));
LABEL_2:
    OUTLINED_FUNCTION_23_16();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_80_3();
    OUTLINED_FUNCTION_62_6();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_16_20(v2);
  }
  v23 = v3;
  v7 = *(_BYTE *)(v0 + 137);
  v8 = *(_DWORD *)(v0 + 552);
  v9 = *(_DWORD *)(v0 + 548);
  v11 = *(_QWORD *)(v0 + 488);
  v10 = *(_QWORD *)(v0 + 496);
  v12 = *(_DWORD *)(v0 + 544);
  v13 = *(_DWORD *)(v0 + 140);
  v14 = *(_QWORD *)(v0 + 472);
  v15 = *(_QWORD *)(v0 + 480);
  OUTLINED_FUNCTION_72_4();
  OUTLINED_FUNCTION_156(v16);
  *(_OWORD *)(v0 + 16) = v22;
  *(_QWORD *)(v0 + 32) = v14;
  *(_QWORD *)(v0 + 40) = v15;
  *(_DWORD *)(v0 + 48) = v13;
  *(_DWORD *)(v0 + 52) = v12;
  *(_QWORD *)(v0 + 56) = v11;
  *(_DWORD *)(v0 + 64) = v9;
  *(_DWORD *)(v0 + 68) = v8;
  *(_QWORD *)(v0 + 72) = v10;
  *(_BYTE *)(v0 + 80) = v7;
  OUTLINED_FUNCTION_66_7(v0 + 144);
  sub_22AA0F394();
  if (!v23)
  {
    OUTLINED_FUNCTION_117();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
    v17 = (__n128 *)OUTLINED_FUNCTION_33_2();
    OUTLINED_FUNCTION_173(v17);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11148);
    v19 = OUTLINED_FUNCTION_176(v18);
    OUTLINED_FUNCTION_151(v19);
    OUTLINED_FUNCTION_110_1();
  }
  v20 = *(_QWORD *)(v0 + 392);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 352));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  OUTLINED_FUNCTION_26_14();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_62_6();
  v2 = *(uint64_t (**)(void))(v0 + 8);
  return OUTLINED_FUNCTION_16_20(v2);
}

uint64_t sub_22AA100AC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 392));
  OUTLINED_FUNCTION_135_0(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 440) + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA10158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[14] = a8;
  v8[15] = v10;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a2;
  v8[11] = a3;
  v8[9] = a1;
  v8[16] = *(_QWORD *)(a5 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22AA101CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_18_20();
  v0 = swift_task_alloc();
  OUTLINED_FUNCTION_52_9(v0);
  v1 = OUTLINED_FUNCTION_106_1((uint64_t)sub_22AA10218);
  return OUTLINED_FUNCTION_41_6(v1, v2, v3, v4);
}

uint64_t sub_22AA10218()
{
  OUTLINED_FUNCTION_44_10();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA10254()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = v0[18];
  v2 = v0[16];
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v2 + 16))(v0[17], v1, v0[13]);
  OUTLINED_FUNCTION_89_1();
  sub_22ABDF0C8();
  OUTLINED_FUNCTION_48_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v3();
}

uint64_t sub_22AA102D0()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AA10300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9ADC14;
  return LinearTimeSeriesForecaster.fitted<A>(to:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t sub_22AA10398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v14;
  uint64_t v17;

  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v14;
  *v14 = v7;
  v14[1] = sub_22A9ABF58;
  return LinearTimeSeriesForecaster.fitted<A, B>(to:validateOn:eventHandler:)(a1, a2, a3, a4, a5, v17, a6, a7);
}

unint64_t sub_22AA10448()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_255B11150;
  if (!qword_255B11150)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B11148);
    v2 = sub_22A9B88AC();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2C48], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255B11150);
  }
  return result;
}

unint64_t sub_22AA104B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B11160;
  if (!qword_255B11160)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B11148);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BDBFF08], v1);
    atomic_store(result, &qword_255B11160);
  }
  return result;
}

uint64_t sub_22AA104F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  v2 = OUTLINED_FUNCTION_49_7();
  return sub_22AA0F4F8(v2, v3, v4, v5, v6, v7, v8, v9);
}

unint64_t sub_22AA10574()
{
  unint64_t result;

  result = qword_255B11180;
  if (!qword_255B11180)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE14F0], MEMORY[0x24BEE14E8]);
    atomic_store(result, (unint64_t *)&qword_255B11180);
  }
  return result;
}

uint64_t sub_22AA105B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ABF58;
  v2 = OUTLINED_FUNCTION_49_7();
  return sub_22AA10158(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_22AA1063C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 16) + 8) + 8);
  return MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCE0], a1, &v3);
}

void sub_22AA10680()
{
  JUMPOUT(0x22E2E4D80);
}

void *__swift_memcpy121_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x79uLL);
}

uint64_t sub_22AA10698(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 121))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_22AA106B8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 120) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 121) = v3;
  return result;
}

uint64_t type metadata accessor for LinearTimeSeriesForecaster(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LinearTimeSeriesForecaster);
}

uint64_t OUTLINED_FUNCTION_2_31()
{
  return sub_22ABDE918();
}

uint64_t OUTLINED_FUNCTION_3_31()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_12_24(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_16_20(uint64_t (*a1)(void))
{
  return a1();
}

__n128 OUTLINED_FUNCTION_17_19()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __n128 result;

  *(_BYTE *)(v1 + 137) = *(_BYTE *)(v0 + 64);
  v2 = *(_OWORD *)(v0 + 81);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)(v0 + 65);
  *(_OWORD *)(v1 + 160) = v2;
  result = *(__n128 *)(v0 + 97);
  *(__n128 *)(v1 + 176) = result;
  *(_QWORD *)(v1 + 192) = *(_QWORD *)(v0 + 113);
  return result;
}

float OUTLINED_FUNCTION_18_20()
{
  uint64_t v0;
  uint64_t v1;
  float result;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;

  v1 = *(_QWORD *)(v0 + 80);
  result = *(float *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_DWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_BYTE *)(v1 + 48);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  *(float *)(v0 + 32) = result;
  *(_QWORD *)(v0 + 40) = v3;
  *(_DWORD *)(v0 + 48) = v4;
  *(_QWORD *)(v0 + 56) = v5;
  *(_BYTE *)(v0 + 64) = v6;
  return result;
}

uint64_t OUTLINED_FUNCTION_22_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 1000);
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v0 + 936);
  *(_QWORD *)(v1 - 112) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_23_16()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[49];
  v3 = v0[50];
  v4 = v0[48];
  *(_QWORD *)(v1 - 112) = v0[37];
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
}

uint64_t OUTLINED_FUNCTION_26_14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[55];
  v3 = v0[56];
  v4 = v0[54];
  *(_QWORD *)(v1 - 112) = v0[37];
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
}

uint64_t OUTLINED_FUNCTION_33_14(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_34_13()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 664);
}

uint64_t OUTLINED_FUNCTION_35_8()
{
  return sub_22ABDE984();
}

uint64_t OUTLINED_FUNCTION_36_9@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  *(_BYTE *)(a2 + 32) = a3;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_37_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_40_9@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_41_6(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return MultivariateLinearRegressor.update(_:with:)(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_43_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_44_10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 160) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_46_8(uint64_t result)
{
  strcpy((char *)(result + 32), "training_loss");
  *(_WORD *)(result + 46) = -4864;
  return result;
}

uint64_t OUTLINED_FUNCTION_47_8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a2 = a3;
  *(_QWORD *)(a2 + 8) = (v3 - 32) | 0x8000000000000000;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 2;
  return swift_willThrow(a1);
}

__n128 OUTLINED_FUNCTION_48_7(__n128 *a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 - 112);
  a1[1] = result;
  a1[3].n128_u64[1] = v1;
  a1[4].n128_u64[0] = v2;
  a1[2].n128_u64[0] = 0;
  a1[6].n128_u64[0] = v1;
  a1[6].n128_u64[1] = v2;
  a1[4].n128_u64[1] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_49_7()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_51_9(__n128 a1)
{
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;

  v1[1] = a1;
  *(_QWORD *)(v3 + 32) = v6;
  *(_QWORD *)(v3 + 40) = v2;
  *(_DWORD *)(v3 + 48) = v10;
  *(_DWORD *)(v3 + 52) = v5;
  *(_QWORD *)(v3 + 56) = v4;
  *(_DWORD *)(v3 + 64) = v9;
  *(_DWORD *)(v3 + 68) = v8;
  *(_QWORD *)(v3 + 72) = v7;
}

uint64_t OUTLINED_FUNCTION_52_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 152) = a1;
  return type metadata accessor for MultivariateLinearRegressor(0, v2, v1, v4);
}

uint64_t OUTLINED_FUNCTION_53_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_54_6()
{
  return sub_22AA3EF3C();
}

uint64_t OUTLINED_FUNCTION_55_8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 32) = a2;
  return sub_22ABDE8D0();
}

uint64_t OUTLINED_FUNCTION_56_8()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_57_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

void OUTLINED_FUNCTION_58_5(unsigned __int8 a1@<W8>, float a2@<S0>, float a3@<S1>, __n128 a4@<Q2>)
{
  unint64_t v4;
  unsigned __int32 v5;
  unint64_t v6;
  unsigned __int32 v7;
  __n128 *v8;

  v8[2] = a4;
  v8[3].n128_f32[0] = a3;
  v8[3].n128_u32[1] = v7;
  v8[3].n128_u64[1] = v6;
  v8[4].n128_f32[0] = a2;
  v8[4].n128_u32[1] = v5;
  v8[4].n128_u64[1] = v4;
  v8[5].n128_u8[0] = a1;
}

uint64_t OUTLINED_FUNCTION_60_7()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_61_6()
{
  return sub_22ABDEA50();
}

uint64_t OUTLINED_FUNCTION_62_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_64_5()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = **(int **)(v0 + 224) + *(_QWORD *)(v0 + 224);
  return swift_task_alloc();
}

__n128 OUTLINED_FUNCTION_65_7@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 81) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 97) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 113) = result;
  *(_QWORD *)(v1 + 129) = *(_QWORD *)(a1 + 48);
  return result;
}

uint64_t OUTLINED_FUNCTION_66_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v3;
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(a1 + 48);
  return v2;
}

uint64_t OUTLINED_FUNCTION_68_6()
{
  return sub_22ABDE8AC();
}

uint64_t OUTLINED_FUNCTION_71_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

__n128 OUTLINED_FUNCTION_72_4()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 456);
}

uint64_t OUTLINED_FUNCTION_74_5(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_75_4()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_76_5()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_77_4()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_78_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_79_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_80_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_81_5()
{
  return sub_22AA0F394();
}

uint64_t OUTLINED_FUNCTION_82_3()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_83_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  Collection<>.mean()(v20, a1, *(_QWORD *)(v21 + 16), a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t OUTLINED_FUNCTION_84_5()
{
  return sub_22ABDF650();
}

void OUTLINED_FUNCTION_85_4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v0 + 432);
}

void OUTLINED_FUNCTION_86_4()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_87_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_88_2()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_89_1()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_90_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_91_2()
{
  return sub_22ABDF074();
}

uint64_t OUTLINED_FUNCTION_92_1()
{
  return sub_22ABDF11C();
}

uint64_t OUTLINED_FUNCTION_93_1@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 448);
}

_QWORD *OUTLINED_FUNCTION_94_1@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

_QWORD *OUTLINED_FUNCTION_95_0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_96_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 32) = a2;
  return sub_22ABDE8D0();
}

__n128 OUTLINED_FUNCTION_97_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 137) = *(_DWORD *)(v0 + 65);
  *(_DWORD *)(v1 + 140) = *(_DWORD *)(v0 + 68);
  return *(__n128 *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_98_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_101_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for AnnotatedFeature(255, v4, v4, a4);
}

uint64_t OUTLINED_FUNCTION_102_1()
{
  return sub_22ABDF0EC();
}

uint64_t OUTLINED_FUNCTION_105_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_106_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = v1;
  v2[1] = a1;
  return *(_QWORD *)(v1 + 144);
}

uint64_t OUTLINED_FUNCTION_107_0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_108_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_109_1()
{
  return sub_22ABDEE58();
}

void OUTLINED_FUNCTION_110_1()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_111_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_112_1()
{
  return swift_task_dealloc();
}

float OUTLINED_FUNCTION_114()
{
  uint64_t v0;
  uint64_t v1;
  float result;

  result = *(float *)(v0 + 32);
  *(float *)(v1 + 140) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_116_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_118_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  uint64_t v3;

  *(_BYTE *)(a2 + 32) = a3;
  *(_QWORD *)(v3 - 88) = a1;
  return swift_willThrow(a1);
}

__n128 OUTLINED_FUNCTION_119_0(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__n128 a23)
{
  __n128 result;

  result = a23;
  a1[1] = a23;
  return result;
}

__n128 OUTLINED_FUNCTION_120(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__n128 a23)
{
  __n128 result;

  result = a23;
  a1[1] = a23;
  return result;
}

void OUTLINED_FUNCTION_121_0(char a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;

  *(_BYTE *)(v1 + 80) = a1;
  *(_DWORD *)(v1 + 81) = *v2;
  *(_DWORD *)(v1 + 84) = *(_DWORD *)((char *)v2 + 3);
}

uint64_t OUTLINED_FUNCTION_122_0()
{
  return swift_getAssociatedConformanceWitness();
}

unint64_t OUTLINED_FUNCTION_123_0()
{
  return sub_22A9B7B50();
}

uint64_t OUTLINED_FUNCTION_124_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_125_0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(v2, a1, v3);
}

uint64_t OUTLINED_FUNCTION_126_0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(v2, a1, v3);
}

uint64_t OUTLINED_FUNCTION_128_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_132_0()
{
  return sub_22AA3EF3C();
}

uint64_t OUTLINED_FUNCTION_133()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_134_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_135_0@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1);
}

uint64_t OUTLINED_FUNCTION_136_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_137@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 136) = a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_138_0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 136) = a1;
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_139_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)(v1 + 112) = a1;
  *(_DWORD *)(v1 + 120) = v2;
}

uint64_t OUTLINED_FUNCTION_140_0()
{
  return sub_22ABDEA50();
}

void OUTLINED_FUNCTION_141_0()
{
  _DWORD *v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 81) = *v0;
  *(_DWORD *)(v1 + 84) = *(_DWORD *)((char *)v0 + 3);
}

uint64_t OUTLINED_FUNCTION_142()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_146()
{
  return sub_22ABDF0F8();
}

float OUTLINED_FUNCTION_147(float a1, float a2)
{
  return powf(a1, 1.0 / a2);
}

uint64_t OUTLINED_FUNCTION_148()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_150()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_151(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  v1[4] = 0;
  v1[12] = v2;
  v1[13] = result;
  v1[8] = result;
  v1[9] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_156@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 32))(v1);
}

uint64_t OUTLINED_FUNCTION_157@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 32))(v1);
}

uint64_t OUTLINED_FUNCTION_158()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_159(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

float OUTLINED_FUNCTION_160()
{
  uint64_t v0;
  float v1;

  return powf(v1, (float)v0);
}

uint64_t OUTLINED_FUNCTION_161()
{
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_162()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_163()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_164()
{
  return sub_22ABDF5D8();
}

_QWORD *OUTLINED_FUNCTION_166@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return TimeSeriesForecasterAnnotatedWindows.init(features:annotations:inputWindowSize:forecastWindowSize:stride:shufflesElements:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_167()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_170()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_173(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 112);
  a1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_174()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_175(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

unint64_t OUTLINED_FUNCTION_176(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return sub_22AA104B4();
}

uint64_t OUTLINED_FUNCTION_177()
{
  return swift_task_alloc();
}

BOOL static VideoReader.CameraConfiguration.PixelFormat.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t VideoReader.CameraConfiguration.PixelFormat.hash(into:)()
{
  return OUTLINED_FUNCTION_2_32();
}

void _s18CreateMLComponents11VideoReaderV19CameraConfigurationV8PositionO9hashValueSivg_0()
{
  OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_0_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void sub_22AA111E0()
{
  sub_22ABE0244();
  OUTLINED_FUNCTION_0_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

BOOL static VideoReader.CameraConfiguration.Resolution.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VideoReader.CameraConfiguration.Resolution.hash(into:)()
{
  return OUTLINED_FUNCTION_2_32();
}

void VideoReader.CameraConfiguration.Resolution.hashValue.getter()
{
  OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_0_23();
  OUTLINED_FUNCTION_7_27();
  OUTLINED_FUNCTION_16_0();
}

void VideoReader.CameraConfiguration.cameraPosition.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_6_33(a1);
}

_BYTE *VideoReader.CameraConfiguration.position.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*VideoReader.CameraConfiguration.position.modify())()
{
  return nullsub_1;
}

void VideoReader.CameraConfiguration.pixelFormat.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_6_33(a1);
}

_BYTE *VideoReader.CameraConfiguration.pixelFormat.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*VideoReader.CameraConfiguration.pixelFormat.modify())()
{
  return nullsub_1;
}

void VideoReader.CameraConfiguration.resolution.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_6_33(a1);
}

_BYTE *VideoReader.CameraConfiguration.resolution.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*VideoReader.CameraConfiguration.resolution.modify())()
{
  return nullsub_1;
}

double VideoReader.CameraConfiguration.frameRate.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void VideoReader.CameraConfiguration.frameRate.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*VideoReader.CameraConfiguration.frameRate.modify())()
{
  return nullsub_1;
}

void VideoReader.CameraConfiguration.init()(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 0;
  *(_BYTE *)(a1 + 2) = 2;
  *(_QWORD *)(a1 + 8) = 0x403E000000000000;
}

_BYTE *VideoReader.CameraConfiguration.init(position:pixelFormat:resolution:frameRate:)@<X0>(_BYTE *result@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  char v5;
  char v6;

  v5 = *a2;
  v6 = *a3;
  *(_BYTE *)a4 = *result;
  *(_BYTE *)(a4 + 1) = v5;
  *(_BYTE *)(a4 + 2) = v6;
  *(double *)(a4 + 8) = a5;
  return result;
}

unint64_t sub_22AA11334()
{
  unint64_t result;

  result = qword_255B11280;
  if (!qword_255B11280)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for VideoReader.CameraConfiguration.Position, &type metadata for VideoReader.CameraConfiguration.Position);
    atomic_store(result, (unint64_t *)&qword_255B11280);
  }
  return result;
}

unint64_t sub_22AA11374()
{
  unint64_t result;

  result = qword_255B11288;
  if (!qword_255B11288)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for VideoReader.CameraConfiguration.PixelFormat, &type metadata for VideoReader.CameraConfiguration.PixelFormat);
    atomic_store(result, (unint64_t *)&qword_255B11288);
  }
  return result;
}

unint64_t sub_22AA113B4()
{
  unint64_t result;

  result = qword_255B11290;
  if (!qword_255B11290)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for VideoReader.CameraConfiguration.Resolution, &type metadata for VideoReader.CameraConfiguration.Resolution);
    atomic_store(result, (unint64_t *)&qword_255B11290);
  }
  return result;
}

uint64_t _s19CameraConfigurationVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[16])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = v3 - 2;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s19CameraConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for VideoReader.CameraConfiguration()
{
  OUTLINED_FUNCTION_24_2();
}

void type metadata accessor for VideoReader.CameraConfiguration.Position()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t _s19CameraConfigurationV8PositionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA114D4 + 4 * byte_22ABEE8A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA11508 + 4 * byte_22ABEE8A0[v4]))();
}

uint64_t sub_22AA11508(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA11510(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA11518);
  return result;
}

uint64_t sub_22AA11524(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA1152CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA11530(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA11538(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VideoReader.CameraConfiguration.PixelFormat()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t _s19CameraConfigurationV10ResolutionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22AA1159C + 4 * byte_22ABEE8AF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22AA115D0 + 4 * byte_22ABEE8AA[v4]))();
}

uint64_t sub_22AA115D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA115D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA115E0);
  return result;
}

uint64_t sub_22AA115EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA115F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22AA115F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA11600(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VideoReader.CameraConfiguration.Resolution()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t OUTLINED_FUNCTION_0_23()
{
  return sub_22ABE0250();
}

uint64_t OUTLINED_FUNCTION_2_32()
{
  return sub_22ABE0250();
}

uint64_t OUTLINED_FUNCTION_4_20()
{
  return sub_22ABE0244();
}

void OUTLINED_FUNCTION_6_33(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t EstimatorEncodingError.errorDescription.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_20();
  return v0;
}

uint64_t EstimatorEncodingError.debugDescription.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_20();
  return v0;
}

uint64_t static EstimatorEncodingError.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_22ABDFF68();
}

unint64_t sub_22AA116D4()
{
  unint64_t result;

  result = qword_255B11298;
  if (!qword_255B11298)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for EstimatorEncodingError, &type metadata for EstimatorEncodingError);
    atomic_store(result, (unint64_t *)&qword_255B11298);
  }
  return result;
}

ValueMetadata *type metadata accessor for EstimatorEncodingError()
{
  return &type metadata for EstimatorEncodingError;
}

uint64_t TemporalSegmentIdentifier.init(source:range:timescale:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t TemporalSegmentIdentifier.source.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22ABDEAEC();
  return v1;
}

uint64_t TemporalSegmentIdentifier.source.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TemporalSegmentIdentifier.source.modify())()
{
  return nullsub_1;
}

uint64_t TemporalSegmentIdentifier.range.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t TemporalSegmentIdentifier.range.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TemporalSegmentIdentifier.range.modify())()
{
  return nullsub_1;
}

uint64_t TemporalSegmentIdentifier.timescale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t TemporalSegmentIdentifier.timescale.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*TemporalSegmentIdentifier.timescale.modify())()
{
  return nullsub_1;
}

void TemporalSegmentIdentifier.rangeInSeconds.getter()
{
  char v0;
  char v1;

  OUTLINED_FUNCTION_3_32();
  if (!v1 & v0)
    __break(1u);
}

void TemporalSegmentIdentifier.durationInSeconds.getter()
{
  char v0;
  char v1;

  OUTLINED_FUNCTION_3_32();
  if (!v1 & v0)
    __break(1u);
}

uint64_t TemporalSegmentIdentifier.hash(into:)()
{
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABE0250();
  sub_22ABE0250();
  return sub_22ABE0250();
}

BOOL static TemporalSegmentIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BOOL8 result;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v6 = a2[2];
  v5 = a2[3];
  v7 = a2[4];
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    if (v2 != v6 || v4 != v5)
      return 0;
    return v3 == v7;
  }
  v9 = sub_22ABDFF68();
  result = 0;
  if ((v9 & 1) != 0 && v2 == v6 && v4 == v5)
    return v3 == v7;
  return result;
}

uint64_t TemporalSegmentIdentifier.hashValue.getter()
{
  sub_22ABE0244();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABE0250();
  sub_22ABE0250();
  sub_22ABE0250();
  return sub_22ABE0280();
}

uint64_t sub_22AA119CC()
{
  sub_22ABE0244();
  sub_22ABDEAEC();
  sub_22ABDEDB0();
  swift_bridgeObjectRelease();
  sub_22ABE0250();
  sub_22ABE0250();
  sub_22ABE0250();
  return sub_22ABE0280();
}

void TemporalSegmentIdentifier.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B112A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v10 = v1[3];
  v11 = v7;
  v9 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA11BE8();
  sub_22ABE02B0();
  LOBYTE(v13) = 0;
  v8 = v12;
  sub_22ABDFD04();
  if (!v8)
  {
    v13 = v11;
    v14 = v10;
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
    sub_22AA11DD8(&qword_255B112B0, MEMORY[0x24BEE1770], MEMORY[0x24BEE1B98]);
    sub_22ABDFD4C();
    LOBYTE(v13) = 2;
    sub_22ABDFD34();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  OUTLINED_FUNCTION_16();
}

unint64_t sub_22AA11BE8()
{
  unint64_t result;

  result = qword_255B112A8;
  if (!qword_255B112A8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEED58, &type metadata for TemporalSegmentIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B112A8);
  }
  return result;
}

void TemporalSegmentIdentifier.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B112B8);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA11BE8();
  sub_22ABE0298();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v10) = 0;
    OUTLINED_FUNCTION_4_21();
    v6 = sub_22ABDFC44();
    v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
    sub_22AA11DD8(&qword_255B112C0, MEMORY[0x24BEE1798], MEMORY[0x24BEE1BC8]);
    sub_22ABDEAEC();
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_4_21();
    v9 = sub_22ABDFC74();
    OUTLINED_FUNCTION_0_24();
    *a2 = v6;
    a2[1] = v8;
    a2[2] = v10;
    a2[3] = v11;
    a2[4] = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA11DD8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E85F8);
    v8 = a2;
    result = MEMORY[0x22E2E4D80](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22AA11E3C()
{
  unint64_t result;

  result = qword_255B112C8;
  if (!qword_255B112C8)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for TemporalSegmentIdentifier, &type metadata for TemporalSegmentIdentifier);
    atomic_store(result, (unint64_t *)&qword_255B112C8);
  }
  return result;
}

uint64_t sub_22AA11E78()
{
  unint64_t v0;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_22AA11EC4(char a1)
{
  if (!a1)
    return OUTLINED_FUNCTION_2_33();
  if (a1 == 1)
    return 0x65676E6172;
  return 0x6C616373656D6974;
}

void sub_22AA11F08(unsigned __int8 *a1, char *a2)
{
  sub_22AA1775C(*a1, *a2);
}

void sub_22AA11F14()
{
  sub_22ABC4A30();
}

uint64_t sub_22AA11F1C(uint64_t a1)
{
  char *v1;

  return sub_22ABC4BF8(a1, *v1);
}

void sub_22AA11F24()
{
  sub_22ABC549C();
}

uint64_t sub_22AA11F2C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA11E78();
  *a1 = result;
  return result;
}

uint64_t sub_22AA11F58@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22AA11EC4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22AA11F80()
{
  char *v0;

  return sub_22AA11EC4(*v0);
}

uint64_t sub_22AA11F88@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA11EC0();
  *a1 = result;
  return result;
}

void sub_22AA11FAC(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_22AA11FB8()
{
  sub_22AA11BE8();
  return sub_22ABE02EC();
}

uint64_t sub_22AA11FE0()
{
  sub_22AA11BE8();
  return sub_22ABE02F8();
}

void sub_22AA12008(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  TemporalSegmentIdentifier.init(from:)(a1, a2);
}

void sub_22AA1201C(_QWORD *a1)
{
  TemporalSegmentIdentifier.encode(to:)(a1);
}

uint64_t initializeWithCopy for TemporalSegmentIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_22ABDEAEC();
  return a1;
}

_QWORD *assignWithCopy for TemporalSegmentIdentifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for TemporalSegmentIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TemporalSegmentIdentifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemporalSegmentIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TemporalSegmentIdentifier()
{
  return &type metadata for TemporalSegmentIdentifier;
}

uint64_t storeEnumTagSinglePayload for TemporalSegmentIdentifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22AA121F8 + 4 * byte_22ABEEB65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22AA1222C + 4 * asc_22ABEEB60[v4]))();
}

uint64_t sub_22AA1222C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA12234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA1223CLL);
  return result;
}

uint64_t sub_22AA12248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA12250);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22AA12254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA1225C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TemporalSegmentIdentifier.CodingKeys()
{
  return &type metadata for TemporalSegmentIdentifier.CodingKeys;
}

unint64_t sub_22AA1227C()
{
  unint64_t result;

  result = qword_255B112D0;
  if (!qword_255B112D0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEED30, &type metadata for TemporalSegmentIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B112D0);
  }
  return result;
}

unint64_t sub_22AA122BC()
{
  unint64_t result;

  result = qword_255B112D8;
  if (!qword_255B112D8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEEC68, &type metadata for TemporalSegmentIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B112D8);
  }
  return result;
}

unint64_t sub_22AA122FC()
{
  unint64_t result;

  result = qword_255B112E0[0];
  if (!qword_255B112E0[0])
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABEEC90, &type metadata for TemporalSegmentIdentifier.CodingKeys);
    atomic_store(result, qword_255B112E0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_33()
{
  return 0x656372756F73;
}

double OUTLINED_FUNCTION_3_32()
{
  uint64_t v0;

  return (double)*(uint64_t *)(v0 + 16) / (double)*(uint64_t *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_4_21()
{
  uint64_t v0;

  return v0 - 96;
}

void sub_22AA12394(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for ComposedUpdatableSupervisedEstimator();
}

uint64_t sub_22AA123EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_79(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

void sub_22AA1241C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  UpdatableEstimatorToSupervisedAdaptor.init(_:)(a1, a4, AssociatedTypeWitness, a6, AssociatedConformanceWitness);
  OUTLINED_FUNCTION_38_12();
}

void sub_22AA124C8()
{
  OUTLINED_FUNCTION_106();
}

void sub_22AA124D8()
{
  type metadata accessor for ComposedUpdatableSupervisedEstimator();
}

void sub_22AA124EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
  OUTLINED_FUNCTION_51_10();
}

void sub_22AA12510(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  OUTLINED_FUNCTION_36_10();
  OUTLINED_FUNCTION_37_12();
  OUTLINED_FUNCTION_38_12();
}

void sub_22AA12594(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableEstimatorToSupervisedAdaptor<A, B>, a1);
  type metadata accessor for ComposedUpdatableSupervisedEstimator();
}

void sub_22AA125BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  UpdatableEstimatorToSupervisedAdaptor.init(_:)(v2, v1, v4, v0, v3);
  OUTLINED_FUNCTION_51_10();
}

void sub_22AA125E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  _QWORD v12[3];
  uint64_t v13;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v12[2] = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 8);
  v13 = v2;
  v12[1] = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v12 - v8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v5, v4);
  v10 = OUTLINED_FUNCTION_74();
  v11(v10);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_85();
  ComposedTransformer.init(_:_:)((uint64_t)v9, v6, v13);
}

void sub_22AA12714()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA12720()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_68();
  v1[13] = v2;
  v1[14] = v0;
  v1[11] = v3;
  v1[12] = v4;
  v1[9] = v5;
  v1[10] = v6;
  v1[7] = v7;
  v1[8] = v8;
  v9 = *(_QWORD *)(v3 + 32);
  v1[15] = v9;
  v1[16] = *(_QWORD *)(v9 + 8);
  v1[17] = *(_QWORD *)(v3 + 16);
  OUTLINED_FUNCTION_73_3();
  v1[18] = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v1[19] = sub_22ABDF0F8();
  v1[20] = OUTLINED_FUNCTION_73_3();
  v1[21] = sub_22ABDFA10();
  OUTLINED_FUNCTION_52_3();
}

void sub_22AA1281C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v2[22] = a1;
  v5 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v3);
  v2[23] = v5;
  v2[2] = v1;
  v2[3] = v3;
  v2[4] = a1;
  v2[24] = OUTLINED_FUNCTION_71_6(v5);
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22AA1285C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2[25] = a1;
  OUTLINED_FUNCTION_115();
  v7 = sub_22ABDF7B8();
  v2[26] = v7;
  v2[27] = *(_QWORD *)(v7 - 8);
  v2[28] = OUTLINED_FUNCTION_0_0();
  v2[29] = *(_QWORD *)(v1 - 8);
  v2[30] = OUTLINED_FUNCTION_0_0();
  v2[31] = type metadata accessor for AnnotatedFeature(255, v3, v5, v8);
  OUTLINED_FUNCTION_115();
  v9 = sub_22ABDFA10();
  v2[32] = v9;
  v2[33] = *(_QWORD *)(v9 - 8);
  v2[34] = OUTLINED_FUNCTION_0_0();
  v10 = *(_QWORD *)(v4 + 24);
  v2[35] = v10;
  v2[36] = *(_QWORD *)(v10 - 8);
  v2[37] = OUTLINED_FUNCTION_0_0();
  v11 = *(_QWORD *)(v4 + 40);
  v2[38] = v11;
  v2[39] = *(_QWORD *)(v11 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[40] = AssociatedTypeWitness;
  v2[41] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[42] = OUTLINED_FUNCTION_23_0();
  v2[43] = OUTLINED_FUNCTION_38_0();
  v13 = swift_checkMetadataState();
  v2[44] = v13;
  v2[45] = *(_QWORD *)(v13 - 8);
  v2[46] = swift_task_alloc();
  v2[47] = swift_task_alloc();
  v2[48] = *(_QWORD *)(v6 - 8);
  v2[49] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_117_0();
  v14 = sub_22ABDF7B8();
  v2[50] = v14;
  v2[51] = *(_QWORD *)(v14 - 8);
  v2[52] = OUTLINED_FUNCTION_0_0();
  v2[53] = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_117_0();
  v15 = sub_22ABDFA10();
  v2[54] = v15;
  v2[55] = *(_QWORD *)(v15 - 8);
  v2[56] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AA12A10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[38];
  v2 = v0[35];
  v3 = v0[17];
  v4 = v0[15];
  v6 = v0[12];
  v5 = v0[13];
  OUTLINED_FUNCTION_109_2();
  v7 = (_QWORD *)OUTLINED_FUNCTION_100();
  *v7 = v3;
  v7[1] = v2;
  v7[2] = v6;
  v7[3] = v4;
  v7[4] = v1;
  v7[5] = v5;
  v8 = v1;
  v9 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v10 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v10[2] = v3;
  v10[3] = v2;
  v10[4] = v6;
  v10[5] = v4;
  v10[6] = v8;
  v10[7] = v5;
  v10[8] = v9;
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA12AE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)();
  uint64_t (*v18)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  sub_22ABDFBC0();
  swift_release();
  v17 = *(void (**)())(v16 + 8);
  v6 = OUTLINED_FUNCTION_122_1();
  v7(v6);
  sub_22ABDEEB8();
  v8 = (_QWORD *)OUTLINED_FUNCTION_100();
  *v8 = v5;
  v8[1] = v15;
  v8[2] = v4;
  v8[3] = v0;
  v9 = v0;
  v8[4] = v2;
  v8[5] = v3;
  v10 = v2;
  v11 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v12 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v12[2] = v5;
  v12[3] = v15;
  v12[4] = v4;
  v12[5] = v9;
  v12[6] = v10;
  v12[7] = v3;
  v12[8] = v11;
  sub_22ABDFBC0();
  swift_release();
  v17();
  v13 = (_QWORD *)OUTLINED_FUNCTION_69_6();
  v1[57] = v13;
  *v13 = v1;
  v13[1] = sub_22AA12C30;
  return v18(v1[47], v1[8], v1[9], v1[10], v1[12], v1[13], v1[17], v1[16]);
}

uint64_t sub_22AA12C30()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 464) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA12C80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v2 = v0[58];
  sub_22ABDF1DC();
  if (!v2)
  {
    v0[59] = swift_task_alloc();
    OUTLINED_FUNCTION_52_3();
  }
  OUTLINED_FUNCTION_30_0(v0[45]);
  OUTLINED_FUNCTION_66_8();
  OUTLINED_FUNCTION_57_6(v3);
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return v4();
}

uint64_t sub_22AA12D60(uint64_t a1)
{
  uint64_t **v1;
  uint64_t *v2;

  *v1 = v2;
  v1[1] = (uint64_t *)sub_22AA12DAC;
  return Transformer.applied<A>(to:eventHandler:)(v2[56], v2[9], v2[10], v2[44], v2[54], v2[18], a1);
}

uint64_t sub_22AA12DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v2 + 480) = v1;
  *(_QWORD *)(v2 + 488) = v0;
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AA12DF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v0[61];
  sub_22ABDF1DC();
  if (!v2)
  {
    v7 = v0[60];
    v18 = v0[38];
    v8 = v0[35];
    v9 = v0[30];
    v15 = v0[17];
    v17 = v0[15];
    v16 = v0[13];
    v13 = v0[29];
    v14 = v0[12];
    OUTLINED_FUNCTION_93_2();
    v10();
    v0[6] = v7;
    sub_22ABE0178();
    OUTLINED_FUNCTION_3_8();
    sub_22ABDEEB8();
    OUTLINED_FUNCTION_28_4(v9, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    v11 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v11[2] = v15;
    v11[3] = v8;
    v11[4] = v14;
    v11[5] = v17;
    v11[6] = v18;
    v11[7] = v16;
    v12 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v12[2] = v15;
    v12[3] = v8;
    v12[4] = v14;
    v12[5] = v17;
    v12[6] = v18;
    v12[7] = v16;
    v12[8] = sub_22AA169D4;
    v12[9] = v11;
    OUTLINED_FUNCTION_86_4();
  }
  v3 = v0[45];
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_66_8();
  OUTLINED_FUNCTION_57_6(v4);
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_60_6();
  OUTLINED_FUNCTION_84_3();
  OUTLINED_FUNCTION_47_5();
  OUTLINED_FUNCTION_48_8();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return v5();
}

uint64_t sub_22AA12FFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD);

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v0);
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v9 + 40));
  v10 = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v1[62] = v5;
  v6 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], *(_QWORD *)(v3 - 88));
  *v5 = v1;
  v5[1] = sub_22AA130B0;
  return v10(v1[43], v1[34], v1[9], v1[10], v1[32], v6, v1[35], v1[39]);
}

uint64_t sub_22AA130B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 504) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 288);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v2 + 264));
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

void sub_22AA13128()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0[55];
  v2 = v0[56];
  v3 = v0[47];
  v5 = v0[45];
  v4 = v0[46];
  v7 = v0[43];
  v6 = v0[44];
  v8 = v0[42];
  v10 = v0[41];
  v11 = v0[54];
  v9 = v0[40];
  v12 = v0[7];
  OUTLINED_FUNCTION_30_0(v0[48]);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v3, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v7, v9);
  swift_getAssociatedConformanceWitness();
  ComposedTransformer.init(_:_:)(v4, v6, v12);
}

uint64_t sub_22AA13224()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_60_6();
  OUTLINED_FUNCTION_84_3();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA13280()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_53_9();
  OUTLINED_FUNCTION_4_22();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AA132E4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_53_9();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v1 + 360));
  OUTLINED_FUNCTION_4_22();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v1 + 8));
}

