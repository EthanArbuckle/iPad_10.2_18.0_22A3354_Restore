uint64_t sub_22AA8D5F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA8D5FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = OUTLINED_FUNCTION_13_52();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a4[5];
    return __swift_storeEnumTagSinglePayload(v5 + v10, v4, v4, v9);
  }
  result = OUTLINED_FUNCTION_19_35();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a4[6];
    return __swift_storeEnumTagSinglePayload(v5 + v10, v4, v4, v9);
  }
  *(_QWORD *)(v5 + a4[8]) = (v4 - 1);
  return result;
}

uint64_t type metadata accessor for SpatialTemporalGraphConvolutionModel()
{
  uint64_t result;

  result = qword_255B14A80;
  if (!qword_255B14A80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22AA8D6C0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_22ABDDAE4();
  if (v1 <= 0x3F)
  {
    result = sub_22ABDD8B0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SpatialTemporalGraphConvolutionModel.Configuration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SpatialTemporalGraphConvolutionModel.Configuration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SpatialTemporalGraphConvolutionModel.Configuration()
{
  return &type metadata for SpatialTemporalGraphConvolutionModel.Configuration;
}

uint64_t sub_22AA8D7CC()
{
  return sub_22A9BED8C(&qword_255B14AC8, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolutionModel, (uint64_t)&unk_22ABF4F90);
}

uint64_t sub_22AA8D7F8()
{
  return sub_22A9BED8C(&qword_255B14AD0, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolutionModel, (uint64_t)&unk_22ABF4F60);
}

uint64_t sub_22AA8D824()
{
  return sub_22A9BED8C(&qword_255B14AD8, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolutionModel, (uint64_t)&unk_22ABF4F38);
}

unint64_t sub_22AA8D850()
{
  unint64_t result;

  result = qword_255B14AF0;
  if (!qword_255B14AF0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5228, &type metadata for SpatialTemporalGraphConvolutionModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14AF0);
  }
  return result;
}

unint64_t sub_22AA8D88C()
{
  unint64_t result;

  result = qword_255B14AF8;
  if (!qword_255B14AF8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4F10, &type metadata for SpatialTemporalGraphConvolutionModel.Configuration);
    atomic_store(result, (unint64_t *)&qword_255B14AF8);
  }
  return result;
}

unint64_t sub_22AA8D8C8()
{
  unint64_t result;

  result = qword_255B14B08;
  if (!qword_255B14B08)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BE6B968], MEMORY[0x24BE6B958]);
    atomic_store(result, (unint64_t *)&qword_255B14B08);
  }
  return result;
}

uint64_t sub_22AA8D904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SpatialTemporalGraphConvolutionModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA8D948(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SpatialTemporalGraphConvolutionModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22AA8D984()
{
  unint64_t result;

  result = qword_255B14B30;
  if (!qword_255B14B30)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF4EE8, &type metadata for SpatialTemporalGraphConvolutionModel.Configuration);
    atomic_store(result, (unint64_t *)&qword_255B14B30);
  }
  return result;
}

unint64_t sub_22AA8D9C0()
{
  unint64_t result;

  result = qword_255B14B40;
  if (!qword_255B14B40)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BE6B960], MEMORY[0x24BE6B958]);
    atomic_store(result, (unint64_t *)&qword_255B14B40);
  }
  return result;
}

uint64_t sub_22AA8D9FC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B14B10);
    v10 = sub_22A9BED8C(a2, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolution, a3);
    result = MEMORY[0x22E2E4D80](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22AA8DA80()
{
  unint64_t result;

  result = qword_255B14B68;
  if (!qword_255B14B68)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF51D8, &type metadata for SpatialTemporalGraphConvolutionModel.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14B68);
  }
  return result;
}

ValueMetadata *type metadata accessor for SpatialTemporalGraphConvolutionModel.Configuration.CodingKeys()
{
  return &type metadata for SpatialTemporalGraphConvolutionModel.Configuration.CodingKeys;
}

uint64_t _s18CreateMLComponents36SpatialTemporalGraphConvolutionModelV13ConfigurationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_22AA8DB20 + 4 * byte_22ABF4E5F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_22AA8DB54 + 4 * byte_22ABF4E5A[v4]))();
}

uint64_t sub_22AA8DB54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA8DB5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA8DB64);
  return result;
}

uint64_t sub_22AA8DB70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA8DB78);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_22AA8DB7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA8DB84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpatialTemporalGraphConvolutionModel.CodingKeys()
{
  return &type metadata for SpatialTemporalGraphConvolutionModel.CodingKeys;
}

unint64_t sub_22AA8DBA4()
{
  unint64_t result;

  result = qword_255B14B78;
  if (!qword_255B14B78)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF50F8, &type metadata for SpatialTemporalGraphConvolutionModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14B78);
  }
  return result;
}

unint64_t sub_22AA8DBE4()
{
  unint64_t result;

  result = qword_255B14B80;
  if (!qword_255B14B80)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF51B0, &type metadata for SpatialTemporalGraphConvolutionModel.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14B80);
  }
  return result;
}

unint64_t sub_22AA8DC24()
{
  unint64_t result;

  result = qword_255B14B88;
  if (!qword_255B14B88)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5120, &type metadata for SpatialTemporalGraphConvolutionModel.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14B88);
  }
  return result;
}

unint64_t sub_22AA8DC64()
{
  unint64_t result;

  result = qword_255B14B90;
  if (!qword_255B14B90)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5148, &type metadata for SpatialTemporalGraphConvolutionModel.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14B90);
  }
  return result;
}

unint64_t sub_22AA8DCA4()
{
  unint64_t result;

  result = qword_255B14B98;
  if (!qword_255B14B98)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5068, &type metadata for SpatialTemporalGraphConvolutionModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14B98);
  }
  return result;
}

unint64_t sub_22AA8DCE4()
{
  unint64_t result;

  result = qword_255B14BA0;
  if (!qword_255B14BA0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5090, &type metadata for SpatialTemporalGraphConvolutionModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14BA0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_51()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v1, v3, v0);
}

uint64_t OUTLINED_FUNCTION_4_48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a1 + 8))(*(_QWORD *)(v2 - 200), v1);
}

uint64_t OUTLINED_FUNCTION_10_37()
{
  return sub_22ABDD7FC();
}

uint64_t OUTLINED_FUNCTION_11_47()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_13_52()
{
  return sub_22ABDDAE4();
}

uint64_t OUTLINED_FUNCTION_16_39(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 192) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_17_36()
{
  return sub_22ABDD9D0();
}

uint64_t OUTLINED_FUNCTION_19_35()
{
  return sub_22ABDD8B0();
}

unint64_t OUTLINED_FUNCTION_20_36()
{
  _QWORD *v0;
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(v0, v1);
  return sub_22AA8D850();
}

uint64_t OUTLINED_FUNCTION_21_41()
{
  return sub_22ABDD964();
}

uint64_t OUTLINED_FUNCTION_24_33()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 - 168));
}

uint64_t destroy for LinearSupportVectorClassifierProblem()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LinearSupportVectorClassifierProblem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain();
  sub_22ABDEAEC();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LinearSupportVectorClassifierProblem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for LinearSupportVectorClassifierProblem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for LinearSupportVectorClassifierProblem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LinearSupportVectorClassifierProblem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinearSupportVectorClassifierProblem()
{
  return &type metadata for LinearSupportVectorClassifierProblem;
}

uint64_t sub_22AA8E040()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void sub_22AA8E048(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v21[2];
  char v22;
  uint64_t v23;

  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  if ((a3 & 1) == 0)
  {
    v11 = 0;
    goto LABEL_17;
  }
  v21[0] = *(_QWORD *)a1;
  v21[1] = v7;
  v22 = v8;
  v23 = v9;
  sub_22AB67D38((uint64_t)v21);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v11 = v10;
    if (v7)
    {
      v12 = 0;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22AB88498();
          v9 = v13;
        }
        v14 = v7;
        if ((v8 & 1) != 0)
        {
          if ((unsigned __int128)((uint64_t)v12 * (__int128)v6) >> 64 != (uint64_t)(v12 * v6) >> 63)
            goto LABEL_22;
          v14 = 1;
        }
        if (v12 >= *(_QWORD *)(v11 + 16))
          break;
        if (v6 > 0x7FFFFFFF)
          goto LABEL_19;
        if (v6 < (uint64_t)0xFFFFFFFF80000000)
          goto LABEL_20;
        if (v14 > 0x7FFFFFFF)
          goto LABEL_21;
        cblas_dscal_NEWLAPACK();
        if (v7 == ++v12)
          goto LABEL_17;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_17:
    swift_retain();
    sub_22ABDEAEC();
    v15 = sub_22ABDF074();
    *(_QWORD *)(v15 + 16) = 2;
    __asm { FMOV            V0.2D, #1.0 }
    *(_OWORD *)(v15 + 32) = _Q0;
    swift_bridgeObjectRelease();
    swift_release();
    *(_QWORD *)a4 = v6;
    *(_QWORD *)(a4 + 8) = v7;
    *(_BYTE *)(a4 + 16) = v8;
    *(_QWORD *)(a4 + 24) = v9;
    *(_QWORD *)(a4 + 32) = a2;
    *(_QWORD *)(a4 + 40) = 2;
    *(_QWORD *)(a4 + 48) = v15;
    *(_QWORD *)(a4 + 56) = v11;
    *(_QWORD *)(a4 + 64) = 0x403E000000000000;
    return;
  }
LABEL_23:
  __break(1u);
}

double sub_22AA8E1D4(uint64_t a1)
{
  const void *v1;
  _BYTE v4[72];

  OUTLINED_FUNCTION_26_3(v4, v1);
  return sub_22ABB8CB8(a1, (void (*)(double *__return_ptr, uint64_t, _QWORD, uint64_t))sub_22AA8EEC4);
}

uint64_t sub_22AA8E22C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, __int128 *a3@<X3>, double *a4@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  double v11;
  BOOL v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  long double v20;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;

  v4 = a3[1];
  v27 = *a3;
  v28 = v4;
  v5 = v27;
  if ((v27 & 0x8000000000000000) != 0)
    goto LABEL_34;
  if ((_QWORD)v27)
  {
    v6 = *((_QWORD *)a3 + 4);
    if ((unint64_t)(v27 - 1) >= *(_QWORD *)(v6 + 16))
      goto LABEL_35;
    v9 = 0;
    v26 = v28;
    v10 = *((_QWORD *)a3 + 6);
    v11 = *((double *)a3 + 8);
    v23 = v10 + 32;
    v25 = *(_QWORD *)(v10 + 16);
    v24 = v6 + 32;
    v13 = a2 < (uint64_t)0xFFFFFFFF80000000 || a1 < (uint64_t)0xFFFFFFFF80000000;
    v14 = 0.0;
    while (1)
    {
      v15 = v5;
      if ((v26 & 1) == 0)
      {
        if ((unsigned __int128)(v9 * (__int128)*((uint64_t *)&v27 + 1)) >> 64 != (v9 * *((_QWORD *)&v27 + 1)) >> 63)
          goto LABEL_33;
        v15 = 1;
      }
      if (*((_QWORD *)&v27 + 1) != a1)
        goto LABEL_36;
      if (a1 > 0x7FFFFFFF)
        break;
      if (v15 > 0x7FFFFFFF)
        goto LABEL_29;
      if (v13)
        goto LABEL_30;
      if (a2 > 0x7FFFFFFF)
        goto LABEL_31;
      v16 = *(_QWORD *)(v24 + 8 * v9);
      sub_22AA8EEDC((uint64_t)&v27);
      cblas_ddot_NEWLAPACK();
      v18 = (((double)v16 + (double)v16 + -1.0) * v17 + -1.0) * -v11;
      v19 = 0.0;
      if (v18 >= -100.0)
      {
        if (v18 <= 50.0)
        {
          v20 = exp(v18);
          v19 = log1p(v20);
        }
        else
        {
          v19 = v18;
        }
      }
      if (v16 >= v25)
        goto LABEL_32;
      ++v9;
      v14 = v14 + v19 * *(double *)(v23 + 8 * v16) / v11;
      result = sub_22AA8EF04((uint64_t)&v27);
      if (v5 == v9)
        goto LABEL_27;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    sub_22AA8EEDC((uint64_t)&v27);
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    result = sub_22ABDFADC();
    __break(1u);
    return result;
  }
  v14 = 0.0;
LABEL_27:
  *a4 = v14;
  return result;
}

_QWORD *sub_22AA8E544(uint64_t a1)
{
  const void *v1;
  const void *v2;
  uint64_t v4;
  _QWORD v6[6];
  char v7;
  _BYTE *v8;
  _BYTE v9[72];

  v2 = v1;
  OUTLINED_FUNCTION_26_3(v9, v2);
  v8 = v9;
  v6[2] = a1;
  v6[3] = sub_22AA8EFA4;
  v6[4] = &v7;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E7880);
  return DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AA8EFC8, (uint64_t)v6, v4);
}

void sub_22AA8E5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double *a8, uint64_t *a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _BYTE __dst[72];
  uint64_t v25;

  *a8 = 0.0;
  sub_22AA8E768(a4, a5, a6, 0.0);
  v16 = a9[1];
  if (v16)
  {
    v23 = a1;
    v25 = a2;
    v17 = *a9;
    v18 = 0x100000 / v16;
    if (0x100000 / v16 <= 0)
    {
      if (v17 <= 1)
      {
LABEL_10:
        memcpy(__dst, a9, sizeof(__dst));
        sub_22AA8E7C0(v23, v25, a3, a8, a4, a5, a6);
        return;
      }
      v18 = 1;
    }
    else if (v18 >= v17)
    {
      goto LABEL_10;
    }
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
    v20 = v17 + v18;
    if (!__OFADD__(v17, v18))
    {
      v21 = v20 - 1;
      if (!__OFSUB__(v20, 1))
      {
        v22 = v19;
        sub_22AA8EF2C();
        MEMORY[0x24BDAC7A8](v21 / v18);
        sub_22ABDF4E8();

        return;
      }
      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_13:
  __break(1u);
}

uint64_t sub_22AA8E768(uint64_t result, uint64_t a2, uint64_t a3, double a4)
{
  BOOL v4;
  int64_t v5;
  BOOL v6;

  if (a3)
  {
    v4 = a2 >= 0;
    if (a3 > 0)
      v4 = a2 < 1;
    if (!v4)
    {
      v5 = 0;
      do
      {
        *(double *)(result + 8 * v5) = a4;
        if (__OFADD__(v5, a3))
          v5 = ((v5 + a3) >> 63) ^ 0x8000000000000000;
        else
          v5 += a3;
        v6 = v5 <= a2;
        if (a3 > 0)
          v6 = v5 >= a2;
      }
      while (!v6);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22AA8E7C0(uint64_t a1, uint64_t a2, uint64_t a3, double *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __int128 *v7;
  uint64_t result;
  __int128 v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v25[72];
  __int128 v26;
  __int128 v27;

  result = (uint64_t)OUTLINED_FUNCTION_26_3(v25, v7);
  v10 = v7[1];
  v26 = *v7;
  v27 = v10;
  v11 = v26;
  if ((v26 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if ((_QWORD)v26)
  {
    v12 = 0;
    v13 = *((_QWORD *)&v27 + 1) + 32;
    v14 = v27;
    while (v11 != v12)
    {
      v15 = *((_QWORD *)&v26 + 1);
      v16 = v12;
      v17 = v11;
      if ((v14 & 1) == 0)
      {
        v16 = v12 * *((_QWORD *)&v26 + 1);
        if ((unsigned __int128)(v12 * (__int128)*((uint64_t *)&v26 + 1)) >> 64 != (v12 * *((_QWORD *)&v26 + 1)) >> 63)
          goto LABEL_11;
        v17 = 1;
      }
      v18 = v13 + 8 * v16;
      sub_22AA8EEDC((uint64_t)&v26);
      sub_22AA8ECC8(v18, v15, v17, (uint64_t)v25, v12, a1, a2, a3, a4, a5, a6, a7);
      result = sub_22AA8EF04((uint64_t)&v26);
      if (v11 == ++v12)
        return result;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

double *sub_22AA8E8DC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, double *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  id v25;
  uint64_t v26;
  double v27[2];

  v27[1] = *(double *)MEMORY[0x24BDAC8D0];
  v11 = *(_QWORD *)(a2 + 8);
  if (v11 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)(v11 + 0x1000000000000000) >> 61)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  v16 = isStackAllocationSafe;
  v24 = a8;
  v25 = a7;
  v26 = a6;
  v23 = a10;
  if (8 * v11 < 1025
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v22 = (uint64_t)&v22;
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v18 = (char *)&v22 - v17;
    if (!v11)
    {
LABEL_8:
      v27[0] = 0.0;
      return sub_22AA8EAF8(v27, (uint64_t)v18, v11, 1, v16, a3, (__int128 *)a2, a4, a5, v26, v25, v24, a9, v23, a11);
    }
    if (v11 >= 1)
    {
      bzero((char *)&v22 - v17, 8 * v11);
      goto LABEL_8;
    }
    goto LABEL_16;
  }
  v20 = (void *)swift_slowAlloc();
  v21 = (uint64_t)v20;
  if (v11)
  {
    if (v11 < 1)
      goto LABEL_17;
    bzero(v20, 8 * v11);
  }
  v27[0] = 0.0;
  sub_22AA8EAF8(v27, v21, v11, 1, v16, a3, (__int128 *)a2, a4, a5, v26, v25, v24, a9, v23, a11);
  return (double *)MEMORY[0x22E2E4E64](v21, -1, -1);
}

double *sub_22AA8EAF8(double *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int128 *a7, uint64_t a8, uint64_t a9, uint64_t a10, id a11, double *a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int64_t v15;
  __int128 v17;
  uint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  double *v28;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v33 = a4;
  v28 = result;
  v15 = a5 * a6;
  if ((unsigned __int128)(a5 * (__int128)a6) >> 64 != (a5 * a6) >> 63)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v17 = a7[1];
  v31 = *a7;
  v32 = v17;
  v18 = a5 + 1;
  if (__OFADD__(a5, 1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((unsigned __int128)(v18 * (__int128)a6) >> 64 == (v18 * a6) >> 63)
  {
    v27 = v31;
    if (v18 * a6 >= (uint64_t)v31)
      v19 = v31;
    else
      v19 = v18 * a6;
    if (v19 < v15)
      goto LABEL_21;
    if (v15 == v19)
    {
LABEL_15:
      objc_msgSend(a11, sel_lock);
      *a12 = *v28 + *a12;
      UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(a2, a3, v33, a13, a14, a15);
      return (double *)objc_msgSend(a11, sel_unlock);
    }
    v25 = *((_QWORD *)&v32 + 1) + 32;
    v20 = v32;
    while (v15 < v19)
    {
      v21 = *((_QWORD *)&v31 + 1);
      v22 = v15;
      v23 = v27;
      if ((v20 & 1) == 0)
      {
        v22 = v15 * *((_QWORD *)&v31 + 1);
        if ((unsigned __int128)(v15 * (__int128)*((uint64_t *)&v31 + 1)) >> 64 != (v15 * *((_QWORD *)&v31 + 1)) >> 63)
          goto LABEL_17;
        v23 = 1;
      }
      v24 = v25 + 8 * v22;
      sub_22AA8EEDC((uint64_t)&v31);
      sub_22AA8ECC8(v24, v21, v23, (uint64_t)a7, v15, a8, a9, a10, v28, a2, a3, v33);
      result = (double *)sub_22AA8EF04((uint64_t)&v31);
      if (v19 == ++v15)
        goto LABEL_15;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_22AA8ECC8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v16;
  int64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  long double v22;
  uint64_t v23;
  double v24;

  if ((a5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v13 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v13 + 16) <= a5)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v16 = result;
  v17 = *(_QWORD *)(v13 + 8 * a5 + 32);
  v18 = *(double *)(a4 + 64);
  dot(_:_:)(result, a2, a3, a6, a7, a8);
  v20 = -(v18 * (v19 * ((double)v17 + (double)v17 + -1.0) + -1.0));
  v21 = 0.0;
  if (v20 >= -100.0)
  {
    v21 = -(v18 * (v19 * ((double)v17 + (double)v17 + -1.0) + -1.0));
    if (v20 <= 50.0)
    {
      v22 = exp(v20);
      v21 = log1p(v22);
    }
  }
  exp(-v20);
  v23 = *(_QWORD *)(a4 + 48);
  sub_22AB56428(v17, v23);
  *a9 = *a9 + v21 * v24 / v18;
  sub_22AB56428(v17, v23);
  return UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(v16, a2, a3, a10, a11, a12);
}

void sub_22AA8EE34()
{
  sub_22ABDFADC();
  __break(1u);
}

void sub_22AA8EE90(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = sub_22AA8E1D4(a1);
}

void sub_22AA8EEB8()
{
  sub_22AA8EE34();
}

uint64_t sub_22AA8EEC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, double *a3@<X8>)
{
  uint64_t v3;

  return sub_22AA8E22C(a1, a2, *(__int128 **)(v3 + 16), a3);
}

uint64_t sub_22AA8EEDC(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_22AA8EF04(uint64_t a1)
{
  swift_release();
  return a1;
}

unint64_t sub_22AA8EF2C()
{
  unint64_t result;

  result = qword_255B15CB0;
  if (!qword_255B15CB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255B15CB0);
  }
  return result;
}

double *sub_22AA8EF68(uint64_t a1)
{
  uint64_t v1;

  return sub_22AA8E8DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), *(double **)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

void sub_22AA8EFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double *a8)
{
  uint64_t v8;

  sub_22AA8E5C8(a1, a2, a3, a4, a5, a6, a7, a8, *(uint64_t **)(v8 + 16));
}

_QWORD *sub_22AA8EFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_22AB952AC(a1, a2, a3, v3[2], v3[3], v3[4]);
}

void (*sub_22AA8EFE4(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  sub_22ABDEAEC();
  v6[5] = sub_22AA8F668(v6, a2, a3);
  return sub_22AA8F050;
}

void (*sub_22AA8F054(_QWORD *a1, uint64_t a2))(uint64_t *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_22AA8F6FC(v4, a2);
  return sub_22AA8F0A0;
}

void sub_22AA8F0A0(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  OUTLINED_FUNCTION_1_45(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 32));
  OUTLINED_FUNCTION_0_2(v1);
}

void (*sub_22AA8F0C8(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  sub_22ABDEAEC();
  v6[5] = sub_22AA8F7AC(v6, a2, a3);
  return sub_22AA8F050;
}

void sub_22AA8F134(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  OUTLINED_FUNCTION_1_45(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 40));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_2(v1);
}

uint64_t JointsSelector.ignoredJoints.getter()
{
  return sub_22ABDEAEC();
}

uint64_t JointsSelector.ignoredJoints.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*JointsSelector.ignoredJoints.modify())()
{
  return nullsub_1;
}

uint64_t JointsSelector.selectedJoints.getter()
{
  return sub_22ABDEAEC();
}

uint64_t JointsSelector.selectedJoints.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*JointsSelector.selectedJoints.modify())()
{
  return nullsub_1;
}

uint64_t JointsSelector.init(ignoredJoints:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

uint64_t JointsSelector.init(selectedJoints:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = result;
  return result;
}

void JointsSelector.applied(to:eventHandler:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t *);
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  void (*v44)(uint64_t *);
  uint64_t v46;
  int64_t v47;
  _BYTE v48[32];
  uint64_t v49;

  v3 = *a1;
  v4 = *v2;
  v5 = v2[1];
  v49 = v3;
  v46 = v3 + 64;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v3 + 64);
  v47 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v9 = 0;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v22 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * i);
    v24 = *v22;
    v23 = v22[1];
    if (!v4 || (v25 = *(_QWORD *)(v4 + 16), v26 = (_QWORD *)(v4 + 40), !v25))
    {
LABEL_36:
      v28 = sub_22ABDEAEC();
      if (!v5)
        goto LABEL_51;
LABEL_41:
      v40 = *(_QWORD *)(v5 + 16);
      v41 = (_QWORD *)(v5 + 40);
      if (v40)
      {
        while (*(v41 - 1) != v24 || *v41 != v23)
        {
          v28 = OUTLINED_FUNCTION_6_61();
          if ((v28 & 1) != 0)
            break;
          v41 += 2;
          if (!--v40)
            goto LABEL_48;
        }
      }
      else
      {
LABEL_48:
        v44 = OUTLINED_FUNCTION_3_60(v28, v29, v30, v31, v32);
        if (*(_QWORD *)(v43 + 8))
        {
          *(_QWORD *)(v43 + 16) = 0;
          *(_QWORD *)(v43 + 24) = 0;
          *(_DWORD *)(v43 + 32) = 0;
        }
        OUTLINED_FUNCTION_1_45((uint64_t)v48, (uint64_t (*)(uint64_t, _QWORD))v44);
      }
      goto LABEL_51;
    }
    while (1)
    {
      v27 = *(v26 - 1) == v24 && *v26 == v23;
      if (v27 || (OUTLINED_FUNCTION_6_61() & 1) != 0)
        break;
      v26 += 2;
      if (!--v25)
        goto LABEL_36;
    }
    v33 = sub_22ABDEAEC();
    v39 = OUTLINED_FUNCTION_3_60(v33, v34, v35, v36, v37);
    if (*(_QWORD *)(v38 + 8))
    {
      *(_QWORD *)(v38 + 16) = 0;
      *(_QWORD *)(v38 + 24) = 0;
      *(_DWORD *)(v38 + 32) = 0;
    }
    v28 = OUTLINED_FUNCTION_1_45((uint64_t)v48, (uint64_t (*)(uint64_t, _QWORD))v39);
    if (v5)
      goto LABEL_41;
LABEL_51:
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v12 >= v47)
      goto LABEL_53;
    v13 = *(_QWORD *)(v46 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      OUTLINED_FUNCTION_5_45();
      if (v14 == v15)
        goto LABEL_53;
      OUTLINED_FUNCTION_4_49();
      if (!v13)
      {
        v9 = v16 + 2;
        OUTLINED_FUNCTION_5_45();
        if (v14 == v15)
          goto LABEL_53;
        OUTLINED_FUNCTION_4_49();
        if (!v13)
        {
          v9 = v17 + 3;
          OUTLINED_FUNCTION_5_45();
          if (v14 == v15)
            goto LABEL_53;
          OUTLINED_FUNCTION_4_49();
          if (!v13)
          {
            v9 = v18 + 4;
            OUTLINED_FUNCTION_5_45();
            if (v14 == v15)
              goto LABEL_53;
            OUTLINED_FUNCTION_4_49();
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_27:
    v8 = (v13 - 1) & v13;
  }
  v20 = v19 + 5;
  if (v20 >= v47)
  {
LABEL_53:
    swift_release();
    *a2 = v49;
    a2[1] = 0x6C6C414F50494E56;
    a2[2] = 0xE800000000000000;
    return;
  }
  v13 = *(_QWORD *)(v46 + 8 * v20);
  if (v13)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    OUTLINED_FUNCTION_5_45();
    if (v14 == v15)
      goto LABEL_53;
    OUTLINED_FUNCTION_4_49();
    v20 = v21 + 1;
    if (v13)
      goto LABEL_27;
  }
LABEL_55:
  __break(1u);
}

uint64_t sub_22AA8F48C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;

  JointsSelector.applied(to:eventHandler:)(a2, a1);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t JointsSelector.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  if (*v0)
  {
    if (v1)
    {
      v5 = 0;
      sub_22ABDF7A0();
      sub_22ABDEDC8();
      MEMORY[0x22E2E3298](v2, &type metadata for JointKey);
      OUTLINED_FUNCTION_7_59();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_59();
      v3 = v1;
    }
    else
    {
      sub_22ABDF7A0();
      swift_bridgeObjectRelease();
      v5 = 0xD00000000000001ELL;
      v3 = v2;
    }
  }
  else
  {
    if (!v1)
      return 0x655373746E696F4ALL;
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v5 = 0xD00000000000001FLL;
    v3 = v1;
  }
  MEMORY[0x22E2E3298](v3, &type metadata for JointKey);
  OUTLINED_FUNCTION_7_59();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  return v5;
}

uint64_t (*sub_22AA8F668(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  sub_22ABDEAEC();
  v6[9] = sub_22AA8FD8C(v6);
  v6[10] = sub_22AA8F880(v6 + 4, a2, a3);
  return sub_22AA8F6F8;
}

void (*sub_22AA8F6FC(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_22AA8FDB8(v4);
  v4[9] = sub_22AA8F9F4(v4 + 4, a2);
  return sub_22AA8F778;
}

void sub_22AA8F778(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  OUTLINED_FUNCTION_1_45(*(_QWORD *)a1 + 32, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72));
  v2(v1, 0);
  OUTLINED_FUNCTION_0_2(v1);
}

uint64_t (*sub_22AA8F7AC(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  sub_22ABDEAEC();
  v6[9] = sub_22AA8FDB8(v6);
  v6[10] = sub_22AA8FBC8(v6 + 4, a2, a3);
  return sub_22AA8F6F8;
}

void sub_22AA8F83C(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  OUTLINED_FUNCTION_1_45(*(_QWORD *)a1 + 32, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80));
  swift_bridgeObjectRelease();
  v2(v1, 0);
  OUTLINED_FUNCTION_2_55(v1);
}

void (*sub_22AA8F880(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int v20;
  void (*result)(uint64_t *);

  v4 = v3;
  v8 = malloc(0x48uLL);
  *a1 = v8;
  v8[6] = a3;
  v8[7] = v4;
  v8[5] = a2;
  v9 = *v4;
  v10 = sub_22AA03684(a2, a3);
  *((_BYTE *)v8 + 36) = v11 & 1;
  if (__OFADD__(*(_QWORD *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10D18);
  if ((sub_22ABDFA64() & 1) != 0)
  {
    v14 = sub_22AA03684(a2, a3);
    if ((v13 & 1) == (v15 & 1))
    {
      v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t *))sub_22ABE0190();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[8] = v12;
  if ((v13 & 1) != 0)
  {
    v16 = *(_QWORD *)(*v4 + 56) + 40 * v12;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_OWORD *)(v16 + 16);
    v20 = *(_DWORD *)(v16 + 32);
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v20 = 0;
    v19 = 0uLL;
  }
  *v8 = v17;
  v8[1] = v18;
  *((_OWORD *)v8 + 1) = v19;
  *((_DWORD *)v8 + 8) = v20;
  return sub_22AA8F9BC;
}

void sub_22AA8F9BC(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_22AA8FDD8(*a1, *(_BYTE *)(*a1 + 36), *(uint64_t **)(*a1 + 56), *(_QWORD *)(*a1 + 64), *(_QWORD *)(*a1 + 40), *(_QWORD *)(*a1 + 48));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_2(v1);
}

void (*sub_22AA8F9F4(_QWORD *a1, uint64_t a2))(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*result)(uint64_t **);

  v3 = v2;
  v6 = malloc(0x38uLL);
  *a1 = v6;
  v6[4] = a2;
  v6[5] = v3;
  v7 = *v3;
  v8 = sub_22AA036F0();
  *((_BYTE *)v6 + 25) = v9 & 1;
  if (__OFADD__(*(_QWORD *)(v7 + 16), (v9 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v10 = v8;
  v11 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F2C8);
  if ((sub_22ABDFA64() & 1) != 0)
  {
    v12 = sub_22AA036F0();
    if ((v11 & 1) == (v13 & 1))
    {
      v10 = v12;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **))sub_22ABE0190();
    __break(1u);
    return result;
  }
LABEL_5:
  v6[6] = v10;
  if ((v11 & 1) != 0)
  {
    v14 = *(_QWORD *)(*v3 + 56) + 32 * v10;
    v15 = *(_QWORD *)v14;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(_QWORD *)(v14 + 16);
    v18 = *(_BYTE *)(v14 + 24);
  }
  else
  {
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
  }
  *v6 = v15;
  v6[1] = v16;
  v6[2] = v17;
  *((_BYTE *)v6 + 24) = v18;
  return sub_22AA8FB1C;
}

void sub_22AA8FB1C(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  _QWORD **v8;
  uint64_t v9;

  v1 = *a1;
  v2 = **a1;
  v3 = (*a1)[1];
  v4 = (*a1)[2];
  v5 = *((_BYTE *)*a1 + 25);
  if (v3)
  {
    v6 = v1[3] & 1;
    v8 = (_QWORD **)v1[5];
    v7 = v1[6];
    if ((v5 & 1) != 0)
    {
      v9 = (*v8)[7] + 32 * v7;
      *(_QWORD *)v9 = v2;
      *(_QWORD *)(v9 + 8) = v3;
      *(_QWORD *)(v9 + 16) = v4;
      *(_BYTE *)(v9 + 24) = v6;
    }
    else
    {
      sub_22AA04564(v7, v1[4], v2, v3, v4, v6, *v8);
    }
  }
  else if ((*((_BYTE *)*a1 + 25) & 1) != 0)
  {
    sub_22ABDFA7C();
  }
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_55(v1);
}

void (*sub_22AA8FBC8(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[1] = a3;
  v8[2] = v3;
  *v8 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14C10);
  v10 = malloc(*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  v8[3] = v10;
  v11 = *v3;
  v12 = sub_22AA03688();
  *((_BYTE *)v8 + 40) = v13 & 1;
  if (__OFADD__(*(_QWORD *)(v11 + 16), (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v14 = v12;
  v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F288);
  if ((sub_22ABDFA64() & 1) != 0)
  {
    v16 = sub_22AA03688();
    if ((v15 & 1) == (v17 & 1))
    {
      v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **))sub_22ABE0190();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[4] = v14;
  if ((v15 & 1) != 0)
  {
    v18 = *(_QWORD *)(*v4 + 56);
    v19 = sub_22ABDE600();
    (*(void (**)(void *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v10, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v14, v19);
    v20 = 0;
  }
  else
  {
    v19 = sub_22ABDE600();
    v20 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v20, 1, v19);
  return sub_22AA8FD48;
}

void sub_22AA8FD48(uint64_t **a1)
{
  uint64_t *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)(*a1)[3];
  sub_22AA8FEC8((uint64_t)v2, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1]);
  sub_22AA90230((uint64_t)v2);
  free(v2);
  OUTLINED_FUNCTION_0_2(v1);
}

uint64_t (*sub_22AA8FD8C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_22AA8FDAC;
}

uint64_t sub_22AA8FDAC(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t (*sub_22AA8FDB8(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_22AA902B8;
}

uint64_t sub_22AA8FDD8(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;
  int v13;

  v6 = *(_QWORD *)(a1 + 8);
  if (v6)
  {
    v7 = *(_DWORD *)(a1 + 32);
    *(_QWORD *)&v11 = *(_QWORD *)a1;
    *((_QWORD *)&v11 + 1) = v6;
    v12 = *(_OWORD *)(a1 + 16);
    v13 = v7;
    if ((a2 & 1) != 0)
    {
      v8 = *(_QWORD *)(*a3 + 56) + 40 * a4;
      v9 = v12;
      *(_OWORD *)v8 = v11;
      *(_OWORD *)(v8 + 16) = v9;
      *(_DWORD *)(v8 + 32) = v13;
    }
    else
    {
      sub_22AA04230(a4, a5, a6, (uint64_t)&v11, *a3);
      sub_22ABDEAEC();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_22A9F25A8();
    sub_22ABDFA7C();
  }
  return sub_22ABDEAEC();
}

uint64_t sub_22AA8FEC8(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a5;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14C10);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22ABDE600();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v24 - v19;
  sub_22AA90270(a1, (uint64_t)v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) == 1)
  {
    result = sub_22AA90230((uint64_t)v13);
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      return sub_22ABDFA7C();
    }
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v22(v20, v13, v14);
    v23 = *a3;
    if ((a2 & 1) != 0)
    {
      return ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(*(_QWORD *)(v23 + 56) + *(_QWORD *)(v15 + 72) * a4, v20, v14);
    }
    else
    {
      v22(v17, v20, v14);
      sub_22AA04688(a4, v25, a6, (uint64_t)v17, v23);
      return sub_22ABDEAEC();
    }
  }
  return result;
}

uint64_t destroy for JointsSelector()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s18CreateMLComponents14JointsSelectorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *assignWithCopy for JointsSelector(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for JointsSelector(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JointsSelector(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JointsSelector(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JointsSelector()
{
  return &type metadata for JointsSelector;
}

uint64_t sub_22AA90230(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14C10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AA90270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_2_55(void *a1)
{
  free(a1);
}

void (*OUTLINED_FUNCTION_3_60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...))(uint64_t *)
{
  uint64_t v5;
  uint64_t v6;
  va_list va;

  va_start(va, a5);
  return sub_22AA8EFE4(va, v6, v5);
}

uint64_t OUTLINED_FUNCTION_6_61()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_7_59()
{
  return sub_22ABDEDC8();
}

uint64_t *sub_22AA9030C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t *v41;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v37 = *a2;
    *a1 = *a2;
    v27 = (uint64_t *)(v37 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v6 = a3[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    *(uint64_t *)((char *)a1 + v6) = *(uint64_t *)((char *)a2 + v6);
    v10 = type metadata accessor for SpatialConvolution();
    v11 = *(int *)(v10 + 20);
    v12 = &v7[v11];
    v13 = &v8[v11];
    v14 = sub_22ABDD8B0();
    v41 = a1;
    v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v15(&v7[*(int *)(v10 + 24)], &v8[*(int *)(v10 + 24)], v14);
    v16 = a3[6];
    v17 = (char *)v41 + v16;
    v18 = (char *)a2 + v16;
    *(_DWORD *)((char *)v41 + v16) = *(_DWORD *)((char *)a2 + v16);
    v19 = (int *)type metadata accessor for TemporalConvolution();
    v20 = v19[5];
    v21 = &v17[v20];
    v22 = &v18[v20];
    v23 = sub_22ABDDAE4();
    v24 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v23 - 8) + 16);
    v25 = v22;
    v26 = v15;
    v27 = v41;
    v24(v21, v25, v23);
    v39 = v23;
    v24(&v17[v19[6]], &v18[v19[6]], v23);
    v26(&v17[v19[7]], &v18[v19[7]], v14);
    v28 = v19[8];
    v29 = &v17[v28];
    v30 = &v18[v28];
    v31 = sub_22ABDDA78();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[7];
    v33 = (char *)v41 + v32;
    v34 = (char *)a2 + v32;
    v35 = type metadata accessor for ConvolutionBatchNormalization();
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v26(v33, v34, v14);
      v24(&v33[*(int *)(v35 + 20)], &v34[*(int *)(v35 + 20)], v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
    }
  }
  return v27;
}

uint64_t sub_22AA9053C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = type metadata accessor for SpatialConvolution();
  v6 = v4 + *(int *)(v5 + 20);
  v7 = sub_22ABDD8B0();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v4 + *(int *)(v5 + 24), v7);
  v9 = a1 + a2[6];
  v10 = (int *)type metadata accessor for TemporalConvolution();
  v11 = v9 + v10[5];
  v12 = sub_22ABDDAE4();
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v18(v11, v12);
  v18(v9 + v10[6], v12);
  v8(v9 + v10[7], v7);
  v13 = v9 + v10[8];
  v14 = sub_22ABDDA78();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[7];
  v16 = type metadata accessor for ConvolutionBatchNormalization();
  result = __swift_getEnumTagSinglePayload(v15, 1, v16);
  if (!(_DWORD)result)
  {
    v8(v15, v7);
    return v18(v15 + *(int *)(v16 + 20), v12);
  }
  return result;
}

_QWORD *sub_22AA906B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  char *v6;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  *a1 = *a2;
  v4 = a3[5];
  v6 = (char *)a1 + v4;
  v8 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v9 = type metadata accessor for SpatialConvolution();
  v10 = *(int *)(v9 + 20);
  v11 = &v6[v10];
  v12 = &v8[v10];
  v13 = sub_22ABDD8B0();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v11, v12, v13);
  v14(&v6[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v13);
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_DWORD *)v16 = *(_DWORD *)((char *)a2 + v15);
  v18 = (int *)type metadata accessor for TemporalConvolution();
  v19 = v18[5];
  v20 = &v16[v19];
  v21 = &v17[v19];
  v22 = sub_22ABDDAE4();
  v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24 = v21;
  v25 = v14;
  v23(v20, v24, v22);
  v23(&v16[v18[6]], &v17[v18[6]], v22);
  v14(&v16[v18[7]], &v17[v18[7]], v13);
  v26 = v18[8];
  v27 = &v16[v26];
  v28 = &v17[v26];
  v29 = sub_22ABDDA78();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for ConvolutionBatchNormalization();
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v25(v31, v32, v13);
    v23(&v31[*(int *)(v33 + 20)], &v32[*(int *)(v33 + 20)], v22);
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
  }
  return a1;
}

_QWORD *sub_22AA908B0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  char *v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int EnumTagSinglePayload;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *a1 = *a2;
  v4 = a3[5];
  v6 = (char *)a1 + v4;
  v7 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v9 = type metadata accessor for SpatialConvolution();
  v10 = *(int *)(v9 + 20);
  v11 = &v6[v10];
  v12 = &v7[v10];
  v13 = sub_22ABDD8B0();
  v40 = *(_QWORD *)(v13 - 8);
  v14 = *(void (**)(char *, char *, uint64_t))(v40 + 24);
  v14(v11, v12, v13);
  v14(&v6[*(int *)(v9 + 24)], &v7[*(int *)(v9 + 24)], v13);
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_DWORD *)((char *)a1 + v15) = *(_DWORD *)((char *)a2 + v15);
  v18 = (int *)type metadata accessor for TemporalConvolution();
  v19 = v18[5];
  v20 = &v16[v19];
  v21 = &v17[v19];
  v22 = sub_22ABDDAE4();
  v39 = *(_QWORD *)(v22 - 8);
  v23 = *(void (**)(char *, char *, uint64_t))(v39 + 24);
  v24 = v21;
  v25 = v14;
  v23(v20, v24, v22);
  v41 = v22;
  v26 = v22;
  v27 = v13;
  v23(&v16[v18[6]], &v17[v18[6]], v26);
  v14(&v16[v18[7]], &v17[v18[7]], v13);
  v28 = v18[8];
  v29 = &v16[v28];
  v30 = &v17[v28];
  v31 = sub_22ABDDA78();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  v32 = a3[7];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = type metadata accessor for ConvolutionBatchNormalization();
  LODWORD(v30) = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35);
  if (!(_DWORD)v30)
  {
    if (!EnumTagSinglePayload)
    {
      v25(v33, v34, v27);
      v23(&v33[*(int *)(v35 + 20)], &v34[*(int *)(v35 + 20)], v41);
      return a1;
    }
    sub_22AA91F44((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ConvolutionBatchNormalization);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v37 = __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v33, v34, v27);
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(&v33[*(int *)(v35 + 20)], &v34[*(int *)(v35 + 20)], v41);
  __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
  return a1;
}

_QWORD *sub_22AA90B18(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  char *v6;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  *a1 = *a2;
  v4 = a3[5];
  v6 = (char *)a1 + v4;
  v8 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v9 = type metadata accessor for SpatialConvolution();
  v10 = *(int *)(v9 + 20);
  v11 = &v6[v10];
  v12 = &v8[v10];
  v13 = sub_22ABDD8B0();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&v6[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v13);
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_DWORD *)v16 = *(_DWORD *)((char *)a2 + v15);
  v18 = (int *)type metadata accessor for TemporalConvolution();
  v19 = v18[5];
  v20 = &v16[v19];
  v21 = &v17[v19];
  v22 = sub_22ABDDAE4();
  v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32);
  v24 = v21;
  v25 = v14;
  v23(v20, v24, v22);
  v23(&v16[v18[6]], &v17[v18[6]], v22);
  v14(&v16[v18[7]], &v17[v18[7]], v13);
  v26 = v18[8];
  v27 = &v16[v26];
  v28 = &v17[v26];
  v29 = sub_22ABDDA78();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for ConvolutionBatchNormalization();
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v25(v31, v32, v13);
    v23(&v31[*(int *)(v33 + 20)], &v32[*(int *)(v33 + 20)], v22);
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
  }
  return a1;
}

_QWORD *sub_22AA90D14(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  char *v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int EnumTagSinglePayload;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *a1 = *a2;
  v4 = a3[5];
  v6 = (char *)a1 + v4;
  v7 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v9 = type metadata accessor for SpatialConvolution();
  v10 = *(int *)(v9 + 20);
  v11 = &v6[v10];
  v12 = &v7[v10];
  v13 = sub_22ABDD8B0();
  v40 = *(_QWORD *)(v13 - 8);
  v14 = *(void (**)(char *, char *, uint64_t))(v40 + 40);
  v14(v11, v12, v13);
  v14(&v6[*(int *)(v9 + 24)], &v7[*(int *)(v9 + 24)], v13);
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_DWORD *)((char *)a1 + v15) = *(_DWORD *)((char *)a2 + v15);
  v18 = (int *)type metadata accessor for TemporalConvolution();
  v19 = v18[5];
  v20 = &v16[v19];
  v21 = &v17[v19];
  v22 = sub_22ABDDAE4();
  v39 = *(_QWORD *)(v22 - 8);
  v23 = *(void (**)(char *, char *, uint64_t))(v39 + 40);
  v24 = v21;
  v25 = v14;
  v23(v20, v24, v22);
  v41 = v22;
  v26 = v22;
  v27 = v13;
  v23(&v16[v18[6]], &v17[v18[6]], v26);
  v14(&v16[v18[7]], &v17[v18[7]], v13);
  v28 = v18[8];
  v29 = &v16[v28];
  v30 = &v17[v28];
  v31 = sub_22ABDDA78();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  v32 = a3[7];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = type metadata accessor for ConvolutionBatchNormalization();
  LODWORD(v30) = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35);
  if (!(_DWORD)v30)
  {
    if (!EnumTagSinglePayload)
    {
      v25(v33, v34, v27);
      v23(&v33[*(int *)(v35 + 20)], &v34[*(int *)(v35 + 20)], v41);
      return a1;
    }
    sub_22AA91F44((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ConvolutionBatchNormalization);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v37 = __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v33, v34, v27);
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v33[*(int *)(v35 + 20)], &v34[*(int *)(v35 + 20)], v41);
  __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
  return a1;
}

uint64_t sub_22AA90F7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA90F88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = OUTLINED_FUNCTION_4_50();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = a3[5];
  }
  else
  {
    v9 = OUTLINED_FUNCTION_9_45();
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
    {
      v7 = v9;
      v8 = a3[6];
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
      v8 = a3[7];
    }
  }
  return __swift_getEnumTagSinglePayload(v4 + v8, v3, v7);
}

uint64_t sub_22AA91008()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA91014(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = OUTLINED_FUNCTION_4_50();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a4[5];
  }
  else
  {
    v11 = OUTLINED_FUNCTION_9_45();
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v10 = a4[6];
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
      v10 = a4[7];
    }
  }
  return __swift_storeEnumTagSinglePayload(v5 + v10, v4, v4, v9);
}

uint64_t type metadata accessor for SpatialTemporalGraphConvolution()
{
  uint64_t result;

  result = qword_255B14C78;
  if (!qword_255B14C78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22AA910D4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for SpatialConvolution();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TemporalConvolution();
    if (v1 <= 0x3F)
    {
      sub_22AA91184();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_22AA91184()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B14C88[0])
  {
    type metadata accessor for ConvolutionBatchNormalization();
    v0 = sub_22ABDF5D8();
    if (!v1)
      atomic_store(v0, qword_255B14C88);
  }
}

uint64_t sub_22AA911D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a2;
  v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v6 = v5 - v4;
  v7 = type metadata accessor for ConvolutionBatchNormalization();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  v19 = v9;
  v10 = sub_22ABDDA0C();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - v14;
  v16 = type metadata accessor for SpatialTemporalGraphConvolution();
  v20 = v2;
  type metadata accessor for SpatialConvolution();
  sub_22A99D7D4(&qword_255B14CD8, (uint64_t (*)(uint64_t))type metadata accessor for SpatialConvolution, (uint64_t)&unk_22AC001D8);
  sub_22ABDD7FC();
  OUTLINED_FUNCTION_9_45();
  sub_22A99D7D4(&qword_255B14CE0, (uint64_t (*)(uint64_t))type metadata accessor for TemporalConvolution, (uint64_t)&unk_22ABFD7C8);
  sub_22ABDD7FC();
  OUTLINED_FUNCTION_15_26((uint64_t)v12);
  sub_22AA91DB4(v20 + *(int *)(v16 + 28), v6);
  if (__swift_getEnumTagSinglePayload(v6, 1, v7) == 1)
  {
    sub_22AA91DFC(v6);
  }
  else
  {
    v17 = v19;
    sub_22AA91E78(v6, v19, (uint64_t (*)(_QWORD))type metadata accessor for ConvolutionBatchNormalization);
    sub_22A99D7D4(&qword_255B14CE8, (uint64_t (*)(uint64_t))type metadata accessor for ConvolutionBatchNormalization, (uint64_t)&unk_22ABFE434);
    sub_22ABDD7FC();
    sub_22ABDD934();
    OUTLINED_FUNCTION_15_26((uint64_t)v12);
    sub_22AA91F44(v17, (uint64_t (*)(_QWORD))type metadata accessor for ConvolutionBatchNormalization);
  }
  sub_22ABDD748();
  return OUTLINED_FUNCTION_15_26((uint64_t)v15);
}

uint64_t sub_22AA91414(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69536C656E72656BLL && a2 == 0xEA0000000000657ALL;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000022ABE4540 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000022ABE4560 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000022ABE4580)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_22AA915C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA915F8 + 4 * byte_22ABF5340[a1]))(0x69536C656E72656BLL, 0xEA0000000000657ALL);
}

unint64_t sub_22AA915F8()
{
  return 0xD000000000000012;
}

unint64_t sub_22AA91614()
{
  return 0xD000000000000013;
}

uint64_t sub_22AA9164C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14D18);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_6_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA91E3C();
  sub_22ABE02B0();
  sub_22ABDFD34();
  if (!v1)
  {
    type metadata accessor for SpatialTemporalGraphConvolution();
    type metadata accessor for SpatialConvolution();
    sub_22A99D7D4(&qword_255B14D20, (uint64_t (*)(uint64_t))type metadata accessor for SpatialConvolution, (uint64_t)&unk_22AC00188);
    OUTLINED_FUNCTION_2_56();
    type metadata accessor for TemporalConvolution();
    sub_22A99D7D4(&qword_255B14D28, (uint64_t (*)(uint64_t))type metadata accessor for TemporalConvolution, (uint64_t)&unk_22ABFD778);
    OUTLINED_FUNCTION_2_56();
    type metadata accessor for ConvolutionBatchNormalization();
    sub_22A99D7D4(&qword_255B14D30, (uint64_t (*)(uint64_t))type metadata accessor for ConvolutionBatchNormalization, (uint64_t)&unk_22ABFE3E4);
    sub_22ABDFCF8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

void sub_22AA9182C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_0();
  v17 = v5;
  type metadata accessor for TemporalConvolution();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v18 = v7;
  type metadata accessor for SpatialConvolution();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_6_4();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14CF0);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_33();
  type metadata accessor for SpatialTemporalGraphConvolution();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_33();
  v12 = (uint64_t *)(v11 - v10);
  *v12 = 9;
  v20 = v13;
  v21 = v12;
  v14 = (uint64_t)v12 + *(int *)(v13 + 28);
  v15 = type metadata accessor for ConvolutionBatchNormalization();
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA91E3C();
  sub_22ABE0298();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_22AA91DFC(v14);
  }
  else
  {
    *v21 = sub_22ABDFC74();
    sub_22A99D7D4(&qword_255B14D00, (uint64_t (*)(uint64_t))type metadata accessor for SpatialConvolution, (uint64_t)&unk_22AC001B0);
    sub_22ABDFC8C();
    sub_22AA91E78(v2, (uint64_t)v21 + *(int *)(v20 + 20), (uint64_t (*)(_QWORD))type metadata accessor for SpatialConvolution);
    sub_22A99D7D4(&qword_255B14D08, (uint64_t (*)(uint64_t))type metadata accessor for TemporalConvolution, (uint64_t)&unk_22ABFD7A0);
    sub_22ABDFC8C();
    sub_22AA91E78(v18, (uint64_t)v21 + *(int *)(v20 + 24), (uint64_t (*)(_QWORD))type metadata accessor for TemporalConvolution);
    sub_22A99D7D4(&qword_255B14D10, (uint64_t (*)(uint64_t))type metadata accessor for ConvolutionBatchNormalization, (uint64_t)&unk_22ABFE40C);
    sub_22ABDFC38();
    OUTLINED_FUNCTION_1_46();
    sub_22AA91EB8(v17, v14);
    sub_22AA91F00((uint64_t)v21, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_22AA91F44((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for SpatialTemporalGraphConvolution);
  }
}

uint64_t sub_22AA91BE0()
{
  unsigned __int8 *v0;

  return sub_22AA915C0(*v0);
}

uint64_t sub_22AA91BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA91414(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA91C0C()
{
  sub_22AA91E3C();
  return sub_22ABE02EC();
}

uint64_t sub_22AA91C34()
{
  sub_22AA91E3C();
  return sub_22ABE02F8();
}

void sub_22AA91C60(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22AA9182C(a1, a2);
}

uint64_t sub_22AA91C74(_QWORD *a1)
{
  return sub_22AA9164C(a1);
}

uint64_t sub_22AA91C88()
{
  sub_22A99D7D4(&qword_255B14AE0, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolution, (uint64_t)&unk_22ABF5434);
  return sub_22ABDD82C();
}

uint64_t sub_22AA91CD8()
{
  sub_22A99D7D4(&qword_255B14AE0, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolution, (uint64_t)&unk_22ABF5434);
  return sub_22ABDD844();
}

void sub_22AA91D30()
{
  sub_22A99D7D4(&qword_255B14CC0, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolution, (uint64_t)&unk_22ABF53C8);
}

void sub_22AA91D5C()
{
  sub_22A99D7D4(&qword_255B14CC8, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolution, (uint64_t)&unk_22ABF5398);
}

void sub_22AA91D88()
{
  sub_22A99D7D4(&qword_255B14CD0, (uint64_t (*)(uint64_t))type metadata accessor for SpatialTemporalGraphConvolution, (uint64_t)&unk_22ABF5370);
}

uint64_t sub_22AA91DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA91DFC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22AA91E3C()
{
  unint64_t result;

  result = qword_255B14CF8;
  if (!qword_255B14CF8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5558, &type metadata for SpatialTemporalGraphConvolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14CF8);
  }
  return result;
}

void sub_22AA91E78(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22AA91EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255B14C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA91F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SpatialTemporalGraphConvolution();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_22AA91F44(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_0_5();
}

uint64_t storeEnumTagSinglePayload for SpatialTemporalGraphConvolution.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22AA91FC8 + 4 * byte_22ABF5349[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22AA91FFC + 4 * byte_22ABF5344[v4]))();
}

uint64_t sub_22AA91FFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA92004(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA9200CLL);
  return result;
}

uint64_t sub_22AA92018(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA92020);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22AA92024(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA9202C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpatialTemporalGraphConvolution.CodingKeys()
{
  return &type metadata for SpatialTemporalGraphConvolution.CodingKeys;
}

unint64_t sub_22AA9204C()
{
  unint64_t result;

  result = qword_255B14D38;
  if (!qword_255B14D38)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5530, &type metadata for SpatialTemporalGraphConvolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14D38);
  }
  return result;
}

unint64_t sub_22AA9208C()
{
  unint64_t result;

  result = qword_255B14D40;
  if (!qword_255B14D40)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF54A0, &type metadata for SpatialTemporalGraphConvolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14D40);
  }
  return result;
}

unint64_t sub_22AA920CC()
{
  unint64_t result;

  result = qword_255B14D48;
  if (!qword_255B14D48)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF54C8, &type metadata for SpatialTemporalGraphConvolution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14D48);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_56()
{
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_4_50()
{
  return type metadata accessor for SpatialConvolution();
}

uint64_t OUTLINED_FUNCTION_5_46()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_9_45()
{
  return type metadata accessor for TemporalConvolution();
}

void sub_22AA92148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  id v22;
  _BYTE v23[88];
  _QWORD v24[13];

  OUTLINED_FUNCTION_12();
  v3 = v0;
  HIDWORD(v21) = v4;
  v6 = v5;
  v24[11] = *MEMORY[0x24BDAC8D0];
  v7 = OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BlobJSONEncoder();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_22A9E0CDC();
  sub_22AB5E3C4((uint64_t)v23);
  OUTLINED_FUNCTION_28_22((void *)(v0 + 24), v23);
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE4AF8];
  swift_allocObject();
  *(_QWORD *)(v0 + 120) = sub_22A9E0CDC();
  sub_22AB5E3C4((uint64_t)v24);
  OUTLINED_FUNCTION_28_22((void *)(v0 + 128), v24);
  *(_QWORD *)(v0 + 216) = v11;
  v12 = v6;
  *(_QWORD *)(v0 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
  sub_22AA923D4((uint64_t)v10);
  OUTLINED_FUNCTION_62_11(v0 + OBJC_IVAR____TtC18CreateMLComponents23EstimatorPackageEncoder_packageDirectoryURL, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  v13 = *(id *)(v0 + 224);
  if ((v21 & 0x100000000) != 0)
  {
    sub_22AAD6530();
    if (v1)
    {
      OUTLINED_FUNCTION_21_3();

LABEL_10:
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v7);
      goto LABEL_11;
    }

  }
  else
  {
    v14 = sub_22AAD6630();

    if ((v14 & 1) != 0)
    {
      OUTLINED_FUNCTION_58_9();
      OUTLINED_FUNCTION_15_15();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_62_11(v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_36_23();
      OUTLINED_FUNCTION_21_3();
      goto LABEL_10;
    }
  }
  v16 = *(void **)(v3 + 224);
  v17 = (void *)sub_22ABDD070();
  v22 = 0;
  LOBYTE(v16) = objc_msgSend(v16, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v17, 1, 0, &v22);

  if ((v16 & 1) == 0)
  {
    v22;
    OUTLINED_FUNCTION_21_3();
    sub_22ABDD004();
    OUTLINED_FUNCTION_30_25();
    OUTLINED_FUNCTION_36_23();
    goto LABEL_10;
  }
  v18 = v12;
  v19 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v20 = v22;
  v19(v18, v7);
LABEL_11:
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA923D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v5;
  uint64_t v7;

  if (sub_22ABDD040() == 6777712 && v3 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
      return sub_22ABDD094();
  }
  v7 = sub_22ABDD0E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v1, v7);
}

void sub_22AA92480()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  __int128 v6;
  unint64_t v7;

  OUTLINED_FUNCTION_32_20();
  v3 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_45_2();
  swift_retain();
  OUTLINED_FUNCTION_7_60();
  OUTLINED_FUNCTION_34_26();
  swift_release();
  if (!v1)
  {
    v7 = sub_22AA2FDC8();
    *(_QWORD *)&v6 = v2;
    OUTLINED_FUNCTION_45_2();
    v4 = v2;
    sub_22AA93BC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA35D04);
    OUTLINED_FUNCTION_27_30(*(_QWORD *)(v0 + 112));
    v5 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v5 + 16) = v3 + 1;
    sub_22A9C38BC(&v6, (_OWORD *)(v5 + 32 * v3 + 32));
    swift_endAccess();

  }
  OUTLINED_FUNCTION_14_44();
}

void sub_22AA9254C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  __int128 v6;
  unint64_t v7;

  OUTLINED_FUNCTION_32_20();
  v3 = *(_QWORD *)(v0 + 120);
  OUTLINED_FUNCTION_45_2();
  swift_retain();
  OUTLINED_FUNCTION_7_60();
  OUTLINED_FUNCTION_34_26();
  swift_release();
  if (!v1)
  {
    v7 = sub_22AA2FDC8();
    *(_QWORD *)&v6 = v2;
    OUTLINED_FUNCTION_45_2();
    v4 = v2;
    sub_22AA93BC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA35D04);
    OUTLINED_FUNCTION_27_30(*(_QWORD *)(v0 + 216));
    v5 = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v5 + 16) = v3 + 1;
    sub_22A9C38BC(&v6, (_OWORD *)(v5 + 32 * v3 + 32));
    swift_endAccess();

  }
  OUTLINED_FUNCTION_14_44();
}

void sub_22AA92618()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v3);
  objc_opt_self();
  OUTLINED_FUNCTION_45_2();
  sub_22ABDEAEC();
  sub_22ABDEFE4();
  v4 = OUTLINED_FUNCTION_51_21();
  v5 = OUTLINED_FUNCTION_17_37(v4, sel_dataWithJSONObject_options_error_);

  v6 = 0;
  if (v5)
  {
    sub_22ABDD19C();
    OUTLINED_FUNCTION_50_19();
    sub_22ABDD088();
    OUTLINED_FUNCTION_10_38();
    if (v0)
    {
      OUTLINED_FUNCTION_40_17();
    }
    else
    {
      OUTLINED_FUNCTION_25_27();
      OUTLINED_FUNCTION_45_2();
      OUTLINED_FUNCTION_45_15();
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_15_43();
      sub_22ABDD088();
      OUTLINED_FUNCTION_13_53();
      OUTLINED_FUNCTION_23_37();
      OUTLINED_FUNCTION_44_20();
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_59_12();
  }
  else
  {
    sub_22ABDD004();
    OUTLINED_FUNCTION_30_25();
    OUTLINED_FUNCTION_36_23();
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AA927C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v3);
  objc_opt_self();
  OUTLINED_FUNCTION_45_2();
  sub_22ABDEAEC();
  sub_22ABDEFE4();
  v4 = OUTLINED_FUNCTION_51_21();
  v5 = OUTLINED_FUNCTION_17_37(v4, sel_dataWithJSONObject_options_error_);

  v6 = 0;
  if (v5)
  {
    sub_22ABDD19C();
    OUTLINED_FUNCTION_50_19();
    OUTLINED_FUNCTION_9_46();
    sub_22ABDD088();
    OUTLINED_FUNCTION_10_38();
    if (v0)
    {
      OUTLINED_FUNCTION_40_17();
    }
    else
    {
      OUTLINED_FUNCTION_25_27();
      OUTLINED_FUNCTION_45_2();
      OUTLINED_FUNCTION_45_15();
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_18_42();
      sub_22ABDD088();
      OUTLINED_FUNCTION_13_53();
      OUTLINED_FUNCTION_23_37();
      OUTLINED_FUNCTION_44_20();
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_59_12();
  }
  else
  {
    sub_22ABDD004();
    OUTLINED_FUNCTION_30_25();
    OUTLINED_FUNCTION_36_23();
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA9295C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  OUTLINED_FUNCTION_47_15();
  OUTLINED_FUNCTION_23();
  swift_bridgeObjectRelease();
  swift_release();
  sub_22A9D1570(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  OUTLINED_FUNCTION_23();
  swift_bridgeObjectRelease();

  v1 = OUTLINED_FUNCTION_65_13();
  OUTLINED_FUNCTION_20(v1);
  return v0;
}

uint64_t sub_22AA929C8()
{
  return sub_22AA93A28((void (*)(void))sub_22AA9295C);
}

uint64_t sub_22AA929D4()
{
  return type metadata accessor for EstimatorPackageEncoder(0);
}

uint64_t type metadata accessor for EstimatorPackageEncoder(uint64_t a1)
{
  return sub_22AA062F0(a1, (uint64_t *)&unk_2540E82A0);
}

uint64_t sub_22AA929F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_22AA92A98()
{
  sub_22AA92480();
}

void sub_22AA92AB8()
{
  sub_22AA9254C();
}

void sub_22AA92AD8()
{
  _OWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD);
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  void (*v77)(_QWORD, _QWORD);
  void (*v78)(_QWORD, _QWORD);
  void (*v79)(_QWORD, _QWORD);
  void (*v80)(_QWORD, _QWORD);
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  unsigned int v93;
  void (*v94)(uint64_t, uint64_t);
  void (*v95)(unint64_t, uint64_t);
  id v96;
  id v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(unint64_t, uint64_t);
  uint64_t v122;
  _OWORD v123[2];
  _QWORD v124[13];
  __int128 v125;
  void *v126;
  __int128 v127;
  void (*v128)(_QWORD, _QWORD);
  __int128 v129;
  void (*v130)(_QWORD, _QWORD);
  uint64_t v131;

  OUTLINED_FUNCTION_12();
  v119 = v1;
  v2 = v0;
  v4 = v3;
  v131 = *MEMORY[0x24BDAC8D0];
  v121 = *(void (**)(unint64_t, uint64_t))v0;
  v5 = OUTLINED_FUNCTION_18_15();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v105 - v12;
  v112 = type metadata accessor for BlobJSONDecoder();
  v14 = OUTLINED_FUNCTION_52_17();
  v15 = sub_22ABDFA4C();
  v16 = (void (*)(_QWORD, _QWORD))MEMORY[0x24BEE4AF8];
  v111 = v15;
  *(_QWORD *)(v14 + 16) = sub_22ABDEAC8();
  *((_QWORD *)v2 + 2) = v14;
  *((_QWORD *)v2 + 15) = v16;
  *(_QWORD *)&v117 = (char *)v2 + 120;
  *((_QWORD *)v2 + 14) = 0;
  v2[8] = 0u;
  v2[9] = 0u;
  v2[10] = 0u;
  v2[11] = 0u;
  v2[12] = 0u;
  v2[13] = 0u;
  *((_QWORD *)v2 + 28) = v16;
  *((_QWORD *)v2 + 29) = 0;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
  *((_QWORD *)v2 + 30) = v17;
  sub_22AA923D4((uint64_t)v13);
  v18 = (uint64_t)v2 + OBJC_IVAR____TtC18CreateMLComponents23EstimatorPackageDecoder_packageDirectoryURL;
  OUTLINED_FUNCTION_49((uint64_t)v2 + OBJC_IVAR____TtC18CreateMLComponents23EstimatorPackageDecoder_packageDirectoryURL, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  v19 = v17;
  sub_22ABDD0C4();
  v20 = (void *)OUTLINED_FUNCTION_41_16();
  OUTLINED_FUNCTION_3_8();
  LODWORD(v14) = OUTLINED_FUNCTION_39_21();

  if (!(_DWORD)v14)
  {
    OUTLINED_FUNCTION_58_9();
    OUTLINED_FUNCTION_15_15();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_49(v29, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    OUTLINED_FUNCTION_38_26();
    OUTLINED_FUNCTION_53_19();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    goto LABEL_8;
  }
  *(_QWORD *)&v114 = v6;
  v110 = v4;
  v21 = v120;
  OUTLINED_FUNCTION_9_46();
  OUTLINED_FUNCTION_64_9();
  v22 = OUTLINED_FUNCTION_60_14();
  sub_22ABDD0C4();
  v23 = (void *)OUTLINED_FUNCTION_41_16();
  OUTLINED_FUNCTION_3_8();
  v24 = OUTLINED_FUNCTION_39_21();

  if (!v24)
  {
    OUTLINED_FUNCTION_58_9();
    OUTLINED_FUNCTION_15_15();
    OUTLINED_FUNCTION_53();
    v30 = v114;
    OUTLINED_FUNCTION_49(v31, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 16));
    v32 = OUTLINED_FUNCTION_38_26();
    swift_willThrow(v32);
    v33 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v33(v110, v5);
    v33(v21, v5);
    goto LABEL_8;
  }
  v25 = v119;
  v26 = sub_22ABDD118();
  if (!v25)
  {
    v34 = v27;
    v119 = v26;
    v35 = v118;
    OUTLINED_FUNCTION_18_42();
    OUTLINED_FUNCTION_64_9();
    v36 = sub_22ABDD118();
    sub_22AB1F47C(v36, v37);
    v121 = *(void (**)(unint64_t, uint64_t))(v114 + 8);
    v121(v35, v5);
    OUTLINED_FUNCTION_28_22((char *)v2 + 24, v124);
    v46 = (void *)objc_opt_self();
    v47 = v119;
    v48 = sub_22ABDD190();
    v118 = v34;
    v49 = (void *)v48;
    *(_QWORD *)&v123[0] = 0;
    v108 = v46;
    v50 = OUTLINED_FUNCTION_61_13(v46, sel_JSONObjectWithData_options_error_);

    if (v50)
    {
      v51 = *(id *)&v123[0];
      sub_22ABDF6D4();
      swift_unknownObjectRelease();
      v52 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v109 = 0;
        v53 = *(_QWORD *)(v122 + 16);
        v106 = (uint64_t)v52;
        if (v53)
        {
          *(_QWORD *)&v107 = v122;
          v54 = v122 + 32;
          do
          {
            sub_22A9E7618(v54, (uint64_t)v123);
            v55 = (uint64_t *)v117;
            OUTLINED_FUNCTION_45_2();
            v56 = *v55;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *v55 = v56;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              OUTLINED_FUNCTION_54_13();
              OUTLINED_FUNCTION_49_14(v59);
            }
            v58 = *(_QWORD *)(v56 + 16);
            if (v58 >= *(_QWORD *)(v56 + 24) >> 1)
            {
              OUTLINED_FUNCTION_54_13();
              OUTLINED_FUNCTION_49_14(v60);
            }
            *(_QWORD *)(v56 + 16) = v58 + 1;
            sub_22A9C38BC(v123, (_OWORD *)(v56 + 32 * v58 + 32));
            swift_endAccess();
            v54 += 32;
            --v53;
          }
          while (v53);
        }
        swift_bridgeObjectRelease();
        v67 = v116;
        OUTLINED_FUNCTION_15_43();
        OUTLINED_FUNCTION_64_9();
        OUTLINED_FUNCTION_60_14();
        OUTLINED_FUNCTION_56_14();
        v68 = (void *)OUTLINED_FUNCTION_41_16();
        v69 = OUTLINED_FUNCTION_3_8();
        v70 = OUTLINED_FUNCTION_63_11(v69, sel_fileExistsAtPath_);

        v71 = v5;
        v72 = v120;
        if ((v70 & 1) != 0)
        {
          v73 = v113;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v114 + 16))(v113, v67, v5);
          v74 = OUTLINED_FUNCTION_42_16();
          v109 = 0;
          sub_22AB1F47C(v74, v75);
          v109 = 0;
          v76 = v73;
          v77 = (void (*)(_QWORD, _QWORD))v124[11];
          v78 = (void (*)(_QWORD, _QWORD))v124[12];
          v117 = v125;
          v52 = v126;
          v114 = v127;
          v79 = v128;
          v107 = v129;
          v80 = v130;
          v121(v76, v71);
          OUTLINED_FUNCTION_16_40();
          *((_QWORD *)v2 + 17) = v77;
          *((_QWORD *)v2 + 18) = v78;
          *(_OWORD *)((char *)v2 + 152) = v117;
          *((_QWORD *)v2 + 21) = v52;
          v2[11] = v114;
          *((_QWORD *)v2 + 24) = v79;
          *(_OWORD *)((char *)v2 + 200) = v107;
          *((_QWORD *)v2 + 27) = v80;
          OUTLINED_FUNCTION_26_27(v81, v82, v83, v84, v85, v86, v87, v88, v105, v106, v107);
        }
        v89 = v115;
        v90 = v116;
        sub_22ABDD094();
        OUTLINED_FUNCTION_60_14();
        OUTLINED_FUNCTION_56_14();
        v91 = (void *)OUTLINED_FUNCTION_41_16();
        v92 = OUTLINED_FUNCTION_3_8();
        v93 = OUTLINED_FUNCTION_63_11(v92, sel_fileExistsAtPath_);

        if (!v93)
        {
          OUTLINED_FUNCTION_0_52();
          OUTLINED_FUNCTION_2_57();
          OUTLINED_FUNCTION_12_28(v89);
          OUTLINED_FUNCTION_12_28(v90);
          OUTLINED_FUNCTION_12_28(v72);
          goto LABEL_9;
        }
        OUTLINED_FUNCTION_42_16();
        v95 = v121;
        v61 = v94;
        sub_22ABDD190();
        *(_QWORD *)&v123[0] = 0;
        v96 = OUTLINED_FUNCTION_61_13(v108, sel_JSONObjectWithData_options_error_);
        OUTLINED_FUNCTION_30_25();
        if (!v95)
        {
          v99 = *(id *)&v123[0];
          sub_22ABDD004();

          swift_willThrow(v100);
          OUTLINED_FUNCTION_0_52();
          OUTLINED_FUNCTION_24_34();
          OUTLINED_FUNCTION_21_3();
          OUTLINED_FUNCTION_2_57();
          OUTLINED_FUNCTION_12_28(v115);
          OUTLINED_FUNCTION_12_28(v116);
          v61(v72, v71);
          goto LABEL_9;
        }
        v97 = *(id *)&v123[0];
        sub_22ABDF6D4();
        swift_unknownObjectRelease();
        if ((swift_dynamicCast() & 1) != 0)
        {
          *(_QWORD *)&v117 = v122;
          v98 = OUTLINED_FUNCTION_52_17();
          *(_QWORD *)(v98 + 16) = sub_22ABDEAC8();
          OUTLINED_FUNCTION_0_52();
          OUTLINED_FUNCTION_24_34();
          OUTLINED_FUNCTION_2_57();
          OUTLINED_FUNCTION_12_28(v115);
          OUTLINED_FUNCTION_12_28(v116);
          OUTLINED_FUNCTION_12_28(v72);
          *((_QWORD *)v2 + 16) = v98;
          swift_release();
          *((_QWORD *)v2 + 28) = v117;
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
        v101 = OUTLINED_FUNCTION_6_21();
        OUTLINED_FUNCTION_53();
        v103 = v102;
        OUTLINED_FUNCTION_22_11();
        v104 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v101 - 8) + 104))(v103, *MEMORY[0x24BEE26D8], v101);
        swift_willThrow(v104);
        OUTLINED_FUNCTION_0_52();
        OUTLINED_FUNCTION_24_34();
        OUTLINED_FUNCTION_2_57();
        OUTLINED_FUNCTION_12_28(v115);
        OUTLINED_FUNCTION_12_28(v116);
        v65 = v72;
        v66 = v71;
        goto LABEL_23;
      }
      v61 = (void (*)(uint64_t, uint64_t))OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      v64 = v63;
      OUTLINED_FUNCTION_22_11();
      (*(void (**)(uint64_t, _QWORD, void (*)(uint64_t, uint64_t)))(*((_QWORD *)v61 - 1) + 104))(v64, *MEMORY[0x24BEE26D8], v61);
      OUTLINED_FUNCTION_53_19();
      v62 = v119;
    }
    else
    {
      v61 = (void (*)(uint64_t, uint64_t))*(id *)&v123[0];
      sub_22ABDD004();

      OUTLINED_FUNCTION_53_19();
      v62 = v47;
    }
    sub_22A9D1570(v62, v118);
    OUTLINED_FUNCTION_4_51();
    v65 = v21;
    v66 = v5;
LABEL_23:
    v61(v65, v66);
    OUTLINED_FUNCTION_21_3();
    goto LABEL_9;
  }
  v28 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
  OUTLINED_FUNCTION_59_7(v110);
  v28(v21, v5);
LABEL_8:
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_16_40();
  OUTLINED_FUNCTION_26_27(v38, v39, v40, v41, v42, v43, v44, v45, v105, v106, v107);
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_59_7(v18);
  swift_deallocPartialClassInstance();
LABEL_9:
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA935F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD v47[4];
  _QWORD v48[12];
  uint64_t v49;

  v8 = v4[28];
  v7 = v4[29];
  if (v7 >= *(_QWORD *)(v8 + 16))
    goto LABEL_7;
  v9 = v4[27];
  if (!v9)
    goto LABEL_7;
  v10 = v4[18];
  v11 = v4[19];
  v12 = v4[20];
  v13 = v4[21];
  v14 = v4[22];
  v15 = v4[23];
  v16 = v4[24];
  v17 = v4[25];
  result = v4[26];
  v48[2] = v11;
  v19 = v4[16];
  v49 = v4[17];
  v48[0] = v49;
  v48[1] = v10;
  v48[3] = v12;
  v48[4] = v13;
  v48[5] = v14;
  v48[6] = v15;
  v48[7] = v16;
  v48[8] = v17;
  v48[9] = result;
  v48[10] = v9;
  if (v19)
  {
    if (v7 < 0)
    {
      __break(1u);
    }
    else
    {
      v21 = v17;
      v22 = result;
      result = sub_22A9E7618(v8 + 32 * v7 + 32, (uint64_t)v47);
      v23 = v4[29];
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (!v24)
      {
        v4[29] = v25;
        v26 = OUTLINED_FUNCTION_19_36();
        sub_22AA93CDC(v26, v27, v28, v29, v30, v31, v32, v33, v21, v22, v9);
        swift_retain();
        sub_22AAD62E0(a2, v47, v48, a2, a3, a4);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
        v34 = OUTLINED_FUNCTION_19_36();
        sub_22AA93D10(v34, v35, v36, v37, v38, v39, v40, v41, v21, v22, v9);
        return swift_release();
      }
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    v42 = OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    v44 = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v44 = a1;
    OUTLINED_FUNCTION_22_11();
    v45 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v44, *MEMORY[0x24BEE26E0], v42);
    return swift_willThrow(v45);
  }
  return result;
}

uint64_t sub_22AA93820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD v19[4];
  _BYTE v20[88];

  v9 = v4[14];
  result = OUTLINED_FUNCTION_45_2();
  v11 = v4[15];
  if (v9 >= *(_QWORD *)(v11 + 16))
  {
    v15 = OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v17 = a1;
    OUTLINED_FUNCTION_22_11();
    v18 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x24BEE26E0], v15);
    return swift_willThrow(v18);
  }
  else
  {
    if (v9 < 0)
    {
      __break(1u);
    }
    else
    {
      result = sub_22A9E7618(v11 + 32 * v9 + 32, (uint64_t)v19);
      v12 = v4[14];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (!v13)
      {
        v4[14] = v14;
        OUTLINED_FUNCTION_28_22(v20, v4 + 3);
        swift_retain();
        sub_22AAD62E0(a1, v19, v20, a2, a3, a4);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_22AA93994()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  OUTLINED_FUNCTION_47_15();
  OUTLINED_FUNCTION_23();
  swift_bridgeObjectRelease();
  swift_release();
  sub_22AA93D10(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
  swift_bridgeObjectRelease();

  v1 = OUTLINED_FUNCTION_65_13();
  OUTLINED_FUNCTION_20(v1);
  return v0;
}

uint64_t sub_22AA93A1C()
{
  return sub_22AA93A28((void (*)(void))sub_22AA93994);
}

uint64_t sub_22AA93A28(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_22AA93A4C()
{
  return type metadata accessor for EstimatorPackageDecoder(0);
}

uint64_t type metadata accessor for EstimatorPackageDecoder(uint64_t a1)
{
  return sub_22AA062F0(a1, qword_2540E8B58);
}

uint64_t sub_22AA93A68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_22AA93B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_22AA93820(a1, a2, a3, a4);
}

uint64_t sub_22AA93B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_22AA935F0(a1, a2, a3, a4);
}

uint64_t sub_22AA93B70()
{
  return sub_22AA93BC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA35D04);
}

uint64_t sub_22AA93B7C()
{
  return sub_22AA93BC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA35D20);
}

uint64_t sub_22AA93B88()
{
  return sub_22AA93BC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA35EA8);
}

uint64_t sub_22AA93B94()
{
  return sub_22AA93BC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA35FF0);
}

uint64_t sub_22AA93BA0()
{
  return sub_22AA93BC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA360F4);
}

uint64_t sub_22AA93BAC()
{
  return sub_22AA93BC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA3611C);
}

uint64_t sub_22AA93BB8()
{
  return sub_22AA93BC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_22AA366EC);
}

uint64_t sub_22AA93BC4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_22AA93C18(uint64_t a1)
{
  return sub_22AA93C70(a1, (uint64_t (*)(BOOL))sub_22AA35D04);
}

uint64_t sub_22AA93C24(uint64_t a1)
{
  return sub_22AA93C70(a1, (uint64_t (*)(BOOL))sub_22AA35D20);
}

uint64_t sub_22AA93C30(uint64_t a1)
{
  return sub_22AA93C70(a1, (uint64_t (*)(BOOL))sub_22AA35EA8);
}

uint64_t sub_22AA93C40(uint64_t a1)
{
  return sub_22AA93C70(a1, (uint64_t (*)(BOOL))sub_22AA35FF0);
}

uint64_t sub_22AA93C4C(uint64_t a1)
{
  return sub_22AA93C70(a1, (uint64_t (*)(BOOL))sub_22AA360F4);
}

uint64_t sub_22AA93C58(uint64_t a1)
{
  return sub_22AA93C70(a1, (uint64_t (*)(BOOL))sub_22AA3611C);
}

uint64_t sub_22AA93C64(uint64_t a1)
{
  return sub_22AA93C70(a1, (uint64_t (*)(BOOL))sub_22AA366EC);
}

uint64_t sub_22AA93C70(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_22AA93CB0(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_22ABDF050();
  return result;
}

uint64_t sub_22AA93CDC(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_22A9D14F0(result, a2);
    return sub_22ABDEAEC();
  }
  return result;
}

uint64_t sub_22AA93D10(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_22A9D1570(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_52()
{
  uint64_t v0;

  return sub_22A9D1570(*(_QWORD *)(v0 - 352), *(_QWORD *)(v0 - 360));
}

uint64_t OUTLINED_FUNCTION_2_57()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 336))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_51()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 336))();
}

uint64_t OUTLINED_FUNCTION_7_60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  return sub_22A9E0DA8(v2, v3, v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_46()
{
  return 0x656E696C65706970;
}

uint64_t OUTLINED_FUNCTION_10_38()
{
  return sub_22ABDD1B4();
}

uint64_t OUTLINED_FUNCTION_13_53()
{
  return sub_22ABDD1B4();
}

uint64_t OUTLINED_FUNCTION_15_43()
{
  return 0x657A696D6974706FLL;
}

__n128 OUTLINED_FUNCTION_16_40()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 200);
}

id OUTLINED_FUNCTION_17_37(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(v2, a2, v3, 0, v4 - 136);
}

uint64_t OUTLINED_FUNCTION_18_42()
{
  return 0x6574656D61726170;
}

uint64_t OUTLINED_FUNCTION_19_36()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 72);
}

uint64_t OUTLINED_FUNCTION_23_37()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 144))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_24_34()
{
  unint64_t v0;
  uint64_t v1;

  return sub_22A9D1570(v1, v0);
}

uint64_t OUTLINED_FUNCTION_25_27()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v3 - 144) = v4;
  return v4(v1, v0);
}

uint64_t OUTLINED_FUNCTION_26_27(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_22AA93D10(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_27_30@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(BOOL);

  return sub_22AA93C70(*(_QWORD *)(a1 + 16), v1);
}

void *OUTLINED_FUNCTION_28_22(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

void OUTLINED_FUNCTION_30_25()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_34_26()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_36_23()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_37_20(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_38_26()
{
  return swift_storeEnumTagMultiPayload();
}

id OUTLINED_FUNCTION_39_21()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, (SEL)(v0 + 4055), v2);
}

uint64_t OUTLINED_FUNCTION_40_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_41_16()
{
  return sub_22ABDED2C();
}

uint64_t OUTLINED_FUNCTION_42_16()
{
  return sub_22ABDD118();
}

uint64_t OUTLINED_FUNCTION_44_20()
{
  uint64_t v0;
  unint64_t v1;

  return sub_22A9D1570(v0, v1);
}

uint64_t OUTLINED_FUNCTION_45_15()
{
  uint64_t v0;
  unint64_t v1;

  return sub_22A9D14F0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_47_15()
{
  uint64_t v0;

  return sub_22A9D1570(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t OUTLINED_FUNCTION_49_14(uint64_t result)
{
  uint64_t v1;

  **(_QWORD **)(v1 - 384) = result;
  return result;
}

void OUTLINED_FUNCTION_50_19()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_51_21()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_52_17()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_53_19()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_54_13()
{
  sub_22AA35D04();
}

uint64_t OUTLINED_FUNCTION_56_14()
{
  return sub_22ABDD0C4();
}

uint64_t OUTLINED_FUNCTION_58_9()
{
  return type metadata accessor for SerializationError();
}

uint64_t OUTLINED_FUNCTION_59_12()
{
  unint64_t v0;
  uint64_t v1;

  return sub_22A9D1570(v1, v0);
}

id OUTLINED_FUNCTION_60_14()
{
  uint64_t v0;

  return *(id *)(v0 + 240);
}

id OUTLINED_FUNCTION_61_13(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2, 0);
}

uint64_t OUTLINED_FUNCTION_62_11@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

id OUTLINED_FUNCTION_63_11(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_64_9()
{
  return sub_22ABDD088();
}

uint64_t OUTLINED_FUNCTION_65_13()
{
  return sub_22ABDD0E8();
}

ValueMetadata *_s7StorageVMa()
{
  return &_s7StorageVN;
}

uint64_t sub_22AA94048(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  sub_22AA93B70();
  v3 = *(_QWORD *)(*v1 + 16);
  sub_22AA93C18(v3);
  v4 = *v1;
  *(_QWORD *)(v4 + 16) = v3 + 1;
  sub_22A9E7618(a1, v4 + 32 * v3 + 32);
  *v1 = v4;
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t LinearTimeSeriesForecasterConfiguration.inputWindowSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t LinearTimeSeriesForecasterConfiguration.inputWindowSize.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*LinearTimeSeriesForecasterConfiguration.inputWindowSize.modify())()
{
  return nullsub_1;
}

uint64_t LinearTimeSeriesForecasterConfiguration.forecastWindowSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t LinearTimeSeriesForecasterConfiguration.forecastWindowSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*LinearTimeSeriesForecasterConfiguration.forecastWindowSize.modify())()
{
  return nullsub_1;
}

uint64_t LinearTimeSeriesForecasterConfiguration.batchSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t LinearTimeSeriesForecasterConfiguration.batchSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*LinearTimeSeriesForecasterConfiguration.batchSize.modify())()
{
  return nullsub_1;
}

uint64_t LinearTimeSeriesForecasterConfiguration.maximumIterationCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t LinearTimeSeriesForecasterConfiguration.maximumIterationCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*LinearTimeSeriesForecasterConfiguration.maximumIterationCount.modify())()
{
  return nullsub_1;
}

float LinearTimeSeriesForecasterConfiguration.earlyStoppingTolerance.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void LinearTimeSeriesForecasterConfiguration.earlyStoppingTolerance.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*LinearTimeSeriesForecasterConfiguration.earlyStoppingTolerance.modify())()
{
  return nullsub_1;
}

uint64_t LinearTimeSeriesForecasterConfiguration.earlyStoppingIterationCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t LinearTimeSeriesForecasterConfiguration.earlyStoppingIterationCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*LinearTimeSeriesForecasterConfiguration.earlyStoppingIterationCount.modify())()
{
  return nullsub_1;
}

float LinearTimeSeriesForecasterConfiguration.learningRate.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 48);
}

void LinearTimeSeriesForecasterConfiguration.learningRate.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 48) = a1;
}

uint64_t (*LinearTimeSeriesForecasterConfiguration.learningRate.modify())()
{
  return nullsub_1;
}

uint64_t LinearTimeSeriesForecasterConfiguration.randomSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t LinearTimeSeriesForecasterConfiguration.randomSeed.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = result;
  *(_BYTE *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*LinearTimeSeriesForecasterConfiguration.randomSeed.modify())()
{
  return nullsub_1;
}

void __swiftcall LinearTimeSeriesForecasterConfiguration.init(inputWindowSize:forecastWindowSize:)(CreateMLComponents::LinearTimeSeriesForecasterConfiguration *__return_ptr retstr, Swift::Int inputWindowSize, Swift::Int forecastWindowSize)
{
  retstr->inputWindowSize = inputWindowSize;
  retstr->forecastWindowSize = forecastWindowSize;
  *(_OWORD *)&retstr->batchSize = xmmword_22ABEE820;
  retstr->earlyStoppingTolerance = 0.01;
  retstr->earlyStoppingIterationCount = 5;
  retstr->learningRate = 0.005;
  retstr->randomSeed.value = 0;
  retstr->randomSeed.is_nil = 1;
}

uint64_t LinearTimeSeriesForecasterConfiguration.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 64);
  sub_22ABE0250();
  sub_22ABE0250();
  sub_22ABE0250();
  sub_22ABE0250();
  sub_22ABE0268();
  sub_22ABE0250();
  sub_22ABE0268();
  if (v1 == 1)
    return sub_22ABE025C();
  sub_22ABE025C();
  return sub_22ABE0250();
}

uint64_t static LinearTimeSeriesForecasterConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)a1, *(int64x2_t *)a2), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 16), *(int64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) != 0&& *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)&& *(float *)(a1 + 32) == *(float *)(a2 + 32)&& *(float *)(a1 + 48) == *(float *)(a2 + 48))
  {
    if ((*(_BYTE *)(a1 + 64) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 64) & 1) == 0)
        return 0;
    }
    else
    {
      if (*(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56))
        v4 = *(_BYTE *)(a2 + 64);
      else
        v4 = 1;
      if ((v4 & 1) != 0)
        return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_22AA9434C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6E69577475706E69 && a2 == 0xEF657A6953776F64;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000022ABE47F0 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x7A69536863746162 && a2 == 0xE900000000000065;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x800000022ABE3680 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x800000022ABE36A0 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001BLL && a2 == 0x800000022ABE36C0 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      v7 = a1 == 0x676E696E7261656CLL && a2 == 0xEC00000065746152;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0x65536D6F646E6172 && a2 == 0xEA00000000006465)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else
      {
        v9 = sub_22ABDFF68();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 7;
        else
          return 8;
      }
    }
  }
}

uint64_t sub_22AA946B8()
{
  return 8;
}

uint64_t sub_22AA946C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AA94700 + 4 * ::a1[a1]))(0x6E69577475706E69, 0xEF657A6953776F64);
}

unint64_t sub_22AA94700()
{
  return 0xD000000000000012;
}

uint64_t sub_22AA9471C()
{
  return 0x7A69536863746162;
}

unint64_t sub_22AA94738()
{
  return 0xD000000000000015;
}

uint64_t sub_22AA9478C()
{
  return 0x676E696E7261656CLL;
}

uint64_t sub_22AA947AC()
{
  return 0x65536D6F646E6172;
}

uint64_t sub_22AA947C8()
{
  unsigned __int8 *v0;

  return sub_22AA946C0(*v0);
}

uint64_t sub_22AA947D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA9434C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA947F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA946B8();
  *a1 = result;
  return result;
}

uint64_t sub_22AA94818()
{
  sub_22AA94A48();
  return sub_22ABE02EC();
}

uint64_t sub_22AA94840()
{
  sub_22AA94A48();
  return sub_22ABE02F8();
}

void LinearTimeSeriesForecasterConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14D50);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v14 = *(_QWORD *)(v1 + 16);
  v15 = v8;
  v9 = *(_QWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 40);
  v13 = v9;
  v11 = *(_QWORD *)(v1 + 56);
  v10[1] = *(unsigned __int8 *)(v1 + 64);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA94A48();
  sub_22ABE02B0();
  v23 = 0;
  OUTLINED_FUNCTION_1_47();
  if (!v2)
  {
    v22 = 1;
    OUTLINED_FUNCTION_1_47();
    v21 = 2;
    OUTLINED_FUNCTION_1_47();
    v20 = 3;
    OUTLINED_FUNCTION_1_47();
    v19 = 4;
    OUTLINED_FUNCTION_4_52();
    v18 = 5;
    OUTLINED_FUNCTION_1_47();
    v17 = 6;
    OUTLINED_FUNCTION_4_52();
    v16 = 7;
    sub_22ABDFCEC();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_1_33();
}

unint64_t sub_22AA94A48()
{
  unint64_t result;

  result = qword_255B14D58;
  if (!qword_255B14D58)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF58BC, &type metadata for LinearTimeSeriesForecasterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14D58);
  }
  return result;
}

uint64_t LinearTimeSeriesForecasterConfiguration.hashValue.getter()
{
  sub_22ABE0244();
  LinearTimeSeriesForecasterConfiguration.hash(into:)();
  return sub_22ABE0280();
}

void LinearTimeSeriesForecasterConfiguration.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14D60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA94A48();
  sub_22ABE0298();
  if (!v2)
  {
    v31 = 0;
    v9 = OUTLINED_FUNCTION_61_5();
    v30 = 1;
    v10 = OUTLINED_FUNCTION_61_5();
    v29 = 2;
    v23 = OUTLINED_FUNCTION_61_5();
    v28 = 3;
    v22 = OUTLINED_FUNCTION_61_5();
    v27 = 4;
    OUTLINED_FUNCTION_3_61();
    v12 = v11;
    v26 = 5;
    v21 = OUTLINED_FUNCTION_61_5();
    v25 = 6;
    OUTLINED_FUNCTION_3_61();
    v14 = v13;
    v24 = 7;
    v15 = sub_22ABDFC2C();
    v16 = v8;
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    v19 = v22;
    *(_QWORD *)(a2 + 16) = v23;
    *(_QWORD *)(a2 + 24) = v19;
    *(_DWORD *)(a2 + 32) = v12;
    *(_QWORD *)(a2 + 40) = v21;
    *(_DWORD *)(a2 + 48) = v14;
    *(_QWORD *)(a2 + 56) = v15;
    *(_BYTE *)(a2 + 64) = v18 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_1_33();
}

uint64_t sub_22AA94D00()
{
  sub_22ABE0244();
  LinearTimeSeriesForecasterConfiguration.hash(into:)();
  return sub_22ABE0280();
}

unint64_t sub_22AA94D70()
{
  unint64_t result;

  result = qword_255B14D68;
  if (!qword_255B14D68)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for LinearTimeSeriesForecasterConfiguration, &type metadata for LinearTimeSeriesForecasterConfiguration);
    atomic_store(result, (unint64_t *)&qword_255B14D68);
  }
  return result;
}

void sub_22AA94DAC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  LinearTimeSeriesForecasterConfiguration.init(from:)(a1, a2);
}

void sub_22AA94DC0(_QWORD *a1)
{
  LinearTimeSeriesForecasterConfiguration.encode(to:)(a1);
}

void *__swift_memcpy65_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t getEnumTagSinglePayload for LinearTimeSeriesForecasterConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LinearTimeSeriesForecasterConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 65) = v3;
  return result;
}

ValueMetadata *type metadata accessor for LinearTimeSeriesForecasterConfiguration()
{
  return &type metadata for LinearTimeSeriesForecasterConfiguration;
}

uint64_t getEnumTagSinglePayload for LinearTimeSeriesForecasterConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LinearTimeSeriesForecasterConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22AA94F24 + 4 * byte_22ABF56ED[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22AA94F58 + 4 * byte_22ABF56E8[v4]))();
}

uint64_t sub_22AA94F58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA94F60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA94F68);
  return result;
}

uint64_t sub_22AA94F74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA94F7CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22AA94F80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA94F88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LinearTimeSeriesForecasterConfiguration.CodingKeys()
{
  return &type metadata for LinearTimeSeriesForecasterConfiguration.CodingKeys;
}

unint64_t sub_22AA94FA8()
{
  unint64_t result;

  result = qword_255B14D70;
  if (!qword_255B14D70)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5894, &type metadata for LinearTimeSeriesForecasterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14D70);
  }
  return result;
}

unint64_t sub_22AA94FE8()
{
  unint64_t result;

  result = qword_255B14D78;
  if (!qword_255B14D78)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5804, &type metadata for LinearTimeSeriesForecasterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14D78);
  }
  return result;
}

unint64_t sub_22AA95028()
{
  unint64_t result;

  result = qword_255B14D80;
  if (!qword_255B14D80)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF582C, &type metadata for LinearTimeSeriesForecasterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14D80);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_61()
{
  return sub_22ABDFC68();
}

uint64_t OUTLINED_FUNCTION_4_52()
{
  return sub_22ABDFD28();
}

uint64_t TemporalFileSegment.init(url:range:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t result;
  double *v10;

  v8 = OUTLINED_FUNCTION_18_15();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  result = OUTLINED_FUNCTION_1_48();
  v10 = (double *)(a2 + *(int *)(result + 20));
  *v10 = a3;
  v10[1] = a4;
  return result;
}

uint64_t type metadata accessor for TemporalFileSegment()
{
  uint64_t result;

  result = qword_255B14E18;
  if (!qword_255B14E18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TemporalFileSegment.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_18_15();
  return OUTLINED_FUNCTION_81(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t TemporalFileSegment.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_18_15();
  return OUTLINED_FUNCTION_81(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*TemporalFileSegment.url.modify())()
{
  return nullsub_1;
}

double TemporalFileSegment.range.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_1_48();
  return OUTLINED_FUNCTION_6_62(v0);
}

uint64_t TemporalFileSegment.range.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  double *v6;

  result = OUTLINED_FUNCTION_1_48();
  v6 = (double *)(v2 + *(int *)(result + 20));
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*TemporalFileSegment.range.modify())(_QWORD, _QWORD)
{
  OUTLINED_FUNCTION_1_48();
  return nullsub_1;
}

uint64_t sub_22AA951F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676E6172 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AA952C8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65676E6172;
  else
    return 7107189;
}

uint64_t sub_22AA952F4()
{
  char *v0;

  return sub_22AA952C8(*v0);
}

uint64_t sub_22AA952FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AA951F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA95320()
{
  sub_22AA95968();
  return sub_22ABE02EC();
}

uint64_t sub_22AA95348()
{
  sub_22AA95968();
  return sub_22ABE02F8();
}

BOOL static TemporalFileSegment.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  double v6;
  double *v7;
  double v8;
  _BOOL4 v9;

  if ((MEMORY[0x22E2E133C]() & 1) == 0)
    return 0;
  v4 = *(int *)(OUTLINED_FUNCTION_1_48() + 20);
  v5 = *(double *)(a1 + v4);
  v6 = *(double *)(a1 + v4 + 8);
  v7 = (double *)(a2 + v4);
  v8 = v7[1];
  v9 = v5 == *v7;
  return v6 == v8 && v9;
}

uint64_t TemporalFileSegment.hash(into:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_15();
  sub_22A9BED8C((unint64_t *)&qword_255B12C30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22ABDEC0C();
  v0 = OUTLINED_FUNCTION_1_48();
  OUTLINED_FUNCTION_6_62(v0);
  return sub_22AA95920();
}

uint64_t TemporalFileSegment.hashValue.getter()
{
  uint64_t v0;

  sub_22ABE0244();
  OUTLINED_FUNCTION_18_15();
  sub_22A9BED8C((unint64_t *)&qword_255B12C30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22ABDEC0C();
  v0 = OUTLINED_FUNCTION_1_48();
  OUTLINED_FUNCTION_6_62(v0);
  sub_22AA95920();
  return sub_22ABE0280();
}

uint64_t sub_22AA954B0()
{
  sub_22ABE0244();
  sub_22ABDD0E8();
  sub_22A9BED8C((unint64_t *)&qword_255B12C30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_22ABDEC0C();
  sub_22AA95920();
  return sub_22ABE0280();
}

uint64_t TemporalFileSegment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14D88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA95968();
  sub_22ABE02B0();
  sub_22ABDD0E8();
  sub_22A9BED8C((unint64_t *)&qword_255B12C08, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  OUTLINED_FUNCTION_5_47();
  if (!v1)
  {
    type metadata accessor for TemporalFileSegment();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B14D98);
    sub_22AA959A4(&qword_255B14DA0, MEMORY[0x24BEE13D8], MEMORY[0x24BEE1B98]);
    OUTLINED_FUNCTION_5_47();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_22AA9569C(_QWORD *a1)
{
  return TemporalFileSegment.encode(to:)(a1);
}

uint64_t TemporalFileSegment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v14 = sub_22ABDD0E8();
  v3 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  v12 = v5 - v4;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14DA8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_33();
  v6 = type metadata accessor for TemporalFileSegment();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA95968();
  sub_22ABE0298();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v16) = 0;
  sub_22A9BED8C((unint64_t *)&qword_255B12C28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  sub_22ABDFC8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v12, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14D98);
  sub_22AA959A4(&qword_255B14DB0, MEMORY[0x24BEE1400], MEMORY[0x24BEE1BC8]);
  sub_22ABDFC8C();
  OUTLINED_FUNCTION_0_53();
  *(_OWORD *)(v9 + *(int *)(v6 + 20)) = v16;
  sub_22AA95A04(v9, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_22AA95A48(v9);
}

uint64_t sub_22AA9590C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TemporalFileSegment.init(from:)(a1, a2);
}

uint64_t sub_22AA95920()
{
  sub_22ABE0274();
  return sub_22ABE0274();
}

unint64_t sub_22AA95968()
{
  unint64_t result;

  result = qword_255B14D90;
  if (!qword_255B14D90)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5AE4, &type metadata for TemporalFileSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14D90);
  }
  return result;
}

uint64_t sub_22AA959A4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B14D98);
    v8 = a2;
    result = MEMORY[0x22E2E4D80](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22AA95A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TemporalFileSegment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AA95A48(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TemporalFileSegment();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AA95A84()
{
  return sub_22A9BED8C(&qword_255B14DB8, (uint64_t (*)(uint64_t))type metadata accessor for TemporalFileSegment, (uint64_t)&protocol conformance descriptor for TemporalFileSegment);
}

uint64_t *initializeBufferWithCopyOfBuffer for TemporalFileSegment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD0E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for TemporalFileSegment(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22ABDD0E8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for TemporalFileSegment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for TemporalFileSegment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t initializeWithTake for TemporalFileSegment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TemporalFileSegment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for TemporalFileSegment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA95CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_18_15();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TemporalFileSegment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA95D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_18_15();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_22AA95D68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TemporalFileSegment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA95E24 + 4 * byte_22ABF5915[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA95E58 + 4 * byte_22ABF5910[v4]))();
}

uint64_t sub_22AA95E58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA95E60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA95E68);
  return result;
}

uint64_t sub_22AA95E74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA95E7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA95E80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA95E88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TemporalFileSegment.CodingKeys()
{
  return &type metadata for TemporalFileSegment.CodingKeys;
}

unint64_t sub_22AA95EA8()
{
  unint64_t result;

  result = qword_255B14E50;
  if (!qword_255B14E50)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5ABC, &type metadata for TemporalFileSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14E50);
  }
  return result;
}

unint64_t sub_22AA95EE8()
{
  unint64_t result;

  result = qword_255B14E58;
  if (!qword_255B14E58)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5A2C, &type metadata for TemporalFileSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14E58);
  }
  return result;
}

unint64_t sub_22AA95F28()
{
  unint64_t result;

  result = qword_255B14E60;
  if (!qword_255B14E60)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5A54, &type metadata for TemporalFileSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B14E60);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_53()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_47()
{
  return sub_22ABDFD4C();
}

double OUTLINED_FUNCTION_6_62(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 20));
}

void sub_22AA95F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t TupleTypeMetadata2;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_12();
  a19 = v23;
  a20 = v24;
  v25 = v20;
  v27 = v26;
  v29 = v28;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_3_23();
  v32 = _s5StateOMa(0, v27[2], v27[3], v27[4]);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&a9 - v34;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v36 + 16))((char *)&a9 - v34, v25, v32, v33);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v37 = sub_22ABDE8A0();
    v38 = sub_22ABDF5D8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(&v35[*(int *)(TupleTypeMetadata2 + 48)], v38);
LABEL_6:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v35, v37);
    goto LABEL_7;
  }
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10230);
  sub_22A9EB5FC((uint64_t)&v35[*(int *)(v40 + 48)], v22);
  v41 = *(_QWORD *)(v29 + 24);
  v42 = *(_QWORD *)(v29 + 32);
  OUTLINED_FUNCTION_16_41(v29);
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 16);
  v44 = sub_22A9C8D60(qword_255B14E78, &qword_255B10220, MEMORY[0x24BE6BBC8]);
  v43(v22, v30, v44, v41, v42);
  if (!v21)
  {
    sub_22A9AD754(v22, &qword_255B10220);
    v37 = OUTLINED_FUNCTION_26_1();
    goto LABEL_6;
  }
  sub_22A9AD754(v22, &qword_255B10220);
  v45 = OUTLINED_FUNCTION_26_1();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v35, v45);
LABEL_7:
  OUTLINED_FUNCTION_16();
}

void sub_22AA96178()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_12();
  v48 = v0;
  v3 = v2;
  v5 = v4;
  v6 = v2[2];
  v46 = v3[3];
  v47 = v6;
  sub_22ABDE8A0();
  v7 = sub_22ABDF5D8();
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_10_39(v9, v38[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v42 = v11;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v38 - v13;
  v38[1] = sub_22ABDDA0C();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0();
  v50 = v16;
  v17 = OUTLINED_FUNCTION_26_1();
  v40 = *(_QWORD *)(v17 - 8);
  v41 = v17;
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_0();
  v39 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B14E68);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_0();
  v49 = v23;
  v24 = *(_QWORD *)(v5 + 32);
  OUTLINED_FUNCTION_16_41(v5);
  v25 = *(void (**)(uint64_t))(v24 + 16);
  sub_22A9C8D60(&qword_255B14E70, &qword_255B10220, MEMORY[0x24BE6BBD0]);
  v26 = OUTLINED_FUNCTION_15_44();
  v25(v26);
  if (v1)
  {

    OUTLINED_FUNCTION_18_11((uint64_t)v21, 1);
    sub_22A9AD754((uint64_t)v21, &qword_255B14E68);
  }
  else
  {
    OUTLINED_FUNCTION_18_11((uint64_t)v21, 0);
    sub_22A9EB5FC((uint64_t)v21, v49);
    v27 = v48;
    MultivariateLinearRegressor.Model.weight.getter(v3);
    v28 = v3[4];
    v29 = (uint64_t)v14;
    v31 = v46;
    v30 = v47;
    sub_22AA5A180(v29, v47, v50);
    v32 = v43;
    v33 = MultivariateLinearRegressor.Model.bias.getter(v3);
    MEMORY[0x24BDAC7A8](v33);
    v38[-4] = v30;
    v38[-3] = v31;
    v38[-2] = v28;
    v34 = v45;
    sub_22A9D1D90();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v32, v34);
    v35 = v39;
    sub_22ABDD79C();
    v36 = _s5StateOMa(0, v30, v31, v28);
    OUTLINED_FUNCTION_35_6(v27, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8));
    v37 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v27, v35, v41);
    sub_22A9EB5FC(v49, v37);
    swift_storeEnumTagMultiPayload();
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AA964C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v46 = v3;
  v4 = v1[2];
  v34 = v1[3];
  v5 = v34;
  v35 = v4;
  v6 = sub_22ABDE8A0();
  v7 = sub_22ABDF5D8();
  v8 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  v42 = v8;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v9);
  v38 = (char *)&v32 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0();
  v39 = v12;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_3_23();
  v33 = v0;
  v15 = v4;
  v16 = v2[4];
  v36 = _s7StorageVMa_2(0, v15, v5, v16);
  v40 = *(_QWORD *)(v36 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v17);
  v37 = (uint64_t)&v32 - v18;
  MultivariateLinearRegressor.Model.weight.getter(v2);
  v19 = MEMORY[0x24BDBFCD0];
  sub_22A9C8D60((unint64_t *)&qword_255B0DAF8, &qword_2540E8568, MEMORY[0x24BDBFCD0]);
  MEMORY[0x22E2E4D80](v19, v6);
  sub_22ABDE918();
  v20 = v38;
  MultivariateLinearRegressor.Model.bias.getter(v2);
  v22 = v34;
  v21 = v35;
  v43 = v35;
  v44 = v34;
  v45 = v16;
  v23 = v39;
  v24 = v41;
  v25 = v36;
  sub_22A9D1D90();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v20, v24);
  v26 = v16;
  v27 = v37;
  sub_22AA9683C(v33, v23, v21, v22, v26, v37);
  v28 = *(_QWORD *)(v46 + 24);
  v29 = *(_QWORD *)(v46 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v46, v28);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8);
  v31 = MEMORY[0x22E2E4D80](&unk_22ABF5B60, v25);
  v30(v27, v25, v31, v28, v29);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v27, v25);
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA96750(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_22ABDE8A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = MEMORY[0x24BDBFCD0];
  sub_22A9C8D60((unint64_t *)&qword_255B0DAF8, &qword_2540E8568, MEMORY[0x24BDBFCD0]);
  MEMORY[0x22E2E4D80](v6, v2);
  return sub_22ABDE918();
}

uint64_t sub_22AA9683C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  v9 = a6 + *(int *)(_s7StorageVMa_2(0, a3, a4, a5) + 44);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a6, a1, v10);
  return sub_22A9A8F6C(a2, v9);
}

void sub_22AA968D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v39 = v9;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_5_48(v11, v34);
  v12 = sub_22ABDE8A0();
  sub_22ABDF5D8();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_10_39(v14, v34);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v15 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v18);
  v42 = v2;
  v43 = (uint64_t)&v34 - v19;
  v40 = v6;
  v41 = v4;
  v20 = _s7StorageVMa_2(0, v6, v4, v2);
  v35 = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v34 - v22;
  v24 = *(_QWORD *)(v8 + 32);
  OUTLINED_FUNCTION_16_41(v8);
  v25 = *(void (**)(uint64_t))(v24 + 8);
  MEMORY[0x22E2E4D80](&unk_22ABF5B88, v20);
  v26 = OUTLINED_FUNCTION_15_44();
  v25(v26);
  if (!v0)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v23, v34);
    v27 = MEMORY[0x24BDBFCD0];
    MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v12);
    sub_22A9C8D60((unint64_t *)&qword_255B0DAF8, &qword_2540E8568, v27);
    sub_22ABDE918();
    v28 = v38;
    v29 = sub_22AA4993C((uint64_t)&v23[*(int *)(v20 + 44)], v38);
    MEMORY[0x24BDAC7A8](v29);
    v31 = v40;
    v30 = v41;
    *(&v34 - 4) = v40;
    *(&v34 - 3) = v30;
    v32 = v42;
    *(&v34 - 2) = v42;
    v33 = v36;
    sub_22A9D1D90();
    sub_22A9AD754(v28, &qword_2540E8570);
    OUTLINED_FUNCTION_35_6((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
    MultivariateLinearRegressor.Model.init(weight:bias:)(v43, v33, v31, v30, v32, v39);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA96B68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22ABDE8A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v7 = MEMORY[0x24BDBFCD0];
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v6);
  sub_22A9C8D60((unint64_t *)&qword_255B0DAF8, &qword_2540E8568, v7);
  return sub_22ABDE918();
}

uint64_t sub_22AA96C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_47();
  return sub_22A9EB164(v0, v1, v2);
}

uint64_t _s7StorageVMa_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7StorageVMn_2);
}

uint64_t sub_22AA96C90()
{
  uint64_t v0;

  OUTLINED_FUNCTION_9_47();
  return sub_22AA96B68(v0);
}

uint64_t sub_22AA96CA8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_9_47();
  return sub_22AA96750(v0);
}

void sub_22AA96CC0()
{
  unint64_t v0;
  unint64_t v1;

  sub_22A9B9E9C();
  if (v0 <= 0x3F)
  {
    sub_22A9B9EEC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

char *sub_22AA96D44(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = *(int *)(a3 + 44);
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
    }
  }
  return a1;
}

char *sub_22AA96E38(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 44);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_22AA96F00(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 44);
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  return a1;
}

char *sub_22AA97014(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 44);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_22AA970DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 44);
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  return a1;
}

uint64_t sub_22AA971F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA971FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    v8 = a1 + *(int *)(a3 + 44);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_22AA9726C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AA97278(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
    v10 = a1 + *(int *)(a4 + 44);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

void sub_22AA972F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_12();
  v11 = v0;
  v12 = v1;
  v3 = v2;
  v5 = _s7StorageV10CodingKeysOMa_0(255, v4[2], v4[3], v4[4]);
  MEMORY[0x22E2E4D80](&unk_22ABF5C88, v5);
  v6 = sub_22ABDFD58();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_22ABE02B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  sub_22A9B9F80(&qword_255B0EC58, MEMORY[0x24BEE14F8], MEMORY[0x24BDBFCD8]);
  OUTLINED_FUNCTION_27_13();
  v10 = v12;
  sub_22ABDFD4C();
  if (!v10)
  {
    OUTLINED_FUNCTION_27_13();
    sub_22ABDFCF8();
  }
  OUTLINED_FUNCTION_35_6((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_16();
}

void sub_22AA9743C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_12();
  v41 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v32 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v35 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v34 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = OUTLINED_FUNCTION_5_48(v13, v31);
  v16 = _s7StorageV10CodingKeysOMa_0(v14, v15, v4, v2);
  v40 = MEMORY[0x22E2E4D80](&unk_22ABF5C88, v16);
  v39 = sub_22ABDFCB0();
  v33 = *(_QWORD *)(v39 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v31 - v18;
  v20 = _s7StorageVMa_2(0, v6, v4, v2);
  v31 = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v31 - v22;
  v42 = (uint64_t)&v31 + *(int *)(v24 + 44) - v22;
  v36 = v12;
  __swift_storeEnumTagSinglePayload(v42, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  v38 = v19;
  v25 = v41;
  sub_22ABE0298();
  if (v25)
  {
    OUTLINED_FUNCTION_24_24();
    sub_22A9AD754(v42, &qword_2540E8570);
  }
  else
  {
    v26 = v34;
    v41 = v20;
    v27 = v35;
    sub_22A9B9F80(&qword_255B0EC68, MEMORY[0x24BEE1520], MEMORY[0x24BDBFCE8]);
    v28 = v36;
    OUTLINED_FUNCTION_8_45();
    sub_22ABDFC8C();
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v23, v37, v28);
    OUTLINED_FUNCTION_8_45();
    sub_22ABDFC38();
    OUTLINED_FUNCTION_6_63();
    sub_22A9A8F6C(v27, v42);
    v29 = v31;
    v30 = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v32, v23, v41);
    OUTLINED_FUNCTION_24_24();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v30);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA976B8()
{
  char *v0;

  return sub_22A9B92C8(*v0);
}

uint64_t sub_22AA976CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22A9B91F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AA976FC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF5C88, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AA97730(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF5C88, a1);
  return sub_22ABE02F8();
}

void sub_22AA97764()
{
  sub_22AA9743C();
}

void sub_22AA97784()
{
  sub_22AA972F0();
}

uint64_t _s7StorageV10CodingKeysOMa_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7StorageV10CodingKeysOMn_0);
}

uint64_t sub_22AA977A4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA977F0 + 4 * byte_22ABF5B3D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA97824 + 4 * byte_22ABF5B38[v4]))();
}

uint64_t sub_22AA97824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA9782C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA97834);
  return result;
}

uint64_t sub_22AA97840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA97848);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA9784C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA97854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AA97860()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA97870()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA97880()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_5_48@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 255;
}

uint64_t OUTLINED_FUNCTION_6_63()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 120), *(_QWORD *)(v1 - 112));
}

uint64_t OUTLINED_FUNCTION_8_45()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_10_39(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_15_44()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_16_41(uint64_t a1)
{
  uint64_t v1;

  return __swift_mutable_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t ObjectDetectionMetrics.labels.getter()
{
  return sub_22ABDEAEC();
}

uint64_t ObjectDetectionMetrics.labels.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*ObjectDetectionMetrics.labels.modify())()
{
  return nullsub_1;
}

float ObjectDetectionMetrics.defaultConfidenceThreshold.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

void ObjectDetectionMetrics.defaultConfidenceThreshold.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

uint64_t (*ObjectDetectionMetrics.defaultConfidenceThreshold.modify())()
{
  return nullsub_1;
}

uint64_t ObjectDetectionMetrics.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = sub_22ABDEA08();
  *(_QWORD *)a1 = result;
  *(_DWORD *)(a1 + 8) = 1056964608;
  return result;
}

void static ObjectDetectionMetrics.extractLabels(from:)()
{
  sub_22ABDEA08();
  type metadata accessor for ObjectDetectionAnnotation();
}

void sub_22AA97A0C()
{
  OUTLINED_FUNCTION_33_4();
  sub_22ABDF2D8();
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AA97A34()
{
  uint64_t v1;

  sub_22ABDEF18();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_22AA97A84()
{
  swift_getKeyPath();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  type metadata accessor for ObjectDetectionAnnotation.Annotation();
}

uint64_t sub_22AA97B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t *v7;

  v2 = sub_22ABDF0F8();
  v3 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v2);
  sub_22AA726CC((void (*)(char *, uint64_t))sub_22AA9A47C, v0, v2, v1, MEMORY[0x24BEE4078], v3, MEMORY[0x24BEE40A8], v4);
  swift_release();
  swift_bridgeObjectRelease();
  v5 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v5);
  result = sub_22ABDF284();
  *v7 = result;
  return result;
}

void sub_22AA97BEC()
{
  sub_22AA97A84();
}

void sub_22AA97C0C()
{
  type metadata accessor for ObjectDetectionMetrics.PredictionsPerLabel();
}

void sub_22AA97C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 88) = sub_22ABDE9F0();
  *(_QWORD *)(v4 - 128) = v0;
  type metadata accessor for DetectedObject(255, v1, v2, v3);
  sub_22ABDF0F8();
  sub_22ABDF0F8();
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA97CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_22ABDEEB8();
  *(_QWORD *)(v10 - 136) = *(_QWORD *)(v10 - 152);
  sub_22ABDFB48();
  sub_22ABDFB24();
  v11 = sub_22ABDFB3C();
  v12 = sub_22ABDFB30();
  v13 = *(_QWORD *)(v10 - 144);
  if (v13)
  {
    *(_QWORD *)(v10 - 200) = v11;
    *(_QWORD *)(v10 - 192) = v9;
    *(_QWORD *)(v10 - 168) = &a9;
    *(_QWORD *)(v10 - 152) = v13;
    MEMORY[0x24BDAC7A8](v12);
    OUTLINED_FUNCTION_115_0();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AA97E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for DetectedObject(0, a3, a4, a7);
  return sub_22ABDECFC() & 1;
}

float sub_22AA97EE8@<S0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  float result;
  __int128 v11;

  v11 = *a1;
  v8 = *((_QWORD *)a1 + 2);
  v9 = *((_QWORD *)a1 + 3);
  result = *(float *)((char *)a1 + *(int *)(type metadata accessor for DetectedObject(0, a3, a4, a5) + 48));
  *(_QWORD *)a6 = a2;
  *(_OWORD *)(a6 + 8) = v11;
  *(_QWORD *)(a6 + 24) = v8;
  *(_QWORD *)(a6 + 32) = v9;
  *(float *)(a6 + 40) = result;
  return result;
}

void sub_22AA97F68()
{
  OUTLINED_FUNCTION_67_10();
  type metadata accessor for ObjectDetectionAnnotation();
}

void sub_22AA97FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_39_22();
  v11 = sub_22ABDF5D8();
  *(_QWORD *)(v10 - 192) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v10 - 184) = (char *)&a9 - v13;
  *(_QWORD *)(v10 - 216) = v9;
  OUTLINED_FUNCTION_67_10();
  type metadata accessor for ObjectDetectionMetrics.AnnotationsPerLabel();
}

void sub_22AA9803C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 224) = a1;
  *(_QWORD *)(v3 - 136) = sub_22ABDE9F0();
  *(_QWORD *)(v3 - 160) = v1;
  *(_QWORD *)(v3 - 200) = v2;
  sub_22ABDF0F8();
  OUTLINED_FUNCTION_86_4();
}

void sub_22AA9806C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_22ABDEEB8();
  *(_QWORD *)(v7 - 168) = *(_QWORD *)(v7 - 128);
  sub_22ABDFB48();
  sub_22ABDFB24();
  v8 = v0;
  v9 = sub_22ABDFB3C();
  sub_22ABDFB30();
  v10 = *(_QWORD **)(v7 - 184);
  v11 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 192) + 32);
  *(_QWORD *)(v7 - 232) = v11;
  v11(v10, v8, v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v2) != 1)
  {
    *(_QWORD *)(v7 - 272) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 - 200) - 8) + 8);
    *(_QWORD *)(v7 - 248) = v6;
    *(_QWORD *)(v7 - 240) = v2;
    *(_QWORD *)(v7 - 256) = v8;
    *(_QWORD *)(v7 - 264) = v9;
    *(_QWORD *)(v7 - 192) = *v10;
    v12 = *(_QWORD *)(v7 - 184) + *(int *)(v2 + 48);
    v13 = *(_QWORD *)(v12 + 16);
    sub_22ABDEAEC();
    v14 = (*(uint64_t (**)(uint64_t, _QWORD))(v7 - 272))(v12, *(_QWORD *)(v7 - 200));
    *(_QWORD *)(v7 - 168) = v13;
    MEMORY[0x24BDAC7A8](v14);
    *(_QWORD *)(v7 - 128) = *(_QWORD *)(v7 - 216);
    *(_QWORD *)(v7 - 120) = v1;
    *(_QWORD *)(v7 - 112) = v3;
    *(_QWORD *)(v7 - 104) = v5;
    *(_QWORD *)(v7 - 96) = v4;
    type metadata accessor for ObjectDetectionAnnotation.Annotation();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3();
}

void sub_22AA98308()
{
  type metadata accessor for ObjectDetectionAnnotation.Annotation();
}

uint64_t sub_22AA98348()
{
  return sub_22ABDECFC() & 1;
}

uint64_t sub_22AA98384()
{
  if ((sub_22ABDF2A8() & 1) != 0)
    static ObjectDetectionMetrics.extractLabels(from:)();
  return sub_22ABDEAEC();
}

double sub_22AA98400(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double Width;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v19;
  double v20;
  double v21;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return 0.0;
  v8 = 0;
  v9 = sub_22ABDEAEC() + 56;
  v10 = 0.0;
  v21 = a5;
  v19 = a4;
  do
  {
    v24.origin.x = a2;
    v24.origin.y = a3;
    v24.size.width = a4;
    v24.size.height = a5;
    v20 = v10;
    v25 = CGRectIntersection(v24, *(CGRect *)(v9 - 24));
    v11 = 0.0;
    if (!CGRectIsNull(v25))
    {
      v26.origin.x = OUTLINED_FUNCTION_80_12();
      Width = CGRectGetWidth(v26);
      v27.origin.x = OUTLINED_FUNCTION_80_12();
      v11 = fabs(Width * CGRectGetHeight(v27));
    }
    v28.origin.x = a2;
    v28.origin.y = a3;
    a4 = v19;
    v28.size.width = v19;
    v28.size.height = v21;
    v13 = CGRectGetWidth(v28);
    v29.origin.x = a2;
    v29.origin.y = a3;
    v29.size.width = v19;
    v29.size.height = v21;
    v14 = fabs(v13 * CGRectGetHeight(v29));
    v30.origin.x = OUTLINED_FUNCTION_79_9();
    v15 = CGRectGetWidth(v30);
    v31.origin.x = OUTLINED_FUNCTION_79_9();
    v16 = v14 + fabs(v15 * CGRectGetHeight(v31)) - v11;
    if (v16 <= 0.0)
    {
      v17 = 0.0;
      v10 = v20;
      if (v20 >= 0.0)
        goto LABEL_10;
LABEL_9:
      v10 = v17;
      goto LABEL_10;
    }
    v17 = v11 / v16;
    v10 = v20;
    if (v20 < v17)
      goto LABEL_9;
LABEL_10:
    ++v8;
    v9 += 32;
    a5 = v21;
  }
  while (v5 != v8);
  swift_bridgeObjectRelease();
  return v10;
}

void sub_22AA985B0()
{
  type metadata accessor for ObjectDetectionMetrics.AnnotationsPerLabel();
}

void sub_22AA9860C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;

  *(_QWORD *)(v7 - 248) = v1;
  *(_QWORD *)(v7 - 296) = a1;
  v8 = MEMORY[0x22E2E3340](v1);
  sub_22AA0B0E4(0, v8);
  sub_22ABDEAEC();
  *(_QWORD *)(v7 - 256) = v2;
  *(_QWORD *)(v7 - 192) = v2;
  *(_QWORD *)(v7 - 184) = v3;
  *(_QWORD *)(v7 - 264) = v3;
  *(_QWORD *)(v7 - 272) = v4;
  *(_QWORD *)(v7 - 176) = v4;
  *(_QWORD *)(v7 - 168) = v5;
  *(_QWORD *)(v7 - 280) = v5;
  *(_QWORD *)(v7 - 288) = v6;
  *(_QWORD *)(v7 - 160) = v6;
  type metadata accessor for ObjectDetectionMetrics.PredictionsPerLabel();
}

void sub_22AA98678()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 200) = sub_22ABDEFFC();
  OUTLINED_FUNCTION_71_10();
}

uint64_t sub_22AA98BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v16;

  MEMORY[0x24BDAC7A8](a1);
  v16 = sub_22ABDE9F0();
  sub_22ABDE9F0();
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 16);
    if (v11)
    {
      v12 = *(_QWORD *)(a1 + 32);
      sub_22ABDEAEC();
      sub_22ABDEAEC();
      for (i = 0; i != v11; ++i)
      {
        sub_22AB67B20(v12, *(_QWORD *)(a2 + 8 * i + 32), a5);
        sub_22ABDF0F8();
        sub_22ABDF0C8();
        sub_22AB672C0(v12, a3, a5, a6);
        sub_22ABDF0C8();
        if (v10 - 1 == i)
          break;
        v12 = *(_QWORD *)(a1 + 8 * i + 40);
      }
      OUTLINED_FUNCTION_27_7();
      swift_bridgeObjectRelease();
    }
  }
  return v16;
}

void sub_22AA98D48()
{
  OUTLINED_FUNCTION_14_10();
  sub_22ABDEAEC();
  type metadata accessor for ObjectDetectionMetrics.PredictionsPerLabel();
}

void sub_22AA98DCC()
{
  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_115_0();
}

void sub_22AA98DE0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 152) = sub_22ABDF878();
  OUTLINED_FUNCTION_115_0();
}

void sub_22AA98E38()
{
  sub_22ABDEF24();
  swift_bridgeObjectRelease();
  sub_22AA985B0();
}

void sub_22AA98E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_3_8();
  *(_QWORD *)(v16 - 152) = v14;
  *(_QWORD *)(v16 - 144) = v13;
  *(_QWORD *)(v16 - 136) = v12;
  *(_QWORD *)(v16 - 128) = a12;
  *(_QWORD *)(v16 - 120) = v15;
  type metadata accessor for ObjectDetectionMetrics.AnnotationsPerLabel();
}

uint64_t sub_22AA99040@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t TupleTypeMetadata2;

  v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

void sub_22AA990E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[30];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_14_10();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v23[8] = v8;
  v10 = v9;
  v23[1] = v11;
  v23[16] = *(_QWORD *)(v0 + 8);
  v23[14] = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v12);
  v23[15] = (char *)v23 - v13;
  v23[7] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_87();
  v23[12] = v15;
  MEMORY[0x24BDAC7A8](v16);
  v23[13] = (char *)v23 - v17;
  v32 = v10;
  v18 = v5[3];
  v24 = v5[2];
  v19 = v24;
  v25 = v3;
  v20 = v5[4];
  v21 = v5[5];
  v26 = v18;
  v27 = v20;
  v23[9] = v5;
  v22 = v5[6];
  v28 = v21;
  v29 = v22;
  v30 = v1;
  v31 = v7;
  sub_22ABDEAEC();
  v33 = v19;
  v34 = v18;
  v35 = v20;
  v36 = v21;
  v37 = v22;
  type metadata accessor for ObjectDetectionMetrics.PredictionsPerLabel();
}

void sub_22AA99214()
{
  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_76_6();
}

void sub_22AA99228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 152) = sub_22ABDF878();
  *(_QWORD *)(v7 - 448) = v3;
  *(_QWORD *)(v7 - 336) = v3;
  *(_QWORD *)(v7 - 328) = v5;
  *(_QWORD *)(v7 - 456) = v2;
  *(_QWORD *)(v7 - 320) = v2;
  *(_QWORD *)(v7 - 472) = v0;
  *(_QWORD *)(v7 - 312) = v0;
  *(_QWORD *)(v7 - 480) = v1;
  *(_QWORD *)(v7 - 304) = v1;
  *(_QWORD *)(v7 - 360) = v6;
  *(_QWORD *)(v7 - 296) = v6;
  *(_QWORD *)(v7 - 464) = v4;
  *(_QWORD *)(v7 - 288) = v4;
  OUTLINED_FUNCTION_76_6();
}

void sub_22AA992C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 416) = sub_22ABDEF24();
  swift_bridgeObjectRelease();
  swift_getAssociatedConformanceWitness();
  sub_22ABE0130();
  *(_QWORD *)(v2 - 408) = v1;
  sub_22ABDFF20();
  *(_QWORD *)(v2 - 376) = v0;
  *(_QWORD *)(v2 - 368) = 1;
  sub_22AA985B0();
}

void sub_22AA993C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 - 152) = v2;
  *(_QWORD *)(v3 - 144) = v1;
  v4 = *(_QWORD *)(v3 - 480);
  *(_QWORD *)(v3 - 136) = v0;
  *(_QWORD *)(v3 - 128) = v4;
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 360);
  type metadata accessor for ObjectDetectionMetrics.AnnotationsPerLabel();
}

void ObjectDetectionMetrics.averagePrecision<A>(predictions:annotations:confidenceThresholds:overlapThreshold:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v41 = a3;
  v42 = a6;
  v39 = a1;
  OUTLINED_FUNCTION_75_11();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v11);
  v34 = (char *)v29 - v12;
  OUTLINED_FUNCTION_55_14();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_87();
  v38 = v14;
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_22_35();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_78_7();
  v17 = *(_DWORD *)(v6 + 8);
  v37 = a5;
  v44 = OUTLINED_FUNCTION_62_12();
  v45 = v7;
  LODWORD(v46) = v17;
  v40 = a2;
  v36 = a4;
  v18 = sub_22AA98384();
  if ((v18 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_53_20();
    OUTLINED_FUNCTION_64_10();
    v18 = v45;
    v30 = v46;
    v19 = v47;
    v33 = v48;
    a4 = v49;
  }
  else
  {
    v33 = 0;
    OUTLINED_FUNCTION_45_16();
    OUTLINED_FUNCTION_13_54();
  }
  v31 = v18 & 0x7FFFFFFFFFFFFFFFLL;
  v29[1] = v19;
  v32 = (unint64_t)(v19 + 64) >> 6;
  v35 = v18;
  if (v18 < 0)
  {
    if (sub_22ABDF740())
    {
      v43 = a4;
      OUTLINED_FUNCTION_59_13();
      OUTLINED_FUNCTION_50_20();
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  if (a4)
  {
    OUTLINED_FUNCTION_66_14();
    v43 = a4;
LABEL_22:
    OUTLINED_FUNCTION_18_43();
LABEL_23:
    OUTLINED_FUNCTION_8_46();
    sub_22AA97C0C();
  }
  v20 = v30;
  if (!__OFADD__(v33, 1))
  {
    if (v33 + 1 < v32)
    {
      OUTLINED_FUNCTION_65_14();
      if (!v21)
      {
        OUTLINED_FUNCTION_58_10();
        if (v23 == v24)
          goto LABEL_24;
        if (!*(_QWORD *)(v20 + 8 * v22))
        {
          OUTLINED_FUNCTION_58_10();
          if (v23 == v24)
            goto LABEL_24;
          if (!*(_QWORD *)(v20 + 8 * v25))
          {
            do
            {
              OUTLINED_FUNCTION_58_10();
              if (v23 == v24)
                goto LABEL_24;
              OUTLINED_FUNCTION_63_12();
            }
            while (!v26);
          }
        }
      }
      OUTLINED_FUNCTION_81_8();
      v43 = v27;
      v33 = v28;
      goto LABEL_22;
    }
LABEL_24:
    OUTLINED_FUNCTION_41_17();
    sub_22A9C38B4();
    return;
  }
  __break(1u);
}

void ObjectDetectionMetrics.meanAveragePrecision<A>(predictions:annotations:confidenceThresholds:overlapThreshold:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_14_10();
  v5 = OUTLINED_FUNCTION_17_38(v1, v2, v3, v4);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_40();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33_26(v7, v21);
  OUTLINED_FUNCTION_54_14();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_25_28();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_24_35(v10, v22);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_57_11();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_15_45();
  v12 = OUTLINED_FUNCTION_48_20();
  if ((v12 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_47_16();
    OUTLINED_FUNCTION_43_15();
    OUTLINED_FUNCTION_30_26();
  }
  else
  {
    OUTLINED_FUNCTION_3_62();
    v0 = v13 & v14;
  }
  OUTLINED_FUNCTION_4_53();
  if (v12 < 0)
  {
    if (sub_22ABDF740())
    {
      OUTLINED_FUNCTION_32_21();
      OUTLINED_FUNCTION_50_20();
      goto LABEL_22;
    }
    OUTLINED_FUNCTION_69_10();
    goto LABEL_25;
  }
  if (v0)
  {
    OUTLINED_FUNCTION_28_23();
LABEL_21:
    OUTLINED_FUNCTION_12_43();
LABEL_22:
    OUTLINED_FUNCTION_11_48();
    OUTLINED_FUNCTION_42_17();
  }
  if (!__OFADD__(v25, 1))
  {
    if (v25 + 1 < v23)
    {
      OUTLINED_FUNCTION_65_14();
      if (v18)
        goto LABEL_20;
      v15 = v16 + 1;
      if (v16 + 1 < v17)
      {
        if (!*(_QWORD *)(v24 + 8 * v15))
        {
          v15 = v16 + 2;
          if (v16 + 2 < v17)
          {
            if (!*(_QWORD *)(v24 + 8 * v15))
            {
              v19 = v25 + 4;
              do
              {
                if (v19 >= v17)
                  goto LABEL_25;
                OUTLINED_FUNCTION_63_12();
              }
              while (!v20);
              v15 = v19 - 1;
            }
            goto LABEL_20;
          }
          goto LABEL_25;
        }
LABEL_20:
        OUTLINED_FUNCTION_36_24(v15);
        goto LABEL_21;
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_2_58();
    OUTLINED_FUNCTION_14_45();
    OUTLINED_FUNCTION_35_18();
    OUTLINED_FUNCTION_70_8();
    OUTLINED_FUNCTION_1_16();
    return;
  }
  __break(1u);
}

void ObjectDetectionMetrics.averageOfAveragePrecisionAtVariedThresholds<A>(predictions:annotations:confidenceThresholds:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_14_10();
  v50 = v2;
  v51 = v3;
  v41 = v4;
  v42 = v5;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v39 = v12;
  OUTLINED_FUNCTION_75_11();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v13);
  v34 = (char *)v29 - v14;
  OUTLINED_FUNCTION_55_14();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_87();
  v38 = v16;
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_22_35();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_78_7();
  v19 = *(_DWORD *)(v0 + 8);
  v37 = v7;
  v44 = OUTLINED_FUNCTION_62_12();
  v45 = v1;
  LODWORD(v46) = v19;
  v40 = v11;
  v36 = v9;
  v20 = sub_22AA98384();
  if ((v20 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_53_20();
    OUTLINED_FUNCTION_64_10();
    v20 = v45;
    v30 = v46;
    v21 = v47;
    v33 = v48;
    v9 = v49;
  }
  else
  {
    v33 = 0;
    OUTLINED_FUNCTION_45_16();
    OUTLINED_FUNCTION_13_54();
  }
  v31 = v20 & 0x7FFFFFFFFFFFFFFFLL;
  v29[1] = v21;
  v32 = (unint64_t)(v21 + 64) >> 6;
  v35 = v20;
  if (v20 < 0)
  {
    if (sub_22ABDF740())
    {
      v43 = v9;
      OUTLINED_FUNCTION_59_13();
      OUTLINED_FUNCTION_50_20();
      goto LABEL_21;
    }
    goto LABEL_22;
  }
  if (v9)
  {
    OUTLINED_FUNCTION_66_14();
    v43 = v9;
LABEL_20:
    OUTLINED_FUNCTION_18_43();
LABEL_21:
    OUTLINED_FUNCTION_8_46();
    sub_22AA97C0C();
  }
  v22 = v30;
  if (!__OFADD__(v33, 1))
  {
    if (v33 + 1 < v32)
    {
      OUTLINED_FUNCTION_65_14();
      if (v24)
        goto LABEL_19;
      if (v23 + 1 < v32)
      {
        if (*(_QWORD *)(v22 + 8 * (v23 + 1)))
          goto LABEL_19;
        if (v23 + 2 < v32)
        {
          if (!*(_QWORD *)(v22 + 8 * (v23 + 2)))
          {
            v25 = v33 + 4;
            while (v25 < v32)
            {
              OUTLINED_FUNCTION_63_12();
              if (v26)
                goto LABEL_19;
            }
            goto LABEL_22;
          }
LABEL_19:
          OUTLINED_FUNCTION_81_8();
          v43 = v27;
          v33 = v28;
          goto LABEL_20;
        }
      }
    }
LABEL_22:
    OUTLINED_FUNCTION_41_17();
    sub_22A9C38B4();
    return;
  }
  __break(1u);
}

void ObjectDetectionMetrics.averageOfMeanAveragePrecisionAtVariedThresholds<A>(predictions:annotations:confidenceThresholds:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_14_10();
  v5 = OUTLINED_FUNCTION_17_38(v1, v2, v3, v4);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_40();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33_26(v7, v21);
  OUTLINED_FUNCTION_54_14();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_25_28();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_24_35(v10, v22);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_57_11();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_15_45();
  v12 = OUTLINED_FUNCTION_48_20();
  if ((v12 & 0xC000000000000001) != 0)
  {
    OUTLINED_FUNCTION_47_16();
    OUTLINED_FUNCTION_43_15();
    OUTLINED_FUNCTION_30_26();
  }
  else
  {
    OUTLINED_FUNCTION_3_62();
    v0 = v13 & v14;
  }
  OUTLINED_FUNCTION_4_53();
  if (v12 < 0)
  {
    if (sub_22ABDF740())
    {
      OUTLINED_FUNCTION_32_21();
      OUTLINED_FUNCTION_50_20();
      goto LABEL_22;
    }
    OUTLINED_FUNCTION_69_10();
    goto LABEL_25;
  }
  if (v0)
  {
    OUTLINED_FUNCTION_28_23();
LABEL_21:
    OUTLINED_FUNCTION_12_43();
LABEL_22:
    OUTLINED_FUNCTION_11_48();
    OUTLINED_FUNCTION_42_17();
  }
  if (!__OFADD__(v25, 1))
  {
    if (v25 + 1 < v23)
    {
      OUTLINED_FUNCTION_65_14();
      if (v18)
        goto LABEL_20;
      v15 = v16 + 1;
      if (v16 + 1 < v17)
      {
        if (!*(_QWORD *)(v24 + 8 * v15))
        {
          v15 = v16 + 2;
          if (v16 + 2 < v17)
          {
            if (!*(_QWORD *)(v24 + 8 * v15))
            {
              v19 = v25 + 4;
              do
              {
                if (v19 >= v17)
                  goto LABEL_25;
                OUTLINED_FUNCTION_63_12();
              }
              while (!v20);
              v15 = v19 - 1;
            }
            goto LABEL_20;
          }
          goto LABEL_25;
        }
LABEL_20:
        OUTLINED_FUNCTION_36_24(v15);
        goto LABEL_21;
      }
    }
LABEL_25:
    OUTLINED_FUNCTION_2_58();
    OUTLINED_FUNCTION_14_45();
    OUTLINED_FUNCTION_35_18();
    OUTLINED_FUNCTION_70_8();
    OUTLINED_FUNCTION_1_16();
    return;
  }
  __break(1u);
}

uint64_t sub_22AA9A170(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AA9A1A4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_22AA9A204(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t sub_22AA9A240(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 12))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AA9A280(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 12) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ObjectDetectionMetrics()
{
  JUMPOUT(0x22E2E4CF0);
}

void type metadata accessor for ObjectDetectionMetrics.PredictionsPerLabel()
{
  JUMPOUT(0x22E2E4CF0);
}

void type metadata accessor for ObjectDetectionMetrics.AnnotationsPerLabel()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AA9A2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22AA9A39C(a1, a2);
}

BOOL sub_22AA9A2FC(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(a1 + 8) == **(_QWORD **)(v1 + 56);
}

BOOL sub_22AA9A314(uint64_t a1)
{
  uint64_t v1;

  return *(float *)(a1 + 40) >= *(float *)(v1 + 72);
}

BOOL sub_22AA9A328(uint64_t a1, uint64_t a2)
{
  return *(float *)(a2 + 40) < *(float *)(a1 + 40);
}

uint64_t sub_22AA9A33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = *(_QWORD *)(v4 + 24);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v9(a1, a3, v7);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(a2, a4, v7);
}

uint64_t sub_22AA9A39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22AA99040(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 72), a2);
}

uint64_t sub_22AA9A3D8(uint64_t a1)
{
  return sub_22AA9A430(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AA98308) & 1;
}

__n128 sub_22AA9A3F8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  *(_QWORD *)a2 = *(_QWORD *)(v2 + 56);
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 24) = v4;
  return result;
}

uint64_t sub_22AA9A410(uint64_t a1)
{
  return sub_22AA9A430(a1, sub_22AA97E74) & 1;
}

uint64_t sub_22AA9A430(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[7], v2[2], v2[3], v2[4], v2[5], v2[6]) & 1;
}

float sub_22AA9A458@<S0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_22AA97EE8(a1, v2[7], v2[2], v2[3], v2[6], a2);
}

uint64_t sub_22AA9A47C()
{
  return swift_getAtKeyPath();
}

__n128 __swift_memcpy44_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_22AA9A4B8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 44))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_22AA9A4D8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 44) = v3;
  return result;
}

BOOL sub_22AA9A510(uint64_t a1)
{
  return sub_22AA9A314(a1);
}

BOOL sub_22AA9A528(uint64_t a1, uint64_t a2)
{
  return sub_22AA9A328(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_58()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
  sub_22A9C38B4();
  return sub_22ABDEBDC();
}

void OUTLINED_FUNCTION_3_62()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 248) = 0;
  *(_QWORD *)(v1 - 264) = v0 + 56;
}

void OUTLINED_FUNCTION_4_53()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 256) = v1 & 0x7FFFFFFFFFFFFFFFLL;
  *(_QWORD *)(v2 - 280) = v0;
  *(_QWORD *)(v2 - 272) = (unint64_t)(v0 + 64) >> 6;
  *(_QWORD *)(v2 - 240) = v1;
}

uint64_t OUTLINED_FUNCTION_6_64()
{
  return sub_22ABDFB00();
}

uint64_t OUTLINED_FUNCTION_8_46()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_storeEnumTagSinglePayload(v3, 0, 1, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v3, v0);
}

uint64_t OUTLINED_FUNCTION_9_48()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return sub_22ABDEB28();
}

uint64_t OUTLINED_FUNCTION_10_40()
{
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_11_48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_12_43()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, *(_QWORD *)(v1 + 48) + *(_QWORD *)(v4 + 72) * v0, v3);
}

void OUTLINED_FUNCTION_13_54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_14_45()
{
  return sub_22ABDEB88();
}

uint64_t OUTLINED_FUNCTION_15_45()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = v1;
  *(_QWORD *)(v2 - 200) = v0;
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_17_38@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  *(_QWORD *)(v4 - 224) = result;
  *(_QWORD *)(v4 - 216) = a3;
  *(_QWORD *)(v4 - 160) = a2;
  *(_QWORD *)(v4 - 288) = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_18_43()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, *(_QWORD *)(v2 + 48) + *(_QWORD *)(v3 + 72) * v0, v1);
}

uint64_t OUTLINED_FUNCTION_20_37()
{
  return sub_22ABE0130();
}

uint64_t OUTLINED_FUNCTION_21_42()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_35()
{
  return sub_22ABDF5D8();
}

void OUTLINED_FUNCTION_24_35(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_25_28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = *(_QWORD *)(v0 - 8);
}

uint64_t OUTLINED_FUNCTION_26_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_27_31()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_29_24()
{
  sub_22AA97F68();
}

void OUTLINED_FUNCTION_30_26()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 264) = *(_QWORD *)(v0 - 136);
  *(_QWORD *)(v0 - 248) = *(_QWORD *)(v0 - 120);
}

uint64_t OUTLINED_FUNCTION_31_22()
{
  return sub_22ABDEB64();
}

uint64_t OUTLINED_FUNCTION_32_21()
{
  return sub_22ABDFF44();
}

void OUTLINED_FUNCTION_33_26(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 176) = v2;
  *(_QWORD *)(v3 - 168) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_35_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v1, v0);
}

void OUTLINED_FUNCTION_36_24(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 248) = a1;
}

uint64_t OUTLINED_FUNCTION_37_21()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_39_22()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_41_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v2, 1, 1, v0);
  return v1;
}

void OUTLINED_FUNCTION_42_17()
{
  sub_22AA97C0C();
}

uint64_t OUTLINED_FUNCTION_43_15()
{
  return sub_22ABDF2B4();
}

uint64_t OUTLINED_FUNCTION_47_16()
{
  return sub_22ABDF734();
}

uint64_t OUTLINED_FUNCTION_48_20()
{
  return sub_22AA98384();
}

uint64_t OUTLINED_FUNCTION_50_20()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_51_22@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_53_20()
{
  return sub_22ABDF734();
}

uint64_t OUTLINED_FUNCTION_54_14()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_56_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_57_11()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 232) = *v0;
}

uint64_t OUTLINED_FUNCTION_59_13()
{
  return sub_22ABDFF44();
}

uint64_t OUTLINED_FUNCTION_60_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_62_12()
{
  return sub_22ABDE9E4();
}

uint64_t OUTLINED_FUNCTION_64_10()
{
  return sub_22ABDF2B4();
}

void OUTLINED_FUNCTION_67_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 128) = v0;
  *(_QWORD *)(v5 - 120) = v1;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v3;
}

uint64_t OUTLINED_FUNCTION_70_8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

void OUTLINED_FUNCTION_71_10()
{
  JUMPOUT(0x22E2E3364);
}

uint64_t OUTLINED_FUNCTION_72_10()
{
  return sub_22ABDF7E8();
}

void OUTLINED_FUNCTION_73_7()
{
  JUMPOUT(0x22E2E3364);
}

uint64_t OUTLINED_FUNCTION_74_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_75_11()
{
  return sub_22ABDF5D8();
}

BOOL OUTLINED_FUNCTION_76_12@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL OUTLINED_FUNCTION_77_10@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

double OUTLINED_FUNCTION_79_9()
{
  double v0;

  return v0;
}

double OUTLINED_FUNCTION_80_12()
{
  double v0;

  return v0;
}

unint64_t TabularPipelineDataError.errorDescription.getter()
{
  return TabularPipelineDataError.debugDescription.getter();
}

unint64_t TabularPipelineDataError.debugDescription.getter()
{
  uint64_t v0;
  unint64_t v2;

  if (!*(_BYTE *)(v0 + 64))
  {
    OUTLINED_FUNCTION_6_2();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v2 = 0xD000000000000010;
    OUTLINED_FUNCTION_7_57();
LABEL_6:
    sub_22ABDEDC8();
    goto LABEL_7;
  }
  if (*(_BYTE *)(v0 + 64) != 1)
  {
    OUTLINED_FUNCTION_6_2();
    sub_22ABDF7A0();
    OUTLINED_FUNCTION_2_44();
    OUTLINED_FUNCTION_7_57();
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_6_2();
  sub_22ABDF7A0();
  OUTLINED_FUNCTION_2_44();
  OUTLINED_FUNCTION_7_57();
  sub_22ABDEDC8();
  sub_22ABDEDC8();
  sub_22ABDEDC8();
  sub_22ABDEDC8();
  sub_22ABDEDC8();
LABEL_7:
  sub_22ABDEDC8();
  sub_22ABDEDC8();
  return v2;
}

uint64_t static TabularPipelineDataError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  char v21;
  BOOL v22;
  char v23;
  BOOL v24;
  char v25;
  uint64_t v26;
  char v29;
  BOOL v31;
  char v32;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[8];
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 64);
  v11 = *(_QWORD *)a2;
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_QWORD *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a2 + 32);
  v16 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a2 + 48);
  v18 = *(_QWORD *)(a2 + 56);
  v19 = *(unsigned __int8 *)(a2 + 64);
  v44[0] = *(_QWORD *)a1;
  v44[1] = v3;
  v44[2] = v4;
  v44[3] = v5;
  v44[4] = v7;
  v44[5] = v6;
  v42 = v4;
  v43 = v6;
  v40 = v9;
  v41 = v8;
  v44[6] = v8;
  v44[7] = v9;
  v45 = v10;
  v46 = v11;
  v47 = v12;
  v48 = v13;
  v49 = v14;
  v50 = v15;
  v51 = v16;
  v52 = v17;
  v53 = v18;
  v54 = v19;
  if ((_DWORD)v10)
  {
    if ((_DWORD)v10 == 1)
    {
      if (v19 == 1)
      {
        v20 = v2 == v11 && v3 == v12;
        v36 = v18;
        v38 = v15;
        if (!v20)
        {
          v21 = OUTLINED_FUNCTION_4_54();
          v17 = v35;
          v18 = v36;
          v16 = v10;
          v15 = v38;
          if ((v21 & 1) == 0)
            goto LABEL_48;
        }
        v22 = v4 == v13 && v5 == v14;
        if (!v22 && (OUTLINED_FUNCTION_1_49(), OUTLINED_FUNCTION_5_49(), (v23 & 1) == 0)
          || (v7 == v15 ? (v24 = v43 == v16) : (v24 = 0),
              !v24 && (OUTLINED_FUNCTION_1_49(), OUTLINED_FUNCTION_5_49(), (v25 & 1) == 0)))
        {
LABEL_48:
          v26 = v7;
          LOBYTE(v7) = 0;
          goto LABEL_49;
        }
        v26 = v7;
        if (v41 != v17 || v40 != v18)
        {
          LOBYTE(v7) = v17;
          sub_22ABDFF68();
          OUTLINED_FUNCTION_3_63();
LABEL_49:
          LOBYTE(v19) = 1;
          LOBYTE(v10) = 1;
          goto LABEL_56;
        }
        LOBYTE(v19) = 1;
        LOBYTE(v10) = 1;
LABEL_55:
        LOBYTE(v7) = 1;
        goto LABEL_56;
      }
      goto LABEL_46;
    }
    if (v19 == 2)
    {
      v31 = v2 == v11 && v3 == v12;
      if (v31 || (OUTLINED_FUNCTION_1_49(), OUTLINED_FUNCTION_5_49(), (v32 & 1) != 0))
      {
        v26 = v7;
        if (v42 == v13 && v5 == v14)
        {
          LOBYTE(v7) = 1;
        }
        else
        {
          OUTLINED_FUNCTION_0_54();
          OUTLINED_FUNCTION_3_63();
        }
      }
      else
      {
        v26 = v7;
        LOBYTE(v7) = 0;
      }
      LOBYTE(v19) = 2;
      LOBYTE(v10) = 2;
      goto LABEL_56;
    }
LABEL_46:
    v26 = v7;
LABEL_47:
    LOBYTE(v7) = 0;
    goto LABEL_56;
  }
  if (v19)
    goto LABEL_46;
  if (v2 != v11 || v3 != v12)
  {
    v37 = v18;
    v39 = v15;
    v29 = OUTLINED_FUNCTION_4_54();
    v17 = v35;
    v18 = v37;
    v16 = v10;
    v15 = v39;
    if ((v29 & 1) == 0)
    {
      v26 = v7;
      LOBYTE(v19) = 0;
      LOBYTE(v10) = 0;
      goto LABEL_47;
    }
  }
  if (v4 == v13 && v5 == v14)
  {
    v26 = v7;
    LOBYTE(v19) = 0;
    LOBYTE(v10) = 0;
    goto LABEL_55;
  }
  v26 = v7;
  OUTLINED_FUNCTION_0_54();
  OUTLINED_FUNCTION_3_63();
  LOBYTE(v19) = 0;
  LOBYTE(v10) = 0;
LABEL_56:
  sub_22AA9B08C(v11, v12, v13, v14, v15, v16, v17, v18, v19);
  sub_22AA9B08C(v2, v3, v42, v5, v26, v43, v41, v40, v10);
  sub_22AA9B108((uint64_t)v44);
  return v7 & 1;
}

uint64_t sub_22AA9B08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  BOOL v9;
  uint64_t result;

  if (a9)
    v9 = a9 == 2;
  else
    v9 = 1;
  if (!v9)
  {
    if (a9 != 1)
      return result;
    sub_22ABDEAEC();
    sub_22ABDEAEC();
  }
  sub_22ABDEAEC();
  return sub_22ABDEAEC();
}

uint64_t sub_22AA9B108(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  sub_22AA9B1AC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  sub_22AA9B1AC(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_22AA9B1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  BOOL v9;
  uint64_t result;

  if (a9)
    v9 = a9 == 2;
  else
    v9 = 1;
  if (!v9)
  {
    if (a9 != 1)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t destroy for TabularPipelineDataError(uint64_t a1)
{
  return sub_22AA9B1AC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for TabularPipelineDataError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_22AA9B08C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for TabularPipelineDataError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_22AA9B08C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  sub_22AA9B1AC(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for TabularPipelineDataError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_BYTE *)(a2 + 64);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 64) = v3;
  sub_22AA9B1AC(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TabularPipelineDataError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 65))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 64);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TabularPipelineDataError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t sub_22AA9B4B8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t sub_22AA9B4C0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TabularPipelineDataError()
{
  return &type metadata for TabularPipelineDataError;
}

uint64_t OUTLINED_FUNCTION_0_54()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_4_54()
{
  return sub_22ABDFF68();
}

uint64_t sub_22AA9B52C(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_QWORD);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(_QWORD);
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  void (*v149)(uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v151 = a3;
  v141 = a2;
  v147 = OUTLINED_FUNCTION_11_49();
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x24BDAC7A8](v147);
  v6 = (char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22ABDE600();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v138 - v12;
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  inited = swift_initStackObject();
  v142 = xmmword_22ABF5ED0;
  *(_OWORD *)(inited + 16) = xmmword_22ABEDF90;
  *(_OWORD *)(inited + 32) = xmmword_22ABF5ED0;
  *(_QWORD *)(inited + 48) = a2;
  OUTLINED_FUNCTION_0_55(0x7475706E69, 0xE500000000000000, inited, v15, v16, v17, v18, v19, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  v21 = v20;
  v140 = v20;
  v23 = v22;
  swift_setDeallocating();
  sub_22ABAC418(v21, v23, (uint64_t)&unk_24F4B8A18, v24, v25, v26, v27, v28, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  sub_22AB7E6B8();
  v30 = v29;
  v32 = v31;
  OUTLINED_FUNCTION_63_1();
  sub_22ABAC418(v30, v32, (uint64_t)&unk_24F4B8A50, v33, v34, v35, v36, v37, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  v145 = v38;
  v40 = v39;
  OUTLINED_FUNCTION_2_1();
  sub_22ABDE558();
  sub_22ABDE57C();
  v148 = v13;
  sub_22ABB40AC();
  OUTLINED_FUNCTION_8_47();
  v41 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v149 = v41;
  v150 = v7;
  v41((uint64_t)v11, v7);
  v41((uint64_t)v13, v7);
  OUTLINED_FUNCTION_0_55(v3, v32, (uint64_t)&unk_24F4B8AD8, v42, v43, v44, v45, v46, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  v48 = v47;
  v50 = v49;
  OUTLINED_FUNCTION_2_1();
  sub_22ABACB64(v145, v40, v48, v50, 1, v51, v52, v53, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, SHIDWORD(v146),
    v147,
    (uint64_t)v148);
  OUTLINED_FUNCTION_8_47();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_0_55(v3, v32, (uint64_t)&unk_24F4B8B10, v54, v55, v56, v57, v58, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  v145 = v59;
  v144 = v60;
  OUTLINED_FUNCTION_2_1();
  sub_22ABAC418(v140, v23, (uint64_t)&unk_24F4B8B40, v61, v62, v63, v64, v65, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  v67 = v66;
  v69 = v68;
  OUTLINED_FUNCTION_25_16();
  v70 = swift_initStackObject();
  *(_OWORD *)(v70 + 16) = xmmword_22ABF3ED0;
  v71 = v141;
  *(_QWORD *)(v70 + 32) = 1;
  *(_QWORD *)(v70 + 40) = v71;
  *(_OWORD *)(v70 + 48) = v142;
  OUTLINED_FUNCTION_0_55(v67, v69, v70, v72, v73, v74, v75, v76, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  OUTLINED_FUNCTION_63_1();
  swift_setDeallocating();
  v77 = type metadata accessor for LSTMFCN(0);
  v78 = v152;
  v79 = sub_22AA9BBCC();
  v81 = v80;
  OUTLINED_FUNCTION_51_1();
  v82 = v77;
  v83 = v78 + *(int *)(v77 + 32);
  strcpy(v6, "sequenceLength");
  v6[15] = -18;
  LODWORD(v142) = *MEMORY[0x24BE63058];
  v141 = *(void (**)(_QWORD))(v146 + 104);
  v84 = v147;
  v141(v6);
  v85 = sub_22ABDD868();
  sub_22AA9BCC4(v3, v79, v81, (uint64_t)v6, v85);
  OUTLINED_FUNCTION_8_47();
  v139 = v86;
  v138 = v87;
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_7_61();
  OUTLINED_FUNCTION_0_55(v83, v79, (uint64_t)&unk_24F4B8B78, v88, v89, v90, v91, v92, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  OUTLINED_FUNCTION_2_1();
  v140 = v82;
  v93 = sub_22AA9BBCC();
  v95 = v94;
  OUTLINED_FUNCTION_54();
  v96 = v138;
  *(_QWORD *)v6 = v139;
  *((_QWORD *)v6 + 1) = v96;
  ((void (*)(char *, _QWORD, uint64_t))v141)(v6, v142, v84);
  v97 = sub_22AA9BCC4(v3, v93, v95, (uint64_t)v6, 5);
  v99 = v98;
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_7_61();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_0_55(v97, v99, (uint64_t)&unk_24F4B8BB8, v100, v101, v102, v103, v104, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  v106 = v105;
  OUTLINED_FUNCTION_51_1();
  v107 = sub_22AA9BBCC();
  v109 = v108;
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_6_65(v107, v109, (uint64_t)&unk_24F4B8BF8, v110, v111, v112, v113, v114, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  OUTLINED_FUNCTION_8_47();
  OUTLINED_FUNCTION_51_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DEA0);
  v115 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v115 + 16) = xmmword_22ABE9FB0;
  v116 = v144;
  *(_QWORD *)(v115 + 32) = v145;
  *(_QWORD *)(v115 + 40) = v116;
  *(_QWORD *)(v115 + 48) = v107;
  *(_QWORD *)(v115 + 56) = v106;
  v117 = (uint64_t)v148;
  sub_22ABDE564();
  OUTLINED_FUNCTION_9_49();
  v149(v117, v150);
  sub_22AB7EBAC();
  v119 = v118;
  v121 = v120;
  OUTLINED_FUNCTION_2_1();
  sub_22ABAF218(v119, v121, 1, v122, v123, v124, v125, v126, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  v128 = v127;
  v130 = v129;
  OUTLINED_FUNCTION_63_1();
  v131 = swift_initStackObject();
  *(_OWORD *)(v131 + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(v131 + 32) = *(_QWORD *)(v151 + 16);
  OUTLINED_FUNCTION_0_55(v128, v130, v131, v132, v133, v134, v135, v136, v138, v139, v140, (uint64_t)v141, v142, *((uint64_t *)&v142 + 1), v143, v144, v145, v146, v147,
    (uint64_t)v148);
  OUTLINED_FUNCTION_2_1();
  swift_setDeallocating();
  sub_22ABAF810();
  return OUTLINED_FUNCTION_51_1();
}

uint64_t sub_22AA9BBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_22AB7EF64();
  v1 = v0;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABEDF90;
  *(_QWORD *)(inited + 32) = 1;
  *(_QWORD *)(inited + 40) = MEMORY[0x22E2E1B10]();
  *(_QWORD *)(inited + 48) = -1;
  OUTLINED_FUNCTION_0_55(v1, v3, inited, v5, v6, v7, v8, v9, v23, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43, v45);
  OUTLINED_FUNCTION_51_1();
  swift_setDeallocating();
  type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  sub_22AB7F374();
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_2_1();
  sub_22ABAFEDC(v11, v13, v14, v15, v16, v17, v18, v19, v24, v26, v28, v30, v32, v34, v36, v38, v40, v42, v44, v46);
  v21 = v20;
  OUTLINED_FUNCTION_63_1();
  return v21;
}

uint64_t sub_22AA9BCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t inited;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  void (*v72)(void);
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v6 = v5;
  v97 = a4;
  v98 = a5;
  v9 = OUTLINED_FUNCTION_11_49();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_22ABDE600();
  v88 = *(void (**)(uint64_t, uint64_t))(v96 - 8);
  v13 = MEMORY[0x24BDAC7A8](v96);
  v92 = (uint64_t)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v85 - v15;
  OUTLINED_FUNCTION_6_65(a2, a3, (uint64_t)&unk_24F4B8978, v17, v18, v19, v20, v21, v85, v86, v87, (uint64_t)v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92, v93, a2,
    a3);
  sub_22AB7EBAC();
  v23 = v22;
  v25 = v24;
  OUTLINED_FUNCTION_25_16();
  sub_22ABAFEDC(v23, v25, v26, v27, v28, v29, v30, v31, v85, v86, v87, (uint64_t)v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92, v93, v94,
    v95);
  swift_bridgeObjectRelease();
  v32 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  sub_22AB7EBAC();
  v34 = v33;
  v36 = v35;
  OUTLINED_FUNCTION_25_16();
  sub_22ABB0370(v34, v36, v37, v38, v39, v40, v41, v42, v85, v86, v87, (uint64_t)v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92, v93, v94,
    v95);
  v44 = v43;
  v46 = v45;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  inited = swift_initStackObject();
  v91 = xmmword_22ABEDF90;
  *(_OWORD *)(inited + 16) = xmmword_22ABEDF90;
  *(_QWORD *)(inited + 32) = 1;
  v48 = *(int *)(v32 + 28);
  v93 = v6;
  v90 = v48;
  *(_QWORD *)(inited + 40) = *(_QWORD *)(v6 + v48);
  *(_QWORD *)(inited + 48) = 1;
  OUTLINED_FUNCTION_0_55(v44, v46, inited, v49, v50, v51, v52, v53, v85, v86, v87, (uint64_t)v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92, v93, v94,
    v95);
  v89 = v54;
  v56 = v55;
  OUTLINED_FUNCTION_25_16();
  swift_setDeallocating();
  v57 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v58 = v97;
  v97 = v9;
  v57(v12, v58, v9);
  v59 = v16;
  sub_22ABDE5D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B101C0);
  result = OUTLINED_FUNCTION_33_2();
  v61 = v98;
  *(_OWORD *)(result + 16) = xmmword_22ABE8E30;
  if (v61 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v61 > 0x7FFFFFFF)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (!__OFSUB__(1, (_DWORD)v61))
  {
    *(_DWORD *)(result + 32) = 1 - v61;
    v62 = v92;
    sub_22ABDE57C();
    v86 = v56;
    sub_22ABB40AC();
    v64 = v63;
    v98 = v65;
    v66 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v88 + 1);
    v87 = v63;
    v88 = v66;
    v67 = v96;
    v66(v62, v96);
    v66((uint64_t)v59, v67);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B15100);
    v68 = *(_QWORD *)(v10 + 72);
    v69 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = xmmword_22ABE9FB0;
    v71 = v70 + v69;
    sub_22ABDE540();
    v72 = *(void (**)(void))(v10 + 104);
    ((void (*)(unint64_t, _QWORD, uint64_t))v72)(v71, *MEMORY[0x24BE63060], v97);
    v73 = (uint64_t *)(v71 + v68);
    *v73 = v64;
    v73[1] = v98;
    v72();
    v99 = v70;
    sub_22ABDEAEC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B15108);
    sub_22AA9C190();
    sub_22ABDE5DC();
    OUTLINED_FUNCTION_9_49();
    v75 = v74;
    v77 = v76;
    v78 = v88;
    v88((uint64_t)v59, v67);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B15118);
    v79 = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(v79 + 16) = v91;
    *(_QWORD *)(v79 + 32) = 1;
    *(_BYTE *)(v79 + 40) = 0;
    *(_QWORD *)(v79 + 48) = *(_QWORD *)(v93 + v90);
    *(_BYTE *)(v79 + 56) = 0;
    *(_QWORD *)(v79 + 64) = 0;
    *(_BYTE *)(v79 + 72) = 1;
    sub_22ABB07FC(v89, v86, v79, v75, v77, v80, v81, v82, v85, v86, v87, (uint64_t)v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92, v93, v94,
      v95);
    OUTLINED_FUNCTION_25_16();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_63_1();
    sub_22ABDEAEC();
    sub_22ABDE558();
    sub_22ABDE558();
    sub_22ABB40AC();
    v84 = v83;
    v78(v62, v67);
    v78((uint64_t)v59, v67);
    return v84;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_22AA9C190()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B15110;
  if (!qword_255B15110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B15108);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255B15110);
  }
  return result;
}

void OUTLINED_FUNCTION_0_55(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_22ABABDD4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void OUTLINED_FUNCTION_6_65(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_22ABAD644(a1, a2, a3, 0, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t OUTLINED_FUNCTION_7_61()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

void OUTLINED_FUNCTION_9_49()
{
  sub_22ABAE078();
}

uint64_t OUTLINED_FUNCTION_11_49()
{
  return sub_22ABDE5C4();
}

void FullyConnectedNetworkMultiLabelClassifier.makeTransformer()(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1[3];
  v2 = a1[8];
  v3 = a1[11];
  sub_22ABDEAEC();
  v4 = sub_22ABDEAEC();
  sub_22AB593D0(v4, v1, v2, v3);
  swift_getTupleTypeMetadata2();
  sub_22ABDF068();
  sub_22ABDEAC8();
  sub_22AB2821C();
}

uint64_t FullyConnectedNetworkMultiLabelClassifier.update<A>(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  const void *v7;
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8[36] = a6;
  v8[37] = a7;
  v8[34] = a4;
  v8[35] = a5;
  v8[32] = a2;
  v8[33] = a3;
  v8[31] = a1;
  v11 = sub_22ABDDA0C();
  v8[38] = v11;
  v8[39] = *(_QWORD *)(v11 - 8);
  v8[40] = OUTLINED_FUNCTION_0_0();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F248);
  v8[41] = v12;
  v8[42] = *(_QWORD *)(v12 - 8);
  v8[43] = OUTLINED_FUNCTION_0_0();
  v8[44] = a5[2];
  v8[45] = a5[4];
  v13 = sub_22ABDE8A0();
  v8[46] = v13;
  v8[47] = *(_QWORD *)(v13 - 8);
  v8[48] = OUTLINED_FUNCTION_0_0();
  v8[49] = a5[3];
  v8[50] = a5[11];
  v14 = sub_22ABDF2D8();
  v8[51] = type metadata accessor for AnnotatedFeature(255, v13, v14, v15);
  sub_22ABDF5D8();
  v8[52] = OUTLINED_FUNCTION_0_0();
  v8[53] = *(_QWORD *)(a6 - 8);
  v8[54] = OUTLINED_FUNCTION_0_0();
  memcpy(v8 + 2, v7, 0x48uLL);
  return swift_task_switch();
}

uint64_t sub_22AA9C470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 16))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 288));
  *(_QWORD *)(v0 + 232) = sub_22ABDF11C();
  v1 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v1);
  if ((sub_22ABDF434() & 1) == 0)
  {
    *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 352);
    v4 = *(_QWORD *)(v0 + 400);
    v5 = *(_QWORD *)(v0 + 360);
    v6 = *(_QWORD **)(v0 + 280);
    v7 = v6[5];
    v8 = v6[8];
    v9 = v6[9];
    v10 = v6[10];
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 392);
    *(_QWORD *)(v0 + 104) = v5;
    *(_QWORD *)(v0 + 112) = v7;
    *(_QWORD *)(v0 + 120) = v8;
    *(_QWORD *)(v0 + 128) = v9;
    *(_QWORD *)(v0 + 136) = v10;
    *(_QWORD *)(v0 + 144) = v4;
    type metadata accessor for FullyConnectedNetworkMultiLabelClassifierModel();
  }
  OUTLINED_FUNCTION_54();
  sub_22A9B7B50();
  v2 = swift_allocError();
  *(_QWORD *)v3 = 0xD000000000000031;
  *(_QWORD *)(v3 + 8) = 0x800000022ABE48D0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 32) = 2;
  swift_willThrow(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22AA9CA0C()
{
  type metadata accessor for FullyConnectedNetworkMultiLabelClassifierModel();
}

void sub_22AA9CA7C()
{
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  type metadata accessor for FullyConnectedNetworkMultiLabelClassifier();
}

void sub_22AA9CAC4()
{
  sub_22AA8AA7C();
}

uint64_t sub_22AA9CB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A99DE80;
  return FullyConnectedNetworkMultiLabelClassifier.update<A>(_:with:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

void sub_22AA9CBC0()
{
  sub_22AA9CA0C();
}

uint64_t sub_22AA9CC0C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkMultiLabelClassifier<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void BaseLinearRegressorModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15130);
  v13 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_6_4();
  v9 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA9CEF0();
  sub_22ABE02B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(v9 + 16);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8658);
  sub_22AA9D714((uint64_t *)&qword_2540E8648, &qword_2540E8658);
  sub_22ABDE864();
  sub_22AA9D6C4(&qword_2540E8540);
  sub_22ABDFD4C();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v4);
  if (!v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_255B12178);
    sub_22AA9D750(&qword_255B15140);
    sub_22ABDFCF8();
  }
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v8);
  OUTLINED_FUNCTION_16();
}

unint64_t sub_22AA9CEF0()
{
  unint64_t result;

  result = qword_255B15138;
  if (!qword_255B15138)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6054, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_255B15138);
  }
  return result;
}

void BaseLinearRegressorModel.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15148);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AA9CEF0();
  sub_22ABE0298();
  if (v2)
  {
    OUTLINED_FUNCTION_9_8();
    v7 = OUTLINED_FUNCTION_1_51();
  }
  else
  {
    LOBYTE(v11) = 0;
    sub_22AA9D6C4(&qword_2540E8548);
    sub_22ABDFC8C();
    sub_22AA9D714(&qword_2540E8538, &qword_2540E8550);
    v5 = sub_22ABDE930();
    __swift_instantiateConcreteTypeFromMangledName(qword_255B12178);
    sub_22AA9D750(&qword_255B15150);
    sub_22ABDEAEC();
    sub_22ABDFC38();
    OUTLINED_FUNCTION_7_62();
    OUTLINED_FUNCTION_2_59();
    v8 = v14;
    sub_22AA5F3DC(v11);
    v6 = OUTLINED_FUNCTION_1_51();
    sub_22AA6D37C(v6);
    swift_retain();
    sub_22AA5F3DC(v11);
    LOBYTE(v8) = v20;
    sub_22AA6D37C(v11);
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v5;
    *(_QWORD *)(a2 + 8) = v11;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v13;
    *(_QWORD *)(a2 + 32) = v8;
    *(_QWORD *)(a2 + 40) = v15;
    *(_QWORD *)(a2 + 48) = v16;
    *(_QWORD *)(a2 + 56) = v17;
    *(_QWORD *)(a2 + 64) = v18;
    *(_QWORD *)(a2 + 72) = v19;
    *(_BYTE *)(a2 + 80) = v20;
    OUTLINED_FUNCTION_9_8();
    swift_release();
    v7 = v11;
  }
  sub_22AA6D37C(v7);
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AA9D2B0()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_22AA9D304(char a1)
{
  if ((a1 & 1) != 0)
    return 0x657A696D6974706FLL;
  else
    return 0x6963696666656F63;
}

void sub_22AA9D350(char *a1, char *a2)
{
  sub_22AA1783C(*a1, *a2);
}

void sub_22AA9D35C()
{
  sub_22ABC4A80();
}

uint64_t sub_22AA9D364()
{
  return sub_22ABC4C58();
}

void sub_22AA9D36C()
{
  sub_22ABC5428();
}

uint64_t sub_22AA9D374@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA9D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_22AA9D3A0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22AA9D304(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22AA9D3C8()
{
  char *v0;

  return sub_22AA9D304(*v0);
}

uint64_t sub_22AA9D3D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA9D300();
  *a1 = result;
  return result;
}

uint64_t sub_22AA9D3F4()
{
  sub_22AA9CEF0();
  return sub_22ABE02EC();
}

uint64_t sub_22AA9D41C()
{
  sub_22AA9CEF0();
  return sub_22ABE02F8();
}

void sub_22AA9D444(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  BaseLinearRegressorModel.init(from:)(a1, a2);
}

void sub_22AA9D458(_QWORD *a1)
{
  BaseLinearRegressorModel.encode(to:)(a1);
}

uint64_t BaseLinearRegressorModel.export(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _QWORD v9[10];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;

  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_BYTE *)(v1 + 80);
  v9[9] = *(_QWORD *)v1;
  v5 = *(_OWORD *)(v1 + 24);
  v10 = *(_OWORD *)(v1 + 8);
  v11 = v5;
  v6 = *(_OWORD *)(v1 + 56);
  v12 = *(_OWORD *)(v1 + 40);
  v13 = v6;
  v14 = v3;
  v15 = v4;
  v7 = OUTLINED_FUNCTION_3_64();
  OUTLINED_FUNCTION_3_64();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  v9[2] = 0;
  v9[3] = 0xE000000000000000;
  v9[4] = 0;
  v9[5] = 0xE000000000000000;
  v9[6] = 0;
  v9[7] = 0xE000000000000000;
  v9[8] = v7;
  BaseLinearRegressorModel.export(to:metadata:)(a1, (uint64_t)v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

void BaseLinearRegressorModel.export(to:metadata:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __int128 v11;
  void (*v12)(uint64_t *, _QWORD);
  uint64_t *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v21 = a1;
  v6 = type metadata accessor for CoreMLPackage();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_6_4();
  v7 = *(_QWORD *)(a2 + 64);
  v8 = v2[9];
  v9 = *((_BYTE *)v2 + 80);
  v14 = *v2;
  v10 = *(_OWORD *)(v2 + 3);
  v15 = *(_OWORD *)(v2 + 1);
  v16 = v10;
  v11 = *(_OWORD *)(v2 + 7);
  v17 = *(_OWORD *)(v2 + 5);
  v18 = v11;
  v19 = v8;
  v20 = v9;
  sub_22AA478F8(v4);
  if (!v3)
  {
    sub_22ABDEAEC();
    sub_22ABDE354();
    sub_22ABDEAEC();
    sub_22ABDE3C0();
    sub_22ABDEAEC();
    sub_22ABDE390();
    sub_22ABDEAEC();
    sub_22ABDE3A8();
    sub_22ABDEAEC();
    v12 = (void (*)(uint64_t *, _QWORD))sub_22ABDE360();
    sub_22A9D11D8(v7, (uint64_t)sub_22A9D147C, 0, v13);
    v12(&v14, 0);
    sub_22AB31614(v21);
    sub_22AA3A8DC(v4);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AA9D6C4(_QWORD *a1)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E8550);
    OUTLINED_FUNCTION_8_48();
  }
  OUTLINED_FUNCTION_1_18();
}

uint64_t sub_22AA9D714(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_8_48();
  }
  return result;
}

void sub_22AA9D750(_QWORD *a1)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_255B12178);
    OUTLINED_FUNCTION_8_48();
  }
  OUTLINED_FUNCTION_1_18();
}

uint64_t _s10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AA9D7F4 + 4 * byte_22ABF5F01[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AA9D828 + 4 * byte_22ABF5EFC[v4]))();
}

uint64_t sub_22AA9D828(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA9D830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AA9D838);
  return result;
}

uint64_t sub_22AA9D844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AA9D84CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AA9D850(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AA9D858(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_0()
{
  return &_s10CodingKeysON_0;
}

unint64_t sub_22AA9D878()
{
  unint64_t result;

  result = qword_255B15158;
  if (!qword_255B15158)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF602C, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_255B15158);
  }
  return result;
}

unint64_t sub_22AA9D8B8()
{
  unint64_t result;

  result = qword_255B15160;
  if (!qword_255B15160)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5F64, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_255B15160);
  }
  return result;
}

unint64_t sub_22AA9D8F8()
{
  unint64_t result;

  result = qword_255B15168[0];
  if (!qword_255B15168[0])
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF5F8C, &_s10CodingKeysON_0);
    atomic_store(result, qword_255B15168);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_59()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_3_64()
{
  return sub_22ABDEAC8();
}

uint64_t OUTLINED_FUNCTION_7_62()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 176), v1);
}

void OUTLINED_FUNCTION_8_48()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA9D970(double a1, double a2, double a3)
{
  uint64_t v4;
  uint64_t v5;

  if (a2 >= a1 || a1 > a3)
  {
    OUTLINED_FUNCTION_5_50();
    OUTLINED_FUNCTION_38_27();
    OUTLINED_FUNCTION_21_43();
    OUTLINED_FUNCTION_16_42();
    OUTLINED_FUNCTION_7_63();
    OUTLINED_FUNCTION_34_27();
    OUTLINED_FUNCTION_7_63();
    OUTLINED_FUNCTION_34_27();
    sub_22A9B7B50();
    v4 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_6_66(v4, v5);
  }
  OUTLINED_FUNCTION_20_38();
}

void sub_22AA9DA1C(double a1, double a2, double a3)
{
  uint64_t v4;
  uint64_t v5;

  if (a2 > a1 || a1 > a3)
  {
    OUTLINED_FUNCTION_5_50();
    OUTLINED_FUNCTION_38_27();
    OUTLINED_FUNCTION_21_43();
    OUTLINED_FUNCTION_16_42();
    OUTLINED_FUNCTION_7_63();
    OUTLINED_FUNCTION_34_27();
    OUTLINED_FUNCTION_7_63();
    OUTLINED_FUNCTION_34_27();
    sub_22A9B7B50();
    v4 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_6_66(v4, v5);
  }
  OUTLINED_FUNCTION_20_38();
}

void PipelineDataError.errorDescription.getter()
{
  PipelineDataError.debugDescription.getter();
}

void PipelineDataError.debugDescription.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_22AA9DB3C()
{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2();
  sub_22ABDF7A0();
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_33_27();
  v2 = v0;
  sub_22ABDEDC8();
  sub_22ABDEDC8();
  return v2;
}

void static PipelineDataError.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_22AA9DD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;

  if (v5)
  {
    v8 = OUTLINED_FUNCTION_29_25();
    sub_22AA9E054(v8, v9, v10, v11, v12);
    v13 = OUTLINED_FUNCTION_36_25();
    sub_22AA9E054(v13, v14, v15, v16, v4);
    v17 = OUTLINED_FUNCTION_36_25();
    sub_22AA9E0B0(v17, v18, v19, v20, v4);
    v21 = OUTLINED_FUNCTION_29_25();
    sub_22AA9E0B0(v21, v22, v23, v24, v25);
    v7 = 0;
  }
  else
  {
    if (v3 == v0 && v2 == v1)
      v7 = 1;
    else
      v7 = OUTLINED_FUNCTION_0_56();
    v26 = OUTLINED_FUNCTION_27_32();
    sub_22AA9E054(v26, v27, v28, v29, v30);
    v31 = OUTLINED_FUNCTION_23_38();
    sub_22AA9E054(v31, v32, v33, v34, v35);
    v36 = OUTLINED_FUNCTION_23_38();
    sub_22AA9E0B0(v36, v37, v38, v39, v40);
    v41 = OUTLINED_FUNCTION_27_32();
    sub_22AA9E0B0(v41, v42, v43, v44, v45);
  }
  return v7 & 1;
}

uint64_t sub_22AA9E054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 < 3u)
    return sub_22ABDEAEC();
  if (a5 - 3 < 3 || a5 == 6)
  {
    sub_22ABDEAEC();
    return sub_22ABDEAEC();
  }
  return result;
}

uint64_t sub_22AA9E0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 < 3u)
    return swift_bridgeObjectRelease();
  if (a5 - 3 < 3 || a5 == 6)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for PipelineDataError(uint64_t a1)
{
  return sub_22AA9E0B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for PipelineDataError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_22AA9E054(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PipelineDataError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_22AA9E054(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_22AA9E0B0(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PipelineDataError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_22AA9E0B0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PipelineDataError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PipelineDataError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_22AA9E2E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_22AA9E2EC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PipelineDataError()
{
  return &type metadata for PipelineDataError;
}

uint64_t OUTLINED_FUNCTION_0_56()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_2_60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E0B0(v3, v2, v1, v0, 6u);
}

uint64_t OUTLINED_FUNCTION_3_65()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E054(v3, v2, v1, v0, 6u);
}

uint64_t OUTLINED_FUNCTION_4_55()
{
  return sub_22ABDFF68();
}

uint64_t OUTLINED_FUNCTION_5_50()
{
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_6_66(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_BYTE *)(a2 + 32) = 5;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_7_63()
{
  return sub_22ABDF230();
}

uint64_t OUTLINED_FUNCTION_9_50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E0B0(v3, v2, v1, v0, 5u);
}

uint64_t OUTLINED_FUNCTION_10_41()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E054(v3, v2, v1, v0, 5u);
}

uint64_t OUTLINED_FUNCTION_11_50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E0B0(v3, v2, v1, v0, 3u);
}

uint64_t OUTLINED_FUNCTION_12_44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E054(v3, v2, v1, v0, 3u);
}

uint64_t OUTLINED_FUNCTION_13_55()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E0B0(v3, v2, v1, v0, 4u);
}

uint64_t OUTLINED_FUNCTION_14_46()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E054(v3, v2, v1, v0, 4u);
}

uint64_t OUTLINED_FUNCTION_15_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22AA9E054(a1, a2, a3, a4, 6u);
}

uint64_t OUTLINED_FUNCTION_16_42()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_17_39()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E054(v1, v3, v2, v0, 5u);
}

uint64_t OUTLINED_FUNCTION_18_44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E054(v1, v3, v2, v0, 3u);
}

uint64_t OUTLINED_FUNCTION_19_37()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_22AA9E054(v1, v3, v2, v0, 4u);
}

uint64_t OUTLINED_FUNCTION_21_43()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_22_36()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_38()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24_36()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_25_29()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_26_29()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_32()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_28_24()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_29_25()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_30_27()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_31_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_32_22()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_27()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_35_19()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_36_25()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_38_27()
{
  return sub_22ABDF7A0();
}

void sub_22AA9E63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v2, v1);
  type metadata accessor for ComposedTemporalEstimator();
}

uint64_t sub_22AA9E684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_79(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

void sub_22AA9E6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;

  OUTLINED_FUNCTION_4_4();
  a19 = v23;
  a20 = v24;
  OUTLINED_FUNCTION_70();
  type metadata accessor for TemporalTransformerToEstimatorAdaptor(0, v25, v26, v25);
  OUTLINED_FUNCTION_10_1();
  v28 = MEMORY[0x24BDAC7A8](v27);
  TemporalTransformerToEstimatorAdaptor.init(_:)(v22, v21, v20, v28);
  OUTLINED_FUNCTION_84();
}

void sub_22AA9E724()
{
  sub_22AA9E63C();
}

void sub_22AA9E744()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AA9E750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v9[11] = a8;
  v9[12] = v8;
  v9[9] = a6;
  v9[10] = a7;
  v9[7] = a4;
  v9[8] = a5;
  v9[5] = a2;
  v9[6] = a3;
  v9[4] = a1;
  v9[13] = *(_QWORD *)(a5 + 40);
  v9[14] = *(_QWORD *)(a5 + 24);
  v11 = OUTLINED_FUNCTION_77();
  v9[15] = v11;
  v9[16] = *(_QWORD *)(v11 - 8);
  v9[17] = swift_task_alloc();
  v9[18] = swift_task_alloc();
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_44_21();
  v9[19] = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[20] = AssociatedTypeWitness;
  v9[21] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[22] = OUTLINED_FUNCTION_23_0();
  v9[23] = swift_task_alloc();
  v13 = OUTLINED_FUNCTION_9_1();
  v9[24] = v13;
  v9[25] = *(_QWORD *)(v13 - 8);
  v9[26] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v9[27] = OUTLINED_FUNCTION_0_0();
  v9[28] = *(_QWORD *)(a6 - 8);
  v9[29] = OUTLINED_FUNCTION_0_0();
  v14 = OUTLINED_FUNCTION_9_1();
  v9[30] = v14;
  v9[31] = *(_QWORD *)(v14 - 8);
  v9[32] = OUTLINED_FUNCTION_0_0();
  v15 = swift_checkMetadataState();
  v9[33] = v15;
  v9[34] = *(_QWORD *)(v15 - 8);
  v9[35] = OUTLINED_FUNCTION_23_0();
  v9[36] = swift_task_alloc();
  v16 = (_QWORD *)OUTLINED_FUNCTION_25();
  v9[37] = v16;
  *v16 = v9;
  v16[1] = sub_22AA9E980;
  __asm { BR              X8 }
}

uint64_t sub_22AA9E980()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22AA9E9E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 304);
  sub_22ABDF1DC();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264));
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_16_3(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 224);
    v3 = *(_QWORD *)(v0 + 232);
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 16) = sub_22ABDE9F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
    sub_22ABDEE58();
    v7 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 192);
    swift_getAssociatedConformanceWitness();
    sub_22ABDF650();
    if (__swift_getEnumTagSinglePayload(v7, 1, v8) == 1)
    {
      OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 248));
      sub_22ABDF1DC();
      v11 = OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_44_0(v11);
      OUTLINED_FUNCTION_84();
    }
    OUTLINED_FUNCTION_48_0();
    v9 = (_QWORD *)OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_20_0(v9);
    return OUTLINED_FUNCTION_15_0(v10);
  }
}

uint64_t sub_22AA9EB60()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_22_0((uint64_t)sub_22AA9ED94);
  return OUTLINED_FUNCTION_14_0(v0);
}

uint64_t sub_22AA9EB90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AA9EBF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t (*v12)(void);
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 160);
  OUTLINED_FUNCTION_66_12(*(_QWORD *)(v0 + 176), v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_22ABDF0F8();
  sub_22ABDF0C8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 320);
  v8 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 192);
  swift_getAssociatedConformanceWitness();
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1)
  {
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 248));
    sub_22ABDF1DC();
    if (!v7)
    {
      v13 = OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_44_0(v13);
      OUTLINED_FUNCTION_84();
    }
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_16_3(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_48_0();
    v11 = (_QWORD *)OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_20_0(v11);
    return OUTLINED_FUNCTION_15_0(v12);
  }
}

uint64_t sub_22AA9ED64()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_22_0((uint64_t)sub_22AA9ED94);
  return OUTLINED_FUNCTION_14_0(v0);
}

uint64_t sub_22AA9ED94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_3_0();
}

void sub_22AA9EE00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[35];
  v2 = v0[33];
  v3 = v0[18];
  v5 = v0[16];
  v4 = v0[17];
  v6 = v0[4];
  OUTLINED_FUNCTION_79(v1, v0[36], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[34] + 32));
  OUTLINED_FUNCTION_66_12(v4, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  swift_getAssociatedConformanceWitness();
  ComposedTemporalTransformer.init(_:_:)(v1, v2, v6);
}

uint64_t sub_22AA9EEC4()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_39_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AA9EF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 32) + 32))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTemporalTransformer();
  }
  return result;
}

uint64_t sub_22AA9F07C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v21;
  uint64_t result;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a3;
  v5 = a2[5];
  v34 = a2[3];
  v35 = v5;
  v6 = OUTLINED_FUNCTION_119_1();
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v26 - v9;
  v10 = a2[4];
  v11 = a2[2];
  v12 = OUTLINED_FUNCTION_119_1();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - v18;
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 40);
  v33 = a1;
  v21 = v36;
  result = v20(a1, v11, v10, v17);
  if (!v21)
  {
    v26 = v11;
    v27 = v15;
    v36 = v12;
    v23 = v32;
    (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v33, v34);
    v24 = (uint64_t)v27;
    v25 = v36;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v27, v19, v36);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v28, v23, v30);
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    ComposedTemporalTransformer.init(_:_:)(v24, v25, v31);
  }
  return result;
}

void sub_22AA9F2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_22A99DE80;
  sub_22AA9E750(a1, a2, a3, a4, a8, a5, a6, a7);
}

uint64_t sub_22AA9F360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AA9EF30(a1, a2, a3);
}

uint64_t sub_22AA9F374@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AA9F07C(a1, a2, a3);
}

void sub_22AA9F3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_4_4();
  v3 = v2;
  v21 = v4;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v13 = OUTLINED_FUNCTION_57_0();
  type metadata accessor for EstimatorToTemporalAdaptor(v13, v14, v15, v15);
  OUTLINED_FUNCTION_10_1();
  v17 = MEMORY[0x24BDAC7A8](v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v11 + 16))(v1, v0, v3, v17);
  v18 = OUTLINED_FUNCTION_44_21();
  EstimatorToTemporalAdaptor.init(_:)(v18, v19, v20);
  OUTLINED_FUNCTION_79(v9, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA9F478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v5 - 88))(v2, v4, v1, v3, a1, *(_QWORD *)(v5 - 96));
  OUTLINED_FUNCTION_3();
}

void sub_22AA9F524()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  void (*v23)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_4_4();
  v23 = v2;
  v3 = v0;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_57_0();
  v14(v11, v12, v13);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18 - v17, v3, v9);
  v20 = OUTLINED_FUNCTION_44_21();
  OUTLINED_FUNCTION_66_12(v20, v21, v22);
  v23(v1, v7, v5);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA9F60C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(v5 - 96))(v4, v3, v2, v1, *(_QWORD *)(v5 - 88), a1);
  OUTLINED_FUNCTION_3();
}

void sub_22AA9F650()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);

  OUTLINED_FUNCTION_4_4();
  v18 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v11 = v10 - v9;
  v13 = MEMORY[0x24BDAC7A8](v12);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))((char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v0, v5, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v7, v3);
  v16 = OUTLINED_FUNCTION_44_21();
  v18(v16);
  OUTLINED_FUNCTION_3();
}

void sub_22AA9F728(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = a1[3];
  v6 = type metadata accessor for EstimatorToTemporalAdaptor(255, *a1, a1[2], a4);
  type metadata accessor for TemporalTransformerToEstimatorAdaptor(255, v4, v5, v7);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for EstimatorToTemporalAdaptor<A>, v6);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA9F784()
{
  OUTLINED_FUNCTION_19_38();
}

void type metadata accessor for ComposedTemporalEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AA9F7B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for EstimatorToTemporalAdaptor(255, *a1, a1[2], a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA9F7E8()
{
  OUTLINED_FUNCTION_19_38();
}

void sub_22AA9F80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for TransformerToTemporalAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA9F840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for TemporalTransformerToEstimatorAdaptor(255, v4, a1, a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AA9F860()
{
  OUTLINED_FUNCTION_19_38();
}

void sub_22AA9F884(uint64_t a1)
{
  get_witness_table_18CreateMLComponents17TemporalEstimatorRzAA0D0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcD0VyxAA0d2ToC7AdaptorVyqd__GGAaBHPyHCTm(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))type metadata accessor for EstimatorToTemporalAdaptor, (uint64_t)&protocol conformance descriptor for EstimatorToTemporalAdaptor<A>);
}

void sub_22AA9F898(uint64_t a1)
{
  get_witness_table_18CreateMLComponents17TemporalEstimatorRzAA0D0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcD0VyxAA0d2ToC7AdaptorVyqd__GGAaBHPyHCTm(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))type metadata accessor for TemporalTransformerToEstimatorAdaptor, (uint64_t)&protocol conformance descriptor for TemporalTransformerToEstimatorAdaptor<A>);
}

void get_witness_table_18CreateMLComponents17TemporalEstimatorRzAA0D0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcD0VyxAA0d2ToC7AdaptorVyqd__GGAaBHPyHCTm(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD), uint64_t a3)
{
  uint64_t v4;

  v4 = a2(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24));
  MEMORY[0x22E2E4D80](a3, v4);
  OUTLINED_FUNCTION_19_38();
}

void sub_22AA9F90C()
{
  OUTLINED_FUNCTION_19_38();
}

uint64_t sub_22AA9F940(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AA9FA1C + 4 * byte_22ABF61D0[v21 - 1]))();
}

void sub_22AA9FA90(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void OUTLINED_FUNCTION_19_38()
{
  type metadata accessor for ComposedTemporalEstimator();
}

uint64_t OUTLINED_FUNCTION_44_21()
{
  uint64_t v0;

  return v0;
}

uint64_t static AugmentationBuilder.buildPartialBlock<A>(first:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

{
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v8 + 16))(v7, v5);
  return sub_22A99DEC8((uint64_t)v7, a2, a3);
}

void static AugmentationBuilder.buildPartialBlock<A, B>(accumulated:next:)(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  sub_22AAC4A14(a1, a2, a3, a4);
}

void static AugmentationBuilder.buildPartialBlock<A, B>(accumulated:next:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[2];

  v20[0] = a1;
  v20[1] = a5;
  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RandomTransformerAdaptor(0, v14, v15, v13);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v20 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v12, a2, a4, v17);
  sub_22A99DEC8((uint64_t)v12, a4, (uint64_t)v19);
  MEMORY[0x22E2E4D80](&unk_22ABE8E10, v16);
  sub_22AAC4A14((uint64_t)v19, a3, v16, a6);
}

uint64_t sub_22AA9FE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t type metadata accessor for AugmentationBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AugmentationBuilder);
}

uint64_t sub_22AA9FEA0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

void sub_22AA9FEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for RandomTransformerAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), a4);
  JUMPOUT(0x22E2E4D80);
}

void sub_22AA9FED0()
{
  OUTLINED_FUNCTION_0_57();
}

uint64_t sub_22AA9FEEC(uint64_t a1)
{
  return MEMORY[0x22E2E4D80](&unk_22ABF824C, a1);
}

void sub_22AA9FF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for RandomTransformerAdaptor(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 32), a4);
  MEMORY[0x22E2E4D80](&unk_22ABE8E10, v4);
  OUTLINED_FUNCTION_0_57();
}

uint64_t sub_22AA9FF4C(uint64_t a1)
{
  return MEMORY[0x22E2E4D80](&unk_22ABF824C, a1);
}

void OUTLINED_FUNCTION_0_57()
{
  type metadata accessor for ComposedRandomTransformer();
}

uint64_t getEnumTagSinglePayload for BlobMetadata(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BlobMetadata(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BlobMetadata()
{
  return &type metadata for BlobMetadata;
}

ValueMetadata *type metadata accessor for Header()
{
  return &type metadata for Header;
}

uint64_t Downsampler.factor.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Downsampler.init(factor:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  if (result < 1)
  {
    result = sub_22ABDFADC();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

double Downsampler.applied<A>(to:eventHandler:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  double result;
  __int128 v17;
  _OWORD v18[2];
  __int128 v19;
  __int128 v20;

  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v5;
  (*(void (**)(char *, double))(v14 + 16))(v12, v10);
  AnyTemporalSequence.init<A>(_:)((uint64_t)v12, *(_QWORD *)(a2 + 16), a3, a4, (uint64_t)v18);
  *(_QWORD *)a5 = v13;
  v15 = v18[1];
  *(_OWORD *)(a5 + 8) = v18[0];
  *(_OWORD *)(a5 + 24) = v15;
  result = *(double *)&v19;
  v17 = v20;
  *(_OWORD *)(a5 + 40) = v19;
  *(_OWORD *)(a5 + 56) = v17;
  return result;
}

uint64_t sub_22AAA0140(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x726F74636166 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_22AAA01BC()
{
  return 0x726F74636166;
}

uint64_t sub_22AAA01D0()
{
  return sub_22A9D94E4();
}

uint64_t sub_22AAA01D8()
{
  return sub_22A9EC09C();
}

uint64_t sub_22AAA01E0()
{
  return sub_22A9D96F4();
}

uint64_t sub_22AAA01E8()
{
  sub_22ABE0244();
  sub_22A9D96F4();
  return sub_22ABE0280();
}

uint64_t sub_22AAA0228()
{
  return sub_22AAA01BC();
}

uint64_t sub_22AAA0230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AAA0140(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22AAA025C()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22AAA0278@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22A9D94E4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22AAA02A4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF6538, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AAA02D8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF6538, a1);
  return sub_22ABE02F8();
}

void Downsampler.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = type metadata accessor for Downsampler.CodingKeys(255, *(_QWORD *)(a2 + 16), a3, a4);
  MEMORY[0x22E2E4D80](&unk_22ABF6538, v5);
  v6 = sub_22ABDFD58();
  v10 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v9 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  sub_22ABDFD34();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v6);
  OUTLINED_FUNCTION_16();
}

uint64_t type metadata accessor for Downsampler.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Downsampler.CodingKeys);
}

void Downsampler.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = type metadata accessor for Downsampler.CodingKeys(255, a2, a3, a4);
  MEMORY[0x22E2E4D80](&unk_22ABF6538, v7);
  v8 = sub_22ABDFCB0();
  MEMORY[0x24BDAC7A8](v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE0298();
  if (!v5)
  {
    v9 = sub_22ABDFC74();
    OUTLINED_FUNCTION_20_32();
    *a5 = v9;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAA0520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  Downsampler.applied<A>(to:eventHandler:)(a2, a7, a5, a6, a1);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v7 + 8));
}

void sub_22AAA0568(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  Downsampler.init(from:)(a1, *(_QWORD *)(a2 + 16), a3, a4, a5);
}

void sub_22AAA0580(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Downsampler.encode(to:)(a1, a2, a3, a4);
}

uint64_t Downsampler.DownStreamSequence.count.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = *(_QWORD *)(v0 + 40);
  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
  {
    v2 = *(_QWORD *)v0;
    if (*(_QWORD *)v0)
    {
      if (result != 0x8000000000000000 || v2 != -1)
      {
        result /= v2;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void Downsampler.DownStreamSequence.makeAsyncIterator()(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[64];

  v6 = *v4;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = type metadata accessor for AnyTemporalSequence(0, v7, a2, a3);
  (*(void (**)(_BYTE *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v10, v4 + 1, v8);
  sub_22AAA0634(v6, (uint64_t)v10, v7, v9, a4);
}

void sub_22AAA0634(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  *(_OWORD *)(a5 + 120) = 0u;
  *(_OWORD *)(a5 + 104) = 0u;
  *(_OWORD *)(a5 + 88) = 0u;
  *(_QWORD *)a5 = a1;
  v7 = a5 + 8;
  v8 = type metadata accessor for AnyTemporalSequence(0, a3, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, a2, v8);
  AnyTemporalSequence.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  *(_OWORD *)(a5 + 72) = v10;
  OUTLINED_FUNCTION_101_0();
}

uint64_t sub_22AAA06C0()
{
  return Downsampler.DownStreamSequence.count.getter();
}

uint64_t sub_22AAA06D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;

  Downsampler.DownStreamSequence.makeAsyncIterator()(a1, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v4, a1);
}

double sub_22AAA0708()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 88) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  return result;
}

void sub_22AAA0730(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v2 = v1[11];
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  v5 = *v1;
  if (!*v1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 != 0x8000000000000000 || v5 != -1)
  {
    v1[11] = v4 % v5;
    v8 = *a1;
    v7 = a1[1];
    v10 = *((_OWORD *)a1 + 1);
    v9 = a1[4];
    sub_22ABDEAEC();
    swift_bridgeObjectRelease();
    v1[12] = v8;
    v1[13] = v7;
    *((_OWORD *)v1 + 7) = v10;
    v1[16] = v9;
    OUTLINED_FUNCTION_101_0();
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t Downsampler.DownStreamSequence.Iterator.next()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[5] = a2;
  v5[6] = v4;
  v5[4] = a1;
  v6 = type metadata accessor for TemporalFeature(255, *(_QWORD *)(a2 + 16), a3, a4);
  v5[7] = v6;
  v7 = sub_22ABDF5D8();
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = OUTLINED_FUNCTION_0_0();
  v5[11] = *(_QWORD *)(v6 - 8);
  v5[12] = OUTLINED_FUNCTION_0_0();
  return swift_task_switch();
}

uint64_t sub_22AAA0840()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_4_56();
  v1 = off_255B1245C;
  swift_retain();
  v2 = swift_task_alloc();
  OUTLINED_FUNCTION_2_61(v2, v3, v4, v5);
  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = sub_22AAA08A4;
  return AnyTemporalIterator.next()(*(_QWORD *)(v0 + 80));
}

uint64_t sub_22AAA08A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22AAA0918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) != 1)
  {
    v4 = *(_QWORD *)(v0 + 48);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 32);
    v5(*(_QWORD *)(v0 + 96), v1, v2);
    v6 = *(_QWORD *)(v4 + 104);
    if (v6)
    {
      v7 = *(_QWORD **)(v0 + 96);
      v8 = *v7 == *(_QWORD *)(v4 + 96) && v6 == v7[1];
      if (!v8 && (sub_22ABDFF68() & 1) == 0)
        sub_22AAA0708();
    }
    v9 = *(uint64_t **)(v0 + 48);
    v10 = v9[11];
    v11 = *v9;
    if (*v9)
    {
      if (v11 == -1)
      {
        v12 = *(uint64_t **)(v0 + 96);
LABEL_16:
        v21 = *(_QWORD *)(v0 + 56);
        v22 = *(_QWORD *)(v0 + 32);
        sub_22AAA0730(v12);
        v5(v22, (uint64_t)v12, v21);
        v3 = 0;
        goto LABEL_17;
      }
      v10 %= v11;
    }
    v12 = *(uint64_t **)(v0 + 96);
    if (v10)
    {
      v13 = *(_QWORD *)(v0 + 88);
      v14 = *(_QWORD *)(v0 + 56);
      sub_22AAA0730(*(uint64_t **)(v0 + 96));
      (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v12, v14);
      OUTLINED_FUNCTION_4_56();
      v15 = off_255B1245C;
      swift_retain();
      v16 = swift_task_alloc();
      OUTLINED_FUNCTION_2_61(v16, v17, v18, v19);
      *(_QWORD *)v15 = v0;
      *(_QWORD *)(v15 + 8) = sub_22AAA08A4;
      return AnyTemporalIterator.next()(*(_QWORD *)(v0 + 80));
    }
    goto LABEL_16;
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
  v3 = 1;
LABEL_17:
  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 32), v3, 1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAA0AC4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AAA0AFC()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AAA0B0C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for Downsampler<A>.DownStreamSequence);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22AAA0B38()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AAA0B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A9B24D4;
  return Downsampler.DownStreamSequence.Iterator.next()(a1, a2, v6, v7);
}

uint64_t type metadata accessor for Downsampler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Downsampler);
}

uint64_t sub_22AAA0BB4(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  return swift_release();
}

uint64_t sub_22AAA0BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain();
  return a1;
}

uint64_t sub_22AAA0C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22AAA0C90(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t sub_22AAA0CF0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AAA0D30(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for Downsampler.DownStreamSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Downsampler.DownStreamSequence);
}

uint64_t sub_22AAA0D8C(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AAA0DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v6 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v6;
  swift_retain();
  swift_retain();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AAA0E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

void *__swift_memcpy136_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t sub_22AAA0F2C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

uint64_t sub_22AAA0FC4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AAA1004(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for Downsampler.DownStreamSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Downsampler.DownStreamSequence.Iterator);
}

uint64_t sub_22AAA1070(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_22AAA10B0 + 4 * asc_22ABF6280[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_22AAA10D0 + 4 * byte_22ABF6285[v4]))();
}

_BYTE *sub_22AAA10B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_22AAA10D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AAA10D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AAA10E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_22AAA10E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_22AAA10F0(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_22AAA10FC()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAA110C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAA111C()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_2_61(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 112) = a1;
  return type metadata accessor for AnyTemporalIterator(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_4_56()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  v1 = v0[6];
  v3 = *(_QWORD *)(v1 + 72);
  result = *(_QWORD *)(v1 + 80);
  v0[13] = result;
  v0[2] = v3;
  v0[3] = result;
  return result;
}

void rootMeanSquaredError<A, B, C>(_:_:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_15_47();
  meanSquaredError<A, B, C>(_:_:)();
  OUTLINED_FUNCTION_12_45();
  OUTLINED_FUNCTION_23_39();
  OUTLINED_FUNCTION_38();
}

void maximumAbsoluteError<A, B, C>(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_1_52(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_8_49();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v9);
  if ((OUTLINED_FUNCTION_6_67(v10, v15) & 1) == 0)
  {
    v11 = OUTLINED_FUNCTION_3_66();
    MEMORY[0x24BDAC7A8](v11);
    OUTLINED_FUNCTION_4_57();
    MEMORY[0x24BDAC7A8](v12);
    OUTLINED_FUNCTION_17_40();
    *(_QWORD *)(v13 - 16) = sub_22AAA19C8;
    *(_QWORD *)(v13 - 8) = v14;
    OUTLINED_FUNCTION_84();
  }
  OUTLINED_FUNCTION_13_56();
  OUTLINED_FUNCTION_3();
}

void absoluteError<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_4_4();
  a19 = v20;
  a20 = v21;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - v26;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&a9 - v29;
  v33 = type metadata accessor for AnnotatedPrediction(0, v31, v31, v32);
  AnnotatedPrediction.prediction.getter(v33, (uint64_t)v27);
  AnnotatedPrediction.annotation.getter(v33, (uint64_t)v24);
  sub_22ABDFAF4();
  OUTLINED_FUNCTION_50_10((uint64_t)v24);
  OUTLINED_FUNCTION_50_10((uint64_t)v27);
  sub_22ABE0154();
  OUTLINED_FUNCTION_50_10((uint64_t)v30);
  OUTLINED_FUNCTION_3();
}

void maximumAbsoluteError<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v6);
  v12 = v5;
  v11[2] = v3;
  v11[3] = v1;
  type metadata accessor for AnnotatedPrediction(255, v3, v3, v7);
  v8 = OUTLINED_FUNCTION_33_4();
  v9 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v8);
  v12 = OUTLINED_FUNCTION_26_30((void (*)(char *, uint64_t))sub_22AAA219C, (uint64_t)v11, v8, v3, MEMORY[0x24BEE4078], v9, MEMORY[0x24BEE40A8], v10);
  sub_22ABDF0F8();
  OUTLINED_FUNCTION_84();
}

void sub_22AAA14C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_22ABDEF48();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_14_1(v3);
  if (v5)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    sub_22ABDEBA0();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v1, v3, v0);
  }
  OUTLINED_FUNCTION_3();
}

void sub_22AAA153C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22ABDFAF4();
  sub_22ABE0154();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a3);
  OUTLINED_FUNCTION_38();
}

void meanAbsoluteError<A, B, C>(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_1_52(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_8_49();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v9);
  if ((OUTLINED_FUNCTION_6_67(v10, v15) & 1) == 0)
  {
    v11 = OUTLINED_FUNCTION_3_66();
    MEMORY[0x24BDAC7A8](v11);
    OUTLINED_FUNCTION_4_57();
    MEMORY[0x24BDAC7A8](v12);
    OUTLINED_FUNCTION_17_40();
    *(_QWORD *)(v13 - 16) = sub_22AAA19C8;
    *(_QWORD *)(v13 - 8) = v14;
    OUTLINED_FUNCTION_84();
  }
  OUTLINED_FUNCTION_13_56();
  OUTLINED_FUNCTION_3();
}

void meanAbsoluteError<A>(_:)()
{
  sub_22AAA1EA4();
}

uint64_t sub_22AAA1700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v12 - v8;
  sub_22ABDFAF4();
  sub_22ABDFAF4();
  sub_22ABDF308();
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, a3);
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, a3);
}

void meanSquaredError<A, B, C>(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v23 = v5;
  v24 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v21 = v12;
  v13 = *(_QWORD *)(v2 + 8);
  v14 = *(_QWORD *)(v0 + 8);
  v25 = v8;
  v26 = v6;
  v27 = v13;
  v28 = v14;
  v22 = *(_QWORD *)(sub_22ABDF7E8() - 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v15);
  if ((sub_22ABDF380() & 1) == 0)
  {
    v16 = sub_22ABE0178();
    v21 = &v20;
    v17 = MEMORY[0x24BDAC7A8](v16);
    *(&v20 - 6) = v11;
    *(&v20 - 5) = v9;
    v18 = v24;
    *(&v20 - 4) = v7;
    *(&v20 - 3) = v18;
    *(&v20 - 2) = v3;
    *(&v20 - 1) = v1;
    MEMORY[0x24BDAC7A8](v17);
    *(&v20 - 8) = v11;
    *(&v20 - 7) = v9;
    *(&v20 - 6) = v7;
    *(&v20 - 5) = v18;
    *(&v20 - 4) = v3;
    *(&v20 - 3) = v1;
    *(&v20 - 2) = (uint64_t)sub_22AAA1A28;
    *(&v20 - 1) = v19;
    OUTLINED_FUNCTION_76_6();
  }
  sub_22ABDEBA0();
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AAA19CC(uint64_t a1)
{
  return sub_22AAA1A38(a1);
}

void sub_22AAA19E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_22AAA153C(a1, a2, *(_QWORD *)(v2 + 16));
}

#error "22AAA1A14: call analysis failed (funcsize=10)"

uint64_t sub_22AAA1A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22AAA1700(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_22AAA1A38(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 64);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_22AAA1AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v24 = a4;
  v23 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v22 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v22 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v22[0] = (char *)v22 - v15;
  v18 = type metadata accessor for AnnotatedPrediction(0, v16, v16, v17);
  AnnotatedPrediction.prediction.getter(v18, (uint64_t)v13);
  AnnotatedPrediction.annotation.getter(v18, (uint64_t)v10);
  v22[1] = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 8);
  sub_22ABDFAF4();
  v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v19(v10, a2);
  v19(v13, a2);
  AnnotatedPrediction.prediction.getter(v18, (uint64_t)v10);
  AnnotatedPrediction.annotation.getter(v18, (uint64_t)v7);
  sub_22ABDFAF4();
  v19(v7, a2);
  v19(v10, a2);
  v20 = v22[0];
  sub_22ABDF308();
  v19(v13, a2);
  return ((uint64_t (*)(uint64_t, uint64_t))v19)(v20, a2);
}

void sub_22AAA1C74()
{
  if (__isPlatformVersionAtLeast(2, 18, 0, 0))
    meanSquaredError<A>(_:)();
  else
    sub_22AAA1D14();
}

void meanSquaredError<A>(_:)()
{
  sub_22AAA1D14();
}

void sub_22AAA1D14()
{
  uint64_t v0;
  void (*v1)(char *, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;

  OUTLINED_FUNCTION_4_4();
  v1 = (void (*)(char *, uint64_t))v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_22_37(v6, v4, v2, v0);
  v8 = OUTLINED_FUNCTION_33_4();
  v9 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v8);
  v10 = sub_22ABDF434();
  if ((v10 & 1) == 0)
  {
    v13 = v7;
    MEMORY[0x24BDAC7A8](v10);
    v12[2] = v5;
    v12[3] = v3;
    v13 = OUTLINED_FUNCTION_26_30(v1, (uint64_t)v12, v8, v5, MEMORY[0x24BEE4078], v9, MEMORY[0x24BEE40A8], v11);
    sub_22ABDF0F8();
    OUTLINED_FUNCTION_76_6();
  }
  sub_22ABDEBA0();
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AAA1E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22AAA1AA0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void rootMeanSquaredError<A>(_:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_15_47();
  sub_22AAA1C74();
  OUTLINED_FUNCTION_12_45();
  OUTLINED_FUNCTION_23_39();
  OUTLINED_FUNCTION_38();
}

void meanAbsolutePercentageError<A>(_:)()
{
  sub_22AAA1EA4();
}

void sub_22AAA1EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_22_37(v0, v1, v2, v3);
  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_76_6();
}

void sub_22AAA1EE8(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(char *, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  v8 = sub_22ABDF434();
  if ((v8 & 1) != 0)
  {
    sub_22ABDEBA0();
  }
  else
  {
    *(_QWORD *)(v6 - 88) = v5;
    MEMORY[0x24BDAC7A8](v8);
    v11[2] = v3;
    v11[3] = v1;
    *(_QWORD *)(v6 - 88) = OUTLINED_FUNCTION_26_30(v2, (uint64_t)v11, v4, v3, MEMORY[0x24BEE4078], a1, MEMORY[0x24BEE40A8], v9);
    v10 = OUTLINED_FUNCTION_89_1();
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v10);
    sub_22AA3B318();
    OUTLINED_FUNCTION_63_1();
  }
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AAA1FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v22[0] = a3;
  v24 = a4;
  v23 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v22 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v22 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v22 - v15;
  v19 = type metadata accessor for AnnotatedPrediction(0, v17, v17, v18);
  AnnotatedPrediction.annotation.getter(v19, (uint64_t)v10);
  AnnotatedPrediction.prediction.getter(v19, (uint64_t)v7);
  v22[1] = *(_QWORD *)(a3 + 16);
  sub_22ABDFAF4();
  v20 = *(void (**)(char *, uint64_t))(v23 + 8);
  v20(v7, a2);
  v20(v10, a2);
  AnnotatedPrediction.annotation.getter(v19, (uint64_t)v10);
  sub_22ABDEB88();
  v20(v10, a2);
  v20(v13, a2);
  sub_22ABE0154();
  return ((uint64_t (*)(char *, uint64_t))v20)(v16, a2);
}

uint64_t sub_22AAA216C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22AAA1FAC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_22AAA2188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22AAA1E28(a1, a2);
}

uint64_t sub_22AAA219C()
{
  return sub_22AAA1A00();
}

uint64_t OUTLINED_FUNCTION_3_66()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = v0;
  return sub_22ABE0178();
}

uint64_t OUTLINED_FUNCTION_6_67@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - a1;
  return sub_22ABDF380();
}

uint64_t OUTLINED_FUNCTION_8_49()
{
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_9_51()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_42()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(*(_QWORD *)(v2 - 184), v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_51(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  return sub_22A9C2540(a1, v9, v10, v8, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_12_45()
{
  return sub_22ABDEB7C();
}

uint64_t OUTLINED_FUNCTION_13_56()
{
  return sub_22ABDEBA0();
}

uint64_t OUTLINED_FUNCTION_14_47()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = v0;
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_18_45()
{
  return sub_22ABDEBA0();
}

uint64_t OUTLINED_FUNCTION_21_44()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 176) + 8))(v0, *(_QWORD *)(v1 - 168));
}

uint64_t OUTLINED_FUNCTION_22_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 - 88) = a1;
  return type metadata accessor for AnnotatedPrediction(255, a2, a2, a4);
}

uint64_t OUTLINED_FUNCTION_23_39()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_24_37()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_26_30(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_22AA726CC(a1, a2, a3, a4, a5, a6, a7, a8);
}

char *sub_22AAA234C(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = type metadata accessor for Moment(0);
    v8(&a1[*(int *)(v9 + 20)], (char *)a2 + *(int *)(v9 + 20), v7);
    v10 = *(int *)(a3 + 20);
    v11 = &a1[v10];
    v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v9))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      v8(&v11[*(int *)(v9 + 20)], &v12[*(int *)(v9 + 20)], v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v9);
    }
  }
  return a1;
}

uint64_t type metadata accessor for Moment(uint64_t a1)
{
  return sub_22AA062F0(a1, qword_255B15610);
}

uint64_t sub_22AAA2488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  v5 = type metadata accessor for Moment(0);
  v8(a1 + *(int *)(v5 + 20), v4);
  v6 = a1 + *(int *)(a2 + 20);
  result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!(_DWORD)result)
  {
    v8(v6, v4);
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6 + *(int *)(v5 + 20), v4);
  }
  return result;
}

uint64_t sub_22AAA2554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = type metadata accessor for Moment(0);
  v7(a1 + *(int *)(v8 + 20), a2 + *(int *)(v8 + 20), v6);
  v9 = *(int *)(a3 + 20);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v8))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    v7((uint64_t)&v10[*(int *)(v8 + 20)], (uint64_t)&v11[*(int *)(v8 + 20)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_22AAA2650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = type metadata accessor for Moment(0);
  v8(a1 + *(int *)(v9 + 20), a2 + *(int *)(v9 + 20), v6);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1 + v10, 1, v9);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8((uint64_t)v11, (uint64_t)v12, v6);
      v8((uint64_t)&v11[*(int *)(v9 + 20)], (uint64_t)&v12[*(int *)(v9 + 20)], v6);
      return a1;
    }
    sub_22A9A0B10((uint64_t)v11, type metadata accessor for Moment);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  v15 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v15(v11, v12, v6);
  v15(&v11[*(int *)(v9 + 20)], &v12[*(int *)(v9 + 20)], v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v9);
  return a1;
}

uint64_t sub_22AAA27AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for Moment(0);
  v7(a1 + *(int *)(v8 + 20), a2 + *(int *)(v8 + 20), v6);
  v9 = *(int *)(a3 + 20);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v8))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    v7((uint64_t)&v10[*(int *)(v8 + 20)], (uint64_t)&v11[*(int *)(v8 + 20)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_22AAA28A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int EnumTagSinglePayload;
  int v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = type metadata accessor for Moment(0);
  v8(a1 + *(int *)(v9 + 20), a2 + *(int *)(v9 + 20), v6);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1 + v10, 1, v9);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8((uint64_t)v11, (uint64_t)v12, v6);
      v8((uint64_t)&v11[*(int *)(v9 + 20)], (uint64_t)&v12[*(int *)(v9 + 20)], v6);
      return a1;
    }
    sub_22A9A0B10((uint64_t)v11, type metadata accessor for Moment);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v15(v11, v12, v6);
  v15(&v11[*(int *)(v9 + 20)], &v12[*(int *)(v9 + 20)], v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v9);
  return a1;
}

uint64_t sub_22AAA2A04()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAA2A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v6 = OUTLINED_FUNCTION_36_26();
  if (v7 == (_DWORD)v3)
  {
    v8 = v6;
    v9 = v4;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
    v9 = v4 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v9, v3, v8);
}

uint64_t sub_22AAA2A68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAA2A74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v8 = OUTLINED_FUNCTION_36_26();
  if (v9 == a3)
  {
    v10 = v8;
    v11 = v5;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
    v11 = v5 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v11, v4, v4, v10);
}

uint64_t type metadata accessor for AdamDenseLayer(uint64_t a1)
{
  return sub_22AA062F0(a1, (uint64_t *)&unk_255B15578);
}

void sub_22AAA2AE8()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Moment(319);
  if (v0 <= 0x3F)
  {
    sub_22AAA2B6C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_22AAA2B6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B15588[0])
  {
    type metadata accessor for Moment(255);
    v0 = sub_22ABDF5D8();
    if (!v1)
      atomic_store(v0, qword_255B15588);
  }
}

uint64_t *sub_22AAA2BC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_22AAA2C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_22AAA2CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22AAA2D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22AAA2DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22AAA2E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_22AAA2E9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAA2EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_22AAA2EE0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAA2EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

void sub_22AAA2F28()
{
  unint64_t v0;

  sub_22A9B9E9C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for AdamStorage()
{
  return &type metadata for AdamStorage;
}

uint64_t sub_22AAA2FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = sub_22A9A6118();
  sub_22A9FBF98();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
    v5 = sub_22ABDD6A0();
  }
  sub_22A9A0B10(a2, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
  sub_22A9A0C1C(a1, &qword_255B0DA98);
  return v5;
}

void sub_22AAA3080(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v18 = a4;
  v7 = sub_22ABDD7D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FullyConnectedNetwork();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  MEMORY[0x24BDAC7A8](v14);
  sub_22AAA4A0C(a2, (uint64_t)&v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22A9CBA90(a3, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v16 = v19;
  sub_22AAA31D8();
  if (v16)
    *v18 = v16;
}

void sub_22AAA31D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int EnumTagSinglePayload;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(void);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(void);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(void);
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;

  OUTLINED_FUNCTION_12();
  v104 = v0;
  v2 = v1;
  v4 = v3;
  v119 = v5;
  v7 = v6;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v97 = *(_QWORD *)(v99 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  OUTLINED_FUNCTION_87();
  v98 = v8;
  OUTLINED_FUNCTION_4_0();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v101 = (char *)&v90 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
  OUTLINED_FUNCTION_1_0();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  OUTLINED_FUNCTION_0();
  v96 = v10;
  v112 = sub_22ABDD4F0();
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v112 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  OUTLINED_FUNCTION_0();
  v106 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  OUTLINED_FUNCTION_87();
  v100 = v13;
  OUTLINED_FUNCTION_4_0();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  OUTLINED_FUNCTION_12_0();
  v102 = v14;
  OUTLINED_FUNCTION_4_0();
  v15 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v17 = (char *)&v90 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v90 - v18;
  v20 = sub_22ABDDA0C();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_87();
  v95 = v22;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_12_0();
  v103 = v24;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_12_0();
  v105 = v26;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_12_0();
  v111 = v28;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v29);
  v115 = (uint64_t)&v90 - v30;
  v31 = *(int *)(type metadata accessor for AdamDenseLayer(0) + 20);
  v108 = v7;
  v32 = v7 + v31;
  v33 = OUTLINED_FUNCTION_13_57();
  v116 = v32;
  v107 = v33;
  __swift_storeEnumTagSinglePayload(v32, 1, 1, v33);
  sub_22A9A03BC();
  if (!v34)
  {
    v117 = 0;
    v118 = 0xE000000000000000;
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    v40 = OUTLINED_FUNCTION_26_1();
    sub_22ABDFA34();
    v41 = v4;
    v42 = v117;
    v43 = v118;
    sub_22A9A0888();
    OUTLINED_FUNCTION_53();
    *v44 = v42;
    v44[1] = v43;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v2, v40);
    sub_22A9A0B10(v41, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
    v45 = v119;
LABEL_8:
    sub_22A9A0C1C(v45, &qword_255B0DA98);
    goto LABEL_9;
  }
  v35 = v34;
  v113 = v4;
  v114 = v21;
  v110 = v2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  v37 = v119 + *(int *)(v36 + 64);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
  v94 = v37;
  sub_22ABDD664();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20);
  v109 = v35;
  if (EnumTagSinglePayload == 1)
  {
    v17 = v19;
LABEL_7:
    v49 = v113;
    sub_22A9A0C1C((uint64_t)v17, &qword_255B0DAB8);
    sub_22A9A0888();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_9_12(v50, 0xD000000000000025);
    OUTLINED_FUNCTION_22_38();
    v51 = OUTLINED_FUNCTION_26_1();
    OUTLINED_FUNCTION_18_46(v51);
    sub_22A9A0B10(v49, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
    v45 = v119;
    goto LABEL_8;
  }
  v93 = v11;
  v46 = (void (*)(void))*((_QWORD *)v114 + 4);
  ((void (*)(uint64_t, char *, uint64_t))v46)(v115, v19, v20);
  v47 = v119 + *(int *)(v36 + 68);
  v48 = v20;
  sub_22ABDD664();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v20) == 1)
  {
    (*((void (**)(uint64_t, uint64_t))v114 + 1))(v115, v20);
    goto LABEL_7;
  }
  v90 = v47;
  v92 = v38;
  v52 = v111;
  v91 = v46;
  ((void (*)(uint64_t, char *, uint64_t))v46)(v111, v17, v20);
  v53 = (void (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v114 + 2);
  v54 = v105;
  v53(v105, v115, v48);
  v55 = v106;
  OUTLINED_FUNCTION_33_28();
  sub_22ABDD4E4();
  v56 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)v93 + 1);
  v57 = v56(v55, v112);
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_29_26();
  v58 = v104;
  sub_22ABDE81C();
  v104 = v58;
  v59 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v114 + 1);
  v59(v54, v48);
  v114 = v53;
  v53(v54, v52, v48);
  v60 = v107;
  OUTLINED_FUNCTION_33_28();
  sub_22ABDD4E4();
  v93 = v56;
  v61 = v56(v55, v112);
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_29_26();
  sub_22ABDE81C();
  OUTLINED_FUNCTION_12_46(v54);
  v62 = v113;
  sub_22A9A04BC();
  if (!v63)
  {
    OUTLINED_FUNCTION_22_38();
    v67 = OUTLINED_FUNCTION_26_1();
    OUTLINED_FUNCTION_20(v67);
    sub_22A9A0B10(v62, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
    OUTLINED_FUNCTION_34_28(v68, &qword_255B0DA98);
    OUTLINED_FUNCTION_12_46(v111);
    OUTLINED_FUNCTION_12_46(v115);
    v69 = v116;
    sub_22A9A0C1C(v116, &qword_255B0DAB0);
    __swift_storeEnumTagSinglePayload(v69, 1, 1, v60);
    goto LABEL_10;
  }
  v64 = v63;
  v65 = v102;
  sub_22ABDD664();
  if (__swift_getEnumTagSinglePayload(v65, 1, v48) == 1)
  {
    v66 = v48;
  }
  else
  {
    v70 = v91;
    ((void (*)(uint64_t, uint64_t, uint64_t))v91)(v103, v65, v48);
    v65 = v100;
    v71 = v64;
    v66 = v48;
    sub_22ABDD664();
    if (__swift_getEnumTagSinglePayload(v65, 1, v48) != 1)
    {
      v108 = v71;
      v78 = v95;
      v70();
      v79 = v105;
      OUTLINED_FUNCTION_38_28(v105, v103);
      v80 = v106;
      OUTLINED_FUNCTION_55_2();
      sub_22ABDD4E4();
      v81 = OUTLINED_FUNCTION_20_39(v80);
      MEMORY[0x24BDAC7A8](v81);
      OUTLINED_FUNCTION_30_28();
      sub_22ABDE81C();
      OUTLINED_FUNCTION_12_46(v79);
      OUTLINED_FUNCTION_38_28(v79, v78);
      OUTLINED_FUNCTION_55_2();
      sub_22ABDD4E4();
      v82 = OUTLINED_FUNCTION_20_39(v80);
      MEMORY[0x24BDAC7A8](v82);
      OUTLINED_FUNCTION_30_28();
      v83 = v98;
      sub_22ABDE81C();
      OUTLINED_FUNCTION_11_52(v79);
      swift_release();
      OUTLINED_FUNCTION_22_38();
      v84 = OUTLINED_FUNCTION_26_1();
      OUTLINED_FUNCTION_18_46(v84);
      sub_22A9A0B10(v113, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
      OUTLINED_FUNCTION_34_28(v85, &qword_255B0DA98);
      OUTLINED_FUNCTION_11_52(v78);
      OUTLINED_FUNCTION_11_52(v103);
      OUTLINED_FUNCTION_11_52(v111);
      OUTLINED_FUNCTION_11_52(v115);
      v86 = *(void (**)(uint64_t, char *, uint64_t))(v97 + 32);
      v87 = v96;
      v88 = v99;
      v86(v96, v101, v99);
      v89 = v107;
      v86(v87 + *(int *)(v107 + 20), v83, v88);
      __swift_storeEnumTagSinglePayload(v87, 0, 1, v89);
      sub_22AAA496C(v87, v116);
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_12_46(v103);
  }
  v72 = v115;
  v73 = v111;
  v74 = v113;
  sub_22A9A0C1C(v65, &qword_255B0DAB8);
  sub_22A9A0888();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_9_12(v75, 0xD000000000000025);
  swift_release();
  OUTLINED_FUNCTION_22_38();
  v76 = OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_20(v76);
  sub_22A9A0B10(v74, (uint64_t (*)(_QWORD))type metadata accessor for FullyConnectedNetwork);
  OUTLINED_FUNCTION_34_28(v77, &qword_255B0DA98);
  v59(v73, v66);
  v59(v72, v66);
  sub_22A9A0B10(v108, type metadata accessor for Moment);
LABEL_9:
  sub_22A9A0C1C(v116, &qword_255B0DAB0);
LABEL_10:
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAA3B28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1885697139 && a2 == 0xE400000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E656D6F6DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AAA3C04(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73746E656D6F6DLL;
  else
    return 1885697139;
}

void sub_22AAA3C34()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_12();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15648);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_6_4();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_22AAA482C();
  sub_22ABE02B0();
  sub_22ABDFD34();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B15658);
    sub_22AAA4868(&qword_255B15660, &qword_255B15668, (uint64_t)&unk_22ABF6618, MEMORY[0x24BEE12A0]);
    sub_22ABDFD4C();
  }
  OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAA3D60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15670);
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_34();
  v4 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  sub_22AAA482C();
  sub_22ABE0298();
  if (!v1)
  {
    v4 = sub_22ABDFC74();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B15658);
    sub_22AAA4868(&qword_255B15678, &qword_255B15680, (uint64_t)&unk_22ABF6640, MEMORY[0x24BEE12D0]);
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_26_31();
  }
  OUTLINED_FUNCTION_9_8();
  return v4;
}

uint64_t sub_22AAA3EBC()
{
  char *v0;

  return sub_22AAA3C04(*v0);
}

uint64_t sub_22AAA3EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AAA3B28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AAA3EE8()
{
  sub_22AAA482C();
  return sub_22ABE02EC();
}

uint64_t sub_22AAA3F10()
{
  sub_22AAA482C();
  return sub_22ABE02F8();
}

uint64_t sub_22AAA3F38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_22AAA3D60(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_22AAA3F60()
{
  sub_22AAA3C34();
}

void sub_22AAA3F78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B156A0);
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AAA48EC();
  OUTLINED_FUNCTION_19_16();
  OUTLINED_FUNCTION_13_57();
  sub_22A99D7D4(&qword_255B156A8, type metadata accessor for Moment, (uint64_t)&unk_22ABF65C8);
  OUTLINED_FUNCTION_1_53();
  if (!v1)
  {
    type metadata accessor for AdamDenseLayer(0);
    sub_22ABDFCF8();
  }
  OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_25_1();
}

void sub_22AAA408C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_12();
  v4 = v3;
  v19 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v10 = OUTLINED_FUNCTION_13_57();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_0();
  v20 = v12;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15688);
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_6_4();
  type metadata accessor for AdamDenseLayer(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  v17 = v16 - v15;
  v22 = v16 - v15 + *(int *)(v18 + 20);
  __swift_storeEnumTagSinglePayload(v22, 1, 1, v10);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_22AAA48EC();
  sub_22ABE0298();
  if (v0)
  {
    OUTLINED_FUNCTION_9_8();
    sub_22A9A0C1C(v22, &qword_255B0DAB0);
  }
  else
  {
    sub_22A99D7D4(&qword_255B15698, type metadata accessor for Moment, (uint64_t)&unk_22ABF65F0);
    sub_22ABDFC8C();
    sub_22AAA4928(v20, v17);
    sub_22ABDFC38();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v21);
    sub_22AAA496C(v9, v22);
    sub_22A9CBA90(v17, v19, type metadata accessor for AdamDenseLayer);
    OUTLINED_FUNCTION_9_8();
    sub_22A9A0B10(v17, type metadata accessor for AdamDenseLayer);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAA42C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7473726966 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E6F636573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AAA43A4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x646E6F636573;
  else
    return 0x7473726966;
}

void sub_22AAA43D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B156C0);
  OUTLINED_FUNCTION_37_1();
  MEMORY[0x24BDAC7A8](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AAA49B4();
  OUTLINED_FUNCTION_19_16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  sub_22A9B9F80(&qword_255B0EC58, MEMORY[0x24BEE14F8], MEMORY[0x24BDBFCD8]);
  OUTLINED_FUNCTION_1_53();
  if (!v1)
  {
    OUTLINED_FUNCTION_13_57();
    OUTLINED_FUNCTION_1_53();
  }
  OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_25_1();
}

void sub_22AAA44D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  OUTLINED_FUNCTION_12();
  v3 = v2;
  v15 = v4;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v18 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_87();
  v16 = v5;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v6);
  v19 = (char *)&v13 - v7;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B156B0);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_33();
  v8 = OUTLINED_FUNCTION_13_57();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_34();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_22AAA49B4();
  sub_22ABE0298();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    v13 = v8;
    v14 = v3;
    v10 = v16;
    v11 = v18;
    sub_22A9B9F80(&qword_255B0EC68, MEMORY[0x24BEE1520], MEMORY[0x24BDBFCE8]);
    OUTLINED_FUNCTION_37_22();
    v12 = v19;
    v19 = *(char **)(v11 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v19)(v1, v12, v20);
    OUTLINED_FUNCTION_37_22();
    OUTLINED_FUNCTION_28_25();
    ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v1 + *(int *)(v13 + 20), v10, v20);
    sub_22A9CBA90(v1, v15, type metadata accessor for Moment);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    sub_22A9A0B10(v1, type metadata accessor for Moment);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAA4710()
{
  sub_22AAA48EC();
  return sub_22ABE02EC();
}

uint64_t sub_22AAA4738()
{
  sub_22AAA48EC();
  return sub_22ABE02F8();
}

void sub_22AAA4760()
{
  sub_22AAA408C();
}

void sub_22AAA4774(_QWORD *a1)
{
  sub_22AAA3F78(a1);
}

uint64_t sub_22AAA4788()
{
  char *v0;

  return sub_22AAA43A4(*v0);
}

uint64_t sub_22AAA4790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AAA42C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AAA47B4()
{
  sub_22AAA49B4();
  return sub_22ABE02EC();
}

uint64_t sub_22AAA47DC()
{
  sub_22AAA49B4();
  return sub_22ABE02F8();
}

void sub_22AAA4804()
{
  sub_22AAA44D8();
}

void sub_22AAA4818(_QWORD *a1)
{
  sub_22AAA43D4(a1);
}

unint64_t sub_22AAA482C()
{
  unint64_t result;

  result = qword_255B15650;
  if (!qword_255B15650)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF698C, &type metadata for AdamStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15650);
  }
  return result;
}

uint64_t sub_22AAA4868(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B15658);
    sub_22A99D7D4(a2, type metadata accessor for AdamDenseLayer, a3);
    v11 = v10;
    result = MEMORY[0x22E2E4D80](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22AAA48EC()
{
  unint64_t result;

  result = qword_255B15690;
  if (!qword_255B15690)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF693C, &type metadata for AdamDenseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15690);
  }
  return result;
}

uint64_t sub_22AAA4928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Moment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AAA496C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_22AAA49B4()
{
  unint64_t result;

  result = qword_255B156B8;
  if (!qword_255B156B8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF68EC, &type metadata for Moment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B156B8);
  }
  return result;
}

void sub_22AAA49F0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  sub_22AAA3080(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_22AAA4A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for Moment.CodingKeys()
{
  return &type metadata for Moment.CodingKeys;
}

ValueMetadata *type metadata accessor for AdamDenseLayer.CodingKeys()
{
  return &type metadata for AdamDenseLayer.CodingKeys;
}

uint64_t _s18CreateMLComponents6MomentV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AAA4AC4 + 4 * byte_22ABF6595[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AAA4AF8 + 4 * byte_22ABF6590[v4]))();
}

uint64_t sub_22AAA4AF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAA4B00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AAA4B08);
  return result;
}

uint64_t sub_22AAA4B14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AAA4B1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AAA4B20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAA4B28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdamStorage.CodingKeys()
{
  return &type metadata for AdamStorage.CodingKeys;
}

unint64_t sub_22AAA4B48()
{
  unint64_t result;

  result = qword_255B156C8;
  if (!qword_255B156C8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6754, &type metadata for AdamStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B156C8);
  }
  return result;
}

unint64_t sub_22AAA4B88()
{
  unint64_t result;

  result = qword_255B156D0;
  if (!qword_255B156D0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF680C, &type metadata for AdamDenseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B156D0);
  }
  return result;
}

unint64_t sub_22AAA4BC8()
{
  unint64_t result;

  result = qword_255B156D8;
  if (!qword_255B156D8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF68C4, &type metadata for Moment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B156D8);
  }
  return result;
}

unint64_t sub_22AAA4C08()
{
  unint64_t result;

  result = qword_255B156E0;
  if (!qword_255B156E0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6834, &type metadata for Moment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B156E0);
  }
  return result;
}

unint64_t sub_22AAA4C48()
{
  unint64_t result;

  result = qword_255B156E8;
  if (!qword_255B156E8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF685C, &type metadata for Moment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B156E8);
  }
  return result;
}

unint64_t sub_22AAA4C88()
{
  unint64_t result;

  result = qword_255B156F0;
  if (!qword_255B156F0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF677C, &type metadata for AdamDenseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B156F0);
  }
  return result;
}

unint64_t sub_22AAA4CC8()
{
  unint64_t result;

  result = qword_255B156F8;
  if (!qword_255B156F8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF67A4, &type metadata for AdamDenseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B156F8);
  }
  return result;
}

unint64_t sub_22AAA4D08()
{
  unint64_t result;

  result = qword_255B15700;
  if (!qword_255B15700)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF66C4, &type metadata for AdamStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15700);
  }
  return result;
}

unint64_t sub_22AAA4D48()
{
  unint64_t result;

  result = qword_255B15708;
  if (!qword_255B15708)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF66EC, &type metadata for AdamStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15708);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_11_52(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_12_46(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_13_57()
{
  return type metadata accessor for Moment(0);
}

uint64_t OUTLINED_FUNCTION_18_46(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(*(_QWORD *)(v1 - 160), a1);
}

uint64_t OUTLINED_FUNCTION_20_39(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 296))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_22_38()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_26_31()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_28_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_33_28()
{
  return sub_22ABDD964();
}

void OUTLINED_FUNCTION_34_28(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_22A9A0C1C(*(_QWORD *)(v2 - 72), a2);
}

uint64_t OUTLINED_FUNCTION_36_26()
{
  return type metadata accessor for Moment(0);
}

uint64_t OUTLINED_FUNCTION_37_22()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_38_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 128))(a1, a2, v2);
}

void sub_22AAA4E64(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  void (*v14)(uint64_t, uint64_t);
  void *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;

  v7 = sub_22ABDD0E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4_58(a3);
  v11 = type metadata accessor for AudioReader.AsyncBuffers(0);
  *(_QWORD *)(a3 + *(int *)(v11 + 24)) = a2;
  OUTLINED_FUNCTION_4_58((uint64_t)v10);
  v12 = objc_allocWithZone(MEMORY[0x24BDB1810]);
  v13 = sub_22AA34E34((uint64_t)v10);
  if (v3)
  {
    v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v14(a1, v7);
    v14(a3, v7);
    return;
  }
  v15 = v13;
  v16 = (char *)objc_msgSend(v13, sel_length);

  v17 = &v16[a2];
  if (__OFADD__(v16, a2))
  {
    __break(1u);
    goto LABEL_13;
  }
  v18 = v17 - 1;
  if (__OFSUB__(v17, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!a2)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  if (v17 == (char *)0x8000000000000001 && a2 == -1)
    goto LABEL_15;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  v20 = a3 + *(int *)(v11 + 20);
  *(_QWORD *)v20 = (uint64_t)v18 / a2;
  *(_BYTE *)(v20 + 8) = 0;
}

uint64_t AudioReader.AsyncBuffers.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_18_15();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AudioReader.AsyncBuffers.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for AudioReader.AsyncBuffers(0) + 20));
}

uint64_t type metadata accessor for AudioReader.AsyncBuffers(uint64_t a1)
{
  return sub_22AA062F0(a1, qword_255B157B0);
}

int *AudioReader.AsyncBuffers.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int *result;

  v3 = OUTLINED_FUNCTION_18_15();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
  v4 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for AudioReader.AsyncBuffers(0) + 24));
  result = (int *)type metadata accessor for AudioReader.AsyncBuffers.Iterator(0);
  *(_QWORD *)(a1 + result[6]) = 0;
  *(_QWORD *)(a1 + result[7]) = 0;
  *(_BYTE *)(a1 + result[8]) = 0;
  *(_QWORD *)(a1 + result[5]) = v4;
  return result;
}

uint64_t type metadata accessor for AudioReader.AsyncBuffers.Iterator(uint64_t a1)
{
  return sub_22AA062F0(a1, qword_255B15848);
}

uint64_t sub_22AAA50C0()
{
  return AudioReader.AsyncBuffers.count.getter();
}

uint64_t sub_22AAA50D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  AudioReader.AsyncBuffers.makeAsyncIterator()(a1);
  return sub_22AA36668(v1);
}

uint64_t AudioReader.AsyncBuffers.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = OUTLINED_FUNCTION_18_15();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22AAA515C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = type metadata accessor for AudioReader.AsyncBuffers.Iterator(0);
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(int *)(v2 + 32);
  *(_DWORD *)(v0 + 112) = v3;
  if ((*(_BYTE *)(v1 + v3) & 1) != 0)
  {
    v4 = *(_OWORD **)(v0 + 16);
    v4[1] = 0u;
    v4[2] = 0u;
    *v4 = 0u;
    OUTLINED_FUNCTION_6_68();
    OUTLINED_FUNCTION_28_0();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(int *)(v2 + 24);
  *(_DWORD *)(v0 + 116) = v5;
  v6 = *(id *)(v1 + v5);
  if (!v6)
  {
    v7 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(v7, v1, *(_QWORD *)(v0 + 32));
    v8 = objc_allocWithZone(MEMORY[0x24BDB1810]);
    v6 = sub_22AA34E34(v7);
    *(_QWORD *)(v1 + v5) = v6;
  }
  *(_QWORD *)(v0 + 72) = v6;
  result = sub_22AAA54F4();
  *(_QWORD *)(v0 + 80) = result;
  *(_QWORD *)(v0 + 88) = 0;
  if (qword_255B0D728 == -1)
  {
    if (v6)
    {
LABEL_7:
      *(_QWORD *)(v0 + 96) = qword_255B47DA0;
      return swift_task_switch();
    }
  }
  else
  {
    result = swift_once();
    if (v6)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_22AAA52B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  sub_22AAA5744(*(void **)(v0 + 72), *(_QWORD *)(v0 + 80));
  *(_QWORD *)(v0 + 104) = v1;
  return swift_task_switch();
}

void sub_22AAA5314()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  void *v14;
  id v15;
  double v16;
  double v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  sub_22ABDD028();
  v7 = sub_22ABDD0C4();
  v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v6);
  v10 = *(int *)(v2 + 28);
  v11 = *(_QWORD *)(v5 + v10);
  v12 = objc_msgSend(v1, sel_frameLength);
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v13 < v11)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v14 = *(void **)(*(_QWORD *)(v0 + 24) + *(int *)(v0 + 116));
  if (!v14)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v15 = objc_msgSend(v14, sel_processingFormat);
  objc_msgSend(v15, sel_sampleRate);
  v17 = v16;

  if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) == 0)
    goto LABEL_13;
  if (v17 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v18 = objc_msgSend(*(id *)(v0 + 80), sel_frameLength);
  v19 = v11 + v18;
  if (__OFADD__(v11, v18))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(_QWORD *)(v5 + v10) = v19;
  if (v19 >= (uint64_t)objc_msgSend(v14, sel_length))
  {
    v21 = *(int *)(v0 + 112);
    v20 = *(int *)(v0 + 116);
    v22 = *(_QWORD *)(v0 + 24);

    *(_BYTE *)(v22 + v21) = 1;
    *(_QWORD *)(v22 + v20) = 0;
  }
  v23 = *(_QWORD *)(v0 + 80);
  v24 = *(uint64_t **)(v0 + 16);
  *v24 = v7;
  v24[1] = v9;
  v24[2] = v11;
  v24[3] = v13;
  v24[4] = (uint64_t)v17;
  v24[5] = v23;
  OUTLINED_FUNCTION_6_68();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAA54B4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAA54F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  unint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = type metadata accessor for AudioReader.AsyncBuffers.Iterator(0);
  v3 = *(void **)(v1 + *(int *)(v2 + 24));
  if (!v3)
  {
    __break(1u);
LABEL_8:
    OUTLINED_FUNCTION_9_11();
    result = sub_22ABDFAD0();
    __break(1u);
    return result;
  }
  v4 = objc_msgSend(v3, sel_processingFormat);
  v5 = *(_QWORD *)(v1 + *(int *)(v2 + 20));
  if ((v5 & 0x8000000000000000) != 0 || HIDWORD(v5))
    goto LABEL_8;
  v6 = v4;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1838]), sel_initWithPCMFormat_frameCapacity_, v4, v5);
  if (!v7)
  {
    type metadata accessor for DatasetError();
    sub_22A9BED8C((unint64_t *)&qword_255B11498, (uint64_t (*)(uint64_t))type metadata accessor for DatasetError, (uint64_t)&protocol conformance descriptor for DatasetError);
    swift_allocError();
    v9 = v8;
    v10 = (_QWORD *)(v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B114A0) + 48));
    v11 = sub_22ABDD0E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v1, v11);
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    sub_22A9BED8C((unint64_t *)&qword_2540E89D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    *v10 = 0xD000000000000023;
    v10[1] = 0x800000022ABE4B30;
    v12 = swift_storeEnumTagMultiPayload();
    swift_willThrow(v12);
  }

  return (uint64_t)v7;
}

id sub_22AAA5744(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5[0] = 0;
  if (objc_msgSend(a1, sel_readIntoBuffer_error_, a2, v5))
    return v5[0];
  v3 = v5[0];
  sub_22ABDD004();

  return (id)swift_willThrow(v4);
}

uint64_t sub_22AAA57E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22A99DE80;
  return AudioReader.AsyncBuffers.Iterator.next()(a1);
}

uint64_t sub_22AAA5838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_255B16198 + dword_255B16198);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_22AAA58BC;
  return v10(a1, a2, a3);
}

uint64_t sub_22AAA58BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 16) = v0;
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_22AAA5914()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for AudioIOActor();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  qword_255B47DA0 = v0;
  return result;
}

uint64_t sub_22AAA594C()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_22AAA5968(uint64_t a1)
{
  uint64_t result;

  result = sub_22A9BED8C(&qword_255B15738, type metadata accessor for AudioReader.AsyncBuffers, (uint64_t)&protocol conformance descriptor for AudioReader.AsyncBuffers);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AAA59A4()
{
  return sub_22A9BED8C(qword_255B15740, type metadata accessor for AudioReader.AsyncBuffers.Iterator, (uint64_t)&protocol conformance descriptor for AudioReader.AsyncBuffers.Iterator);
}

uint64_t *_s12AsyncBuffersVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD0E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
  }
  return a1;
}

uint64_t _s12AsyncBuffersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t _s12AsyncBuffersVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s12AsyncBuffersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t _s12AsyncBuffersVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t _s12AsyncBuffersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAA5C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_54();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t _s12AsyncBuffersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAA5C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_1_54();
  v0 = OUTLINED_FUNCTION_7_64();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_22AAA5CA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *_s12AsyncBuffersV8IteratorVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22ABDD0E8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    v9 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    v10 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
    v11 = v9;
  }
  return a1;
}

void _s12AsyncBuffersV8IteratorVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t _s12AsyncBuffersV8IteratorVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = v8;
  return a1;
}

uint64_t _s12AsyncBuffersV8IteratorVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t _s12AsyncBuffersV8IteratorVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t _s12AsyncBuffersV8IteratorVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v6 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  return a1;
}

uint64_t _s12AsyncBuffersV8IteratorVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAA601C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = OUTLINED_FUNCTION_18_15();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t _s12AsyncBuffersV8IteratorVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAA60A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = OUTLINED_FUNCTION_1_54();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = OUTLINED_FUNCTION_7_64();
    return __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(_QWORD *)(v5 + *(int *)(a4 + 24)) = v4;
  }
  return result;
}

uint64_t sub_22AAA6104()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDD0E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AudioIOActor()
{
  return objc_opt_self();
}

uint64_t OUTLINED_FUNCTION_4_58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_6_68()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_7_64()
{
  uint64_t v0;

  return v0;
}

uint64_t dispatch thunk of RandomTransformer.applied<A>(to:generator:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a9 + 24) + *(_QWORD *)(a9 + 24));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v17;
  *v17 = v9;
  v17[1] = sub_22A99DE80;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t Sequence.randomSplit<A, B>(by:seed:)(uint64_t a1, char a2)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _BYTE v21[104];

  if ((a2 & 1) != 0)
  {
    v11 = OUTLINED_FUNCTION_2_62();
    Sequence.randomSplit<A, B, C>(by:using:)(v12, v13, v14, v15, v16, v17, v18, v19, v11);
  }
  if ((a1 & 0x8000000000000000) == 0)
  {
    sub_22AB3FA04(a1, (uint64_t)v21);
    sub_22AAA6C24();
    v2 = OUTLINED_FUNCTION_2_62();
    Sequence.randomSplit<A, B, C>(by:using:)(v3, v4, v5, v6, v7, v8, v9, v10, v2);
  }
  OUTLINED_FUNCTION_5_51();
  result = OUTLINED_FUNCTION_1_55();
  __break(1u);
  return result;
}

void Sequence.randomSplit<A, B, C>(by:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[15];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v34 = a8;
  v33 = a7;
  v32 = a6;
  v35 = a5;
  v31[12] = a1;
  v31[13] = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v31[11] = v13;
  v31[10] = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_0();
  v31[9] = v16;
  v17 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v17);
  if (a9 > 0.0 && a9 < 1.0)
  {
    v20 = type metadata accessor for AnnotatedFeature(0, a3, a4, v18);
    v39 = sub_22ABDE9F0();
    v37 = v20;
    v38 = sub_22ABDE9F0();
    MEMORY[0x24BDAC7A8](v38);
    v31[-8] = a2;
    v31[-7] = a3;
    v21 = v35;
    v31[-6] = a4;
    v31[-5] = v21;
    v22 = v32;
    v23 = v33;
    v31[-4] = v32;
    v31[-3] = v23;
    v24 = v34;
    KeyPath = swift_getKeyPath();
    v36 = v31;
    MEMORY[0x24BDAC7A8](KeyPath);
    v31[-6] = a2;
    v31[-5] = v21;
    v31[-4] = v22;
    v31[-3] = v23;
    v29 = v24;
    v30 = v26;
    v31[14] = a2;
    v28 = sub_22A9C2540((uint64_t)sub_22AAA6F2C, (uint64_t)&v31[-8], a2, a4, MEMORY[0x24BEE4078], v22, MEMORY[0x24BEE40A8], v27);
    swift_release();
    v40 = v28;
    sub_22ABDF0F8();
    OUTLINED_FUNCTION_37_0();
  }
  LODWORD(v30) = 0;
  v29 = 56;
  OUTLINED_FUNCTION_0_58();
  __break(1u);
}

unint64_t sub_22AAA6C24()
{
  unint64_t result;

  result = qword_255B15938;
  if (!qword_255B15938)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABFBFF8, &type metadata for SeededRandomGenerator);
    atomic_store(result, (unint64_t *)&qword_255B15938);
  }
  return result;
}

uint64_t Sequence.randomSplit<A>(by:seed:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  if ((a2 & 1) != 0)
  {
    result = OUTLINED_FUNCTION_3_67((uint64_t)&v19);
    v9 = v19;
    v4 = v20;
    v5 = v21;
    v10 = v22;
    v6 = v23;
    v7 = v24;
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) == 0)
  {
    sub_22AB3FA04(a1, (uint64_t)&v19);
    sub_22AAA6C24();
    OUTLINED_FUNCTION_3_67((uint64_t)&v13);
    v4 = v14;
    v5 = v15;
    v11 = v16;
    v12 = v13;
    v6 = v17;
    v7 = v18;
    result = swift_bridgeObjectRelease();
    v10 = v11;
    v9 = v12;
LABEL_5:
    *(_OWORD *)a3 = v9;
    *(_QWORD *)(a3 + 16) = v4;
    *(_QWORD *)(a3 + 24) = v5;
    *(_OWORD *)(a3 + 32) = v10;
    *(_QWORD *)(a3 + 48) = v6;
    *(_QWORD *)(a3 + 56) = v7;
    return result;
  }
  OUTLINED_FUNCTION_5_51();
  result = OUTLINED_FUNCTION_1_55();
  __break(1u);
  return result;
}

uint64_t Sequence.randomSplit<A, B>(by:using:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  if (a3 <= 0.0 || a3 >= 1.0)
    goto LABEL_13;
  v7 = sub_22ABDEF3C();
  v8 = round((double)MEMORY[0x22E2E3340](v7, a1) * a3);
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) != 0)
  {
    if (v8 > -9.22337204e18)
    {
      if (v8 < 9.22337204e18)
      {
        *(_QWORD *)&v11 = v7;
        v9 = sub_22ABDF0F8();
        OUTLINED_FUNCTION_126();
        MEMORY[0x22E2E4D80](MEMORY[0x24BEE12B8], v9);
        sub_22A9C8D60(&qword_255B15948, &qword_255B15940, MEMORY[0x24BEE2C68]);
        OUTLINED_FUNCTION_4_59();
        OUTLINED_FUNCTION_126();
        sub_22A9C8D60(qword_255B13300, &qword_255B11148, MEMORY[0x24BEE2C50]);
        OUTLINED_FUNCTION_4_59();
        result = swift_bridgeObjectRelease();
        *(_OWORD *)a2 = v13;
        *(_QWORD *)(a2 + 16) = v14;
        *(_QWORD *)(a2 + 24) = v15;
        *(_OWORD *)(a2 + 32) = v11;
        *(_OWORD *)(a2 + 48) = v12;
        return result;
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  result = OUTLINED_FUNCTION_0_58();
  __break(1u);
  return result;
}

uint64_t sub_22AAA6F2C()
{
  return swift_getAtKeyPath();
}

uint64_t sub_22AAA6F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for AnnotatedFeature(0, a4, a5, a4);
  return sub_22ABDECFC() & 1;
}

uint64_t sub_22AAA6FC4(uint64_t a1)
{
  uint64_t *v1;

  return sub_22AAA6F54(a1, v1[9], v1[2], v1[3], v1[4]) & 1;
}

uint64_t OUTLINED_FUNCTION_0_58()
{
  return sub_22ABDFADC();
}

double OUTLINED_FUNCTION_2_62()
{
  double v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_3_67@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v2;

  return Sequence.randomSplit<A, B>(by:using:)(v1, a1, v2);
}

uint64_t OUTLINED_FUNCTION_4_59()
{
  return sub_22ABDEC90();
}

uint64_t OUTLINED_FUNCTION_6_69()
{
  uint64_t v0;

  return v0 - 216;
}

uint64_t sub_22AAA7094(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  void *v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  NSObject *v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD, _QWORD);
  _BOOL4 v44;
  void *v45;
  uint64_t v46;
  BOOL v47;
  NSObject *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t isa;
  NSObject *v58;
  Class v59;
  Class v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  os_log_type_t v77;
  uint64_t v78;
  os_log_type_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  _QWORD v92[2];
  uint64_t v93;
  _BOOL4 v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(_QWORD, _QWORD, _QWORD);
  char *v116;
  uint64_t v117;
  char *v118;
  NSObject *v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  unint64_t v128;
  uint64_t v129;

  v113 = a5;
  v7 = v6;
  v120 = a6;
  v111 = a4;
  v107 = a3;
  v106 = a2;
  v129 = *MEMORY[0x24BDAC8D0];
  v9 = sub_22ABDE804();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  v109 = v11;
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB38);
  v100 = *(_QWORD *)(v101 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0();
  v105 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15950);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_0();
  v119 = v15;
  v121 = sub_22ABDE7E0();
  v16 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  OUTLINED_FUNCTION_87();
  v104 = v17;
  MEMORY[0x24BDAC7A8](v18);
  v118 = (char *)v92 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v116 = (char *)v92 - v21;
  v22 = sub_22ABDD0E8();
  v125 = *(_QWORD *)(v22 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_87();
  v108 = v24;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v92 - v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E7768);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = a1;
  v31 = (void *)sub_22ABDD070();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15958);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_22ABE8E30;
  v33 = (void *)*MEMORY[0x24BDBCC90];
  *(_QWORD *)(v32 + 32) = *MEMORY[0x24BDBCC90];
  v127 = 0;
  v34 = v33;
  v124 = v7;
  v35 = sub_22AAB5A1C((uint64_t)v31, v32, 5, (uint64_t)&v127, v7);

  v36 = v127;
  if (v35)
  {
    v103 = v10;
    v117 = v16;
    v95 = v9;
    v37 = sub_22ABDEFF0();
    v38 = v36;

    v39 = *(_QWORD *)(v37 + 16);
    v99 = v37;
    if (v39)
    {
      v110 = 0;
      v40 = 0;
      v41 = v37 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
      v42 = *(_QWORD *)(v125 + 72);
      v122 = 0;
      v123 = v42;
      v43 = *(void (**)(_QWORD, _QWORD, _QWORD))(v125 + 16);
      v93 = v111 + 1;
      v44 = __OFADD__(v111, 1);
      v94 = v44;
      v112 = MEMORY[0x24BEE4AF8];
      v115 = v43;
      while (1)
      {
        v43(v30, v41, v22);
        OUTLINED_FUNCTION_79_8((uint64_t)v30, 0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v22) == 1)
          goto LABEL_35;
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v27, v30, v22);
        sub_22ABDD0C4();
        v45 = (void *)sub_22ABDED2C();
        OUTLINED_FUNCTION_23();
        v35 = objc_msgSend(v124, sel_isReadableFileAtPath_, v45);

        if ((_DWORD)v35)
        {
          sub_22ABDD040();
          sub_22ABDE7C8();
          v35 = v119;
          sub_22ABDE7BC();
          v46 = v121;
          if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v121) == 1)
          {
            OUTLINED_FUNCTION_0_59();
            sub_22AAA82B8((uint64_t)v35);
            goto LABEL_25;
          }
          v48 = v35;
          v49 = v116;
          v35 = v117;
          (*(void (**)(char *, NSObject *, uint64_t))(v117 + 32))(v116, v48, v46);
          if ((sub_22ABDE7D4() & 1) == 0)
          {
            ((void (*)(char *, uint64_t))v35[1].isa)(v49, v46);
            OUTLINED_FUNCTION_0_59();
LABEL_25:
            v43 = v115;
            v47 = __OFADD__(v122++, 1);
            if (v47)
              goto LABEL_50;
            goto LABEL_26;
          }
          v92[1] = sub_22ABDD064();
          v98 = v50;
          v51 = v108;
          sub_22ABDD07C();
          v52 = sub_22ABDD064();
          v54 = v53;
          v97 = *(uint64_t (**)(uint64_t, uint64_t))(v125 + 8);
          v55 = v97(v51, v22);
          if (v94)
            goto LABEL_51;
          v96 = v92;
          v127 = v106;
          v128 = v107;
          MEMORY[0x24BDAC7A8](v55);
          v92[-2] = &v127;
          sub_22ABDEAEC();
          v56 = v114;
          v35 = sub_22AAA7D6C(v93, 1u, sub_22AAA8320, (uint64_t)&v92[-4], v52, v54);
          v114 = v56;
          OUTLINED_FUNCTION_3_8();
          isa = (uint64_t)v35[2].isa;
          if (isa <= v111)
          {
            swift_bridgeObjectRelease();
            v68 = v116;
            if ((v120 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_4_60();
              type metadata accessor for DatasetError();
              sub_22A9BED8C((unint64_t *)&qword_255B11498, (uint64_t (*)(uint64_t))type metadata accessor for DatasetError, (uint64_t)&protocol conformance descriptor for DatasetError);
              v114 = OUTLINED_FUNCTION_5_52();
              v89 = v88;
              v115(v88, v27, v22);
              v127 = 0;
              v128 = 0xE000000000000000;
              sub_22ABDF7A0();
              OUTLINED_FUNCTION_32_6();
              v126 = isa;
              sub_22ABDFD7C();
              sub_22ABDEDC8();
              swift_bridgeObjectRelease();
              sub_22ABDEDC8();
              swift_bridgeObjectRelease();
              v90 = (_QWORD *)(v89 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B114A0) + 48));
              sub_22ABDEDC8();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_32_6();
              v126 = v111;
              sub_22ABDFD7C();
              sub_22ABDEDC8();
              swift_bridgeObjectRelease();
              v91 = v128;
              *v90 = v127;
              v90[1] = v91;
              swift_storeEnumTagMultiPayload();
              OUTLINED_FUNCTION_36_23();
              OUTLINED_FUNCTION_6_70();
              return v97((uint64_t)v27, v22);
            }
            OUTLINED_FUNCTION_23();
            (*(void (**)(char *, uint64_t))(v117 + 8))(v68, v121);
            OUTLINED_FUNCTION_3_68();
            v47 = __OFADD__(v110++, 1);
            if (v47)
              goto LABEL_53;
            v43 = v115;
          }
          else
          {
            if (v111 < 0)
              goto LABEL_52;
            v58 = &v35[4 * v111];
            v59 = v58[5].isa;
            v96 = v58[4].isa;
            v60 = v58[7].isa;
            v92[0] = v58[6].isa;
            sub_22ABDEAEC();
            OUTLINED_FUNCTION_23();
            v96 = (_QWORD *)MEMORY[0x22E2E3028](v96, v59, v92[0], v60);
            v92[0] = v61;
            OUTLINED_FUNCTION_3_8();
            v62 = v105;
            sub_22ABDD088();
            OUTLINED_FUNCTION_23();
            v63 = (_QWORD *)(v62 + *(int *)(v101 + 36));
            v64 = v92[0];
            *v63 = v96;
            v63[1] = v64;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            {
              v65 = v112;
            }
            else
            {
              sub_22AA366D8();
              v65 = v69;
            }
            v43 = v115;
            v66 = *(_QWORD *)(v65 + 16);
            v35 = (v66 + 1);
            if (v66 >= *(_QWORD *)(v65 + 24) >> 1)
            {
              sub_22AA366D8();
              v65 = v70;
            }
            *(_QWORD *)(v65 + 16) = v35;
            v67 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
            v112 = v65;
            sub_22AAA833C(v105, v65 + v67 + *(_QWORD *)(v100 + 72) * v66);
            OUTLINED_FUNCTION_6_70();
            OUTLINED_FUNCTION_3_68();
          }
        }
        else
        {
          if ((v120 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_4_60();
            type metadata accessor for DatasetError();
            sub_22A9BED8C((unint64_t *)&qword_255B11498, (uint64_t (*)(uint64_t))type metadata accessor for DatasetError, (uint64_t)&protocol conformance descriptor for DatasetError);
            OUTLINED_FUNCTION_5_52();
            v43(v87, v27, v22);
            swift_storeEnumTagMultiPayload();
            OUTLINED_FUNCTION_36_23();
            return (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v27, v22);
          }
          OUTLINED_FUNCTION_0_59();
          v47 = __OFADD__(v40++, 1);
          if (v47)
          {
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
          }
        }
LABEL_26:
        v41 += v123;
        if (!--v39)
          goto LABEL_34;
      }
    }
    v110 = 0;
    v122 = 0;
    v40 = 0;
    v112 = MEMORY[0x24BEE4AF8];
LABEL_34:
    OUTLINED_FUNCTION_79_8((uint64_t)v30, 1);
LABEL_35:
    OUTLINED_FUNCTION_4_60();
    v73 = v109;
    sub_22ABDE7F8();
    v74 = v117;
    v75 = v103;
    v76 = v121;
    if (v40 >= 1)
    {
      sub_22ABDE7EC();
      v77 = OUTLINED_FUNCTION_10_43();
      if (os_log_type_enabled(v35, v77))
      {
        *(_DWORD *)OUTLINED_FUNCTION_4_12() = 134349056;
        v127 = (id)v40;
        OUTLINED_FUNCTION_8_51();
        OUTLINED_FUNCTION_16_43(&dword_22A999000, v35, v77, "Skipped %{public}ld files since they were not readable.");
        OUTLINED_FUNCTION_2_2();
      }

    }
    if (v122 >= 1)
    {
      v78 = v104;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v104, v113, v76);
      sub_22ABDE7EC();
      v79 = OUTLINED_FUNCTION_10_43();
      if (os_log_type_enabled(v35, v79))
      {
        v80 = OUTLINED_FUNCTION_4_12();
        v81 = (void *)OUTLINED_FUNCTION_4_12();
        v82 = v78;
        *(_DWORD *)v80 = 134349314;
        v126 = v122;
        v127 = v81;
        sub_22ABDF65C();
        *(_WORD *)(v80 + 12) = 2082;
        v125 = v80 + 14;
        sub_22A9BED8C(&qword_255B15960, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE6408]);
        v83 = v121;
        v84 = sub_22ABDFD7C();
        v126 = sub_22AAB5318(v84, v85, (uint64_t *)&v127);
        sub_22ABDF65C();
        OUTLINED_FUNCTION_3_8();
        (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v82, v83);
        _os_log_impl(&dword_22A999000, v35, v79, "Skipped %{public}ld files since they do not conform to type %{public}s.", (uint8_t *)v80, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_2_2();
      }

      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v78, v76);
    }
    if (v110 >= 1)
    {
      sub_22ABDE7EC();
      v86 = OUTLINED_FUNCTION_10_43();
      if (os_log_type_enabled(v35, v86))
      {
        *(_DWORD *)OUTLINED_FUNCTION_4_12() = 134349056;
        v127 = (id)v110;
        OUTLINED_FUNCTION_8_51();
        OUTLINED_FUNCTION_16_43(&dword_22A999000, v35, v86, "Skipped %{public}ld files since they do not have the correct name format.");
        OUTLINED_FUNCTION_2_2();
      }

    }
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v73, v95);
    return v112;
  }
  else
  {
    v71 = v127;
    sub_22ABDD004();

    return OUTLINED_FUNCTION_36_23();
  }
}

uint64_t sub_22AAA7D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_22ABDFF68() & 1;
}

uint64_t sub_22AAA7D6C(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_38;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v42 = v10 + 16;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_22AAA81B4(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v10 + 16);
    sub_22ABDEAEC();
    swift_release();
    goto LABEL_36;
  }
  v41 = a1;
  v48 = 4 * v12;
  v13 = MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_22ABDEE34();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v14 = sub_22ABDEDBC();
      goto LABEL_21;
    }
    v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14)
        goto LABEL_38;
      v21 = sub_22ABDEE4C();
      v43 = v23;
      v44 = v22;
      v45 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AA366EC();
        v13 = v28;
      }
      v25 = *(_QWORD *)(v13 + 16);
      if (v25 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_22AA366EC();
        v13 = v29;
      }
      *(_QWORD *)(v13 + 16) = v25 + 1;
      v26 = (_QWORD *)(v13 + 32 * v25);
      v26[4] = v21;
      v26[5] = v45;
      v26[6] = v44;
      v26[7] = v43;
      *(_QWORD *)v42 = v13;
    }
    v27 = sub_22ABDEDBC();
    v14 = v27;
    *(_QWORD *)(v47 + 16) = v27;
    if ((v20 & 1) == 0 && *(_QWORD *)(v13 + 16) == v41)
      break;
    v15 = v27;
    v16 = v27;
LABEL_21:
    if (v48 == v14 >> 14)
      goto LABEL_30;
  }
  v16 = v27;
  v15 = v27;
LABEL_30:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (v48 < v16 >> 14)
  {
LABEL_38:
    result = sub_22ABDFAD0();
    __break(1u);
    return result;
  }
  v31 = sub_22ABDEE4C();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRelease();
  sub_22AA93BB8();
  v38 = *(_QWORD *)(*(_QWORD *)v42 + 16);
  sub_22AA93C64(v38);
  v13 = *(_QWORD *)v42;
  *(_QWORD *)(v13 + 16) = v38 + 1;
  v39 = (_QWORD *)(v13 + 32 * v38);
  v39[4] = v31;
  v39[5] = v33;
  v39[6] = v35;
  v39[7] = v37;
  *(_QWORD *)v42 = v13;
LABEL_35:
  sub_22ABDEAEC();
  swift_release();
LABEL_36:
  swift_release();
  return v13;
}

uint64_t sub_22AAA81B4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_22ABDEE4C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    sub_22AA93BB8();
    v14 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
    sub_22AA93C64(v14);
    v15 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)(v15 + 16) = v14 + 1;
    v16 = (_QWORD *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_22ABDFAD0();
  __break(1u);
  return result;
}

uint64_t sub_22AAA82B8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AAA82F8(uint64_t *a1, uint64_t *a2)
{
  return sub_22AAA7D2C(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_22AAA8320(uint64_t *a1)
{
  uint64_t v1;

  return sub_22AAA82F8(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_22AAA833C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AAA8384()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22AAA83A8()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_0_59()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 352))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_60()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_52()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_6_70()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 192) + 8))(*(_QWORD *)(v0 - 200), *(_QWORD *)(v0 - 160));
}

uint64_t OUTLINED_FUNCTION_8_51()
{
  return sub_22ABDF65C();
}

uint64_t OUTLINED_FUNCTION_10_43()
{
  return sub_22ABDF4D0();
}

void OUTLINED_FUNCTION_16_43(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.preprocessor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.preprocessor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*PreprocessingUpdatableSupervisedTabularEstimator.preprocessor.modify())()
{
  return nullsub_1;
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.estimator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*PreprocessingUpdatableSupervisedTabularEstimator.estimator.modify())()
{
  return nullsub_1;
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.annotationColumnID.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32))(*(_QWORD *)(a1 + 24));
}

void sub_22AAA84DC()
{
  type metadata accessor for PreprocessingUpdatableSupervisedTabularEstimator();
}

uint64_t sub_22AAA850C(uint64_t a1)
{
  return PreprocessingUpdatableSupervisedTabularEstimator.annotationColumnID.getter(a1);
}

void sub_22AAA8524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a4 + a3 - 32);
  v6 = *(_QWORD *)(a4 + a3 - 8);
  v11 = *(_OWORD *)(a4 + a3 - 24);
  swift_getAssociatedTypeWitness();
  v7 = sub_22ABDD3C4();
  v8 = MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, double))(v9 + 16))((char *)&v11 - v10, a1, v8);
  v12 = v5;
  v13 = v11;
  v14 = v6;
  type metadata accessor for PreprocessingUpdatableSupervisedTabularEstimator();
}

uint64_t sub_22AAA85DC(uint64_t a1)
{
  uint64_t v1;

  return PreprocessingUpdatableSupervisedTabularEstimator.annotationColumnID.setter(v1, a1);
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.annotationColumnID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8);
  v4 = *(_QWORD *)(a2 + 24);
  swift_getAssociatedTypeWitness();
  v5 = OUTLINED_FUNCTION_33_5();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - v8, a1, v5, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 40))(v9, v4, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

void (*PreprocessingUpdatableSupervisedTabularEstimator.annotationColumnID.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  swift_getAssociatedTypeWitness();
  v6 = OUTLINED_FUNCTION_33_5();
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v5[5] = malloc(v8);
  PreprocessingUpdatableSupervisedTabularEstimator.annotationColumnID.getter(a2);
  return sub_22AAA8780;
}

void sub_22AAA8780(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v6 = v2[3];
    v7 = *v2;
    OUTLINED_FUNCTION_27_8((*a1)[4], (uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    PreprocessingUpdatableSupervisedTabularEstimator.annotationColumnID.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    PreprocessingUpdatableSupervisedTabularEstimator.annotationColumnID.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

void PreprocessingUpdatableSupervisedTabularEstimator.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for PreprocessingUpdatableSupervisedTabularEstimator();
}

uint64_t sub_22AAA886C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_79(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

void type metadata accessor for PreprocessingUpdatableSupervisedTabularEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void PreprocessingUpdatableSupervisedTabularEstimator.makeTransformer()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  v11 = *(_QWORD *)(v10 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = *(_QWORD *)(a1 + 16);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_33();
  v17 = v16 - v15;
  OUTLINED_FUNCTION_27_8(v16 - v15, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  OUTLINED_FUNCTION_79(v9, v3 + *(int *)(a1 + 52), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v5, v11);
  OUTLINED_FUNCTION_50_21(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  swift_getAssociatedConformanceWitness();
  ComposedTabularTransformer.init(_:_:)(v17, v13, a2);
}

void sub_22AAA89FC()
{
  OUTLINED_FUNCTION_3();
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.preprocessed(from:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = *(_QWORD *)(a5 + 16);
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAA8A54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t);

  v1 = v0[6];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[9] + 16))(v0[10], v0[7], v0[8]);
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8);
  v3 = (_QWORD *)OUTLINED_FUNCTION_17_27();
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_22AAA8ACC;
  return v5(v0[2], v0[3], v0[4], v0[5], v0[8], v2);
}

uint64_t sub_22AAA8ACC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_97();
  v2 = *(_QWORD *)(*v1 + 72);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_43_7();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_7_45(*(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.fitted(toPreprocessed:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v9 = a6[2];
  v7[9] = v9;
  v7[10] = *(_QWORD *)(v9 - 8);
  v7[11] = OUTLINED_FUNCTION_0_0();
  v10 = a6[3];
  v7[12] = v10;
  v7[13] = *(_QWORD *)(v10 - 8);
  v7[14] = OUTLINED_FUNCTION_0_0();
  v7[15] = *(_QWORD *)(a6[5] + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[16] = AssociatedTypeWitness;
  v7[17] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAA8C04()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[13] + 16))(v0[14], v0[8] + *(int *)(v0[7] + 52), v0[12]);
  v1 = (_QWORD *)OUTLINED_FUNCTION_25();
  v0[20] = v1;
  *v1 = v0;
  v1[1] = sub_22AAA8C7C;
  return v3(v0[19], v0[3], v0[4], v0[5], v0[6], v0[12], v0[15]);
}

uint64_t sub_22AAA8C7C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_17_1();
  v3 = *(_QWORD *)(v2 + 104);
  *v4 = *v1;
  *(_QWORD *)(v2 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AAA8CE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[18];
  v2 = v0[19];
  v3 = v0[17];
  v4 = v0[11];
  v5 = v0[9];
  v6 = v0[2];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[10] + 16))(v4, v0[8], v5);
  OUTLINED_FUNCTION_79(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  swift_getAssociatedConformanceWitness();
  ComposedTabularTransformer.init(_:_:)(v4, v5, v6);
}

uint64_t sub_22AAA8D90()
{
  uint64_t v0;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAA8DD0()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.fitted(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7[6] = a6;
  v7[7] = v6;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0ECF8);
  v7[8] = OUTLINED_FUNCTION_77_4();
  v7[9] = OUTLINED_FUNCTION_89_5();
  v7[10] = OUTLINED_FUNCTION_89_5();
  v8 = sub_22ABDD2EC();
  v7[11] = v8;
  v7[12] = *(_QWORD *)(v8 - 8);
  v7[13] = OUTLINED_FUNCTION_77_4();
  v7[14] = OUTLINED_FUNCTION_89_5();
  v9 = (_QWORD *)swift_task_alloc();
  v7[15] = v9;
  v10 = OUTLINED_FUNCTION_15_31(v9);
  return OUTLINED_FUNCTION_9_52(v10, v11, v12, v13, v14);
}

uint64_t sub_22AAA8ED0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAA8F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  OUTLINED_FUNCTION_97();
  v1 = *(_QWORD *)(v0 + 128);
  sub_22ABDF1DC();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
    OUTLINED_FUNCTION_40_18();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    return OUTLINED_FUNCTION_7_45(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 72);
    sub_22A9BCAEC(*(_QWORD *)(v0 + 24), v4);
    if (__swift_getEnumTagSinglePayload(v4, 1, v3) == 1)
    {
      v5 = *(_QWORD *)(v0 + 80);
      v6 = *(_QWORD *)(v0 + 88);
      sub_22A9BCB34(*(_QWORD *)(v0 + 72));
      __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v7;
      v8 = OUTLINED_FUNCTION_27_33(v7);
      return PreprocessingUpdatableSupervisedTabularEstimator.fitted(toPreprocessed:validateOn:eventHandler:)(v8, v9, v10, v11, v12, v13);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 88));
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v14;
      *v14 = v0;
      v14[1] = sub_22AAA905C;
      return PreprocessingUpdatableSupervisedTabularEstimator.preprocessed(from:eventHandler:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
    }
  }
}

uint64_t sub_22AAA905C()
{
  OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAA9098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  __swift_storeEnumTagSinglePayload(v3, 0, 1, *(_QWORD *)(v0 + 88));
  sub_22A9BCB74(v3, v2);
  sub_22ABDF1DC();
  OUTLINED_FUNCTION_49_15();
  if (v1)
  {
    sub_22A9BCB34(*(_QWORD *)(v0 + 80));
    OUTLINED_FUNCTION_49_15();
    OUTLINED_FUNCTION_40_18();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    return OUTLINED_FUNCTION_18_47(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v5;
    v6 = OUTLINED_FUNCTION_27_33(v5);
    return PreprocessingUpdatableSupervisedTabularEstimator.fitted(toPreprocessed:validateOn:eventHandler:)(v6, v7, v8, v9, v10, v11);
  }
}

uint64_t sub_22AAA9174()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAA91C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  sub_22A9BCB34(*(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_50_21(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_18_47(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAA9238()
{
  uint64_t v0;

  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_11_53();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return OUTLINED_FUNCTION_7_45(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAA9274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_97();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 96) + 8);
  v3(*(_QWORD *)(v0 + 104), v2);
  v3(v1, v2);
  OUTLINED_FUNCTION_11_53();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return OUTLINED_FUNCTION_7_45(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAA92D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_97();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  sub_22A9BCB34(*(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  OUTLINED_FUNCTION_11_53();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return OUTLINED_FUNCTION_7_45(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.update(_:withPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[10] = a5;
  v6[11] = v5;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v7 = *(_QWORD *)(a5 + 24);
  v6[12] = v7;
  v6[13] = *(_QWORD *)(v7 - 8);
  v6[14] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AAA9378()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_16_31(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104));
  OUTLINED_FUNCTION_22_29();
  v1 = OUTLINED_FUNCTION_23_29();
  OUTLINED_FUNCTION_14_34(v1);
}

uint64_t sub_22AAA93E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v13 = v12 + *(int *)(a1 + 52);
  v14 = (_QWORD *)OUTLINED_FUNCTION_17_27();
  v11[15] = (uint64_t)v14;
  *v14 = v11;
  v14[1] = sub_22AAA9434;
  return OUTLINED_FUNCTION_18_32(v13, v11[7], v11[8], v11[9], v11[12], v10, a10);
}

uint64_t sub_22AAA9434()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_97();
  v2 = *(_QWORD *)(*v1 + 104);
  v3 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_43_7();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_7_45(*(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t PreprocessingUpdatableSupervisedTabularEstimator.update(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[6] = a1;
  v7 = *(_QWORD *)(a5 + 24);
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = OUTLINED_FUNCTION_0_0();
  v8 = sub_22ABDD2EC();
  v6[14] = v8;
  v6[15] = *(_QWORD *)(v8 - 8);
  v6[16] = OUTLINED_FUNCTION_0_0();
  v9 = (_QWORD *)swift_task_alloc();
  v6[17] = v9;
  v10 = OUTLINED_FUNCTION_15_31(v9);
  return OUTLINED_FUNCTION_9_52(v10, v11, v12, v13, v14);
}

uint64_t sub_22AAA953C()
{
  OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAA9578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 144);
  sub_22ABDF1DC();
  if (!v1)
  {
    OUTLINED_FUNCTION_16_31(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 96));
    OUTLINED_FUNCTION_22_29();
    v3 = OUTLINED_FUNCTION_23_29();
    OUTLINED_FUNCTION_14_34(v3);
  }
  OUTLINED_FUNCTION_39_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAA962C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v12 = v11 + *(int *)(a1 + 52);
  v13 = (_QWORD *)OUTLINED_FUNCTION_25();
  v10[19] = (uint64_t)v13;
  *v13 = v10;
  v13[1] = sub_22AAA9684;
  return OUTLINED_FUNCTION_18_32(v12, v10[16], v10[7], v10[8], v10[11], v9, a9);
}

uint64_t sub_22AAA9684()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[12] + 8))(v2[13], v2[11]);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAA96F0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAA9730()
{
  uint64_t v0;

  OUTLINED_FUNCTION_39_24();
  OUTLINED_FUNCTION_33_20();
  OUTLINED_FUNCTION_11_3();
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
}

void PreprocessingUpdatableSupervisedTabularEstimator.encode(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTabularTransformer();
}

uint64_t sub_22AAA97FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 64))(v2 + *(int *)(a1 + 52), v1, v4, v3);
}

void PreprocessingUpdatableSupervisedTabularEstimator.decode(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v10 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v11 = v5;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_27_10();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v4, v10);
    OUTLINED_FUNCTION_37_5();
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_21_32(v11, a3);
  }
  OUTLINED_FUNCTION_16();
}

void PreprocessingUpdatableSupervisedTabularEstimator.encodeWithOptimizer(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTabularTransformer();
}

uint64_t sub_22AAA99F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32))(v1 + *(int *)(a1 + 52), v5, v3, v2);
}

void PreprocessingUpdatableSupervisedTabularEstimator.decodeWithOptimizer(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  v9 = v5;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_67_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_27_10();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v4, v11);
    OUTLINED_FUNCTION_37_5();
    OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_21_32(v9, a3);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAA9B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9B72C0;
  return PreprocessingUpdatableSupervisedTabularEstimator.update(_:with:eventHandler:)(a1, a2, a3, a4, a5);
}

void sub_22AAA9BCC()
{
  PreprocessingUpdatableSupervisedTabularEstimator.encodeWithOptimizer(_:to:)();
}

void sub_22AAA9BE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PreprocessingUpdatableSupervisedTabularEstimator.decodeWithOptimizer(from:)(a1, a2, a3);
}

void (*sub_22AAA9BFC(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = PreprocessingUpdatableSupervisedTabularEstimator.annotationColumnID.modify(v4, a2);
  return sub_22A9B4798;
}

uint64_t sub_22AAA9C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_22A9B785C;
  return PreprocessingUpdatableSupervisedTabularEstimator.fitted(to:validateOn:eventHandler:)(a1, a2, a3, a4, a5, a6);
}

void sub_22AAA9CD8()
{
  PreprocessingUpdatableSupervisedTabularEstimator.encode(_:to:)();
}

void sub_22AAA9CEC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PreprocessingUpdatableSupervisedTabularEstimator.decode(from:)(a1, a2, a3);
}

void sub_22AAA9DC0()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AAA9DCC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessingUpdatableSupervisedTabularEstimator<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AAA9E00()
{
  return 32;
}

__n128 sub_22AAA9E0C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_22AAA9E18(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AAA9EF4 + 4 * byte_22ABF6BA0[v21 - 1]))();
}

void sub_22AAA9F68(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t OUTLINED_FUNCTION_9_52(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return PreprocessingUpdatableSupervisedTabularEstimator.preprocessed(from:eventHandler:)(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_10_44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 144) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_53()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_18_47(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_27_33(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_39_24()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[15] + 8))(v0[16], v0[14]);
}

uint64_t OUTLINED_FUNCTION_40_18()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_49_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_50_21@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_22AAAA204()
{
  uint64_t v0;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_5_53();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_6_26();
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_50_9();
    OUTLINED_FUNCTION_10_45();
    sub_22ABDDC7C();
    return OUTLINED_FUNCTION_0_60();
  }
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_50_9();
    OUTLINED_FUNCTION_10_45();
    sub_22ABDDC70();
    return OUTLINED_FUNCTION_0_60();
  }
  type metadata accessor for SerializationError();
  sub_22A9D395C();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_2_63();
  OUTLINED_FUNCTION_4_61();
  swift_getMetatypeMetadata();
  OUTLINED_FUNCTION_11_54();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_56();
  v2 = OUTLINED_FUNCTION_3_69();
  return swift_willThrow(v2);
}

uint64_t sub_22AAAA314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int *v3;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_5_53();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_6_26();
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_50_9();
    OUTLINED_FUNCTION_10_45();
    sub_22ABDDC04();
    v3 = (unsigned int *)MEMORY[0x24BE62578];
LABEL_5:
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v0, *v3, v1);
    return OUTLINED_FUNCTION_0_60();
  }
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_50_9();
    OUTLINED_FUNCTION_10_45();
    sub_22ABDDB80();
    v3 = (unsigned int *)MEMORY[0x24BE62560];
    goto LABEL_5;
  }
  type metadata accessor for SerializationError();
  sub_22A9D395C();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_2_63();
  OUTLINED_FUNCTION_4_61();
  swift_getMetatypeMetadata();
  OUTLINED_FUNCTION_11_54();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_56();
  v5 = OUTLINED_FUNCTION_3_69();
  return swift_willThrow(v5);
}

uint64_t sub_22AAAA448@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  swift_getAssociatedTypeWitness();
  v6 = swift_dynamicCastMetatype();
  if (v6)
  {
    MEMORY[0x24BDAC7A8](v6);
    OUTLINED_FUNCTION_6_71();
    *a3 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AAAA834, v7, a1, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], a2, MEMORY[0x24BEE40A8], v8);
    v9 = *MEMORY[0x24BE62A88];
    v10 = sub_22ABDDF4C();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(a3, v9, v10);
  }
  else
  {
    v12 = swift_dynamicCastMetatype();
    if (v12)
    {
      MEMORY[0x24BDAC7A8](v12);
      OUTLINED_FUNCTION_6_71();
      *a3 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AAAA81C, v13, a1, MEMORY[0x24BEE1768], MEMORY[0x24BEE4078], a2, MEMORY[0x24BEE40A8], v14);
      v15 = *MEMORY[0x24BE62A80];
      v16 = sub_22ABDDF4C();
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(a3, v15, v16);
    }
    else
    {
      type metadata accessor for SerializationError();
      sub_22A9D395C();
      OUTLINED_FUNCTION_53();
      v18 = v17;
      sub_22ABDF7A0();
      sub_22ABDEDC8();
      swift_getMetatypeMetadata();
      OUTLINED_FUNCTION_11_54();
      sub_22ABDEDC8();
      swift_bridgeObjectRelease();
      sub_22ABDEDC8();
      *v18 = 0;
      v18[1] = 0xE000000000000000;
      v19 = swift_storeEnumTagMultiPayload();
      return swift_willThrow(v19);
    }
  }
}

uint64_t sub_22AAAA6A4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v7 - v5, a1, AssociatedTypeWitness, v3);
  return swift_dynamicCast();
}

uint64_t sub_22AAAA760(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v7 - v5, a1, AssociatedTypeWitness, v3);
  return swift_dynamicCast();
}

uint64_t sub_22AAAA81C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_47();
  return sub_22AAAA760(v0);
}

uint64_t sub_22AAAA834()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_47();
  return sub_22AAAA6A4(v0);
}

uint64_t OUTLINED_FUNCTION_0_60()
{
  return sub_22ABDDE2C();
}

uint64_t OUTLINED_FUNCTION_2_63()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 80) = 0;
  *(_QWORD *)(v0 - 72) = 0xE000000000000000;
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_3_69()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 - 72);
  *v0 = *(_QWORD *)(v1 - 80);
  v0[1] = v2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_4_61()
{
  return sub_22ABDEDC8();
}

uint64_t OUTLINED_FUNCTION_5_53()
{
  return sub_22ABDDC88();
}

uint64_t OUTLINED_FUNCTION_10_45()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_11_54()
{
  return sub_22ABE0304();
}

void __swiftcall FullyConnectedNetworkConfiguration.init()(CreateMLComponents::FullyConnectedNetworkConfiguration *__return_ptr retstr)
{
  retstr->hiddenUnitCounts._rawValue = &unk_24F4B9208;
  retstr->learningRate = 0.001;
  retstr->maximumIterations = 1000;
  retstr->dropoutProbability = 0.2;
  retstr->batchSize = 16;
  retstr->earlyStoppingTolerance = 0.01;
  *(_OWORD *)&retstr->earlyStopIterationCount = xmmword_22ABF4D40;
}

uint64_t FullyConnectedNetworkConfiguration.hiddenUnitCounts.getter()
{
  return sub_22ABDEAEC();
}

uint64_t FullyConnectedNetworkConfiguration.hiddenUnitCounts.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FullyConnectedNetworkConfiguration.hiddenUnitCounts.modify())()
{
  return nullsub_1;
}

float FullyConnectedNetworkConfiguration.learningRate.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

void FullyConnectedNetworkConfiguration.learningRate.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

uint64_t (*FullyConnectedNetworkConfiguration.learningRate.modify())()
{
  return nullsub_1;
}

uint64_t FullyConnectedNetworkConfiguration.maximumIterations.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t FullyConnectedNetworkConfiguration.maximumIterations.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*FullyConnectedNetworkConfiguration.maximumIterations.modify())()
{
  return nullsub_1;
}

float FullyConnectedNetworkConfiguration.dropoutProbability.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 24);
}

void FullyConnectedNetworkConfiguration.dropoutProbability.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 24) = a1;
}

uint64_t (*FullyConnectedNetworkConfiguration.dropoutProbability.modify())()
{
  return nullsub_1;
}

uint64_t FullyConnectedNetworkConfiguration.batchSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t FullyConnectedNetworkConfiguration.batchSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*FullyConnectedNetworkConfiguration.batchSize.modify())()
{
  return nullsub_1;
}

double FullyConnectedNetworkConfiguration.earlyStoppingTolerance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void FullyConnectedNetworkConfiguration.earlyStoppingTolerance.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*FullyConnectedNetworkConfiguration.earlyStoppingTolerance.modify())()
{
  return nullsub_1;
}

uint64_t FullyConnectedNetworkConfiguration.earlyStopIterationCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t FullyConnectedNetworkConfiguration.earlyStopIterationCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*FullyConnectedNetworkConfiguration.earlyStopIterationCount.modify())()
{
  return nullsub_1;
}

uint64_t FullyConnectedNetworkConfiguration.randomSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t FullyConnectedNetworkConfiguration.randomSeed.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t (*FullyConnectedNetworkConfiguration.randomSeed.modify())()
{
  return nullsub_1;
}

uint64_t FullyConnectedNetworkConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t *v1;

  sub_22AA48BCC(a1, *v1);
  sub_22ABE0268();
  sub_22ABE0250();
  sub_22ABE0268();
  sub_22ABE0250();
  sub_22ABE0274();
  sub_22ABE0250();
  return sub_22ABE0250();
}

BOOL static FullyConnectedNetworkConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float v2;
  uint64_t v3;
  float v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  uint64_t v10;
  float v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BOOL8 result;

  v2 = *(float *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(float *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(double *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v9 = *(float *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(float *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(double *)(a2 + 40);
  v15 = *(_QWORD *)(a2 + 48);
  v14 = *(_QWORD *)(a2 + 56);
  v16 = sub_22A99EB90(*(_QWORD **)a1, *(_QWORD **)a2);
  result = 0;
  if ((v16 & 1) != 0 && v2 == v9 && v3 == v10 && v4 == v11 && v5 == v12 && v6 == v13 && v8 == v15)
    return v7 == v14;
  return result;
}

uint64_t sub_22AAAABD8(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v8;

  if (a1 == 0xD000000000000010 && a2 == 0x800000022ABE4D20 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x676E696E7261656CLL && a2 == 0xEC00000065746152;
    if (v5 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x800000022ABE4D40 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000022ABE0DB0 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v6 = a1 == 0x7A69536863746162 && a2 == 0xE900000000000065;
      if (v6 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x800000022ABE36A0 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000017 && a2 == 0x800000022ABE4D60 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0x65536D6F646E6172 && a2 == 0xEA00000000006465)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else
      {
        v8 = sub_22ABDFF68();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 7;
        else
          return 8;
      }
    }
  }
}

uint64_t sub_22AAAAF18(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_22AAAAF50 + 4 * byte_22ABF6C50[a1]))(0xD000000000000010, 0x800000022ABE4D20);
}

uint64_t sub_22AAAAF50()
{
  return 0x676E696E7261656CLL;
}

uint64_t sub_22AAAAF70(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_22AAAAFD4()
{
  return 0x65536D6F646E6172;
}

uint64_t sub_22AAAAFF0()
{
  unsigned __int8 *v0;

  return sub_22AAAAF18(*v0);
}

uint64_t sub_22AAAAFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AAAABD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AAAB01C()
{
  sub_22AAAB5BC();
  return sub_22ABE02EC();
}

uint64_t sub_22AAAB044()
{
  sub_22AAAB5BC();
  return sub_22ABE02F8();
}

void FullyConnectedNetworkConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[4];
  char v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15A70);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[2];
  v11[2] = v1[4];
  v11[3] = v9;
  v10 = v1[6];
  v11[0] = v1[7];
  v11[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AAAB5BC();
  sub_22ABE02B0();
  v13 = v8;
  v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8);
  sub_22AAAB5F8(&qword_2540E85E0, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
  sub_22ABDFD4C();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    OUTLINED_FUNCTION_10_15();
    OUTLINED_FUNCTION_6_72(2);
    OUTLINED_FUNCTION_63();
    LOBYTE(v13) = 3;
    OUTLINED_FUNCTION_10_15();
    OUTLINED_FUNCTION_6_72(4);
    OUTLINED_FUNCTION_63();
    LOBYTE(v13) = 5;
    sub_22ABDFD1C();
    OUTLINED_FUNCTION_6_72(6);
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_6_72(7);
    OUTLINED_FUNCTION_63();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_10_19();
}

uint64_t FullyConnectedNetworkConfiguration.hashValue.getter()
{
  uint64_t *v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[72];
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v1 = *((_DWORD *)v0 + 2);
  v2 = v0[2];
  v3 = *((_DWORD *)v0 + 6);
  v4 = v0[4];
  v5 = v0[5];
  v8 = *v0;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = *((_OWORD *)v0 + 3);
  sub_22ABE0244();
  FullyConnectedNetworkConfiguration.hash(into:)((uint64_t)v7);
  return sub_22ABE0280();
}

void FullyConnectedNetworkConfiguration.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15A80);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AAAB5BC();
  sub_22ABE0298();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8);
    sub_22AAAB5F8(&qword_2540E85E8, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
    sub_22ABDFC8C();
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_4_62(1);
    v7 = v6;
    v8 = OUTLINED_FUNCTION_0_61(2);
    OUTLINED_FUNCTION_4_62(3);
    v10 = v9;
    v15 = OUTLINED_FUNCTION_0_61(4);
    sub_22ABDFC5C();
    v12 = v11;
    v14 = OUTLINED_FUNCTION_0_61(6);
    v13 = OUTLINED_FUNCTION_0_61(7);
    OUTLINED_FUNCTION_13_51();
    *(_QWORD *)a2 = v16;
    *(_DWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v8;
    *(_DWORD *)(a2 + 24) = v10;
    *(_QWORD *)(a2 + 32) = v15;
    *(_QWORD *)(a2 + 40) = v12;
    *(_QWORD *)(a2 + 48) = v14;
    *(_QWORD *)(a2 + 56) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_19();
}

uint64_t sub_22AAAB51C()
{
  uint64_t *v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[72];
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v1 = *((_DWORD *)v0 + 2);
  v2 = v0[2];
  v3 = *((_DWORD *)v0 + 6);
  v4 = v0[4];
  v5 = v0[5];
  v8 = *v0;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = *((_OWORD *)v0 + 3);
  sub_22ABE0244();
  FullyConnectedNetworkConfiguration.hash(into:)((uint64_t)v7);
  return sub_22ABE0280();
}

void sub_22AAAB590(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  FullyConnectedNetworkConfiguration.init(from:)(a1, a2);
}

void sub_22AAAB5A4(_QWORD *a1)
{
  FullyConnectedNetworkConfiguration.encode(to:)(a1);
}

unint64_t sub_22AAAB5BC()
{
  unint64_t result;

  result = qword_255B15A78;
  if (!qword_255B15A78)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6E28, &type metadata for FullyConnectedNetworkConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15A78);
  }
  return result;
}

uint64_t sub_22AAAB5F8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E85D8);
    v8 = a2;
    result = MEMORY[0x22E2E4D80](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22AAAB65C()
{
  unint64_t result;

  result = qword_255B15A88;
  if (!qword_255B15A88)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkConfiguration, &type metadata for FullyConnectedNetworkConfiguration);
    atomic_store(result, (unint64_t *)&qword_255B15A88);
  }
  return result;
}

uint64_t initializeWithCopy for FullyConnectedNetworkConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  sub_22ABDEAEC();
  return a1;
}

uint64_t assignWithCopy for FullyConnectedNetworkConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for FullyConnectedNetworkConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FullyConnectedNetworkConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FullyConnectedNetworkConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FullyConnectedNetworkConfiguration()
{
  return &type metadata for FullyConnectedNetworkConfiguration;
}

uint64_t storeEnumTagSinglePayload for FullyConnectedNetworkConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22AAAB8B0 + 4 * byte_22ABF6C5D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22AAAB8E4 + 4 * byte_22ABF6C58[v4]))();
}

uint64_t sub_22AAAB8E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAAB8EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AAAB8F4);
  return result;
}

uint64_t sub_22AAAB900(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AAAB908);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22AAAB90C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAAB914(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FullyConnectedNetworkConfiguration.CodingKeys()
{
  return &type metadata for FullyConnectedNetworkConfiguration.CodingKeys;
}

unint64_t sub_22AAAB934()
{
  unint64_t result;

  result = qword_255B15A90;
  if (!qword_255B15A90)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6E00, &type metadata for FullyConnectedNetworkConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15A90);
  }
  return result;
}

unint64_t sub_22AAAB974()
{
  unint64_t result;

  result = qword_255B15A98;
  if (!qword_255B15A98)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6D70, &type metadata for FullyConnectedNetworkConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15A98);
  }
  return result;
}

unint64_t sub_22AAAB9B4()
{
  unint64_t result;

  result = qword_255B15AA0;
  if (!qword_255B15AA0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6D98, &type metadata for FullyConnectedNetworkConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15AA0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_61@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
  return sub_22ABDFC74();
}

uint64_t OUTLINED_FUNCTION_4_62@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
  return sub_22ABDFC68();
}

void OUTLINED_FUNCTION_6_72(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
}

uint64_t sub_22AAABA2C@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  sub_22ABDF7A0();
  swift_bridgeObjectRelease();
  sub_22ABE0304();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  sub_22AAABE2C(a2);
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
  *a3 = a1;
  sub_22ABDEAEC();
  sub_22ABDF824();
  v6 = *MEMORY[0x24BEE26D0];
  v7 = sub_22ABDF830();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a3, v6, v7);
}

uint64_t sub_22AAABB84()
{
  sub_22ABDFD7C();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  return 0x207865646E49;
}

uint64_t sub_22AAABC00(uint64_t a1, uint64_t a2)
{
  return nullsub_1(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 - 8));
}

uint64_t sub_22AAABC18()
{
  return sub_22ABDFD7C();
}

uint64_t sub_22AAABC60()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22ABDEAEC();
  return v1;
}

void sub_22AAABC8C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_22AAABC0C();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
}

uint64_t sub_22AAABCBC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_22AAABCC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_22AAABC18();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_22AAABCF4()
{
  sub_22A9E7C90();
  return sub_22ABE02EC();
}

uint64_t sub_22AAABD1C()
{
  sub_22A9E7C90();
  return sub_22ABE02F8();
}

uint64_t sub_22AAABD44()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  objc_msgSend(v1, sel_setFormatOptions_, 1907);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15B48);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v0 + 16) = v2;
  return v0;
}

uint64_t sub_22AAABDB0()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BlobJSONDateFormatter()
{
  return objc_opt_self();
}

uint64_t sub_22AAABDF4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for BlobJSONDateFormatter();
  v0 = swift_allocObject();
  result = sub_22AAABD44();
  qword_255B47DA8 = v0;
  return result;
}

uint64_t sub_22AAABE2C(_QWORD *a1)
{
  void *v3;
  _BYTE v4[32];

  sub_22A9E7618((uint64_t)a1, (uint64_t)v4);
  sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8620);
  if (swift_dynamicCast())
  {

    return 0x76206C6C756E2061;
  }
  else
  {
    sub_22A9E7618((uint64_t)a1, (uint64_t)v4);
    sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8628);
    if (swift_dynamicCast())
    {

      return 0x7265626D756E2061;
    }
    else
    {
      sub_22A9E7618((uint64_t)a1, (uint64_t)v4);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        return 0x676E697274732061;
      }
      else
      {
        sub_22A9E7618((uint64_t)a1, (uint64_t)v4);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F0);
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          return 0x7961727261206E61;
        }
        else
        {
          sub_22A9E7618((uint64_t)a1, (uint64_t)v4);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8598);
          if (swift_dynamicCast())
          {
            swift_bridgeObjectRelease();
            return 0x6F69746369642061;
          }
          else
          {
            __swift_project_boxed_opaque_existential_1(a1, a1[3]);
            swift_getDynamicType();
            return sub_22ABE0304();
          }
        }
      }
    }
  }
}

uint64_t assignWithCopy for _JSONKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for _JSONKey()
{
  return &type metadata for _JSONKey;
}

unint64_t sub_22AAAC0C8()
{
  unint64_t result;

  result = qword_2540E8498;
  if (!qword_2540E8498)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6F70, &type metadata for _JSONKey);
    atomic_store(result, (unint64_t *)&qword_2540E8498);
  }
  return result;
}

unint64_t sub_22AAAC108()
{
  unint64_t result;

  result = qword_2540E8490;
  if (!qword_2540E8490)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF6F98, &type metadata for _JSONKey);
    atomic_store(result, (unint64_t *)&qword_2540E8490);
  }
  return result;
}

char *sub_22AAAC144(char *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  id v27;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  objc_class *ObjectType;
  uint64_t v36;
  char v37[16];
  objc_super v38;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_22ABDF4F4();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v6 = v5 - v4;
  sub_22ABDF4DC();
  v7 = (void (*)(uint64_t))MEMORY[0x24BEE5688];
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_23_1();
  sub_22ABDE9C0();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_33();
  v29 = a1[1];
  v31 = *a1;
  v32 = a1[2];
  v10 = *((_QWORD *)a1 + 1);
  *(_QWORD *)&v1[OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_task] = 0;
  v30 = OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_queue;
  sub_22A9BEDCC(0, (unint64_t *)&qword_255B15CB0);
  v11 = v1;
  sub_22ABDE9B4();
  *(_QWORD *)v37 = MEMORY[0x24BEE4AF8];
  sub_22AAAF38C(&qword_255B15CB8, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CC0);
  sub_22AA48E6C(&qword_255B15CC8, &qword_255B15CC0);
  sub_22ABDF704();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 104))(v6, *MEMORY[0x24BEE5750], v34);
  *(_QWORD *)&v1[v30] = sub_22ABDF50C();
  v12 = &v11[OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_configuration];
  *v12 = v31;
  v12[1] = v29;
  v12[2] = v32;
  *((_QWORD *)v12 + 1) = v10;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB24D0]), sel_init);
  *(_QWORD *)&v11[OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_captureSession] = v13;
  v14 = (uint64_t)&v11[OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_state];
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v15);

  v38.receiver = v11;
  v38.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v38, sel_init);
  v17 = qword_255B0D878;
  v18 = (char *)v16;
  if (v17 != -1)
    swift_once();
  v19 = sub_22ABDE804();
  __swift_project_value_buffer(v19, (uint64_t)qword_255B47DB0);
  v20 = sub_22ABDE7EC();
  v21 = sub_22ABDF4B8();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_22A999000, v20, v21, "Initializing video camera sequence", v22, 2u);
    MEMORY[0x22E2E4E64](v22, -1, -1);
  }

  v23 = OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_captureSession;
  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_captureSession], sel_beginConfiguration);
  OUTLINED_FUNCTION_36_27();
  sub_22AAE349C(v37);
  if (v36)
  {

  }
  else
  {
    OUTLINED_FUNCTION_36_27();
    v24 = *(void **)&v18[OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_queue];
    v25 = v18;
    v26 = v24;
    sub_22AAE35B4((uint64_t)v37, (uint64_t)v25, (uint64_t)v26);

    v27 = *(id *)&v18[v23];
    objc_msgSend(v27, sel_commitConfiguration);

  }
  return v18;
}

id sub_22AAAC544()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  objc_super v8;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_255B0D878 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_38_29();
  __swift_project_value_buffer(v3, (uint64_t)qword_255B47DB0);
  v4 = OUTLINED_FUNCTION_34_29();
  v5 = sub_22ABDF4B8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)OUTLINED_FUNCTION_20_40();
    *(_WORD *)v6 = 0;
    OUTLINED_FUNCTION_43_16(&dword_22A999000, v4, v5, "Destroying video camera sequence", v6);
    OUTLINED_FUNCTION_2_2();
  }

  if (*(_QWORD *)&v1[OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_task])
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
    sub_22ABDF1C4();
    swift_release();
  }
  v8.receiver = v1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_dealloc);
}

uint64_t sub_22AAAC6F0()
{
  return _s8ObserverCMa_0(0);
}

uint64_t _s8ObserverCMa_0(uint64_t a1)
{
  return sub_22AA062F0(a1, (uint64_t *)&unk_255B15C00);
}

void sub_22AAAC70C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  char *v6;

  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_39_25();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_3_70();
  OUTLINED_FUNCTION_14_48();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_23();
  v3 = *(void **)&v0[OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_captureSession];
  v4 = OUTLINED_FUNCTION_33_2();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v0;
  OUTLINED_FUNCTION_16_44((uint64_t)sub_22AAAD07C);
  v5 = v3;
  v6 = v0;
  OUTLINED_FUNCTION_37_23();
  OUTLINED_FUNCTION_44_22(&qword_255B15D18);
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_41_18(&qword_255B15D28);
  OUTLINED_FUNCTION_2_64();
  OUTLINED_FUNCTION_6_73();
}

void sub_22AAAC824()
{
  OUTLINED_FUNCTION_31_24();
  OUTLINED_FUNCTION_12_48();
  OUTLINED_FUNCTION_11_55();
  OUTLINED_FUNCTION_30_29();
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AAAC840(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E168);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255B0D878 != -1)
    swift_once();
  v7 = sub_22ABDE804();
  __swift_project_value_buffer(v7, (uint64_t)qword_255B47DB0);
  v8 = sub_22ABDE7EC();
  v9 = sub_22ABDF4B8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_22A999000, v8, v9, "Starting video capture session", v10, 2u);
    MEMORY[0x22E2E4E64](v10, -1, -1);
  }

  objc_msgSend(a1, sel_startRunning);
  v11 = OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_task;
  if (*(_QWORD *)(a2 + OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_task))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
    sub_22ABDF1C4();
    swift_release();
  }
  v12 = sub_22ABDF1B8();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v12);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a1;
  v14[5] = v13;
  v15 = a1;
  *(_QWORD *)(a2 + v11) = sub_22AAACF5C((uint64_t)v6, (uint64_t)&unk_255B15D58, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_22AAACA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[6] = a4;
  v5[7] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15D60);
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15D68);
  v5[11] = v7;
  v5[12] = *(_QWORD *)(v7 - 8);
  v5[13] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15D70);
  v5[14] = v8;
  v5[15] = *(_QWORD *)(v8 - 8);
  v5[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22AAACAF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[12];
  v2 = v0[13];
  v4 = v0[10];
  v3 = v0[11];
  v5 = v0[8];
  v6 = v0[9];
  swift_getKeyPath();
  sub_22ABDD010();
  swift_release();
  v7 = sub_22AA48E6C(&qword_255B15D78, &qword_255B15D68);
  MEMORY[0x22E2E2C2C](v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  sub_22ABDE990();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  OUTLINED_FUNCTION_45_2();
  v0[17] = sub_22AA48E6C((uint64_t *)&unk_255B15D80, &qword_255B15D70);
  v8 = (_QWORD *)swift_task_alloc();
  v0[18] = v8;
  *v8 = v0;
  v8[1] = sub_22AAACC50;
  return sub_22ABDF188();
}

uint64_t sub_22AAACC50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_10_25(&v4);
  if (v0)
    *(_QWORD *)(v2 + 152) = v0;
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAACCA4()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 169) = *(_BYTE *)(v0 + 168);
  return OUTLINED_FUNCTION_13_29();
}

uint64_t sub_22AAACCB8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  void *v3;
  _QWORD *v5;

  v1 = *(unsigned __int8 *)(v0 + 169);
  if (v1 == 2 || (v2 = MEMORY[0x22E2E4F18](*(_QWORD *)(v0 + 56) + 16)) == 0)
  {
    OUTLINED_FUNCTION_39_24();
    goto LABEL_6;
  }
  v3 = (void *)v2;
  if ((sub_22ABDF1D0() & 1) != 0)
  {
    OUTLINED_FUNCTION_39_24();

LABEL_6:
    swift_task_dealloc();
    OUTLINED_FUNCTION_28_0();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
  }
  if ((v1 & 1) == 0)
    sub_22AAACE38();

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v5;
  *v5 = v0;
  v5[1] = sub_22AAACDE4;
  return sub_22ABDF188();
}

uint64_t sub_22AAACD84()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_22AAACDE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_10_25(&v4);
  if (v0)
    *(_QWORD *)(v2 + 152) = v0;
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AAACE38()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_39_25();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_3_70();
  OUTLINED_FUNCTION_14_48();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_23();
  *(_QWORD *)(OUTLINED_FUNCTION_33_2() + 16) = v0;
  OUTLINED_FUNCTION_16_44((uint64_t)sub_22AAAD07C);
  v3 = v0;
  OUTLINED_FUNCTION_37_23();
  OUTLINED_FUNCTION_44_22(&qword_255B15D18);
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_41_18(&qword_255B15D28);
  OUTLINED_FUNCTION_2_64();
  OUTLINED_FUNCTION_6_73();
}

void sub_22AAACF40()
{
  OUTLINED_FUNCTION_31_24();
  OUTLINED_FUNCTION_12_48();
  OUTLINED_FUNCTION_11_55();
  OUTLINED_FUNCTION_30_29();
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AAACF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = sub_22ABDF1B8();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    sub_22AAAEF34(a1);
  }
  else
  {
    sub_22ABDF1AC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22ABDF14C();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_22AAAD07C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_22AAAD0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_39_25();
  OUTLINED_FUNCTION_55_7();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_3_70();
  OUTLINED_FUNCTION_14_48();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_23();
  v3 = *(void **)(v0 + OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_captureSession);
  *(_QWORD *)(OUTLINED_FUNCTION_33_2() + 16) = v3;
  OUTLINED_FUNCTION_16_44((uint64_t)sub_22AAAD07C);
  v4 = v3;
  OUTLINED_FUNCTION_37_23();
  OUTLINED_FUNCTION_44_22(&qword_255B15D18);
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_41_18(&qword_255B15D28);
  OUTLINED_FUNCTION_2_64();
  OUTLINED_FUNCTION_6_73();
}

void sub_22AAAD1BC()
{
  OUTLINED_FUNCTION_31_24();
  OUTLINED_FUNCTION_12_48();
  OUTLINED_FUNCTION_11_55();
  OUTLINED_FUNCTION_30_29();
  OUTLINED_FUNCTION_3();
}

id sub_22AAAD1D8(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (qword_255B0D878 != -1)
    swift_once();
  v2 = sub_22ABDE804();
  __swift_project_value_buffer(v2, (uint64_t)qword_255B47DB0);
  v3 = sub_22ABDE7EC();
  v4 = sub_22ABDF4B8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_22A999000, v3, v4, "Stopping video capture session", v5, 2u);
    MEMORY[0x22E2E4E64](v5, -1, -1);
  }

  return objc_msgSend(a1, sel_stopRunning);
}

uint64_t sub_22AAAD2B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD v19[3];

  v2 = _s8ObserverC5StateOMa(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v19 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_state;
  swift_beginAccess();
  sub_22AAAED70(v12, (uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
    return sub_22AAAEDB4((uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  if (qword_255B0D878 != -1)
    swift_once();
  v14 = sub_22ABDE804();
  __swift_project_value_buffer(v14, (uint64_t)qword_255B47DB0);
  v15 = sub_22ABDE7EC();
  v16 = sub_22ABDF4B8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_22A999000, v15, v16, "Capture session stopped", v17, 2u);
    MEMORY[0x22E2E4E64](v17, -1, -1);
  }

  type metadata accessor for VideoReaderError();
  sub_22AAAF38C(&qword_255B11678, (void (*)(uint64_t))type metadata accessor for VideoReaderError);
  v18 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  v19[0] = v18;
  sub_22ABDF158();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v8);
  swift_beginAccess();
  sub_22AAAEE0C((uint64_t)v4, v12);
  return swift_endAccess();
}

uint64_t sub_22AAAD53C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return OUTLINED_FUNCTION_13_29();
}

uint64_t sub_22AAAD54C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_22AAAD5E8;
  return sub_22ABDFBF0();
}

uint64_t sub_22AAAD5E8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10_46();
  if (!v0)
    swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAAD630()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_22AAAD63C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAAD670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E168);
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22AAAD6D0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  _QWORD *v6;

  v2 = (void *)v0[5];
  v1 = v0[6];
  sub_22ABDF1B8();
  OUTLINED_FUNCTION_15_48();
  v3 = OUTLINED_FUNCTION_33_2();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  sub_22AAADB98(v1, (uint64_t)&unk_255B15CF8, v3);
  sub_22AAAEF34(v1);
  OUTLINED_FUNCTION_15_48();
  v4 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v5 = v2;
  sub_22AAADB98(v1, (uint64_t)&unk_255B15D08, (uint64_t)v4);
  sub_22AAAEF34(v1);
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15D10);
  *v6 = v0;
  v6[1] = sub_22AAAD7D4;
  OUTLINED_FUNCTION_50_0();
  return sub_22ABDF1E8();
}

uint64_t sub_22AAAD7D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22AAAD834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    **(_QWORD **)(v0 + 24) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
    sub_22ABDF1F4();
    OUTLINED_FUNCTION_28_0();
    return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22AAAD8A4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;

  if (qword_255B0D878 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_38_29();
  __swift_project_value_buffer(v1, (uint64_t)qword_255B47DB0);
  v2 = OUTLINED_FUNCTION_34_29();
  v3 = sub_22ABDF4C4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_20_40();
    *(_WORD *)v4 = 0;
    OUTLINED_FUNCTION_43_16(&dword_22A999000, v2, v3, "Frame capture timed out", v4);
    OUTLINED_FUNCTION_2_2();
  }

  swift_willThrow(v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  sub_22ABDF1F4();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAAD9AC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_22ABDF9C8();
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22AAADA08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_22ABDF9BC();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_255B15D30 + dword_255B15D30);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_22AAADA84;
  OUTLINED_FUNCTION_50_0();
  return v6(v2, v3, v4, 0, 1);
}

uint64_t sub_22AAADA84()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = *v1;
  v2 = v6;
  OUTLINED_FUNCTION_10_25(&v6);
  v4 = *(_QWORD *)(v2 + 24);
  v3 = *(_QWORD *)(v2 + 32);
  if (v0)

  OUTLINED_FUNCTION_87_4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAADB04()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for VideoReaderError();
  sub_22AAAF38C(&qword_255B11678, (void (*)(uint64_t))type metadata accessor for VideoReaderError);
  swift_allocError();
  v1 = swift_storeEnumTagMultiPayload();
  swift_willThrow(v1);
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAADB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[4];
  _QWORD v18[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E168);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22AAAF0BC(a1, (uint64_t)v9);
  v10 = sub_22ABDF1B8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    sub_22AAAEF34((uint64_t)v9);
  }
  else
  {
    sub_22ABDF1AC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v11 = sub_22ABDF14C();
    v13 = v12;
    swift_unknownObjectRelease();
  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v14 = *v4;
  v15 = (_QWORD *)(v13 | v11);
  if (v13 | v11)
  {
    v18[0] = 0;
    v18[1] = 0;
    v15 = v18;
    v18[2] = v11;
    v18[3] = v13;
  }
  v17[1] = 1;
  v17[2] = v15;
  v17[3] = v14;
  swift_task_create();
  return swift_release();
}

uint64_t sub_22AAADD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_22AAADD24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_22AAADDC4;
  OUTLINED_FUNCTION_50_0();
  return sub_22ABE0118();
}

uint64_t sub_22AAADDC4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_10_46();
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return OUTLINED_FUNCTION_4();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_22AAADE0C()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAADE38(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v4 = sub_22ABDE9A8();
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22ABDE9C0();
  v20 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v19[1] = *(_QWORD *)&a2[OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_queue];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_22AAAF070;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_22AAAD07C;
  aBlock[3] = &block_descriptor_2;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  sub_22ABDE9B4();
  v23 = MEMORY[0x24BEE4AF8];
  sub_22AAAF38C(&qword_255B15D18, (void (*)(uint64_t))MEMORY[0x24BEE5458]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15D20);
  sub_22AA48E6C(&qword_255B15D28, &qword_255B15D20);
  sub_22ABDF704();
  MEMORY[0x22E2E3790](0, v9, v6, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  return swift_release();
}

uint64_t sub_22AAAE0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  uint64_t result;
  _BYTE v14[24];

  v4 = _s8ObserverC5StateOMa(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v14[-v8];
  v10 = a1 + OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_state;
  swift_beginAccess();
  sub_22AAAED70(v10, (uint64_t)v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  sub_22AAAEDB4((uint64_t)v9);
  if (EnumTagSinglePayload == 1)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v6, a2, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v11);
    swift_beginAccess();
    sub_22AAAEE0C((uint64_t)v6, v10);
    return swift_endAccess();
  }
  else
  {
    result = sub_22ABDFADC();
    __break(1u);
  }
  return result;
}

void sub_22AAAE234()
{
  uint64_t v0;
  _QWORD *v1;
  opaqueCMSampleBuffer *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  char v31;
  id v32;
  __CVBuffer *v33;
  __CVBuffer *v34;
  CMSampleBufferRef v35;
  id v36;
  __CVBuffer *v37;

  OUTLINED_FUNCTION_4_4();
  v35 = v2;
  v36 = v3;
  _s8ObserverC5StateOMa(0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v14 = v13 - v12;
  v15 = sub_22ABDE9CC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_23_1();
  v17 = *(void **)(v0 + OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_queue);
  *v1 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v1, *MEMORY[0x24BEE5610], v15);
  v18 = v17;
  LOBYTE(v17) = sub_22ABDE9D8();
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v1, v15);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v19 = v0 + OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_state;
  OUTLINED_FUNCTION_45_2();
  sub_22AAAED70(v19, (uint64_t)v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    sub_22AAAEDB4((uint64_t)v9);
    if (qword_255B0D878 == -1)
    {
LABEL_4:
      v20 = OUTLINED_FUNCTION_38_29();
      __swift_project_value_buffer(v20, (uint64_t)qword_255B47DB0);
      v21 = OUTLINED_FUNCTION_34_29();
      v22 = sub_22ABDF4C4();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)OUTLINED_FUNCTION_20_40();
        *(_WORD *)v23 = 0;
        OUTLINED_FUNCTION_43_16(&dword_22A999000, v21, v22, "Discarding frame", v23);
        OUTLINED_FUNCTION_2_2();
      }

      goto LABEL_16;
    }
LABEL_18:
    swift_once();
    goto LABEL_4;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v14, v9, v10);
  v24 = v36;
  objc_msgSend(v36, sel_setVideoRotationAngle_, 90.0);
  v25 = objc_msgSend(v24, sel_inputPorts);
  sub_22A9BEDCC(0, &qword_255B15CA8);
  v26 = sub_22ABDEFF0();

  sub_22A9B8810(0, (v26 & 0xC000000000000001) == 0, v26);
  if ((v26 & 0xC000000000000001) != 0)
    v27 = (id)MEMORY[0x22E2E3A9C](0, v26);
  else
    v27 = *(id *)(v26 + 32);
  v28 = v27;
  swift_bridgeObjectRelease();
  if (objc_msgSend(v28, sel_sourceDevicePosition) == (id)2)
  {
    v29 = objc_msgSend(v28, sel_sourceDeviceType, v35);
    if (v29)
    {
      v30 = v29;
      sub_22ABDED50();
      v31 = sub_22ABDEE28();

      swift_bridgeObjectRelease();
      if ((v31 & 1) != 0)
      {
        v32 = v36;
        objc_msgSend(v36, sel_setAutomaticallyAdjustsVideoMirroring_, 0);
        objc_msgSend(v32, sel_setVideoMirrored_, 1);
      }
    }
  }
  v33 = CMSampleBufferGetImageBuffer(v35);
  if (v33)
  {
    v37 = v33;
    v34 = v33;
    sub_22ABDF164();

    OUTLINED_FUNCTION_87_4(v14, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v10);
    OUTLINED_FUNCTION_45_2();
    sub_22AAAEE0C((uint64_t)v6, v19);
    swift_endAccess();
  }
  else
  {
    OUTLINED_FUNCTION_87_4(v14, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));

  }
LABEL_16:
  OUTLINED_FUNCTION_3();
}

void sub_22AAAE694()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_22AAAE6CC()
{
  uint64_t result;
  unint64_t v1;

  result = _s8ObserverC5StateOMa(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t _s8ObserverC5StateOMa(uint64_t a1)
{
  return sub_22AA062F0(a1, (uint64_t *)&unk_255B15C88);
}

uint64_t *sub_22AAAE770(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_22AAAE82C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  result = __swift_getEnumTagSinglePayload(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *sub_22AAAE888(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_22AAAE920(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_22AAAEA08(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_22AAAEAA0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_22AAAEB88()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAAEB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

uint64_t sub_22AAAEBDC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAAEBE8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_22AAAEC34(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  return __swift_getEnumTagSinglePayload(a1, 1, v2);
}

uint64_t sub_22AAAEC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v4);
}

void sub_22AAAECA4()
{
  unint64_t v0;

  sub_22AAAECF8();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_22AAAECF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B15C98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B15CA0);
    v0 = sub_22ABDF170();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255B15C98);
  }
}

ValueMetadata *type metadata accessor for SendablePixelBuffer()
{
  return &type metadata for SendablePixelBuffer;
}

uint64_t sub_22AAAED70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s8ObserverC5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AAAEDB4(uint64_t a1)
{
  uint64_t v2;

  v2 = _s8ObserverC5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_22AAAEE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s8ObserverC5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AAAEE50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = swift_task_alloc();
  v8 = (_QWORD *)OUTLINED_FUNCTION_25_2(v7);
  *v8 = v3;
  v8[1] = sub_22A9B55C4;
  return sub_22AAAD670(a1, a2, v6);
}

uint64_t sub_22AAAEEB4()
{
  OUTLINED_FUNCTION_44_2();
  return swift_deallocObject();
}

uint64_t sub_22AAAEED4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_25_2(v1);
  *v2 = v0;
  v2[1] = sub_22A9B55C4;
  return sub_22AAAD9AC();
}

uint64_t sub_22AAAEF34(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22AAAEF74()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_2();

  return swift_deallocObject();
}

uint64_t sub_22AAAEF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)OUTLINED_FUNCTION_25_2(v2);
  v4 = OUTLINED_FUNCTION_23_40(v3);
  return sub_22AAADD0C(v4, v5, v6, v1);
}

uint64_t sub_22AAAEFF4(uint64_t a1)
{
  uint64_t v1;

  return sub_22AAADE38(a1, *(char **)(v1 + 16));
}

uint64_t sub_22AAAEFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15C10);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  OUTLINED_FUNCTION_45_17();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_22AAAF070()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_255B15C10) - 8) + 80);
  return sub_22AAAE0A4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_22AAAF0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AAAF104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_22ABDF9B0();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_22AAAF1A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_22ABDF9C8();
  sub_22AAAF38C(&qword_255B15D40, (void (*)(uint64_t))MEMORY[0x24BEE6E10]);
  sub_22ABE019C();
  sub_22AAAF38C(&qword_255B15D48, (void (*)(uint64_t))MEMORY[0x24BEE6DC8]);
  sub_22ABDF9E0();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_22AAAF2C0;
  return sub_22ABE01A8();
}

uint64_t sub_22AAAF2C0()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_28_0();
    return OUTLINED_FUNCTION_10(*(uint64_t (**)(void))(v5 + 8));
  }
}

uint64_t sub_22AAAF35C()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAAF38C(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    a2(255);
    OUTLINED_FUNCTION_61();
  }
  return result;
}

uint64_t sub_22AAAF3C4()
{
  OUTLINED_FUNCTION_45_17();
  return swift_deallocObject();
}

id sub_22AAAF3E4()
{
  uint64_t v0;

  return sub_22AAAD1D8(*(void **)(v0 + 16));
}

uint64_t sub_22AAAF3EC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_45_17();

  return swift_deallocObject();
}

uint64_t sub_22AAAF414()
{
  uint64_t v0;

  return sub_22AAAC840(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_22AAAF41C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_22AAAF440()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_2();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AAAF470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_25_2(v3);
  v5 = OUTLINED_FUNCTION_23_40(v4);
  return sub_22AAACA3C(v5, v6, v7, v2, v1);
}

char *keypath_get_selector_isRunning()
{
  return sel_isRunning;
}

id sub_22AAAF4E0@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isRunning);
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_22AAAF510()
{
  uint64_t v0;

  return sub_22AAAD2B4(*(_QWORD *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_2_64()
{
  return sub_22ABDF704();
}

uint64_t OUTLINED_FUNCTION_3_70()
{
  return sub_22ABDE9C0();
}

void OUTLINED_FUNCTION_6_73()
{
  JUMPOUT(0x22E2E3790);
}

uint64_t OUTLINED_FUNCTION_10_46()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_55()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_15_48()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

void *OUTLINED_FUNCTION_16_44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_20_40()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_23_40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_30_29()
{
  return swift_release();
}

void OUTLINED_FUNCTION_31_24()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_34_29()
{
  return sub_22ABDE7EC();
}

void OUTLINED_FUNCTION_36_27()
{
  char v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 112) = v1;
  *(_BYTE *)(v3 - 111) = v2;
  *(_BYTE *)(v3 - 110) = v0;
  *(_QWORD *)(v3 - 104) = v4;
}

uint64_t OUTLINED_FUNCTION_37_23()
{
  return sub_22ABDE9B4();
}

uint64_t OUTLINED_FUNCTION_38_29()
{
  return sub_22ABDE804();
}

uint64_t OUTLINED_FUNCTION_39_25()
{
  return sub_22ABDE9A8();
}

uint64_t OUTLINED_FUNCTION_41_18(uint64_t *a1)
{
  uint64_t *v1;

  return sub_22AA48E6C(a1, v1);
}

void OUTLINED_FUNCTION_43_16(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

uint64_t OUTLINED_FUNCTION_44_22(uint64_t *a1)
{
  void (*v1)(uint64_t);

  return sub_22AAAF38C(a1, v1);
}

void OUTLINED_FUNCTION_45_17()
{
  uint64_t v0;

}

uint64_t PreprocessingSupervisedTemporalEstimator.preprocessor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t PreprocessingSupervisedTemporalEstimator.preprocessor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*PreprocessingSupervisedTemporalEstimator.preprocessor.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t PreprocessingSupervisedTemporalEstimator.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t PreprocessingSupervisedTemporalEstimator.estimator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*PreprocessingSupervisedTemporalEstimator.estimator.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void PreprocessingSupervisedTemporalEstimator.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for PreprocessingSupervisedTemporalEstimator();
}

uint64_t sub_22AAAF754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for PreprocessingSupervisedTemporalEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t PreprocessingSupervisedTemporalEstimator.preprocessed<A, B>(from:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v9[11] = a8;
  v9[12] = v8;
  v9[9] = a6;
  v9[10] = a7;
  v9[7] = a3;
  v9[8] = a5;
  v9[5] = a1;
  v9[6] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[13] = AssociatedTypeWitness;
  v9[14] = OUTLINED_FUNCTION_0_0();
  v9[15] = *(_QWORD *)(a4 + 32);
  v14 = *(_QWORD *)(a4 + 16);
  v9[16] = v14;
  v15 = OUTLINED_FUNCTION_49_4();
  v9[17] = v15;
  v18 = type metadata accessor for PreprocessedFeatureSequence(255, v15, v16, v17);
  v9[18] = v18;
  v9[19] = type metadata accessor for AnnotatedFeature(0, v18, AssociatedTypeWitness, v19);
  v9[20] = OUTLINED_FUNCTION_0_0();
  v9[21] = *(_QWORD *)(a6 - 8);
  v9[22] = OUTLINED_FUNCTION_0_0();
  v9[23] = *(_QWORD *)(v14 - 8);
  v9[24] = OUTLINED_FUNCTION_0_0();
  v20 = OUTLINED_FUNCTION_49_4();
  v9[25] = v20;
  v9[26] = *(_QWORD *)(v20 - 8);
  v9[27] = OUTLINED_FUNCTION_23_0();
  v9[28] = OUTLINED_FUNCTION_38_0();
  v22 = type metadata accessor for AnnotatedFeature(0, a6, AssociatedTypeWitness, v21);
  v9[29] = v22;
  v9[30] = *(_QWORD *)(v22 - 8);
  v9[31] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v9[32] = OUTLINED_FUNCTION_0_0();
  v9[33] = *(_QWORD *)(a5 - 8);
  v9[34] = OUTLINED_FUNCTION_0_0();
  v23 = swift_getAssociatedTypeWitness();
  v9[35] = v23;
  v9[36] = *(_QWORD *)(v23 - 8);
  v9[37] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAAF958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t);
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);

  OUTLINED_FUNCTION_23_5();
  v3 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = sub_22ABDE9F0();
  OUTLINED_FUNCTION_27_8(v2, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_22ABDEE58();
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 232);
  swift_getAssociatedConformanceWitness();
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
  {
    OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_75_1(v7);
    v12 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_69_1();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
  }
  else
  {
    OUTLINED_FUNCTION_8_13();
    OUTLINED_FUNCTION_33_6();
    OUTLINED_FUNCTION_66_3();
    OUTLINED_FUNCTION_46_4(*(_QWORD *)(v1 + 40));
    v13 = v9;
    v10 = (_QWORD *)swift_task_alloc();
    v11 = OUTLINED_FUNCTION_14_11(v10);
    return v13(v11);
  }
}

uint64_t sub_22AAAFAC8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t AssociatedConformanceWitness;

  OUTLINED_FUNCTION_68();
  v2 = (_QWORD *)*v1;
  v2[39] = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = v2[23];
    OUTLINED_FUNCTION_30_0(v2[21]);
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
  else
  {
    v6 = v2[27];
    v5 = v2[28];
    v7 = v2[26];
    v8 = v2[23];
    v9 = v2[24];
    v10 = v2[16];
    OUTLINED_FUNCTION_30_0(v2[21]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
    OUTLINED_FUNCTION_27_8(v6, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    v11 = (_QWORD *)swift_task_alloc();
    v2[40] = v11;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *v11 = v2;
    v11[1] = sub_22AAAFC14;
    return PreprocessedFeatureSequence.init<A>(_:)((uint64_t)(v2 + 3), v2[27], v2[17], v2[25], AssociatedConformanceWitness);
  }
}

uint64_t sub_22AAAFC14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAAFC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 248);
  v18 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  AnnotatedFeature.annotation.getter(v2, v5);
  AnnotatedFeature.init(feature:annotation:)(v0 + 32, v5, v4, v6, v3);
  sub_22ABDF0F8();
  sub_22ABDF0C8();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 232);
  swift_getAssociatedConformanceWitness();
  sub_22ABDF650();
  if (__swift_getEnumTagSinglePayload(v7, 1, v8) == 1)
  {
    OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_75_1(v9);
    v17 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v17);
  }
  else
  {
    OUTLINED_FUNCTION_8_13();
    OUTLINED_FUNCTION_33_6();
    OUTLINED_FUNCTION_66_3();
    OUTLINED_FUNCTION_46_4(*(_QWORD *)(v3 + 40));
    v19 = v11;
    v12 = (_QWORD *)swift_task_alloc();
    v13 = OUTLINED_FUNCTION_14_11(v12);
    return v19(v13);
  }
}

uint64_t PreprocessingSupervisedTemporalEstimator.fitted(toPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v8 = a5[2];
  v6[9] = v8;
  v6[10] = *(_QWORD *)(v8 - 8);
  v6[11] = OUTLINED_FUNCTION_0_0();
  v9 = a5[3];
  v6[12] = v9;
  v6[13] = *(_QWORD *)(v9 - 8);
  v6[14] = OUTLINED_FUNCTION_0_0();
  v6[15] = a5[5];
  v10 = OUTLINED_FUNCTION_65_2();
  v6[16] = v10;
  v6[17] = *(_QWORD *)(v10 - 8);
  v6[18] = OUTLINED_FUNCTION_23_0();
  v6[19] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AAAFEF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0[15];
  v2 = v0[7];
  v3 = v0[4];
  OUTLINED_FUNCTION_27_8(v0[14], v0[8] + *(int *)(v2 + 52), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 16));
  v0[2] = v3;
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v1 + 40));
  v14 = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v0[20] = v5;
  v0[21] = *(_QWORD *)(v2 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = OUTLINED_FUNCTION_34_6(AssociatedTypeWitness, v7, v8, v9);
  v11 = swift_getAssociatedTypeWitness();
  type metadata accessor for AnnotatedFeature(255, v10, v11, v12);
  v13 = OUTLINED_FUNCTION_33_4();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v13);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessedFeatureSequence<A>, v10);
  *v5 = v0;
  v5[1] = sub_22AAB0034;
  __asm { BR              X8 }
}

uint64_t sub_22AAB0034()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_7();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t PreprocessingSupervisedTemporalEstimator.fitted(toPreprocessed:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[9] = a6;
  v7[10] = v6;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  v9 = a6[2];
  v7[11] = v9;
  v7[12] = *(_QWORD *)(v9 - 8);
  v7[13] = OUTLINED_FUNCTION_0_0();
  v10 = a6[3];
  v7[14] = v10;
  v7[15] = *(_QWORD *)(v10 - 8);
  v7[16] = OUTLINED_FUNCTION_0_0();
  v7[17] = a6[5];
  v11 = OUTLINED_FUNCTION_65_2();
  v7[18] = v11;
  v7[19] = *(_QWORD *)(v11 - 8);
  v7[20] = OUTLINED_FUNCTION_23_0();
  v7[21] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AAB0140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 72);
  v13 = *(_OWORD *)(v0 + 40);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 16))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 80) + *(int *)(v2 + 52), *(_QWORD *)(v0 + 112));
  *(_OWORD *)(v0 + 16) = v13;
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v1 + 48));
  *(_QWORD *)&v13 = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v4;
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v2 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = OUTLINED_FUNCTION_34_6(AssociatedTypeWitness, v6, v7, v8);
  v10 = swift_getAssociatedTypeWitness();
  type metadata accessor for AnnotatedFeature(255, v9, v10, v11);
  v12 = OUTLINED_FUNCTION_33_4();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v12);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for PreprocessedFeatureSequence<A>, v9);
  *v4 = v0;
  v4[1] = sub_22AAB02A0;
  __asm { BR              X8 }
}

uint64_t sub_22AAB02A0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_7();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t PreprocessingSupervisedTemporalEstimator.fitted<A, B>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  OUTLINED_FUNCTION_68();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v1[5] = v8;
  v1[6] = v0;
  v1[3] = v12;
  v1[4] = v10;
  v1[2] = v16;
  v17 = (_QWORD *)swift_task_alloc();
  v1[7] = v17;
  *v17 = v1;
  v17[1] = sub_22AAB03A8;
  return PreprocessingSupervisedTemporalEstimator.preprocessed<A, B>(from:eventHandler:)(v15, v13, v11, v9, v7, v5, v3, v19);
}

uint64_t sub_22AAB03A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v1;
  OUTLINED_FUNCTION_62_2();
  if (v1)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAB0404()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 72);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_72_0();
    return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_22A9D79F0;
    return PreprocessingSupervisedTemporalEstimator.fitted(toPreprocessed:eventHandler:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40));
  }
}

uint64_t PreprocessingSupervisedTemporalEstimator.fitted<A, B, C>(to:validateOn:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_68();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v1[10] = v20;
  v1[11] = v0;
  v1[8] = v17;
  v1[9] = v19;
  v1[6] = v4;
  v1[7] = v12;
  v1[4] = v8;
  v1[5] = v6;
  v1[2] = v13;
  v1[3] = v14;
  v15 = (_QWORD *)swift_task_alloc();
  v1[12] = v15;
  *v15 = v1;
  v15[1] = sub_22AAB0530;
  return PreprocessingSupervisedTemporalEstimator.preprocessed<A, B>(from:eventHandler:)(v11, v9, v7, v5, v3, v17, v18, v20);
}

uint64_t sub_22AAB0530(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v5;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  OUTLINED_FUNCTION_62_2();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 112) = v5;
  *v5 = v3;
  v5[1] = sub_22AAB05C8;
  return PreprocessingSupervisedTemporalEstimator.preprocessed<A, B>(from:eventHandler:)(*(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80));
}

uint64_t sub_22AAB05C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v1;
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAB0624()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 128);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_25_30();
    OUTLINED_FUNCTION_3_8();
    return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v3;
    *v3 = v0;
    v3[1] = sub_22AAB06B4;
    return PreprocessingSupervisedTemporalEstimator.fitted(toPreprocessed:validateOn:eventHandler:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 48));
  }
}

uint64_t sub_22AAB06B4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAB0700()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_25_30();
  OUTLINED_FUNCTION_3_8();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_1_3(v0);
}

uint64_t sub_22AAB0728()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAB0754()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_30();
  OUTLINED_FUNCTION_3_8();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void PreprocessingSupervisedTemporalEstimator.encode(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTemporalTransformer();
}

uint64_t sub_22AAB0818(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v2 + *(int *)(a1 + 52), v1, v4, v3);
}

uint64_t PreprocessingSupervisedTemporalEstimator.decode(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a3;
  v25 = *(_QWORD *)(a2 + 16);
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v26 = v6 - v5;
  v8 = *(_QWORD *)(v7 + 40);
  v9 = *(_QWORD *)(v7 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - v16;
  v23 = v3;
  v18 = v27;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v8 + 64))(a1, v9, v8, v15);
  if (!v18)
  {
    v20 = v25;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v23, v25);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    ComposedTemporalTransformer.init(_:_:)(v26, v20, v24);
  }
  return result;
}

uint64_t sub_22AAB09F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B785C;
  return PreprocessingSupervisedTemporalEstimator.fitted<A, B>(to:eventHandler:)();
}

uint64_t sub_22AAB0AA8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9B72C0;
  return PreprocessingSupervisedTemporalEstimator.fitted<A, B, C>(to:validateOn:eventHandler:)();
}

void sub_22AAB0B5C()
{
  PreprocessingSupervisedTemporalEstimator.encode(_:to:)();
}

uint64_t sub_22AAB0B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return PreprocessingSupervisedTemporalEstimator.decode(from:)(a1, a2, a3);
}

void sub_22AAB0C90()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AAB0DA8()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AAB0E64()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AAB0E70()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22AAB0E90(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AAB0F6C + 4 * byte_22ABF70C0[v21 - 1]))();
}

void sub_22AAB0FE0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t OUTLINED_FUNCTION_25_30()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AAB11E0(uint64_t a1)
{
  swift_beginAccess();
  sub_22ABDEAEC();
  return a1;
}

uint64_t _s16UnkeyedContainerVwxx_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22AAB1270(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22AAB12BC(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AAB1330(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14KeyedContainerVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s14KeyedContainerVMn);
}

uint64_t sub_22AAB1388(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_22AAB1390()
{
  uint64_t v0;

  sub_22ABDEAEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15E90);
  sub_22AAB3C68();
  v0 = sub_22ABDEEAC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22AAB1414()
{
  sub_22ABDEAEC();
  return sub_22ABE02E0();
}

BOOL sub_22AAB1474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v4;
  __int128 v6;
  uint64_t v7;

  sub_22ABE02D4();
  sub_22AAE40C0(a3, &v6);
  swift_bridgeObjectRelease();
  v4 = v7 != 0;
  sub_22AAB3B78((uint64_t)&v6);
  return v4;
}

uint64_t sub_22AAB14D8(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABDFF38();
  sub_22ABDEDC8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02D4();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  return 0;
}

uint64_t sub_22AAB1584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v9;
  id *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *boxed_opaque_existential_1;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  id v21[2];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  sub_22ABE02D4();
  sub_22AAE40C0(a3, &v22);
  OUTLINED_FUNCTION_3_8();
  if (v23)
  {
    sub_22A9C38BC(&v22, &v18);
    sub_22A9C38BC(&v18, &v22);
    sub_22AAB3B3C();
    v9 = swift_dynamicCast();
    LOBYTE(v10) = v9;
    if (v9)

  }
  else
  {
    sub_22AAB3B78((uint64_t)&v22);
    v24 = OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v12[3] = a5;
    v12[4] = a6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
    OUTLINED_FUNCTION_74_10((uint64_t)boxed_opaque_existential_1);
    OUTLINED_FUNCTION_0_16();
    *(_QWORD *)&v18 = 0;
    *((_QWORD *)&v18 + 1) = 0xE000000000000000;
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_26();
    v21[0] = v14;
    v21[1] = (id)0x800000022ABE4FF0;
    v19 = a5;
    v20 = a6;
    v15 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
    OUTLINED_FUNCTION_74_10((uint64_t)v15);
    sub_22AAB14D8(&v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    v10 = v21;
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_22_11();
    v16 = (*(uint64_t (**)(uint64_t *, _QWORD))(*(_QWORD *)(v24 - 8) + 104))(v12, *MEMORY[0x24BEE26C8]);
    swift_willThrow(v16);
  }
  return v10 & 1;
}

void sub_22AAB179C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[11];

  OUTLINED_FUNCTION_12();
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_28_26();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_9_53();
  OUTLINED_FUNCTION_37_24();
  OUTLINED_FUNCTION_3_8();
  if (v18[10])
  {
    OUTLINED_FUNCTION_0_62();
    sub_22AA93B7C();
    OUTLINED_FUNCTION_45_18();
    OUTLINED_FUNCTION_29_27(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_13_58(v3, v2);
    OUTLINED_FUNCTION_48_21();
    v9 = OUTLINED_FUNCTION_59_14();
    v10 = sub_22A9E2C24(v9);
    if (!v0)
    {
      if (v10 != 2)
      {
        OUTLINED_FUNCTION_66_15();
        OUTLINED_FUNCTION_5_54();
        OUTLINED_FUNCTION_21_45();
        goto LABEL_8;
      }
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_77_11();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
      OUTLINED_FUNCTION_22_39();
      OUTLINED_FUNCTION_19_39();
      OUTLINED_FUNCTION_47_17();
      OUTLINED_FUNCTION_39_26();
      v15 = OUTLINED_FUNCTION_22_11();
      v16 = OUTLINED_FUNCTION_38_30(v15, *MEMORY[0x24BEE26E0]);
      OUTLINED_FUNCTION_52_18(v16);
      OUTLINED_FUNCTION_66_15();
    }
    OUTLINED_FUNCTION_5_54();
    OUTLINED_FUNCTION_21_45();
  }
  else
  {
    OUTLINED_FUNCTION_41_19();
    v17 = OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_76_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v0[3] = v7;
    v0[4] = v5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0);
    OUTLINED_FUNCTION_30_30((uint64_t)boxed_opaque_existential_1);
    OUTLINED_FUNCTION_7_65();
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_20_41();
    OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_39_26();
    v13 = OUTLINED_FUNCTION_24_38(v12);
    OUTLINED_FUNCTION_30_30((uint64_t)v13);
    OUTLINED_FUNCTION_54_15(v18);
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_22_11();
    v14 = (*(uint64_t (**)(uint64_t *, _QWORD))(*(_QWORD *)(v17 - 8) + 104))(v0, *MEMORY[0x24BEE26C8]);
    OUTLINED_FUNCTION_52_18(v14);
  }
LABEL_8:
  OUTLINED_FUNCTION_71_11();
  OUTLINED_FUNCTION_16();
}

void sub_22AAB19C0()
{
  _BYTE v0[40];

  OUTLINED_FUNCTION_57_12();
  sub_22AA7A4F8((uint64_t)v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  swift_endAccess();
  OUTLINED_FUNCTION_81_9();
}

void sub_22AAB19F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_6_74(v4, v5, v6, v7, v8, v9, v10, v11);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_8_52();
  OUTLINED_FUNCTION_46_20();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_70_9();
  if (v13)
  {
    OUTLINED_FUNCTION_0_62();
    sub_22AA93B7C();
    OUTLINED_FUNCTION_34_30();
    OUTLINED_FUNCTION_29_27(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    OUTLINED_FUNCTION_13_58(v1, v3);
    OUTLINED_FUNCTION_48_21();
    v14 = OUTLINED_FUNCTION_67_11();
    if (!v0 && (v14 & 0x100) != 0)
    {
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_80_13();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
      OUTLINED_FUNCTION_10_47();
      OUTLINED_FUNCTION_19_39();
      OUTLINED_FUNCTION_47_17();
      v20 = OUTLINED_FUNCTION_22_11();
      OUTLINED_FUNCTION_36_28(v20, *MEMORY[0x24BEE26E0]);
      OUTLINED_FUNCTION_53_19();
    }
    OUTLINED_FUNCTION_3_71();
    OUTLINED_FUNCTION_21_45();
  }
  else
  {
    OUTLINED_FUNCTION_41_19();
    OUTLINED_FUNCTION_6_21();
    v15 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_68_11(v15);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v17 = OUTLINED_FUNCTION_26_32(v16);
    OUTLINED_FUNCTION_31_25((uint64_t)v17);
    OUTLINED_FUNCTION_7_65();
    OUTLINED_FUNCTION_33_29();
    OUTLINED_FUNCTION_20_41();
    OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_39_26();
    v19 = OUTLINED_FUNCTION_23_41(v18);
    OUTLINED_FUNCTION_31_25((uint64_t)v19);
    OUTLINED_FUNCTION_16_45();
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_22_11();
    OUTLINED_FUNCTION_25_31();
    OUTLINED_FUNCTION_53_19();
  }
  OUTLINED_FUNCTION_82_10();
  OUTLINED_FUNCTION_16();
}

void sub_22AAB1B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_6_74(v4, v5, v6, v7, v8, v9, v10, v11);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_8_52();
  OUTLINED_FUNCTION_46_20();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_70_9();
  if (v13)
  {
    OUTLINED_FUNCTION_0_62();
    sub_22AA93B7C();
    OUTLINED_FUNCTION_34_30();
    OUTLINED_FUNCTION_29_27(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    OUTLINED_FUNCTION_13_58(v1, v3);
    OUTLINED_FUNCTION_48_21();
    v14 = OUTLINED_FUNCTION_67_11();
    if (!v0 && (v14 & 0x10000) != 0)
    {
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_80_13();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
      OUTLINED_FUNCTION_10_47();
      OUTLINED_FUNCTION_19_39();
      OUTLINED_FUNCTION_47_17();
      v20 = OUTLINED_FUNCTION_22_11();
      OUTLINED_FUNCTION_36_28(v20, *MEMORY[0x24BEE26E0]);
      OUTLINED_FUNCTION_53_19();
    }
    OUTLINED_FUNCTION_3_71();
    OUTLINED_FUNCTION_21_45();
  }
  else
  {
    OUTLINED_FUNCTION_41_19();
    OUTLINED_FUNCTION_6_21();
    v15 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_68_11(v15);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v17 = OUTLINED_FUNCTION_26_32(v16);
    OUTLINED_FUNCTION_31_25((uint64_t)v17);
    OUTLINED_FUNCTION_7_65();
    OUTLINED_FUNCTION_33_29();
    OUTLINED_FUNCTION_20_41();
    OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_39_26();
    v19 = OUTLINED_FUNCTION_23_41(v18);
    OUTLINED_FUNCTION_31_25((uint64_t)v19);
    OUTLINED_FUNCTION_16_45();
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_22_11();
    OUTLINED_FUNCTION_25_31();
    OUTLINED_FUNCTION_53_19();
  }
  OUTLINED_FUNCTION_82_10();
  OUTLINED_FUNCTION_16();
}

void sub_22AAB1D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t *);
  uint64_t v22;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_6_74(v3, v4, v5, v6, v7, v8, v9, v10);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_8_52();
  OUTLINED_FUNCTION_46_20();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_70_9();
  if (v12)
  {
    OUTLINED_FUNCTION_0_62();
    sub_22AA93B7C();
    OUTLINED_FUNCTION_34_30();
    OUTLINED_FUNCTION_29_27(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_13_58(v0, v2);
    OUTLINED_FUNCTION_48_21();
    v13 = v21(&v22);
    if (!v20 && (v13 & 0x100000000) != 0)
    {
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_80_13();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
      OUTLINED_FUNCTION_10_47();
      OUTLINED_FUNCTION_19_39();
      OUTLINED_FUNCTION_47_17();
      v19 = OUTLINED_FUNCTION_22_11();
      OUTLINED_FUNCTION_36_28(v19, *MEMORY[0x24BEE26E0]);
      OUTLINED_FUNCTION_53_19();
    }
    OUTLINED_FUNCTION_3_71();
    OUTLINED_FUNCTION_21_45();
  }
  else
  {
    OUTLINED_FUNCTION_41_19();
    OUTLINED_FUNCTION_6_21();
    v14 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_68_11(v14);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v16 = OUTLINED_FUNCTION_26_32(v15);
    OUTLINED_FUNCTION_31_25((uint64_t)v16);
    OUTLINED_FUNCTION_7_65();
    OUTLINED_FUNCTION_33_29();
    OUTLINED_FUNCTION_20_41();
    OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_39_26();
    v18 = OUTLINED_FUNCTION_23_41(v17);
    OUTLINED_FUNCTION_31_25((uint64_t)v18);
    OUTLINED_FUNCTION_16_45();
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_22_11();
    OUTLINED_FUNCTION_25_31();
    OUTLINED_FUNCTION_53_19();
  }
  OUTLINED_FUNCTION_82_10();
  OUTLINED_FUNCTION_16();
}

void sub_22AAB1EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *);
  uint64_t v22;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_6_74(v3, v4, v5, v6, v7, v8, v9, v10);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_8_52();
  OUTLINED_FUNCTION_46_20();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_70_9();
  if (v12)
  {
    OUTLINED_FUNCTION_0_62();
    sub_22AA93B7C();
    OUTLINED_FUNCTION_34_30();
    OUTLINED_FUNCTION_29_27(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_13_58(v0, v2);
    OUTLINED_FUNCTION_48_21();
    v21(&v22);
    if (!v20 && (v13 & 1) != 0)
    {
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_80_13();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
      OUTLINED_FUNCTION_10_47();
      OUTLINED_FUNCTION_19_39();
      OUTLINED_FUNCTION_47_17();
      v19 = OUTLINED_FUNCTION_22_11();
      OUTLINED_FUNCTION_36_28(v19, *MEMORY[0x24BEE26E0]);
      OUTLINED_FUNCTION_53_19();
    }
    OUTLINED_FUNCTION_3_71();
    OUTLINED_FUNCTION_21_45();
  }
  else
  {
    OUTLINED_FUNCTION_41_19();
    OUTLINED_FUNCTION_6_21();
    v14 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_68_11(v14);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v16 = OUTLINED_FUNCTION_26_32(v15);
    OUTLINED_FUNCTION_31_25((uint64_t)v16);
    OUTLINED_FUNCTION_7_65();
    OUTLINED_FUNCTION_33_29();
    OUTLINED_FUNCTION_20_41();
    OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_39_26();
    v18 = OUTLINED_FUNCTION_23_41(v17);
    OUTLINED_FUNCTION_31_25((uint64_t)v18);
    OUTLINED_FUNCTION_16_45();
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_22_11();
    OUTLINED_FUNCTION_25_31();
    OUTLINED_FUNCTION_53_19();
  }
  OUTLINED_FUNCTION_82_10();
}

void sub_22AAB2060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[11];

  OUTLINED_FUNCTION_28_26();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_9_53();
  OUTLINED_FUNCTION_37_24();
  OUTLINED_FUNCTION_3_8();
  if (v16[10])
  {
    OUTLINED_FUNCTION_0_62();
    sub_22AA93B7C();
    OUTLINED_FUNCTION_45_18();
    OUTLINED_FUNCTION_29_27(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_13_58(v3, v2);
    OUTLINED_FUNCTION_48_21();
    v5 = (_QWORD *)OUTLINED_FUNCTION_59_14();
    sub_22A9E4524(v5, v6, v7);
    if (!v0 && (v8 & 0x100000000) != 0)
    {
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_77_11();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
      OUTLINED_FUNCTION_22_39();
      OUTLINED_FUNCTION_19_39();
      OUTLINED_FUNCTION_47_17();
      OUTLINED_FUNCTION_39_26();
      v14 = OUTLINED_FUNCTION_22_11();
      v15 = OUTLINED_FUNCTION_38_30(v14, *MEMORY[0x24BEE26E0]);
      OUTLINED_FUNCTION_52_18(v15);
    }
    OUTLINED_FUNCTION_5_54();
    OUTLINED_FUNCTION_21_45();
  }
  else
  {
    OUTLINED_FUNCTION_41_19();
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_76_13();
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v10 = OUTLINED_FUNCTION_42_18(v9);
    OUTLINED_FUNCTION_30_30((uint64_t)v10);
    OUTLINED_FUNCTION_7_65();
    OUTLINED_FUNCTION_50_22();
    OUTLINED_FUNCTION_20_41();
    OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_39_26();
    v12 = OUTLINED_FUNCTION_24_38(v11);
    OUTLINED_FUNCTION_30_30((uint64_t)v12);
    OUTLINED_FUNCTION_54_15(v16);
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_22_11();
    v13 = OUTLINED_FUNCTION_35_20();
    OUTLINED_FUNCTION_52_18(v13);
  }
  OUTLINED_FUNCTION_71_11();
}

void sub_22AAB2278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[11];

  OUTLINED_FUNCTION_28_26();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_9_53();
  OUTLINED_FUNCTION_37_24();
  OUTLINED_FUNCTION_3_8();
  if (v16[10])
  {
    OUTLINED_FUNCTION_0_62();
    sub_22AA93B7C();
    OUTLINED_FUNCTION_45_18();
    OUTLINED_FUNCTION_29_27(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_13_58(v3, v2);
    OUTLINED_FUNCTION_48_21();
    v5 = OUTLINED_FUNCTION_59_14();
    sub_22A9E48F4(v5, v6, v7);
    if (!v0 && (v8 & 1) != 0)
    {
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_77_11();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
      OUTLINED_FUNCTION_22_39();
      OUTLINED_FUNCTION_19_39();
      OUTLINED_FUNCTION_47_17();
      v14 = OUTLINED_FUNCTION_22_11();
      v15 = OUTLINED_FUNCTION_38_30(v14, *MEMORY[0x24BEE26E0]);
      OUTLINED_FUNCTION_52_18(v15);
    }
    OUTLINED_FUNCTION_5_54();
    OUTLINED_FUNCTION_21_45();
  }
  else
  {
    OUTLINED_FUNCTION_41_19();
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_76_13();
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v10 = OUTLINED_FUNCTION_42_18(v9);
    OUTLINED_FUNCTION_30_30((uint64_t)v10);
    OUTLINED_FUNCTION_7_65();
    OUTLINED_FUNCTION_50_22();
    OUTLINED_FUNCTION_20_41();
    OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_39_26();
    v12 = OUTLINED_FUNCTION_24_38(v11);
    OUTLINED_FUNCTION_30_30((uint64_t)v12);
    OUTLINED_FUNCTION_54_15(v16);
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_22_11();
    v13 = OUTLINED_FUNCTION_35_20();
    OUTLINED_FUNCTION_52_18(v13);
  }
  OUTLINED_FUNCTION_71_11();
}

void sub_22AAB2494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[11];

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_28_26();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_9_53();
  OUTLINED_FUNCTION_37_24();
  OUTLINED_FUNCTION_3_8();
  if (v16[10])
  {
    OUTLINED_FUNCTION_0_62();
    sub_22AA93B7C();
    OUTLINED_FUNCTION_45_18();
    OUTLINED_FUNCTION_29_27(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    OUTLINED_FUNCTION_13_58(v3, v2);
    OUTLINED_FUNCTION_48_21();
    v5 = OUTLINED_FUNCTION_59_14();
    sub_22A9E4BA0(v5, v6, v7);
    if (!v0 && !v8)
    {
      OUTLINED_FUNCTION_6_21();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_77_11();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
      OUTLINED_FUNCTION_22_39();
      OUTLINED_FUNCTION_19_39();
      OUTLINED_FUNCTION_47_17();
      v14 = OUTLINED_FUNCTION_22_11();
      v15 = OUTLINED_FUNCTION_38_30(v14, *MEMORY[0x24BEE26E0]);
      OUTLINED_FUNCTION_52_18(v15);
      OUTLINED_FUNCTION_66_15();
    }
    OUTLINED_FUNCTION_5_54();
    OUTLINED_FUNCTION_21_45();
  }
  else
  {
    OUTLINED_FUNCTION_41_19();
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_76_13();
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v10 = OUTLINED_FUNCTION_42_18(v9);
    OUTLINED_FUNCTION_30_30((uint64_t)v10);
    OUTLINED_FUNCTION_7_65();
    OUTLINED_FUNCTION_50_22();
    OUTLINED_FUNCTION_20_41();
    OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_39_26();
    v12 = OUTLINED_FUNCTION_24_38(v11);
    OUTLINED_FUNCTION_30_30((uint64_t)v12);
    OUTLINED_FUNCTION_54_15(v16);
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_22_11();
    v13 = OUTLINED_FUNCTION_35_20();
    OUTLINED_FUNCTION_52_18(v13);
  }
  OUTLINED_FUNCTION_71_11();
}

void sub_22AAB26A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  __int128 v72;
  uint64_t v73;

  OUTLINED_FUNCTION_12();
  v64 = v21;
  v65 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v61 = v35;
  v36 = sub_22ABDF5D8();
  v59 = *(_QWORD *)(v36 - 8);
  v60 = v36;
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v58 - v37;
  v39 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_33();
  v43 = v42 - v41;
  v66 = v32;
  sub_22ABE02D4();
  sub_22AAE40C0(v28, &v72);
  OUTLINED_FUNCTION_3_8();
  if (v73)
  {
    v62 = v34;
    v63 = v28;
    sub_22A9C38BC(&v72, &v67);
    OUTLINED_FUNCTION_3_4();
    sub_22AA93B7C();
    OUTLINED_FUNCTION_78_8(*(_QWORD *)(v30 + 120));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v43, v66, v26);
    v44 = v62;
    sub_22AA5FBB0(v28, v43, (uint64_t *)(v30 + 120), v26, v24);
    OUTLINED_FUNCTION_48_21();
    v45 = v64;
    v46 = v65;
    sub_22A9E501C(&v67, v44, v65, a21, (uint64_t)v38);
    if (!v45)
    {
      if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v46) == 1)
      {
        (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v60);
        v66 = OUTLINED_FUNCTION_6_21();
        v64 = OUTLINED_FUNCTION_53();
        v54 = v53;
        v61 = (char *)v53 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10050) + 48);
        *v54 = v44;
        *(_QWORD *)&v72 = 0;
        *((_QWORD *)&v72 + 1) = 0xE000000000000000;
        sub_22ABDEAEC();
        OUTLINED_FUNCTION_19_39();
        OUTLINED_FUNCTION_47_17();
        *(_QWORD *)&v72 = 0x6465746365707845;
        *((_QWORD *)&v72 + 1) = 0xE900000000000020;
        sub_22ABE0304();
        sub_22ABDEDC8();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_39_26();
        sub_22ABDEDC8();
        OUTLINED_FUNCTION_22_11();
        v55 = OUTLINED_FUNCTION_72_11();
        v57 = v56(v55);
        swift_willThrow(v57);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v61, v38, v46);
      }
    }
    sub_22AAB19C0();
    OUTLINED_FUNCTION_21_45();
  }
  else
  {
    OUTLINED_FUNCTION_41_19();
    v65 = OUTLINED_FUNCTION_6_21();
    v64 = OUTLINED_FUNCTION_53();
    v48 = v47;
    v63 = (uint64_t)v47 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0) + 48);
    v48[3] = v26;
    v48[4] = v24;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
    OUTLINED_FUNCTION_69_11((uint64_t)boxed_opaque_existential_1);
    OUTLINED_FUNCTION_0_16();
    *(_QWORD *)&v67 = 0;
    *((_QWORD *)&v67 + 1) = 0xE000000000000000;
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_20_41();
    OUTLINED_FUNCTION_49_16();
    OUTLINED_FUNCTION_39_26();
    v70 = v50;
    v71 = 0x800000022ABE4FF0;
    v68 = v26;
    v69 = v24;
    v51 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v67);
    OUTLINED_FUNCTION_69_11((uint64_t)v51);
    sub_22AAB14D8(&v67);
    OUTLINED_FUNCTION_1_57();
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_13_18();
    OUTLINED_FUNCTION_22_11();
    v52 = OUTLINED_FUNCTION_35_20();
    swift_willThrow(v52);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AAB2A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[5];
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_12();
  v23 = v22;
  v46 = v24;
  v26 = v25;
  v28 = v27;
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_33();
  v32 = v31 - v30;
  v34 = (uint64_t *)(v33 + 120);
  OUTLINED_FUNCTION_3_4();
  sub_22AA93B7C();
  OUTLINED_FUNCTION_78_8(*(_QWORD *)(v28 + 120));
  OUTLINED_FUNCTION_61_14(v32);
  sub_22AA5FBB0(v21, v32, v34, v26, v23);
  swift_endAccess();
  sub_22ABE02D4();
  OUTLINED_FUNCTION_37_24();
  OUTLINED_FUNCTION_3_8();
  if (!v51)
  {
    OUTLINED_FUNCTION_41_19();
    v45 = OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    v41 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v41[3] = v26;
    v41[4] = v23;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v41);
    OUTLINED_FUNCTION_61_14((uint64_t)boxed_opaque_existential_1);
    v47[0] = 0;
    v47[1] = 0xE000000000000000;
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v48 = 0x6720746F6E6E6143;
    v49 = 0xEB00000000207465;
    sub_22ABDFCB0();
    sub_22ABE0304();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    v47[3] = v26;
    v47[4] = v23;
    v43 = __swift_allocate_boxed_opaque_existential_1(v47);
    OUTLINED_FUNCTION_61_14((uint64_t)v43);
    sub_22AAB14D8(v47);
    OUTLINED_FUNCTION_56_16();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_11();
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v45 - 8) + 104))(v41, *MEMORY[0x24BEE26C8]);
    OUTLINED_FUNCTION_36_23();
LABEL_6:
    OUTLINED_FUNCTION_73_8();
    sub_22AAB19C0();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_63_13();
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8598);
  if ((OUTLINED_FUNCTION_60_16() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    sub_22AAABA2C(v35, v47, v44);
    OUTLINED_FUNCTION_36_23();
    OUTLINED_FUNCTION_56_16();
    goto LABEL_6;
  }
  v48 = sub_22AAB11E0(v28);
  v49 = v36;
  v50 = v37;
  v39 = _s14KeyedContainerVMa(0, v46, a21, v38);
  swift_retain();
  MEMORY[0x22E2E4D80](&unk_22ABF7178, v39);
  sub_22ABDFCBC();
  OUTLINED_FUNCTION_56_16();
  OUTLINED_FUNCTION_73_8();
  sub_22AAB19C0();
LABEL_7:
  OUTLINED_FUNCTION_16();
}

void sub_22AAB2DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37[5];
  __int128 v38;
  uint64_t v39;

  OUTLINED_FUNCTION_12();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v36 = v18;
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_33();
  v22 = v21 - v20;
  v24 = (uint64_t *)(v23 + 120);
  OUTLINED_FUNCTION_3_4();
  sub_22AA93B7C();
  v25 = *(_QWORD *)(*(_QWORD *)(v17 + 120) + 16);
  sub_22AA93C24(v25);
  OUTLINED_FUNCTION_62_13(v22);
  sub_22AA5FBB0(v25, v22, v24, v13, v11);
  swift_endAccess();
  sub_22ABE02D4();
  sub_22AAE40C0(v15, &v38);
  OUTLINED_FUNCTION_3_8();
  if (!v39)
  {
    OUTLINED_FUNCTION_41_19();
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86F0);
    v30[3] = v13;
    v30[4] = v11;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
    OUTLINED_FUNCTION_62_13((uint64_t)boxed_opaque_existential_1);
    v37[0] = 0;
    v37[1] = 0xE000000000000000;
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    *(_QWORD *)&v38 = 0;
    *((_QWORD *)&v38 + 1) = 0xE000000000000000;
    sub_22ABDEDC8();
    v37[3] = v13;
    v37[4] = v11;
    v32 = __swift_allocate_boxed_opaque_existential_1(v37);
    OUTLINED_FUNCTION_62_13((uint64_t)v32);
    sub_22AAB14D8(v37);
    OUTLINED_FUNCTION_56_16();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_11();
    v33 = OUTLINED_FUNCTION_72_11();
    v34(v33);
    OUTLINED_FUNCTION_36_23();
LABEL_6:
    OUTLINED_FUNCTION_79_10();
    sub_22AAB19C0();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_63_13();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F0);
  if ((OUTLINED_FUNCTION_60_16() & 1) == 0)
  {
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_53();
    sub_22AAABA2C(v26, v37, v35);
    OUTLINED_FUNCTION_36_23();
    OUTLINED_FUNCTION_56_16();
    goto LABEL_6;
  }
  v27 = *(_QWORD *)(v17 + 120);
  v36[3] = &_s16UnkeyedContainerVN_0;
  v36[4] = sub_22A9E7D20();
  v28 = (_QWORD *)swift_allocObject();
  *v36 = v28;
  v28[2] = v17;
  v28[3] = a10;
  v28[4] = v27;
  v28[5] = 0;
  swift_retain();
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_56_16();
  OUTLINED_FUNCTION_79_10();
  sub_22AAB19C0();
LABEL_7:
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAB3074@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v25[4];
  _BYTE v26[32];
  __int128 v27;
  unint64_t v28;
  _OWORD __dst[6];

  v25[2] = a5;
  v25[3] = a6;
  v25[1] = a4;
  sub_22A9A1A28((uint64_t)a1, (uint64_t)__dst);
  swift_beginAccess();
  sub_22AA93B7C();
  v11 = *(_QWORD *)(a2[15] + 16);
  sub_22AA93C24(v11);
  v12 = *((_QWORD *)&__dst[1] + 1);
  v13 = *(_QWORD *)&__dst[2];
  v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)__dst, *((uint64_t *)&__dst[1] + 1));
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v18 + 16))(v17, v15);
  sub_22AA5FBB0(v11, (uint64_t)v17, a2 + 15, v12, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
  swift_endAccess();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02D4();
  sub_22AAE40C0(a3, __dst);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&__dst[1] + 1))
  {
    sub_22A9C38BC(__dst, &v27);
  }
  else
  {
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v28 = sub_22AAB3B3C();
    *(_QWORD *)&v27 = v19;
    sub_22AAB3B78((uint64_t)__dst);
  }
  sub_22A9E7618((uint64_t)&v27, (uint64_t)v26);
  v20 = a2[15];
  memcpy(__dst, a2 + 3, 0x58uLL);
  v21 = a2[14];
  v22 = _s19IntermediateDecoderCMa();
  swift_allocObject();
  sub_22ABDEAEC();
  sub_22A9E1144((uint64_t)__dst);
  sub_22ABDEAEC();
  v23 = sub_22A9E1464((uint64_t)v26, v20, __dst, v21);
  a7[3] = v22;
  a7[4] = sub_22AAB3BB8();
  *a7 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  sub_22AAB19C0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_22AAB32B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD v4[5];

  v4[3] = &type metadata for _JSONKey;
  v4[4] = sub_22A9E7C90();
  v2 = swift_allocObject();
  v4[0] = v2;
  *(_QWORD *)(v2 + 16) = 0x7265707573;
  *(_QWORD *)(v2 + 24) = 0xE500000000000000;
  *(_QWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 40) = 1;
  return OUTLINED_FUNCTION_55_15(v4, a1);
}

uint64_t sub_22AAB3360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, _QWORD *a4@<X8>)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  v9[3] = a2;
  v9[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  return OUTLINED_FUNCTION_55_15(v9, a4);
}

uint64_t sub_22AAB33E4()
{
  return sub_22AAB1390();
}

BOOL sub_22AAB33F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_22AAB1474(a1, a2, *(_QWORD *)(v2 + 8));
}

uint64_t sub_22AAB33FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAB343C(a1, a2, a3, sub_22AAB1584) & 1;
}

uint64_t sub_22AAB341C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAB343C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AAB179C) & 1;
}

uint64_t sub_22AAB343C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, *v4, v4[1], v4[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24)) & 1;
}

void sub_22AAB3468()
{
  sub_22AAB2494();
}

void sub_22AAB348C()
{
  sub_22AAB2278();
}

void sub_22AAB34B0()
{
  sub_22AAB2060();
}

void sub_22AAB34D4()
{
  sub_22AAB3600();
}

void sub_22AAB3510()
{
  sub_22AAB36A8();
}

void sub_22AAB354C()
{
  sub_22AAB3700();
}

void sub_22AAB3588()
{
  sub_22AAB3758();
}

void sub_22AAB35C4()
{
  sub_22AAB3600();
}

void sub_22AAB3600()
{
  OUTLINED_FUNCTION_11_56();
  sub_22AAB1EB0();
  OUTLINED_FUNCTION_19_6();
}

uint64_t sub_22AAB361C()
{
  return sub_22ABE0064();
}

void sub_22AAB3630()
{
  sub_22AAB3600();
}

void sub_22AAB366C()
{
  sub_22AAB36A8();
}

void sub_22AAB36A8()
{
  OUTLINED_FUNCTION_11_56();
  sub_22AAB19F4();
  OUTLINED_FUNCTION_19_6();
}

void sub_22AAB36C4()
{
  sub_22AAB3700();
}

void sub_22AAB3700()
{
  OUTLINED_FUNCTION_11_56();
  sub_22AAB1B84();
  OUTLINED_FUNCTION_19_6();
}

void sub_22AAB371C()
{
  sub_22AAB3758();
}

void sub_22AAB3758()
{
  OUTLINED_FUNCTION_11_56();
  sub_22AAB1D14();
  OUTLINED_FUNCTION_19_6();
}

void sub_22AAB3774()
{
  sub_22AAB3600();
}

uint64_t sub_22AAB37B0()
{
  return sub_22ABE0070();
}

#error "22AAB37EC: call analysis failed (funcsize=14)"

uint64_t sub_22AAB37FC()
{
  return sub_22ABE0010();
}

uint64_t sub_22AAB3810()
{
  return sub_22ABE0004();
}

uint64_t sub_22AAB3824()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_22ABE001C();
  if (v0)
    return v2;
  return result;
}

void sub_22AAB3844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22AAB39CC(a1, a2, a3, MEMORY[0x24BEE3C00]);
}

uint64_t sub_22AAB3860()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_22ABE0028();
  if (v0)
    return v2;
  return result;
}

void sub_22AAB3880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22AAB394C(a1, a2, a3, MEMORY[0x24BEE3C20]);
}

void sub_22AAB389C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22AAB398C(a1, a2, a3, MEMORY[0x24BEE3C28]);
}

void sub_22AAB38B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22AAB39CC(a1, a2, a3, MEMORY[0x24BEE3C30]);
}

uint64_t sub_22AAB38D4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_22ABE004C();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_22AAB38F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAB3A34(a1, a2, a3, MEMORY[0x24BEE3C48]);
}

uint64_t sub_22AAB3910()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_22ABE0034();
  if (v0)
    return v2;
  return result;
}

void sub_22AAB3930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22AAB394C(a1, a2, a3, MEMORY[0x24BEE3C40]);
}

void sub_22AAB394C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  OUTLINED_FUNCTION_19_6();
}

void sub_22AAB3970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22AAB398C(a1, a2, a3, MEMORY[0x24BEE3C50]);
}

void sub_22AAB398C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  OUTLINED_FUNCTION_19_6();
}

void sub_22AAB39B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22AAB39CC(a1, a2, a3, MEMORY[0x24BEE3C58]);
}

void sub_22AAB39CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  OUTLINED_FUNCTION_19_6();
}

uint64_t sub_22AAB39F8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_22ABE0058();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_22AAB3A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAB3A34(a1, a2, a3, MEMORY[0x24BEE3C68]);
}

uint64_t sub_22AAB3A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = a4();
  if (v4)
    return v6;
  return result;
}

uint64_t sub_22AAB3A58()
{
  return sub_22ABE0040();
}

#error "22AAB3AA8: call analysis failed (funcsize=14)"

uint64_t sub_22AAB3AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAB3B14(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AAB2DAC);
}

uint64_t sub_22AAB3AD4@<X0>(_QWORD *a1@<X8>)
{
  return sub_22AAB32B4(a1);
}

uint64_t sub_22AAB3AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAB3B14(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AAB3360);
}

uint64_t sub_22AAB3B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, *v4, v4[1], v4[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

unint64_t sub_22AAB3B3C()
{
  unint64_t result;

  result = qword_2540E8620;
  if (!qword_2540E8620)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2540E8620);
  }
  return result;
}

uint64_t sub_22AAB3B78(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E86F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22AAB3BB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540E7DB0;
  if (!qword_2540E7DB0)
  {
    v1 = _s19IntermediateDecoderCMa();
    result = MEMORY[0x22E2E4D80](&unk_22ABEC79C, v1);
    atomic_store(result, (unint64_t *)&qword_2540E7DB0);
  }
  return result;
}

uint64_t sub_22AAB3BF8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22AAB3C1C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22AAB3C50()
{
  return sub_22AAB1414();
}

unint64_t sub_22AAB3C68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B15E98;
  if (!qword_255B15E98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B15E90);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE0310], v1);
    atomic_store(result, (unint64_t *)&qword_255B15E98);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_62()
{
  uint64_t v0;

  sub_22A9C38BC((_OWORD *)(v0 - 112), (_OWORD *)(v0 - 168));
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_3_71()
{
  sub_22AAB19C0();
}

void OUTLINED_FUNCTION_5_54()
{
  sub_22AAB19C0();
}

void OUTLINED_FUNCTION_6_74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 - 200) = a8;
  *(_QWORD *)(v9 - 184) = v8;
  *(_QWORD *)(v9 - 176) = a7;
}

uint64_t OUTLINED_FUNCTION_7_65()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_8_52()
{
  return sub_22ABE02D4();
}

uint64_t OUTLINED_FUNCTION_9_53()
{
  return sub_22ABE02D4();
}

uint64_t OUTLINED_FUNCTION_10_47()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 200);
  *(_QWORD *)(v1 - 112) = 0;
  *(_QWORD *)(v1 - 104) = 0xE000000000000000;
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_13_58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  return sub_22AA5FBB0(a1, a2, v3, v4, v2);
}

uint64_t OUTLINED_FUNCTION_16_45()
{
  uint64_t v0;

  return sub_22AAB14D8((_QWORD *)(v0 - 168));
}

uint64_t OUTLINED_FUNCTION_19_39()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_20_41()
{
  return sub_22ABDF7A0();
}

uint64_t OUTLINED_FUNCTION_21_45()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 168);
}

uint64_t OUTLINED_FUNCTION_22_39()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *v1 = v0;
  *(_QWORD *)(v2 - 112) = 0;
  *(_QWORD *)(v2 - 104) = 0xE000000000000000;
  return sub_22ABDEAEC();
}

uint64_t *OUTLINED_FUNCTION_23_41@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = a1;
  *(_QWORD *)(v4 - 120) = (v1 - 32) | 0x8000000000000000;
  *(_QWORD *)(v4 - 144) = v2;
  *(_QWORD *)(v4 - 136) = v3;
  return __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v4 - 168));
}

uint64_t *OUTLINED_FUNCTION_24_38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = a1;
  *(_QWORD *)(v4 - 120) = (v1 - 32) | 0x8000000000000000;
  *(_QWORD *)(v4 - 144) = v3;
  *(_QWORD *)(v4 - 136) = v2;
  return __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v4 - 168));
}

uint64_t OUTLINED_FUNCTION_25_31()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 - 176) - 8) + 104))(v0);
}

uint64_t *OUTLINED_FUNCTION_26_32(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 192) = (char *)v3 + *(int *)(a1 + 48);
  v3[3] = v1;
  v3[4] = v2;
  return __swift_allocate_boxed_opaque_existential_1(v3);
}

uint64_t OUTLINED_FUNCTION_29_27@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_30_30(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_31_25(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_33_29()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 168) = 0;
  *(_QWORD *)(v0 - 160) = 0xE000000000000000;
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_34_30()
{
  uint64_t v0;

  return sub_22AA93C24(*(_QWORD *)(*(_QWORD *)(v0 + 120) + 16));
}

uint64_t OUTLINED_FUNCTION_35_20()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 - 184) - 8) + 104))(v0);
}

uint64_t OUTLINED_FUNCTION_36_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v2, a2, v3);
}

void OUTLINED_FUNCTION_37_24()
{
  uint64_t v0;
  uint64_t v1;

  sub_22AAE40C0(v0, (_OWORD *)(v1 - 112));
}

uint64_t OUTLINED_FUNCTION_38_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_41_19()
{
  uint64_t v0;

  return sub_22AAB3B78(v0 - 112);
}

uint64_t *OUTLINED_FUNCTION_42_18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 192) = (char *)v3 + *(int *)(a1 + 48);
  v3[3] = v2;
  v3[4] = v1;
  return __swift_allocate_boxed_opaque_existential_1(v3);
}

uint64_t OUTLINED_FUNCTION_45_18()
{
  uint64_t v0;

  return sub_22AA93C24(*(_QWORD *)(*(_QWORD *)(v0 + 120) + 16));
}

void OUTLINED_FUNCTION_46_20()
{
  uint64_t v0;
  uint64_t v1;

  sub_22AAE40C0(v0, (_OWORD *)(v1 - 112));
}

uint64_t OUTLINED_FUNCTION_47_17()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_48_21()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_49_16()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_22()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v1 - 168) = 0;
  *(_QWORD *)(v1 - 160) = 0xE000000000000000;
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_52_18(uint64_t a1)
{
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_54_15(_QWORD *a1)
{
  return sub_22AAB14D8(a1);
}

uint64_t OUTLINED_FUNCTION_55_15@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  return sub_22AAB3074(a1, v6, v5, v4, v3, v2, a2);
}

uint64_t OUTLINED_FUNCTION_56_16()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 152);
}

uint64_t OUTLINED_FUNCTION_57_12()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_59_14()
{
  uint64_t v0;

  return v0 - 168;
}

uint64_t OUTLINED_FUNCTION_60_16()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_61_14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_62_13(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_63_13()
{
  uint64_t v0;

  sub_22A9C38BC((_OWORD *)(v0 - 112), (_OWORD *)(v0 - 152));
  return sub_22A9E7618(v0 - 152, v0 - 112);
}

uint64_t OUTLINED_FUNCTION_66_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_67_11()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 - 176))(v0 - 168);
}

uint64_t OUTLINED_FUNCTION_68_11(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_69_11(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

void OUTLINED_FUNCTION_70_9()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t OUTLINED_FUNCTION_72_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_73_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_74_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_78_8@<X0>(uint64_t a1@<X8>)
{
  return sub_22AA93C24(*(_QWORD *)(a1 + 16));
}

uint64_t OUTLINED_FUNCTION_79_10()
{
  uint64_t v0;

  return v0;
}

void sub_22AAB4154(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E7768);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22ABDD0E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v27 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11.n128_f64[0] = MEMORY[0x24BDAC7A8](v10);
  v26 = (char *)&v20 - v12;
  v28 = MEMORY[0x24BEE4AF8];
  v25 = *(_QWORD *)(a1 + 16);
  if (v25)
  {
    v13 = 0;
    v23 = a2;
    v24 = a1;
    v21 = v8;
    v22 = v6;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v15 = *(_QWORD *)(v8 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v6, a1 + v14 + v15 * v13, v7, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
        goto LABEL_14;
      v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v17 = v26;
      v16(v26, v6, v7);
      if ((sub_22AAD6630() & 1) != 0)
      {
        v16(v27, v17, v7);
        v18 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22AB4D658();
          v18 = v28;
        }
        v19 = *(_QWORD *)(v18 + 16);
        if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          sub_22AB4D658();
          v18 = v28;
        }
        *(_QWORD *)(v18 + 16) = v19 + 1;
        v16((char *)(v18 + v14 + v19 * v15), v27, v7);
        v28 = v18;
        a2 = v23;
        a1 = v24;
        v8 = v21;
        v6 = v22;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
        a1 = v24;
      }
      if (v25 == ++v13)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
LABEL_14:
    swift_bridgeObjectRelease();
    sub_22A9AD754((uint64_t)v6, &qword_2540E7768);

  }
}

void sub_22AAB43DC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  void *v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  id v27;
  uint64_t v28;

  v27 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E7768);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22ABDD0E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v26 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.n128_f64[0] = MEMORY[0x24BDAC7A8](v9);
  v25 = (char *)&v21 - v11;
  v28 = MEMORY[0x24BEE4AF8];
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v12 = 0;
    v22 = v5;
    v23 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v14 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v5, a1 + v13 + v14 * v12, v6, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
      if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
        goto LABEL_14;
      v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v16 = v25;
      v15(v25, v5, v6);
      sub_22ABDD0C4();
      v17 = (void *)sub_22ABDED2C();
      swift_bridgeObjectRelease();
      v18 = objc_msgSend(v27, sel_isReadableFileAtPath_, v17);

      if (v18)
      {
        v15(v26, v16, v6);
        v19 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22AB4D658();
          v19 = v28;
        }
        v20 = *(_QWORD *)(v19 + 16);
        if (v20 >= *(_QWORD *)(v19 + 24) >> 1)
        {
          sub_22AB4D658();
          v19 = v28;
        }
        *(_QWORD *)(v19 + 16) = v20 + 1;
        v15((char *)(v19 + v13 + v20 * v14), v26, v6);
        v28 = v19;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
      }
      ++v12;
      a1 = v23;
      v5 = v22;
      if (v24 == v12)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
LABEL_14:
    swift_bridgeObjectRelease();
    sub_22A9AD754((uint64_t)v5, &qword_2540E7768);

  }
}

uint64_t sub_22AAB4684(uint64_t a1, uint64_t a2, int a3)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, void *);
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  _QWORD *v49;
  char *v50;
  _QWORD *v51;
  __int128 v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, unint64_t, id);
  void *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, id);
  void *v97;
  uint64_t v98;
  void (*v99)(uint64_t, void *);
  id v100;
  uint64_t v101;
  void (*v102)(uint64_t);
  _QWORD v104[2];
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  char *v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  id v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143[4];

  v5 = v3;
  v132 = a3;
  v127 = a2;
  v143[3] = *(id *)MEMORY[0x24BDAC8D0];
  v115 = sub_22ABDE804();
  v114 = *(_QWORD *)(v115 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB38);
  v116 = *(_QWORD *)(v117 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v126 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15950);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = (_QWORD *)sub_22ABDE7E0();
  v133 = *(v135 - 1);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v17);
  v129 = (char *)v104 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E7768);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_0();
  v134 = v20;
  v21 = sub_22ABDD0E8();
  v139 = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v104 - v25;
  v121 = a1;
  v27 = (void *)sub_22ABDD070();
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15958);
  v28 = OUTLINED_FUNCTION_46_11();
  v119 = xmmword_22ABE8E30;
  *(_OWORD *)(v28 + 16) = xmmword_22ABE8E30;
  v29 = (void *)*MEMORY[0x24BDBCC90];
  *(_QWORD *)(v28 + 32) = *MEMORY[0x24BDBCC90];
  v143[0] = 0;
  v118 = v29;
  v30 = sub_22AAB5A1C((uint64_t)v27, v28, 5, (uint64_t)v143, v5);

  v31 = v143[0];
  if (v30)
  {
    v131 = v14;
    v138 = (void *)v21;
    v32 = sub_22ABDEFF0();
    v33 = v31;

    v34 = v5;
    sub_22AAB4154(v32, v34);
    v36 = v35;
    v137 = v34;
    sub_22AAB43DC(v36, v137);
    v38 = v37;
    v104[0] = v4;
    v39 = *(_QWORD *)(v37 + 16);
    v111 = v9;
    if (v39)
    {
      v143[0] = (id)MEMORY[0x24BEE4AF8];
      sub_22AB4CDFC();
      v40 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
      v128 = v38;
      v41 = v38 + v40;
      v136 = *(_QWORD *)(v139 + 72);
      v42 = *(void (**)(char *, uint64_t, void *))(v139 + 16);
      do
      {
        v43 = v138;
        v42(v26, v41, v138);
        v44 = sub_22ABDD064();
        v46 = v45;
        (*(void (**)(char *, void *))(v139 + 8))(v26, v43);
        v47 = v143[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22AB4CDFC();
          v47 = v143[0];
        }
        v48 = v47[2];
        v49 = v47;
        if (v48 >= v47[3] >> 1)
        {
          sub_22AB4CDFC();
          v49 = v143[0];
        }
        v49[2] = v48 + 1;
        v50 = (char *)&v49[2 * v48];
        *((_QWORD *)v50 + 4) = v44;
        *((_QWORD *)v50 + 5) = v46;
        v41 += v136;
        --v39;
      }
      while (v39);
      v51 = v49;
      OUTLINED_FUNCTION_1_58();
    }
    else
    {
      OUTLINED_FUNCTION_23();
      v51 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v54 = v122;
    v55 = v134;
    v110 = v51[2];
    if (!v110)
    {
      OUTLINED_FUNCTION_23();
      return MEMORY[0x24BEE4AF8];
    }
    v56 = 0;
    v136 = MEMORY[0x24BEE4AF8];
    v113 = v51 + 4;
    v109 = 0x800000022ABE17B0;
    v108 = 0x800000022ABE52D0;
    *(_QWORD *)&v52 = 134349056;
    v106 = v52;
    *(_QWORD *)&v52 = 134349314;
    v105 = v52;
    v104[1] = MEMORY[0x24BEE4AD8] + 8;
    v112 = v51;
    while (1)
    {
      if (v56 >= v51[2])
        goto LABEL_52;
      v123 = v56;
      v57 = &v113[2 * v56];
      v58 = *v57;
      v59 = v57[1];
      sub_22ABDEAEC();
      v125 = v58;
      v128 = v59;
      sub_22ABDD088();
      v60 = (void *)sub_22ABDD070();
      v61 = OUTLINED_FUNCTION_46_11();
      *(_OWORD *)(v61 + 16) = v119;
      v62 = v118;
      *(_QWORD *)(v61 + 32) = v118;
      v141 = 0;
      v63 = v62;
      v64 = sub_22AAB5A1C((uint64_t)v60, v61, 5, (uint64_t)&v141, v137);

      v65 = (id)v141;
      if (!v64)
      {
        v100 = (id)v141;
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_1_58();
        OUTLINED_FUNCTION_1_58();
        sub_22ABDD004();

        OUTLINED_FUNCTION_36_23();
        v101 = OUTLINED_FUNCTION_9_54();
        v102(v101);
        return v136;
      }
      v66 = v138;
      v67 = sub_22ABDEFF0();
      v68 = v65;

      v140 = 0;
      v141 = 0;
      v69 = *(_QWORD *)(v67 + 16);
      v124 = v67;
      if (v69)
        break;
LABEL_35:
      OUTLINED_FUNCTION_18_11(v55, 1);
LABEL_36:
      OUTLINED_FUNCTION_1_58();
      OUTLINED_FUNCTION_1_58();
      sub_22ABDE7F8();
      OUTLINED_FUNCTION_45_2();
      v86 = v133;
      if (v141 >= 1)
      {
        v87 = sub_22ABDE7EC();
        v88 = sub_22ABDF4D0();
        if (os_log_type_enabled(v87, v88))
        {
          v89 = OUTLINED_FUNCTION_4_12();
          *(_DWORD *)v89 = v106;
          *(_QWORD *)(v89 + 4) = v141;
          _os_log_impl(&dword_22A999000, v87, v88, "Skipped %{public}ld files since they were not readable.", (uint8_t *)v89, 0xCu);
          OUTLINED_FUNCTION_2_2();
        }

        v66 = v138;
      }
      OUTLINED_FUNCTION_45_2();
      if (v140 >= 1)
      {
        (*(void (**)(uint64_t, uint64_t, _QWORD *))(v86 + 16))(v107, v127, v135);
        v90 = sub_22ABDE7EC();
        v91 = sub_22ABDF4D0();
        if (os_log_type_enabled(v90, v91))
        {
          v92 = OUTLINED_FUNCTION_4_12();
          v142 = OUTLINED_FUNCTION_4_12();
          *(_DWORD *)v92 = v105;
          *(_QWORD *)(v92 + 4) = v140;
          *(_WORD *)(v92 + 12) = 2082;
          sub_22A9BED8C(&qword_255B15960, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE6408]);
          v93 = sub_22ABDFD7C();
          *(_QWORD *)(v92 + 14) = sub_22AAB5318(v93, v94, &v142);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_3_72();
          _os_log_impl(&dword_22A999000, v90, v91, "Skipped %{public}ld files since they do not conform to type %{public}s.", (uint8_t *)v92, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_2_2();
        }

        OUTLINED_FUNCTION_3_72();
      }
      OUTLINED_FUNCTION_2_65();
      v95 = OUTLINED_FUNCTION_9_54();
      v96(v95, v66);
      v56 = v123 + 1;
      v51 = v112;
      if (v123 + 1 == v110)
      {
        OUTLINED_FUNCTION_23();
        return v136;
      }
    }
    v70 = v139;
    v71 = v67 + ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80));
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_45_2();
    v72 = *(_QWORD *)(v70 + 72);
    v73 = *(void (**)(uint64_t, unint64_t, id))(v70 + 16);
    while (1)
    {
      v73(v55, v71, v66);
      OUTLINED_FUNCTION_18_11(v55, 0);
      if (__swift_getEnumTagSinglePayload(v55, 1, (uint64_t)v66) == 1)
        goto LABEL_36;
      (*(void (**)(uint64_t, uint64_t, id))(v139 + 32))(v54, v55, v66);
      sub_22ABDD0C4();
      v74 = (void *)sub_22ABDED2C();
      OUTLINED_FUNCTION_23();
      v66 = objc_msgSend(v137, sel_isReadableFileAtPath_, v74);

      if ((_DWORD)v66)
      {
        sub_22ABDD040();
        sub_22ABDE7C8();
        v75 = (uint64_t)v131;
        sub_22ABDE7BC();
        v66 = v135;
        if (__swift_getEnumTagSinglePayload(v75, 1, (uint64_t)v135) == 1)
        {
          OUTLINED_FUNCTION_0_63();
          sub_22A9AD754(v75, &qword_255B15950);
LABEL_32:
          v55 = v134;
          if (__OFADD__(v140, 1))
            goto LABEL_51;
          ++v140;
          goto LABEL_34;
        }
        v76 = v133;
        v77 = v129;
        (*(void (**)(char *, uint64_t, id))(v133 + 32))(v129, v75, v66);
        if ((sub_22ABDE7D4() & 1) == 0)
        {
          (*(void (**)(char *, id))(v76 + 8))(v77, v66);
          OUTLINED_FUNCTION_0_63();
          goto LABEL_32;
        }
        sub_22ABDD064();
        v78 = v126;
        sub_22ABDD088();
        OUTLINED_FUNCTION_23();
        v79 = (_QWORD *)(v78 + *(int *)(v117 + 36));
        v80 = v128;
        *v79 = v125;
        v79[1] = v80;
        sub_22ABDEAEC();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22AA366D8();
          v136 = v84;
        }
        v81 = v129;
        v55 = v134;
        v82 = *(_QWORD *)(v136 + 16);
        v66 = (id)(v82 + 1);
        v54 = v122;
        if (v82 >= *(_QWORD *)(v136 + 24) >> 1)
        {
          sub_22AA366D8();
          v136 = v85;
        }
        v83 = v136;
        *(_QWORD *)(v136 + 16) = v66;
        sub_22AAA833C(v126, v83+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(_QWORD *)(v116 + 72) * v82);
        (*(void (**)(char *, _QWORD *))(v133 + 8))(v81, v135);
        OUTLINED_FUNCTION_0_63();
      }
      else
      {
        if ((v132 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_1_58();
          OUTLINED_FUNCTION_1_58();
          OUTLINED_FUNCTION_1_58();
          type metadata accessor for DatasetError();
          sub_22A9BED8C((unint64_t *)&qword_255B11498, (uint64_t (*)(uint64_t))type metadata accessor for DatasetError, (uint64_t)&protocol conformance descriptor for DatasetError);
          swift_allocError();
          v97 = v138;
          v73(v98, v54, v138);
          swift_storeEnumTagMultiPayload();
          OUTLINED_FUNCTION_36_23();
          v99 = *(void (**)(uint64_t, void *))(v139 + 8);
          v99(v54, v97);
          v99(v130, v97);
          return v136;
        }
        OUTLINED_FUNCTION_0_63();
        if (__OFADD__(v141, 1))
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
        }
        ++v141;
      }
LABEL_34:
      v71 += v72;
      if (!--v69)
        goto LABEL_35;
    }
  }
  v53 = v143[0];
  sub_22ABDD004();

  OUTLINED_FUNCTION_36_23();
  return v136;
}

uint64_t sub_22AAB5318(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_22AAB53E8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_22A9E7618((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_22A9E7618((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_22ABDEAEC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_22AAB53E8(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_22AAB553C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_22ABDF668();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_22AAB5600(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_22ABDF860();
    if (!v8)
    {
      result = sub_22ABDFAD0();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_22AAB553C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_22ABDFB9C();
  __break(1u);
  return result;
}

uint64_t sub_22AAB5600(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_22AAB5694(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_22AAB5804(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_22AAB5804((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22AAB5694(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_22ABDEDE0();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  sub_22AA82B44(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_22ABDF7AC();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  sub_22ABDFB9C();
  __break(1u);
LABEL_14:
  result = sub_22ABDFAD0();
  __break(1u);
  return result;
}

char *sub_22AAB5804(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B145E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_22AAB599C(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_22AAB58D8(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_22AAB58D8(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_22ABDFB9C();
  __break(1u);
  return result;
}

char *sub_22AAB599C(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_22ABDFB9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

id sub_22AAB5A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v9;
  id v10;

  type metadata accessor for URLResourceKey(0);
  v9 = (void *)sub_22ABDEFE4();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(a5, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, a1, v9, a3, a4);

  return v10;
}

uint64_t OUTLINED_FUNCTION_0_63()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 224) + 8))(v0, *(_QWORD *)(v1 - 232));
}

uint64_t OUTLINED_FUNCTION_2_65()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 440) + 8))(v0, *(_QWORD *)(v1 - 432));
}

uint64_t OUTLINED_FUNCTION_3_72()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_54()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 304);
}

uint64_t sub_22AAB5B04()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  char v8;
  char *v9;
  uint64_t *v10;

  v0 = sub_22ABDD7D8();
  if (v1 <= 0x3F)
  {
    sub_22AAB6E74();
    if (v3 > 0x3F)
      return v2;
    swift_getTupleTypeLayout2();
    v9 = &v8;
    v0 = sub_22ABDE8A0();
    if (v4 > 0x3F)
      return v0;
    v2 = sub_22ABDF5D8();
    if (v5 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout2();
      v10 = &v7;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_22AAB5BEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22ABDE8A0();
      v7 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = sub_22ABDF5D8();
      v9 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6))
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v7((uint64_t *)v10, (uint64_t *)v11, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
      }
    }
    else
    {
      v13 = sub_22ABDD7D8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
      v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v18 = v17[12];
      v19 = &v15[v18];
      v20 = &v16[v18];
      v21 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
      v23 = v17[13];
      v24 = &v15[v23];
      v25 = &v16[v23];
      v26 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      *(_DWORD *)&v15[v17[14]] = *(_DWORD *)&v16[v17[14]];
      *(_QWORD *)&v15[v17[15]] = *(_QWORD *)&v16[v17[15]];
      v28 = v17[16];
      v29 = &v15[v28];
      v30 = &v16[v28];
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      v32(v29, v30, v31);
      v32(&v15[v17[17]], &v16[v17[17]], v31);
      v33 = v17[18];
      v34 = &v15[v33];
      v35 = &v16[v33];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v16[v33], 1, v31))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v32(v34, v35, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v31);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22AAB5F54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t (*v13)(uint64_t, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_22ABDE8A0();
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
    v13(a1, v2);
    sub_22ABDF5D8();
    v3 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  }
  else
  {
    v4 = sub_22ABDD7D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v7 = v5 + v6[12];
    v8 = sub_22ABDD5D4();
    if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = v5 + v6[13];
    v10 = sub_22ABDD598();
    if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    v11 = v5 + v6[16];
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
    v13(v11, v2);
    v13(v5 + v6[17], v2);
    v3 = v5 + v6[18];
  }
  result = __swift_getEnumTagSinglePayload(v3, 1, v2);
  if (!(_DWORD)result)
    return v13(v3, v2);
  return result;
}

char *sub_22AAB6128(char *a1, char *a2)
{
  uint64_t v4;
  void (*v5)(void *, const void *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(void *, const void *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22ABDE8A0();
    v5 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
    v5(a1, a2, v4);
    v6 = sub_22ABDF5D8();
    v7 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v8 = &a1[v7];
    v9 = &a2[v7];
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4))
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v5(v8, v9, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v4);
    }
  }
  else
  {
    v10 = sub_22ABDD7D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v12 = &a1[v11];
    v13 = &a2[v11];
    *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
    v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v15 = v14[12];
    v16 = &v12[v15];
    v17 = &v13[v15];
    v18 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
    v20 = v14[13];
    v21 = &v12[v20];
    v22 = &v13[v20];
    v23 = sub_22ABDD598();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
    }
    *(_DWORD *)&v12[v14[14]] = *(_DWORD *)&v13[v14[14]];
    *(_QWORD *)&v12[v14[15]] = *(_QWORD *)&v13[v14[15]];
    v25 = v14[16];
    v26 = &v12[v25];
    v27 = &v13[v25];
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v29 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    v29(v26, v27, v28);
    v29(&v12[v14[17]], &v13[v14[17]], v28);
    v30 = v14[18];
    v31 = &v12[v30];
    v32 = &v13[v30];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v13[v30], 1, v28))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v29(v31, v32, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v28);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22AAB6464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  const void *v33;
  uint64_t v34;

  if (a1 != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_22ABDE8A0();
      v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
      v6(a1, a2, v5);
      v7 = sub_22ABDF5D8();
      v8 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v9 = (void *)(a1 + v8);
      v10 = (const void *)(a2 + v8);
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v5))
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v9, (uint64_t)v10, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v5);
      }
    }
    else
    {
      v11 = sub_22ABDD7D8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v13 = (char *)(a1 + v12);
      v14 = a2 + v12;
      *(_DWORD *)v13 = *(_DWORD *)(a2 + v12);
      *((_DWORD *)v13 + 1) = *(_DWORD *)(a2 + v12 + 4);
      *((_DWORD *)v13 + 2) = *(_DWORD *)(a2 + v12 + 8);
      *((_DWORD *)v13 + 3) = *(_DWORD *)(a2 + v12 + 12);
      v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v16 = v15[12];
      v17 = &v13[v16];
      v18 = (const void *)(v14 + v16);
      v19 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      v21 = v15[13];
      v22 = &v13[v21];
      v23 = (const void *)(v14 + v21);
      v24 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      *(_DWORD *)&v13[v15[14]] = *(_DWORD *)(v14 + v15[14]);
      *(_QWORD *)&v13[v15[15]] = *(_QWORD *)(v14 + v15[15]);
      v26 = v15[16];
      v27 = &v13[v26];
      v28 = v14 + v26;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v30 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      v30(v27, v28, v29);
      v30(&v13[v15[17]], v14 + v15[17], v29);
      v31 = v15[18];
      v32 = &v13[v31];
      v33 = (const void *)(v14 + v31);
      if (__swift_getEnumTagSinglePayload(v14 + v31, 1, v29))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v30(v32, (uint64_t)v33, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v29);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_22AAB67D4(char *a1, char *a2)
{
  uint64_t v4;
  void (*v5)(void *, const void *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(void *, const void *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22ABDE8A0();
    v5 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
    v5(a1, a2, v4);
    v6 = sub_22ABDF5D8();
    v7 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v8 = &a1[v7];
    v9 = &a2[v7];
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4))
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v5(v8, v9, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v4);
    }
  }
  else
  {
    v10 = sub_22ABDD7D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v12 = &a1[v11];
    v13 = &a2[v11];
    *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
    v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v15 = v14[12];
    v16 = &v12[v15];
    v17 = &v13[v15];
    v18 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
    v20 = v14[13];
    v21 = &v12[v20];
    v22 = &v13[v20];
    v23 = sub_22ABDD598();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
    }
    *(_DWORD *)&v12[v14[14]] = *(_DWORD *)&v13[v14[14]];
    *(_QWORD *)&v12[v14[15]] = *(_QWORD *)&v13[v14[15]];
    v25 = v14[16];
    v26 = &v12[v25];
    v27 = &v13[v25];
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v29 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
    v29(v26, v27, v28);
    v29(&v12[v14[17]], &v13[v14[17]], v28);
    v30 = v14[18];
    v31 = &v12[v30];
    v32 = &v13[v30];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v13[v30], 1, v28))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v29(v31, v32, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v28);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_22AAB6B10(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(void *, const void *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(void *, const void *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  if (a1 != a2)
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_22ABDE8A0();
      v6 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
      v6(a1, a2, v5);
      v7 = sub_22ABDF5D8();
      v8 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v5))
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v6(v9, v10, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v5);
      }
    }
    else
    {
      v11 = sub_22ABDD7D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v13 = &a1[v12];
      v14 = &a2[v12];
      *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
      v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v16 = v15[12];
      v17 = &v13[v16];
      v18 = &v14[v16];
      v19 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      v21 = v15[13];
      v22 = &v13[v21];
      v23 = &v14[v21];
      v24 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      *(_DWORD *)&v13[v15[14]] = *(_DWORD *)&v14[v15[14]];
      *(_QWORD *)&v13[v15[15]] = *(_QWORD *)&v14[v15[15]];
      v26 = v15[16];
      v27 = &v13[v26];
      v28 = &v14[v26];
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v30 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32);
      v30(v27, v28, v29);
      v30(&v13[v15[17]], &v14[v15[17]], v29);
      v31 = v15[18];
      v32 = &v13[v31];
      v33 = &v14[v31];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v14[v31], 1, v29))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v30(v32, v33, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v29);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s5StateOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s5StateOMn);
}

void sub_22AAB6E74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B15F30)
  {
    sub_22ABDD7D8();
    v0 = sub_22ABDD6B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255B15F30);
  }
}

void sub_22AAB6ED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = OUTLINED_FUNCTION_1_7();
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_22ABDD4F0();
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  v19 = v7;
  v8 = sub_22ABDDA0C();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_26_1();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_6_26();
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v11);
  v13 = OUTLINED_FUNCTION_9_55(v12, v18);
  v14(v13, v23, a1);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10230);
    OUTLINED_FUNCTION_27_8(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
    OUTLINED_FUNCTION_33_30();
    v16 = sub_22ABDD940();
    OUTLINED_FUNCTION_30_31();
    if (v16 == 2)
    {
      OUTLINED_FUNCTION_33_30();
      sub_22ABDD964();
      OUTLINED_FUNCTION_30_31();
      sub_22ABDD508();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    }
    v17 = OUTLINED_FUNCTION_15_49(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    OUTLINED_FUNCTION_25_32(v17, &qword_255B10220);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_36_29();
  OUTLINED_FUNCTION_14_49();
  OUTLINED_FUNCTION_19_40(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32));
  v15 = *(_QWORD *)(OUTLINED_FUNCTION_17_41() + 16);
  swift_bridgeObjectRelease();
  if (v15 != 2)
  {
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    OUTLINED_FUNCTION_2_66();
    goto LABEL_10;
  }
  if (*(_QWORD *)(OUTLINED_FUNCTION_17_41() + 16) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    OUTLINED_FUNCTION_2_66();
LABEL_10:
    OUTLINED_FUNCTION_3();
    return;
  }
  __break(1u);
}

void sub_22AAB7124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = OUTLINED_FUNCTION_1_7();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = OUTLINED_FUNCTION_26_1();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v7);
  v9 = OUTLINED_FUNCTION_9_55(v8, v13);
  OUTLINED_FUNCTION_27_8((uint64_t)v9, v0, v10);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10230);
    OUTLINED_FUNCTION_79(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    sub_22ABDD7CC();
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
    OUTLINED_FUNCTION_25_32(v12, &qword_255B10220);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_36_29();
  OUTLINED_FUNCTION_14_49();
  OUTLINED_FUNCTION_19_40(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  v11 = *(_QWORD *)(OUTLINED_FUNCTION_17_41() + 16);
  swift_bridgeObjectRelease();
  if (v11 != 2)
  {
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    OUTLINED_FUNCTION_2_66();
    goto LABEL_7;
  }
  if (*(_QWORD *)(OUTLINED_FUNCTION_17_41() + 16))
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    OUTLINED_FUNCTION_2_66();
LABEL_7:
    OUTLINED_FUNCTION_3();
    return;
  }
  __break(1u);
}

uint64_t sub_22AAB72A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  sub_22ABDDA0C();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_26_1();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v11);
  v13 = OUTLINED_FUNCTION_10_48(v12, v19);
  OUTLINED_FUNCTION_79((uint64_t)v13, v2, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_22ABDE8A0();
    v15 = OUTLINED_FUNCTION_23_42();
    v16 = v2 + *(int *)(OUTLINED_FUNCTION_13_59() + 48);
    OUTLINED_FUNCTION_79(a2, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(a1 - 1) + 32));
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v16, v15);
  }
  else
  {
    v18 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v3, v2, v9);
    sub_22ABDD7A8();
    sub_22AA3F338((uint64_t)v8, a1[2], a1[3], a1[4]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3, v9);
    return sub_22A9AD754(v18, &qword_255B10220);
  }
}

uint64_t sub_22AAB7428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_26_1();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_6_26();
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v12);
  v14 = OUTLINED_FUNCTION_10_48(v13, v21[0]);
  v15(v14, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_22ABDE8A0();
    v16 = OUTLINED_FUNCTION_23_42();
    v17 = OUTLINED_FUNCTION_13_59();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a2, v2 + *(int *)(v17 + 48), v16);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2, v6);
  }
  else
  {
    v19 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    OUTLINED_FUNCTION_27_8(v3, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
    v20 = sub_22ABDD784();
    MEMORY[0x24BDAC7A8](v20);
    v21[-4] = *(_QWORD *)(a1 + 16);
    *(_OWORD *)&v21[-3] = *(_OWORD *)(a1 + 24);
    OUTLINED_FUNCTION_1_7();
    sub_22A9D1D90();
    sub_22A9AD754((uint64_t)v9, &qword_255B0DAB8);
    OUTLINED_FUNCTION_15_49(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    return sub_22A9AD754(v19, &qword_255B10220);
  }
}

uint64_t sub_22AAB7624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v13 = a1;
  v16 = a2;
  v2 = sub_22ABDD4F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22ABDDA0C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  MEMORY[0x24BDAC7A8](v14);
  v10 = sub_22ABDE8A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
  sub_22ABDD964();
  sub_22ABDD4E4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v15 = v9;
  sub_22ABDE81C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v10);
  sub_22A9A9038();
  return sub_22ABDE918();
}

void sub_22AAB77F4(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v55 = a4;
  v53 = a2;
  v54 = a5;
  v56 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_0();
  v57 = v9;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v49 = *(_QWORD *)(v47 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v48 = v11;
  v12 = a3[3];
  v45 = a3[2];
  v46 = v12;
  v13 = sub_22ABDE8A0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v41 - v18;
  v41[1] = *(_QWORD *)(sub_22ABDD4F0() - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v20);
  v44 = OUTLINED_FUNCTION_6_75();
  v42 = *(_QWORD *)(v44 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_6_26();
  v43 = sub_22ABDD7D8();
  v52 = *(_QWORD *)(v43 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_0();
  v51 = (char *)v23;
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_34();
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(v25 + 16))(v5, v50, a3);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v32 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    OUTLINED_FUNCTION_49((uint64_t)v51, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 32));
    sub_22ABDD7A8();
    OUTLINED_FUNCTION_11_57();
    v33 = OUTLINED_FUNCTION_28_27();
    OUTLINED_FUNCTION_37_25();
    OUTLINED_FUNCTION_11_57();
    v34 = sub_22ABDD508();
    v35 = OUTLINED_FUNCTION_37_25();
    MEMORY[0x24BDAC7A8](v35);
    v36 = v46;
    v37 = v55;
    v41[-8] = v45;
    v41[-7] = v37;
    v38 = a3[4];
    v41[-6] = v36;
    v41[-5] = v38;
    v41[-4] = v33;
    v41[-3] = v34;
    v39 = v56;
    v40 = v53;
    sub_22ABDD910();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v6, v44);
    OUTLINED_FUNCTION_51((uint64_t)v51, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
    sub_22A9AD754(v32, &qword_255B10220);
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_22_40((uint64_t)v19, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
  v51 = v19;
  v52 = v14;
  OUTLINED_FUNCTION_22_40((uint64_t)v17, (uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  v26 = v47;
  if (swift_dynamicCast())
  {
    OUTLINED_FUNCTION_79_8(v57, 0);
    v27 = OUTLINED_FUNCTION_33_11();
    if (__swift_getEnumTagSinglePayload(v27, v28, v26) != 1)
    {
      v29 = sub_22ABDF5D8();
      v50 = v5 + *(int *)(OUTLINED_FUNCTION_12_49() + 48);
      v31 = v48;
      v30 = v49;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v48, v57, v26);
      sub_22A9A9038();
      sub_22AA3FF54();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v26);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v13);
      OUTLINED_FUNCTION_51(v50, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8));
LABEL_6:
      OUTLINED_FUNCTION_16();
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_79_8(v57, 1);
  }
  sub_22A9AD754(v57, &qword_2540E8570);
  OUTLINED_FUNCTION_24_39();
  __break(1u);
}

void sub_22AAB7C1C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int EnumTagSinglePayload;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v88 = a2;
  v90 = a5;
  v91 = a4;
  v87 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  v79 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v80 = *(_QWORD *)(v9 - 8);
  v81 = v9;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_0();
  v11 = a3[3];
  v76 = a3[2];
  v77 = v11;
  v78 = v12;
  v13 = sub_22ABDE8A0();
  v86 = *(char **)(v13 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_87();
  v75 = v15;
  MEMORY[0x24BDAC7A8](v16);
  v85 = (uint64_t)&v69 - v17;
  v18 = sub_22ABDF5D8();
  v82 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_87();
  v83 = (char *)v20;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v69 - v22;
  v24 = sub_22ABDD4F0();
  v71 = *(_QWORD *)(v24 - 8);
  v72 = v24;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_0();
  v70 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v27);
  v84 = OUTLINED_FUNCTION_6_75();
  v74 = *(_QWORD *)(v84 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_0();
  v73 = v29;
  v30 = sub_22ABDD7D8();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v69 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, _QWORD *))(v37 + 16))(v36, v89, a3);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v45 = (uint64_t)&v36[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v36, v30);
    sub_22ABDD784();
    if (__swift_getEnumTagSinglePayload(v5, 1, v84) == 1)
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      sub_22A9AD754(v5, &qword_255B0DAB8);
      OUTLINED_FUNCTION_21_46();
      sub_22A9AD754(v45, &qword_255B10220);
    }
    else
    {
      v85 = v45;
      v86 = v33;
      v89 = v31;
      v57 = v73;
      v58 = v74;
      OUTLINED_FUNCTION_49(v73, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 32));
      v59 = v70;
      OUTLINED_FUNCTION_11_57();
      v60 = OUTLINED_FUNCTION_28_27();
      v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v59, v72);
      MEMORY[0x24BDAC7A8](v61);
      v62 = v77;
      v63 = v91;
      *(&v69 - 8) = v76;
      *(&v69 - 7) = v63;
      v64 = a3[4];
      *(&v69 - 6) = v62;
      *(&v69 - 5) = v64;
      v65 = v87;
      *(&v69 - 4) = v60;
      *(&v69 - 3) = v65;
      v68 = v88;
      sub_22ABDF5D8();
      sub_22ABDD910();
      OUTLINED_FUNCTION_51(v57, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
      (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v30);
      sub_22A9AD754(v85, &qword_255B10220);
    }
    goto LABEL_10;
  }
  v38 = OUTLINED_FUNCTION_12_49();
  v39 = v82;
  OUTLINED_FUNCTION_49((uint64_t)v23, (uint64_t)&v36[*(int *)(v38 + 48)], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 32));
  v40 = (uint64_t)v83;
  OUTLINED_FUNCTION_49((uint64_t)v83, (uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 16));
  v41 = OUTLINED_FUNCTION_33_11();
  v43 = v18;
  if (__swift_getEnumTagSinglePayload(v41, v42, v13) == 1)
  {
    v44 = *(void (**)(char *, uint64_t))(v39 + 8);
    v44(v23, v43);
    v44((char *)v40, v43);
    OUTLINED_FUNCTION_21_46();
    (*((void (**)(char *, uint64_t))v86 + 1))(v36, v13);
LABEL_10:
    OUTLINED_FUNCTION_16();
    return;
  }
  v46 = v85;
  v47 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v86;
  OUTLINED_FUNCTION_22_40(v85, v40, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v86 + 4));
  OUTLINED_FUNCTION_22_40(v75, v46, v47[2]);
  v48 = v79;
  v49 = v81;
  if (swift_dynamicCast())
  {
    v83 = v23;
    v84 = v13;
    v89 = v43;
    OUTLINED_FUNCTION_70_3(v48, 0);
    v50 = OUTLINED_FUNCTION_33_11();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v50, v51, v49);
    v53 = v80;
    v54 = v78;
    if (EnumTagSinglePayload != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v78, v48, v49);
      sub_22A9A9038();
      sub_22AA40204();
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v49);
      v55 = v47[1];
      v56 = v84;
      ((void (*)(uint64_t, uint64_t))v55)(v85, v84);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v83, v89);
      ((void (*)(char *, uint64_t))v55)(v36, v56);
      goto LABEL_10;
    }
  }
  else
  {
    v66 = OUTLINED_FUNCTION_33_11();
    OUTLINED_FUNCTION_70_3(v66, v67);
  }
  sub_22A9AD754(v48, &qword_2540E8570);
  OUTLINED_FUNCTION_24_39();
  __break(1u);
}

uint64_t sub_22AAB81B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v5;

  if (result)
  {
    result = a3(result, a2, 1);
    if (!v5)
      return __swift_storeEnumTagSinglePayload(a5, 0, 1, a4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22AAB8214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22AAB81B4(a1, *(_QWORD *)(v2 + 48), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 56), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_22AAB8244(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD *);
  _QWORD v5[4];
  char v6;

  if (result)
  {
    v2 = v1[6];
    v3 = v1[7];
    v4 = (uint64_t (*)(_QWORD *))v1[8];
    v5[0] = result;
    v5[1] = v2;
    v5[2] = v3;
    v5[3] = v3;
    v6 = 0;
    return v4(v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22AAB8288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22AAB7624(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_66()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_75()
{
  return sub_22ABDDA0C();
}

char *OUTLINED_FUNCTION_9_55@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

char *OUTLINED_FUNCTION_10_48@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_11_57()
{
  return sub_22ABDD964();
}

uint64_t OUTLINED_FUNCTION_12_49()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_13_59()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_14_49()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_15_49@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_17_41()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_19_40@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_21_46()
{
  uint64_t v0;

  return __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 - 104), 1, 1, *(_QWORD *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_22_40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_23_42()
{
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_24_39()
{
  return sub_22ABDFADC();
}

uint64_t OUTLINED_FUNCTION_25_32(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_22A9AD754(v2, a2);
}

uint64_t OUTLINED_FUNCTION_28_27()
{
  return sub_22ABDD508();
}

uint64_t OUTLINED_FUNCTION_30_31()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_33_30()
{
  return sub_22ABDD7A8();
}

uint64_t OUTLINED_FUNCTION_36_29()
{
  return sub_22ABDF5D8();
}

uint64_t OUTLINED_FUNCTION_37_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

_QWORD *sub_22AAB8404(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_50_9();
  return a1;
}

_QWORD *assignWithCopy for SampledPrecisionRecallCurve(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SampledPrecisionRecallCurve()
{
  return &type metadata for SampledPrecisionRecallCurve;
}

void sub_22AAB84A0(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;

  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_2_67();
    do
    {
      OUTLINED_FUNCTION_11_58();
      if (v2)
      {
        OUTLINED_FUNCTION_13_60();
        v1 = v4;
      }
      OUTLINED_FUNCTION_8_53(v1);
    }
    while (!v3);
  }
  OUTLINED_FUNCTION_3_73();
}

void sub_22AAB8510(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;

  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_2_67();
    do
    {
      OUTLINED_FUNCTION_11_58();
      if (v2)
      {
        OUTLINED_FUNCTION_13_60();
        v1 = v4;
      }
      OUTLINED_FUNCTION_8_53(v1);
    }
    while (!v3);
  }
  OUTLINED_FUNCTION_3_73();
}

uint64_t sub_22AAB8580(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6F69736963657270 && a2 == 0xEE0065767275436ELL;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75436C6C61636572 && a2 == 0xEB00000000657672)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AAB86A8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x75436C6C61636572;
  else
    return 0x6F69736963657270;
}

uint64_t sub_22AAB86F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15F38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_6_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AAB8D4C();
  sub_22ABE02B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15F48);
  sub_22AAB8DC4(&qword_255B15F50, (uint64_t (*)(void))sub_22AAB8D88, MEMORY[0x24BEE12A0]);
  OUTLINED_FUNCTION_1_59();
  if (!v1)
    OUTLINED_FUNCTION_1_59();
  return OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

uint64_t sub_22AAB880C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15F60);
  MEMORY[0x24BDAC7A8](v3);
  v4 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  sub_22AAB8D4C();
  OUTLINED_FUNCTION_16_46();
  if (v1)
  {
    OUTLINED_FUNCTION_9_8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B15F48);
    sub_22AAB8DC4(&qword_255B15F68, (uint64_t (*)(void))sub_22AAB8E2C, MEMORY[0x24BEE12D0]);
    OUTLINED_FUNCTION_0_64();
    v4 = v6;
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_0_64();
    OUTLINED_FUNCTION_14_5();
    OUTLINED_FUNCTION_50_9();
    OUTLINED_FUNCTION_9_8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_58_1();
  }
  return v4;
}

uint64_t sub_22AAB8970(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000022ABE55B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AAB8A54(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000013;
  else
    return 0x65726F6373;
}

uint64_t sub_22AAB8A8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15F90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_6_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AAB90C4();
  sub_22ABE02B0();
  OUTLINED_FUNCTION_10_15();
  if (!v1)
    OUTLINED_FUNCTION_10_15();
  return OUTLINED_FUNCTION_21_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

float sub_22AAB8B78(_QWORD *a1)
{
  uint64_t v2;
  float v3;
  float v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15FA0);
  MEMORY[0x24BDAC7A8](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AAB90C4();
  OUTLINED_FUNCTION_16_46();
  OUTLINED_FUNCTION_12_50();
  v4 = v3;
  OUTLINED_FUNCTION_12_50();
  OUTLINED_FUNCTION_26_31();
  OUTLINED_FUNCTION_9_8();
  return v4;
}

uint64_t sub_22AAB8C90()
{
  char *v0;

  return sub_22AAB86A8(*v0);
}

uint64_t sub_22AAB8C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AAB8580(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AAB8CBC()
{
  sub_22AAB8D4C();
  return sub_22ABE02EC();
}

uint64_t sub_22AAB8CE4()
{
  sub_22AAB8D4C();
  return sub_22ABE02F8();
}

uint64_t sub_22AAB8D0C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_22AAB880C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_22AAB8D34(_QWORD *a1)
{
  return sub_22AAB86F4(a1);
}

unint64_t sub_22AAB8D4C()
{
  unint64_t result;

  result = qword_255B15F40;
  if (!qword_255B15F40)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF74A8, &type metadata for SampledPrecisionRecallCurve.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15F40);
  }
  return result;
}

unint64_t sub_22AAB8D88()
{
  unint64_t result;

  result = qword_255B15F58;
  if (!qword_255B15F58)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7480, &type metadata for SampledPrecisionRecallCurve.Point);
    atomic_store(result, (unint64_t *)&qword_255B15F58);
  }
  return result;
}

uint64_t sub_22AAB8DC4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B15F48);
    v8 = a2();
    result = MEMORY[0x22E2E4D80](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22AAB8E2C()
{
  unint64_t result;

  result = qword_255B15F70;
  if (!qword_255B15F70)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7458, &type metadata for SampledPrecisionRecallCurve.Point);
    atomic_store(result, (unint64_t *)&qword_255B15F70);
  }
  return result;
}

uint64_t sub_22AAB8E68()
{
  char *v0;

  return sub_22AAB8A54(*v0);
}

uint64_t sub_22AAB8E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AAB8970(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AAB8E94()
{
  sub_22AAB90C4();
  return sub_22ABE02EC();
}

uint64_t sub_22AAB8EBC()
{
  sub_22AAB90C4();
  return sub_22ABE02F8();
}

void sub_22AAB8EE4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  float v4;
  int v5;

  v4 = sub_22AAB8B78(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
  }
}

uint64_t sub_22AAB8F0C(_QWORD *a1)
{
  return sub_22AAB8A8C(a1);
}

uint64_t sub_22AAB8F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = sub_22ABDEAEC();
  sub_22AAB84A0(v0);
  v2 = v1;
  swift_bridgeObjectRelease();
  v3 = sub_22ABDEAEC();
  sub_22AAB8510(v3);
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = OUTLINED_FUNCTION_50_9();
  sub_22AAB84A0(v6);
  v8 = v7;
  swift_bridgeObjectRelease();
  v9 = OUTLINED_FUNCTION_50_9();
  sub_22AAB8510(v9);
  v11 = v10;
  swift_bridgeObjectRelease();
  return MEMORY[0x22E2E214C](v2, v5, v8, v11);
}

ValueMetadata *type metadata accessor for SampledPrecisionRecallCurve.CodingKeys()
{
  return &type metadata for SampledPrecisionRecallCurve.CodingKeys;
}

ValueMetadata *type metadata accessor for SampledPrecisionRecallCurve.Point()
{
  return &type metadata for SampledPrecisionRecallCurve.Point;
}

unint64_t sub_22AAB9008()
{
  unint64_t result;

  result = qword_255B15F78;
  if (!qword_255B15F78)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7430, &type metadata for SampledPrecisionRecallCurve.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15F78);
  }
  return result;
}

unint64_t sub_22AAB9048()
{
  unint64_t result;

  result = qword_255B15F80;
  if (!qword_255B15F80)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF73A0, &type metadata for SampledPrecisionRecallCurve.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15F80);
  }
  return result;
}

unint64_t sub_22AAB9088()
{
  unint64_t result;

  result = qword_255B15F88;
  if (!qword_255B15F88)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF73C8, &type metadata for SampledPrecisionRecallCurve.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15F88);
  }
  return result;
}

unint64_t sub_22AAB90C4()
{
  unint64_t result;

  result = qword_255B15F98;
  if (!qword_255B15F98)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF75B0, &type metadata for SampledPrecisionRecallCurve.Point.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15F98);
  }
  return result;
}

uint64_t _s18CreateMLComponents27SampledPrecisionRecallCurveV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AAB914C + 4 * byte_22ABF7315[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AAB9180 + 4 * byte_22ABF7310[v4]))();
}

uint64_t sub_22AAB9180(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAB9188(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AAB9190);
  return result;
}

uint64_t sub_22AAB919C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AAB91A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AAB91A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAB91B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SampledPrecisionRecallCurve.Point.CodingKeys()
{
  return &type metadata for SampledPrecisionRecallCurve.Point.CodingKeys;
}

unint64_t sub_22AAB91D0()
{
  unint64_t result;

  result = qword_255B15FA8;
  if (!qword_255B15FA8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7588, &type metadata for SampledPrecisionRecallCurve.Point.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15FA8);
  }
  return result;
}

unint64_t sub_22AAB9210()
{
  unint64_t result;

  result = qword_255B15FB0;
  if (!qword_255B15FB0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF74F8, &type metadata for SampledPrecisionRecallCurve.Point.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15FB0);
  }
  return result;
}

unint64_t sub_22AAB9250()
{
  unint64_t result;

  result = qword_255B15FB8;
  if (!qword_255B15FB8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7520, &type metadata for SampledPrecisionRecallCurve.Point.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15FB8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_64()
{
  return sub_22ABDFC8C();
}

void OUTLINED_FUNCTION_2_67()
{
  sub_22AB4D538();
}

uint64_t OUTLINED_FUNCTION_8_53(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_QWORD *)(result + 16) = v1;
  *(_DWORD *)(result + 4 * v2 + 32) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_50()
{
  return sub_22ABDFC68();
}

void OUTLINED_FUNCTION_13_60()
{
  sub_22AB4D538();
}

uint64_t OUTLINED_FUNCTION_16_46()
{
  return sub_22ABE0298();
}

BOOL static OptimizationStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t OptimizationStrategy.hash(into:)()
{
  return sub_22ABE0250();
}

uint64_t sub_22AAB9374(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6974616D6F747561 && a2 == 0xE900000000000063;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746F6F6D536E6F6ELL && a2 == 0xE900000000000068;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x726F6D654D776F6CLL && a2 == 0xE900000000000079;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 1953718630 && a2 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_22ABDFF68();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_22AAB951C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AAB9554 + 4 * byte_22ABF7600[a1]))(0x6974616D6F747561, 0xE900000000000063);
}

uint64_t sub_22AAB9554()
{
  return 0x746F6F6D536E6F6ELL;
}

uint64_t sub_22AAB956C()
{
  return 0x726F6D654D776F6CLL;
}

uint64_t sub_22AAB9584()
{
  return 1953718630;
}

uint64_t sub_22AAB9594()
{
  sub_22AAB9A80();
  return sub_22ABE02EC();
}

uint64_t sub_22AAB95BC()
{
  sub_22AAB9A80();
  return sub_22ABE02F8();
}

uint64_t sub_22AAB95E8()
{
  unsigned __int8 *v0;

  return sub_22AAB951C(*v0);
}

uint64_t sub_22AAB95F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AAB9374(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AAB9614()
{
  sub_22AAB9990();
  return sub_22ABE02EC();
}

uint64_t sub_22AAB963C()
{
  sub_22AAB9990();
  return sub_22ABE02F8();
}

uint64_t sub_22AAB9664()
{
  sub_22AAB99CC();
  return sub_22ABE02EC();
}

uint64_t sub_22AAB968C()
{
  sub_22AAB99CC();
  return sub_22ABE02F8();
}

uint64_t sub_22AAB96B4()
{
  sub_22AAB9A08();
  return sub_22ABE02EC();
}

uint64_t sub_22AAB96DC()
{
  sub_22AAB9A08();
  return sub_22ABE02F8();
}

uint64_t sub_22AAB9704()
{
  sub_22AAB9A44();
  return sub_22ABE02EC();
}

uint64_t sub_22AAB972C()
{
  sub_22AAB9A44();
  return sub_22ABE02F8();
}

void OptimizationStrategy.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15FC0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_6_76(v5, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15FC8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15FD0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_3_23();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15FD8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_33();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15FE0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_33();
  v9 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AAB9990();
  sub_22ABE02B0();
  __asm { BR              X9 }
}

void sub_22AAB98BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_22AAB9A80();
  OUTLINED_FUNCTION_7();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
  OUTLINED_FUNCTION_16();
}

unint64_t sub_22AAB9990()
{
  unint64_t result;

  result = qword_255B15FE8;
  if (!qword_255B15FE8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7ABC, &type metadata for OptimizationStrategy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15FE8);
  }
  return result;
}

unint64_t sub_22AAB99CC()
{
  unint64_t result;

  result = qword_255B15FF0;
  if (!qword_255B15FF0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7A6C, &type metadata for OptimizationStrategy.FastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15FF0);
  }
  return result;
}

unint64_t sub_22AAB9A08()
{
  unint64_t result;

  result = qword_255B15FF8;
  if (!qword_255B15FF8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7A1C, &type metadata for OptimizationStrategy.LowMemoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B15FF8);
  }
  return result;
}

unint64_t sub_22AAB9A44()
{
  unint64_t result;

  result = qword_255B16000;
  if (!qword_255B16000)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF79CC, &type metadata for OptimizationStrategy.NonSmoothCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16000);
  }
  return result;
}

unint64_t sub_22AAB9A80()
{
  unint64_t result;

  result = qword_255B16008;
  if (!qword_255B16008)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF797C, &type metadata for OptimizationStrategy.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16008);
  }
  return result;
}

void OptimizationStrategy.hashValue.getter()
{
  sub_22ABE0244();
  OUTLINED_FUNCTION_0_23();
  sub_22ABE0280();
  OUTLINED_FUNCTION_16_0();
}

void OptimizationStrategy.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16010);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16018);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16020);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_6_76(v5, v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16028);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_3_23();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16030);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v10 = v9 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AAB9990();
  sub_22ABE0298();
  if (!v24)
  {
    v25 = v7;
    v11 = sub_22ABDFC98();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v22 = *(unsigned __int8 *)(v11 + 32);
      sub_22A9DA86C(1, v12, v11, v11 + 32, 0, (2 * v12) | 1);
      v14 = v13;
      v16 = v15;
      swift_bridgeObjectRelease();
      if (v14 == v16 >> 1)
        __asm { BR              X9 }
    }
    v17 = sub_22ABDF830();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v19 = &type metadata for OptimizationStrategy;
    sub_22ABDFC08();
    sub_22ABDF824();
    v20 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow(v20);
    OUTLINED_FUNCTION_11_24();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v10, v6);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_16();
}

void sub_22AAB9DF8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_51();
  OUTLINED_FUNCTION_0_65();
  if (!v0)
  {
    OUTLINED_FUNCTION_14_50();
    JUMPOUT(0x22AAB9EA4);
  }
  OUTLINED_FUNCTION_11_24();
  OUTLINED_FUNCTION_2_68();
  JUMPOUT(0x22AAB9DE0);
}

void sub_22AAB9E28()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10_49();
  OUTLINED_FUNCTION_0_65();
  if (v0)
    JUMPOUT(0x22AAB9E50);
  JUMPOUT(0x22AAB9EA0);
}

void sub_22AAB9E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_15_50();
  OUTLINED_FUNCTION_0_65();
  if (v0)
  {
    OUTLINED_FUNCTION_11_24();
    OUTLINED_FUNCTION_2_68();
    JUMPOUT(0x22AAB9DE0);
  }
  v2 = OUTLINED_FUNCTION_14_50();
  v3(v2, *(_QWORD *)(v1 - 128));
  OUTLINED_FUNCTION_11_24();
  OUTLINED_FUNCTION_2_68();
  JUMPOUT(0x22AAB9EE4);
}

void sub_22AAB9EFC()
{
  sub_22ABE0244();
  OUTLINED_FUNCTION_0_23();
  sub_22ABE0280();
  OUTLINED_FUNCTION_16_0();
}

void sub_22AAB9F2C(_QWORD *a1)
{
  OptimizationStrategy.init(from:)(a1);
}

void sub_22AAB9F40(_QWORD *a1)
{
  OptimizationStrategy.encode(to:)(a1);
}

unint64_t sub_22AAB9F58()
{
  unint64_t result;

  result = qword_255B16038;
  if (!qword_255B16038)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for OptimizationStrategy, &type metadata for OptimizationStrategy);
    atomic_store(result, (unint64_t *)&qword_255B16038);
  }
  return result;
}

ValueMetadata *type metadata accessor for OptimizationStrategy()
{
  return &type metadata for OptimizationStrategy;
}

uint64_t _s18CreateMLComponents20OptimizationStrategyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22AAB9FF8 + 4 * byte_22ABF7611[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22AABA02C + 4 * byte_22ABF760C[v4]))();
}

uint64_t sub_22AABA02C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AABA034(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AABA03CLL);
  return result;
}

uint64_t sub_22AABA048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AABA050);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22AABA054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AABA05C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OptimizationStrategy.CodingKeys()
{
  return &type metadata for OptimizationStrategy.CodingKeys;
}

ValueMetadata *type metadata accessor for OptimizationStrategy.AutomaticCodingKeys()
{
  return &type metadata for OptimizationStrategy.AutomaticCodingKeys;
}

ValueMetadata *type metadata accessor for OptimizationStrategy.NonSmoothCodingKeys()
{
  return &type metadata for OptimizationStrategy.NonSmoothCodingKeys;
}

ValueMetadata *type metadata accessor for OptimizationStrategy.LowMemoryCodingKeys()
{
  return &type metadata for OptimizationStrategy.LowMemoryCodingKeys;
}

ValueMetadata *type metadata accessor for OptimizationStrategy.FastCodingKeys()
{
  return &type metadata for OptimizationStrategy.FastCodingKeys;
}

unint64_t sub_22AABA0BC()
{
  unint64_t result;

  result = qword_255B16040;
  if (!qword_255B16040)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7954, &type metadata for OptimizationStrategy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16040);
  }
  return result;
}

unint64_t sub_22AABA0FC()
{
  unint64_t result;

  result = qword_255B16048;
  if (!qword_255B16048)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7874, &type metadata for OptimizationStrategy.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16048);
  }
  return result;
}

unint64_t sub_22AABA13C()
{
  unint64_t result;

  result = qword_255B16050;
  if (!qword_255B16050)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF789C, &type metadata for OptimizationStrategy.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16050);
  }
  return result;
}

unint64_t sub_22AABA17C()
{
  unint64_t result;

  result = qword_255B16058;
  if (!qword_255B16058)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7824, &type metadata for OptimizationStrategy.NonSmoothCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16058);
  }
  return result;
}

unint64_t sub_22AABA1BC()
{
  unint64_t result;

  result = qword_255B16060;
  if (!qword_255B16060)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF784C, &type metadata for OptimizationStrategy.NonSmoothCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16060);
  }
  return result;
}

unint64_t sub_22AABA1FC()
{
  unint64_t result;

  result = qword_255B16068;
  if (!qword_255B16068)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF77D4, &type metadata for OptimizationStrategy.LowMemoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16068);
  }
  return result;
}

unint64_t sub_22AABA23C()
{
  unint64_t result;

  result = qword_255B16070;
  if (!qword_255B16070)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF77FC, &type metadata for OptimizationStrategy.LowMemoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16070);
  }
  return result;
}

unint64_t sub_22AABA27C()
{
  unint64_t result;

  result = qword_255B16078;
  if (!qword_255B16078)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7784, &type metadata for OptimizationStrategy.FastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16078);
  }
  return result;
}

unint64_t sub_22AABA2BC()
{
  unint64_t result;

  result = qword_255B16080;
  if (!qword_255B16080)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF77AC, &type metadata for OptimizationStrategy.FastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16080);
  }
  return result;
}

unint64_t sub_22AABA2FC()
{
  unint64_t result;

  result = qword_255B16088;
  if (!qword_255B16088)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF78C4, &type metadata for OptimizationStrategy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16088);
  }
  return result;
}

unint64_t sub_22AABA33C()
{
  unint64_t result;

  result = qword_255B16090;
  if (!qword_255B16090)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF78EC, &type metadata for OptimizationStrategy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255B16090);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_65()
{
  return sub_22ABDFBFC();
}

uint64_t OUTLINED_FUNCTION_2_68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_6_76(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

unint64_t OUTLINED_FUNCTION_10_49()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_22AAB9A08();
}

unint64_t OUTLINED_FUNCTION_12_51()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_22AAB9A44();
}

uint64_t OUTLINED_FUNCTION_14_50()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_15_50()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_22AAB99CC();
}

uint64_t sub_22AABA3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_18_48(a1, a2, a3);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_16_47(v3);
  v5 = OUTLINED_FUNCTION_9_56(v4);
  return AudioReader.AsyncBuffers.Iterator.next()(v5);
}

uint64_t sub_22AABA430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_10_46();
  if (!v1)
    return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v2 + 8));
  if (*(_QWORD *)(v0 + 24))
  {
    OUTLINED_FUNCTION_7_66();
    OUTLINED_FUNCTION_11_59();
    OUTLINED_FUNCTION_19_41();
  }
  else
  {
    OUTLINED_FUNCTION_17_42();
  }
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AABA488()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  swift_willThrowTypedImpl();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AABA4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a1;
  v3[4] = v2;
  if (a2)
  {
    swift_getObjectType();
    v4 = OUTLINED_FUNCTION_11_59();
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v3[5] = v4;
  v3[6] = v6;
  return OUTLINED_FUNCTION_6_3();
}

uint64_t sub_22AABA53C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_22AABA594;
  return AudioReader.MicrophoneAsyncBuffers.Iterator.next()(*(_QWORD *)(v0 + 24));
}

uint64_t sub_22AABA594()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5_55();
  if (v0)
    return OUTLINED_FUNCTION_3_0();
  else
    return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AABA5D0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  swift_willThrowTypedImpl();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AABA620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_18_48(a1, a2, a3);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_16_47(v3);
  v5 = OUTLINED_FUNCTION_9_56(v4);
  return VideoReader.AsyncFrames.Iterator.next()(v5);
}

uint64_t sub_22AABA668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_10_46();
  if (!v1)
    return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v2 + 8));
  if (*(_QWORD *)(v0 + 24))
  {
    OUTLINED_FUNCTION_7_66();
    OUTLINED_FUNCTION_11_59();
    OUTLINED_FUNCTION_19_41();
  }
  else
  {
    OUTLINED_FUNCTION_17_42();
  }
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AABA6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a1;
  v3[4] = v2;
  if (a2)
  {
    swift_getObjectType();
    v4 = sub_22ABDF14C();
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v3[5] = v4;
  v3[6] = v6;
  return swift_task_switch();
}

uint64_t sub_22AABA734()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_22AABA788;
  return VideoReader.CameraAsyncBuffers.Iterator.next()(*(_QWORD *)(v0 + 24));
}

uint64_t sub_22AABA788()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5_55();
  if (v0)
    return OUTLINED_FUNCTION_3_0();
  else
    return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AABA7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_18_48(a1, a2, a3);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_16_47(v3);
  v5 = OUTLINED_FUNCTION_9_56(v4);
  return AudioFeaturePrint.FeatureSequence.Iterator.next()(v5);
}

uint64_t sub_22AABA80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_18_48(a1, a2, a3);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_16_47(v3);
  v5 = OUTLINED_FUNCTION_9_56(v4);
  return HumanBodyActionCounter.CumulativeSumSequence.Iterator.next()(v5);
}

uint64_t sub_22AABA854(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t VideoReader.CameraAsyncBuffers.count.getter()
{
  return 0;
}

id VideoReader.CameraAsyncBuffers.captureSession.getter()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_captureSession);
}

uint64_t sub_22AABA8B4()
{
  return OUTLINED_FUNCTION_13_29();
}

uint64_t sub_22AABA8C0()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForMediaType_, *MEMORY[0x24BDB1D50]);
  if (v1 == (id)2 || v1 == (id)1)
  {
    type metadata accessor for VideoReaderError();
    sub_22AABB0C8((unint64_t *)&qword_255B11678, 255, (uint64_t (*)(uint64_t))type metadata accessor for VideoReaderError, (uint64_t)&protocol conformance descriptor for VideoReaderError);
    OUTLINED_FUNCTION_5_52();
    v3 = swift_storeEnumTagMultiPayload();
    swift_willThrow(v3);
    return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
  }
  else if (v1)
  {
    return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    return OUTLINED_FUNCTION_6_3();
  }
}

uint64_t sub_22AABA9D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_22AABAA1C;
  v1 = swift_continuation_init();
  sub_22AABAB30(v1);
  return swift_continuation_await();
}

uint64_t sub_22AABAA1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_17_1();
  v2 = *v0;
  *v3 = v2;
  if (*(_QWORD *)(v4 + 48))
    swift_willThrow(v1);
  return OUTLINED_FUNCTION_2_18(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t VideoReader.CameraAsyncBuffers.makeAsyncIterator()()
{
  void **v0;
  void *v1;
  uint64_t result;

  v1 = *v0;
  if ((objc_msgSend(*(id *)((char *)*v0 + OBJC_IVAR____TtCV18CreateMLComponents11VideoReader8Observer_captureSession), sel_isRunning) & 1) == 0)
  {
    type metadata accessor for VideoReader.CameraAsyncBuffers.Iterator();
    swift_allocObject();
    sub_22AABACE0(v1);
  }
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VideoReader.CameraAsyncBuffers.Iterator()
{
  return objc_opt_self();
}

void sub_22AABAB30(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v2 = (void *)objc_opt_self();
  v3 = *MEMORY[0x24BDB1D50];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v6[4] = sub_22AABB114;
  v6[5] = v4;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_22AABA854;
  v6[3] = &block_descriptor_3;
  v5 = _Block_copy(v6);
  swift_release();
  objc_msgSend(v2, sel_requestAccessForMediaType_completionHandler_, v3, v5);
  _Block_release(v5);
}

uint64_t sub_22AABABFC(char a1)
{
  uint64_t v2;
  uint64_t *v3;

  if ((a1 & 1) != 0)
    return swift_continuation_throwingResume();
  type metadata accessor for VideoReaderError();
  sub_22AABB0C8((unint64_t *)&qword_255B11678, 255, (uint64_t (*)(uint64_t))type metadata accessor for VideoReaderError, (uint64_t)&protocol conformance descriptor for VideoReaderError);
  v2 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  swift_allocError();
  *v3 = v2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_22AABACBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = VideoReader.CameraAsyncBuffers.makeAsyncIterator()();
  *a1 = result;
  return result;
}

void sub_22AABACE0(void *a1)
{
  uint64_t v1;
  id v2;

  *(_DWORD *)(v1 + 16) = 30;
  *(_QWORD *)(v1 + 24) = a1;
  *(_QWORD *)(v1 + 32) = 0;
  v2 = a1;
  sub_22AAAC70C();
}

void sub_22AABAD08()
{
  void *v0;

  OUTLINED_FUNCTION_0_5();
}

void VideoReader.CameraAsyncBuffers.Iterator.deinit()
{
  OUTLINED_FUNCTION_15_51();
}

void sub_22AABAD28()
{
  void *v0;

  OUTLINED_FUNCTION_0_5();
}

void VideoReader.CameraAsyncBuffers.Iterator.__deallocating_deinit()
{
  OUTLINED_FUNCTION_15_51();
}

uint64_t sub_22AABAD48()
{
  void *v0;

  return swift_deallocClassInstance();
}

uint64_t VideoReader.CameraAsyncBuffers.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return OUTLINED_FUNCTION_13_29();
}

uint64_t sub_22AABAD74()
{
  uint64_t v0;
  _QWORD *v1;

  sub_22ABDF1DC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_22AABADE8;
  return sub_22AAAD53C();
}

uint64_t sub_22AABADE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_17_1();
  v3[2] = v1;
  v3[3] = v2;
  v3[4] = v0;
  OUTLINED_FUNCTION_6_0();
  if (v0)
    return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v1 + 8));
  else
    return swift_task_switch();
}

void sub_22AABAE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 32);
  v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else if (v3 >= v2)
  {
    v4 = *(void **)(v0 + 24);
    v5 = *(_QWORD **)(v0 + 40);
    *(_QWORD *)(v1 + 32) = v3;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCVPixelBuffer_, v4);

    *v5 = 0xD000000000000028;
    v5[1] = 0x800000022ABE5640;
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = 30;
    v5[5] = v6;
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  __break(1u);
}

unint64_t sub_22AABAEF4(uint64_t a1)
{
  unint64_t result;

  result = sub_22AABAF18();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22AABAF18()
{
  unint64_t result;

  result = qword_255B160C0;
  if (!qword_255B160C0)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for VideoReader.CameraAsyncBuffers, &type metadata for VideoReader.CameraAsyncBuffers);
    atomic_store(result, (unint64_t *)&qword_255B160C0);
  }
  return result;
}

void sub_22AABAF54(uint64_t a1, uint64_t a2)
{
  sub_22AABB0C8(qword_255B160C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for VideoReader.CameraAsyncBuffers.Iterator, (uint64_t)&protocol conformance descriptor for VideoReader.CameraAsyncBuffers.Iterator);
}

uint64_t sub_22AABAF80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22AA559B4;
  return VideoReader.CameraAsyncBuffers.Iterator.next()(a1);
}

uint64_t sub_22AABAFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_255B16190 + dword_255B16190);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_22AABB058;
  return v10(a1, a2, a3);
}

uint64_t sub_22AABB058()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 16) = v0;
  return OUTLINED_FUNCTION_5_31(*(uint64_t (**)(void))(v3 + 8));
}

ValueMetadata *type metadata accessor for VideoReader.CameraAsyncBuffers()
{
  return &type metadata for VideoReader.CameraAsyncBuffers;
}

uint64_t method lookup function for VideoReader.CameraAsyncBuffers.Iterator()
{
  return swift_lookUpClassMethod();
}

void sub_22AABB0C8(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(MEMORY[0x22E2E4D80](a4, v6), a1);
  }
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22AABB104()
{
  return swift_deallocObject();
}

uint64_t sub_22AABB114(char a1)
{
  return sub_22AABABFC(a1);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_5_55()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_7_66()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_9_56(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_11_59()
{
  return sub_22ABDF14C();
}

void OUTLINED_FUNCTION_15_51()
{
  sub_22AAAD0A8();
}

uint64_t OUTLINED_FUNCTION_16_47(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

void OUTLINED_FUNCTION_18_48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
}

void BaseLogisticRegressionClassifierModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v12 = *(_QWORD *)(v4 - 8);
  v13 = v4;
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v11 = v6 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B161C8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_6_4();
  v10 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AABB4C8();
  sub_22ABE02B0();
  sub_22ABDFD34();
  if (!v14)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 16);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8658);
    sub_22AA9D714((uint64_t *)&qword_2540E8648, &qword_2540E8658);
    sub_22ABDE864();
    sub_22AA9D6C4(&qword_2540E8540);
    sub_22ABDFD4C();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    __swift_instantiateConcreteTypeFromMangledName(qword_255B12178);
    sub_22AA9D750(&qword_255B15140);
    sub_22ABDFCF8();
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v7);
  OUTLINED_FUNCTION_16();
}

unint64_t sub_22AABB4C8()
{
  unint64_t result;

  result = qword_255B161D0;
  if (!qword_255B161D0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7D68, &_s10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_255B161D0);
  }
  return result;
}

void BaseLogisticRegressionClassifierModel.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B161D8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_33();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22AABB4C8();
  sub_22ABE0298();
  if (v2)
  {
    OUTLINED_FUNCTION_10_50();
    v8 = OUTLINED_FUNCTION_1_51();
  }
  else
  {
    v5 = sub_22ABDFC74();
    LOBYTE(v12) = 1;
    sub_22AA9D6C4(&qword_2540E8548);
    sub_22ABDFC8C();
    sub_22AA9D714(&qword_2540E8538, &qword_2540E8550);
    v6 = sub_22ABDE930();
    __swift_instantiateConcreteTypeFromMangledName(qword_255B12178);
    sub_22AA9D750(&qword_255B15150);
    sub_22ABDEAEC();
    sub_22ABDFC38();
    OUTLINED_FUNCTION_5_56();
    OUTLINED_FUNCTION_2_69();
    sub_22AA5F3DC(v12);
    v7 = OUTLINED_FUNCTION_1_51();
    sub_22AA6D37C(v7);
    swift_retain();
    v9 = v16;
    sub_22AA5F3DC(v12);
    LOBYTE(v9) = v21;
    sub_22AA6D37C(v12);
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v13;
    *(_QWORD *)(a2 + 32) = v14;
    *(_QWORD *)(a2 + 40) = v15;
    *(_QWORD *)(a2 + 48) = v9;
    *(_QWORD *)(a2 + 56) = v17;
    *(_QWORD *)(a2 + 64) = v18;
    *(_QWORD *)(a2 + 72) = v19;
    *(_QWORD *)(a2 + 80) = v20;
    *(_BYTE *)(a2 + 88) = v21;
    OUTLINED_FUNCTION_10_50();
    swift_release();
    v8 = v12;
  }
  sub_22AA6D37C(v8);
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AABB8DC()
{
  unint64_t v0;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_22AABB928(char a1)
{
  if (!a1)
    return OUTLINED_FUNCTION_3_74();
  if (a1 == 1)
    return 0x6963696666656F63;
  return 0x657A696D6974706FLL;
}

void sub_22AABB980(unsigned __int8 *a1, char *a2)
{
  sub_22AA17644(*a1, *a2);
}

void sub_22AABB98C()
{
  sub_22ABC4A8C();
}

uint64_t sub_22AABB994(uint64_t a1)
{
  char *v1;

  return sub_22ABC4B84(a1, *v1);
}

void sub_22AABB99C()
{
  sub_22ABC550C();
}

uint64_t sub_22AABB9A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AABB8DC();
  *a1 = result;
  return result;
}

uint64_t sub_22AABB9D0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22AABB928(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22AABB9F8()
{
  char *v0;

  return sub_22AABB928(*v0);
}

uint64_t sub_22AABBA00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AABB924();
  *a1 = result;
  return result;
}

uint64_t sub_22AABBA24()
{
  sub_22AABB4C8();
  return sub_22ABE02EC();
}

uint64_t sub_22AABBA4C()
{
  sub_22AABB4C8();
  return sub_22ABE02F8();
}

void sub_22AABBA74(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  BaseLogisticRegressionClassifierModel.init(from:)(a1, a2);
}

void sub_22AABBA88(_QWORD *a1)
{
  BaseLogisticRegressionClassifierModel.encode(to:)(a1);
}

uint64_t BaseLogisticRegressionClassifierModel.export(to:)(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  _QWORD v6[10];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;

  v3 = *(_BYTE *)(v1 + 88);
  v6[9] = *(_QWORD *)v1;
  v7 = *(_OWORD *)(v1 + 8);
  v8 = *(_OWORD *)(v1 + 24);
  v9 = *(_OWORD *)(v1 + 40);
  v10 = *(_OWORD *)(v1 + 56);
  v11 = *(_OWORD *)(v1 + 72);
  v12 = v3;
  v4 = OUTLINED_FUNCTION_3_64();
  OUTLINED_FUNCTION_3_64();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  v6[2] = 0;
  v6[3] = 0xE000000000000000;
  v6[4] = 0;
  v6[5] = 0xE000000000000000;
  v6[6] = 0;
  v6[7] = 0xE000000000000000;
  v6[8] = v4;
  BaseLogisticRegressionClassifierModel.export(to:metadata:)(a1, (uint64_t)v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

void BaseLogisticRegressionClassifierModel.export(to:metadata:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(uint64_t *, _QWORD);
  uint64_t *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  uint64_t v18;

  v18 = a1;
  v6 = type metadata accessor for CoreMLPackage();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_6_4();
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *((_BYTE *)v2 + 88);
  v11 = *v2;
  v12 = *(_OWORD *)(v2 + 1);
  v13 = *(_OWORD *)(v2 + 3);
  v14 = *(_OWORD *)(v2 + 5);
  v15 = *(_OWORD *)(v2 + 7);
  v16 = *(_OWORD *)(v2 + 9);
  v17 = v8;
  sub_22AB64A64(v4);
  if (!v3)
  {
    sub_22ABDEAEC();
    sub_22ABDE354();
    sub_22ABDEAEC();
    sub_22ABDE3C0();
    sub_22ABDEAEC();
    sub_22ABDE390();
    sub_22ABDEAEC();
    sub_22ABDE3A8();
    sub_22ABDEAEC();
    v9 = (void (*)(uint64_t *, _QWORD))sub_22ABDE360();
    sub_22A9D11D8(v7, (uint64_t)sub_22A9D147C, 0, v10);
    v9(&v11, 0);
    sub_22AB31614(v18);
    sub_22AA3A8DC(v4);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t _s10CodingKeysOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22AABBD54 + 4 * byte_22ABF7C15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22AABBD88 + 4 * byte_22ABF7C10[v4]))();
}

uint64_t sub_22AABBD88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AABBD90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AABBD98);
  return result;
}

uint64_t sub_22AABBDA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AABBDACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22AABBDB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AABBDB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_1()
{
  return &_s10CodingKeysON_1;
}

unint64_t sub_22AABBDD8()
{
  unint64_t result;

  result = qword_255B161E0;
  if (!qword_255B161E0)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7D40, &_s10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_255B161E0);
  }
  return result;
}

unint64_t sub_22AABBE18()
{
  unint64_t result;

  result = qword_255B161E8;
  if (!qword_255B161E8)
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7C78, &_s10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_255B161E8);
  }
  return result;
}

unint64_t sub_22AABBE58()
{
  unint64_t result;

  result = qword_255B161F0[0];
  if (!qword_255B161F0[0])
  {
    result = MEMORY[0x22E2E4D80](&unk_22ABF7CA0, &_s10CodingKeysON_1);
    atomic_store(result, qword_255B161F0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_69()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_3_74()
{
  return 0x756F437373616C63;
}

uint64_t OUTLINED_FUNCTION_5_56()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_50()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 - 176));
}

uint64_t TimeSeriesForecasterBatches.features.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_7();
  v0 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t TimeSeriesForecasterBatches.annotations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_7();
  v0 = OUTLINED_FUNCTION_5_14();
  return OUTLINED_FUNCTION_81(v0, v1, v2, v3);
}

uint64_t TimeSeriesForecasterBatches.batchSize.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_12_30(*(int *)(a1 + 40));
}

uint64_t TimeSeriesForecasterBatches.inputWindowSize.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_12_30(*(int *)(a1 + 44));
}

uint64_t TimeSeriesForecasterBatches.forecastWindowSize.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_12_30(*(int *)(a1 + 48));
}

uint64_t TimeSeriesForecasterBatches.shufflesBatches.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t TimeSeriesForecasterBatches.shufflesBatches.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 52)) = result;
  return result;
}

uint64_t (*TimeSeriesForecasterBatches.shufflesBatches.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

_QWORD *TimeSeriesForecasterBatches.init(features:annotations:batchSize:inputWindowSize:forecastWindowSize:shufflesBatches:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v51;
  uint64_t v52;

  v14 = (int *)type metadata accessor for TimeSeriesForecasterBatches(0, a7, a8, a4);
  v15 = v14[13];
  v16 = sub_22ABDE8A0();
  v48 = *(_QWORD *)(v16 - 8);
  v17 = *(void (**)(void))(v48 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v17)(a9, a1, v16);
  v47 = a9 + v14[9];
  v52 = a2;
  v17();
  *(_QWORD *)(a9 + v14[10]) = a3;
  *(_QWORD *)(a9 + v14[11]) = a4;
  *(_QWORD *)(a9 + v14[12]) = a5;
  *(_BYTE *)(a9 + v15) = a6;
  v51 = a4;
  if (a3 < 1 || a4 < 1 || a5 < 1)
  {
    sub_22A9B7B50();
    v20 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v21 = 0xD00000000000001BLL;
    v22 = 0xD000000000000031;
    v23 = 0x800000022ABE56F0;
    v24 = 0x800000022ABF7DA0;
    v25 = 5;
    v26 = a1;
LABEL_22:
    v29 = a2;
LABEL_23:
    *(_QWORD *)(v21 + 8) = v24;
    *(_QWORD *)(v21 + 16) = v22;
    *(_QWORD *)(v21 + 24) = v23;
    *(_BYTE *)(v21 + 32) = v25;
    swift_willThrow(v20);
    OUTLINED_FUNCTION_74_5(v29);
    OUTLINED_FUNCTION_74_5(v26);
    OUTLINED_FUNCTION_74_5(a9);
    return (_QWORD *)OUTLINED_FUNCTION_74_5(v47);
  }
  v26 = a1;
  v27 = *(_QWORD *)(OUTLINED_FUNCTION_16_24() + 16);
  swift_bridgeObjectRelease();
  result = (_QWORD *)sub_22ABDE84C();
  if (v27 != 2)
  {
    sub_22A9B7B50();
    v41 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_6_77(v41, v42);
    v24 = v43 + 24;
    v22 = 0x800000022ABE1420;
    v25 = 6;
    goto LABEL_22;
  }
  v29 = a2;
  if (!result[2])
  {
    __break(1u);
    goto LABEL_26;
  }
  v30 = result[4];
  swift_bridgeObjectRelease();
  result = (_QWORD *)OUTLINED_FUNCTION_17_43();
  if (!result[2])
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v31 = result[4];
  swift_bridgeObjectRelease();
  if (v30 != v31)
  {
    sub_22ABDE84C();
    sub_22A9B7B50();
    v44 = OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_6_77(v44, v45);
    v24 = v46 + 91;
    v22 = 0x800000022ABE3030;
    v25 = 6;
    goto LABEL_23;
  }
  result = (_QWORD *)OUTLINED_FUNCTION_16_24();
  if (result[2] < 2uLL)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v32 = result[5];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v14[14]) = v32;
  result = (_QWORD *)OUTLINED_FUNCTION_17_43();
  if (result[2] < 2uLL)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v33 = result[5];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v14[15]) = v33;
  result = (_QWORD *)OUTLINED_FUNCTION_16_24();
  if (!result[2])
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v34 = result[4];
  result = (_QWORD *)swift_bridgeObjectRelease();
  v35 = v51 + a5;
  if (__OFADD__(v51, a5))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v36 = __OFSUB__(v34, v35);
  v37 = v34 - v35;
  if (!v36)
  {
    v36 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (!v36)
    {
      v39 = v38 & ~(v38 >> 63);
      v40 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v40(v52, v16);
      result = (_QWORD *)((uint64_t (*)(uint64_t, uint64_t))v40)(a1, v16);
      *(_QWORD *)(a9 + v14[16]) = v39;
      return result;
    }
    goto LABEL_32;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TimeSeriesForecasterBatches(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TimeSeriesForecasterBatches);
}

uint64_t TimeSeriesForecasterBatches.underestimatedCount.getter(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + *(int *)(result + 64));
  v3 = *(_QWORD *)(v1 + *(int *)(result + 40));
  v4 = __OFADD__(v2, v3);
  v5 = v2 + v3;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = __OFSUB__(v5, 1);
  v6 = v5 - 1;
  if (v4)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!v3)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v6 != 0x8000000000000000 || v3 != -1)
    return v6 / v3;
LABEL_12:
  __break(1u);
  return result;
}

void TimeSeriesForecasterBatches.makeIterator()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, double);
  uint64_t v17;

  v3 = v2;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = sub_22ABDE8A0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - v13;
  v16 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v16((char *)&v17 - v13, v3, v8, v12);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v10, v3 + *(int *)(a1 + 36), v8);
  sub_22AABC408((uint64_t)v14, (uint64_t)v10, *(_QWORD *)(v3 + *(int *)(a1 + 40)), *(_QWORD *)(v3 + *(int *)(a1 + 44)), *(_QWORD *)(v3 + *(int *)(a1 + 48)), *(_BYTE *)(v3 + *(int *)(a1 + 52)), *(_QWORD *)(v3 + *(int *)(a1 + 56)), *(_QWORD *)(v3 + *(int *)(a1 + 60)), a2, *(_QWORD *)(v3 + *(int *)(a1 + 64)), v6, v7);
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AABC408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  void *v20;
  void *v21;
  void *v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v31;

  v16 = (int *)type metadata accessor for TimeSeriesForecasterBatches.Iterator(0, a11, a12, a4);
  v25 = v16[13];
  *(_QWORD *)(a9 + v16[17]) = 0;
  v17 = sub_22ABDE8A0();
  v24 = *(_QWORD *)(v17 - 8);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v18(a9, a1, v17);
  v18(a9 + v16[9], a2, v17);
  *(_QWORD *)(a9 + v16[10]) = a3;
  *(_QWORD *)(a9 + v16[11]) = a4;
  *(_QWORD *)(a9 + v16[12]) = a5;
  *(_BYTE *)(a9 + v25) = a6;
  *(_QWORD *)(a9 + v16[14]) = a7;
  *(_QWORD *)(a9 + v16[15]) = a8;
  *(_QWORD *)(a9 + v16[16]) = a10;
  result = sub_22AABC5E8();
  if (!a10)
  {
    v21 = (void *)MEMORY[0x24BEE4AF8];
    goto LABEL_10;
  }
  if (a3 >= a10)
  {
    v21 = &unk_24F4B8630;
    goto LABEL_10;
  }
  if ((a6 & 1) != 0)
  {
    if (a3)
    {
      OUTLINED_FUNCTION_12_52();
      v31 = v20;
      sub_22ABA3364();
      v21 = v31;
LABEL_10:
      v23 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v23(a2, v17);
      result = ((uint64_t (*)(uint64_t, uint64_t))v23)(a1, v17);
      *(_QWORD *)(a9 + v16[18]) = v21;
      return result;
    }
    __break(1u);
  }
  else if (a3)
  {
    OUTLINED_FUNCTION_12_52();
    v21 = v22;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22AABC5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  TimeSeriesForecasterBatches.makeIterator()(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t sub_22AABC5E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  OUTLINED_FUNCTION_8_54();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  result = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(result + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(result + 32) = v13;
  if ((unsigned __int128)(v11 * (__int128)v7) >> 64 == (v11 * v7) >> 63)
  {
    *(_QWORD *)(result + 40) = v11 * v7;
    sub_22AA3EF3C();
    result = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(result + 16) = xmmword_22ABE9FB0;
    *(_QWORD *)(result + 32) = v13;
    if ((unsigned __int128)(v9 * (__int128)v5) >> 64 == (v9 * v5) >> 63)
    {
      *(_QWORD *)(result + 40) = v9 * v5;
      type metadata accessor for AnnotatedBatch(0, v3, v1, v15);
      return sub_22AA3EF3C();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void TimeSeriesForecasterBatches.Iterator.next()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t inited;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;

  v3 = v2;
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v8 = sub_22ABDE8A0();
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v48 - v11;
  v13 = *(int *)(a1 + 68);
  v14 = *(_QWORD *)(v3 + v13);
  v15 = *(_QWORD *)(v3 + *(int *)(a1 + 72));
  if (v14 >= *(_QWORD *)(v15 + 16))
  {
    v44 = type metadata accessor for AnnotatedBatch(0, v7, v6, v9);
    __swift_storeEnumTagSinglePayload(a2, 1, 1, v44);
    return;
  }
  if (v14 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v16 = *(_QWORD *)(v15 + 8 * v14 + 32);
  *(_QWORD *)(v3 + v13) = v14 + 1;
  v17 = *(_QWORD *)(v3 + *(int *)(a1 + 64));
  v18 = __OFSUB__(v17, v16);
  v19 = v17 - v16;
  if (v18)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v53 = v12;
  v51 = v16;
  v55 = v10;
  v56 = a2;
  if (v19 >= *(_QWORD *)(v3 + *(int *)(a1 + 40)))
    v20 = *(_QWORD *)(v3 + *(int *)(a1 + 40));
  else
    v20 = v19;
  v21 = *(int *)(a1 + 76);
  v58 = v6;
  v22 = v3 + v21;
  v23 = (_QWORD *)sub_22ABDE84C();
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  inited = swift_initStackObject();
  v59 = xmmword_22ABEDF90;
  *(_OWORD *)(inited + 16) = xmmword_22ABEDF90;
  v57 = v20;
  *(_QWORD *)(inited + 32) = v20;
  v25 = *(_QWORD *)(v3 + *(int *)(a1 + 44));
  *(_QWORD *)(inited + 40) = v25;
  v52 = *(int *)(a1 + 56);
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v3 + v52);
  v26 = sub_22A99EB90(v23, (_QWORD *)inited);
  swift_setDeallocating();
  v27 = v22;
  v28 = v58;
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
  {
    v30 = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(v30 + 16) = v59;
    *(_QWORD *)(v30 + 32) = v57;
    *(_QWORD *)(v30 + 40) = v25;
    OUTLINED_FUNCTION_18_49(v30);
    sub_22AA3EF3C();
    OUTLINED_FUNCTION_20_42(v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 40));
  }
  v31 = type metadata accessor for AnnotatedBatch(0, v7, v28, v29);
  v32 = *(int *)(v31 + 36);
  v54 = v27;
  v50 = v27 + v32;
  v33 = (_QWORD *)sub_22ABDE84C();
  v34 = swift_initStackObject();
  *(_OWORD *)(v34 + 16) = v59;
  v35 = v57;
  *(_QWORD *)(v34 + 32) = v57;
  v36 = *(_QWORD *)(v3 + *(int *)(a1 + 48));
  *(_QWORD *)(v34 + 40) = v36;
  v49 = *(int *)(a1 + 60);
  *(_QWORD *)(v34 + 48) = *(_QWORD *)(v3 + v49);
  v37 = sub_22A99EB90(v33, (_QWORD *)v34);
  v48[1] = v7;
  v38 = v37;
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  if ((v38 & 1) == 0)
  {
    v39 = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(v39 + 16) = v59;
    *(_QWORD *)(v39 + 32) = v35;
    *(_QWORD *)(v39 + 40) = v36;
    OUTLINED_FUNCTION_18_49(v39);
    sub_22AA3EF3C();
    OUTLINED_FUNCTION_20_42(v50, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 40));
  }
  v40 = v56;
  if (*(_QWORD *)(v3 + v52) == 1 && *(_QWORD *)(v3 + v49) == 1)
  {
    v41 = OUTLINED_FUNCTION_7_67();
    sub_22AABCA38(v41, v42, v43);
  }
  else
  {
    v45 = OUTLINED_FUNCTION_7_67();
    sub_22AABCABC(v45, v46, v47);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v40, v54, v31);
  __swift_storeEnumTagSinglePayload(v40, 0, 1, v31);
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AABCA38(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (__OFADD__(result, *(_QWORD *)(v3 + *(int *)(a3 + 44))))
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x24BDAC7A8](result);
    v10[1] = *(_OWORD *)(v4 + 16);
    v11 = v5;
    v12 = v6;
    v13 = v7;
    v14 = v8;
    v15 = v9;
    return OUTLINED_FUNCTION_22_41((uint64_t)sub_22AABE524, v4, MEMORY[0x24BEE4AE0] + 8, (uint64_t)v10);
  }
  return result;
}

uint64_t sub_22AABCABC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (__OFADD__(result, *(_QWORD *)(v3 + *(int *)(a3 + 44))))
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x24BDAC7A8](result);
    v12[1] = *(_OWORD *)(v4 + 16);
    v13 = v5;
    v14 = v6;
    v15 = v8;
    v16 = v7;
    v17 = v9;
    v18 = v10;
    v19 = v11;
    return OUTLINED_FUNCTION_22_41((uint64_t)sub_22AABE65C, v4, MEMORY[0x24BEE4AE0] + 8, (uint64_t)v12);
  }
  return result;
}

void sub_22AABCB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t inited;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[16];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  _BYTE *v78;

  v64 = a8;
  v63 = a7;
  v62 = a6;
  v61 = a5;
  v71 = a4;
  v70 = a3;
  v69 = a2;
  v68 = a1;
  v23 = *(_QWORD *)(a22 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v74 = &v53[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v25);
  v78 = &v53[-v27];
  if (v26 < 0)
    goto LABEL_57;
  if (v26)
  {
    v28 = a18;
    if ((a20 | a18) < 0)
    {
LABEL_58:
      __break(1u);
      return;
    }
    v29 = 0;
    v75 = a23;
    v55 = a21;
    v57 = a19;
    v59 = a13;
    v66 = a9;
    v56 = a12;
    v30 = (uint64_t *)(a12 + 32);
    v54 = a16;
    v31 = (uint64_t *)(a16 + 32);
    v67 = a18 & ~(a18 >> 63);
    v65 = a20;
    v60 = a20 & ~(a20 >> 63);
    v77 = xmmword_22ABEDF90;
    v76 = xmmword_22ABE9FB0;
    v58 = v26;
    v73 = a18;
    while (v29 != v26)
    {
      if (v28)
      {
        v72 = v57 + v29;
        if (__OFADD__(v57, v29))
          goto LABEL_55;
        v32 = 0;
        v33 = *(_QWORD *)(v56 + 16);
        while (v32 != v67)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v77;
          *(_QWORD *)(inited + 32) = v29;
          *(_QWORD *)(inited + 40) = v32;
          *(_QWORD *)(inited + 48) = 0;
          v35 = swift_initStackObject();
          *(_OWORD *)(v35 + 16) = v76;
          if (__OFADD__(v72, v32))
            goto LABEL_49;
          *(_QWORD *)(v35 + 32) = v72 + v32;
          *(_QWORD *)(v35 + 40) = 0;
          sub_22AA3EF1C();
          swift_bridgeObjectRelease();
          if (v33)
          {
            v36 = v29 * *v30;
            if ((unsigned __int128)(v29 * (__int128)*v30) >> 64 != v36 >> 63)
              goto LABEL_52;
            if (v33 != 1)
            {
              v37 = 0;
              v38 = 1;
              v39 = v32;
              while (v38 < v33)
              {
                v40 = v30[v38];
                v41 = v39 * v40;
                if ((unsigned __int128)(v39 * (__int128)v40) >> 64 != (v39 * v40) >> 63)
                  goto LABEL_43;
                v42 = __OFADD__(v36, v41);
                v36 += v41;
                if (v42)
                  goto LABEL_44;
                if ((v37 & 1) == 0)
                {
                  v39 = *(_QWORD *)(inited + 48);
                  v37 = 1;
                  v38 = 2;
                  if (v33 != 2)
                    continue;
                }
                goto LABEL_22;
              }
              __break(1u);
LABEL_43:
              __break(1u);
LABEL_44:
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
              break;
            }
          }
          else
          {
            v36 = 0;
          }
LABEL_22:
          ++v32;
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v23 + 40))(v66 + *(_QWORD *)(v23 + 72) * v36, v78, a22);
          swift_bridgeObjectRelease();
          if (v32 == v73)
            goto LABEL_23;
        }
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_23:
      if (v65)
      {
        v72 = v55 + v29;
        if (__OFADD__(v55, v29))
          goto LABEL_56;
        v43 = 0;
        v44 = *(_QWORD *)(v54 + 16);
        while (v43 != v60)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
          v45 = swift_initStackObject();
          *(_OWORD *)(v45 + 16) = v77;
          *(_QWORD *)(v45 + 32) = v29;
          *(_QWORD *)(v45 + 40) = v43;
          *(_QWORD *)(v45 + 48) = 0;
          v46 = swift_initStackObject();
          *(_OWORD *)(v46 + 16) = v76;
          if (__OFADD__(v72, v43))
            goto LABEL_51;
          *(_QWORD *)(v46 + 32) = v72 + v43;
          *(_QWORD *)(v46 + 40) = 0;
          sub_22AA3EF1C();
          swift_bridgeObjectRelease();
          if (v44)
          {
            v47 = v29 * *v31;
            if ((unsigned __int128)(v29 * (__int128)*v31) >> 64 != v47 >> 63)
              goto LABEL_53;
            if (v44 != 1)
            {
              v48 = 0;
              v49 = 1;
              v50 = v43;
              while (v49 < v44)
              {
                v51 = v31[v49];
                v52 = v50 * v51;
                if ((unsigned __int128)(v50 * (__int128)v51) >> 64 != (v50 * v51) >> 63)
                  goto LABEL_46;
                v42 = __OFADD__(v47, v52);
                v47 += v52;
                if (v42)
                  goto LABEL_47;
                if ((v48 & 1) == 0)
                {
                  v50 = *(_QWORD *)(v45 + 48);
                  v48 = 1;
                  v49 = 2;
                  if (v44 != 2)
                    continue;
                }
                goto LABEL_39;
              }
              goto LABEL_45;
            }
          }
          else
          {
            v47 = 0;
          }
LABEL_39:
          ++v43;
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v23 + 40))(v59 + *(_QWORD *)(v23 + 72) * v47, v74, a22);
          swift_bridgeObjectRelease();
          if (v43 == v65)
            goto LABEL_40;
        }
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        break;
      }
LABEL_40:
      ++v29;
      v26 = v58;
      v28 = v73;
      if (v29 == v58)
        return;
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
}

uint64_t sub_22AABD084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  _QWORD v18[10];

  v6 = v5;
  v18[1] = a5;
  v11 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  v12 = sub_22ABDE8A0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v18 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)v18 - v15, v6, v12, v14);
  v18[4] = v11;
  v18[5] = a4;
  v18[6] = v10;
  v18[7] = v6;
  v18[8] = a1;
  v18[9] = a2;
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v12);
  sub_22AA3EF20();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

void sub_22AABD188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t inited;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;

  v78 = a8;
  v77 = a7;
  v76 = a6;
  v75 = a5;
  v84 = a4;
  v83 = a3;
  v82 = a2;
  v81 = a1;
  v91 = a24;
  v86 = *(_QWORD *)(a24 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v79 = (char *)v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v90 = (char *)v62 - v28;
  if (v27 < 0)
  {
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
  }
  else
  {
    if (!v27)
      return;
    v29 = a18;
    if (((a21 | a18) & 0x8000000000000000) == 0)
    {
      v30 = 0;
      v89 = a25;
      v63 = a23;
      v74 = a22;
      v64 = a20;
      v85 = a19;
      v73 = a13;
      v70 = a12;
      v31 = (uint64_t *)(a12 + 32);
      v65 = a16;
      v32 = (uint64_t *)(a16 + 32);
      v72 = a18 & ~(a18 >> 63);
      v66 = a21 & ~(a21 >> 63);
      v88 = xmmword_22ABEDF90;
      v87 = xmmword_22ABE9FB0;
      v80 = a9;
      v62[0] = v27;
      v67 = a21;
      v71 = a18;
      while (1)
      {
        if (v30 == v27)
          goto LABEL_75;
        v33 = v85;
        if (v29)
          break;
LABEL_31:
        v48 = v74;
        if (v67)
        {
          if (v74 < 0)
            goto LABEL_78;
          v49 = 0;
          v68 = v63 + v30;
          v50 = __OFADD__(v63, v30);
          v69 = v50;
          while (v49 != v66)
          {
            if (v48)
            {
              if (v69)
                goto LABEL_73;
              v51 = v68 + v49;
              if (!__OFADD__(v68, v49))
              {
                v52 = 0;
                v53 = *(_QWORD *)(v65 + 16);
                while (v52 != v48)
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
                  inited = swift_initStackObject();
                  *(_OWORD *)(inited + 16) = v88;
                  *(_QWORD *)(inited + 32) = v30;
                  *(_QWORD *)(inited + 40) = v49;
                  *(_QWORD *)(inited + 48) = v52;
                  v55 = swift_initStackObject();
                  *(_OWORD *)(v55 + 16) = v87;
                  *(_QWORD *)(v55 + 32) = v51;
                  *(_QWORD *)(v55 + 40) = v52;
                  sub_22AA3EF1C();
                  swift_bridgeObjectRelease();
                  if (v53)
                  {
                    v56 = v30 * *v32;
                    if ((unsigned __int128)(v30 * (__int128)*v32) >> 64 != v56 >> 63)
                      goto LABEL_67;
                    if (v53 != 1)
                    {
                      v57 = 0;
                      v58 = 1;
                      v59 = v49;
                      while (v58 < v53)
                      {
                        v60 = v32[v58];
                        v61 = v59 * v60;
                        if ((unsigned __int128)(v59 * (__int128)v60) >> 64 != (v59 * v60) >> 63)
                          goto LABEL_62;
                        v47 = __OFADD__(v56, v61);
                        v56 += v61;
                        if (v47)
                          goto LABEL_63;
                        if ((v57 & 1) == 0)
                        {
                          v59 = *(_QWORD *)(inited + 48);
                          v57 = 1;
                          v58 = 2;
                          if (v53 != 2)
                            continue;
                        }
                        goto LABEL_54;
                      }
                      goto LABEL_61;
                    }
                  }
                  else
                  {
                    v56 = 0;
                  }
LABEL_54:
                  ++v52;
                  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 40))(v73 + *(_QWORD *)(v86 + 72) * v56, v79, v91);
                  swift_bridgeObjectRelease();
                  v48 = v74;
                  if (v52 == v74)
                    goto LABEL_55;
                }
                goto LABEL_66;
              }
              goto LABEL_74;
            }
LABEL_55:
            if (++v49 == v67)
              goto LABEL_56;
          }
          goto LABEL_71;
        }
LABEL_56:
        ++v30;
        v27 = v62[0];
        v29 = v71;
        if (v30 == v62[0])
          return;
      }
      if (v85 < 0)
        goto LABEL_77;
      v34 = 0;
      v68 = v64 + v30;
      v35 = __OFADD__(v64, v30);
      v69 = v35;
      while (v34 != v72)
      {
        if (v33)
        {
          if (v69)
            goto LABEL_69;
          v36 = v68 + v34;
          if (__OFADD__(v68, v34))
            goto LABEL_70;
          v37 = 0;
          v38 = *(_QWORD *)(v70 + 16);
          while (v37 != v33)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
            v39 = swift_initStackObject();
            *(_OWORD *)(v39 + 16) = v88;
            *(_QWORD *)(v39 + 32) = v30;
            *(_QWORD *)(v39 + 40) = v34;
            *(_QWORD *)(v39 + 48) = v37;
            v40 = swift_initStackObject();
            *(_OWORD *)(v40 + 16) = v87;
            *(_QWORD *)(v40 + 32) = v36;
            *(_QWORD *)(v40 + 40) = v37;
            sub_22AA3EF1C();
            swift_bridgeObjectRelease();
            if (v38)
            {
              v41 = v30 * *v31;
              if ((unsigned __int128)(v30 * (__int128)*v31) >> 64 != v41 >> 63)
                goto LABEL_65;
              if (v38 != 1)
              {
                v42 = 0;
                v43 = 1;
                v44 = v34;
                while (v43 < v38)
                {
                  v45 = v31[v43];
                  v46 = v44 * v45;
                  if ((unsigned __int128)(v44 * (__int128)v45) >> 64 != (v44 * v45) >> 63)
                    goto LABEL_59;
                  v47 = __OFADD__(v41, v46);
                  v41 += v46;
                  if (v47)
                    goto LABEL_60;
                  if ((v42 & 1) == 0)
                  {
                    v44 = *(_QWORD *)(v39 + 48);
                    v42 = 1;
                    v43 = 2;
                    if (v38 != 2)
                      continue;
                  }
                  goto LABEL_29;
                }
                __break(1u);
LABEL_59:
                __break(1u);
LABEL_60:
                __break(1u);
LABEL_61:
                __break(1u);
LABEL_62:
                __break(1u);
LABEL_63:
                __break(1u);
                break;
              }
            }
            else
            {
              v41 = 0;
            }
LABEL_29:
            ++v37;
            (*(void (**)(uint64_t, char *, uint64_t))(v86 + 40))(v80 + *(_QWORD *)(v86 + 72) * v41, v90, v91);
            swift_bridgeObjectRelease();
            v33 = v85;
            if (v37 == v85)
              goto LABEL_30;
          }
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          break;
        }
LABEL_30:
        if (++v34 == v71)
          goto LABEL_31;
      }
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
}

uint64_t sub_22AABD794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v25 = a7;
  v26 = a4;
  v23 = a6;
  v24 = a3;
  v27 = a9;
  v15 = sub_22ABDE8A0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v22 - v17;
  v20 = type metadata accessor for TimeSeriesForecasterBatches.Iterator(0, a8, a11, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a5 + *(int *)(v20 + 36), v15);
  v28 = a8;
  v29 = a10;
  v30 = a11;
  v31 = a5;
  v32 = v23;
  v33 = v25;
  v34 = a1;
  v35 = a2;
  v36 = v24;
  v37 = v26;
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v15);
  sub_22AA3EF20();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_22AABD8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  type metadata accessor for TimeSeriesForecasterBatches.Iterator(0, a12, a14, a4);
  v14 = sub_22ABDE8A0();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v14);
  return sub_22AA3EF7C();
}

uint64_t sub_22AABD998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;

  type metadata accessor for TimeSeriesForecasterBatches.Iterator(0, a16, a18, a4);
  type metadata accessor for AnnotatedBatch(0, a16, a18, v18);
  v19 = sub_22ABDE8A0();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v19);
  return sub_22AA3EF7C();
}

uint64_t OUTLINED_FUNCTION_0_66()
{
  return 0;
}

void sub_22AABDA90()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AABDAA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22ABDE8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22AABDB30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AABDB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  unsigned int v9;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_21_47();
  if (v7 == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 52));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_22AABDBC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22AABDBCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  int v9;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_21_47();
  if (v9 == a3)
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  else
    *(_BYTE *)(a1 + *(int *)(a4 + 52)) = a2 + 1;
}

uint64_t sub_22AABDC3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  result = sub_22ABDE8A0();
  if (v5 <= 0x3F)
  {
    result = type metadata accessor for AnnotatedBatch(319, v1, v2, v4);
    if (v6 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_22AABDD10(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)(a3 + 16);
    v8 = *(_QWORD *)(a3 + 24);
    v9 = sub_22ABDE8A0();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v10(a1, a2, v9);
    v10(&a1[*(int *)(a3 + 36)], &a2[*(int *)(a3 + 36)], v9);
    v11 = *(int *)(a3 + 44);
    *(_QWORD *)&a1[*(int *)(a3 + 40)] = *(_QWORD *)&a2[*(int *)(a3 + 40)];
    *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];
    v12 = *(int *)(a3 + 52);
    *(_QWORD *)&a1[*(int *)(a3 + 48)] = *(_QWORD *)&a2[*(int *)(a3 + 48)];
    a1[v12] = a2[v12];
    v13 = *(int *)(a3 + 60);
    *(_QWORD *)&a1[*(int *)(a3 + 56)] = *(_QWORD *)&a2[*(int *)(a3 + 56)];
    *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
    v14 = *(int *)(a3 + 68);
    *(_QWORD *)&a1[*(int *)(a3 + 64)] = *(_QWORD *)&a2[*(int *)(a3 + 64)];
    *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
    v15 = *(int *)(a3 + 72);
    v16 = *(int *)(a3 + 76);
    v17 = &a1[v16];
    v18 = &a2[v16];
    *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
    sub_22ABDEAEC();
    v10(v17, v18, v9);
    v20 = type metadata accessor for AnnotatedBatch(0, v7, v8, v19);
    v10(&v17[*(int *)(v20 + 36)], &v18[*(int *)(v20 + 36)], v9);
  }
  return a1;
}

uint64_t sub_22AABDE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = sub_22ABDE8A0();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v11(a1, v6);
  v11(a1 + *(int *)(a2 + 36), v6);
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 76);
  v11(v7, v6);
  v9 = v7 + *(int *)(type metadata accessor for AnnotatedBatch(0, v4, v5, v8) + 36);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v6);
}

uint64_t sub_22AABDF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  v8 = sub_22ABDE8A0();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v9(a1, a2, v8);
  v9(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v8);
  v10 = *(int *)(a3 + 44);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = *(int *)(a3 + 52);
  *(_QWORD *)(a1 + *(int *)(a3 + 48)) = *(_QWORD *)(a2 + *(int *)(a3 + 48));
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = *(int *)(a3 + 60);
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = *(int *)(a3 + 68);
  *(_QWORD *)(a1 + *(int *)(a3 + 64)) = *(_QWORD *)(a2 + *(int *)(a3 + 64));
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = *(int *)(a3 + 72);
  v15 = *(int *)(a3 + 76);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  sub_22ABDEAEC();
  v9(v16, v17, v8);
  v19 = type metadata accessor for AnnotatedBatch(0, v6, v7, v18);
  v9(v16 + *(int *)(v19 + 36), v17 + *(int *)(v19 + 36), v8);
  return a1;
}

uint64_t sub_22AABE040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  v8 = sub_22ABDE8A0();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24);
  v9(a1, a2, v8);
  v9(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v8);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  *(_QWORD *)(a1 + *(int *)(a3 + 48)) = *(_QWORD *)(a2 + *(int *)(a3 + 48));
  *(_BYTE *)(a1 + *(int *)(a3 + 52)) = *(_BYTE *)(a2 + *(int *)(a3 + 52));
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  *(_QWORD *)(a1 + *(int *)(a3 + 60)) = *(_QWORD *)(a2 + *(int *)(a3 + 60));
  *(_QWORD *)(a1 + *(int *)(a3 + 64)) = *(_QWORD *)(a2 + *(int *)(a3 + 64));
  *(_QWORD *)(a1 + *(int *)(a3 + 68)) = *(_QWORD *)(a2 + *(int *)(a3 + 68));
  *(_QWORD *)(a1 + *(int *)(a3 + 72)) = *(_QWORD *)(a2 + *(int *)(a3 + 72));
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 76);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v9(a1 + v10, v12, v8);
  v14 = type metadata accessor for AnnotatedBatch(0, v6, v7, v13);
  v9(v11 + *(int *)(v14 + 36), v12 + *(int *)(v14 + 36), v8);
  return a1;
}

uint64_t sub_22AABE180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  v8 = sub_22ABDE8A0();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(a1, a2, v8);
  v9(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v8);
  v10 = *(int *)(a3 + 44);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = *(int *)(a3 + 52);
  *(_QWORD *)(a1 + *(int *)(a3 + 48)) = *(_QWORD *)(a2 + *(int *)(a3 + 48));
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = *(int *)(a3 + 60);
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = *(int *)(a3 + 68);
  *(_QWORD *)(a1 + *(int *)(a3 + 64)) = *(_QWORD *)(a2 + *(int *)(a3 + 64));
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = *(int *)(a3 + 72);
  v15 = *(int *)(a3 + 76);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v9(a1 + v15, a2 + v15, v8);
  v19 = type metadata accessor for AnnotatedBatch(0, v6, v7, v18);
  v9(v16 + *(int *)(v19 + 36), v17 + *(int *)(v19 + 36), v8);
  return a1;
}

uint64_t sub_22AABE29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  v8 = sub_22ABDE8A0();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40);
  v9(a1, a2, v8);
  v9(a1 + *(int *)(a3 + 36), a2 + *(int *)(a3 + 36), v8);
  v10 = *(int *)(a3 + 44);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = *(int *)(a3 + 52);
  *(_QWORD *)(a1 + *(int *)(a3 + 48)) = *(_QWORD *)(a2 + *(int *)(a3 + 48));
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = *(int *)(a3 + 60);
  *(_QWORD *)(a1 + *(int *)(a3 + 56)) = *(_QWORD *)(a2 + *(int *)(a3 + 56));
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = *(int *)(a3 + 68);
  *(_QWORD *)(a1 + *(int *)(a3 + 64)) = *(_QWORD *)(a2 + *(int *)(a3 + 64));
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + *(int *)(a3 + 72)) = *(_QWORD *)(a2 + *(int *)(a3 + 72));
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 76);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v9(a1 + v14, v16, v8);
  v18 = type metadata accessor for AnnotatedBatch(0, v6, v7, v17);
  v9(v15 + *(int *)(v18 + 36), v16 + *(int *)(v18 + 36), v8);
  return a1;
}

uint64_t sub_22AABE3C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AABE3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  OUTLINED_FUNCTION_13_61();
  OUTLINED_FUNCTION_21_47();
  if (v10 == (_DWORD)a2)
  {
    v11 = v6;
    v12 = a1;
    return __swift_getEnumTagSinglePayload(v12, a2, v11);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v11 = OUTLINED_FUNCTION_14_51(v6, v7, v8, v9);
    v12 = a1 + *(int *)(a3 + 76);
    return __swift_getEnumTagSinglePayload(v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + *(int *)(a3 + 72));
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  return (v13 + 1);
}

uint64_t sub_22AABE470()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22AABE47C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_13_61();
  OUTLINED_FUNCTION_21_47();
  if (v12 == a3)
  {
    v13 = v8;
    v14 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 72)) = (a2 - 1);
      return;
    }
    v13 = OUTLINED_FUNCTION_14_51(v8, v9, v10, v11);
    v14 = a1 + *(int *)(a4 + 76);
  }
  __swift_storeEnumTagSinglePayload(v14, a2, a2, v13);
}

uint64_t type metadata accessor for TimeSeriesForecasterBatches.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TimeSeriesForecasterBatches.Iterator);
}

void sub_22AABE524()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = OUTLINED_FUNCTION_5_57();
  sub_22AABCB50(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], v14, v15, v16, v17, v10, v11, v18, v19, v20,
    v21,
    *(_QWORD *)(v0 + 64),
    v12,
    v13);
}

uint64_t sub_22AABE560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;

  return sub_22AABD794(a1, a2, a3, a4, v5[5], v5[6], v5[7], v5[2], a5, v5[3], v5[4]);
}

uint64_t sub_22AABE58C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OUTLINED_FUNCTION_10_51();
  return sub_22AABD8D0(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], *(_QWORD *)(v0 + 88), v10, v11, v12);
}

uint64_t sub_22AABE5BC()
{
  uint64_t *v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OUTLINED_FUNCTION_10_51();
  return sub_22AABD998(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], v0[11], v0[12], v0[13], v0[14], v0[15], v10, v11, v12);
}

uint64_t sub_22AABE5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 40))(*(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96), *(_QWORD *)(v4 + 104), *(_QWORD *)(v4 + 112), *(_QWORD *)(v4 + 120), *(_QWORD *)(v4 + 128), *(_QWORD *)(v4 + 136), *(_QWORD *)(v4 + 144), a1, a2, a3, a4);
}

void sub_22AABE65C()
{
  uint64_t *v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = OUTLINED_FUNCTION_5_57();
  sub_22AABD188(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], v14, v15, v16, v17, v10, v11, v18, v19, v20,
    v21,
    v0[8],
    v0[9],
    v0[10],
    v12,
    v13);
}

void sub_22AABE6A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_8_54();
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if ((v3 & 1) == 0)
  {
    v5 = v1;
    v6 = v0;
    v42 = v0 + 32;
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_16_23();
    v4 = 0;
    v7 = v2 + 4;
    v41 = v6;
    v8 = v6 + 8;
    while (1)
    {
      v9 = *(_QWORD *)(v5 + 16);
      if (v9)
      {
        v10 = *(_QWORD *)(v41 + 16);
        if (v9 > v10)
          goto LABEL_61;
        v11 = v9 - 1;
        v12 = *(_QWORD *)(v42 + 8 * (v9 - 1));
        v13 = v12 - 1;
        if (__OFSUB__(v12, 1))
          goto LABEL_62;
        v14 = *(_QWORD *)(v5 + 8 * v11 + 32);
        OUTLINED_FUNCTION_16_23();
        if (v14 < v13)
        {
          v15 = v5;
LABEL_9:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_22AB5D784();
            v15 = v36;
          }
          if (v11 >= *(_QWORD *)(v15 + 16))
            goto LABEL_63;
          v16 = *(_QWORD *)(v15 + 32 + 8 * v11);
          v17 = __OFADD__(v16, 1);
          v18 = v16 + 1;
          if (v17)
            goto LABEL_64;
          *(_QWORD *)(v15 + 32 + 8 * v11) = v18;
          if (v4)
          {
            v17 = __OFSUB__(v4--, 1);
            if (v17)
              goto LABEL_60;
            *v7 = v5;
            goto LABEL_40;
          }
          v19 = 0;
LABEL_25:
          v20 = v2[3];
          if ((uint64_t)((v20 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_65;
          v21 = v20 & 0xFFFFFFFFFFFFFFFELL;
          if (v21 <= 1)
            v22 = 1;
          else
            v22 = v21;
          __swift_instantiateConcreteTypeFromMangledName(&qword_255B12370);
          v23 = (_QWORD *)OUTLINED_FUNCTION_33_2();
          v24 = (uint64_t)(_swift_stdlib_malloc_size(v23) - 32) / 8;
          v23[2] = v22;
          v23[3] = 2 * v24;
          v25 = (unint64_t)(v23 + 4);
          v26 = v2[3];
          v27 = v26 >> 1;
          if (v2[2])
          {
            if (v23 != v2 || v25 >= (unint64_t)&v2[v27 + 4])
              memmove(v23 + 4, v2 + 4, 8 * v27);
            v2[2] = 0;
          }
          v7 = (_QWORD *)(v25 + 8 * v27);
          v4 = (v24 & 0x7FFFFFFFFFFFFFFFLL) - (v26 >> 1);
          swift_release();
          v2 = v23;
          goto LABEL_38;
        }
        v15 = v5;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22AB5D784();
          v15 = v37;
        }
        if (v9 > *(_QWORD *)(v15 + 16))
          goto LABEL_66;
        *(_QWORD *)(v15 + 32 + 8 * v11) = 0;
        v11 = v9 - 2;
        if (v9 >= 2)
        {
          v29 = *(_QWORD *)(v15 + 16);
          if (v11 >= v29)
            goto LABEL_67;
          if (v11 >= v10)
            goto LABEL_68;
          v30 = *(_QWORD *)(v42 + 8 * v11);
          v17 = __OFSUB__(v30, 1);
          v31 = v30 - 1;
          if (v17)
            goto LABEL_69;
          if (*(_QWORD *)(v15 + 32 + 8 * v11) >= v31)
          {
            v32 = (_QWORD *)(v15 + 8 * v9 + 16);
            while (v9 - 2 < v29)
            {
              *v32 = 0;
              if ((uint64_t)(v9 - 2) < 1)
                goto LABEL_22;
              v29 = *(_QWORD *)(v15 + 16);
              if (v9 - 3 >= v29)
                goto LABEL_58;
              v33 = *(_QWORD *)(v8 + 8 * v9);
              v17 = __OFSUB__(v33, 1);
              v34 = v33 - 1;
              if (v17)
                goto LABEL_59;
              v35 = *--v32;
              --v9;
              if (v35 < v34)
              {
                v11 = v9 - 2;
                goto LABEL_9;
              }
            }
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            return;
          }
          goto LABEL_9;
        }
LABEL_22:
        v19 = 1;
        if (!v4)
          goto LABEL_25;
      }
      else
      {
        OUTLINED_FUNCTION_16_23();
        v19 = 1;
        v15 = v5;
        if (!v4)
          goto LABEL_25;
        v15 = v5;
      }
LABEL_38:
      v17 = __OFSUB__(v4--, 1);
      if (v17)
        goto LABEL_60;
      *v7 = v5;
      if ((v19 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
LABEL_40:
      ++v7;
      v5 = v15;
    }
  }
  v4 = 0;
LABEL_53:
  v38 = v2[3];
  if (v38 >= 2)
  {
    v39 = v38 >> 1;
    v17 = __OFSUB__(v39, v4);
    v40 = v39 - v4;
    if (v17)
      goto LABEL_70;
    v2[2] = v40;
  }
  OUTLINED_FUNCTION_66();
}

void sub_22AABE994()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  int64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t *v8;
  uint64_t v9;
  int64_t *v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  BOOL v26;
  BOOL v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;

  OUTLINED_FUNCTION_8_54();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_22AABECC0(v4, v2, v0);
  v7 = v6;
  if (v6 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v8 = (int64_t *)OUTLINED_FUNCTION_33_2();
    v9 = (uint64_t)(_swift_stdlib_malloc_size(v8) - 32) / 8;
    v8[2] = v7;
    v8[3] = 2 * v9;
    v10 = v8 + 4;
    v11 = (v9 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    while (1)
    {
      v12 = v5 <= v3;
      if (v1 > 0)
        v12 = v5 >= v3;
      if (v12)
        break;
      v13 = v5 + v1;
      if (__OFADD__(v5, v1))
        v13 = ((v5 + v1) >> 63) ^ 0x8000000000000000;
      *v10++ = v5;
      v5 = v13;
      if (!--v7)
      {
        v5 = v13;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v6 < 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v8 = (int64_t *)MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
  v10 = (int64_t *)(MEMORY[0x24BEE4AF8] + 32);
LABEL_12:
  v14 = v5 <= v3;
  if (v1 > 0)
    v14 = v5 >= v3;
  if (!v14)
  {
    v15 = (v1 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      v16 = v5 + v1;
      if (__OFADD__(v5, v1))
      {
        v16 = v15;
        if (!v11)
          goto LABEL_21;
        v16 = v15;
      }
      else if (!v11)
      {
LABEL_21:
        v17 = v8[3];
        if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_44;
        v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
        if (v18 <= 1)
          v19 = 1;
        else
          v19 = v18;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
        v20 = (int64_t *)OUTLINED_FUNCTION_33_2();
        v21 = (uint64_t)(_swift_stdlib_malloc_size(v20) - 32) / 8;
        v20[2] = v19;
        v20[3] = 2 * v21;
        v22 = (unint64_t)(v20 + 4);
        v23 = v8[3];
        v24 = v23 >> 1;
        if (v8[2])
        {
          if (v20 != v8 || v22 >= (unint64_t)&v8[v24 + 4])
            memmove(v20 + 4, v8 + 4, 8 * v24);
          v8[2] = 0;
        }
        v10 = (int64_t *)(v22 + 8 * v24);
        v11 = (v21 & 0x7FFFFFFFFFFFFFFFLL) - (v23 >> 1);
        swift_release();
        v8 = v20;
        v15 = (v1 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      }
      v26 = __OFSUB__(v11--, 1);
      if (v26)
        goto LABEL_43;
      *v10++ = v5;
      v27 = v16 <= v3;
      if (v1 > 0)
        v27 = v16 >= v3;
      v5 = v16;
    }
    while (!v27);
  }
  v28 = v8[3];
  if (v28 < 2)
  {
LABEL_41:
    OUTLINED_FUNCTION_66();
    return;
  }
  v29 = v28 >> 1;
  v26 = __OFSUB__(v29, v11);
  v30 = v29 - v11;
  if (!v26)
  {
    v8[2] = v30;
    goto LABEL_41;
  }
LABEL_46:
  __break(1u);
}

size_t sub_22AABEBA0(size_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  size_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD *)(a2 + 16);
  if (v3 >= v2)
    v4 = *(_QWORD *)(result + 16);
  else
    v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v6 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B162F8);
    v7 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    result = _swift_stdlib_malloc_size(v7);
    v8 = 0;
    v9 = (uint64_t)(result - 32) / 16;
    v7[2] = v4;
    v7[3] = 2 * v9;
    v10 = v9 & 0x7FFFFFFFFFFFFFFFLL;
    v11 = 4;
    do
    {
      if (v2 == v8)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      if (v3 == v8)
        goto LABEL_18;
      v12 = &v7[v11];
      v13 = *(_QWORD *)(a2 + 32 + 8 * v8);
      v14 = v8 + 1;
      *(_DWORD *)v12 = *(_DWORD *)(v6 + 32 + 4 * v8);
      v12[1] = v13;
      v11 += 2;
      v8 = v14;
    }
    while (v4 != v14);
    v15 = v10 - v14;
    if (v2 > v3)
      goto LABEL_12;
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
    if (v2)
    {
LABEL_12:
      if (v2 <= v3)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
  }
  v16 = v7[3];
  if (v16 < 2)
    return (size_t)v7;
  v17 = v16 >> 1;
  v18 = __OFSUB__(v17, v15);
  v19 = v17 - v15;
  if (!v18)
  {
    v7[2] = v19;
    return (size_t)v7;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_22AABECC0(int64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t result;
  BOOL v5;
  BOOL v6;

  result = 0;
  while (1)
  {
    v5 = a1 <= a2;
    if (a3 > 0)
      v5 = a1 >= a2;
    if (v5)
      break;
    v6 = __OFADD__(a1, a3);
    a1 += a3;
    if (v6)
      a1 = (a1 >> 63) ^ 0x8000000000000000;
    v6 = __OFADD__(result++, 1);
    if (v6)
    {
      __break(1u);
      return result;
    }
  }
  return result;
}

__n128 OUTLINED_FUNCTION_5_57()
{
  __n128 *v0;

  return v0[1];
}

void OUTLINED_FUNCTION_6_77(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *a2 = v2;
}

uint64_t OUTLINED_FUNCTION_7_67()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 288);
}

__n128 OUTLINED_FUNCTION_10_51()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 72);
}

void OUTLINED_FUNCTION_12_52()
{
  sub_22AABE994();
}

uint64_t OUTLINED_FUNCTION_13_61()
{
  return sub_22ABDE8A0();
}

uint64_t OUTLINED_FUNCTION_14_51(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for AnnotatedBatch(0, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_17_43()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_18_49(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 48) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_20_42@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_22_41@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_22AABD084(a1, a4, a2, a3, a4);
}

uint64_t TemporalTransformer.export(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19[2];
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v7 = type metadata accessor for CoreMLPackage();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_34();
  v9 = MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a2, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B125B0);
  if (swift_dynamicCast())
  {
    sub_22A9A1880(v19, (uint64_t)&v21);
    v12 = v23;
    v13 = v24;
    __swift_project_boxed_opaque_existential_1(&v21, v23);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    if (!v3)
    {
      sub_22AB31614(a1);
      sub_22AA3A8DC(v4);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  }
  else
  {
    v20 = 0;
    memset(v19, 0, sizeof(v19));
    sub_22AA3A89C((uint64_t)v19);
    type metadata accessor for SerializationError();
    sub_22A9D395C();
    OUTLINED_FUNCTION_53();
    v16 = v15;
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_22ABDFF2C();
    v17 = v22;
    *v16 = v21;
    v16[1] = v17;
    v18 = swift_storeEnumTagMultiPayload();
    return swift_willThrow(v18);
  }
}

uint64_t TemporalTransformer.export(to:metadata:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(__int128 *, _QWORD);
  uint64_t *v22;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[6];
  __int128 v29[2];
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = v3;
  v35 = a1;
  v9 = type metadata accessor for CoreMLPackage();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_34();
  v13 = a2[2];
  v28[0] = *a2;
  v28[1] = v13;
  v14 = a2[4];
  v28[2] = a2[5];
  v28[3] = v14;
  v15 = a2[6];
  v16 = a2[7];
  v17 = a2[8];
  v28[4] = v16;
  v28[5] = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v5, v6, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B125B0);
  if (swift_dynamicCast())
  {
    sub_22A9A1880(v29, (uint64_t)&v31);
    v19 = v33;
    v20 = v34;
    __swift_project_boxed_opaque_existential_1(&v31, v33);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
    if (!v4)
    {
      sub_22ABDEAEC();
      sub_22ABDE354();
      sub_22ABDEAEC();
      sub_22ABDE3C0();
      sub_22ABDEAEC();
      sub_22ABDE390();
      sub_22ABDEAEC();
      sub_22ABDE3A8();
      sub_22ABDEAEC();
      v21 = (void (*)(__int128 *, _QWORD))sub_22ABDE360();
      sub_22A9D11D8(v17, (uint64_t)sub_22A9D147C, 0, v22);
      v21(v29, 0);
      sub_22AB31614(v35);
      sub_22AA3A8DC((uint64_t)v11);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
  }
  else
  {
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    sub_22AA3A89C((uint64_t)v29);
    type metadata accessor for SerializationError();
    sub_22A9D395C();
    OUTLINED_FUNCTION_53();
    v25 = v24;
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_22ABDFF2C();
    v26 = v32;
    *v25 = v31;
    v25[1] = v26;
    v27 = swift_storeEnumTagMultiPayload();
    return swift_willThrow(v27);
  }
}

int *sub_22AABF228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16;
  int *result;

  v16 = type metadata accessor for MultivariateLinearRegressor.Model(0, a5, a6, a7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a8, a1, v16);
  result = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, a5, a6, a7);
  *(_QWORD *)(a8 + result[11]) = a2;
  *(_QWORD *)(a8 + result[12]) = a3;
  *(_QWORD *)(a8 + result[13]) = a4;
  return result;
}

uint64_t sub_22AABF2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = *(_QWORD *)(a4 + 16);
  v5[8] = *(_QWORD *)(a4 + 24);
  v6 = sub_22ABDE8A0();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = OUTLINED_FUNCTION_23_0();
  v5[12] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

_QWORD *sub_22AABF338()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v1 = OUTLINED_FUNCTION_13();
  *(_OWORD *)(v1 + 16) = xmmword_22ABE9FB0;
  result = (_QWORD *)OUTLINED_FUNCTION_46_21();
  if (!result[2])
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result[4];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v3;
  result = (_QWORD *)OUTLINED_FUNCTION_46_21();
  if (result[2] < 2uLL)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v4 = result[5];
  swift_bridgeObjectRelease();
  result = (_QWORD *)OUTLINED_FUNCTION_46_21();
  if (result[2] < 3uLL)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v5 = result[6];
  result = (_QWORD *)swift_bridgeObjectRelease();
  v6 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 == (v4 * v5) >> 63)
  {
    v7 = v0[8];
    v8 = v0[7];
    v9 = v0[5];
    *(_QWORD *)(v1 + 40) = v6;
    sub_22ABDE87C();
    OUTLINED_FUNCTION_23();
    v10 = (_QWORD *)swift_task_alloc();
    v0[13] = v10;
    v11 = *(_QWORD *)(v9 + 32);
    v0[14] = v11;
    v12 = (_QWORD *)type metadata accessor for MultivariateLinearRegressor.Model(0, v8, v7, v11);
    *v10 = v0;
    v10[1] = sub_22AABF484;
    return (_QWORD *)MultivariateLinearRegressor.Model.applied(to:eventHandler:)(v0[12], v0[11], 0, 0, v12);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_22AABF484()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v2 + 128) = v4;
  OUTLINED_FUNCTION_32_7(v4);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

uint64_t sub_22AABF4F8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_23_5();
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = swift_task_alloc();
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v5;
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v4);
  sub_22AA3EF20();
  OUTLINED_FUNCTION_17();
  v1(v3, v4);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_5_0(v7);
}

uint64_t sub_22AABF59C()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t LinearTimeSeriesForecaster.Model.featureSize.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_12_30(*(int *)(a1 + 44));
}

uint64_t LinearTimeSeriesForecaster.Model.annotationSize.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_12_30(*(int *)(a1 + 48));
}

uint64_t LinearTimeSeriesForecaster.Model.inputWindowSize.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;

  v3 = (uint64_t *)OUTLINED_FUNCTION_22_42((uint64_t *)a1);
  result = MultivariateLinearRegressor.Model.inputSize.getter(v3);
  v5 = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  if (v5)
  {
    if (result != 0x8000000000000000 || v5 != -1)
    {
      result /= v5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t LinearTimeSeriesForecaster.Model.forecastWindowSize.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;

  v3 = (uint64_t *)OUTLINED_FUNCTION_22_42((uint64_t *)a1);
  result = MultivariateLinearRegressor.Model.outputSize.getter(v3);
  v5 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  if (v5)
  {
    if (result != 0x8000000000000000 || v5 != -1)
    {
      result /= v5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t LinearTimeSeriesForecaster.Model.stride.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_12_30(*(int *)(a1 + 52));
}

uint64_t LinearTimeSeriesForecaster.Model.stride.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(a2 + 52)) = result;
  return result;
}

uint64_t (*LinearTimeSeriesForecaster.Model.stride.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LinearTimeSeriesForecaster.Model.weight.getter(uint64_t *a1)
{
  return sub_22AABF6B4(a1, (uint64_t (*)(uint64_t))MultivariateLinearRegressor.Model.weight.getter);
}

uint64_t LinearTimeSeriesForecaster.Model.bias.getter(uint64_t *a1)
{
  return sub_22AABF6B4(a1, (uint64_t (*)(uint64_t))MultivariateLinearRegressor.Model.bias.getter);
}

uint64_t sub_22AABF6B4(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_22_42(a1);
  return a2(v2);
}

uint64_t LinearTimeSeriesForecaster.Model.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7[36] = a6;
  v7[37] = v6;
  v7[34] = a4;
  v7[35] = a5;
  v7[32] = a2;
  v7[33] = a3;
  v7[31] = a1;
  v9 = *(_QWORD *)(a4 + 16);
  v7[38] = v9;
  v10 = *(_QWORD *)(a4 + 24);
  v7[39] = v10;
  v11 = sub_22ABDE8A0();
  v7[40] = v11;
  sub_22ABDF5D8();
  v7[41] = OUTLINED_FUNCTION_0_0();
  v13 = type metadata accessor for SlidingWindows(255, v9, v10, v12);
  v7[42] = v13;
  v7[43] = MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>, v13);
  v14 = sub_22ABDFA40();
  v7[44] = v14;
  v7[45] = *(_QWORD *)(v14 - 8);
  v7[46] = OUTLINED_FUNCTION_0_0();
  v7[47] = *(_QWORD *)(v13 - 8);
  v7[48] = OUTLINED_FUNCTION_0_0();
  sub_22ABDE8DC();
  v7[49] = OUTLINED_FUNCTION_0_0();
  v7[50] = OUTLINED_FUNCTION_10_0();
  sub_22ABDF5D8();
  v7[51] = OUTLINED_FUNCTION_0_0();
  v7[52] = *(_QWORD *)(v11 - 8);
  v7[53] = OUTLINED_FUNCTION_23_0();
  v7[54] = OUTLINED_FUNCTION_38_0();
  v7[55] = OUTLINED_FUNCTION_38_0();
  v7[56] = OUTLINED_FUNCTION_38_0();
  v7[57] = OUTLINED_FUNCTION_38_0();
  v7[58] = *(_QWORD *)(a5 - 8);
  v7[59] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

uint64_t sub_22AABF858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::Int v35;
  char v36;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = *(_QWORD *)(v0 + 400);
  v48 = *(_QWORD *)(v0 + 416);
  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 272);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 16))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 280));
  v4 = sub_22ABDF11C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v5 = OUTLINED_FUNCTION_13();
  *(_OWORD *)(v5 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v5 + 32) = MEMORY[0x22E2E3340](v4, v1);
  v46 = v2;
  v45 = *(int *)(v3 + 44);
  *(_QWORD *)(v5 + 40) = *(_QWORD *)(v2 + v45);
  sub_22AA3EF3C();
  *(_QWORD *)(v0 + 224) = 0;
  *(_QWORD *)(v0 + 240) = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B11148);
  v7 = sub_22ABDF0F8();
  *(_QWORD *)(v0 + 480) = v7;
  v8 = sub_22AA10448();
  v9 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v7);
  sub_22ABE0178();
  OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v0 + 104) = v7;
  *(_QWORD *)(v0 + 112) = v8;
  v49 = v9;
  *(_QWORD *)(v0 + 120) = v9;
  sub_22ABDF7E8();
  sub_22ABDF7C4();
  v11 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 408);
  *(_QWORD *)(v0 + 128) = v6;
  *(_QWORD *)(v0 + 136) = v7;
  *(_QWORD *)(v0 + 144) = v8;
  *(_QWORD *)(v0 + 152) = v49;
  sub_22ABDF7DC();
  sub_22ABDF7D0();
  if (__swift_getEnumTagSinglePayload(v10, 1, v11) != 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v48 + 32))(*(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 408) + *(int *)(v47 + 48), *(_QWORD *)(v0 + 320));
    v12 = sub_22ABDE84C();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
    v14 = *(_QWORD *)(v46 + v45);
    *(_QWORD *)(inited + 32) = v14;
    if (*(_QWORD *)(v12 + 16) == 1)
    {
      if (v12 == inited)
      {
        OUTLINED_FUNCTION_3_8();
LABEL_7:
        OUTLINED_FUNCTION_3_8();
        *(_QWORD *)(v0 + 40) = v6;
        *(_QWORD *)(v0 + 48) = sub_22AA104B4();
        *(_QWORD *)(v0 + 16) = 0;
        OUTLINED_FUNCTION_84();
      }
      if (*(_QWORD *)(v12 + 32) == v14)
      {
        swift_setDeallocating();
        goto LABEL_7;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_setDeallocating();
    }
    v21 = *(_QWORD *)(v0 + 448);
    v20 = *(_QWORD *)(v0 + 456);
    v22 = *(_QWORD *)(v0 + 320);
    OUTLINED_FUNCTION_3_8();
    swift_bridgeObjectRelease();
    v23 = sub_22ABDE84C();
    sub_22A9B7B50();
    v24 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v25 = v23;
    *(_QWORD *)(v25 + 8) = 0xD000000000000030;
    *(_QWORD *)(v25 + 16) = 0x800000022ABE5730;
    *(_QWORD *)(v25 + 24) = 0;
    *(_BYTE *)(v25 + 32) = 6;
    swift_willThrow(v24);
    v26 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v26(v21, v22);
    v26(v20, v22);
    OUTLINED_FUNCTION_18_50();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    swift_task_dealloc();
    OUTLINED_FUNCTION_28_0();
    swift_task_dealloc();
    OUTLINED_FUNCTION_36_30();
    __asm { BR              X0 }
  }
  v15 = *(_QWORD *)(v0 + 384);
  v16 = *(_QWORD *)(v0 + 320);
  v17 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRelease();
  v19 = LinearTimeSeriesForecaster.Model.inputWindowSize.getter(v18);
  sub_22A9B78DC(v19, *(_QWORD *)(v17 + *(int *)(v18 + 52)), v16, v15);
  v29 = *(_QWORD *)(v0 + 376);
  v28 = *(_QWORD *)(v0 + 384);
  v30 = *(_QWORD *)(v0 + 368);
  v31 = *(_QWORD *)(v0 + 352);
  v32 = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 232) = sub_22ABDE9F0();
  sub_22ABDF3BC();
  sub_22ABDF044();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v30, v28, v32);
  v33 = SlidingWindows.startIndex.getter();
  v34 = *(int *)(v31 + 36);
  *(_DWORD *)(v0 + 188) = v34;
  *(_QWORD *)(v30 + v34) = v33;
  if (v33 == SlidingWindows.endIndex.getter(v32))
  {
    OUTLINED_FUNCTION_31_26();
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_17_44();
  OUTLINED_FUNCTION_30_32();
  v35 = OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_13_62(v35);
  if (v36)
  {
LABEL_16:
    OUTLINED_FUNCTION_51_23();
    OUTLINED_FUNCTION_40_19(*(_QWORD *)(v0 + 360));
    OUTLINED_FUNCTION_38_31();
    OUTLINED_FUNCTION_37_26();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_28_0();
    swift_task_dealloc();
    OUTLINED_FUNCTION_36_30();
    __asm { BR              X1 }
  }
  OUTLINED_FUNCTION_45_19();
  v38 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v38;
  OUTLINED_FUNCTION_25_33(v38);
  OUTLINED_FUNCTION_36_30();
  return LinearTimeSeriesForecaster.Model.applied(toWindow:eventHandler:)(v39, v40, v41, v42, v43);
}

uint64_t sub_22AABFE1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AABFE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  Swift::Int v9;
  char v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v19 = *(int *)(v0 + 188);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 320);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(*(_QWORD *)(v0 + 440), v2, v6);
  sub_22ABDF0C8();
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v2, v6);
  v7(v1, v6);
  v8 = *(_QWORD *)(v4 + v19);
  if (v8 == SlidingWindows.endIndex.getter(v5))
  {
    OUTLINED_FUNCTION_31_26();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_17_44();
  OUTLINED_FUNCTION_30_32();
  v9 = OUTLINED_FUNCTION_43_17();
  OUTLINED_FUNCTION_13_62(v9);
  if (v10)
  {
LABEL_5:
    OUTLINED_FUNCTION_51_23();
    OUTLINED_FUNCTION_40_19(*(_QWORD *)(v0 + 360));
    OUTLINED_FUNCTION_38_31();
    OUTLINED_FUNCTION_37_26();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_82_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_28_0();
    swift_task_dealloc();
    OUTLINED_FUNCTION_15_52();
    __asm { BR              X1 }
  }
  OUTLINED_FUNCTION_45_19();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v12;
  OUTLINED_FUNCTION_25_33(v12);
  OUTLINED_FUNCTION_15_52();
  return LinearTimeSeriesForecaster.Model.applied(toWindow:eventHandler:)(v13, v14, v15, v16, v17);
}

uint64_t sub_22AAC0018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_23_5();
  v1 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 352);
  v7 = *(_QWORD *)(v0 + 320);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 416) + 8);
  v8(*(_QWORD *)(v0 + 432), v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  OUTLINED_FUNCTION_28_4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v8(v1, v7);
  OUTLINED_FUNCTION_18_50();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_82_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LinearTimeSeriesForecaster.Model.applied(toWindow:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  v6[14] = *(_QWORD *)(a5 + 16);
  v6[15] = *(_QWORD *)(a5 + 24);
  v8 = sub_22ABDE8A0();
  v6[16] = v8;
  v6[17] = *(_QWORD *)(v8 - 8);
  v6[18] = OUTLINED_FUNCTION_23_0();
  v6[19] = OUTLINED_FUNCTION_38_0();
  v6[20] = OUTLINED_FUNCTION_38_0();
  v6[21] = *(_QWORD *)(a5 - 8);
  v6[22] = OUTLINED_FUNCTION_23_0();
  v6[23] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAC0178()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t inited;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);

  v1 = v0[23];
  v2 = v0[21];
  v4 = v0[14];
  v3 = v0[15];
  v5 = v0[12];
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v6(v1, v0[13], v5);
  v7 = (uint64_t *)type metadata accessor for MultivariateLinearRegressor.Model(0, v4, v3, *(_QWORD *)(v5 + 32));
  v8 = MultivariateLinearRegressor.Model.inputSize.getter(v7);
  v9 = *(_QWORD *)(v1 + *(int *)(v5 + 44));
  v10 = LinearTimeSeriesForecaster.Model.inputWindowSize.getter(v5);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  result = v11(v1, v5);
  if ((unsigned __int128)(v9 * (__int128)v10) >> 64 != (v9 * v10) >> 63)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v8 != v9 * v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v68 = v5;
  v69 = v11;
  v67 = (uint64_t)v7;
  v13 = v0[22];
  v14 = v0[20];
  v16 = v0[16];
  v15 = v0[17];
  v17 = v6;
  v19 = v0[12];
  v18 = v0[13];
  v20 = v0[9];
  v21 = *(_QWORD *)(sub_22ABDE84C() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v20, v16);
  v22 = v17(v13, v18, v19);
  v30 = v0[22];
  v31 = v0[20];
  v32 = v0[17];
  v33 = v0[12];
  if (v21 != 2)
  {
    OUTLINED_FUNCTION_32_23(v22, v23, v24, v25, v26, v27, v28, v29, v61, v63, v64, v67, v68, v69);
    OUTLINED_FUNCTION_28_4(v31, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
LABEL_8:
    v57 = sub_22ABDE84C();
    sub_22A9B7B50();
    v58 = OUTLINED_FUNCTION_53();
    *v59 = v57;
    v59[1] = 0xD000000000000033;
    OUTLINED_FUNCTION_21_48(v58, (uint64_t)v59, (uint64_t)"Input shape must be [inputWindowSize, featureSize].");
    OUTLINED_FUNCTION_50_23();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_15_52();
    __asm { BR              X0 }
  }
  v65 = v0[17];
  v34 = (_QWORD *)sub_22ABDE84C();
  v0[24] = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(inited + 32) = LinearTimeSeriesForecaster.Model.inputWindowSize.getter(v33);
  v36 = v68;
  *(_QWORD *)(inited + 40) = *(_QWORD *)(v30 + *(int *)(v68 + 44));
  v37 = sub_22A99EB90(v34, (_QWORD *)inited);
  swift_setDeallocating();
  v38 = OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_32_23(v38, v39, v40, v41, v42, v43, v44, v45, 2, 4, v65, v67, v68, v69);
  v46 = *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8);
  v0[25] = v46;
  OUTLINED_FUNCTION_28_4(v31, v46);
  if ((v37 & 1) == 0)
    goto LABEL_8;
  v47 = v0[12];
  v48 = v0[13];
  v49 = OUTLINED_FUNCTION_13();
  *(_OWORD *)(v49 + 16) = v62;
  *(_QWORD *)(v49 + 32) = 1;
  v50 = *(_QWORD *)(v48 + *(int *)(v36 + 44));
  result = LinearTimeSeriesForecaster.Model.inputWindowSize.getter(v47);
  if ((unsigned __int128)(v50 * (__int128)result) >> 64 == (v50 * result) >> 63)
  {
    *(_QWORD *)(v49 + 40) = v50 * result;
    sub_22ABDE87C();
    swift_bridgeObjectRelease();
    v51 = (_QWORD *)swift_task_alloc();
    v0[26] = v51;
    *v51 = v0;
    v51[1] = sub_22AAC0460;
    OUTLINED_FUNCTION_15_52();
    return MultivariateLinearRegressor.Model.applied(to:eventHandler:)(v52, v53, v54, v55, v56);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_22AAC0460()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 216) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAC04B0()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_23_5();
  v1 = (void (*)(uint64_t, uint64_t))v0[25];
  v2 = v0[19];
  v3 = v0[18];
  v4 = v0[16];
  v6 = v0[12];
  v5 = v0[13];
  v7 = OUTLINED_FUNCTION_13();
  *(_OWORD *)(v7 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v7 + 32) = LinearTimeSeriesForecaster.Model.forecastWindowSize.getter(v6);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v5 + *(int *)(v6 + 48));
  sub_22ABDE87C();
  swift_bridgeObjectRelease();
  v1(v3, v4);
  v1(v2, v4);
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_82_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_11_3();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_5_0(v8);
}

uint64_t sub_22AAC056C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 200))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  OUTLINED_FUNCTION_50_23();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LinearTimeSeriesForecaster.Model.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6[15] = a5;
  v6[16] = v5;
  v6[13] = a3;
  v6[14] = a4;
  v6[11] = a1;
  v6[12] = a2;
  v7 = *(_QWORD *)(a5 + 16);
  v6[17] = v7;
  v8 = *(_QWORD *)(a5 + 24);
  v6[18] = v8;
  sub_22ABDE8DC();
  v6[19] = OUTLINED_FUNCTION_0_0();
  v9 = sub_22ABDE8A0();
  v6[20] = v9;
  v6[21] = *(_QWORD *)(v9 - 8);
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  v6[24] = OUTLINED_FUNCTION_10_0();
  sub_22ABDF5D8();
  v6[25] = OUTLINED_FUNCTION_0_0();
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B11148);
  v6[26] = v10;
  v12 = type metadata accessor for SlidingWindows(255, v7, v8, v11);
  v6[27] = v12;
  v13 = sub_22AA10448();
  v6[28] = v13;
  v14 = MEMORY[0x22E2E4D80](&protocol conformance descriptor for SlidingWindows<A>, v12);
  v6[29] = v14;
  v6[2] = v10;
  v6[3] = v12;
  v6[4] = v13;
  v6[5] = v14;
  v6[30] = sub_22ABDF7E8();
  v6[31] = OUTLINED_FUNCTION_0_0();
  v6[6] = v10;
  v6[7] = v12;
  v6[8] = v13;
  v6[9] = v14;
  v15 = sub_22ABDF7DC();
  v6[32] = v15;
  v6[33] = *(_QWORD *)(v15 - 8);
  v6[34] = OUTLINED_FUNCTION_0_0();
  v6[35] = *(_QWORD *)(v12 - 8);
  v6[36] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAC0764()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_27_34() + 16);
  swift_bridgeObjectRelease();
  if (v1 != 2)
  {
LABEL_5:
    v11 = OUTLINED_FUNCTION_27_34();
    sub_22A9B7B50();
    v12 = OUTLINED_FUNCTION_53();
    *v13 = v11;
    v13[1] = 0xD000000000000025;
    OUTLINED_FUNCTION_21_48(v12, (uint64_t)v13, (uint64_t)"Input shape must be [N, featureSize].");
    OUTLINED_FUNCTION_19_42();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    __asm { BR              X0 }
  }
  result = OUTLINED_FUNCTION_27_34();
  if (*(_QWORD *)(result + 16) >= 2uLL)
  {
    v3 = v0[15];
    v4 = v0[16];
    v5 = *(_QWORD *)(result + 40);
    swift_bridgeObjectRelease();
    if (v5 == *(_QWORD *)(v4 + *(int *)(v3 + 44)))
    {
      v6 = v0[36];
      v7 = v0[20];
      v9 = v0[15];
      v8 = v0[16];
      v10 = LinearTimeSeriesForecaster.Model.inputWindowSize.getter(v9);
      sub_22A9B78DC(v10, *(_QWORD *)(v8 + *(int *)(v9 + 52)), v7, v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_22ABEDF90;
      OUTLINED_FUNCTION_84();
    }
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_22AAC0A1C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 320) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AAC0A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v2 + 56) = v1;
  v3 = sub_22AA104B4();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 96) = v1;
  *(_QWORD *)(v2 + 104) = v3;
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 72) = 0;
  OUTLINED_FUNCTION_84();
}

uint64_t sub_22AAC0B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t (*v6)(void);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_22ABDE96C();
  swift_bridgeObjectRelease();
  sub_22ABDE8AC();
  v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v4, v3);
  v5(v14, v3);
  sub_22ABDF7D0();
  if (__swift_getEnumTagSinglePayload(v0, 1, v15) == 1)
  {
    OUTLINED_FUNCTION_7_68();
    OUTLINED_FUNCTION_29_28(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return v6();
  }
  else
  {
    OUTLINED_FUNCTION_26_33(*(_QWORD *)(v1 + 184), *(uint64_t (**)(uint64_t, char *))(v1 + 296));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 312) = v8;
    v9 = OUTLINED_FUNCTION_34_31(v8);
    return LinearTimeSeriesForecaster.Model.applied(toWindow:eventHandler:)(v9, v10, v11, v12, v13);
  }
}

uint64_t sub_22AAC0C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 8);
  v5(*(_QWORD *)(v0 + 184), v3);
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v5(v4, v3);
  OUTLINED_FUNCTION_29_28(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_19_42();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAC0CC8()
{
  uint64_t v0;

  v0 = sub_22ABDE8A0();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v0);
  return sub_22AA3EF20();
}

void sub_22AAC0D64()
{
  uint64_t v0;

  v0 = sub_22ABDED20();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE09E8], v0);
  meanSquaredError<A, B, C>(_:_:)();
}

uint64_t sub_22AAC0DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9B72C0;
  return LinearTimeSeriesForecaster.Model.applied(to:eventHandler:)(a1, a2, a3, a4, a5);
}

uint64_t sub_22AAC0E7C(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  result = _s5StateOMa(319, a1[2], a1[3], a1[4]);
  if (v2 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22AAC0EFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    _s5StateOMa(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22ABDE8A0();
      v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = sub_22ABDF5D8();
      v10 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v10, 1, v7))
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v11, (uint64_t *)v12, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
      }
    }
    else
    {
      v14 = sub_22ABDD7D8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
      v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v19 = v18[12];
      v20 = &v16[v19];
      v21 = &v17[v19];
      v22 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
      }
      v24 = v18[13];
      v25 = &v16[v24];
      v26 = &v17[v24];
      v27 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
        __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
      }
      *(_DWORD *)&v16[v18[14]] = *(_DWORD *)&v17[v18[14]];
      *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
      v29 = v18[16];
      v30 = &v16[v29];
      v31 = &v17[v29];
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
      v33(v30, v31, v32);
      v33(&v16[v18[17]], &v17[v18[17]], v32);
      v34 = v18[18];
      v35 = &v16[v34];
      v36 = &v17[v34];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v17[v34], 1, v32))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v32);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v32);
      }
    }
    swift_storeEnumTagMultiPayload();
    v38 = *(int *)(a3 + 48);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 44)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 44));
    *(uint64_t *)((char *)a1 + v38) = *(uint64_t *)((char *)a2 + v38);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 52)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 52));
  }
  return a1;
}

uint64_t sub_22AAC12B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t (*v14)(uint64_t, uint64_t);

  _s5StateOMa(0, a2[2], a2[3], a2[4]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = sub_22ABDE8A0();
    v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v14(a1, v3);
    sub_22ABDF5D8();
    v4 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  }
  else
  {
    v5 = sub_22ABDD7D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v8 = v6 + v7[12];
    v9 = sub_22ABDD5D4();
    if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = v6 + v7[13];
    v11 = sub_22ABDD598();
    if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = v6 + v7[16];
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v14(v12, v3);
    v14(v6 + v7[17], v3);
    v4 = v6 + v7[18];
  }
  result = __swift_getEnumTagSinglePayload(v4, 1, v3);
  if (!(_DWORD)result)
    return v14(v4, v3);
  return result;
}

char *sub_22AAC14A4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(void *, const void *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  _s5StateOMa(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22ABDE8A0();
    v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    v8 = sub_22ABDF5D8();
    v9 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v10 = &a1[v9];
    v11 = &a2[v9];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v7(v10, v11, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
    }
  }
  else
  {
    v12 = sub_22ABDD7D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v14 = &a1[v13];
    v15 = &a2[v13];
    *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
    v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v17 = v16[12];
    v18 = &v14[v17];
    v19 = &v15[v17];
    v20 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
    }
    v22 = v16[13];
    v23 = &v14[v22];
    v24 = &v15[v22];
    v25 = sub_22ABDD598();
    if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
    }
    *(_DWORD *)&v14[v16[14]] = *(_DWORD *)&v15[v16[14]];
    *(_QWORD *)&v14[v16[15]] = *(_QWORD *)&v15[v16[15]];
    v27 = v16[16];
    v28 = &v14[v27];
    v29 = &v15[v27];
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v31 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    v31(v28, v29, v30);
    v31(&v14[v16[17]], &v15[v16[17]], v30);
    v32 = v16[18];
    v33 = &v14[v32];
    v34 = &v15[v32];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v15[v32], 1, v30))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v31(v33, v34, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v30);
    }
  }
  swift_storeEnumTagMultiPayload();
  v36 = *(int *)(a3 + 48);
  *(_QWORD *)&a1[*(int *)(a3 + 44)] = *(_QWORD *)&a2[*(int *)(a3 + 44)];
  *(_QWORD *)&a1[v36] = *(_QWORD *)&a2[v36];
  *(_QWORD *)&a1[*(int *)(a3 + 52)] = *(_QWORD *)&a2[*(int *)(a3 + 52)];
  return a1;
}

uint64_t sub_22AAC182C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  const void *v35;
  uint64_t v36;

  if (a1 != a2)
  {
    v6 = _s5StateOMa(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22ABDE8A0();
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = sub_22ABDF5D8();
      v10 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v11 = (void *)(a1 + v10);
      v12 = (const void *)(a2 + v10);
      if (__swift_getEnumTagSinglePayload(a2 + v10, 1, v7))
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v8((uint64_t)v11, (uint64_t)v12, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
      }
    }
    else
    {
      v13 = sub_22ABDD7D8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v15 = (char *)(a1 + v14);
      v16 = a2 + v14;
      *(_DWORD *)v15 = *(_DWORD *)(a2 + v14);
      *((_DWORD *)v15 + 1) = *(_DWORD *)(a2 + v14 + 4);
      *((_DWORD *)v15 + 2) = *(_DWORD *)(a2 + v14 + 8);
      *((_DWORD *)v15 + 3) = *(_DWORD *)(a2 + v14 + 12);
      v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v18 = v17[12];
      v19 = &v15[v18];
      v20 = (const void *)(v16 + v18);
      v21 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
      v23 = v17[13];
      v24 = &v15[v23];
      v25 = (const void *)(v16 + v23);
      v26 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      *(_DWORD *)&v15[v17[14]] = *(_DWORD *)(v16 + v17[14]);
      *(_QWORD *)&v15[v17[15]] = *(_QWORD *)(v16 + v17[15]);
      v28 = v17[16];
      v29 = &v15[v28];
      v30 = v16 + v28;
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      v32(v29, v30, v31);
      v32(&v15[v17[17]], v16 + v17[17], v31);
      v33 = v17[18];
      v34 = &v15[v33];
      v35 = (const void *)(v16 + v33);
      if (__swift_getEnumTagSinglePayload(v16 + v33, 1, v31))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v32(v34, (uint64_t)v35, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v31);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  *(_QWORD *)(a1 + *(int *)(a3 + 48)) = *(_QWORD *)(a2 + *(int *)(a3 + 48));
  *(_QWORD *)(a1 + *(int *)(a3 + 52)) = *(_QWORD *)(a2 + *(int *)(a3 + 52));
  return a1;
}

char *sub_22AAC1BEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(void *, const void *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  _s5StateOMa(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22ABDE8A0();
    v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    v8 = sub_22ABDF5D8();
    v9 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v10 = &a1[v9];
    v11 = &a2[v9];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v7(v10, v11, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
    }
  }
  else
  {
    v12 = sub_22ABDD7D8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v14 = &a1[v13];
    v15 = &a2[v13];
    *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
    v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v17 = v16[12];
    v18 = &v14[v17];
    v19 = &v15[v17];
    v20 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
    }
    v22 = v16[13];
    v23 = &v14[v22];
    v24 = &v15[v22];
    v25 = sub_22ABDD598();
    if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
    }
    *(_DWORD *)&v14[v16[14]] = *(_DWORD *)&v15[v16[14]];
    *(_QWORD *)&v14[v16[15]] = *(_QWORD *)&v15[v16[15]];
    v27 = v16[16];
    v28 = &v14[v27];
    v29 = &v15[v27];
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v31 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
    v31(v28, v29, v30);
    v31(&v14[v16[17]], &v15[v16[17]], v30);
    v32 = v16[18];
    v33 = &v14[v32];
    v34 = &v15[v32];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v15[v32], 1, v30))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v31(v33, v34, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v30);
    }
  }
  swift_storeEnumTagMultiPayload();
  v36 = *(int *)(a3 + 48);
  *(_QWORD *)&a1[*(int *)(a3 + 44)] = *(_QWORD *)&a2[*(int *)(a3 + 44)];
  *(_QWORD *)&a1[v36] = *(_QWORD *)&a2[v36];
  *(_QWORD *)&a1[*(int *)(a3 + 52)] = *(_QWORD *)&a2[*(int *)(a3 + 52)];
  return a1;
}

char *sub_22AAC1F74(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(void *, const void *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  if (a1 != a2)
  {
    v6 = _s5StateOMa(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22ABDE8A0();
      v8 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = sub_22ABDF5D8();
      v10 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v11 = &a1[v10];
      v12 = &a2[v10];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v7))
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
      }
    }
    else
    {
      v13 = sub_22ABDD7D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
      v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v18 = v17[12];
      v19 = &v15[v18];
      v20 = &v16[v18];
      v21 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
      v23 = v17[13];
      v24 = &v15[v23];
      v25 = &v16[v23];
      v26 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      *(_DWORD *)&v15[v17[14]] = *(_DWORD *)&v16[v17[14]];
      *(_QWORD *)&v15[v17[15]] = *(_QWORD *)&v16[v17[15]];
      v28 = v17[16];
      v29 = &v15[v28];
      v30 = &v16[v28];
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v32 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
      v32(v29, v30, v31);
      v32(&v15[v17[17]], &v16[v17[17]], v31);
      v33 = v17[18];
      v34 = &v15[v33];
      v35 = &v16[v33];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v16[v33], 1, v31))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v32(v34, v35, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v31);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  v37 = *(int *)(a3 + 48);
  *(_QWORD *)&a1[*(int *)(a3 + 44)] = *(_QWORD *)&a2[*(int *)(a3 + 44)];
  *(_QWORD *)&a1[v37] = *(_QWORD *)&a2[v37];
  *(_QWORD *)&a1[*(int *)(a3 + 52)] = *(_QWORD *)&a2[*(int *)(a3 + 52)];
  return a1;
}

uint64_t sub_22AAC2318()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAC2324(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = type metadata accessor for MultivariateLinearRegressor.Model(0, a3[2], a3[3], a3[4]);
  return __swift_getEnumTagSinglePayload(a1, a2, v5);
}

uint64_t sub_22AAC2364()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAC2370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = type metadata accessor for MultivariateLinearRegressor.Model(0, a4[2], a4[3], a4[4]);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v6);
}

uint64_t type metadata accessor for LinearTimeSeriesForecaster.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LinearTimeSeriesForecaster.Model);
}

uint64_t sub_22AAC23BC()
{
  return sub_22AAC0CC8();
}

void sub_22AAC23D8()
{
  sub_22AAC0D64();
}

uint64_t OUTLINED_FUNCTION_7_68()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[33] + 8))(v0[34], v0[32]);
}

uint64_t OUTLINED_FUNCTION_13_62(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + v4) = a1;
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v3);
  return __swift_getEnumTagSinglePayload(v2, 1, v3);
}

uint64_t OUTLINED_FUNCTION_17_44()
{
  uint64_t v0;
  uint64_t v1;

  return SlidingWindows.subscript.getter(v0, *(int **)(v1 + 336));
}

uint64_t OUTLINED_FUNCTION_18_50()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 472);
}

uint64_t OUTLINED_FUNCTION_19_42()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_21_48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)(a2 + 16) = (a3 - 32) | 0x8000000000000000;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 6;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_22_42(uint64_t *a1)
{
  return type metadata accessor for MultivariateLinearRegressor.Model(0, a1[2], a1[3], a1[4]);
}

uint64_t OUTLINED_FUNCTION_25_33(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 424);
}

uint64_t OUTLINED_FUNCTION_26_33@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 304) = *(_QWORD *)v2;
  return a2(a1, &v2[*(int *)(v3 + 48)]);
}

uint64_t OUTLINED_FUNCTION_27_34()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_29_28@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_30_32()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_31_26()
{
  uint64_t v0;

  return __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 328), 1, 1, *(_QWORD *)(v0 + 320));
}

uint64_t OUTLINED_FUNCTION_32_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(uint64_t, uint64_t))
{
  uint64_t v14;
  uint64_t v15;

  return a14(v14, v15);
}

uint64_t OUTLINED_FUNCTION_34_31(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 176);
}

uint64_t OUTLINED_FUNCTION_37_26()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_38_31()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_40_19@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

Swift::Int OUTLINED_FUNCTION_43_17()
{
  Swift::Int v0;

  return SlidingWindows.index(after:)(v0);
}

uint64_t OUTLINED_FUNCTION_45_19()
{
  _QWORD *v0;
  uint64_t (*v1)(_QWORD, _QWORD, _QWORD);

  return v1(v0[54], v0[41], v0[40]);
}

uint64_t OUTLINED_FUNCTION_46_21()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_50_23()
{
  return swift_task_dealloc();
}

uint64_t sub_22AAC2630(uint64_t a1, void *__dst, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return v3;
  if (v3 > a3)
  {
    __break(1u);
  }
  else
  {
    if (!__dst)
      return v3;
    if (a1 + 32 >= (unint64_t)__dst + 8 * v3 || a1 + 32 + 8 * v3 <= (unint64_t)__dst)
    {
      memcpy(__dst, (const void *)(a1 + 32), 8 * v3);
      return v3;
    }
  }
  result = sub_22ABDFB9C();
  __break(1u);
  return result;
}

uint64_t LogisticRegressionClassifierModel.featureCount.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t result;

  v1 = v0[1];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v1 == 2)
    return v2 - 1;
  v3 = __OFSUB__(v1, 1);
  v4 = v1 - 1;
  if (v3)
  {
    __break(1u);
  }
  else if (v4)
  {
    v2 /= v4;
    return v2 - 1;
  }
  __break(1u);
  return result;
}

uint64_t LogisticRegressionClassifierModel.coefficients.getter(_OWORD *a1)
{
  uint64_t *v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *v1;
  v2 = a1[2];
  v10 = a1[1];
  v11 = v2;
  v3 = a1[4];
  v12 = a1[3];
  v13 = v3;
  v14 = v10;
  swift_retain();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8658);
  v5 = sub_22A9C8D60((unint64_t *)&qword_2540E8650, &qword_2540E8658, MEMORY[0x24BEE2A60]);
  v7 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AAC27CC, (uint64_t)&v9, v4, v10, MEMORY[0x24BEE4078], v5, MEMORY[0x24BEE40A8], v6);
  swift_release();
  return v7;
}

uint64_t sub_22AAC27CC()
{
  return sub_22ABDEA80();
}

__n128 sub_22AAC2804@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4;
  __n128 result;

  v4 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)a4 = *(_QWORD *)a1;
  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a4 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a4 + 56) = *(_OWORD *)(a1 + 56);
  result = *(__n128 *)(a1 + 72);
  *(__n128 *)(a4 + 72) = result;
  *(_BYTE *)(a4 + 88) = v4;
  *(_QWORD *)(a4 + 96) = a2;
  *(_QWORD *)(a4 + 104) = a3;
  return result;
}

void LogisticRegressionClassifierModel.init<A>(coefficients:labels:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v16 = sub_22AB593D0(a2, a4, a8, a11);
  v18 = v17;
  v23 = a3;
  v24 = a4;
  v25 = a5;
  v26 = a6;
  v27 = a7;
  v28 = a8;
  v29 = a9;
  v30 = a10;
  v31 = a11;
  v32 = a12;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22A9C2540((uint64_t)sub_22AAC2A34, (uint64_t)v22, a5, MEMORY[0x24BEE13C8], MEMORY[0x24BEE4078], a12, MEMORY[0x24BEE40A8], v19);
  sub_22AB593D4(v16, v18, a4, a8, a11);
}

double sub_22AAC2930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_51_1();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6, v3);
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = a1;
  result = 0.0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 73) = 0u;
  *(_QWORD *)(v1 + 96) = v4;
  *(_QWORD *)(v1 + 104) = v5;
  return result;
}

uint64_t sub_22AAC298C(uint64_t a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  sub_22A99CE8C();
  return sub_22ABDEA50();
}

uint64_t sub_22AAC2A34(uint64_t a1)
{
  return sub_22AAC298C(a1);
}

void sub_22AAC2A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a5;
  v15 = *(_QWORD *)(a6 - 8);
  v16 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))((char *)&v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v18, v16);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDF11C();
  sub_22AB593D4(a2, a3, v20, a9, a12);
}

double sub_22AAC2B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v4);
  *(_QWORD *)v3 = v7;
  *(_QWORD *)(v3 + 8) = a1;
  result = 0.0;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 73) = 0u;
  *(_QWORD *)(v3 + 96) = v2;
  *(_QWORD *)(v3 + 104) = v1;
  return result;
}

uint64_t LogisticRegressionClassifierModel.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const void *v5;
  _QWORD *v6;

  v6[20] = a4;
  v6[21] = a5;
  v6[18] = a2;
  v6[19] = a3;
  v6[17] = a1;
  memcpy(v6 + 2, v5, 0x70uLL);
  return swift_task_switch();
}

uint64_t sub_22AAC2C14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isStackAllocationSafe;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0[21] + 32);
  sub_22ABDE8A0();
  v2 = *(_QWORD *)(sub_22ABDE84C() + 16);
  swift_bridgeObjectRelease();
  v3 = sub_22ABDE84C();
  v4 = v3;
  if (v2 != 1)
  {
    v14 = 0xD000000000000024;
    v15 = 0x800000022ABE31E0;
    goto LABEL_11;
  }
  if (*(_QWORD *)(v3 + 16))
  {
    v5 = *(_QWORD *)(v3 + 32);
    OUTLINED_FUNCTION_51_1();
    if (v5 == OUTLINED_FUNCTION_5_58())
    {
      isStackAllocationSafe = OUTLINED_FUNCTION_5_58();
      if (isStackAllocationSafe < -1)
      {
        __break(1u);
      }
      else if (!((unint64_t)(isStackAllocationSafe + 0x1000000000000001) >> 61))
      {
        v7 = isStackAllocationSafe + 1;
        if (8 * (isStackAllocationSafe + 1) > 1024)
        {
          isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
          if (!(_DWORD)isStackAllocationSafe)
          {
            v19 = (uint64_t *)v0[21];
            v25 = v0[20];
            v21 = v0[18];
            v20 = v0[19];
            v22 = (void *)swift_slowAlloc();
            OUTLINED_FUNCTION_11_60(v22, v7, v21, v0 + 2, v20, v25, v23, v19[3], v1, v19[5], v19[6], v19[7], v19[8], v19[9]);
          }
        }
        MEMORY[0x24BDAC7A8](isStackAllocationSafe);
        OUTLINED_FUNCTION_11_60((char *)&v25 - v8, v7, v10, v0 + 2, v11, v12, v13, v9[3], v1, v9[5], v9[6], v9[7], v9[8], v9[9]);
      }
      __break(1u);
    }
    v4 = OUTLINED_FUNCTION_6_78();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v26 = 0xD00000000000001ELL;
    v27 = 0x800000022ABE3210;
    v0[16] = OUTLINED_FUNCTION_5_58();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_6_78();
    MEMORY[0x22E2E3298]();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    v14 = v26;
    v15 = v27;
LABEL_11:
    sub_22A9B7B50();
    v16 = swift_allocError();
    *(_QWORD *)v17 = v4;
    *(_QWORD *)(v17 + 8) = v14;
    *(_QWORD *)(v17 + 16) = v15;
    *(_QWORD *)(v17 + 24) = 0;
    *(_BYTE *)(v17 + 32) = 6;
    swift_willThrow(v16);
    OUTLINED_FUNCTION_2_50();
    __asm { BR              X0 }
  }
  result = OUTLINED_FUNCTION_51_1();
  __break(1u);
  return result;
}

void sub_22AAC3004(void *a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v23[19];
  _QWORD __dst[14];
  uint64_t v25;

  v25 = a8;
  v15 = sub_22ABDE8A0();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v15);
  __dst[0] = sub_22ABDE930();
  v23[2] = a7;
  v23[3] = v25;
  v23[4] = a9;
  v23[5] = a10;
  v23[6] = a11;
  v23[7] = a12;
  v23[8] = a13;
  v23[9] = a14;
  v16 = sub_22ABDF0F8();
  v17 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v16);
  v19 = sub_22AA726CC((void (*)(char *, uint64_t))sub_22AAC4314, (uint64_t)v23, v16, MEMORY[0x24BEE13C8], MEMORY[0x24BEE4078], v17, MEMORY[0x24BEE40A8], v18);
  swift_bridgeObjectRelease();
  sub_22AAC2630(v19, a1, a2);
  swift_bridgeObjectRelease();
  memcpy(__dst, a4, sizeof(__dst));
  v23[11] = a7;
  v23[12] = v25;
  v23[13] = a9;
  v23[14] = a10;
  v23[15] = a11;
  v23[16] = a12;
  v23[17] = a13;
  v23[18] = a14;
  type metadata accessor for LogisticRegressionClassifierModel();
}

uint64_t sub_22AAC3190()
{
  uint64_t *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[24];

  result = LogisticRegressionClassifierModel.featureCount.getter();
  *(_QWORD *)(v4 + 8 * result) = 0x3FF0000000000000;
  if (v4)
  {
    memcpy((void *)(v5 - 200), v1, 0x59uLL);
    v7 = *(_QWORD *)(v5 - 200);
    v8 = *(_QWORD *)(v5 - 192);
    v9 = v7 + 32;
    v10 = *(_QWORD *)(v7 + 16);
    sub_22AA5F344(v5 - 200);
    v11 = v0 + 23;
    if (v8 == 2)
    {
      sub_22AA5D574(v3, v0[8], 1, v9, v10, 1, v11);
    }
    else
    {
      v12 = v0[7];
      sub_22AA5DAF8(v10, v5 - 200, v3, 1, v11);
      v0[7] = v12;
    }
    v13 = *(_QWORD *)(v5 - 72);
    v15 = v0[1];
    v14 = v0[2];
    v16 = *v0;
    v17 = sub_22AAC4348(v5 - 200);
    MEMORY[0x24BDAC7A8](v17);
    v20[2] = v16;
    v20[3] = v13;
    v18 = v0[10];
    v20[4] = v0[9];
    v20[5] = v18;
    v20[6] = v15;
    v20[7] = v14;
    v20[8] = v0[3];
    v20[9] = v2;
    v20[10] = v0[11];
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B12410);
    ClassificationDistribution.map<A>(_:)((uint64_t)sub_22AAC43E0, (uint64_t)v20, v19, v13, v2, (uint64_t *)v0[4]);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22AAC32E0()
{
  uint64_t v0;

  v0 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v0);
  sub_22AB593D8();
}

uint64_t sub_22AAC336C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  float v4;
  uint64_t result;

  result = __swift_getEnumTagSinglePayload(v3, 1, v0);
  if ((_DWORD)result != 1)
    return Classification.init(label:probability:)(v3, v0, v1, v2, v4);
  __break(1u);
  return result;
}

void sub_22AAC33C4()
{
  OUTLINED_FUNCTION_12();
  type metadata accessor for LogisticRegressionClassifierModel.Storage();
}

void sub_22AAC342C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);

  *(_QWORD *)(v11 - 272) = a1;
  *(_QWORD *)(v11 - 208) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&a9 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&a9 - v20;
  v22 = *v9;
  *(_OWORD *)(v11 - 304) = *((_OWORD *)v9 + 6);
  *(_QWORD *)(v11 - 160) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v22 + 16);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8658);
  sub_22A9C8D60(&qword_2540E8648, &qword_2540E8658, MEMORY[0x24BEE2A48]);
  sub_22ABDE864();
  *(_QWORD *)(v11 - 192) = v21;
  *(_QWORD *)(v11 - 184) = v16;
  v24 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  *(_QWORD *)(v11 - 176) = v15;
  v24(v18, v21, v15);
  *(_QWORD *)(v11 - 280) = v10;
  sub_22AAC3698(v14);
}

void sub_22AAC35B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  OUTLINED_FUNCTION_18_27();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8);
  v9 = MEMORY[0x22E2E4D80](&unk_22ABF8010, v4);
  v10 = *(_QWORD *)(v5 - 200);
  v8(v0, v4, v9, v6, v7);
  OUTLINED_FUNCTION_3_3();
  if (!v10)
  {
    *(_OWORD *)(v5 - 160) = *(_OWORD *)(v5 - 304);
    v11 = *(_QWORD *)(v2 + 24);
    v12 = *(_QWORD *)(v2 + 32);
    OUTLINED_FUNCTION_18_27();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
    v14 = type metadata accessor for LabelEncoder(0, v1, v3, *(_QWORD *)(v5 - 280));
    *(_QWORD *)(v5 - 72) = *(_QWORD *)(v5 - 168);
    v15 = MEMORY[0x22E2E4D80](&unk_22ABFD04C, v14, v5 - 72);
    v13(v5 - 160, v14, v15, v11, v12);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 184) + 8))(*(_QWORD *)(v5 - 192), *(_QWORD *)(v5 - 176));
  OUTLINED_FUNCTION_16();
}

void sub_22AAC3698(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  type metadata accessor for LogisticRegressionClassifierModel.Storage();
}

uint64_t sub_22AAC36D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(a1 + 84);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v1, v4);
}

void sub_22AAC3710()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0();
  type metadata accessor for LogisticRegressionClassifierModel.Storage();
}

void sub_22AAC37AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v12 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&a9 - v14;
  v17 = *(_QWORD *)(v9 + 24);
  v16 = *(_QWORD *)(v9 + 32);
  OUTLINED_FUNCTION_8_55();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
  v19 = MEMORY[0x22E2E4D80](&unk_22ABF8038, a1);
  v20 = *(_QWORD *)(v10 - 152);
  v18(a1, a1, v19, v17, v16);
  if (!v20)
  {
    (*(void (**)(_QWORD, char *, _QWORD))(*(_QWORD *)(v10 - 168) + 16))(*(_QWORD *)(v10 - 176), &v15[*(int *)(a1 + 84)], *(_QWORD *)(v10 - 160));
    v21 = type metadata accessor for LabelEncoder(0, *(_QWORD *)(v10 - 192), *(_QWORD *)(v10 - 184), *(_QWORD *)(v10 - 200));
    v23 = *(_QWORD *)(v9 + 24);
    v22 = *(_QWORD *)(v9 + 32);
    OUTLINED_FUNCTION_8_55();
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8);
    *(_QWORD *)(v10 - 72) = *(_QWORD *)(v10 - 208);
    v25 = MEMORY[0x22E2E4D80](&unk_22ABFD018, v21, v10 - 72);
    v24(v21, v21, v25, v23, v22);
    *(_QWORD *)(v10 - 152) = v12;
    v26 = *(_QWORD *)(v10 - 144);
    v27 = *(_QWORD *)(v10 - 136);
    sub_22A9C8D60(&qword_2540E8538, &qword_2540E8550, MEMORY[0x24BDBFCD0]);
    *(_QWORD *)(v10 - 144) = sub_22ABDE930();
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85C8);
    sub_22A9C8D60((unint64_t *)&qword_2540E85D0, &qword_2540E85C8, MEMORY[0x24BEE12C8]);
    sub_22AAC2A74(v10 - 144, v26, v27, v29, *(_QWORD *)(v10 - 192), v28, v30, v31, *(_QWORD *)(v10 - 184), v32, v33, *(_QWORD *)(v10 - 200));
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAC3990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A99DE80;
  return LogisticRegressionClassifierModel.applied(to:eventHandler:)(a1, a2, a3, a4, a5);
}

void sub_22AAC3A10()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_12_53();
}

void sub_22AAC3A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  MEMORY[0x22E2E4D80](&unk_22ABF8138, a1);
  v11 = sub_22ABDFD58();
  v12 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&a9 - v14;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v10 - 144) = 0;
  v16 = *(_QWORD *)(v10 - 72);
  sub_22ABDFCD4();
  if (!v16)
  {
    *(_BYTE *)(v10 - 144) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    sub_22AA34268(&qword_2540E8540, MEMORY[0x24BEE13D8], MEMORY[0x24BDBFCD8]);
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  OUTLINED_FUNCTION_16();
}

void sub_22AAC3B80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_53();
}

void sub_22AAC3C18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 - 160) = MEMORY[0x22E2E4D80](&unk_22ABF8138, a1);
  v8 = sub_22ABDFCB0();
  *(_QWORD *)(v7 - 176) = v8;
  *(_QWORD *)(v7 - 200) = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v7 - 144) = v1;
  *(_QWORD *)(v7 - 136) = v4;
  *(_QWORD *)(v7 - 128) = v3;
  *(_QWORD *)(v7 - 120) = v5;
  v10 = *(_QWORD *)(v7 - 72);
  *(_QWORD *)(v7 - 112) = *(_QWORD *)(v7 - 168);
  *(_QWORD *)(v7 - 104) = v10;
  *(_QWORD *)(v7 - 96) = v6;
  *(_QWORD *)(v7 - 88) = v2;
  type metadata accessor for LogisticRegressionClassifierModel.Storage();
}

void sub_22AAC3C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v13 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_6();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&a9 - v15);
  *v16 = 0;
  v16[1] = 0;
  v17 = v10[3];
  *(_QWORD *)(v11 - 72) = v10;
  __swift_project_boxed_opaque_existential_1(v10, v17);
  *(_QWORD *)(v11 - 168) = v9;
  v18 = *(_QWORD *)(v11 - 152);
  sub_22ABE0298();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v11 - 72));
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)(v11 - 192);
    v20 = *(_QWORD *)(v11 - 184);
    *(_BYTE *)(v11 - 144) = 0;
    *v16 = sub_22ABDFC14();
    v16[1] = v21;
    *(_BYTE *)(v11 - 144) = 1;
    sub_22AA34268(&qword_2540E8548, MEMORY[0x24BEE1400], MEMORY[0x24BDBFCE8]);
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_12_32();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 216) + 32))((char *)v16 + *(int *)(a1 + 84), v19, v20);
    (*(void (**)(_QWORD, uint64_t *, uint64_t))(v13 + 16))(*(_QWORD *)(v11 - 208), v16, a1);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v11 - 72));
    (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v16, a1);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAC3DEC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF8138, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AAC3E20(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF8138, a1);
  return sub_22ABE02F8();
}

void sub_22AAC3E54()
{
  sub_22AAC3B80();
}

void sub_22AAC3E88()
{
  sub_22AAC3A10();
}

uint64_t sub_22AAC3E9C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for LogisticRegressionClassifierModel<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AAC3EC8(uint64_t a1)
{
  swift_release();
  if (*(_QWORD *)(a1 + 16))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AAC3F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = (const void *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  swift_retain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    memcpy((void *)(a1 + 16), v6, 0x49uLL);
  }
  v8 = *(_QWORD *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v8;
  *(_QWORD *)(a1 + 104) = v9;
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AAC3FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 16) = v5;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x49uLL);
    goto LABEL_8;
  }
  if (!v5)
  {
    sub_22AA33AB8(a1 + 16);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 16) = v5;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
LABEL_8:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t sub_22AAC4178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_5;
  if (!v4)
  {
    sub_22AA33AB8(a1 + 16);
LABEL_5:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x49uLL);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
LABEL_6:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22AAC4260(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AAC42A0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LogisticRegressionClassifierModel()
{
  JUMPOUT(0x22E2E4CF0);
}

void type metadata accessor for LogisticRegressionClassifierModel.Storage()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AAC4314(uint64_t a1)
{
  return sub_22AA6BCC0(a1);
}

uint64_t sub_22AAC4348(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_release();
  sub_22AA6D37C(v3);
  return a1;
}

void sub_22AAC43E0()
{
  sub_22AAC32E0();
}

void sub_22AAC4414()
{
  unint64_t v0;

  sub_22AA3420C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_22AAC4488()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAC4494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 84), a2, v9);
  }
}

uint64_t sub_22AAC4518()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAC4524(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 84), a2, a2, v7);
  }
  return result;
}

void type metadata accessor for LogisticRegressionClassifierModel.Storage.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AAC45A0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AAC45EC + 4 * byte_22ABF7F55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AAC4620 + 4 * byte_22ABF7F50[v4]))();
}

uint64_t sub_22AAC4620(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAC4628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AAC4630);
  return result;
}

uint64_t sub_22AAC463C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AAC4644);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AAC4648(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAC4650(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AAC465C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAC466C()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAC467C()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_5_58()
{
  return LogisticRegressionClassifierModel.featureCount.getter();
}

uint64_t OUTLINED_FUNCTION_6_78()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_8_55()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_mutable_project_boxed_opaque_existential_1(v0, v1);
}

void OUTLINED_FUNCTION_11_60(void *a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  sub_22AAC3004(a1, a2, a3, a4, a5, a6, v14, a8, a9, a10, a11, a12, a13, a14);
}

void OUTLINED_FUNCTION_12_53()
{
  type metadata accessor for LogisticRegressionClassifierModel.Storage.CodingKeys();
}

uint64_t sub_22AAC46C4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AAC47A0 + 4 * byte_22ABF8190[v21 - 1]))();
}

void sub_22AAC4814(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void type metadata accessor for ComposedRandomTransformer()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AAC4A14(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v17[2];

  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v15, v4, a2, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a3);
  sub_22AAC4B08((uint64_t)v15, a2, a4);
}

void sub_22AAC4B08(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for ComposedRandomTransformer();
}

uint64_t sub_22AAC4B60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void sub_22AAC4B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  _QWORD *v11;

  v9[8] = a8;
  v9[9] = v8;
  v9[6] = a6;
  v9[7] = a7;
  v9[4] = a4;
  v9[5] = a5;
  v9[2] = a1;
  v9[3] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[10] = AssociatedTypeWitness;
  v9[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[12] = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_25();
  v9[13] = v11;
  *v11 = v9;
  v11[1] = sub_22AAC4C94;
  __asm { BR              X8 }
}

uint64_t sub_22AAC4C94()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAC4CE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 112);
  sub_22ABDF1DC();
  if (!v1)
  {
    v3 = (_QWORD *)OUTLINED_FUNCTION_25();
    *(_QWORD *)(v0 + 120) = v3;
    *v3 = v0;
    v3[1] = sub_22AAC4D98;
    __asm { BR              X8 }
  }
  OUTLINED_FUNCTION_3_75();
  OUTLINED_FUNCTION_5_59();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAC4D98()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAC4DEC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAC4E2C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_59();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAC4E54()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_75();
  OUTLINED_FUNCTION_5_59();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AAC4E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_22A9B72C0;
  sub_22AAC4B94(a1, a2, a3, a4, a5, a8, a6, a7);
}

uint64_t OUTLINED_FUNCTION_2_70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_22AAC4F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t OUTLINED_FUNCTION_3_75()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[11] + 8))(v0[12], v0[10]);
}

uint64_t OUTLINED_FUNCTION_5_59()
{
  return swift_task_dealloc();
}

void sub_22AAC4F74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a4;
  v28 = a2;
  v25 = a1;
  v20 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_87();
  v23 = v4;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - v12;
  v26 = *(_QWORD *)(v14 + 16);
  v24 = *(_QWORD *)(v26 + 16);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v15);
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  sub_22ABDFF20();
  v16 = DenseVector.count.getter();
  if (v16 < 0)
  {
    __break(1u);
  }
  else
  {
    v22 = v7;
    if (v16)
    {
      v17 = 0;
      v21 = v16;
      v19 = (uint64_t)v22;
      v18 = v23;
      do
      {
        v29 = v17 + 1;
        OUTLINED_FUNCTION_5_60(v17, v25);
        sub_22ABE0154();
        OUTLINED_FUNCTION_0_67((uint64_t)v10);
        OUTLINED_FUNCTION_5_60(v17, v28);
        OUTLINED_FUNCTION_2_71();
        OUTLINED_FUNCTION_0_67(v18);
        OUTLINED_FUNCTION_2_71();
        OUTLINED_FUNCTION_0_67(v19);
        sub_22ABDFB00();
        OUTLINED_FUNCTION_0_67((uint64_t)v10);
        OUTLINED_FUNCTION_0_67((uint64_t)v13);
        v17 = v29;
      }
      while (v21 != v29);
    }
    OUTLINED_FUNCTION_3();
  }
}

void sub_22AAC51D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t AssociatedTypeWitness;
  unint64_t v47;
  uint64_t v48;

  v45 = a1;
  v47 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) + 16) + 8);
  v7 = *(_QWORD *)(v47 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v37 - v9;
  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_87();
  v44 = v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v37 - v15;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v37 - v18;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v37 - v21;
  v23 = a2;
  v48 = a4;
  v24 = DenseVector.count.getter();
  if (v24 < 0)
  {
    __break(1u);
  }
  else
  {
    v42 = v11;
    v43 = v10;
    v25 = v47;
    v40 = v16;
    v41 = v22;
    if (v24)
    {
      v26 = v24;
      v27 = (uint64_t)v19;
      v37[2] = v45 + 1;
      v37[1] = swift_getAssociatedConformanceWitness();
      v28 = 0;
      v38 = v26;
      v39 = v7;
      v29 = (uint64_t)v40;
      do
      {
        v47 = v28 + 1;
        sub_22ABE013C();
        sub_22ABDFF20();
        v30 = v44;
        OUTLINED_FUNCTION_3_76(v28, v23);
        OUTLINED_FUNCTION_2_71();
        OUTLINED_FUNCTION_0_67(v30);
        OUTLINED_FUNCTION_0_67(v29);
        v31 = v25;
        v32 = v45;
        OUTLINED_FUNCTION_3_76(v28, *v45);
        v33 = (uint64_t)v41;
        sub_22ABDF308();
        OUTLINED_FUNCTION_0_67(v29);
        OUTLINED_FUNCTION_0_67(v27);
        v34 = v32[1];
        v25 = v31;
        OUTLINED_FUNCTION_3_76(v28, v34);
        sub_22ABDFB00();
        OUTLINED_FUNCTION_0_67(v33);
        v36 = type metadata accessor for DenseVector(0, a3, v48, v35);
        DenseVector.subscript.setter(v27, v28, v36);
        v28 = v47;
      }
      while (v38 != v47);
    }
    OUTLINED_FUNCTION_3();
  }
}

uint64_t type metadata accessor for L2NormRegularizer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for L2NormRegularizer);
}

uint64_t OUTLINED_FUNCTION_0_67(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_2_71()
{
  return sub_22ABDF308();
}

uint64_t OUTLINED_FUNCTION_3_76(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return DenseVector.subscript.getter(a1, a2, v2, *(_QWORD *)(v3 - 88));
}

uint64_t OUTLINED_FUNCTION_5_60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return DenseVector.subscript.getter(a1, a2, v2, v3);
}

uint64_t sub_22AAC54C0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t AssociatedTypeWitness;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  unint64_t v7;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v4 = v3;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0 = type metadata accessor for OptimizerState(319, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
    if (v7 <= 0x3F)
    {
      if (v4 > 0x3F)
      {
        return AssociatedTypeWitness;
      }
      else
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

_QWORD *sub_22AAC5628(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unsigned int v16;
  int v17;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v10 | 7;
  v13 = *(_QWORD *)(v9 + 64);
  v14 = v13 + v10;
  v15 = ((((((((((((((v13
                    + 7
                    + ((v14
                      + ((v11
                        + 24
                        + ((v13
                          + ((v14 + ((v14 + ((v11 + 48) & ~v11)) & ~v11)) & ~v11)
                          + 1
                          + ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                            + v10
                            + 8) & ~(v11 | 7))
                          + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
                  + 39) & 0xFFFFFFFFFFFFFFF8)
                + 39) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  v16 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  v17 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if (v16 > 7 || v17 != 0 || v15 > 0x18)
  {
    v20 = *a2;
    *a1 = v20;
    v42 = (_QWORD *)(v20 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
  }
  else
  {
    v64 = v13 + 7;
    v65 = a1;
    v21 = ~v11;
    v60 = AssociatedTypeWitness;
    v62 = v13 + ((v14 + ((v14 + ((v11 + 48) & ~v11)) & ~v11)) & ~v11) + 1;
    v63 = v11 + 24;
    v58 = *(_QWORD *)(AssociatedTypeWitness - 8);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v6 + 16))(v65, a2, v5);
    v22 = (_QWORD *)(((unint64_t)v65 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    *v22 = *v23;
    v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v24 = *v25;
    v59 = ((unint64_t)v24 + v12 + 8) & ~v12;
    v61 = ((unint64_t)v25 + v12 + 8) & ~v12;
    *(_QWORD *)v59 = *(_QWORD *)v61;
    v26 = (_QWORD *)((v59 + 15) & 0xFFFFFFFFFFFFF8);
    v27 = (_QWORD *)((v61 + 15) & 0xFFFFFFFFFFFFF8);
    *v26 = *v27;
    v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    v29 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
    *(_BYTE *)(v28 + 16) = *(_BYTE *)(v29 + 16);
    *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
    v30 = v11 + 32;
    v31 = (v11 + 32 + v28) & ~v11;
    v32 = (v30 + v29) & v21;
    v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v58 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v33(v31, v32, v60);
    v33((v14 + v31) & v21, (v14 + v32) & v21, v60);
    v34 = (v14 + ((v14 + v32) & v21)) & v21;
    v33((v14 + ((v14 + v31) & v21)) & v21, v34, v60);
    *(_BYTE *)(((v14 + ((v14 + v31) & v21)) & v21) + v13) = *(_BYTE *)(v34 + v13);
    v35 = ((v59 | 7) + v62) & 0xFFFFFFFFFFFFFFF8;
    v36 = ((v61 | 7) + v62) & 0xFFFFFFFFFFFFFFF8;
    v37 = *(_OWORD *)v36;
    *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
    *(_OWORD *)v35 = v37;
    v38 = (v63 + v35) & v21;
    v39 = (v63 + v36) & v21;
    v33(v38, v39, v60);
    v40 = (v14 + v38) & v21;
    v41 = (v14 + v39) & v21;
    v42 = v65;
    v33(v40, v41, v60);
    v43 = (v64 + v40) & 0xFFFFFFFFFFFFFFF8;
    v44 = (v64 + v41) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *(_QWORD *)(v43 + 8) = *(_QWORD *)(v44 + 8);
    *(_BYTE *)(v43 + 16) = *(_BYTE *)(v44 + 16);
    *(_QWORD *)(v43 + 24) = *(_QWORD *)(v44 + 24);
    v45 = (v43 + 39) & 0xFFFFFFFFFFFFFFF8;
    v46 = (v44 + 39) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *(_QWORD *)(v45 + 8) = *(_QWORD *)(v46 + 8);
    *(_BYTE *)(v45 + 16) = *(_BYTE *)(v46 + 16);
    *(_QWORD *)(v45 + 24) = *(_QWORD *)(v46 + 24);
    v47 = (_QWORD *)((v45 + 39) & 0xFFFFFFFFFFFFF8);
    v48 = (_QWORD *)((v46 + 39) & 0xFFFFFFFFFFFFF8);
    *v47 = *v48;
    v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFF8);
    v50 = (_QWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFF8);
    *v49 = *v50;
    v51 = (_QWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFF8);
    v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8);
    *v51 = *v52;
    v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
    v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8);
    *v53 = *v54;
    v55 = ((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8;
    v56 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *(_BYTE *)(v55 + 8) = *(_BYTE *)(v56 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v42;
}

uint64_t sub_22AAC5A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(a1, *(_QWORD *)(a2 + 16));
  v4 = ((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((v4 & 0xFFFFFFFFFFFFFFF8) + (v7 | 7) + 8) & ~(v7 | 7);
  swift_release();
  swift_release();
  swift_release();
  v9 = (v7 + ((((v8 + 15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 32) & ~v7;
  v10 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v10(v9, AssociatedTypeWitness);
  v11 = *(_QWORD *)(v6 + 64);
  v12 = v11 + v7;
  v13 = (v11 + v7 + v9) & ~v7;
  v10(v13, AssociatedTypeWitness);
  v10((v11 + v7 + v13) & ~v7, AssociatedTypeWitness);
  v10((v7 + ((v8 + v11 + ((v12 + ((v12 + ((v7 + 48) & ~v7)) & ~v7)) & ~v7) + 8) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v7, AssociatedTypeWitness);
  v10((v12+ ((v7 + ((v8 + v11 + ((v12 + ((v12 + ((v7 + 48) & ~v7)) & ~v7)) & ~v7) + 8) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v7)) & ~v7, AssociatedTypeWitness);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_22AAC5C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v48;
  _QWORD *v49;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  LODWORD(a2) = *(_DWORD *)(v12 + 80);
  v13 = a2;
  v14 = a2 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v48 = (_QWORD *)(((unint64_t)v9 + a2 + 8) & v14);
  v49 = (_QWORD *)(((unint64_t)v10 + a2 + 8) & v14);
  *v48 = *v49;
  v15 = (_QWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_BYTE *)(v17 + 16) = *(_BYTE *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
  v19 = (v13 + 32 + v17) & ~v13;
  v20 = (v13 + 32 + v18) & ~v13;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v21(v19, v20, AssociatedTypeWitness);
  v22 = *(_QWORD *)(v12 + 64);
  v23 = v22 + a2;
  v21((v23 + v19) & ~v13, (v23 + v20) & ~v13, AssociatedTypeWitness);
  v24 = (v23 + ((v23 + v20) & ~v13)) & ~v13;
  v21((v23 + ((v23 + v19) & ~v13)) & ~v13, v24, AssociatedTypeWitness);
  *(_BYTE *)(((v23 + ((v23 + v19) & ~(unint64_t)a2)) & ~(unint64_t)a2)
           + v22) = *(_BYTE *)(v24 + v22);
  v25 = v22 + ((v23 + ((v23 + ((v13 + 48) & ~v13)) & ~v13)) & ~v13) + 8;
  v26 = ((unint64_t)v48 + v25) & 0xFFFFFFFFFFFFFFF8;
  v27 = ((unint64_t)v49 + v25) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_OWORD *)v27;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  *(_OWORD *)v26 = v28;
  v29 = (v13 + 24 + v26) & ~v13;
  v30 = (v13 + 24 + v27) & ~v13;
  v21(v29, v30, AssociatedTypeWitness);
  v31 = (v23 + v29) & ~v13;
  v32 = (v23 + v30) & ~v13;
  v21(v31, v32, AssociatedTypeWitness);
  v33 = (v22 + 7 + v31) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v22 + 7 + v32) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
  v35 = (v33 + 39) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v34 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
  *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
  *(_QWORD *)(v35 + 24) = *(_QWORD *)(v36 + 24);
  v37 = (_QWORD *)((v35 + 39) & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)((v36 + 39) & 0xFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFF8);
  *v39 = *v40;
  v41 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFF8);
  v42 = (_QWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFF8);
  *v41 = *v42;
  v43 = (_QWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFF8);
  v44 = (_QWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFF8);
  *v43 = *v44;
  v45 = ((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  v46 = ((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_BYTE *)(v45 + 8) = *(_BYTE *)(v46 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22AAC5F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 24))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v7 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  *v10 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v14;
  v16 = v14 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v17 = (_QWORD *)(((unint64_t)v10 + v14 + 8) & v16);
  v18 = (_QWORD *)((v14 + 8 + v11) & v16);
  *v17 = *v18;
  swift_retain();
  swift_release();
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  *v19 = *v20;
  swift_retain();
  swift_release();
  v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
  swift_retain();
  swift_release();
  v23 = (v15 + 32 + v21) & ~v15;
  v24 = (v15 + 32 + v22) & ~v15;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24);
  v25(v23, v24, AssociatedTypeWitness);
  v26 = *(_QWORD *)(v13 + 64);
  v27 = v26 + v14;
  v28 = (v27 + v23) & ~v15;
  v29 = (v27 + v24) & ~v15;
  v25(v28, v29, AssociatedTypeWitness);
  v30 = (v27 + v28) & ~v15;
  v31 = (v27 + v29) & ~v15;
  v25(v30, v31, AssociatedTypeWitness);
  *(_BYTE *)(v30 + v26) = *(_BYTE *)(v31 + v26);
  v32 = v26 + ((v27 + ((v27 + ((v15 + 48) & ~v15)) & ~v15)) & ~v15) + 8;
  v33 = (_QWORD *)(((unint64_t)v17 + v32) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)(((unint64_t)v18 + v32) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  v35 = ((unint64_t)v33 + v15 + 24) & ~v15;
  v36 = ((unint64_t)v34 + v15 + 24) & ~v15;
  v25(v35, v36, AssociatedTypeWitness);
  v37 = (v27 + v35) & ~v15;
  v38 = (v27 + v36) & ~v15;
  v25(v37, v38, AssociatedTypeWitness);
  v39 = (v26 + 7 + v37) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v26 + 7 + v38) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
  *(_QWORD *)(v39 + 24) = *(_QWORD *)(v40 + 24);
  swift_retain();
  swift_release();
  v41 = (v39 + 39) & 0xFFFFFFFFFFFFFFF8;
  v42 = (v40 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
  *(_BYTE *)(v41 + 16) = *(_BYTE *)(v42 + 16);
  *(_QWORD *)(v41 + 24) = *(_QWORD *)(v42 + 24);
  swift_retain();
  swift_release();
  v43 = (_QWORD *)((v41 + 39) & 0xFFFFFFFFFFFFFFF8);
  v44 = (_QWORD *)((v42 + 39) & 0xFFFFFFFFFFFFF8);
  *v43 = *v44;
  swift_retain();
  swift_release();
  v45 = (_QWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  v46 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFF8);
  *v45 = *v46;
  swift_retain();
  swift_release();
  v47 = (_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  v48 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFF8);
  *v47 = *v48;
  swift_retain();
  swift_release();
  v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  v50 = (_QWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFF8);
  *v49 = *v50;
  swift_retain();
  swift_release();
  v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  v52 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  swift_retain();
  swift_release();
  *(_BYTE *)(v51 + 8) = *(_BYTE *)(v52 + 8);
  return a1;
}

uint64_t sub_22AAC62FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  _OWORD *v41;
  __int128 v42;
  _OWORD *v43;
  _OWORD *v44;
  __int128 v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13;
  v15 = v13 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v17 = (_QWORD *)(((unint64_t)v10 + v13 + 8) & v15);
  v16 = (_QWORD *)(((unint64_t)v9 + v13 + 8) & v15);
  *v16 = *v17;
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_OWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_OWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = ((unint64_t)v20 + v14 + 32) & ~v14;
  v24 = ((unint64_t)v21 + v14 + 32) & ~v14;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  v25(v23, v24, AssociatedTypeWitness);
  v26 = *(_QWORD *)(v12 + 64);
  v27 = v26 + v13;
  v28 = (v27 + v23) & ~v14;
  v29 = (v27 + v24) & ~v14;
  v25(v28, v29, AssociatedTypeWitness);
  v30 = (v27 + v28) & ~v14;
  v31 = (v27 + v29) & ~v14;
  v25(v30, v31, AssociatedTypeWitness);
  *(_BYTE *)(v30 + v26) = *(_BYTE *)(v31 + v26);
  v32 = v26 + ((v27 + ((v27 + ((v14 + 48) & ~v14)) & ~v14)) & ~v14) + 8;
  v33 = ((unint64_t)v16 + v32) & 0xFFFFFFFFFFFFFFF8;
  v34 = ((unint64_t)v17 + v32) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_OWORD *)v34;
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  *(_OWORD *)v33 = v35;
  v36 = (v14 + 24 + v33) & ~v14;
  v37 = (v14 + 24 + v34) & ~v14;
  v25(v36, v37, AssociatedTypeWitness);
  v38 = (v27 + v36) & ~v14;
  v39 = (v27 + v37) & ~v14;
  v25(v38, v39, AssociatedTypeWitness);
  v40 = (_OWORD *)((v26 + 7 + v38) & 0xFFFFFFFFFFFFFFF8);
  v41 = (_OWORD *)((v26 + 7 + v39) & 0xFFFFFFFFFFFFFFF8);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = (_OWORD *)(((unint64_t)v40 + 39) & 0xFFFFFFFFFFFFFFF8);
  v44 = (_OWORD *)(((unint64_t)v41 + 39) & 0xFFFFFFFFFFFFFFF8);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = (_QWORD *)(((unint64_t)v43 + 39) & 0xFFFFFFFFFFFFF8);
  v47 = (_QWORD *)(((unint64_t)v44 + 39) & 0xFFFFFFFFFFFFF8);
  *v46 = *v47;
  v48 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFF8);
  v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFF8);
  *v48 = *v49;
  v50 = (_QWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFF8);
  v51 = (_QWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFF8);
  *v50 = *v51;
  v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
  *v52 = *v53;
  v54 = ((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  v55 = ((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
  return a1;
}

uint64_t sub_22AAC6594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 40))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v13;
  v15 = v13 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v16 = (_QWORD *)(((unint64_t)v9 + v13 + 8) & v15);
  v17 = (_QWORD *)(((unint64_t)v10 + v13 + 8) & v15);
  *v16 = *v17;
  swift_release();
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  swift_release();
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  *(_QWORD *)(v20 + 24) = *(_QWORD *)(v21 + 24);
  swift_release();
  v22 = (v14 + 32 + v20) & ~v14;
  v23 = (v14 + 32 + v21) & ~v14;
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
  v24(v22, v23, AssociatedTypeWitness);
  v25 = *(_QWORD *)(v12 + 64);
  v26 = v25 + v13;
  v27 = (v26 + v22) & ~v14;
  v28 = (v26 + v23) & ~v14;
  v24(v27, v28, AssociatedTypeWitness);
  v29 = (v26 + v27) & ~v14;
  v30 = (v26 + v28) & ~v14;
  v24(v29, v30, AssociatedTypeWitness);
  *(_BYTE *)(v29 + v25) = *(_BYTE *)(v30 + v25);
  v31 = v25 + ((v26 + ((v26 + ((v14 + 48) & ~v14)) & ~v14)) & ~v14) + 8;
  v32 = (_QWORD *)(((unint64_t)v16 + v31) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)(((unint64_t)v17 + v31) & 0xFFFFFFFFFFFFFFF8);
  *v32 = *v33;
  v32[1] = v33[1];
  v32[2] = v33[2];
  v34 = ((unint64_t)v32 + v14 + 24) & ~v14;
  v35 = ((unint64_t)v33 + v14 + 24) & ~v14;
  v24(v34, v35, AssociatedTypeWitness);
  v36 = (v26 + v34) & ~v14;
  v37 = (v26 + v35) & ~v14;
  v24(v36, v37, AssociatedTypeWitness);
  v38 = (v25 + 7 + v36) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v25 + 7 + v37) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(v39 + 8);
  *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
  *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
  swift_release();
  v40 = (v38 + 39) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v39 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(v41 + 8);
  *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
  *(_QWORD *)(v40 + 24) = *(_QWORD *)(v41 + 24);
  swift_release();
  v42 = (_QWORD *)((v40 + 39) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)((v41 + 39) & 0xFFFFFFFFFFFFF8);
  *v42 = *v43;
  swift_release();
  v44 = (_QWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  v45 = (_QWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFF8);
  *v44 = *v45;
  swift_release();
  v46 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  v47 = (_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFF8);
  *v46 = *v47;
  swift_release();
  v48 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFF8);
  *v48 = *v49;
  swift_release();
  v50 = ((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8;
  v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v50 = *(_QWORD *)v51;
  swift_release();
  *(_BYTE *)(v50 + 8) = *(_BYTE *)(v51 + 8);
  return a1;
}

uint64_t sub_22AAC68D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v7 <= v11)
    v12 = v11;
  else
    v12 = v7;
  if (v12 <= v10)
    v12 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v13 = *(_QWORD *)(v6 + 64);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = v14 | 7;
  v16 = *(_QWORD *)(v9 + 64);
  v17 = v16 + ((v16 + v14 + ((v16 + v14 + ((v14 + 48) & ~v14)) & ~v14)) & ~v14) + 1;
  v18 = v14 + 24;
  if (v12 < a2)
  {
    v19 = ((((((((((((((v16
                      + ((v16
                        + v14
                        + ((v18
                          + ((v17 + ((v14 + ((((v13 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 8) & ~(_DWORD)v15) + 7) & 0xFFFFFFF8)) & ~(_DWORD)v14)) & ~(_DWORD)v14)
                      + 7) & 0xFFFFFFF8)
                    + 39) & 0xFFFFFFF8)
                  + 39) & 0xFFFFFFF8)
                + 15) & 0xFFFFFFF8)
              + 15) & 0xFFFFFFF8)
            + 15) & 0xFFFFFFF8)
          + 15) & 0xFFFFFFF8)
        + 9;
    if (v19 < 4)
      v20 = ((a2 - v12 + 255) >> (8 * v19)) + 1;
    else
      v20 = 2;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v22 = v21;
    else
      v22 = 0;
    __asm { BR              X3 }
  }
  if ((_DWORD)v7 == v12)
    return __swift_getEnumTagSinglePayload(a1, v7, v5);
  v24 = (uint64_t *)((a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  if ((v12 & 0x80000000) != 0)
  {
    v26 = ((((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8) + v15 + 8) & ~v15;
    if (v11 == v12)
      v27 = v14 + ((((v26 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 32;
    else
      v27 = v18 + (((v26 | 7) + v17) & 0xFFFFFFFFFFFFFFF8);
    return __swift_getEnumTagSinglePayload(v27 & ~v14, v10, AssociatedTypeWitness);
  }
  else
  {
    v25 = *v24;
    if ((unint64_t)*v24 >= 0xFFFFFFFF)
      LODWORD(v25) = -1;
    return (v25 + 1);
  }
}

void sub_22AAC6B60(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  unsigned int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v8 <= v11)
    v12 = v11;
  else
    v12 = v8;
  if (v12 <= v10)
    v13 = *(_DWORD *)(v9 + 84);
  else
    v13 = v12;
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = *(_QWORD *)(v9 + 64);
  v16 = ((((((((((((((v15
                    + ((v15
                      + v14
                      + ((v14
                        + 24
                        + ((v15
                          + ((v15 + v14 + ((v15 + v14 + ((v14 + 48) & ~v14)) & ~v14)) & ~v14)
                          + 1
                          + ((v14
                            + ((((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                            + 8) & ~(v14 | 7))
                          + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & ~v14)
                    + 7) & 0xFFFFFFFFFFFFFFF8)
                  + 39) & 0xFFFFFFFFFFFFFFF8)
                + 39) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v13 >= a3)
  {
    v19 = 0;
  }
  else
  {
    if (v16 <= 3)
      v17 = ((a3 - v13 + 255) >> (8 * v16)) + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
  }
  if (v13 < a2)
  {
    v20 = ~v13 + a2;
    v21 = (~(_BYTE)v13 + a2);
    if (v16 >= 4)
      v22 = v20;
    else
      v22 = v21;
    bzero(a1, v16);
    if ((_DWORD)v16 == 1)
      *a1 = v22;
    else
      *(_DWORD *)a1 = v22;
    __asm { BR              X10 }
  }
  __asm { BR              X1 }
}

void sub_22AAC6D5C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x22AAC6E00);
}

void sub_22AAC6D64()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x22AAC6D6CLL);
  JUMPOUT(0x22AAC6E00);
}

void sub_22AAC6DA4()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x22AAC6E00);
}

void sub_22AAC6DAC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x22AAC6E00);
}

void sub_22AAC6DB4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_WORD *)(v2 + v4) = 0;
  if (v1)
  {
    if (v3 != v0)
    {
      if ((v0 & 0x80000000) == 0)
      {
        if ((v1 & 0x80000000) == 0)
          JUMPOUT(0x22AAC6DFCLL);
        JUMPOUT(0x22AAC6DF8);
      }
      JUMPOUT(0x22AAC6DC0);
    }
    JUMPOUT(0x22AAC6E2CLL);
  }
  JUMPOUT(0x22AAC6E00);
}

uint64_t type metadata accessor for LBFGSOptimizer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LBFGSOptimizer);
}

uint64_t sub_22AAC6E50()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_22AAC6E6C()
{
  uint64_t v0;
  void (*v1)(char *, uint64_t);
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int *v45;
  _QWORD v46[4];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  int *v59;
  uint64_t AssociatedConformanceWitness;
  uint64_t v61;

  OUTLINED_FUNCTION_12();
  v56 = v2;
  v57 = v1;
  v61 = v0;
  v4 = v3;
  v55 = v5;
  v6 = *(_QWORD *)(v3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v58 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_87();
  v48 = v9;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_12_0();
  v47 = v11;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_12_0();
  v49 = v13;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v14);
  v50 = (char *)v46 - v15;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_12_0();
  v51 = v17;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v46 - v19;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v21 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  v22 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_87();
  v46[2] = v24;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v46 - v26;
  OUTLINED_FUNCTION_14_9();
  v54 = sub_22ABE02C8();
  MEMORY[0x24BDAC7A8](v54);
  v53 = (char *)v46 - v28;
  v52 = OUTLINED_FUNCTION_20_43(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32));
  v59 = (int *)v4;
  sub_22AAC7310(v4);
  v29 = (uint64_t *)(v0 + *(int *)(v4 + 44));
  v30 = OUTLINED_FUNCTION_14_9();
  v31 = AssociatedConformanceWitness;
  v46[0] = type metadata accessor for OptimizerState(v30, v32, AssociatedConformanceWitness, v33);
  v34 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 24))((char *)v29 + *(int *)(v46[0] + 52), v55, AssociatedTypeWitness);
  v35 = DenseVector.init(scalars:)(v56, AssociatedTypeWitness, v31);
  swift_retain();
  swift_release();
  *v29 = v35;
  swift_getAssociatedConformanceWitness();
  v46[3] = v22;
  sub_22ABE0130();
  v46[1] = v27;
  v55 = v21;
  sub_22ABDFF20();
  sub_22ABDF86C();
  v36 = *(void (**)(char *, uint64_t))(v34 + 8);
  v56 = v20;
  v36(v20, AssociatedTypeWitness);
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE49B0], v54);
  DenseVector.init<A>(scalars:)();
  v38 = v37;
  swift_release();
  v29[1] = v38;
  v39 = v57;
  sub_22AAC7910((uint64_t)v59);
  if (!v39)
  {
    v54 = 0;
    DenseVector.maximumAbsoluteValue.getter();
    sub_22ABE0130();
    sub_22ABDFF20();
    sub_22ABE0130();
    v57 = v36;
    v40 = v48;
    sub_22ABDFF20();
    v41 = v47;
    OUTLINED_FUNCTION_17_45();
    v57((char *)v40, AssociatedTypeWitness);
    sub_22ABE0154();
    v42 = v49;
    OUTLINED_FUNCTION_17_45();
    OUTLINED_FUNCTION_9_57(v40);
    OUTLINED_FUNCTION_9_57(v41);
    v43 = v56;
    v44 = (uint64_t)v50;
    OUTLINED_FUNCTION_18_51();
    sub_22ABDEB88();
    OUTLINED_FUNCTION_9_57(v42);
    OUTLINED_FUNCTION_9_57(v44);
    v45 = v59;
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 40))(v61 + v59[14], v43, AssociatedTypeWitness);
    sub_22AAC7A30(v45);
    sub_22AAC7D00((uint64_t)v45);
    OUTLINED_FUNCTION_9_57(v51);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAC7310(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t (*v14)(uint64_t, uint64_t, double);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50[2];
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v57 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  v62 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v62);
  v60 = (char *)v50 - v7;
  v61 = sub_22ABE02C8();
  MEMORY[0x24BDAC7A8](v61);
  v55 = (char *)v50 - v8;
  v59 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v50 - v10;
  v58 = AssociatedConformanceWitness;
  v12 = swift_getAssociatedTypeWitness();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, double))(v2 + 32);
  v52 = v1;
  v15 = v14(v3, v2, v13);
  v56 = v15;
  v16 = a1;
  v54 = (int *)a1;
  v17 = *(int *)(a1 + 40);
  v50[0] = *(_QWORD *)(v1 + v17);
  v18 = v50[0];
  v50[1] = v17;
  v53 = swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  v51 = v11;
  sub_22ABDFF20();
  DenseMatrix.init(rowCount:columnCount:layout:repeating:)(v15, v18, 1, (uint64_t)v11, AssociatedTypeWitness);
  v19 = v63;
  v20 = v64;
  LOBYTE(v15) = v65;
  v21 = v66;
  v22 = v52;
  v23 = v52 + *(int *)(v16 + 60);
  swift_release();
  *(_QWORD *)v23 = v19;
  *(_QWORD *)(v23 + 8) = v20;
  *(_BYTE *)(v23 + 16) = v15;
  *(_QWORD *)(v23 + 24) = v21;
  sub_22ABE013C();
  v24 = (uint64_t)v51;
  sub_22ABDFF20();
  DenseMatrix.init(rowCount:columnCount:layout:repeating:)(v56, v50[0], 1, v24, AssociatedTypeWitness);
  v25 = v63;
  v26 = v64;
  v27 = v65;
  v28 = v66;
  v29 = v22 + v54[16];
  swift_release();
  *(_QWORD *)v29 = v25;
  *(_QWORD *)(v29 + 8) = v26;
  *(_BYTE *)(v29 + 16) = v27;
  *(_QWORD *)(v29 + 24) = v28;
  v53 = swift_getAssociatedConformanceWitness();
  sub_22ABE0130();
  v30 = v51;
  sub_22ABDFF20();
  sub_22ABDF86C();
  v59 = *(_QWORD *)(v59 + 8);
  ((void (*)(char *, uint64_t))v59)(v30, AssociatedTypeWitness);
  v50[0] = MEMORY[0x22E2E4D80](MEMORY[0x24BEE49B0], v61);
  DenseVector.init<A>(scalars:)();
  v32 = v31;
  v33 = v54;
  v34 = v54[17];
  v35 = v52;
  swift_release();
  *(_QWORD *)(v35 + v34) = v32;
  sub_22ABE0130();
  sub_22ABDFF20();
  sub_22ABDF86C();
  ((void (*)(char *, uint64_t))v59)(v30, AssociatedTypeWitness);
  DenseVector.init<A>(scalars:)();
  v37 = v36;
  v38 = v33[18];
  swift_release();
  *(_QWORD *)(v35 + v38) = v37;
  sub_22ABE0130();
  sub_22ABDFF20();
  sub_22ABDF86C();
  ((void (*)(char *, uint64_t))v59)(v30, AssociatedTypeWitness);
  DenseVector.init<A>(scalars:)();
  v40 = v39;
  v41 = v33[19];
  swift_release();
  *(_QWORD *)(v35 + v41) = v40;
  v63 = sub_22ABDF068();
  v42 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v42);
  DenseVector.init<A>(scalars:)();
  v44 = v43;
  v45 = v33[20];
  swift_release();
  *(_QWORD *)(v35 + v45) = v44;
  sub_22ABE0130();
  sub_22ABDFF20();
  sub_22ABDF86C();
  ((void (*)(char *, uint64_t))v59)(v30, AssociatedTypeWitness);
  DenseVector.init<A>(scalars:)();
  v47 = v46;
  v48 = v33[21];
  result = swift_release();
  *(_QWORD *)(v35 + v48) = v47;
  *(_BYTE *)(v35 + v33[22]) = 0;
  return result;
}

uint64_t sub_22AAC7910(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;

  result = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(a1 + 24) + 48))(v1 + *(int *)(a1 + 44), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  v4 = v1 + *(int *)(a1 + 48);
  v5 = *(_QWORD *)(v4 + 8);
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(v4 + 8) = v7;
  v8 = *(_QWORD *)(v4 + 16);
  v6 = __OFADD__(v8, 1);
  v9 = v8 + 1;
  if (v6)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v4 + 16) = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for OptimizerState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  result = sub_22ABDEBC4();
  if ((result & 1) == 0)
  {
    sub_22AACB4A0();
    v13 = swift_allocError();
    *v14 = 0;
    return swift_willThrow(v13);
  }
  return result;
}

uint64_t sub_22AAC7A30(int *a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v32 - v13;
  v15 = *(_QWORD *)(v1 + a1[9]);
  v16 = a1[11];
  v39 = v1;
  v17 = (uint64_t *)(v1 + v16);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_22AAC51D4(v17, v15, AssociatedTypeWitness, AssociatedConformanceWitness);
  v37 = v15;
  swift_release();
  result = DenseVector.count.getter();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v20 = result;
    v33 = v17;
    v34 = v11;
    v35 = v8;
    v36 = v4;
    if (result)
    {
      v21 = 0;
      do
      {
        DenseVector.subscript.getter(v21, v17[1], AssociatedTypeWitness, AssociatedConformanceWitness);
        sub_22ABDF314();
        v23 = type metadata accessor for DenseVector(0, AssociatedTypeWitness, AssociatedConformanceWitness, v22);
        DenseVector.subscript.setter((uint64_t)v14, v21++, v23);
      }
      while (v20 != v21);
    }
    v24 = v36;
    v25 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v34, v39 + a1[14], AssociatedTypeWitness);
    v27 = type metadata accessor for OptimizerState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v26);
    v28 = (char *)v33 + *(int *)(v27 + 48);
    v29 = v38;
    sub_22AAC4F74(*v33, v37, AssociatedTypeWitness, v38);
    v30 = v35;
    sub_22ABDFAE8();
    v31 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v31(v29, AssociatedTypeWitness);
    sub_22ABDF308();
    v31((uint64_t)v30, AssociatedTypeWitness);
    v31((uint64_t)v25, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 40))(v28, v14, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_22AAC7D00(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - v8;
  v17 = v1 + *(int *)(a1 + 44);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  DenseVector.maximumAbsoluteValue.getter();
  sub_22ABDEB88();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  v12 = type metadata accessor for OptimizerState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v17 + *(int *)(v12 + 44), v9, AssociatedTypeWitness);
  result = sub_22ABDEBC4();
  if ((result & 1) == 0)
  {
    sub_22AACB4A0();
    v14 = swift_allocError();
    *v15 = 1;
    return swift_willThrow(v14);
  }
  return result;
}

void sub_22AAC7EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_12();
  v41 = v1;
  v3 = *(_QWORD *)(v2 + 24);
  v4 = v2;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_18_51();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v34 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_87();
  v35 = v7;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v32 - v9;
  OUTLINED_FUNCTION_14_9();
  v10 = swift_checkMetadataState();
  v43 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_23_8();
  v14 = v12 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v33 = (char *)&v32 - v16;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_12_0();
  v38 = v18;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_12_0();
  v42 = v20;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_12_0();
  v39 = v22;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v23);
  v40 = (uint64_t)&v32 - v24;
  OUTLINED_FUNCTION_20_43(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32));
  v36 = v0;
  v37 = v4;
  v25 = v0 + *(int *)(v4 + 44);
  v27 = type metadata accessor for OptimizerState(0, v10, AssociatedConformanceWitness, v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v41, v27);
  sub_22AAC7310(v4);
  DenseVector.maximumAbsoluteValue.getter();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_8_56();
  OUTLINED_FUNCTION_7_69();
  OUTLINED_FUNCTION_8_56();
  OUTLINED_FUNCTION_7_69();
  v28 = (uint64_t)v33;
  OUTLINED_FUNCTION_22_43();
  OUTLINED_FUNCTION_6_79(v14);
  sub_22ABE0154();
  v29 = v38;
  OUTLINED_FUNCTION_22_43();
  OUTLINED_FUNCTION_6_79(v14);
  OUTLINED_FUNCTION_6_79(v28);
  v30 = v39;
  v31 = v42;
  sub_22ABDEB88();
  OUTLINED_FUNCTION_6_79(v29);
  OUTLINED_FUNCTION_6_79(v31);
  OUTLINED_FUNCTION_6_79(v40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 40))(v36 + *(int *)(v37 + 56), v30, v10);
  OUTLINED_FUNCTION_16();
}

void sub_22AAC81C0(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v4 = a1[12];
  if (!*(_QWORD *)(v1 + v4))
    sub_22AAC8224();
  sub_22AAC8424(a1);
  if (!v2)
  {
    sub_22AAC7D00((uint64_t)a1);
    v5 = *(_QWORD *)(v1 + v4);
    v6 = __OFADD__(v5, 1);
    v7 = v5 + 1;
    if (v6)
      __break(1u);
    else
      *(_QWORD *)(v1 + v4) = v7;
  }
}

void sub_22AAC8224()
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  static DenseVector.- prefix(_:)();
  sub_22AAC8574();
}

uint64_t sub_22AAC82F8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = swift_release();
  if (!v1)
  {
    *(_QWORD *)(v7 - 72) = type metadata accessor for OptimizerState(0, v3, v5, v9);
    sub_22ABDF854();
    static DenseVector.* infix(_:_:)();
    v11 = v10;
    v12 = *(_QWORD *)(v7 - 88);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v6, v3);
    v13 = v2[20];
    swift_release();
    *(_QWORD *)(v0 + v13) = v11;
    swift_retain();
    static DenseVector.+= infix(_:_:)(v4, v11, v3, v5);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v0 + v2[13], v4 + *(int *)(*(_QWORD *)(v7 - 72) + 48), v3);
    v14 = *(_QWORD *)(v4 + 8);
    v15 = v2[21];
    swift_retain();
    swift_release();
    *(_QWORD *)(v0 + v15) = v14;
    sub_22AAC7910((uint64_t)v2);
    return sub_22AAC7A30(v2);
  }
  return result;
}

void sub_22AAC8424(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  sub_22AAC88CC();
  if (!v2)
  {
    sub_22AAC9000((uint64_t)a1, v4, v5, v6, v7, v8, v9, v10, v20, v21, SWORD2(v21), SBYTE6(v21), SHIBYTE(v21));
    v11 = v1 + a1[11];
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v15 = type metadata accessor for OptimizerState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(v1 + a1[13], v11 + *(int *)(v15 + 48), AssociatedTypeWitness);
    v16 = *(_QWORD *)(v11 + 8);
    v17 = a1[21];
    swift_retain();
    swift_release();
    v18 = 0;
    *(_QWORD *)(v1 + v17) = v16;
    *(_BYTE *)(v1 + a1[22]) = 0;
    while (1)
    {
      sub_22AAC7910((uint64_t)a1);
      sub_22AAC7A30(a1);
      v19 = sub_22AAC9234(v18, a1);
      if (__OFADD__(v18, 1))
        break;
      ++v18;
      if ((v19 & 1) == 0)
        return;
    }
    __break(1u);
  }
}

void sub_22AAC8574()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for LineSearch.LineSearchResult();
}

void sub_22AAC8608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *);

  *(_QWORD *)(v14 - 128) = a1;
  *(_QWORD *)(v14 - 208) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 72) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v14 - 160) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&a9 - v18;
  v20 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v14 - 184) = v23;
  v25 = type metadata accessor for LineSearch(0, v12, v9, v24);
  *(_QWORD *)(v14 - 152) = v25;
  *(_QWORD *)(v14 - 216) = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16))(v23, v10, v12, v26);
  v27 = *(_QWORD *)(v14 - 120);
  v28 = *(int *)(v27 + 36);
  *(_QWORD *)(v14 - 176) = v10;
  *(_QWORD *)(v14 - 192) = *(_QWORD *)(v10 + v28);
  v29 = v10 + *(int *)(v27 + 44);
  v31 = type metadata accessor for OptimizerState(0, v11, v13, v30);
  *(_QWORD *)(v14 - 168) = v29 + *(int *)(v31 + 52);
  v32 = *(void (**)(char *))(*(_QWORD *)(v14 - 72) + 16);
  v32(v19);
  *(_QWORD *)(v14 - 224) = v31;
  ((void (*)(_QWORD, uint64_t, uint64_t))v32)(*(_QWORD *)(v14 - 160), v29 + *(int *)(v31 + 48), v11);
  *(_QWORD *)(v14 - 232) = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22AACC1FC();
}

#error "22AAC8810: call analysis failed (funcsize=14)"

uint64_t sub_22AAC8814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  result = v2(*(_QWORD *)(v7 - 168), v5, v6);
  v9 = *(int **)(v7 - 128);
  v10 = *(_QWORD *)(v5 + v9[14]);
  v11 = v0 + *(int *)(v3 + 48);
  v12 = *(_QWORD *)(v11 + 8);
  v13 = __OFADD__(v12, v10);
  v14 = v12 + v10;
  if (v13)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(v11 + 8) = v14;
  v15 = *(_QWORD *)(v5 + v9[15]);
  v16 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v16, v15);
  v17 = v16 + v15;
  if (v13)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v11 + 16) = v17;
  v18 = *(_BYTE *)(v5 + v9[13]);
  (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 208) + 8))(v5);
  if ((v18 & 1) == 0)
    *(_BYTE *)(*(_QWORD *)(v7 - 232) + *(int *)(*(_QWORD *)(v7 - 224) + 56)) = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 216) + 8))(v1, v4);
}

void sub_22AAC88CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD, _QWORD);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(void);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  unint64_t v78;
  uint64_t *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;

  OUTLINED_FUNCTION_12();
  v83 = v1;
  v3 = (int *)v2;
  v5 = *(_QWORD **)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_16_48();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_23_8();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v86 = (char *)&v71 - v14;
  v15 = swift_checkMetadataState();
  v84 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_23_8();
  MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_12_0();
  v85 = v19;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v90 = (char *)&v71 - v26;
  v27 = *(_QWORD *)(v0 + v3[12]);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
    goto LABEL_13;
  }
  v30 = *(_QWORD *)(v0 + v3[10]);
  if (!v30)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  if (v29 == 0x8000000000000000 && v30 == -1)
    goto LABEL_14;
  v72 = v25;
  v73 = v24;
  v74 = v12;
  v87 = v23;
  v79 = &v71;
  v32 = v29 % v30;
  MEMORY[0x24BDAC7A8](v22);
  v92 = v0;
  v88 = AssociatedTypeWitness;
  v89 = v7;
  *(&v71 - 4) = (uint64_t)v5;
  *(&v71 - 3) = v4;
  *(&v71 - 2) = v0;
  v34 = type metadata accessor for DenseMatrix(0, v15, AssociatedConformanceWitness, v33);
  v91 = AssociatedConformanceWitness;
  v35 = v4;
  v36 = v34;
  v82 = MEMORY[0x24BEE4AE0] + 8;
  v37 = v83;
  v38 = sub_22A9F3874(v32, (uint64_t (*)(uint64_t))sub_22AACB540, (uint64_t)(&v71 - 6), v34);
  MEMORY[0x24BDAC7A8](v38);
  v80 = v5;
  v81 = v35;
  *(&v71 - 4) = (uint64_t)v5;
  *(&v71 - 3) = v35;
  *(&v71 - 2) = v0;
  v78 = v32;
  v39 = sub_22A9F3874(v32, (uint64_t (*)(uint64_t))sub_22AACB55C, (uint64_t)(&v71 - 6), v36);
  v75 = v3[20];
  MEMORY[0x24BDAC7A8](v39);
  *(&v71 - 4) = (uint64_t)v5;
  *(&v71 - 3) = v35;
  *(&v71 - 2) = v0;
  *(&v71 - 1) = v32;
  OUTLINED_FUNCTION_9_3();
  v40 = v91;
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  v79 = v37;
  OUTLINED_FUNCTION_13_4();
  v76 = swift_getAssociatedConformanceWitness();
  sub_22ABE0130();
  v41 = v85;
  OUTLINED_FUNCTION_14_52();
  v42 = v0;
  sub_22ABDFF20();
  v43 = v87;
  OUTLINED_FUNCTION_16_48();
  v83 = v44;
  sub_22ABDEB88();
  v77 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  v77(v41, v15);
  v46 = type metadata accessor for DenseVector(0, v15, v40, v45);
  v47 = v78;
  DenseVector.subscript.setter(v43, v78, v46);
  v48 = v0 + v3[11];
  v49 = *(_QWORD *)(v48 + 8);
  v50 = (_QWORD *)(v42 + v3[17]);
  OUTLINED_FUNCTION_9_3();
  v51 = swift_release();
  *v50 = v49;
  MEMORY[0x24BDAC7A8](v51);
  v52 = v79;
  v53 = v81;
  *(&v71 - 4) = (uint64_t)v80;
  *(&v71 - 3) = v53;
  *(&v71 - 2) = v42;
  *(&v71 - 1) = v47;
  DenseVector.withUnsafeMutableVectorPointer<A>(_:)((uint64_t (*)(uint64_t))sub_22AACB594, (uint64_t)(&v71 - 6), v46);
  if ((sub_22AACADD0(v3) & 1) != 0)
  {
    v81 = v48;
    OUTLINED_FUNCTION_9_3();
    static DenseVector.- prefix(_:)();
    OUTLINED_FUNCTION_13_4();
    sub_22AAC8574();
  }
  v80 = v50;
  v82 = (uint64_t)v52;
  type metadata accessor for OptimizerState(0, v15, v91, v54);
  sub_22ABE0130();
  v55 = v87;
  OUTLINED_FUNCTION_14_52();
  sub_22ABDFF20();
  v56 = *(char **)(v83[3] + 8);
  OUTLINED_FUNCTION_16_48();
  v57 = sub_22ABDEC30();
  v58 = v77;
  v77(v55, v15);
  v60 = v48;
  if ((v57 & 1) != 0)
  {
    v81 = v48;
    sub_22ABE0130();
    OUTLINED_FUNCTION_14_52();
    sub_22ABDFF20();
    v86 = v56;
    v60 = v81;
    sub_22ABE0130();
    v61 = v58;
    v62 = v72;
    OUTLINED_FUNCTION_14_52();
    sub_22ABDFF20();
    v63 = v73;
    sub_22ABDF308();
    v64 = v62;
    v58 = v61;
    OUTLINED_FUNCTION_6_24(v64);
    v65 = v85;
    sub_22ABE016C();
    OUTLINED_FUNCTION_6_24(v63);
    OUTLINED_FUNCTION_6_24(v65);
    OUTLINED_FUNCTION_16_48();
    v66();
  }
  v67 = v75;
  v68 = v91;
  type metadata accessor for OptimizerState(0, v15, v91, v59);
  OUTLINED_FUNCTION_14_52();
  sub_22ABDF854();
  OUTLINED_FUNCTION_9_3();
  static DenseVector.* infix(_:_:)();
  v70 = v69;
  OUTLINED_FUNCTION_13_4();
  v58(v55, v15);
  swift_release();
  *(_QWORD *)(v92 + v67) = v70;
  swift_retain();
  static DenseVector.+= infix(_:_:)(v60, v70, v15, v68);
  swift_release();
  v58(v90, v15);
  OUTLINED_FUNCTION_16();
}

void sub_22AAC9000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_12();
  v42 = v14;
  v16 = v15;
  v18 = *(_QWORD *)(v15 + 16);
  v17 = *(_QWORD *)(v15 + 24);
  OUTLINED_FUNCTION_14_9();
  v44 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_23_8();
  v22 = v20 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (uint64_t)&v37 - v24;
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_12_0();
  v43 = v27;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v37 - v29;
  v39 = *(int *)(v16 + 80);
  v40 = v13;
  v41 = v17;
  v38 = v18;
  swift_getAssociatedConformanceWitness();
  DenseVector.squaredMagnitude.getter();
  OUTLINED_FUNCTION_19_43();
  OUTLINED_FUNCTION_19_43();
  v31 = v43;
  sub_22ABDF308();
  OUTLINED_FUNCTION_10_52(v22);
  OUTLINED_FUNCTION_10_52(v25);
  LOBYTE(v25) = sub_22ABDEC48();
  OUTLINED_FUNCTION_10_52(v31);
  v32 = OUTLINED_FUNCTION_10_52((uint64_t)v30);
  if ((v25 & 1) != 0)
  {
    v33 = 0;
LABEL_5:
    sub_22AACB4A0();
    v35 = swift_allocError();
    *v36 = v33;
    swift_willThrow(v35);
    goto LABEL_6;
  }
  MEMORY[0x24BDAC7A8](v32);
  v34 = v41;
  *(&v37 - 2) = v38;
  *(&v37 - 1) = v34;
  DenseVector.withUnsafeVectorPointer<A>(_:)();
  if ((a13 & 1) == 0)
  {
    v33 = 1;
    goto LABEL_5;
  }
LABEL_6:
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AAC9234(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  char v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  char v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t AssociatedTypeWitness;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;

  v74 = a1;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v65 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v61 = (char *)&v52 - v5;
  v6 = *(_QWORD *)(AssociatedConformanceWitness + 16);
  v59 = *(_QWORD *)(*(_QWORD *)(v6 + 16) + 8);
  v70 = *(_QWORD *)(v59 + 16);
  v7 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v7);
  v68 = (char *)&v52 - v8;
  v9 = swift_checkMetadataState();
  v69 = *(void (**)(char *, uint64_t))(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v66 = (char *)&v52 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v67 = (char *)&v52 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v72 = (char *)&v52 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v73 = (char *)&v52 - v18;
  v19 = v2 + a2[13];
  v20 = a2[11];
  v71 = v2;
  v21 = AssociatedConformanceWitness;
  v22 = AssociatedConformanceWitness;
  v23 = v2 + v20;
  v57 = type metadata accessor for OptimizerState(0, v9, v22, v24);
  v25 = v23 + *(int *)(v57 + 48);
  v60 = v6;
  v26 = *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8);
  v62 = v25;
  v63 = v19;
  v27 = v26;
  v28 = 0;
  if ((v74 < 1) | ((sub_22ABDEC48() & 1) == 0) && v74 <= 2)
  {
    v29 = a2;
    v30 = a2[20];
    v54 = v23;
    v56 = v71 + v30;
    v31 = v21;
    v32 = v73;
    v55 = v31;
    dot<A>(_:_:)();
    swift_getAssociatedConformanceWitness();
    sub_22ABE013C();
    v33 = v72;
    sub_22ABDFF20();
    v34 = sub_22ABDEC24();
    v35 = (void (*)(char *, uint64_t))*((_QWORD *)v69 + 1);
    v35(v33, v9);
    if ((v34 & 1) != 0)
    {
      v70 = v27;
      dot<A>(_:_:)();
      v53 = v29;
      v36 = v35;
      v37 = v66;
      sub_22AACB764();
      v38 = swift_getAssociatedConformanceWitness();
      sub_22ABE0130();
      sub_22ABDFF20();
      v39 = sub_22ABDECFC();
      v69 = v36;
      v36(v33, v9);
      if ((v39 & 1) != 0)
      {
        v28 = 0;
        v32 = v73;
        v40 = v69;
        v69(v37, v9);
      }
      else
      {
        v68 = (char *)v38;
        sub_22ABE0130();
        sub_22ABDFF20();
        v41 = sub_22ABDEC30();
        v42 = v69;
        v69(v33, v9);
        if ((v41 & 1) != 0 || v74 == 2)
          *(_BYTE *)(v71 + v53[22]) = 1;
        sub_22ABE0130();
        v43 = v72;
        sub_22ABDFF20();
        v44 = sub_22ABDEC3C();
        v42(v43, v9);
        if ((v44 & 1) != 0 && (sub_22ABDEC48() & 1) != 0)
        {
          v28 = 0;
          v32 = v73;
          v40 = v42;
          v42(v66, v9);
        }
        else
        {
          v40 = v42;
          v45 = (uint64_t)v66;
          sub_22ABDF314();
          sub_22ABE0130();
          v46 = v58;
          sub_22ABDFF20();
          sub_22ABDFAF4();
          v40(v46, v9);
          v48 = v55;
          v47 = v56;
          static DenseVector.* infix(_:_:)();
          v50 = v49;
          v40(v43, v9);
          static DenseVector.-= infix(_:_:)(v54, v50, v9, v48);
          swift_release();
          static DenseVector.*= infix(_:_:)(v47, v45, v9, v48);
          v28 = 1;
          v32 = v73;
          v40((char *)v45, v9);
        }
      }
      v40(v67, v9);
      v35 = v40;
    }
    else
    {
      v28 = 0;
    }
    v35(v32, v9);
  }
  return v28;
}

void sub_22AAC98D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15 = (char *)&v20 - v14;
  if (a2 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (a2)
  {
    v16 = *(int *)(type metadata accessor for LBFGSOptimizer(0, a5, a6, v13) + 80);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v18 = 0;
    while (1)
    {
      DenseVector.subscript.getter(v18, *(_QWORD *)(v21 + v16), AssociatedTypeWitness, AssociatedConformanceWitness);
      v19 = v18 * a3;
      if ((unsigned __int128)(v18 * (__int128)a3) >> 64 != (v18 * a3) >> 63)
        break;
      ++v18;
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(a1 + *(_QWORD *)(v12 + 72) * v19, v15, AssociatedTypeWitness);
      if (a2 == v18)
        return;
    }
    __break(1u);
    goto LABEL_8;
  }
}

void sub_22AAC9A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a4;
  v29 = a1;
  v25 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v25 - v18;
  if (a2 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v28 = a2;
  if (a2)
  {
    v20 = type metadata accessor for LBFGSOptimizer(0, a5, v25, v17);
    v27 = v30 + *(int *)(v20 + 44);
    v26 = *(int *)(v20 + 84);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v22 = 0;
    while (1)
    {
      DenseVector.subscript.getter(v22, *(_QWORD *)(v27 + 8), AssociatedTypeWitness, AssociatedConformanceWitness);
      DenseVector.subscript.getter(v22, *(_QWORD *)(v30 + v26), AssociatedTypeWitness, AssociatedConformanceWitness);
      sub_22ABDFAF4();
      v23 = *(void (**)(char *, uint64_t))(v10 + 8);
      v23(v12, AssociatedTypeWitness);
      v23(v15, AssociatedTypeWitness);
      v24 = v22 * a3;
      if ((unsigned __int128)(v22 * (__int128)a3) >> 64 != (v22 * a3) >> 63)
        break;
      ++v22;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v29 + *(_QWORD *)(v10 + 72) * v24, v19, AssociatedTypeWitness);
      if (v28 == v22)
        return;
    }
    __break(1u);
    goto LABEL_8;
  }
}

uint64_t sub_22AAC9C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;

  type metadata accessor for LBFGSOptimizer(0, a6, a7, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for DenseMatrix(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  swift_retain();
  sub_22A9F3760();
  return swift_release();
}

void sub_22AAC9D68()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  dot<A>(_:_:)();
}

int *sub_22AAC9E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *result;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t AssociatedConformanceWitness;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[2];
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  char v98;
  uint64_t v99;
  uint64_t v100;

  v8 = v7;
  v89 = a5;
  v90 = a3;
  v95 = a1;
  v96 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v86 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v85 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v84 = (char *)v76 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v83 = (char *)v76 - v17;
  result = (int *)type metadata accessor for LBFGSOptimizer(0, a6, a7, v18);
  v20 = result[12];
  v21 = *(_QWORD **)(a4 + v20);
  v88 = result[10];
  if (*(_QWORD *)(a4 + v88) >= (uint64_t)v21)
    v22 = (unint64_t)v21;
  else
    v22 = *(_QWORD *)(a4 + v88);
  if ((v22 & 0x8000000000000000) != 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    return result;
  }
  v23 = result;
  v78 = v20;
  v87 = a6;
  v100 = AssociatedTypeWitness;
  v94 = a7;
  v77 = result;
  if (v22)
  {
    v24 = 0;
    v25 = result[15];
    v82 = (__int128 *)(a4 + result[16]);
    v80 = a4 + v25;
    v79 = MEMORY[0x24BEE4AE0] + 8;
    v91 = (_QWORD *)v22;
    v26 = v94;
    while (1)
    {
      v27 = *(_QWORD *)(a4 + v88);
      v28 = v89 + v27;
      if (__OFADD__(v89, v27))
        goto LABEL_38;
      v29 = __OFSUB__(v28, v24);
      v30 = v28 - (_QWORD)v24;
      if (v29)
        goto LABEL_39;
      if (!v27)
        goto LABEL_40;
      if (v30 == 0x8000000000000000 && v27 == -1)
        goto LABEL_41;
      v93 = v76;
      v24 = (_QWORD *)((char *)v24 + 1);
      v32 = *((_BYTE *)v82 + 16);
      v33 = *((_QWORD *)v82 + 3);
      v97 = *v82;
      v34 = v30 % v27;
      v98 = v32;
      v99 = v33;
      MEMORY[0x24BDAC7A8](result);
      v92 = v8;
      v35 = v87;
      v76[-8] = v87;
      v76[-7] = v26;
      v76[-6] = a4;
      v76[-5] = v34;
      v36 = v96;
      v76[-4] = v95;
      v76[-3] = v36;
      v76[-2] = v90;
      v37 = v100;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      type metadata accessor for DenseMatrix(0, v37, AssociatedConformanceWitness, v39);
      swift_retain();
      v40 = v92;
      sub_22A9F3760();
      v92 = v40;
      swift_release();
      v93 = v76;
      v41 = *(_BYTE *)(v80 + 16);
      v42 = *(_QWORD *)(v80 + 24);
      v97 = *(_OWORD *)v80;
      v98 = v41;
      v99 = v42;
      MEMORY[0x24BDAC7A8](v42);
      v76[-8] = v35;
      v76[-7] = v26;
      v43 = v96;
      v76[-6] = v95;
      v76[-5] = v43;
      v76[-4] = v90;
      v76[-3] = a4;
      v76[-2] = v34;
      swift_retain();
      v44 = v92;
      sub_22A9F3760();
      v8 = v44;
      result = (int *)swift_release();
      if (v91 == v24)
      {
        v92 = v44;
        a6 = v87;
        AssociatedTypeWitness = v100;
        v45 = AssociatedConformanceWitness;
        a7 = v94;
        v23 = v77;
        goto LABEL_17;
      }
    }
  }
  v92 = v7;
  result = (int *)swift_getAssociatedConformanceWitness();
  v45 = (uint64_t)result;
LABEL_17:
  v46 = (__int128 *)(a4 + v23[15]);
  v47 = *((_BYTE *)v46 + 16);
  v48 = *((_QWORD *)v46 + 3);
  v82 = v46;
  v97 = *v46;
  v98 = v47;
  v99 = v48;
  MEMORY[0x24BDAC7A8](result);
  v76[-8] = a6;
  v76[-7] = a7;
  v49 = v96;
  v76[-6] = v95;
  v76[-5] = v49;
  v50 = v89;
  v76[-4] = v90;
  v76[-3] = a4;
  v76[-2] = v50;
  v52 = type metadata accessor for DenseMatrix(0, AssociatedTypeWitness, v45, v51);
  swift_retain();
  v93 = (_QWORD *)v52;
  v53 = v92;
  sub_22A9F3760();
  v54 = v53;
  result = (int *)swift_release();
  if (*(_QWORD *)(a4 + v88) >= *(_QWORD *)(a4 + v78))
    v55 = *(_QWORD *)(a4 + v78);
  else
    v55 = *(_QWORD *)(a4 + v88);
  if (v55 < 0)
    goto LABEL_43;
  if (v55)
  {
    v80 = v45;
    v78 = v77[18];
    v77 = (int *)(a4 + v77[16]);
    v76[1] = MEMORY[0x24BEE4AE0] + 8;
    v56 = v55;
    v81 = a4;
    v79 = v55;
    v57 = v90;
    while (v55 >= v56)
    {
      v58 = *(_QWORD *)(a4 + v88);
      v59 = v89 + v58;
      if (__OFADD__(v89, v58))
        goto LABEL_34;
      v29 = __OFSUB__(v59, --v56);
      v60 = v59 - v56;
      if (v29)
        goto LABEL_35;
      if (!v58)
        goto LABEL_36;
      if (v60 == 0x8000000000000000 && v58 == -1)
        goto LABEL_37;
      v62 = v60 % v58;
      v63 = v84;
      DenseVector.subscript.getter(v60 % v58, *(_QWORD *)(a4 + v78), AssociatedTypeWitness, v80);
      v91 = v76;
      v64 = *((_BYTE *)v82 + 16);
      v65 = *((_QWORD *)v82 + 3);
      v97 = *v82;
      v98 = v64;
      v99 = v65;
      MEMORY[0x24BDAC7A8](v65);
      v66 = v87;
      v67 = v94;
      v76[-6] = v87;
      v76[-5] = v67;
      v68 = v96;
      v76[-4] = v95;
      v76[-3] = v68;
      v76[-2] = v57;
      swift_retain();
      v69 = v85;
      sub_22A9F3760();
      v92 = v54;
      swift_release();
      v70 = v83;
      sub_22ABDF308();
      v71 = *(void (**)(char *, uint64_t))(v86 + 8);
      v71(v69, v100);
      v71(v63, v100);
      v72 = *((_BYTE *)v77 + 16);
      v73 = *((_QWORD *)v77 + 3);
      v97 = *(_OWORD *)v77;
      v98 = v72;
      v99 = v73;
      MEMORY[0x24BDAC7A8](v73);
      v76[-8] = v66;
      a4 = v81;
      AssociatedTypeWitness = v100;
      v74 = v95;
      v76[-7] = v94;
      v76[-6] = v74;
      v76[-5] = v96;
      v76[-4] = v57;
      v76[-3] = a4;
      v76[-2] = v62;
      v76[-1] = v70;
      swift_retain();
      v75 = v92;
      sub_22A9F3760();
      v54 = v75;
      swift_release();
      result = (int *)((uint64_t (*)(char *, uint64_t))v71)(v70, AssociatedTypeWitness);
      v55 = v79;
      if (!v56)
        return result;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_22AACA528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedConformanceWitness;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v32 = a7;
  v33 = a8;
  v31 = a6;
  v29 = a5;
  v35 = a2;
  v36 = a3;
  v34 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v28 - v16;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v28 - v19;
  v30 = type metadata accessor for LBFGSOptimizer(0, a9, a10, v21);
  v22 = *(_QWORD *)(a4 + *(int *)(v30 + 72));
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  DenseVector.subscript.getter(a5, v22, AssociatedTypeWitness, AssociatedConformanceWitness);
  UnsafeVectorPointer.init(_:)(v31, v32, v33, AssociatedTypeWitness);
  dot<A>(_:_:)();
  sub_22ABDF308();
  v24 = *(void (**)(char *, uint64_t))(v37 + 8);
  v24(v14, AssociatedTypeWitness);
  v24(v17, AssociatedTypeWitness);
  v26 = type metadata accessor for DenseVector(0, AssociatedTypeWitness, AssociatedConformanceWitness, v25);
  return DenseVector.subscript.setter((uint64_t)v20, v29, v26);
}

uint64_t sub_22AACA718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v29 = a5;
  v30 = a6;
  v27 = a3;
  v28 = a4;
  v25 = a1;
  v26 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v25 - v17;
  v20 = *(_QWORD *)(a7 + *(int *)(type metadata accessor for LBFGSOptimizer(0, a9, a10, v19) + 76));
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  DenseVector.subscript.getter(a8, v20, AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_22ABDF854();
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v15, AssociatedTypeWitness);
  UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(v25, v26, v27, (uint64_t)v18, v28, v29, v30, AssociatedTypeWitness, AssociatedConformanceWitness, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33,
    v34,
    v35);
  return ((uint64_t (*)(char *, uint64_t))v22)(v18, AssociatedTypeWitness);
}

uint64_t sub_22AACA88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t AssociatedConformanceWitness;

  v41 = a6;
  v37 = a7;
  v38 = a8;
  v39 = a4;
  v40 = a5;
  v35 = a2;
  v36 = a3;
  v33 = a10;
  v34 = a1;
  v32 = a9;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = swift_checkMetadataState();
  v31 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v31 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v31 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v31 - v24;
  swift_getAssociatedConformanceWitness();
  sub_22ABE0130();
  sub_22ABDFF20();
  v26 = AssociatedConformanceWitness;
  UnsafeVectorPointer<A>.squaredMagnitude.getter();
  v28 = type metadata accessor for LBFGSOptimizer(0, v32, v33, v27);
  DenseVector.subscript.getter(v38, *(_QWORD *)(v37 + *(int *)(v28 + 72)), v11, v26);
  sub_22ABDF308();
  v29 = *(void (**)(char *, uint64_t))(v31 + 8);
  v29(v13, v11);
  v29(v16, v11);
  sub_22ABDEB88();
  v29(v19, v11);
  v29(v22, v11);
  UnsafeMutableVectorPointer<A>.multiply(by:)((uint64_t)v25, v39, v40, v41);
  return ((uint64_t (*)(char *, uint64_t))v29)(v25, v11);
}

void sub_22AACAB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  UnsafeVectorPointer.init(_:)(a4, a5, a6, AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  dot<A>(_:_:)();
}

uint64_t sub_22AACAC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v30 = a5;
  v31 = a6;
  v28 = a3;
  v29 = a4;
  v26 = a1;
  v27 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v26 - v18;
  v21 = *(_QWORD *)(a7 + *(int *)(type metadata accessor for LBFGSOptimizer(0, a10, a11, v20) + 76));
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  DenseVector.subscript.getter(a8, v21, AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_22ABDFAF4();
  v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v16, AssociatedTypeWitness);
  UnsafeMutableVectorPointer<A>.add(_:scaledBy:)(v26, v27, v28, (uint64_t)v19, v29, v30, v31, AssociatedTypeWitness, AssociatedConformanceWitness, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34,
    v35,
    v36);
  return ((uint64_t (*)(char *, uint64_t))v23)(v19, AssociatedTypeWitness);
}

uint64_t sub_22AACADD0(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  char v27;
  void (*v28)(char *, uint64_t, int *, double);
  _BOOL4 v29;
  void (*v30)(char *, int *);
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char *v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  char *v40;
  _QWORD v42[4];
  uint64_t AssociatedTypeWitness;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;

  v2 = v1;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v46 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v42[3] = (char *)v42 - v5;
  v6 = swift_checkMetadataState();
  v45 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v42 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v42 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v49 = (char *)v42 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v50 = (char *)v42 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v48 = (char *)v42 - v18;
  v19 = *((_QWORD *)a1 - 1);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v42 - v25;
  v27 = *(_BYTE *)(v2 + a1[22]);
  v28 = *(void (**)(char *, uint64_t, int *, double))(v19 + 16);
  v28((char *)v42 - v25, v2, a1, v24);
  v29 = (v27 & 1) != 0 || *(_QWORD *)&v26[a1[12]] == 0;
  v30 = *(void (**)(char *, int *))(v19 + 8);
  v30(v26, a1);
  ((void (*)(char *, uint64_t, int *))v28)(v22, v2, a1);
  if (v29)
  {
    v30(v22, a1);
  }
  else
  {
    type metadata accessor for OptimizerState(0, v6, AssociatedConformanceWitness, v31);
    v32 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(AssociatedConformanceWitness + 16) + 24) + 8);
    v33 = sub_22ABDEC24();
    v30(v22, a1);
    if ((v33 & 1) == 0)
    {
      v42[1] = a1[21];
      v35 = v48;
      dot<A>(_:_:)();
      sub_22ABDF308();
      v42[2] = v32;
      swift_getAssociatedConformanceWitness();
      sub_22ABE0130();
      sub_22ABDFF20();
      v36 = v44;
      DenseVector.squaredMagnitude.getter();
      v37 = v47;
      sub_22ABDF308();
      v38 = *(void (**)(char *, uint64_t))(v45 + 8);
      v38(v36, v6);
      v38(v10, v6);
      DenseVector.squaredMagnitude.getter();
      v39 = v49;
      sub_22ABDF308();
      v38(v10, v6);
      v38(v37, v6);
      v40 = v50;
      v34 = sub_22ABDEC24();
      v38(v39, v6);
      v38(v40, v6);
      v38(v35, v6);
      return v34 & 1;
    }
  }
  v34 = 1;
  return v34 & 1;
}

uint64_t sub_22AACB244@<X0>(_BYTE *a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  swift_getKeyPath();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = type metadata accessor for UnsafeVectorPointer(0, AssociatedTypeWitness, v3, v4);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UnsafeVectorPointer<A>, v5);
  v6 = sub_22ABDEEA0();
  result = swift_release();
  *a1 = v6 & 1;
  return result;
}

uint64_t sub_22AACB324@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  OUTLINED_FUNCTION_14_9();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_22ABDEBC4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22AACB3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + *(int *)(a1 + 44);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = type metadata accessor for OptimizerState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v4, v8);
}

uint64_t sub_22AACB450(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 48));
}

void sub_22AACB464()
{
  sub_22AAC6E6C();
}

void sub_22AACB478()
{
  sub_22AAC7EAC();
}

void sub_22AACB48C(int *a1)
{
  sub_22AAC81C0(a1);
}

unint64_t sub_22AACB4A0()
{
  unint64_t result;

  result = qword_255B165F8[0];
  if (!qword_255B165F8[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for OptimizationError, &type metadata for OptimizationError);
    atomic_store(result, qword_255B165F8);
  }
  return result;
}

uint64_t sub_22AACB4DC@<X0>(_BYTE *a1@<X8>)
{
  return sub_22AACB244(a1);
}

uint64_t sub_22AACB4F8()
{
  return 16;
}

__n128 sub_22AACB504(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_22AACB510()
{
  unsigned __int8 v1;

  swift_getAtKeyPath();
  return v1;
}

void sub_22AACB540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_22AAC98D8(a1, a2, a3, v3[4], v3[2], v3[3]);
}

void sub_22AACB55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_22AAC9A24(a1, a2, a3, v3[4], v3[2], v3[3]);
}

uint64_t sub_22AACB578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_22AAC9C30(a1, a2, a3, v3[4], v3[5], v3[2], v3[3]);
}

int *sub_22AACB594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_22AAC9E30(a1, a2, a3, v3[4], v3[5], v3[2], v3[3]);
}

uint64_t sub_22AACB5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AACB604(a1, a2, a3, sub_22AACA528);
}

uint64_t sub_22AACB5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AACB604(a1, a2, a3, sub_22AACA718);
}

uint64_t sub_22AACB5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AACB604(a1, a2, a3, sub_22AACA88C);
}

uint64_t sub_22AACB604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, a2, a3, v4[4], v4[5], v4[6], v4[7], v4[8], v4[2], v4[3]);
}

uint64_t sub_22AACB638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AACB6A4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AACAB5C);
}

uint64_t sub_22AACB654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_22AACAC4C(a1, a2, a3, v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], v3[2], v3[3]);
}

uint64_t sub_22AACB688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AACB6A4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22AAC9D68);
}

uint64_t sub_22AACB6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, a2, a3, v4[4], v4[5], v4[6], v4[2], v4[3]);
}

uint64_t OUTLINED_FUNCTION_6_79(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_7_69()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_8_56()
{
  return sub_22ABE0130();
}

uint64_t OUTLINED_FUNCTION_9_57(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_10_52(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_17_45()
{
  return sub_22ABDFAE8();
}

uint64_t OUTLINED_FUNCTION_18_51()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_43()
{
  return sub_22ABDEBD0();
}

uint64_t OUTLINED_FUNCTION_20_43@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_22_43()
{
  return sub_22ABDFAE8();
}

void sub_22AACB764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  void (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t AssociatedConformanceWitness;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(void);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(void);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(void);
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  void (*v93)(void);
  uint64_t v94;
  void (*v95)(void);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t AssociatedTypeWitness;
  void (*v112)(uint64_t);

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v112 = v4;
  v107 = v5;
  v95 = v6;
  v96 = v7;
  v81 = v8;
  v90 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v90 + 16) + 8) + 16);
  v104 = *(_QWORD *)(*(_QWORD *)(v90 + 16) + 8);
  v105 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_9_33();
  v110 = v11;
  v12 = *(_QWORD *)(v1 + 8);
  v13 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v81 - v15;
  v92 = *(_QWORD **)(v3 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_12_0();
  v106 = v20;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_12_0();
  v94 = v22;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_12_0();
  v102 = v24;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_12_0();
  v101 = v26;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_12_0();
  v100 = v29;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_12_0();
  v99 = v31;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v81 - v33;
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v81 - v36;
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_12_0();
  v40 = v39;
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)&v81 - v42;
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_12_0();
  v98 = v45;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)&v81 - v47;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v86 = v13;
  v84 = AssociatedConformanceWitness;
  sub_22ABE0130();
  v89 = v48;
  v85 = v16;
  v87 = v12;
  sub_22ABDFF20();
  v103 = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_62_14();
  OUTLINED_FUNCTION_43_18();
  v109 = *(_QWORD *)(v104 + 8);
  sub_22ABDFAF4();
  sub_22ABDF308();
  v50 = (void (*)(uint64_t))v92[1];
  OUTLINED_FUNCTION_2_24((uint64_t)v34);
  OUTLINED_FUNCTION_2_24((uint64_t)v37);
  OUTLINED_FUNCTION_10_53();
  OUTLINED_FUNCTION_2_24(v40);
  OUTLINED_FUNCTION_10_53();
  v108 = v43;
  OUTLINED_FUNCTION_2_24((uint64_t)v43);
  sub_22ABE013C();
  OUTLINED_FUNCTION_30_33();
  sub_22ABDFF20();
  OUTLINED_FUNCTION_14_16();
  sub_22ABDFAF4();
  sub_22ABDF308();
  v83 = v34;
  OUTLINED_FUNCTION_2_24((uint64_t)v34);
  OUTLINED_FUNCTION_2_24((uint64_t)v37);
  sub_22ABDFAF4();
  OUTLINED_FUNCTION_2_24(v40);
  sub_22ABE013C();
  OUTLINED_FUNCTION_43_18();
  v51 = v107;
  OUTLINED_FUNCTION_14_16();
  sub_22ABDF308();
  v82 = v37;
  OUTLINED_FUNCTION_2_24((uint64_t)v37);
  sub_22ABDFAF4();
  v97 = v40;
  OUTLINED_FUNCTION_2_24(v40);
  v52 = OUTLINED_FUNCTION_69_12();
  v112 = v50;
  v50(v52);
  v53 = (void (*)(void))v92[2];
  ((void (*)(uint64_t, uint64_t, uint64_t))v53)(v100, v51, v3);
  OUTLINED_FUNCTION_71_12();
  v93 = v53;
  v53();
  OUTLINED_FUNCTION_49_17();
  OUTLINED_FUNCTION_30_33();
  OUTLINED_FUNCTION_38_32();
  OUTLINED_FUNCTION_49_17();
  OUTLINED_FUNCTION_30_33();
  OUTLINED_FUNCTION_38_32();
  v107 = *(_QWORD *)(*(_QWORD *)(v90 + 24) + 8);
  sub_22ABE016C();
  OUTLINED_FUNCTION_14_16();
  sub_22ABDEC30();
  sub_22ABE013C();
  OUTLINED_FUNCTION_30_33();
  sub_22ABDFF20();
  v54 = 32;
  v55 = v88;
  v56 = v106;
  v57 = v98;
  while (1)
  {
    v96 = v54;
    v58 = (uint64_t)v108;
    OUTLINED_FUNCTION_10_53();
    OUTLINED_FUNCTION_55_16();
    sub_22ABE0130();
    v59 = v97;
    sub_22ABDFF20();
    sub_22ABDEB88();
    v60 = OUTLINED_FUNCTION_69_12();
    v112(v60);
    OUTLINED_FUNCTION_2_24(v58);
    ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v55, v57, v3);
    OUTLINED_FUNCTION_71_12();
    sub_22ABDF308();
    OUTLINED_FUNCTION_10_53();
    OUTLINED_FUNCTION_2_24(v59);
    OUTLINED_FUNCTION_2_24(v55);
    v61 = (void (*)(void))v92[4];
    OUTLINED_FUNCTION_51_24();
    OUTLINED_FUNCTION_26_34();
    OUTLINED_FUNCTION_10_53();
    OUTLINED_FUNCTION_2_24(v59);
    OUTLINED_FUNCTION_2_24(v55);
    OUTLINED_FUNCTION_51_24();
    OUTLINED_FUNCTION_26_34();
    OUTLINED_FUNCTION_10_53();
    OUTLINED_FUNCTION_2_24(v59);
    OUTLINED_FUNCTION_2_24(v55);
    v95 = v61;
    ((void (*)(uint64_t, uint64_t, uint64_t))v61)(v55, v58, v3);
    if ((OUTLINED_FUNCTION_59_15() & 1) != 0)
    {
      OUTLINED_FUNCTION_37_27(v81);
      v62 = v94;
      OUTLINED_FUNCTION_6_37(v94);
      v63 = v62;
      v64 = v93;
      ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v63, v55, v3);
      OUTLINED_FUNCTION_71_12();
      v64();
    }
    v65 = v108;
    v66 = v101;
    v67 = v102;
    OUTLINED_FUNCTION_14_16();
    sub_22ABDFAF4();
    v68 = OUTLINED_FUNCTION_59_15();
    ((void (*)(char *, uint64_t))v112)(v65, v3);
    if ((v68 & 1) != 0)
      break;
    v69 = v110;
    v70 = v103;
    sub_22ABE013C();
    v71 = (uint64_t)v108;
    OUTLINED_FUNCTION_30_33();
    sub_22ABDFF20();
    OUTLINED_FUNCTION_55_16();
    OUTLINED_FUNCTION_20_44();
    OUTLINED_FUNCTION_37_27(v71);
    v72 = v97;
    OUTLINED_FUNCTION_20_44();
    sub_22ABE013C();
    OUTLINED_FUNCTION_58_11();
    OUTLINED_FUNCTION_30_33();
    sub_22ABDFF20();
    v73 = (uint64_t)v82;
    OUTLINED_FUNCTION_56_17();
    OUTLINED_FUNCTION_14_16();
    OUTLINED_FUNCTION_20_44();
    OUTLINED_FUNCTION_6_37(v70);
    sub_22ABDFAE8();
    OUTLINED_FUNCTION_2_24(v73);
    OUTLINED_FUNCTION_2_24(v72);
    OUTLINED_FUNCTION_2_24(v69);
    v74 = v95;
    ((void (*)(uint64_t, uint64_t, uint64_t))v95)(v69, v71, v3);
    OUTLINED_FUNCTION_20_44();
    OUTLINED_FUNCTION_10_53();
    OUTLINED_FUNCTION_2_24(v72);
    OUTLINED_FUNCTION_2_24(v69);
    ((void (*)(uint64_t, uint64_t, uint64_t))v74)(v69, v71, v3);
    sub_22ABE013C();
    v56 = v106;
    OUTLINED_FUNCTION_30_33();
    v55 = v88;
    sub_22ABDFF20();
    OUTLINED_FUNCTION_14_16();
    v75 = sub_22ABDEC24();
    OUTLINED_FUNCTION_2_24(v71);
    v76 = v69;
    v66 = v101;
    OUTLINED_FUNCTION_2_24(v76);
    OUTLINED_FUNCTION_2_24(v55);
    v77 = v102;
    if ((v75 & 1) != 0)
      v78 = v102;
    else
      v78 = v66;
    OUTLINED_FUNCTION_2_24(v78);
    OUTLINED_FUNCTION_71_12();
    v74();
    v57 = v98;
    v54 = v96 - 1;
    v79 = v77;
    if (v96 == 1)
      goto LABEL_11;
  }
  v80 = (void (*)(uint64_t, uint64_t))v112;
  ((void (*)(uint64_t, uint64_t))v112)(v55, v3);
  v80(v56, v3);
  v79 = v67;
  v57 = v98;
LABEL_11:
  OUTLINED_FUNCTION_37_27(v94);
  OUTLINED_FUNCTION_6_37(v79);
  OUTLINED_FUNCTION_6_37(v66);
  OUTLINED_FUNCTION_6_37(v91);
  OUTLINED_FUNCTION_6_37(v100);
  OUTLINED_FUNCTION_6_37(v99);
  OUTLINED_FUNCTION_6_37(v57);
  OUTLINED_FUNCTION_6_37((uint64_t)v89);
  OUTLINED_FUNCTION_3();
}

void sub_22AACC1FC()
{
  OUTLINED_FUNCTION_4_4();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_68_12();
  OUTLINED_FUNCTION_61_15();
}

uint64_t sub_22AACC294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t result;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  OUTLINED_FUNCTION_40_1(a1, v14 - 144);
  *(_QWORD *)(v14 - 408) = v15;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_39_1(v17);
  *(_QWORD *)(v14 - 336) = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v20);
  v21 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v14 - 144) = *(_QWORD *)(*(_QWORD *)(v21 + 24) + 8);
  v22 = sub_22ABDECCC();
  OUTLINED_FUNCTION_40_1(v22, v14 - 72);
  *(_QWORD *)(v14 - 344) = v23;
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_39_1(v25);
  v26 = *(_QWORD *)(*(_QWORD *)(v21 + 16) + 8);
  *(_QWORD *)(v14 - 168) = v26;
  *(_QWORD *)(v14 - 224) = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v14 - 232) = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_9_33();
  *(_QWORD *)(v14 - 240) = v28;
  *(_QWORD *)(v14 - 152) = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v14 - 248) = v31;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v14 - 256) = v33;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_28_1();
  *(_QWORD *)(v14 - 128) = v36;
  *(_QWORD *)(v14 - 312) = v9;
  v37 = *(_QWORD *)(v9 + 8);
  v38 = OUTLINED_FUNCTION_65_15();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&a9 - v40;
  v42 = OUTLINED_FUNCTION_68_12();
  OUTLINED_FUNCTION_9_58();
  OUTLINED_FUNCTION_8_57();
  *(_QWORD *)(v14 - 272) = v11;
  v44 = (int *)type metadata accessor for LineSearch(0, v13, v11, v43);
  v45 = v10 + v44[9];
  OUTLINED_FUNCTION_9_58();
  *(_QWORD *)(v14 - 424) = v45;
  OUTLINED_FUNCTION_8_57();
  v46 = v10 + v44[10];
  OUTLINED_FUNCTION_9_58();
  *(_QWORD *)(v14 - 280) = v46;
  OUTLINED_FUNCTION_8_57();
  v47 = v10 + v44[11];
  OUTLINED_FUNCTION_9_58();
  OUTLINED_FUNCTION_8_57();
  *(_QWORD *)(v14 - 376) = v38;
  *(_QWORD *)(v14 - 392) = v42;
  v48 = *(_QWORD *)(v14 - 192);
  sub_22ABE0130();
  v49 = *(_QWORD *)(v14 - 152);
  *(_QWORD *)(v14 - 384) = v41;
  OUTLINED_FUNCTION_44_23();
  *(_QWORD *)(v14 - 368) = v37;
  sub_22ABDFF20();
  *(_QWORD *)(v10 + v44[13]) = 20;
  v50 = v44[26];
  *(_QWORD *)(v14 - 432) = v50;
  *(_BYTE *)(v10 + v50) = 0;
  v51 = v44[27];
  *(_QWORD *)(v14 - 440) = v51;
  *(_BYTE *)(v10 + v51) = 1;
  *(_BYTE *)(v10 + v44[28]) = 1;
  v52 = *(_QWORD *)(*(_QWORD *)(v14 - 160) - 8);
  (*(void (**)(uint64_t, _QWORD))(v52 + 16))(v10 + v44[14], *(_QWORD *)(v14 - 200));
  *(_QWORD *)(v10 + v44[15]) = *(_QWORD *)(v14 - 176);
  v53 = v10 + v44[17];
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
  *(_QWORD *)(v14 - 184) = v53;
  OUTLINED_FUNCTION_63_14(v53, *(_QWORD *)(v14 - 208));
  *(_QWORD *)(v10 + v44[16]) = *(_QWORD *)(v14 - 216);
  *(_QWORD *)(v10 + v44[18]) = v48;
  v55 = *(_QWORD *)(v14 - 128);
  OUTLINED_FUNCTION_63_14(v55, *(_QWORD *)(v14 - 136));
  swift_retain();
  v56 = v55;
  swift_retain();
  *(_QWORD *)(v14 - 176) = v47;
  v57 = OUTLINED_FUNCTION_54_16();
  v58 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  result = OUTLINED_FUNCTION_30_1(v56);
  if ((v57 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_63_14(v56, *(_QWORD *)(v14 - 136));
  v60 = OUTLINED_FUNCTION_35_21();
  result = OUTLINED_FUNCTION_30_1(v56);
  if ((v60 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  *(_QWORD *)(v14 - 448) = v52;
  v61 = *(_QWORD *)(v14 - 176);
  OUTLINED_FUNCTION_64_11();
  v62 = *(_QWORD *)(v14 - 128);
  *(_QWORD *)(v14 - 280) = v54;
  v54(v62, v61, v12);
  *(_QWORD *)(v14 - 288) = v10;
  *(_QWORD *)(v14 - 456) = swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  v63 = *(_QWORD *)(v14 - 248);
  OUTLINED_FUNCTION_56_17();
  OUTLINED_FUNCTION_38_32();
  v64 = *(_QWORD *)(v14 - 296);
  OUTLINED_FUNCTION_64_11();
  v65 = *(_QWORD *)(v14 - 256);
  sub_22ABDF308();
  OUTLINED_FUNCTION_30_1(v64);
  v66 = v63;
  v67 = *(_QWORD *)(v14 - 304);
  OUTLINED_FUNCTION_30_1(v66);
  OUTLINED_FUNCTION_56_17();
  sub_22ABDFAE8();
  OUTLINED_FUNCTION_30_1(v65);
  result = OUTLINED_FUNCTION_35_21();
  if ((result & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v68 = *(_QWORD *)(v14 - 336);
  v69 = *(int *)(v68 + 48);
  *(_QWORD *)(v14 - 296) = v44;
  v70 = v58;
  v71 = *(_QWORD *)(v14 - 360);
  v72 = v71 + v69;
  OUTLINED_FUNCTION_34_32(v71, *(_QWORD *)(v14 - 128));
  OUTLINED_FUNCTION_34_32(v72, v67);
  v73 = *(_QWORD *)(v14 - 320);
  v74 = v73 + *(int *)(v68 + 48);
  v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 - 280);
  v75(v73, v71, v12);
  v75(v74, v72, v12);
  v76 = *(_QWORD *)(v14 - 352);
  OUTLINED_FUNCTION_34_32(v76, v73);
  v70(v74, v12);
  v77 = v73 + *(int *)(v68 + 48);
  OUTLINED_FUNCTION_34_32(v73, v71);
  OUTLINED_FUNCTION_34_32(v77, v72);
  v78 = *(_QWORD *)(v14 - 328);
  OUTLINED_FUNCTION_34_32(v76 + *(int *)(v78 + 36), v77);
  v70(v73, v12);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 344) + 32))(*(_QWORD *)(v14 - 288) + *(int *)(*(_QWORD *)(v14 - 296) + 96), v76, v78);
  dot<A>(_:_:)();
  swift_release();
  OUTLINED_FUNCTION_55_16();
  sub_22ABE0130();
  sub_22ABDFF20();
  LOBYTE(v78) = sub_22ABDEC30();
  result = OUTLINED_FUNCTION_30_1(v67);
  if ((v78 & 1) != 0)
  {
    v79 = *(_QWORD *)(v14 - 176);
    *(_QWORD *)(v14 - 144) = v70;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 - 280))(v67, v79, v12);
    OUTLINED_FUNCTION_21_49();
    OUTLINED_FUNCTION_23_43(*(_QWORD *)(v14 - 248), *(_QWORD *)(v14 - 128));
    v80 = OUTLINED_FUNCTION_50_24();
    sub_22AACDEC4(v80, v12, v81);
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_22AACCBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[9];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[11];

  OUTLINED_FUNCTION_4_4();
  a19 = v20;
  a20 = v21;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = *(_QWORD *)(v22 + 24);
  v25 = OUTLINED_FUNCTION_65_15();
  OUTLINED_FUNCTION_14_9();
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_87();
  v63 = v27;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v29);
  v30 = OUTLINED_FUNCTION_68_12();
  v31 = *(_QWORD *)(v30 + 16);
  OUTLINED_FUNCTION_14_9();
  v65[3] = v32;
  v33 = sub_22ABDECCC();
  OUTLINED_FUNCTION_40_1(v33, (uint64_t)v65);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_39_1(v35);
  v60[5] = v31;
  v61 = *(_QWORD *)(*(_QWORD *)(v31 + 16) + 8);
  v36 = OUTLINED_FUNCTION_53_21(*(_QWORD *)(v61 + 16), (uint64_t)v60);
  OUTLINED_FUNCTION_40_1(v36, (uint64_t)&v59);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_9_33();
  OUTLINED_FUNCTION_39_1(v38);
  OUTLINED_FUNCTION_14_9();
  v39 = sub_22ABDF5D8();
  OUTLINED_FUNCTION_40_1(v39, (uint64_t)&v58);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v42);
  v60[3] = OUTLINED_FUNCTION_53_21(*(_QWORD *)(v30 + 8), (uint64_t)&a18);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v45);
  v64 = *(_QWORD *)(v25 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v54);
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_12_0();
  v62 = v56;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v57);
  v65[6] = v23;
  v65[7] = v25;
  v65[8] = v24;
  v65[9] = v30;
  OUTLINED_FUNCTION_61_15();
}

void sub_22AACCF38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;

  *(_QWORD *)(v6 - 632) = a1;
  v7 = *(int *)(a1 + 56);
  *(_QWORD *)(v6 - 136) = v5;
  *(_QWORD *)(v6 - 128) = v1;
  v8 = *(int *)(v5 + 52);
  v9 = *(_QWORD *)(v4 + v7);
  *(_QWORD *)(v6 - 448) = v8;
  if (v9 < *(_QWORD *)(v1 + v8))
  {
    v10 = *(int **)(v6 - 136);
    *(_QWORD *)(v6 - 456) = v10[16];
    v11 = *(_QWORD *)(v6 - 128);
    *(_QWORD *)(v6 - 176) = v11 + v10[23];
    *(_QWORD *)(v6 - 232) = v10[18];
    v12 = v11 + v10[29];
    v13 = v10[14];
    *(_QWORD *)(v6 - 496) = v10[15];
    *(_QWORD *)(v6 - 472) = v11 + v13;
    *(_QWORD *)(v6 - 480) = *(_QWORD *)(*(_QWORD *)(v6 - 352) + 48);
    *(_QWORD *)(v6 - 488) = *(int *)(*(_QWORD *)(v6 - 632) + 60);
    v14 = OUTLINED_FUNCTION_14_9();
    *(_QWORD *)(v6 - 504) = v12 + *(int *)(type metadata accessor for OptimizerState(v14, v15, v2, v16) + 48);
    *(_QWORD *)(v6 - 120) = *(_QWORD *)(v6 - 376);
    *(_QWORD *)(v6 - 112) = v3;
    *(_QWORD *)(v6 - 104) = *(_QWORD *)(v6 - 352);
    *(_QWORD *)(v6 - 96) = v2;
    type metadata accessor for LineSearch.LineSearchEvaluation();
  }
  v17 = v4;
  if (qword_255B0D880 != -1)
    swift_once();
  v18 = sub_22ABDE804();
  __swift_project_value_buffer(v18, (uint64_t)qword_255B47DC8);
  v19 = sub_22ABDE7EC();
  v20 = sub_22ABDF4C4();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_22A999000, v19, v20, "The optimizer reached the function evaluation limit when adjusting the step size.", v21, 2u);
    MEMORY[0x22E2E4E64](v21, -1, -1);
  }

  OUTLINED_FUNCTION_47_18();
  OUTLINED_FUNCTION_49(v17, v22, v23);
  v24 = *(_QWORD *)(v6 - 632);
  *(_BYTE *)(v17 + *(int *)(v24 + 52)) = 1;
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(*(_QWORD *)(v6 - 640), v17);
  OUTLINED_FUNCTION_3();
}

void type metadata accessor for LineSearch.LineSearchResult()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AACDEC4(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for LineSearch.LineSearchEvaluation();
}

uint64_t sub_22AACDF28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);

  v5(v4 + *(int *)(a1 + 52), v3, v1);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v4 + *(int *)(a1 + 56), v2, v1);
}

void sub_22AACDF70()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_4();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v0);
  swift_getAssociatedConformanceWitness();
  sub_22ABE0130();
  OUTLINED_FUNCTION_44_23();
  OUTLINED_FUNCTION_70_10();
  OUTLINED_FUNCTION_61_15();
}

void sub_22AACE038(int *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + a1[13]) = 0;
  *(_QWORD *)(v1 + a1[14]) = 0;
  *(_QWORD *)(v1 + a1[15]) = 0;
  OUTLINED_FUNCTION_3();
}

void sub_22AACE05C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t AssociatedConformanceWitness;
  void (*v32)(char *, uint64_t);
  char v33;
  char *v34;
  char *v35;
  char v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v49 = a1;
  v4 = *(_QWORD *)(a2 + 16);
  v51 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v46 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)v41 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v48 = (char *)v41 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v41 - v13;
  v15 = *(int *)(a2 + 104);
  v16 = *(unsigned __int8 *)(v2 + v15);
  v50 = v2;
  if (v16 == 1
    && ((swift_getAssociatedConformanceWitness(), (sub_22ABDEC48() & 1) != 0)
     || (sub_22ABDECCC(), v17 = sub_22ABDEC3C(), v2 = v50, (v17 & 1) != 0))
    || (*(_BYTE *)(v2 + *(int *)(a2 + 112)) & 1) == 0)
  {
    v24 = v4;
    if (qword_255B0D880 != -1)
      swift_once();
    v25 = sub_22ABDE804();
    __swift_project_value_buffer(v25, (uint64_t)qword_255B47DC8);
    v26 = sub_22ABDE7EC();
    v27 = sub_22ABDF4C4();
    v28 = os_log_type_enabled(v26, v27);
    v29 = v51;
    if (v28)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_22A999000, v26, v27, "Failed to find a suitable step size. Tolerances may be too small or dataset may be poorly scaled. This typically happens when the number of features is much larger than the number of training examples. Consider pruning features manually or increasing the regularization value.", v30, 2u);
      MEMORY[0x22E2E4E64](v30, -1, -1);
    }

    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v52 = v24;
    v53 = AssociatedTypeWitness;
    v54 = v29;
    v55 = AssociatedConformanceWitness;
  }
  else
  {
    v18 = a2;
    v19 = v2 + *(int *)(a2 + 92);
    v42 = v15;
    v43 = v18;
    v20 = v51;
    v21 = swift_getAssociatedConformanceWitness();
    v41[1] = *(_QWORD *)(v21 + 16);
    v44 = v19;
    v22 = sub_22ABDEC3C();
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v23(v14, v49, AssociatedTypeWitness);
    v45 = v4;
    if ((v22 & 1) != 0)
    {
      v52 = v4;
      v53 = AssociatedTypeWitness;
      v54 = v20;
      v55 = v21;
      type metadata accessor for LineSearch.LineSearchEvaluation();
    }
    v32 = *(void (**)(char *, uint64_t))(v6 + 8);
    v32(v14, AssociatedTypeWitness);
    v33 = sub_22ABDEC48();
    v34 = v48;
    v23(v48, v49, AssociatedTypeWitness);
    if ((v33 & 1) != 0)
    {
      v52 = v45;
      v53 = AssociatedTypeWitness;
      v54 = v51;
      v55 = v21;
      type metadata accessor for LineSearch.LineSearchEvaluation();
    }
    v32(v34, AssociatedTypeWitness);
    if (*(_BYTE *)(v50 + v42) != 1
      || (sub_22ABDECCC(),
          v48 = (char *)v21,
          v35 = v47,
          sub_22ABDFAF4(),
          v36 = sub_22ABDEC48(),
          v21 = (uint64_t)v48,
          v32(v35, AssociatedTypeWitness),
          (v36 & 1) == 0))
    {
      v52 = v45;
      v53 = AssociatedTypeWitness;
      v54 = v51;
      v55 = v21;
      type metadata accessor for LineSearch.LineSearchEvaluation();
    }
    if (qword_255B0D880 != -1)
      swift_once();
    v37 = sub_22ABDE804();
    __swift_project_value_buffer(v37, (uint64_t)qword_255B47DC8);
    v38 = sub_22ABDE7EC();
    v39 = sub_22ABDF4C4();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_22A999000, v38, v39, "Reached the minimum allowed step size.", v40, 2u);
      MEMORY[0x22E2E4E64](v40, -1, -1);
    }

    v52 = v45;
    v53 = AssociatedTypeWitness;
    v54 = v51;
    v55 = v21;
  }
  type metadata accessor for LineSearch.LineSearchResult();
}

void sub_22AACE79C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[14];
  uint64_t AssociatedTypeWitness;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v36 = a2;
  v2 = *(_QWORD *)(a1 + 24);
  v38 = *(_QWORD *)(a1 + 16);
  v39 = v2;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v44 = *(_QWORD *)(AssociatedConformanceWitness + 16);
  v32 = *(_QWORD *)(v44 + 16);
  v43 = *(_QWORD *)(v32 + 8);
  v31 = *(_QWORD *)(v43 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v29[13] = (char *)v29 - v4;
  v40 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  v5 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v5);
  v29[8] = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = swift_checkMetadataState();
  MEMORY[0x24BDAC7A8](v8);
  v29[7] = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v29[11] = (char *)v29 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v29[10] = (char *)v29 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v33 = (char *)v29 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v34 = (char *)v29 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v41 = (char *)v29 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v37 = (char *)v29 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v35 = (char *)v29 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v42 = (char *)v29 - v25;
  MEMORY[0x24BDAC7A8](v26);
  MEMORY[0x24BDAC7A8](v27);
  v45 = v38;
  v46 = v28;
  v47 = v39;
  v48 = AssociatedConformanceWitness;
  type metadata accessor for LineSearch.LineSearchEvaluation();
}

uint64_t sub_22AACEAAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(v10 - 176) = a1;
  v11 = v8 + *(int *)(a1 + 56);
  *(_QWORD *)(v10 - 192) = v4;
  v12 = *(int *)(v4 + 92);
  *(_QWORD *)(v10 - 288) = v1;
  v13 = *(_QWORD *)(*(_QWORD *)(v10 - 136) + 8);
  *(_QWORD *)(v10 - 184) = v1 + v12;
  *(_QWORD *)(v10 - 168) = v13;
  sub_22ABDFAF4();
  *(_QWORD *)(v10 - 224) = v11;
  sub_22ABDF308();
  *(_QWORD *)(v10 - 256) = v7;
  v14 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v14(v6, v2);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 312) = v5;
  sub_22ABE0130();
  v16 = v3;
  v17 = v14;
  sub_22ABDFF20();
  v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 - 128) + 24) + 8);
  v19 = sub_22ABDEC3C();
  v17(v6, v2);
  v17(v9, v2);
  if ((v19 & 1) == 0)
  {
    *(_QWORD *)(v10 - 376) = AssociatedConformanceWitness;
    *(_QWORD *)(v10 - 360) = v16;
    v20 = *(int *)(*(_QWORD *)(v10 - 176) + 52);
    *(_QWORD *)(v10 - 344) = v8 + v20;
    *(_QWORD *)(v10 - 352) = *(_QWORD *)(v10 - 184) + v20;
    sub_22ABDFAF4();
    *(_QWORD *)(v10 - 368) = v8;
    sub_22ABDFAF4();
    sub_22ABDEB88();
    v17(v6, v2);
    v17(v9, v2);
    swift_getAssociatedConformanceWitness();
    sub_22ABE013C();
    v21 = *(_QWORD *)(v10 - 200);
    sub_22ABDFF20();
    sub_22ABDF308();
    v17(v21, v2);
    sub_22ABDFAE8();
    v17(v6, v2);
    v22 = *(_QWORD *)(v10 - 216);
    sub_22ABDFAE8();
    v17(v9, v2);
    sub_22ABE0154();
    sub_22ABE0154();
    v23 = *(_QWORD *)(v10 - 232);
    sub_22ABE0154();
    sub_22ABE0160();
    v17(v23, v2);
    v17(v21, v2);
    sub_22ABE0160();
    v17(v6, v2);
    v17(v9, v2);
    *(_QWORD *)(v10 - 336) = v18;
    v24 = sub_22ABDEC24();
    v25 = *(_QWORD *)(v10 - 144);
    *(_QWORD *)(v10 - 176) = v9;
    *(_QWORD *)(v10 - 384) = v6;
    if ((v24 & 1) != 0)
    {
      v26 = *(_QWORD *)(v10 - 192);
      *(_BYTE *)(*(_QWORD *)(v10 - 288) + *(int *)(v26 + 104)) = 1;
      sub_22AACF330(v22, *(_QWORD *)(v10 - 152), v25, v26, *(_QWORD *)(v10 - 240));
    }
    v27 = sub_22ABDEBAC();
    if (((sub_22ABDEBAC() ^ v27) & 1) == 0)
    {
      v28 = *(_QWORD *)(v10 - 176);
      sub_22ABE0154();
      sub_22ABE0154();
      v29 = sub_22ABDEC30();
      v17(v6, v2);
      v17(v28, v2);
      v30 = *(_QWORD *)(v10 - 240);
      if ((v29 & 1) != 0)
        sub_22AAD05E4(v22, *(_QWORD *)(v10 - 192), v30);
      sub_22AAD11D4(*(_QWORD *)(v10 - 192), v30);
      sub_22AAD1AD8();
    }
    v31 = *(_QWORD *)(v10 - 192);
    *(_BYTE *)(*(_QWORD *)(v10 - 288) + *(int *)(v31 + 104)) = 1;
    sub_22AACFDF0(v22, *(_QWORD *)(v10 - 152), v31, *(_QWORD *)(v10 - 240));
  }
  return __swift_storeEnumTagSinglePayload(*(_QWORD *)(v10 - 208), 1, 1, v2);
}

void sub_22AACF330(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t AssociatedTypeWitness;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v53 = a3;
  v55 = a5;
  v67 = a4;
  v7 = *(_QWORD *)(a4 + 16);
  v58 = *(_QWORD *)(a4 + 24);
  v48 = v7;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = *(_QWORD *)(AssociatedConformanceWitness + 16);
  v10 = AssociatedConformanceWitness;
  v47 = AssociatedConformanceWitness;
  v56 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(*(_QWORD *)(v56 + 8) + 16);
  v68 = *(_QWORD *)(v56 + 8);
  v43 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v41 = (char *)&v41 - v12;
  v52 = *(_QWORD *)(v10 + 8);
  v51 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v51);
  v50 = (char *)&v41 - v13;
  v14 = swift_checkMetadataState();
  v69 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v61 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v63 = (char *)&v41 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v70 = (char *)&v41 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v62 = (char *)&v41 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v64 = (char *)&v41 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v65 = (char *)&v41 - v25;
  MEMORY[0x24BDAC7A8](v26);
  v46 = (char *)&v41 - v27;
  MEMORY[0x24BDAC7A8](v28);
  v45 = (char *)&v41 - v29;
  MEMORY[0x24BDAC7A8](v30);
  v59 = (char *)&v41 - v31;
  MEMORY[0x24BDAC7A8](v32);
  MEMORY[0x24BDAC7A8](v33);
  MEMORY[0x24BDAC7A8](v34);
  v71 = (char *)&v41 - v35;
  MEMORY[0x24BDAC7A8](v36);
  v60 = (char *)&v41 - v37;
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v41 - v39;
  v49 = a1;
  v44 = a2;
  sub_22ABDEB88();
  v54 = v40;
  sub_22ABDF308();
  v66 = v57 + *(int *)(v67 + 84);
  v72 = v48;
  v73 = v14;
  v74 = v58;
  v75 = v47;
  type metadata accessor for LineSearch.LineSearchEvaluation();
}

uint64_t sub_22AACF708(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v10 = *(_QWORD *)(v8 - 336);
  *(_QWORD *)(v8 - 232) = v2 + *(int *)(a1 + 56);
  sub_22ABDEB88();
  v11 = v7 + *(int *)(v4 + 92);
  *(_QWORD *)(v8 - 160) = v11;
  v12 = *(_QWORD *)(v8 - 328);
  *(_QWORD *)(v8 - 320) = v11 + *(int *)(a1 + 56);
  sub_22ABDEB88();
  v13 = *(_QWORD *)(v8 - 224);
  sub_22ABDF308();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 144) + 8);
  v14(v12, v3);
  v14(v10, v3);
  sub_22ABDFAF4();
  v14(v13, v3);
  sub_22ABDEB7C();
  v14(v1, v3);
  sub_22ABDF308();
  v14(v5, v3);
  *(_QWORD *)(v8 - 240) = v6;
  v15 = *(_QWORD *)(v8 - 168);
  *(_QWORD *)(v8 - 312) = *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8);
  if ((sub_22ABDEC30() & 1) != 0)
  {
    v16 = *(_QWORD *)(v8 - 128);
    sub_22ABDF854();
    v14(v16, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 144) + 32))(v16, v5, v3);
  }
  sub_22ABDFAF4();
  sub_22ABDFAE8();
  v14(v5, v3);
  sub_22ABDFAF4();
  sub_22ABDFAE8();
  v14(v1, v3);
  sub_22ABDFAE8();
  v14(v5, v3);
  sub_22ABDEB88();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 144) + 16);
  *(_QWORD *)(v8 - 304) = v17;
  v17(v5, v15, v3);
  v18 = *(_QWORD *)(v8 - 224);
  sub_22ABDFAF4();
  sub_22ABDF308();
  v14(v18, v3);
  sub_22ABDFAE8();
  v14(v1, v3);
  v14(v5, v3);
  sub_22ABDFAE8();
  sub_22ABDEB88();
  v14(v1, v3);
  swift_getAssociatedConformanceWitness();
  sub_22ABE0130();
  sub_22ABDFF20();
  sub_22ABDEB88();
  v14(v1, v3);
  v14(v5, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 - 304))(v5, *(_QWORD *)(v8 - 168), v3);
  sub_22ABDFAF4();
  sub_22ABDF308();
  v14(v18, v3);
  sub_22ABDFAE8();
  v14(v1, v3);
  v14(v5, v3);
  sub_22ABDFAF4();
  sub_22ABE0154();
  v14(v1, v3);
  sub_22ABDFAF4();
  sub_22ABE0154();
  v14(v18, v3);
  v19 = sub_22ABDEC30();
  v14(v1, v3);
  v14(v5, v3);
  if ((v19 & 1) != 0)
  {
    v14(*(_QWORD *)(v8 - 208), v3);
    v14(*(_QWORD *)(v8 - 192), v3);
    v14(*(_QWORD *)(v8 - 200), v3);
    v14(*(_QWORD *)(v8 - 184), v3);
    v14(*(_QWORD *)(v8 - 176), v3);
    v14(*(_QWORD *)(v8 - 128), v3);
    v14(*(_QWORD *)(v8 - 216), v3);
    v14(*(_QWORD *)(v8 - 264), v3);
    return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v8 - 144) + 32))(*(_QWORD *)(v8 - 256), *(_QWORD *)(v8 - 136), v3);
  }
  else
  {
    v21 = *(_QWORD *)(v8 - 208);
    v22 = *(_QWORD *)(v8 - 136);
    sub_22ABDFAE8();
    swift_getAssociatedConformanceWitness();
    sub_22ABE013C();
    sub_22ABDFF20();
    sub_22ABDEB88();
    v14(v1, v3);
    v14(v5, v3);
    v14(v21, v3);
    v14(*(_QWORD *)(v8 - 192), v3);
    v14(v22, v3);
    v14(*(_QWORD *)(v8 - 200), v3);
    v14(*(_QWORD *)(v8 - 184), v3);
    v14(*(_QWORD *)(v8 - 176), v3);
    v14(*(_QWORD *)(v8 - 128), v3);
    v14(*(_QWORD *)(v8 - 216), v3);
    return ((uint64_t (*)(_QWORD, uint64_t))v14)(*(_QWORD *)(v8 - 264), v3);
  }
}

void sub_22AACFDF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t AssociatedConformanceWitness;
  uint64_t v36;
  _QWORD v37[8];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v39 = a2;
  v37[7] = a4;
  v40 = a3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v53 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v48 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)v37 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v51 = (char *)v37 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v46 = (char *)v37 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v45 = (char *)v37 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v44 = (char *)v37 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v37[4] = (char *)v37 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v37[3] = (char *)v37 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v42 = (char *)v37 - v24;
  MEMORY[0x24BDAC7A8](v25);
  v37[2] = (char *)v37 - v26;
  MEMORY[0x24BDAC7A8](v27);
  MEMORY[0x24BDAC7A8](v28);
  v52 = (char *)v37 - v29;
  MEMORY[0x24BDAC7A8](v30);
  v43 = (char *)v37 - v31;
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v37 - v33;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v36 = *(_QWORD *)(AssociatedConformanceWitness + 16);
  v37[5] = a1;
  sub_22ABDEB88();
  v38 = *(_QWORD *)(v36 + 16);
  v50 = *(_QWORD *)(v38 + 8);
  v37[6] = v34;
  sub_22ABDF308();
  v49 = v41 + *(int *)(v40 + 84);
  v54 = v5;
  v55 = AssociatedTypeWitness;
  v56 = v6;
  v57 = AssociatedConformanceWitness;
  type metadata accessor for LineSearch.LineSearchEvaluation();
}

uint64_t sub_22AAD00C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v9 = *(_QWORD *)(v7 - 296);
  *(_QWORD *)(v7 - 224) = v1 + *(int *)(a1 + 56);
  sub_22ABDEB88();
  v10 = *(int *)(v5 + 92);
  v11 = *(_QWORD *)(v7 - 304);
  *(_QWORD *)(v7 - 240) = v3 + v10;
  v12 = v3 + v10 + *(int *)(a1 + 56);
  v13 = *(_QWORD *)(v7 - 288);
  *(_QWORD *)(v7 - 232) = v12;
  sub_22ABDEB88();
  v14 = *(_QWORD *)(v7 - 216);
  sub_22ABDF308();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 128) + 8);
  v15(v13, v2);
  v15(v9, v2);
  sub_22ABDFAF4();
  v15(v14, v2);
  sub_22ABDEB7C();
  v15(v11, v2);
  sub_22ABDF308();
  v15(v6, v2);
  *(_QWORD *)(v7 - 248) = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 8);
  if ((sub_22ABDEC24() & 1) != 0)
  {
    v16 = *(_QWORD *)(v7 - 136);
    sub_22ABDF854();
    v15(v16, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 128) + 32))(v16, v6, v2);
  }
  sub_22ABDFAF4();
  sub_22ABDFAE8();
  v15(v6, v2);
  sub_22ABDFAF4();
  sub_22ABDFAE8();
  v15(v11, v2);
  sub_22ABDFAE8();
  v15(v6, v2);
  *(_QWORD *)(v7 - 312) = v4;
  sub_22ABDEB88();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 128) + 16);
  *(_QWORD *)(v7 - 280) = v17;
  v18 = *(_QWORD *)(v7 - 240);
  v17(v6, v18, v2);
  v19 = *(_QWORD *)(v7 - 216);
  sub_22ABDFAF4();
  sub_22ABDF308();
  v15(v19, v2);
  sub_22ABDFAE8();
  v15(v11, v2);
  v15(v6, v2);
  sub_22ABDFAF4();
  sub_22ABDEB88();
  v15(v6, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 280))(v6, v18, v2);
  sub_22ABDFAF4();
  sub_22ABDF308();
  v15(v19, v2);
  sub_22ABDFAE8();
  v15(v11, v2);
  v15(v6, v2);
  sub_22ABDFAF4();
  sub_22ABE0154();
  v15(v11, v2);
  v20 = *(_QWORD *)(v7 - 168);
  sub_22ABDFAF4();
  sub_22ABE0154();
  v15(v19, v2);
  v21 = sub_22ABDEC24();
  v15(v11, v2);
  v15(v6, v2);
  v15(*(_QWORD *)(v7 - 176), v2);
  v15(*(_QWORD *)(v7 - 184), v2);
  v15(*(_QWORD *)(v7 - 192), v2);
  v15(*(_QWORD *)(v7 - 200), v2);
  v15(*(_QWORD *)(v7 - 136), v2);
  v15(*(_QWORD *)(v7 - 208), v2);
  v15(*(_QWORD *)(v7 - 272), v2);
  if ((v21 & 1) != 0)
    v22 = v20;
  else
    v22 = *(_QWORD *)(v7 - 144);
  if ((v21 & 1) != 0)
    v23 = *(_QWORD *)(v7 - 144);
  else
    v23 = v20;
  v15(v22, v2);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 128) + 32))(*(_QWORD *)(v7 - 264), v23, v2);
}

void sub_22AAD05E4(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD v44[12];
  uint64_t AssociatedTypeWitness;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v44[1] = a3;
  v55 = a2;
  v4 = *(_QWORD *)(a2 + 16);
  v63 = *(_QWORD *)(a2 + 24);
  v59 = v4;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  v7 = AssociatedConformanceWitness;
  v47 = AssociatedConformanceWitness;
  v44[8] = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v44[11] = (char *)v44 - v8;
  v64 = *(_QWORD *)(v7 + 16);
  v51 = *(_QWORD *)(v64 + 16);
  v9 = *(_QWORD *)(v51 + 8);
  v58 = *(_QWORD *)(v9 + 16);
  v61 = v9;
  v10 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v10);
  v46 = (char *)v44 - v11;
  v12 = swift_checkMetadataState();
  v62 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v60 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v52 = (char *)v44 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v57 = (char *)v44 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v50 = (char *)v44 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v49 = (char *)v44 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v48 = (char *)v44 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v44[10] = (char *)v44 - v25;
  MEMORY[0x24BDAC7A8](v26);
  v44[3] = (char *)v44 - v27;
  MEMORY[0x24BDAC7A8](v28);
  v44[4] = (char *)v44 - v29;
  MEMORY[0x24BDAC7A8](v30);
  v44[5] = (char *)v44 - v31;
  MEMORY[0x24BDAC7A8](v32);
  v53 = (char *)v44 - v33;
  MEMORY[0x24BDAC7A8](v34);
  v65 = (char *)v44 - v35;
  MEMORY[0x24BDAC7A8](v36);
  v44[6] = (char *)v44 - v37;
  MEMORY[0x24BDAC7A8](v38);
  v54 = (char *)v44 - v39;
  MEMORY[0x24BDAC7A8](v40);
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)v44 - v42;
  v44[7] = a1;
  sub_22ABDEB88();
  v44[9] = v43;
  sub_22ABDF308();
  swift_getAssociatedConformanceWitness();
  sub_22ABE013C();
  sub_22ABDFF20();
  v58 = v56 + *(int *)(v55 + 84);
  v66 = v59;
  v67 = v12;
  v68 = v63;
  v69 = v47;
  type metadata accessor for LineSearch.LineSearchEvaluation();
}

uint64_t sub_22AAD0A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v9 = *(_QWORD *)(v7 - 360);
  *(_QWORD *)(v7 - 272) = v1 + *(int *)(a1 + 56);
  *(_QWORD *)(v7 - 368) = v6;
  v11 = *(_QWORD *)(v7 - 136);
  v10 = *(_QWORD *)(v7 - 128);
  sub_22ABDEB88();
  v12 = v4 + *(int *)(v5 + 92);
  *(_QWORD *)(v7 - 176) = v12;
  v13 = *(_QWORD *)(v7 - 304);
  *(_QWORD *)(v7 - 280) = v12 + *(int *)(a1 + 56);
  v14 = v11;
  sub_22ABDEB88();
  v15 = *(_QWORD *)(v7 - 352);
  v16 = *(_QWORD *)(v7 - 160);
  sub_22ABDF308();
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 152) + 8);
  v17(v13, v2);
  v17(v9, v2);
  v18 = *(_QWORD *)(v16 + 8);
  v19 = *(_QWORD *)(v7 - 344);
  *(_QWORD *)(v7 - 304) = v3;
  sub_22ABDFAF4();
  v17(v15, v2);
  v20 = *(_QWORD *)(*(_QWORD *)(v14 + 24) + 8);
  v21 = *(_QWORD *)(v7 - 224);
  sub_22ABE0160();
  v22 = *(_QWORD *)(v7 - 216);
  v17(v19, v2);
  v17(v21, v2);
  v23 = *(_QWORD *)(v7 - 336);
  sub_22ABDEB7C();
  v17(v10, v2);
  sub_22ABDF308();
  v17(v23, v2);
  *(_QWORD *)(v7 - 144) = v20;
  if ((sub_22ABDEC24() & 1) != 0)
  {
    sub_22ABDF854();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 152) + 40))(v22, v23, v2);
  }
  sub_22ABDFAF4();
  sub_22ABDFAE8();
  v17(v23, v2);
  v24 = *(_QWORD *)(v7 - 128);
  sub_22ABDFAF4();
  sub_22ABDFAE8();
  v25 = v24;
  v26 = v23;
  v17(v25, v2);
  *(_QWORD *)(v7 - 328) = v18;
  sub_22ABDFAE8();
  v17(v23, v2);
  sub_22ABDEB88();
  swift_getAssociatedConformanceWitness();
  sub_22ABE0130();
  sub_22ABDFF20();
  v27 = sub_22ABDEC30();
  v17(v23, v2);
  if ((v27 & 1) == 0)
    goto LABEL_6;
  sub_22ABE0154();
  sub_22ABE0130();
  v28 = *(_QWORD *)(v7 - 128);
  sub_22ABDFF20();
  v29 = sub_22ABDEC48();
  v30 = v28;
  v26 = v23;
  v17(v30, v2);
  v17(v23, v2);
  if ((v29 & 1) != 0)
  {
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 152) + 16);
    v31(v23, *(_QWORD *)(v7 - 176), v2);
    v32 = *(_QWORD *)(v7 - 224);
    sub_22ABDFAF4();
    v33 = *(_QWORD *)(v7 - 128);
    sub_22ABDF308();
    v17(v32, v2);
    sub_22ABDFAE8();
    v34 = v33;
    v26 = v23;
    v17(v34, v2);
    v17(v23, v2);
  }
  else
  {
LABEL_6:
    v35 = sub_22ABDEC24();
    v36 = *(_QWORD *)(v7 - 200);
    v37 = *(int *)(*(_QWORD *)(v7 - 208) + 96);
    v38 = *(_QWORD *)(v7 - 152);
    if ((v35 & 1) != 0)
    {
      v39 = v36 + v37 + *(int *)(sub_22ABDECCC() + 36);
      v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
      v31(*(_QWORD *)(v7 - 192), v39, v2);
    }
    else
    {
      v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
      v31(*(_QWORD *)(v7 - 192), v36 + v37, v2);
    }
  }
  sub_22ABDFAF4();
  sub_22ABDEB88();
  v17(v26, v2);
  v31(v26, *(_QWORD *)(v7 - 176), v2);
  v40 = *(_QWORD *)(v7 - 224);
  sub_22ABDFAF4();
  v41 = v26;
  v42 = *(_QWORD *)(v7 - 128);
  sub_22ABDF308();
  v17(v40, v2);
  sub_22ABDFAE8();
  v17(v42, v2);
  v17(v41, v2);
  *(_DWORD *)(v7 - 136) = *(unsigned __int8 *)(*(_QWORD *)(v7 - 200) + *(int *)(*(_QWORD *)(v7 - 208) + 104));
  sub_22ABDFAF4();
  sub_22ABE0154();
  v17(v42, v2);
  sub_22ABDFAF4();
  sub_22ABE0154();
  v17(v40, v2);
  if (*(_DWORD *)(v7 - 136) == 1)
    v43 = sub_22ABDEC30();
  else
    v43 = sub_22ABDEC24();
  v44 = v43;
  v45 = *(_QWORD *)(v7 - 376);
  v46 = *(_QWORD *)(v7 - 192);
  v48 = *(_QWORD *)(v7 - 256);
  v47 = *(_QWORD *)(v7 - 248);
  v49 = *(_QWORD *)(v7 - 264);
  v17(*(_QWORD *)(v7 - 128), v2);
  v17(v41, v2);
  v17(*(_QWORD *)(v7 - 232), v2);
  v17(v47, v2);
  v17(v48, v2);
  v17(v49, v2);
  v17(*(_QWORD *)(v7 - 216), v2);
  v17(*(_QWORD *)(v7 - 304), v2);
  v17(*(_QWORD *)(v7 - 312), v2);
  if ((v44 & 1) != 0)
    v50 = *(_QWORD *)(v7 - 168);
  else
    v50 = v46;
  if ((v44 & 1) != 0)
    v51 = v46;
  else
    v51 = *(_QWORD *)(v7 - 168);
  v17(v50, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 152) + 32))(v45, v51, v2);
}

uint64_t sub_22AAD11D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[4];
  uint64_t v35;
  uint64_t AssociatedConformanceWitness;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v45 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  swift_getAssociatedTypeWitness();
  v35 = v4;
  v43 = v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v49 = *(_QWORD *)(AssociatedConformanceWitness + 16);
  v40 = *(_QWORD *)(v49 + 16);
  v47 = *(_QWORD *)(v40 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7 = swift_checkMetadataState();
  MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8]((char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v48 = (char *)v34 - v9;
  MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  if (*(_BYTE *)(v2 + *(int *)(a1 + 104)) == 1)
  {
    v34[2] = v19;
    v34[3] = v22;
    v38 = v25;
    v39 = v24;
    v37 = v26;
    v46 = (char *)v34 - v23;
    v41 = v20;
    v44 = v21;
    swift_getAssociatedConformanceWitness();
    sub_22ABE013C();
    sub_22ABDFF20();
    v42 = v2 + *(int *)(a1 + 92);
    v50 = v43;
    v51 = v7;
    v52 = v35;
    v53 = AssociatedConformanceWitness;
    type metadata accessor for LineSearch.LineSearchEvaluation();
  }
  v27 = v20;
  v28 = v2;
  v29 = sub_22ABDEC24();
  v30 = *(int *)(a1 + 96);
  v31 = v2 + v30;
  if ((v29 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v45, v28 + v30, v7);
  v32 = v31 + *(int *)(sub_22ABDECCC() + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v45, v32, v7);
}

void sub_22AAD1AD8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for LineSearch.LineSearchEvaluation();
}

uint64_t sub_22AAD1B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(int *)(a1 + 52);
  v7 = v2 + v6;
  v8 = v3 + *(int *)(v4 + 84);
  v9 = v8 + v6;
  if ((sub_22ABDEC24() & 1) != 0)
  {
    v10 = v3 + *(int *)(v4 + 88);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 24);
    v11(v10, v2, v1);
    v11(v10 + *(int *)(a1 + 52), v7, v1);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v10 + *(int *)(a1 + 56), v2 + *(int *)(a1 + 56), v1);
  }
  else
  {
    v18 = v2 + *(int *)(a1 + 56);
    v19 = v9;
    v13 = sub_22ABDEBAC();
    v14 = v8 + *(int *)(a1 + 56);
    if (((sub_22ABDEBAC() ^ v13) & 1) != 0)
    {
      v17 = v3 + *(int *)(v4 + 88);
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 24);
      v15(v17, v8, v1);
      v16 = v19;
      v15(v17 + *(int *)(a1 + 52), v19, v1);
      v15(v17 + *(int *)(a1 + 56), v14, v1);
    }
    else
    {
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 24);
      v16 = v19;
    }
    v15(v8, v2, v1);
    v15(v16, v7, v1);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(v14, v18, v1);
  }
}

void type metadata accessor for LineSearch.LineSearchEvaluation()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t type metadata accessor for LineSearch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LineSearch);
}

uint64_t sub_22AAD1CEC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22AAD1D5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v18;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~v9;
  v11 = v7 + v8;
  v12 = ((v11 + (v11 & ~v9)) & ~v9) + v7;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, *(_QWORD *)(a3 + 24));
    v18 = ((unint64_t)a2 + v11) & v10;
    v17((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)v18, v5);
    v17((uint64_t *)((v11 + (((unint64_t)v4 + v11) & v10)) & v10), (uint64_t *)((v11 + v18) & v10), v5);
  }
  return v4;
}

uint64_t sub_22AAD1E40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(v3 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(a1, v3);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  v8 = (v5 + v6 + a1) & ~v6;
  v10(v8, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)((v7 + v8) & ~v6, v3);
}

uint64_t sub_22AAD1EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, (v9 + v10) & ~v8, v5);
  return a1;
}

uint64_t sub_22AAD1F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, (v9 + v10) & ~v8, v5);
  return a1;
}

uint64_t sub_22AAD1FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, (v9 + v10) & ~v8, v5);
  return a1;
}

uint64_t sub_22AAD207C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, (v9 + v10) & ~v8, v5);
  return a1;
}

uint64_t sub_22AAD2110(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((*(_QWORD *)(v5 + 64)
       + *(unsigned __int8 *)(v5 + 80)
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AAD21D8 + 4 * byte_22ABF83E0[(v8 - 1)]))();
}

void sub_22AAD2224(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64)
       + *(unsigned __int8 *)(v6 + 80)
       + ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_22AAD23E4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22AAD23EC()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    v2 = swift_checkMetadataState();
    if (v3 <= 0x3F)
    {
      swift_getAssociatedConformanceWitness();
      type metadata accessor for LineSearch.LineSearchEvaluation();
    }
    return v2;
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_22AAD25D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v5 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v8 | 7;
  if ((v12 | v11) != 7)
    goto LABEL_5;
  if (((*(_DWORD *)(v10 + 80) | v8) & 0x100000) != 0)
    goto LABEL_5;
  v13 = AssociatedTypeWitness;
  v14 = *(_QWORD *)(v7 + 64);
  v15 = v14 + v8;
  v16 = v15 + (v15 & ~(unint64_t)v8);
  v17 = v15 + (v16 & ~(unint64_t)v8);
  v18 = v14 + 7;
  v19 = v11 + 8;
  v20 = v8 + 8;
  if ((((v14 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + ((v14
       + v12
       + ((v15
         + ((v15 + ((v8 + 48) & ~(unint64_t)v8)) & ~(unint64_t)v8)) & ~(unint64_t)v8)
       + 1
       + ((v12
         + 3
         + v14
         + ((v16
           + ((v17
             + ((v17
               + ((v17
                 + ((v15
                   + ((v15
                     + ((v20
                       + ((v14
                         + 7
                         + ((v20
                           + ((((*(_QWORD *)(v10 + 64)
                               + 7
                               + ((v11
                                 + 8
                                 + ((v14
                                   + 7
                                   + ((v15 + (v17 & ~(unint64_t)v8)) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v8)) & ~(unint64_t)v8)) & ~(unint64_t)v8)) & ~(unint64_t)v8)) & ~(unint64_t)v8)) & ~(unint64_t)v8)) & ~(unint64_t)v8)) & ~v12)) & ~v12)
     + 8 > 0x18)
  {
LABEL_5:
    v74 = *a2;
    *a1 = *a2;
    v66 = (uint64_t *)(v74 + (((v12 | v11) + 16) & ~(v12 | v11)));
    swift_retain();
  }
  else
  {
    v79 = v5;
    v80 = v15 + (v16 & ~(unint64_t)v8);
    v21 = ~(unint64_t)v8;
    v76 = v10;
    v77 = ~v11;
    v86 = *(_QWORD *)(v7 + 64);
    v87 = ~v12;
    v22 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16);
    v78 = *(_QWORD *)(v10 + 64) + 7;
    v82 = v12 + 3;
    v84 = v14 + v12 + ((v15 + ((v15 + ((v8 + 48) & v21)) & v21)) & v21) + 1;
    v81 = v15 + (v15 & v21);
    v22(a1, a2, v13);
    v85 = a1;
    v23 = ((unint64_t)a1 + v15) & ~v9;
    v24 = ((unint64_t)a2 + v15) & ~v9;
    v22((uint64_t *)v23, (uint64_t *)v24, v13);
    v25 = (v15 + v23) & ~v9;
    v26 = (v15 + v24) & ~v9;
    v22((uint64_t *)v25, (uint64_t *)v26, v13);
    v27 = (v15 + v25) & ~v9;
    v28 = (v15 + v26) & ~v9;
    v22((uint64_t *)v27, (uint64_t *)v28, v13);
    v29 = (v15 + v27) & ~v9;
    v30 = (v15 + v28) & ~v9;
    v22((uint64_t *)v29, (uint64_t *)v30, v13);
    v31 = (_QWORD *)((v18 + v29) & 0xFFFFFFFFFFFFFFF8);
    v32 = (_QWORD *)((v18 + v30) & 0xFFFFFFFFFFFFFFF8);
    *v31 = *v32;
    v33 = ((unint64_t)v31 + v19) & v77;
    v34 = ((unint64_t)v32 + v19) & v77;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v76 + 16))(v33, v34, v79);
    v35 = (_QWORD *)((v78 + v33) & 0xFFFFFFFFFFFFF8);
    v36 = (_QWORD *)((v78 + v34) & 0xFFFFFFFFFFFFF8);
    *v35 = *v36;
    v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
    v38 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v37 = *v38;
    v39 = ((unint64_t)v37 + v20) & ~v9;
    v40 = ((unint64_t)v38 + v20) & ~v9;
    swift_retain();
    swift_retain();
    v22((uint64_t *)v39, (uint64_t *)v40, v13);
    v41 = (_QWORD *)((v18 + v39) & 0xFFFFFFFFFFFFFFF8);
    v42 = (_QWORD *)((v18 + v40) & 0xFFFFFFFFFFFFFFF8);
    *v41 = *v42;
    v43 = ((unint64_t)v41 + v20) & ~v9;
    v44 = ((unint64_t)v42 + v20) & ~v9;
    swift_retain();
    v22((uint64_t *)v43, (uint64_t *)v44, v13);
    v45 = (v15 + v43) & ~v9;
    v46 = (v15 + v44) & ~v9;
    v22((uint64_t *)v45, (uint64_t *)v46, v13);
    v47 = (v15 + v45) & ~v9;
    v48 = (v15 + v46) & ~v9;
    v22((uint64_t *)v47, (uint64_t *)v48, v13);
    v22((uint64_t *)((v15 + v47) & v21), (uint64_t *)((v15 + v48) & v21), v13);
    v22((uint64_t *)((v15 + ((v15 + v47) & v21)) & v21), (uint64_t *)((v15 + ((v15 + v48) & ~v9)) & v21), v13);
    v49 = (v80 + v47) & ~v9;
    v50 = (v80 + v48) & ~v9;
    v22((uint64_t *)v49, (uint64_t *)v50, v13);
    v22((uint64_t *)((v15 + v49) & v21), (uint64_t *)((v15 + v50) & v21), v13);
    v22((uint64_t *)((v15 + ((v15 + v49) & v21)) & v21), (uint64_t *)((v15 + ((v15 + v50) & ~v9)) & v21), v13);
    v51 = (v80 + v49) & ~v9;
    v52 = (v80 + v50) & ~v9;
    v22((uint64_t *)v51, (uint64_t *)v52, v13);
    v22((uint64_t *)((v15 + v51) & v21), (uint64_t *)((v15 + v52) & v21), v13);
    v22((uint64_t *)((v15 + ((v15 + v51) & v21)) & v21), (uint64_t *)((v15 + ((v15 + v52) & ~v9)) & v21), v13);
    v53 = (v80 + v51) & ~v9;
    v54 = (v80 + v52) & ~v9;
    v22((uint64_t *)v53, (uint64_t *)v54, v13);
    v22((uint64_t *)((v15 + v53) & v21), (uint64_t *)((v15 + v54) & v21), v13);
    v55 = (v81 + v53) & ~v9;
    v56 = (v81 + v54) & ~v9;
    v22((uint64_t *)v55, (uint64_t *)v56, v13);
    v57 = (_BYTE *)(v55 + v86);
    *v57 = *(_BYTE *)(v56 + v86);
    v57[1] = *(_BYTE *)(v56 + v86 + 1);
    v57[2] = *(_BYTE *)(v56 + v86 + 2);
    v58 = (_QWORD *)((v82 + v55 + v86) & v87);
    v83 = (_QWORD *)((v82 + v56 + v86) & v87);
    *v58 = *v83;
    v59 = (_QWORD *)(((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFF8);
    v60 = (_QWORD *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFF8);
    *v60 = *v59;
    v61 = ((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8;
    v62 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *(_QWORD *)(v61 + 8) = *(_QWORD *)(v62 + 8);
    *(_BYTE *)(v61 + 16) = *(_BYTE *)(v62 + 16);
    *(_QWORD *)(v61 + 24) = *(_QWORD *)(v62 + 24);
    v63 = (v9 + 32 + v61) & ~v9;
    v64 = (v9 + 32 + v62) & ~v9;
    swift_retain();
    swift_retain();
    swift_retain();
    v22((uint64_t *)v63, (uint64_t *)v64, v13);
    v65 = v15 + v63;
    v66 = v85;
    v67 = v65 & ~v9;
    v22((uint64_t *)(v65 & v21), (uint64_t *)((v15 + v64) & v21), v13);
    v68 = (v15 + v67) & ~v9;
    v69 = (v15 + ((v15 + v64) & ~v9)) & ~v9;
    v22((uint64_t *)v68, (uint64_t *)v69, v13);
    *(_BYTE *)(v68 + v86) = *(_BYTE *)(v69 + v86);
    v70 = ((unint64_t)v58 + v84) & v87;
    v71 = ((unint64_t)v83 + v84) & v87;
    v22((uint64_t *)v70, (uint64_t *)v71, v13);
    *(_BYTE *)(v70 + v86) = *(_BYTE *)(v71 + v86);
    v72 = (v70 + v86) & 0xFFFFFFFFFFFFFFF8;
    v73 = (v71 + v86) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v72 + 8) = *(_QWORD *)(v73 + 8);
    *(_QWORD *)((v72 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v73 + 23) & 0xFFFFFFFFFFFFF8);
  }
  return v66;
}

uint64_t sub_22AAD2C14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v31)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v31 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v31(a1, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = v6 + v7;
  v9 = (v6 + v7 + a1) & ~v7;
  v31(v9, AssociatedTypeWitness);
  v10 = (v6 + v7 + v9) & ~v7;
  v31(v10, AssociatedTypeWitness);
  v11 = (v6 + v7 + v10) & ~v7;
  v31(v11, AssociatedTypeWitness);
  v12 = (v6 + v7 + v11) & ~v7;
  v31(v12, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v3 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + ((v6 + 7 + v12) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v14, v3);
  v15 = ((*(_QWORD *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  swift_release();
  v16 = (v7 + 8 + (v15 & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  v31(v16, AssociatedTypeWitness);
  swift_release();
  v17 = (v7 + 8 + ((v6 + 7 + v16) & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  v31(v17, AssociatedTypeWitness);
  v18 = (v6 + v7 + v17) & ~v7;
  v31(v18, AssociatedTypeWitness);
  v19 = (v6 + v7 + v18) & ~v7;
  v31(v19, AssociatedTypeWitness);
  v31((v6 + v7 + v19) & ~v7, AssociatedTypeWitness);
  v31((v8 + ((v8 + v19) & ~v7)) & ~v7, AssociatedTypeWitness);
  v20 = v8 + (v8 & ~v7);
  v21 = v6 + v7 + (v20 & ~v7);
  v22 = (v21 + v19) & ~v7;
  v31(v22, AssociatedTypeWitness);
  v31((v6 + v7 + v22) & ~v7, AssociatedTypeWitness);
  v31((v6 + v7 + ((v6 + v7 + v22) & ~v7)) & ~v7, AssociatedTypeWitness);
  v23 = (v21 + v22) & ~v7;
  v31(v23, AssociatedTypeWitness);
  v31((v6 + v7 + v23) & ~v7, AssociatedTypeWitness);
  v31((v6 + v7 + ((v6 + v7 + v23) & ~v7)) & ~v7, AssociatedTypeWitness);
  v24 = (v21 + v23) & ~v7;
  v31(v24, AssociatedTypeWitness);
  v31((v6 + v7 + v24) & ~v7, AssociatedTypeWitness);
  v25 = (v20 + v24) & ~v7;
  v31(v25, AssociatedTypeWitness);
  v26 = (v7 | 7) + v6;
  v27 = (v26 + v25 + 3) & ~(v7 | 7);
  swift_release();
  swift_release();
  swift_release();
  v28 = (v7 + ((((v27 + 15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 32) & ~v7;
  v31(v28, AssociatedTypeWitness);
  v29 = (v8 + v28) & ~v7;
  v31(v29, AssociatedTypeWitness);
  v31((v8 + v29) & ~v7, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t, uint64_t))v31)((v26 + ((v8 + ((v8 + ((v7 + 48) & ~v7)) & ~v7)) & ~v7) + v27 + 1) & ~(v7 | 7), AssociatedTypeWitness);
}

uint64_t sub_22AAD2F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v68;
  uint64_t v70;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = v9 + v10;
  v12 = v9;
  v70 = v9;
  v13 = (v9 + v10 + a1) & ~v10;
  v14 = (v9 + v10 + a2) & ~v10;
  v8(v13, v14, AssociatedTypeWitness);
  v15 = (v11 + v13) & ~v10;
  v16 = (v11 + v14) & ~v10;
  v8(v15, v16, AssociatedTypeWitness);
  v17 = (v11 + v15) & ~v10;
  v18 = (v11 + v16) & ~v10;
  v8(v17, v18, AssociatedTypeWitness);
  v19 = (v11 + v17) & ~v10;
  v20 = (v11 + v18) & ~v10;
  v8(v19, v20, AssociatedTypeWitness);
  v12 += 7;
  v21 = (_QWORD *)((v12 + v19) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)((v12 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = *(_QWORD *)(v5 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v21 + v24 + 8) & ~v24;
  v26 = ((unint64_t)v22 + v24 + 8) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v25, v26, v5);
  v27 = *(_QWORD *)(v23 + 64) + 7;
  v28 = v27 + v25;
  v29 = (_QWORD *)((v27 + v26) & 0xFFFFFFFFFFFFFFF8);
  v28 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v28 = *v29;
  v30 = (_QWORD *)((v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = ((unint64_t)v30 + v10 + 8) & ~v10;
  v33 = ((unint64_t)v31 + v10 + 8) & ~v10;
  swift_retain();
  swift_retain();
  v8(v32, v33, AssociatedTypeWitness);
  v34 = (_QWORD *)((v12 + v32) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)((v12 + v33) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = ((unint64_t)v34 + v10 + 8) & ~v10;
  v37 = ((unint64_t)v35 + v10 + 8) & ~v10;
  swift_retain();
  v8(v36, v37, AssociatedTypeWitness);
  v38 = (v11 + v36) & ~v10;
  v39 = (v11 + v37) & ~v10;
  v8(v38, v39, AssociatedTypeWitness);
  v40 = (v11 + v38) & ~v10;
  v41 = (v11 + v39) & ~v10;
  v8(v40, v41, AssociatedTypeWitness);
  v8((v11 + v40) & ~v10, (v11 + v41) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v40) & ~v10)) & ~v10, (v11 + ((v11 + v41) & ~v10)) & ~v10, AssociatedTypeWitness);
  v42 = v11 + (v11 & ~v10);
  v43 = v11 + (v42 & ~v10);
  v44 = (v43 + v40) & ~v10;
  v45 = (v43 + v41) & ~v10;
  v8(v44, v45, AssociatedTypeWitness);
  v8((v11 + v44) & ~v10, (v11 + v45) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v44) & ~v10)) & ~v10, (v11 + ((v11 + v45) & ~v10)) & ~v10, AssociatedTypeWitness);
  v46 = (v43 + v44) & ~v10;
  v47 = (v43 + v45) & ~v10;
  v8(v46, v47, AssociatedTypeWitness);
  v8((v11 + v46) & ~v10, (v11 + v47) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v46) & ~v10)) & ~v10, (v11 + ((v11 + v47) & ~v10)) & ~v10, AssociatedTypeWitness);
  v48 = (v43 + v46) & ~v10;
  v49 = (v43 + v47) & ~v10;
  v8(v48, v49, AssociatedTypeWitness);
  v8((v11 + v48) & ~v10, (v11 + v49) & ~v10, AssociatedTypeWitness);
  v50 = (v42 + v48) & ~v10;
  v51 = (v42 + v49) & ~v10;
  v8(v50, v51, AssociatedTypeWitness);
  v52 = (_BYTE *)(v50 + v70);
  *v52 = *(_BYTE *)(v51 + v70);
  v52[1] = *(_BYTE *)(v51 + v70 + 1);
  v52[2] = *(_BYTE *)(v51 + v70 + 2);
  v53 = (v10 | 7) + 3;
  v54 = (_QWORD *)((v53 + v50 + v70) & ~(v10 | 7));
  v68 = (_QWORD *)((v53 + v51 + v70) & ~(v10 | 7));
  *v54 = *v68;
  v55 = (_QWORD *)(((unint64_t)v68 + 15) & 0xFFFFFFFFFFFFF8);
  v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFF8);
  *v56 = *v55;
  v57 = ((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8;
  v58 = ((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *(_QWORD *)(v57 + 8) = *(_QWORD *)(v58 + 8);
  *(_BYTE *)(v57 + 16) = *(_BYTE *)(v58 + 16);
  *(_QWORD *)(v57 + 24) = *(_QWORD *)(v58 + 24);
  v59 = (v10 + 32 + v57) & ~v10;
  v60 = (v10 + 32 + v58) & ~v10;
  swift_retain();
  swift_retain();
  swift_retain();
  v8(v59, v60, AssociatedTypeWitness);
  v8((v11 + v59) & ~v10, (v11 + v60) & ~v10, AssociatedTypeWitness);
  v61 = (v11 + ((v11 + v60) & ~v10)) & ~v10;
  v8((v11 + ((v11 + v59) & ~v10)) & ~v10, v61, AssociatedTypeWitness);
  *(_BYTE *)(((v11 + ((v11 + v59) & ~v10)) & ~v10) + v70) = *(_BYTE *)(v61 + v70);
  v62 = v70 + (v10 | 7) + ((v11 + ((v11 + ((v10 + 48) & ~v10)) & ~v10)) & ~v10) + 1;
  v63 = ((unint64_t)v54 + v62) & ~(v10 | 7);
  v64 = ((unint64_t)v68 + v62) & ~(v10 | 7);
  v8(v63, v64, AssociatedTypeWitness);
  *(_BYTE *)(v63 + v70) = *(_BYTE *)(v64 + v70);
  v65 = (v63 + v70) & 0xFFFFFFFFFFFFFFF8;
  v66 = (v64 + v70) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  *(_QWORD *)((v65 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v66 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AAD34A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v69;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = v9 + v10;
  v12 = v9;
  v69 = v9;
  v13 = (v9 + v10 + a1) & ~v10;
  v14 = (v9 + v10 + a2) & ~v10;
  v8(v13, v14, AssociatedTypeWitness);
  v15 = (v11 + v13) & ~v10;
  v16 = (v11 + v14) & ~v10;
  v8(v15, v16, AssociatedTypeWitness);
  v17 = (v11 + v15) & ~v10;
  v18 = (v11 + v16) & ~v10;
  v8(v17, v18, AssociatedTypeWitness);
  v19 = (v11 + v17) & ~v10;
  v20 = (v11 + v18) & ~v10;
  v8(v19, v20, AssociatedTypeWitness);
  v12 += 7;
  v21 = (_QWORD *)((v12 + v19) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)((v12 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = *(_QWORD *)(v5 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v21 + v24 + 8) & ~v24;
  v26 = ((unint64_t)v22 + v24 + 8) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 24))(v25, v26, v5);
  v27 = *(_QWORD *)(v23 + 64) + 7;
  v28 = (_QWORD *)((v27 + v25) & 0xFFFFFFFFFFFFFFF8);
  v29 = v27 + v26;
  v30 = (v29 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v28 = *(_QWORD *)(v29 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v31 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 &= 0xFFFFFFFFFFFFFFF8;
  *v31 = *(_QWORD *)v30;
  swift_retain();
  swift_release();
  v32 = ((unint64_t)v31 + v10 + 8) & ~v10;
  v33 = (v10 + 8 + v30) & ~v10;
  v8(v32, v33, AssociatedTypeWitness);
  v34 = (_QWORD *)((v12 + v32) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)((v12 + v33) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  swift_retain();
  swift_release();
  v8(((unint64_t)v34 + v10 + 8) & ~v10, ((unint64_t)v35 + v10 + 8) & ~v10, AssociatedTypeWitness);
  v36 = (v11 + (((unint64_t)v35 + v10 + 8) & ~v10)) & ~v10;
  v8((v11 + (((unint64_t)v34 + v10 + 8) & ~v10)) & ~v10, v36, AssociatedTypeWitness);
  v37 = (v11 + ((v11 + (((unint64_t)v34 + v10 + 8) & ~v10)) & ~v10)) & ~v10;
  v38 = (v11 + v36) & ~v10;
  v8(v37, v38, AssociatedTypeWitness);
  v8((v11 + v37) & ~v10, (v11 + v38) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v37) & ~v10)) & ~v10, (v11 + ((v11 + v38) & ~v10)) & ~v10, AssociatedTypeWitness);
  v39 = v11 + (v11 & ~v10);
  v40 = v11 + (v39 & ~v10);
  v41 = (v40 + v37) & ~v10;
  v42 = (v40 + v38) & ~v10;
  v8(v41, v42, AssociatedTypeWitness);
  v8((v11 + v41) & ~v10, (v11 + v42) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v41) & ~v10)) & ~v10, (v11 + ((v11 + v42) & ~v10)) & ~v10, AssociatedTypeWitness);
  v43 = (v40 + v41) & ~v10;
  v44 = (v40 + v42) & ~v10;
  v8(v43, v44, AssociatedTypeWitness);
  v8((v11 + v43) & ~v10, (v11 + v44) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v43) & ~v10)) & ~v10, (v11 + ((v11 + v44) & ~v10)) & ~v10, AssociatedTypeWitness);
  v45 = (v40 + v43) & ~v10;
  v46 = (v40 + v44) & ~v10;
  v8(v45, v46, AssociatedTypeWitness);
  v8((v11 + v45) & ~v10, (v11 + v46) & ~v10, AssociatedTypeWitness);
  v47 = (v39 + v45) & ~v10;
  v48 = (v39 + v46) & ~v10;
  v8(v47, v48, AssociatedTypeWitness);
  v49 = (_BYTE *)(v47 + v69);
  *v49 = *(_BYTE *)(v48 + v69);
  v49[1] = *(_BYTE *)(v48 + v69 + 1);
  v49[2] = *(_BYTE *)(v48 + v69 + 2);
  v50 = (v10 | 7) + 3;
  v51 = (_QWORD *)((v50 + v47 + v69) & ~(v10 | 7));
  v52 = (_QWORD *)((v50 + v48 + v69) & ~(v10 | 7));
  *v51 = *v52;
  swift_retain();
  swift_release();
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
  v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8);
  *v53 = *v54;
  swift_retain();
  swift_release();
  v55 = ((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  v56 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *(_QWORD *)(v55 + 8) = *(_QWORD *)(v56 + 8);
  *(_BYTE *)(v55 + 16) = *(_BYTE *)(v56 + 16);
  *(_QWORD *)(v55 + 24) = *(_QWORD *)(v56 + 24);
  swift_retain();
  swift_release();
  v57 = (v10 + 32 + v56) & ~v10;
  v8((v10 + 32 + v55) & ~v10, v57, AssociatedTypeWitness);
  v58 = (v11 + ((v10 + 32 + v55) & ~v10)) & ~v10;
  v59 = (v11 + v57) & ~v10;
  v8(v58, v59, AssociatedTypeWitness);
  v60 = (v11 + v58) & ~v10;
  v61 = (v11 + v59) & ~v10;
  v8(v60, v61, AssociatedTypeWitness);
  *(_BYTE *)(v60 + v69) = *(_BYTE *)(v61 + v69);
  v62 = v69 + (v10 | 7) + ((v11 + ((v11 + ((v10 + 48) & ~v10)) & ~v10)) & ~v10) + 1;
  v63 = ((unint64_t)v51 + v62) & ~(v10 | 7);
  v64 = ((unint64_t)v52 + v62) & ~(v10 | 7);
  v8(v63, v64, AssociatedTypeWitness);
  *(_BYTE *)(v63 + v69) = *(_BYTE *)(v64 + v69);
  v65 = (v63 + v69) & 0xFFFFFFFFFFFFFFF8;
  v66 = (v64 + v69) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  *(_QWORD *)((v65 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v66 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AAD3A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _OWORD *v58;
  _OWORD *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v73;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = v9 + v10;
  v12 = v9;
  v73 = v9;
  v13 = (v9 + v10 + a1) & ~v10;
  v14 = (v9 + v10 + a2) & ~v10;
  v8(v13, v14, AssociatedTypeWitness);
  v15 = (v11 + v13) & ~v10;
  v16 = (v11 + v14) & ~v10;
  v8(v15, v16, AssociatedTypeWitness);
  v17 = (v11 + v15) & ~v10;
  v18 = (v11 + v16) & ~v10;
  v8(v17, v18, AssociatedTypeWitness);
  v19 = (v11 + v17) & ~v10;
  v20 = (v11 + v18) & ~v10;
  v8(v19, v20, AssociatedTypeWitness);
  v12 += 7;
  v21 = (_QWORD *)((v12 + v19) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)((v12 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = *(_QWORD *)(v5 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v21 + v24 + 8) & ~v24;
  v26 = ((unint64_t)v22 + v24 + 8) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v25, v26, v5);
  v27 = *(_QWORD *)(v23 + 64) + 7;
  v28 = v27 + v25;
  v29 = (_QWORD *)((v27 + v26) & 0xFFFFFFFFFFFFFFF8);
  v28 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v28 = *v29;
  v30 = (_QWORD *)((v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = ((unint64_t)v30 + v10 + 8) & ~v10;
  v33 = ((unint64_t)v31 + v10 + 8) & ~v10;
  v8(v32, v33, AssociatedTypeWitness);
  v34 = (_QWORD *)((v12 + v32) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)((v12 + v33) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = ((unint64_t)v34 + v10 + 8) & ~v10;
  v37 = ((unint64_t)v35 + v10 + 8) & ~v10;
  v8(v36, v37, AssociatedTypeWitness);
  v38 = (v11 + v36) & ~v10;
  v39 = (v11 + v37) & ~v10;
  v8(v38, v39, AssociatedTypeWitness);
  v40 = (v11 + v38) & ~v10;
  v41 = (v11 + v39) & ~v10;
  v8(v40, v41, AssociatedTypeWitness);
  v8((v11 + v40) & ~v10, (v11 + v41) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v40) & ~v10)) & ~v10, (v11 + ((v11 + v41) & ~v10)) & ~v10, AssociatedTypeWitness);
  v42 = v11 + (v11 & ~v10);
  v43 = v11 + (v42 & ~v10);
  v44 = (v43 + v40) & ~v10;
  v45 = (v43 + v41) & ~v10;
  v8(v44, v45, AssociatedTypeWitness);
  v8((v11 + v44) & ~v10, (v11 + v45) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v44) & ~v10)) & ~v10, (v11 + ((v11 + v45) & ~v10)) & ~v10, AssociatedTypeWitness);
  v46 = (v43 + v44) & ~v10;
  v47 = (v43 + v45) & ~v10;
  v8(v46, v47, AssociatedTypeWitness);
  v8((v11 + v46) & ~v10, (v11 + v47) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v46) & ~v10)) & ~v10, (v11 + ((v11 + v47) & ~v10)) & ~v10, AssociatedTypeWitness);
  v48 = (v43 + v46) & ~v10;
  v49 = (v43 + v47) & ~v10;
  v8(v48, v49, AssociatedTypeWitness);
  v8((v11 + v48) & ~v10, (v11 + v49) & ~v10, AssociatedTypeWitness);
  v50 = (v42 + v48) & ~v10;
  v51 = (v42 + v49) & ~v10;
  v8(v50, v51, AssociatedTypeWitness);
  v52 = (_BYTE *)(v50 + v73);
  *v52 = *(_BYTE *)(v51 + v73);
  v52[1] = *(_BYTE *)(v51 + v73 + 1);
  v52[2] = *(_BYTE *)(v51 + v73 + 2);
  v53 = (v10 | 7) + 3;
  v54 = (_QWORD *)((v53 + v50 + v73) & ~(v10 | 7));
  v55 = (_QWORD *)((v53 + v51 + v73) & ~(v10 | 7));
  *v54 = *v55;
  v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFF8);
  v57 = (_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFF8);
  *v56 = *v57;
  v58 = (_OWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  v59 = (_OWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  v61 = ((unint64_t)v58 + v10 + 32) & ~v10;
  v62 = ((unint64_t)v59 + v10 + 32) & ~v10;
  v8(v61, v62, AssociatedTypeWitness);
  v63 = (v11 + v61) & ~v10;
  v64 = (v11 + v62) & ~v10;
  v8(v63, v64, AssociatedTypeWitness);
  v65 = (v11 + v63) & ~v10;
  v66 = (v11 + v64) & ~v10;
  v8(v65, v66, AssociatedTypeWitness);
  *(_BYTE *)(v65 + v73) = *(_BYTE *)(v66 + v73);
  v67 = v73 + (v10 | 7) + ((v11 + ((v11 + ((v10 + 48) & ~v10)) & ~v10)) & ~v10) + 1;
  v68 = ((unint64_t)v54 + v67) & ~(v10 | 7);
  v69 = ((unint64_t)v55 + v67) & ~(v10 | 7);
  v8(v68, v69, AssociatedTypeWitness);
  *(_BYTE *)(v68 + v73) = *(_BYTE *)(v69 + v73);
  v70 = (v68 + v73) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v69 + v73) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v70 + 8) = *(_QWORD *)(v71 + 8);
  *(_QWORD *)((v70 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v71 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AAD3EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v72;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = v9 + v10;
  v12 = v9;
  v72 = v9;
  v13 = (v9 + v10 + a1) & ~v10;
  v14 = (v9 + v10 + a2) & ~v10;
  v8(v13, v14, AssociatedTypeWitness);
  v15 = (v11 + v13) & ~v10;
  v16 = (v11 + v14) & ~v10;
  v8(v15, v16, AssociatedTypeWitness);
  v17 = (v11 + v15) & ~v10;
  v18 = (v11 + v16) & ~v10;
  v8(v17, v18, AssociatedTypeWitness);
  v19 = (v11 + v17) & ~v10;
  v20 = (v11 + v18) & ~v10;
  v8(v19, v20, AssociatedTypeWitness);
  v12 += 7;
  v21 = (_QWORD *)((v12 + v19) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)((v12 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = *(_QWORD *)(v5 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v21 + v24 + 8) & ~v24;
  v26 = ((unint64_t)v22 + v24 + 8) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 40))(v25, v26, v5);
  v27 = *(_QWORD *)(v23 + 64) + 7;
  v28 = (_QWORD *)((v27 + v25) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)((v27 + v26) & 0xFFFFFFFFFFFFFFF8);
  *v28 = *v29;
  swift_release();
  v30 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  swift_release();
  v32 = ((unint64_t)v30 + v10 + 8) & ~v10;
  v33 = ((unint64_t)v31 + v10 + 8) & ~v10;
  v8(v32, v33, AssociatedTypeWitness);
  v34 = (_QWORD *)((v12 + v32) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)((v12 + v33) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  swift_release();
  v36 = ((unint64_t)v34 + v10 + 8) & ~v10;
  v37 = ((unint64_t)v35 + v10 + 8) & ~v10;
  v8(v36, v37, AssociatedTypeWitness);
  v38 = (v11 + v36) & ~v10;
  v39 = (v11 + v37) & ~v10;
  v8(v38, v39, AssociatedTypeWitness);
  v40 = (v11 + v38) & ~v10;
  v41 = (v11 + v39) & ~v10;
  v8(v40, v41, AssociatedTypeWitness);
  v8((v11 + v40) & ~v10, (v11 + v41) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v40) & ~v10)) & ~v10, (v11 + ((v11 + v41) & ~v10)) & ~v10, AssociatedTypeWitness);
  v42 = v11 + (v11 & ~v10);
  v43 = v11 + (v42 & ~v10);
  v44 = (v43 + v40) & ~v10;
  v45 = (v43 + v41) & ~v10;
  v8(v44, v45, AssociatedTypeWitness);
  v8((v11 + v44) & ~v10, (v11 + v45) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v44) & ~v10)) & ~v10, (v11 + ((v11 + v45) & ~v10)) & ~v10, AssociatedTypeWitness);
  v46 = (v43 + v44) & ~v10;
  v47 = (v43 + v45) & ~v10;
  v8(v46, v47, AssociatedTypeWitness);
  v8((v11 + v46) & ~v10, (v11 + v47) & ~v10, AssociatedTypeWitness);
  v8((v11 + ((v11 + v46) & ~v10)) & ~v10, (v11 + ((v11 + v47) & ~v10)) & ~v10, AssociatedTypeWitness);
  v48 = (v43 + v46) & ~v10;
  v49 = (v43 + v47) & ~v10;
  v8(v48, v49, AssociatedTypeWitness);
  v8((v11 + v48) & ~v10, (v11 + v49) & ~v10, AssociatedTypeWitness);
  v50 = (v42 + v48) & ~v10;
  v51 = (v42 + v49) & ~v10;
  v8(v50, v51, AssociatedTypeWitness);
  v52 = (_BYTE *)(v50 + v72);
  *v52 = *(_BYTE *)(v51 + v72);
  v52[1] = *(_BYTE *)(v51 + v72 + 1);
  v52[2] = *(_BYTE *)(v51 + v72 + 2);
  v53 = (v10 | 7) + 3;
  v54 = (_QWORD *)((v53 + v50 + v72) & ~(v10 | 7));
  v55 = (_QWORD *)((v53 + v51 + v72) & ~(v10 | 7));
  *v54 = *v55;
  swift_release();
  v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
  v57 = (_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFF8);
  *v56 = *v57;
  swift_release();
  v58 = ((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8;
  v59 = ((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *(_QWORD *)(v58 + 8) = *(_QWORD *)(v59 + 8);
  *(_BYTE *)(v58 + 16) = *(_BYTE *)(v59 + 16);
  *(_QWORD *)(v58 + 24) = *(_QWORD *)(v59 + 24);
  swift_release();
  v60 = (v10 + 32 + v58) & ~v10;
  v8(v60, (v10 + 32 + v59) & ~v10, AssociatedTypeWitness);
  v61 = (v11 + v60) & ~v10;
  v62 = (v11 + ((v10 + 32 + v59) & ~v10)) & ~v10;
  v8(v61, v62, AssociatedTypeWitness);
  v63 = (v11 + v61) & ~v10;
  v64 = (v11 + v62) & ~v10;
  v8(v63, v64, AssociatedTypeWitness);
  *(_BYTE *)(v63 + v72) = *(_BYTE *)(v64 + v72);
  v65 = v72 + (v10 | 7) + ((v11 + ((v11 + ((v10 + 48) & ~v10)) & ~v10)) & ~v10) + 1;
  v66 = ((unint64_t)v54 + v65) & ~(v10 | 7);
  v67 = ((unint64_t)v55 + v65) & ~(v10 | 7);
  v8(v66, v67, AssociatedTypeWitness);
  *(_BYTE *)(v66 + v72) = *(_BYTE *)(v67 + v72);
  v68 = (v66 + v72) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v67 + v72) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v68 + 8) = *(_QWORD *)(v69 + 8);
  *(_QWORD *)((v68 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v69 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AAD4408(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v8 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = *(_DWORD *)(v7 + 84);
  if (v11 <= v10)
    v12 = *(_DWORD *)(v9 + 84);
  else
    v12 = v11;
  if (v8 <= 0xFE)
    v13 = 254;
  else
    v13 = *(_DWORD *)(v7 + 84);
  if (v12 <= v13)
    v12 = v13;
  if (!a2)
    return 0;
  v14 = AssociatedTypeWitness;
  v15 = *(_QWORD *)(v7 + 64);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = v15 + v16;
  v18 = v15 + v16 + ((v15 + v16) & ~v16);
  v19 = v15 + v16 + (v18 & ~v16);
  v20 = v15 + 7;
  v21 = *(unsigned __int8 *)(v9 + 80);
  v22 = v21 + 8;
  v23 = *(_QWORD *)(v9 + 64) + 7;
  v24 = v16 + 8;
  v25 = v16 | 7;
  v26 = v15 + (v16 | 7);
  v27 = v26 + 3;
  v28 = v26 + ((v15 + v16 + ((v15 + v16 + ((v16 + 48) & ~v16)) & ~v16)) & ~v16) + 1;
  if (v12 < a2)
  {
    if ((((((v15 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + ((v28
           + ((v27
             + ((v18
               + ((v19
                 + ((v19
                   + ((v19
                     + ((v17
                       + ((v17
                         + ((v24
                           + ((v20
                             + ((v24
                               + ((((v23
                                   + ((v22 + ((v20 + ((v17 + (v19 & ~v16)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8)
                                 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v16)) & ~v16)) & ~v16)) & ~v16)) & ~v16)) & ~v25)) & ~v25)
         + 8) & 0xFFFFFFF8) != 0)
      v29 = 2;
    else
      v29 = a2 - v12 + 1;
    if (v29 >= 0x10000)
      v30 = 4;
    else
      v30 = 2;
    if (v29 < 0x100)
      v30 = 1;
    if (v29 >= 2)
      v31 = v30;
    else
      v31 = 0;
    __asm { BR              X25 }
  }
  if ((_DWORD)v8 == v12)
  {
    v32 = a1;
    return __swift_getEnumTagSinglePayload(v32, v8, v14);
  }
  v33 = ~v16;
  v32 = (v22 + ((v20 + ((v17 + ((v17 + ((v17 + ((v17 + a1) & ~v16)) & ~v16)) & ~v16)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v21;
  if ((_DWORD)v10 == v12)
  {
    v8 = v10;
    v14 = v5;
    return __swift_getEnumTagSinglePayload(v32, v8, v14);
  }
  v35 = (uint64_t *)((v23 + v32) & 0xFFFFFFFFFFFFFFF8);
  if ((v12 & 0x80000000) != 0)
  {
    v37 = (v27
         + ((v18
           + ((v19
             + ((v19
               + ((v19
                 + ((v17
                   + ((v17
                     + ((v24
                       + ((v20 + ((v24 + (((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8)) & v33)) & 0xFFFFFFFFFFFFFFF8)) & v33)) & v33)) & v33)) & v33)) & v33)) & v33)) & v33)) & ~v25;
    if (v11 == v12)
    {
      v32 = (v16 + ((((v37 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 32) & v33;
      return __swift_getEnumTagSinglePayload(v32, v8, v14);
    }
    v32 = (v28 + v37) & ~v25;
    if (v8 >= 0xFE)
      return __swift_getEnumTagSinglePayload(v32, v8, v14);
    v38 = *(unsigned __int8 *)(v32 + v15);
    if (v38 >= 2)
      return ((v38 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  v36 = *v35;
  if ((unint64_t)*v35 >= 0xFFFFFFFF)
    LODWORD(v36) = -1;
  return (v36 + 1);
}

void sub_22AAD4778(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  int v26;
  unsigned int v27;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v7 - 8);
  if (v9 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = *(_DWORD *)(v8 + 84);
  if (v11 <= *(_DWORD *)(v10 + 84))
    v12 = *(_DWORD *)(v10 + 84);
  else
    v12 = v11;
  if (v9 <= 0xFE)
    v13 = 254;
  else
    v13 = *(_DWORD *)(v8 + 84);
  if (v12 <= v13)
    v14 = v13;
  else
    v14 = v12;
  v15 = *(_QWORD *)(v8 + 64);
  v16 = *(unsigned __int8 *)(v8 + 80);
  v17 = v15 + v16 + ((v15 + v16) & ~v16);
  v18 = v15 + v16 + (v17 & ~v16);
  v19 = v15 + (v16 | 7);
  v20 = (v19
       + 3
       + ((v17
         + ((v18
           + ((v18
             + ((v18
               + ((v15
                 + v16
                 + ((v15
                   + v16
                   + ((v16
                     + 8
                     + ((v15
                       + 7
                       + ((v16
                         + 8
                         + ((((*(_QWORD *)(v10 + 64)
                             + 7
                             + ((*(unsigned __int8 *)(v10 + 80)
                               + 8
                               + ((v15 + 7 + ((v15 + v16 + (v18 & ~v16)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & ~v16)) & ~v16)) & ~v16)) & ~v16)) & ~v16)) & ~v16)) & ~(v16 | 7);
  v21 = v19 + ((v15 + v16 + ((v15 + v16 + ((v16 + 48) & ~v16)) & ~v16)) & ~v16) + 1;
  v22 = ((v21 + v20) & ~(v16 | 7)) + (((v15 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 8;
  if (v14 >= a3)
  {
    v26 = 0;
  }
  else
  {
    v23 = a3 - v14;
    if (v22)
      v24 = 2;
    else
      v24 = v23 + 1;
    if (v24 >= 0x10000)
      v25 = 4;
    else
      v25 = 2;
    if (v24 < 0x100)
      v25 = 1;
    if (v24 >= 2)
      v26 = v25;
    else
      v26 = 0;
  }
  if (a2 > v14)
  {
    if (v22)
    {
      v27 = ~v14 + a2;
      bzero(a1, ((v21 + v20) & ~(v16 | 7)) + (((v15 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v27;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X28 }
}

void sub_22AAD49A8(uint64_t a1@<X0>, size_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  unsigned int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  int v42;

  *((_BYTE *)v31 + v34) = 0;
  if ((_DWORD)v30)
  {
    if ((_DWORD)a3 == v24)
    {
LABEL_3:
      v37 = (unint64_t)v31;
LABEL_4:
      v38 = v30;
LABEL_7:
      __swift_storeEnumTagSinglePayload(v37, v38, a3, a4);
      return;
    }
    v37 = (a1
         + ((v29 + ((v28 + ((v28 + ((v28 + (((unint64_t)v31 + v28) & v33)) & v33)) & v33)) & v33)) & 0xFFFFFFFFFFFFFFF8)) & v36;
    if ((_DWORD)a9 == v24)
    {
      v38 = v30;
      a3 = a9;
      a4 = v32;
      goto LABEL_7;
    }
    v39 = (_QWORD *)((a6 + v37) & 0xFFFFFFFFFFFFFFF8);
    if (v24 < 0)
    {
      v41 = (a7
           + ((v26
             + ((v27
               + ((v27
                 + ((v27
                   + ((v28
                     + ((v28
                       + ((a5
                         + ((v29 + ((a5 + (((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8)) & v33)) & 0xFFFFFFFFFFFFFFF8)) & v33)) & v33)) & v33)) & v33)) & v33)) & v33)) & v33)) & v35;
      if (v23 == v24)
      {
        v37 = (v25 + ((((v41 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 32) & v33;
        goto LABEL_4;
      }
      v31 = (_DWORD *)((a8 + v41) & v35);
      if (v22 >= v30)
      {
        if (a3 >= 0xFE)
          goto LABEL_3;
        *((_BYTE *)v31 + v21) = v30 + 1;
      }
      else if ((_DWORD)a2)
      {
        v42 = ~v22 + v30;
        bzero(v31, a2);
        *v31 = v42;
      }
    }
    else
    {
      if ((v30 & 0x80000000) != 0)
        v40 = v30 ^ 0x80000000;
      else
        v40 = (v30 - 1);
      *v39 = v40;
    }
  }
}

uint64_t sub_22AAD4B50()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_22AAD4BD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
    v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
    *(_QWORD *)((v10 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v11 + 23) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_22AAD4CA0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))();
}

uint64_t sub_22AAD4CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AAD4D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AAD4DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AAD4E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22AAD4E90(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v13;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 >= 0xFE)
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    v13 = *(unsigned __int8 *)(v8 + a1);
    if (v13 >= 2)
      return ((v13 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  if ((((((v8 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v9 = 2;
  else
    v9 = a2 - v7 + 1;
  if (v9 >= 0x10000)
    v10 = 4;
  else
    v10 = 2;
  if (v9 < 0x100)
    v10 = 1;
  if (v9 >= 2)
    v11 = v10;
  else
    v11 = 0;
  return ((uint64_t (*)(void))((char *)&loc_22AAD4F10 + 4 * byte_22ABF83FD[v11]))();
}

void sub_22AAD4F84(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if ((((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if ((((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, (((*(_QWORD *)(v5 + 64) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_22AAD5074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0xFE)
      *(_BYTE *)(v5 + v4) = a2 + 1;
    else
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
  }
  return result;
}

void sub_22AAD50C8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x22AAD50D0);
  JUMPOUT(0x22AAD5098);
}

uint64_t OUTLINED_FUNCTION_8_57()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_9_58()
{
  return sub_22ABE0130();
}

uint64_t OUTLINED_FUNCTION_10_53()
{
  return sub_22ABDFAE8();
}

uint64_t OUTLINED_FUNCTION_12_54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 32))(*(_QWORD *)(v2 - 416), v1, v0);
}

uint64_t OUTLINED_FUNCTION_14_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_15_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 160))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_16_49()
{
  return sub_22ABDFB0C();
}

uint64_t OUTLINED_FUNCTION_17_46()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 184))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_20_44()
{
  return sub_22ABDF308();
}

uint64_t OUTLINED_FUNCTION_21_49()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD, uint64_t);
  uint64_t v3;

  return v2(v0, *(_QWORD *)(v3 - 184), v1);
}

uint64_t OUTLINED_FUNCTION_23_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_24_40()
{
  return sub_22ABDFB00();
}

uint64_t OUTLINED_FUNCTION_26_34()
{
  return sub_22ABDF308();
}

uint64_t OUTLINED_FUNCTION_27_35()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 552);
}

uint64_t OUTLINED_FUNCTION_33_31()
{
  uint64_t (*v0)(_QWORD, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(*(_QWORD *)(v3 - 400), v2, v1);
}

uint64_t OUTLINED_FUNCTION_34_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_35_21()
{
  return sub_22ABDEC48();
}

uint64_t OUTLINED_FUNCTION_37_27(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 96))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_38_32()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_39_27()
{
  return sub_22ABDFAF4();
}

uint64_t OUTLINED_FUNCTION_41_20()
{
  return sub_22ABDFAF4();
}

uint64_t OUTLINED_FUNCTION_42_19()
{
  return sub_22ABDEB88();
}

uint64_t OUTLINED_FUNCTION_43_18()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_44_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_49_17()
{
  return sub_22ABE013C();
}

uint64_t OUTLINED_FUNCTION_50_24()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_51_24()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2, v3, v0);
}

uint64_t OUTLINED_FUNCTION_53_21@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = a1;
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_54_16()
{
  return sub_22ABDEC3C();
}

uint64_t OUTLINED_FUNCTION_56_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_59_15()
{
  return sub_22ABDEC30();
}

void OUTLINED_FUNCTION_61_15()
{
  type metadata accessor for LineSearch.LineSearchResult();
}

uint64_t OUTLINED_FUNCTION_62_14()
{
  return sub_22ABE013C();
}

uint64_t OUTLINED_FUNCTION_63_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_64_11()
{
  return sub_22ABDFAF4();
}

uint64_t OUTLINED_FUNCTION_65_15()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_67_12()
{
  return sub_22ABE0154();
}

uint64_t OUTLINED_FUNCTION_68_12()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_69_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_70_10()
{
  return sub_22ABDFF20();
}

uint64_t OUTLINED_FUNCTION_72_12@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 600));
}

uint64_t OUTLINED_FUNCTION_74_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 152))(a1, a2, v2);
}

void sub_22AAD53DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v2, v1);
  type metadata accessor for ComposedEstimator();
}

uint64_t sub_22AAD5424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void sub_22AAD5458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_70();
  v4 = type metadata accessor for TransformerToEstimatorAdaptor(0, v2, v3, v2);
  MEMORY[0x24BDAC7A8](v4);
  TransformerToEstimatorAdaptor.init(_:)(v1, v0, (uint64_t)&v6 - v5);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TransformerToEstimatorAdaptor<A>, v4);
  sub_22AAD53DC();
}

void sub_22AAD5500()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AAD550C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v8[9] = a7;
  v8[10] = v7;
  v8[7] = a5;
  v8[8] = a6;
  v8[5] = a3;
  v8[6] = a4;
  v8[3] = a1;
  v8[4] = a2;
  v8[11] = a5[5];
  v8[12] = a5[3];
  v15 = OUTLINED_FUNCTION_30_4();
  v8[13] = v15;
  v8[14] = *(_QWORD *)(v15 - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  v16 = a5[4];
  v8[17] = v16;
  v17 = a5[2];
  v8[18] = v17;
  v18 = OUTLINED_FUNCTION_30_4();
  v8[19] = v18;
  v8[20] = *(_QWORD *)(v18 - 8);
  v8[21] = swift_task_alloc();
  v19 = swift_task_alloc();
  v8[22] = v19;
  v20 = (_QWORD *)OUTLINED_FUNCTION_13_1();
  v8[23] = v20;
  *v20 = v8;
  v20[1] = sub_22AAD566C;
  return v22(v19, a2, a3, a4, a6, a7, v17, v16);
}

uint64_t sub_22AAD566C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAD56C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t AssociatedConformanceWitness;

  v1 = *(_QWORD *)(v0 + 192);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_29_3();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v3;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *(_QWORD *)(v0 + 208) = AssociatedConformanceWitness;
    *v3 = v0;
    v3[1] = sub_22AAD57AC;
    return Transformer.applied<A>(to:eventHandler:)(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 64), AssociatedConformanceWitness, *(_QWORD *)(v0 + 72));
  }
}

uint64_t sub_22AAD57AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 216) = a1;
  *(_QWORD *)(v3 + 224) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAD5810()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 224);
  sub_22ABDF1DC();
  if (v1)
  {
    OUTLINED_FUNCTION_4_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_29_3();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 216);
    v3 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    *(_QWORD *)(v0 + 232) = v3;
    swift_getAssociatedTypeWitness();
    v4 = sub_22ABDF0F8();
    v5 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v4);
    *v3 = v0;
    v3[1] = sub_22AAD5930;
    return v6(*(_QWORD *)(v0 + 128), v0 + 16, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v4, v5, *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_22AAD5930()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_22AAD599C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[21];
  v2 = v0[19];
  v4 = v0[15];
  v3 = v0[16];
  v6 = v0[13];
  v5 = v0[14];
  v7 = v0[3];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[20] + 32))(v1, v0[22], v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v3, v6);
  swift_getAssociatedConformanceWitness();
  ComposedTransformer.init(_:_:)(v1, v2, v7);
}

uint64_t sub_22AAD5A44()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAD5A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 32) + 32))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTransformer();
  }
  return result;
}

uint64_t sub_22AAD5BD0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v21;
  uint64_t result;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a3;
  v5 = a2[5];
  v34 = a2[3];
  v35 = v5;
  v6 = OUTLINED_FUNCTION_119_1();
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v26 - v9;
  v10 = a2[4];
  v11 = a2[2];
  v12 = OUTLINED_FUNCTION_119_1();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - v18;
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 40);
  v33 = a1;
  v21 = v36;
  result = v20(a1, v11, v10, v17);
  if (!v21)
  {
    v26 = v11;
    v27 = v15;
    v36 = v12;
    v23 = v32;
    (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v33, v34);
    v24 = (uint64_t)v27;
    v25 = v36;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v27, v19, v36);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v28, v23, v30);
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    ComposedTransformer.init(_:_:)(v24, v25, v31);
  }
  return result;
}

uint64_t sub_22AAD5E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A99DE80;
  return sub_22AAD550C(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t sub_22AAD5EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAD5A84(a1, a2, a3);
}

uint64_t sub_22AAD5EB8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AAD5BD0(a1, a2, a3);
}

void Estimator.appending<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_22A9B7338(a1, a2, a3, a4, a5, (void (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_22AAD5458);
}

{
  sub_22A9B7338(a1, a2, a3, a4, a5, (void (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_22AAD53DC);
}

void sub_22AAD5EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for TransformerToEstimatorAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for TransformerToEstimatorAdaptor<A>, v4);
  type metadata accessor for ComposedEstimator();
}

uint64_t sub_22AAD5F30(uint64_t a1)
{
  return MEMORY[0x22E2E4D80](&unk_22ABF84E8, a1);
}

void type metadata accessor for ComposedEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AAD5F60()
{
  type metadata accessor for ComposedEstimator();
}

uint64_t sub_22AAD5F80(uint64_t a1)
{
  return MEMORY[0x22E2E4D80](&unk_22ABF84E8, a1);
}

uint64_t sub_22AAD5F9C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AAD6078 + 4 * byte_22ABF84B0[v21 - 1]))();
}

void sub_22AAD60EC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_22AAD62E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[32];
  uint64_t v26;

  v23 = a6;
  v24 = a5;
  v11 = sub_22ABDF5D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - v13;
  sub_22A9E7618((uint64_t)a2, (uint64_t)v25);
  v15 = *(_QWORD *)(v6 + 16);
  _s19IntermediateDecoderCMa();
  swift_allocObject();
  sub_22A9E1144((uint64_t)a3);
  sub_22ABDEAEC();
  sub_22A9E1464((uint64_t)v25, MEMORY[0x24BEE4AF8], a3, v15);
  v16 = v26;
  sub_22A9E501C(a2, a1, a4, v24, (uint64_t)v14);
  if (v16)
    return swift_release();
  v17 = v23;
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v18 = sub_22ABDF830();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B10050);
    *v20 = a1;
    sub_22ABDF824();
    v21 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26E0], v18);
    swift_willThrow(v21);
    return swift_release();
  }
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v17, v14, a4);
}

uint64_t sub_22AAD64DC()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BlobJSONDecoder()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for BlobJSONDecoder._Options()
{
  return &type metadata for BlobJSONDecoder._Options;
}

void sub_22AAD6530()
{
  void *v0;
  void *v1;
  void *v2;
  unsigned int v3;
  void *v4;
  unsigned int v5;
  id v6;
  id v7;
  id v8[2];

  v1 = v0;
  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_22ABDD0C4();
  v2 = (void *)sub_22ABDED2C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_fileExistsAtPath_, v2);

  if (v3)
  {
    v4 = (void *)sub_22ABDD070();
    v8[0] = 0;
    v5 = objc_msgSend(v1, sel_removeItemAtURL_error_, v4, v8);

    if (v5)
    {
      v6 = v8[0];
    }
    else
    {
      v7 = v8[0];
      sub_22ABDD004();

      swift_willThrow();
    }
  }
}

uint64_t sub_22AAD6630()
{
  void *v0;
  void *v1;
  unsigned __int8 v2;
  char v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v4 = 0;
  sub_22ABDD0C4();
  v1 = (void *)sub_22ABDED2C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v1, &v4);

  return (v2 & v4);
}

uint64_t sub_22AAD66D0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v3 = a1;
  v20 = MEMORY[0x24BEE4AF8];
  sub_22AB4CDE0(0, v1, 0);
  v2 = v20;
  result = sub_22AA4F4AC(v3);
  if ((result & 0x8000000000000000) == 0)
  {
    v6 = result;
    if (result < 1 << *(_BYTE *)(v3 + 32))
    {
      v7 = v5;
      v8 = v3 + 64;
      while ((*(_QWORD *)(v8 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
      {
        if (v7 != *(_DWORD *)(v3 + 36))
          goto LABEL_18;
        v9 = *(_QWORD *)(v3 + 56) + 40 * v6;
        v10 = *(_QWORD *)(v9 + 8);
        v18 = v1;
        v19 = *(_QWORD *)v9;
        v11 = *(_QWORD *)(v9 + 16);
        v12 = *(_QWORD *)(v9 + 24);
        v13 = *(_DWORD *)(v9 + 32);
        result = sub_22ABDEAEC();
        v14 = v3;
        v16 = *(_QWORD *)(v20 + 16);
        v15 = *(_QWORD *)(v20 + 24);
        if (v16 >= v15 >> 1)
          result = sub_22AB4CDE0(v15 > 1, v16 + 1, 1);
        *(_QWORD *)(v20 + 16) = v16 + 1;
        v17 = v20 + 40 * v16;
        *(_QWORD *)(v17 + 32) = v19;
        *(_QWORD *)(v17 + 40) = v10;
        *(_QWORD *)(v17 + 48) = v11;
        *(_QWORD *)(v17 + 56) = v12;
        *(_DWORD *)(v17 + 64) = v13;
        if ((uint64_t)v6 >= -(-1 << *(_BYTE *)(v14 + 32)))
          goto LABEL_19;
        if ((*(_QWORD *)(v8 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
          goto LABEL_20;
        v3 = v14;
        if (v7 != *(_DWORD *)(v14 + 36))
          goto LABEL_21;
        result = sub_22ABDF71C();
        v1 = v18 - 1;
        if (v18 == 1)
          return v2;
        v6 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v7 = *(_DWORD *)(v3 + 36);
          if (result < 1 << *(_BYTE *)(v3 + 32))
            continue;
        }
        goto LABEL_22;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_22AAD68C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v32 = MEMORY[0x24BEE4AF8];
    sub_22AB4D5A0();
    v3 = v32;
    v4 = sub_22AA4F4AC(a1);
    if ((v4 & 0x8000000000000000) == 0)
    {
      v6 = v4;
      if (v4 < 1 << *(_BYTE *)(a1 + 32))
      {
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
        {
          if (v5 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v27 = v1;
          v28 = v5;
          v8 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v6);
          v9 = v3;
          v10 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v6);
          v11 = sub_22ABDED50();
          v30 = v12;
          v31 = v11;
          v13 = v8;
          v14 = v10;
          v15 = objc_msgSend(v14, sel_identifier);
          v16 = sub_22ABDED50();
          v29 = v17;

          v3 = v9;
          objc_msgSend(v14, sel_location);
          v19 = v18;
          v21 = v20;
          objc_msgSend(v14, sel_confidence);
          v23 = v22;

          v24 = *(_QWORD *)(v9 + 16);
          if (v24 >= *(_QWORD *)(v9 + 24) >> 1)
          {
            sub_22AB4D5A0();
            v3 = v9;
          }
          *(_QWORD *)(v3 + 16) = v24 + 1;
          v25 = v3 + 56 * v24;
          *(_QWORD *)(v25 + 32) = v31;
          *(_QWORD *)(v25 + 40) = v30;
          *(_QWORD *)(v25 + 48) = v16;
          *(_QWORD *)(v25 + 56) = v29;
          *(_QWORD *)(v25 + 64) = v19;
          *(_QWORD *)(v25 + 72) = v21;
          *(_DWORD *)(v25 + 80) = v23;
          if ((uint64_t)v6 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
            goto LABEL_20;
          if (v28 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v26 = sub_22ABDF71C();
          v1 = v27 - 1;
          if (v27 == 1)
            return;
          v6 = v26;
          if ((v26 & 0x8000000000000000) == 0)
          {
            v5 = *(_DWORD *)(a1 + 36);
            if (v26 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

CreateMLComponents::Pose __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Pose.init(_:)(VNRecognizedPointsObservation a1)
{
  _QWORD *v1;
  _QWORD *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18[2];
  CreateMLComponents::Pose result;

  v3 = v1;
  v18[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_22ABDED2C();
  v18[0] = 0;
  v5 = -[objc_class recognizedPointsForGroupKey:error:](a1.super.super.isa, sel_recognizedPointsForGroupKey_error_, v4, v18);

  v6 = v18[0];
  if (v5)
  {
    type metadata accessor for VNRecognizedPointKey(0);
    sub_22AAD6CAC();
    sub_22AAD6CE8();
    v7 = sub_22ABDEAB0();
    v8 = v6;

    sub_22AAD68C8(v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_22AAD6E78(v10, &qword_255B0EF00, (void (*)(uint64_t, uint64_t, uint64_t *))sub_22AB04BD4);
    v12 = v11;

    *v3 = v12;
    v3[1] = 0x6C6C414F50494E56;
    v3[2] = 0xE800000000000000;
  }
  else
  {
    v16 = v18[0];
    sub_22ABDD004();

    swift_willThrow(v17);
  }
  result.allKeypointsKey._object = v15;
  result.allKeypointsKey._countAndFlagsBits = v14;
  result.keypoints._rawValue = v13;
  return result;
}

unint64_t sub_22AAD6CAC()
{
  unint64_t result;

  result = qword_255B0EEF8;
  if (!qword_255B0EEF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255B0EEF8);
  }
  return result;
}

unint64_t sub_22AAD6CE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B0D910;
  if (!qword_255B0D910)
  {
    type metadata accessor for VNRecognizedPointKey(255);
    result = MEMORY[0x22E2E4D80](&unk_22ABE8874, v1);
    atomic_store(result, (unint64_t *)&qword_255B0D910);
  }
  return result;
}

void __swiftcall JointPoint.init(_:location:confidence:)(CreateMLComponents::JointPoint *__return_ptr retstr, CreateMLComponents::JointKey _, CGPoint location, Swift::Float confidence)
{
  void *v4;

  v4 = *(void **)(_.rawValue._countAndFlagsBits + 8);
  retstr->key.rawValue._countAndFlagsBits = *(_QWORD *)_.rawValue._countAndFlagsBits;
  retstr->key.rawValue._object = v4;
  retstr->location.x = location.x;
  retstr->location.y = location.y;
  retstr->confidence = confidence;
}

Swift::Float __swiftcall Pose.boundingBoxArea(confidenceThreshold:)(Swift::Float confidenceThreshold)
{
  uint64_t v2;
  uint64_t v3;
  float v4;
  float v5;

  v2 = OUTLINED_FUNCTION_22_21();
  v3 = sub_22AAD66D0(v2);
  OUTLINED_FUNCTION_23();
  sub_22AAD7944(v3, confidenceThreshold);
  v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

CreateMLComponents::Pose __swiftcall Pose.init(from:)(Swift::OpaquePointer from)
{
  Swift::OpaquePointer *v1;
  CreateMLComponents::Pose result;

  v1->_rawValue = from._rawValue;
  v1[1]._rawValue = (void *)0x6C6C414F50494E56;
  v1[2]._rawValue = (void *)0xE800000000000000;
  result.keypoints = from;
  return result;
}

void sub_22AAD6DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (__OFSUB__(a3, a2))
  {
    __break(1u);
    OUTLINED_FUNCTION_16_50();
    __break(1u);
  }
  else
  {
    if (a3 - a2 >= *(_QWORD *)(a1 + 16))
      v5 = *(_QWORD *)(a1 + 16);
    else
      v5 = a3 - a2;
    if (v5)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B16958);
      v6 = OUTLINED_FUNCTION_19_7();
    }
    else
    {
      v6 = MEMORY[0x24BEE4B00];
    }
    v8 = v6;
    v7 = (_QWORD *)OUTLINED_FUNCTION_22_21();
    sub_22AAD8D84(v7, a2, a3, 1, &v8);
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_1_18();
  }
}

void sub_22AAD6E64(uint64_t a1)
{
  sub_22AAD6E78(a1, &qword_255B16948, (void (*)(uint64_t, uint64_t, uint64_t *))sub_22AAD90F0);
}

void sub_22AAD6E78(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = OUTLINED_FUNCTION_19_7();
  }
  else
  {
    v4 = MEMORY[0x24BEE4B00];
  }
  v6 = v4;
  v5 = OUTLINED_FUNCTION_22_21();
  a3(v5, 1, &v6);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_1_18();
}

uint64_t JointKey.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JointKey.rawValue.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

CreateMLComponents::JointKey __swiftcall JointKey.init(rawValue:)(CreateMLComponents::JointKey rawValue)
{
  CreateMLComponents::JointKey *v1;

  *v1 = rawValue;
  return rawValue;
}

void sub_22AAD6F3C(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9DF8], &qword_255B166C0, algn_255B166C8);
}

uint64_t static JointKey.leftEar.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D738, &qword_255B166C0, a1);
}

void sub_22AAD6F70(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E08], &qword_255B166D0, algn_255B166D8);
}

uint64_t static JointKey.leftEye.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D740, &qword_255B166D0, a1);
}

uint64_t sub_22AAD6FA4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;

  if (*a1 != -1)
    swift_once();
  v7 = *a3;
  *a4 = *a2;
  a4[1] = v7;
  return sub_22ABDEAEC();
}

void sub_22AAD6FF4(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E48], &qword_255B166E0, algn_255B166E8);
}

uint64_t static JointKey.rightEar.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D748, &qword_255B166E0, a1);
}

void sub_22AAD7028(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E58], &qword_255B166F0, algn_255B166F8);
}

uint64_t static JointKey.rightEye.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D750, &qword_255B166F0, a1);
}

void sub_22AAD705C(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E30], &qword_255B16700, algn_255B16708);
}

uint64_t static JointKey.neck.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D758, &qword_255B16700, a1);
}

void sub_22AAD7090(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E38], &qword_255B16710, algn_255B16718);
}

uint64_t static JointKey.nose.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D760, &qword_255B16710, a1);
}

void sub_22AAD70C4(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E20], &qword_255B16720, algn_255B16728);
}

uint64_t static JointKey.leftShoulder.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D768, &qword_255B16720, a1);
}

void sub_22AAD70F8(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E00], &qword_255B16730, algn_255B16738);
}

uint64_t static JointKey.leftElbow.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D770, &qword_255B16730, a1);
}

void sub_22AAD712C(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E28], &qword_255B16740, algn_255B16748);
}

uint64_t static JointKey.leftWrist.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D778, &qword_255B16740, a1);
}

void sub_22AAD7160(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E70], &qword_255B16750, algn_255B16758);
}

uint64_t static JointKey.rightShoulder.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D780, &qword_255B16750, a1);
}

void sub_22AAD7194(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E50], &qword_255B16760, algn_255B16768);
}

uint64_t static JointKey.rightElbow.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D788, &qword_255B16760, a1);
}

void sub_22AAD71C8(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E78], &qword_255B16770, algn_255B16778);
}

uint64_t static JointKey.rightWrist.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D790, &qword_255B16770, a1);
}

void sub_22AAD71FC(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E80], &qword_255B16780, algn_255B16788);
}

uint64_t static JointKey.root.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D798, &qword_255B16780, a1);
}

void sub_22AAD7230(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E10], &qword_255B16790, algn_255B16798);
}

uint64_t static JointKey.leftHip.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7A0, &qword_255B16790, a1);
}

void sub_22AAD7264(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E18], &qword_255B167A0, algn_255B167A8);
}

uint64_t static JointKey.leftKnee.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7A8, &qword_255B167A0, a1);
}

void sub_22AAD7298(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9DF0], &qword_255B167B0, algn_255B167B8);
}

uint64_t static JointKey.leftAnkle.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7B0, &qword_255B167B0, a1);
}

void sub_22AAD72CC(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E60], &qword_255B167C0, algn_255B167C8);
}

uint64_t static JointKey.rightHip.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7B8, &qword_255B167C0, a1);
}

void sub_22AAD7300(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E68], &qword_255B167D0, algn_255B167D8);
}

uint64_t static JointKey.rightKnee.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7C0, &qword_255B167D0, a1);
}

void sub_22AAD7334(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E40], &qword_255B167E0, algn_255B167E8);
}

uint64_t static JointKey.rightAnkle.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7C8, &qword_255B167E0, a1);
}

void sub_22AAD7368(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9F20], &qword_255B167F0, algn_255B167F8);
}

uint64_t static JointKey.thumbTip.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7D0, &qword_255B167F0, a1);
}

void sub_22AAD739C(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9F10], &qword_255B16800, algn_255B16808);
}

uint64_t static JointKey.thumbIP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7D8, &qword_255B16800, a1);
}

void sub_22AAD73D0(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9F18], &qword_255B16810, algn_255B16818);
}

uint64_t static JointKey.thumbMP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7E0, &qword_255B16810, a1);
}

void sub_22AAD7404(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9F08], &qword_255B16820, algn_255B16828);
}

uint64_t static JointKey.thumbCMC.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7E8, &qword_255B16820, a1);
}

void sub_22AAD7438(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9EA0], &qword_255B16830, algn_255B16838);
}

uint64_t static JointKey.indexTip.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7F0, &qword_255B16830, a1);
}

void sub_22AAD746C(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E88], &qword_255B16840, algn_255B16848);
}

uint64_t static JointKey.indexDIP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D7F8, &qword_255B16840, a1);
}

void sub_22AAD74A0(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E98], &qword_255B16850, algn_255B16858);
}

uint64_t static JointKey.indexPIP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D800, &qword_255B16850, a1);
}

void sub_22AAD74D4(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9E90], &qword_255B16860, algn_255B16868);
}

uint64_t static JointKey.indexMCP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D808, &qword_255B16860, a1);
}

void sub_22AAD7508(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9EE0], &qword_255B16870, algn_255B16878);
}

uint64_t static JointKey.middleTip.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D810, &qword_255B16870, a1);
}

void sub_22AAD753C(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9EC8], &qword_255B16880, algn_255B16888);
}

uint64_t static JointKey.middleDIP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D818, &qword_255B16880, a1);
}

void sub_22AAD7570(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9ED8], &qword_255B16890, algn_255B16898);
}

uint64_t static JointKey.middlePIP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D820, &qword_255B16890, a1);
}

void sub_22AAD75A4(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9ED0], &qword_255B168A0, algn_255B168A8);
}

uint64_t static JointKey.middleMCP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D828, &qword_255B168A0, a1);
}

void sub_22AAD75D8(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9F00], &qword_255B168B0, algn_255B168B8);
}

uint64_t static JointKey.ringTip.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D830, &qword_255B168B0, a1);
}

void sub_22AAD760C(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9EE8], &qword_255B168C0, algn_255B168C8);
}

uint64_t static JointKey.ringDIP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D838, &qword_255B168C0, a1);
}

void sub_22AAD7640(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9EF8], &qword_255B168D0, algn_255B168D8);
}

uint64_t static JointKey.ringPIP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D840, &qword_255B168D0, a1);
}

void sub_22AAD7674(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9EF0], &qword_255B168E0, algn_255B168E8);
}

uint64_t static JointKey.ringMCP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D848, &qword_255B168E0, a1);
}

void sub_22AAD76A8(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9EC0], &qword_255B168F0, algn_255B168F8);
}

uint64_t static JointKey.littleTip.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D850, &qword_255B168F0, a1);
}

void sub_22AAD76DC(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9EA8], &qword_255B16900, algn_255B16908);
}

uint64_t static JointKey.littleDIP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D858, &qword_255B16900, a1);
}

void sub_22AAD7710(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9EB8], &qword_255B16910, algn_255B16918);
}

uint64_t static JointKey.littlePIP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D860, &qword_255B16910, a1);
}

void sub_22AAD7744(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9EB0], &qword_255B16920, algn_255B16928);
}

uint64_t static JointKey.littleMCP.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D868, &qword_255B16920, a1);
}

void sub_22AAD7778(uint64_t a1)
{
  sub_22AAD7790(a1, MEMORY[0x24BDF9F28], &qword_255B16930, algn_255B16938);
}

void sub_22AAD7790(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_22ABDED50();
  v6 = (void *)sub_22ABDED2C();
  swift_bridgeObjectRelease();
  v7 = sub_22ABDED50();
  v9 = v8;

  *a3 = v7;
  *a4 = v9;
}

uint64_t static JointKey.wrist.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_68(&qword_255B0D870, &qword_255B16930, a1);
}

uint64_t sub_22AAD7814@<X0>(Swift::String *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = JointKey.init(rawValue:)(*a1).rawValue._countAndFlagsBits;
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_22AAD7850@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = JointKey.debugDescription.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22AAD7874(_QWORD *a1, _QWORD *a2)
{
  return sub_22AA1A01C(*a1, a1[1], *a2, a2[1]);
}

uint64_t JointKey.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_22ABDEAEC();
  return v1;
}

uint64_t JointPoint.key.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return sub_22ABDEAEC();
}

double JointPoint.location.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void JointPoint.location.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t (*JointPoint.location.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

float JointPoint.confidence.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void JointPoint.confidence.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*JointPoint.confidence.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Pose.keypoints.getter()
{
  return sub_22ABDEAEC();
}

uint64_t Pose.keypoints.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Pose.keypoints.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_22AAD7944(uint64_t a1, float a2)
{
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  float v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_22_21();
    v5 = (_DWORD *)(v3 + 64);
    v6 = MEMORY[0x24BEE4AF8];
    v7 = v4;
    do
    {
      v8 = *(float *)v5;
      if (*(float *)v5 > a2)
      {
        v10 = *((_QWORD *)v5 - 4);
        v9 = *((_QWORD *)v5 - 3);
        v38 = *((_OWORD *)v5 - 1);
        sub_22ABDEAEC();
        v40 = v6;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          OUTLINED_FUNCTION_5_61();
        v12 = *(_QWORD *)(v6 + 16);
        v11 = *(_QWORD *)(v6 + 24);
        if (v12 >= v11 >> 1)
          sub_22AB4CDE0(v11 > 1, v12 + 1, 1);
        *(_QWORD *)(v6 + 16) = v12 + 1;
        v13 = v6 + 40 * v12;
        *(_QWORD *)(v13 + 32) = v10;
        *(_QWORD *)(v13 + 40) = v9;
        *(_OWORD *)(v13 + 48) = v38;
        *(float *)(v13 + 64) = v8;
      }
      v5 += 10;
      --v7;
    }
    while (v7);
    v3 = a1;
    OUTLINED_FUNCTION_23();
  }
  else
  {
    v6 = MEMORY[0x24BEE4AF8];
  }
  v14 = *(_QWORD *)(v6 + 16);
  if (v14)
  {
    OUTLINED_FUNCTION_9_59();
    v15 = v40;
    v16 = *(_QWORD *)(v40 + 16);
    v17 = 48;
    do
    {
      v18 = *(_QWORD *)(v6 + v17);
      v40 = v15;
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
        OUTLINED_FUNCTION_12_55();
      *(_QWORD *)(v15 + 16) = v16 + 1;
      *(_QWORD *)(v15 + 8 * v16 + 32) = v18;
      v17 += 40;
      ++v16;
      --v14;
    }
    while (v14);
    OUTLINED_FUNCTION_49_5();
  }
  else
  {
    OUTLINED_FUNCTION_49_5();
    v15 = MEMORY[0x24BEE4AF8];
  }
  if (v4)
  {
    OUTLINED_FUNCTION_22_21();
    v19 = (_DWORD *)(v3 + 64);
    v20 = MEMORY[0x24BEE4AF8];
    do
    {
      v21 = *(float *)v19;
      if (*(float *)v19 > a2)
      {
        v23 = *((_QWORD *)v19 - 4);
        v22 = *((_QWORD *)v19 - 3);
        v39 = *((_OWORD *)v19 - 1);
        sub_22ABDEAEC();
        v40 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          OUTLINED_FUNCTION_5_61();
        v25 = *(_QWORD *)(v20 + 16);
        v24 = *(_QWORD *)(v20 + 24);
        if (v25 >= v24 >> 1)
          sub_22AB4CDE0(v24 > 1, v25 + 1, 1);
        *(_QWORD *)(v20 + 16) = v25 + 1;
        v26 = v20 + 40 * v25;
        *(_QWORD *)(v26 + 32) = v23;
        *(_QWORD *)(v26 + 40) = v22;
        *(_OWORD *)(v26 + 48) = v39;
        *(float *)(v26 + 64) = v21;
      }
      v19 += 10;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = MEMORY[0x24BEE4AF8];
  }
  v27 = *(_QWORD *)(v20 + 16);
  if (v27)
  {
    OUTLINED_FUNCTION_9_59();
    v28 = v40;
    v29 = *(_QWORD *)(v40 + 16);
    v30 = 56;
    do
    {
      v31 = *(_QWORD *)(v20 + v30);
      if (v29 >= *(_QWORD *)(v40 + 24) >> 1)
        OUTLINED_FUNCTION_12_55();
      *(_QWORD *)(v40 + 16) = v29 + 1;
      *(_QWORD *)(v40 + 8 * v29 + 32) = v31;
      v30 += 40;
      ++v29;
      --v27;
    }
    while (v27);
    OUTLINED_FUNCTION_49_5();
  }
  else
  {
    OUTLINED_FUNCTION_49_5();
    v28 = MEMORY[0x24BEE4AF8];
  }
  sub_22AA6E144(v15);
  if ((v32 & 1) != 0 || (sub_22AA6E144(v28), (v33 & 1) != 0))
  {
    OUTLINED_FUNCTION_23();
  }
  else
  {
    sub_22A9F4F60(v15);
    v35 = v34;
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      sub_22A9F4F60(v28);
      return OUTLINED_FUNCTION_23();
    }
  }
  return swift_bridgeObjectRelease();
}

BOOL static JointPoint.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  float v4;
  double v5;
  double v6;
  float v7;
  char v9;
  _BOOL8 result;

  v3 = *(double *)(a1 + 16);
  v2 = *(double *)(a1 + 24);
  v4 = *(float *)(a1 + 32);
  v6 = *(double *)(a2 + 16);
  v5 = *(double *)(a2 + 24);
  v7 = *(float *)(a2 + 32);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v3 != v6 || v2 != v5)
      return 0;
    return v4 == v7;
  }
  v9 = sub_22ABDFF68();
  result = 0;
  if ((v9 & 1) != 0 && v3 == v6 && v2 == v5)
    return v4 == v7;
  return result;
}

uint64_t static Pose.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a2[1];
  v5 = a2[2];
  if ((sub_22AA39BC8(*a1, *a2) & 1) == 0)
    return 0;
  if (v2 == v4 && v3 == v5)
    return 1;
  else
    return sub_22ABDFF68();
}

unint64_t sub_22AAD7DC0()
{
  unint64_t result;

  result = qword_255B16940;
  if (!qword_255B16940)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for JointKey, &type metadata for JointKey);
    atomic_store(result, (unint64_t *)&qword_255B16940);
  }
  return result;
}

void type metadata accessor for JointKey()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t initializeWithCopy for JointPoint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_22ABDEAEC();
  return a1;
}

uint64_t assignWithCopy for JointPoint(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for JointPoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for JointPoint(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 36))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JointPoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 36) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for JointPoint()
{
  OUTLINED_FUNCTION_24_2();
}

uint64_t destroy for Pose()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s18CreateMLComponents4PoseVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *assignWithCopy for Pose(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for Pose(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Pose()
{
  OUTLINED_FUNCTION_24_2();
}

void sub_22AAD80B0(uint64_t a1, char a2)
{
  sub_22AAD80C8(a1, a2);
}

void sub_22AAD80BC(uint64_t a1, char a2)
{
  sub_22AAD80C8(a1, a2);
}

void sub_22AAD80C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t *v37;
  _QWORD *v38;

  v4 = v2;
  OUTLINED_FUNCTION_11_61();
  __swift_instantiateConcreteTypeFromMangledName(v6);
  OUTLINED_FUNCTION_19_45();
  v7 = OUTLINED_FUNCTION_25_34();
  if (v3[2])
  {
    OUTLINED_FUNCTION_2_72();
    v37 = v2;
    v38 = v10;
    if (v8 < 64)
      v11 = ~(-1 << v8);
    else
      v11 = -1;
    v12 = v11 & v9;
    v13 = (unint64_t)(v8 + 63) >> 6;
    v14 = v7 + 64;
    OUTLINED_FUNCTION_26_35();
    v15 = 0;
    if (!v12)
      goto LABEL_7;
LABEL_6:
    v16 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    for (i = v16 | (v15 << 6); ; i = v23 + (v15 << 6))
    {
      v24 = *(void **)(v3[6] + 8 * i);
      v25 = *(void **)(v3[7] + 8 * i);
      if ((a2 & 1) == 0)
      {
        v26 = v24;
        v27 = v25;
      }
      v28 = sub_22ABDF554() & ~(-1 << *(_BYTE *)(v7 + 32));
      if (((-1 << v28) & ~*(_QWORD *)(v14 + 8 * (v28 >> 6))) == 0)
      {
        OUTLINED_FUNCTION_10_54();
        while (++v31 != v32 || (v30 & 1) == 0)
        {
          v33 = v31 == v32;
          if (v31 == v32)
            v31 = 0;
          v30 |= v33;
          if (*(_QWORD *)(v14 + 8 * v31) != -1)
          {
            OUTLINED_FUNCTION_8_58();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_13_63();
LABEL_30:
      *(_QWORD *)(v14 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v29) = v24;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v29) = v25;
      OUTLINED_FUNCTION_17_47();
      if (v12)
        goto LABEL_6;
LABEL_7:
      v18 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_41;
      if (v18 >= v13)
        break;
      v19 = v38;
      ++v15;
      if (!v38[v18])
      {
        v15 = v18 + 1;
        if (v18 + 1 >= v13)
          goto LABEL_32;
        if (!v38[v15])
        {
          v20 = v18 + 2;
          if (v20 >= v13)
          {
LABEL_32:
            OUTLINED_FUNCTION_18_10();
            v4 = v37;
            if ((a2 & 1) == 0)
              goto LABEL_39;
            goto LABEL_35;
          }
          if (!v38[v20])
          {
            while (1)
            {
              v15 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_42;
              if (v15 >= v13)
                goto LABEL_32;
              ++v20;
              if (v38[v15])
                goto LABEL_18;
            }
          }
          v15 = v20;
        }
      }
LABEL_18:
      OUTLINED_FUNCTION_18_53();
      v12 = v22 & v21;
    }
    OUTLINED_FUNCTION_18_10();
    v4 = v37;
    v19 = v38;
    if ((a2 & 1) == 0)
      goto LABEL_39;
LABEL_35:
    OUTLINED_FUNCTION_7_70();
    if (v35 != v36)
      *v19 = -1 << v34;
    else
      OUTLINED_FUNCTION_15_54(v34);
    v3[2] = 0;
  }
LABEL_39:
  OUTLINED_FUNCTION_18_10();
  *v4 = v7;
}

void sub_22AAD82FC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  _QWORD *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  char v39;

  v4 = v2;
  OUTLINED_FUNCTION_11_61();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16950);
  OUTLINED_FUNCTION_19_45();
  v39 = a2;
  v6 = OUTLINED_FUNCTION_25_34();
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_36;
  OUTLINED_FUNCTION_2_72();
  v38 = v7;
  OUTLINED_FUNCTION_27_36();
  v10 = v9 & v8;
  v36 = v2;
  v37 = (unint64_t)(v11 + 63) >> 6;
  OUTLINED_FUNCTION_26_35();
  v12 = 0;
  if (!v10)
    goto LABEL_4;
LABEL_3:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v13 | (v12 << 6); ; i = v20 + (v12 << 6))
  {
    v21 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * i);
    v22 = *v21;
    v23 = v21[1];
    if ((v39 & 1) == 0)
    {
      OUTLINED_FUNCTION_29();
      sub_22ABDEAEC();
    }
    sub_22ABE0244();
    OUTLINED_FUNCTION_23_44();
    sub_22ABE0280();
    OUTLINED_FUNCTION_4_63();
    if (v24)
    {
      OUTLINED_FUNCTION_10_54();
      while (++v27 != v28 || (v26 & 1) == 0)
      {
        v29 = v27 == v28;
        if (v27 == v28)
          v27 = 0;
        v26 |= v29;
        if (*(_QWORD *)(v6 + 64 + 8 * v27) != -1)
        {
          OUTLINED_FUNCTION_8_58();
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return;
    }
    OUTLINED_FUNCTION_13_63();
LABEL_27:
    OUTLINED_FUNCTION_1_60(v25);
    v32 = (_QWORD *)(v31 + 16 * v30);
    *v32 = v22;
    v32[1] = v23;
    OUTLINED_FUNCTION_17_47();
    if (v10)
      goto LABEL_3;
LABEL_4:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_38;
    if (v15 >= v37)
    {
      OUTLINED_FUNCTION_18_10();
      v4 = v36;
      v16 = v38;
      goto LABEL_31;
    }
    v16 = v38;
    ++v12;
    if (!v38[v15])
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v37)
        goto LABEL_29;
      if (!v38[v12])
        break;
    }
LABEL_15:
    OUTLINED_FUNCTION_18_53();
    v10 = v19 & v18;
  }
  v17 = v15 + 2;
  if (v17 < v37)
  {
    if (!v38[v17])
    {
      while (1)
      {
        v12 = v17 + 1;
        if (__OFADD__(v17, 1))
          goto LABEL_39;
        if (v12 >= v37)
          goto LABEL_29;
        ++v17;
        if (v38[v12])
          goto LABEL_15;
      }
    }
    v12 = v17;
    goto LABEL_15;
  }
LABEL_29:
  OUTLINED_FUNCTION_18_10();
  v4 = v36;
LABEL_31:
  if ((v39 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_70();
    if (v34 != v35)
      *v16 = -1 << v33;
    else
      OUTLINED_FUNCTION_15_54(v33);
    *(_QWORD *)(v3 + 16) = 0;
  }
LABEL_36:
  OUTLINED_FUNCTION_18_10();
  *v4 = v6;
}

unint64_t sub_22AAD8524(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16958);
  v6 = (_QWORD *)sub_22ABDFB78();
  if (*(_QWORD *)(v5 + 16))
  {
    v24 = v3;
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    if (!v10)
      goto LABEL_6;
LABEL_5:
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
      v21 = *v19;
      v20 = v19[1];
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
      if ((a2 & 1) == 0)
        sub_22ABDEAEC();
      result = sub_22AAD8C7C(v21, v20, v22, v6);
      if (v10)
        goto LABEL_5;
LABEL_6:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      if (v16 >= v11)
        goto LABEL_22;
      v17 = v8[v16];
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v11)
          goto LABEL_22;
        v17 = v8[v13];
        if (!v17)
        {
          v18 = v16 + 2;
          if (v18 >= v11)
          {
LABEL_22:
            swift_release();
            v3 = v24;
            if ((a2 & 1) != 0)
            {
              v23 = 1 << *(_BYTE *)(v5 + 32);
              if (v23 > 63)
                sub_22AAD8D68(0, (unint64_t)(v23 + 63) >> 6, (_QWORD *)(v5 + 64));
              else
                *v8 = -1 << v23;
              *(_QWORD *)(v5 + 16) = 0;
            }
            break;
          }
          v17 = v8[v18];
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_29;
              if (v13 >= v11)
                goto LABEL_22;
              v17 = v8[v13];
              ++v18;
              if (v17)
                goto LABEL_17;
            }
          }
          v13 = v18;
        }
      }
LABEL_17:
      v10 = (v17 - 1) & v17;
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

void sub_22AAD871C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  int64_t v38;
  _QWORD *v39;
  char v40;
  __int128 v41;

  v4 = v2;
  OUTLINED_FUNCTION_11_61();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EF00);
  OUTLINED_FUNCTION_19_45();
  v40 = a2;
  v6 = OUTLINED_FUNCTION_25_34();
  if (*(_QWORD *)(v3 + 16))
  {
    OUTLINED_FUNCTION_2_72();
    v39 = v7;
    OUTLINED_FUNCTION_27_36();
    v10 = v9 & v8;
    v38 = (unint64_t)(v11 + 63) >> 6;
    OUTLINED_FUNCTION_26_35();
    v12 = 0;
    v13 = 40;
    if (!v10)
      goto LABEL_4;
LABEL_3:
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v14 | (v12 << 6); ; i = v20 + (v12 << 6))
    {
      v21 = *(_QWORD *)(v3 + 56) + i * v13;
      v23 = *(_QWORD *)v21;
      v22 = *(_QWORD *)(v21 + 8);
      v41 = *(_OWORD *)(v21 + 16);
      v24 = *(_DWORD *)(v21 + 32);
      if ((v40 & 1) == 0)
      {
        OUTLINED_FUNCTION_29();
        sub_22ABDEAEC();
      }
      sub_22ABE0244();
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_23_44();
      swift_bridgeObjectRelease();
      sub_22ABE0280();
      OUTLINED_FUNCTION_4_63();
      if (v25)
      {
        OUTLINED_FUNCTION_10_54();
        while (++v28 != v29 || (v27 & 1) == 0)
        {
          v30 = v28 == v29;
          if (v28 == v29)
            v28 = 0;
          v27 |= v30;
          if (*(_QWORD *)(v6 + 64 + 8 * v28) != -1)
          {
            OUTLINED_FUNCTION_8_58();
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_13_63();
LABEL_27:
      OUTLINED_FUNCTION_1_60(v26);
      v34 = v32 + v31 * v33;
      *(_QWORD *)v34 = v23;
      *(_QWORD *)(v34 + 8) = v22;
      *(_OWORD *)(v34 + 16) = v41;
      *(_DWORD *)(v34 + 32) = v24;
      OUTLINED_FUNCTION_17_47();
      if (v10)
        goto LABEL_3;
LABEL_4:
      v16 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_36;
      if (v16 >= v38)
        goto LABEL_29;
      ++v12;
      if (!v39[v16])
      {
        v12 = v16 + 1;
        if (v16 + 1 >= v38)
          goto LABEL_29;
        if (!v39[v12])
        {
          v17 = v16 + 2;
          if (v17 >= v38)
          {
LABEL_29:
            OUTLINED_FUNCTION_18_10();
            v4 = v2;
            if ((v40 & 1) != 0)
            {
              OUTLINED_FUNCTION_7_70();
              if (v36 != v37)
                *v39 = -1 << v35;
              else
                sub_22AAD8D68(0, (unint64_t)(v35 + 63) >> 6, v39);
              *(_QWORD *)(v3 + 16) = 0;
            }
            break;
          }
          if (!v39[v17])
          {
            while (1)
            {
              v12 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_37;
              if (v12 >= v38)
                goto LABEL_29;
              ++v17;
              if (v39[v12])
                goto LABEL_15;
            }
          }
          v12 = v17;
        }
      }
LABEL_15:
      OUTLINED_FUNCTION_18_53();
      v10 = v19 & v18;
    }
  }
  OUTLINED_FUNCTION_18_10();
  *v4 = v6;
}

uint64_t sub_22AAD8984(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16948);
  v37 = a2;
  v6 = sub_22ABDFB78();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0)
      sub_22ABDEAEC();
    sub_22ABE0244();
    sub_22ABDEDB0();
    result = sub_22ABE0280();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v27);
    *v32 = v22;
    v32[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v27) = v23;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v35)
    {
      swift_release();
      v3 = v34;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v36 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v35)
        goto LABEL_32;
      v18 = *(_QWORD *)(v36 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v35)
  {
    v18 = *(_QWORD *)(v36 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v35)
          goto LABEL_32;
        v18 = *(_QWORD *)(v36 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v34;
LABEL_34:
  if ((v37 & 1) != 0)
  {
    v33 = 1 << *(_BYTE *)(v5 + 32);
    if (v33 >= 64)
      sub_22AAD8D68(0, (unint64_t)(v33 + 63) >> 6, v17);
    else
      *v17 = -1 << v33;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_22AAD8C7C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  unint64_t result;
  _QWORD *v9;

  sub_22ABE0244();
  sub_22ABE025C();
  if (a2)
  {
    sub_22ABDEAEC();
    sub_22ABDEDB0();
    swift_bridgeObjectRelease();
  }
  sub_22ABE0280();
  result = sub_22ABDF728();
  *(_QWORD *)((char *)a4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v9 = (_QWORD *)(a4[6] + 16 * result);
  *v9 = a1;
  v9[1] = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  ++a4[2];
  return result;
}

uint64_t sub_22AAD8D68(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_22AAD8D84(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v36 = a1[2];
  if (v36 && (v7 = a2, a2 != a3))
  {
    if (a3 >= a2)
    {
      v10 = a1[4];
      v9 = a1[5];
      sub_22ABDEAEC();
      sub_22ABDEAEC();
      v34 = v7 - a3;
      if (v7 >= a3)
      {
LABEL_27:
        __break(1u);
      }
      else
      {
        v11 = a1 + 7;
        v12 = 1;
        v33 = a3;
        v35 = a1;
        while (1)
        {
          v13 = v7;
          v14 = (_QWORD *)*a5;
          v15 = v9;
          v17 = sub_22AA0371C();
          v18 = v14[2];
          v19 = (v16 & 1) == 0;
          v20 = v18 + v19;
          if (__OFADD__(v18, v19))
            break;
          v21 = v16;
          if (v14[3] >= v20)
          {
            if ((a4 & 1) != 0)
            {
              if ((v16 & 1) != 0)
                goto LABEL_24;
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_255B16960);
              sub_22ABDFA70();
              if ((v21 & 1) != 0)
                goto LABEL_24;
            }
          }
          else
          {
            sub_22AAD8524(v20, a4 & 1);
            v22 = sub_22AA0371C();
            if ((v21 & 1) != (v23 & 1))
              goto LABEL_32;
            v17 = v22;
            if ((v21 & 1) != 0)
            {
LABEL_24:
              v31 = (void *)swift_allocError();
              swift_willThrow(v31);
              v32 = v31;
              __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
              if ((swift_dynamicCast() & 1) != 0)
                goto LABEL_33;
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();

              return;
            }
          }
          v24 = v13 + v12;
          v25 = (_QWORD *)*a5;
          *(_QWORD *)(*a5 + 8 * (v17 >> 6) + 64) |= 1 << v17;
          v26 = (_QWORD *)(v25[6] + 16 * v17);
          *v26 = v10;
          v26[1] = v15;
          *(_QWORD *)(v25[7] + 8 * v17) = v13 + v12 - 1;
          v27 = v25[2];
          v28 = __OFADD__(v27, 1);
          v29 = v27 + 1;
          if (v28)
            goto LABEL_29;
          v25[2] = v29;
          if (v36 == v12)
            goto LABEL_26;
          v7 = v13;
          if (v12 >= v35[2])
            goto LABEL_30;
          if (!(v34 + v12))
          {
LABEL_26:
            swift_bridgeObjectRelease_n();
            return;
          }
          ++v12;
          v10 = *(v11 - 1);
          v9 = *v11;
          sub_22ABDEAEC();
          v11 += 2;
          a4 = 1;
          if (v24 < v13 || v24 >= v33)
            goto LABEL_27;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
    }
    __break(1u);
LABEL_32:
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FD90);
    sub_22ABE0190();
    __break(1u);
LABEL_33:
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FD90);
    sub_22ABDFA34();
    sub_22ABDEDC8();
    sub_22ABDFADC();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_22AAD90F0(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v5 = (uint64_t *)(sub_22ABDEAEC() + 48);
  while (1)
  {
    v7 = *(v5 - 2);
    v6 = *(v5 - 1);
    v8 = *v5;
    v9 = (_QWORD *)*a3;
    sub_22ABDEAEC();
    v11 = sub_22AA03688();
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_22ABE0190();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v9[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F278);
      sub_22ABDFA70();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v19 = (_QWORD *)(v18[6] + 16 * v11);
    *v19 = v7;
    v19[1] = v6;
    *(_QWORD *)(v18[7] + 8 * v11) = v8;
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v5 += 3;
    v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_22AAD8984(v14, a2 & 1);
  v16 = sub_22AA03688();
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow(v23);
  v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFA34();
  sub_22ABDEDC8();
  sub_22ABDFADC();
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_0_68@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_22AAD6FA4(a1, a2, a2 + 1, a3);
}

uint64_t OUTLINED_FUNCTION_5_61()
{
  uint64_t v0;

  return sub_22AB4CDE0(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

void OUTLINED_FUNCTION_9_59()
{
  sub_22AB4D694();
}

void OUTLINED_FUNCTION_12_55()
{
  sub_22AB4D694();
}

uint64_t OUTLINED_FUNCTION_15_54@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_22AAD8D68(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t OUTLINED_FUNCTION_16_50()
{
  return swift_unexpectedError();
}

void OUTLINED_FUNCTION_17_47()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_19_45()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_44()
{
  return sub_22ABDEDB0();
}

uint64_t OUTLINED_FUNCTION_25_34()
{
  return sub_22ABDFB78();
}

uint64_t OUTLINED_FUNCTION_26_35()
{
  return swift_retain();
}

void TimeSeriesClassifier.Model.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8[16] = a7;
  v8[17] = v7;
  v8[14] = a5;
  v8[15] = a6;
  v8[12] = a1;
  v8[13] = a2;
  v8[18] = *(_QWORD *)(a6 - 8);
  v8[19] = OUTLINED_FUNCTION_0_0();
  v8[20] = *(a5 - 1);
  v8[21] = OUTLINED_FUNCTION_0_0();
  v12 = a5[2];
  v8[22] = v12;
  v13 = a5[3];
  v8[23] = v13;
  v14 = a5[4];
  v8[24] = v14;
  v15 = a5[5];
  v8[25] = v15;
  v16 = a5[6];
  v8[26] = v16;
  v17 = a5[7];
  v8[27] = v17;
  v18 = a5[8];
  v8[28] = v18;
  v19 = a5[9];
  v8[29] = v19;
  v8[2] = v12;
  v8[3] = v13;
  v8[4] = a6;
  v8[5] = v14;
  v8[6] = v15;
  v8[7] = v16;
  v8[8] = v17;
  v8[9] = v18;
  v8[10] = v19;
  v8[11] = a7;
  _s14descr24F4C7119C18PredictionSequenceVMa();
}

uint64_t sub_22AAD95E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
  *(_QWORD *)(v1 + 248) = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AAD9614()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[19];
  v2 = v0[18];
  v3 = v0[15];
  v4 = v0[13];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[20] + 16))(v0[21], v0[17], v0[14]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  sub_22AAD976C();
}

uint64_t sub_22AAD96F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v8 = type metadata accessor for ClassificationDistribution(0, v6, v5, a4);
  v9 = *(_QWORD *)(v7 - 80);
  v10 = MEMORY[0x22E2E4D80](&unk_22ABF8778, v9);
  AnyTemporalSequence.init<A>(_:)(v4, v8, v9, v10, *(_QWORD *)(v7 - 88));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_11_3();
  v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v11();
}

void _s14descr24F4C7119C18PredictionSequenceVMa()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AAD976C()
{
  OUTLINED_FUNCTION_9_60();
}

void sub_22AAD97D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v9, a9, a1);
  _s14descr24F4C7119C18PredictionSequenceVMa();
}

uint64_t sub_22AAD9810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = OUTLINED_FUNCTION_24_11(v2 + *(int *)(a1 + 100), v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
  *(_QWORD *)(v2 + *(int *)(a1 + 104)) = v6;
  return result;
}

void sub_22AAD9858()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAD9868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v13;
  *v13 = v7;
  v13[1] = sub_22AA16B30;
  TimeSeriesClassifier.Model.applied<A>(to:eventHandler:)(a1, a2, v14, v15, a7, a5, a6);
}

void sub_22AAD98E8()
{
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t *sub_22AAD9998(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  size_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void (*v59)(unint64_t, unint64_t, uint64_t);
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  int v86;
  size_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _DWORD *v92;
  _DWORD *v93;
  uint64_t v94;
  void *v95;
  const void *v96;
  _DWORD *v97;
  _DWORD *v98;
  _DWORD *v99;
  _DWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  unint64_t v103;
  unint64_t v104;
  void (*v105)(unint64_t, unint64_t, uint64_t);
  unint64_t v106;
  unint64_t v107;
  void *v108;
  const void *v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  _QWORD *v117;
  _QWORD *v118;
  _QWORD *v119;
  unint64_t v120;
  unint64_t v121;
  void (*v122)(unint64_t, unint64_t, uint64_t);
  size_t v124;
  uint64_t v125;
  size_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  size_t __n;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int v145;
  unsigned int v146;
  size_t v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  void (*v157)(unint64_t, unint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;

  v154 = sub_22ABDD73C();
  v4 = *(_QWORD *)(v154 - 8);
  v168 = *(_QWORD *)(v4 + 64);
  v171 = sub_22ABDD8A4();
  v5 = *(_QWORD *)(v171 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v159 = sub_22ABDDAE4();
  v7 = *(_QWORD *)(v159 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = (v8 | v6);
  v153 = v5;
  v156 = v7;
  v162 = *(_QWORD *)(v5 + 64);
  v164 = *(_QWORD *)(v7 + 64);
  v160 = sub_22ABDD7D8();
  v10 = *(_QWORD *)(v160 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v158 = v10;
  v166 = *(_QWORD *)(v10 + 64);
  v149 = sub_22ABDD5D4();
  v12 = *(_QWORD *)(v149 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = *(_DWORD *)(v15 + 84);
  v18 = v16 | (unint64_t)v13;
  v19 = *(_DWORD *)(v12 + 84);
  v20 = v19 - 1;
  if (!v19)
    v20 = 0;
  v148 = v20;
  if (v17 > v20)
    v20 = *(_DWORD *)(v15 + 84);
  v21 = v17 - 1;
  if (!v17)
    v21 = 0;
  if (v21 <= v20)
    v22 = v20;
  else
    v22 = v21;
  v145 = *(_DWORD *)(v12 + 84);
  v146 = *(_DWORD *)(v15 + 84);
  v143 = v12;
  if (v19)
    v23 = *(_QWORD *)(v12 + 64);
  else
    v23 = *(_QWORD *)(v12 + 64) + 1;
  v170 = v13;
  v147 = v23;
  v24 = v23 + 3;
  v25 = (v16
       + 8
       + ((((((v23 + 3 + ((v13 + 16) & ~(unint64_t)v13)) & 0xFFFFFFFFFFFFFFFCLL)
           + 7) & 0xFFFFFFFFFFFFFFFCLL)
         + 11) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v16;
  v26 = *(_QWORD *)(v15 + 64);
  v27 = v26 + v16;
  v28 = (v27 + ((v27 + v25) & ~(unint64_t)v16)) & ~(unint64_t)v16;
  if (v17)
    v29 = *(_QWORD *)(v15 + 64);
  else
    v29 = v26 + 1;
  v30 = (v29 + 3 + v28) & 0xFFFFFFFFFFFFFFFCLL;
  v31 = v30 + 4;
  v32 = v30 + 5;
  v161 = v22;
  if (v22)
    v33 = v31;
  else
    v33 = v32;
  v34 = *(_QWORD *)(a3 + 32);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(_DWORD *)(v35 + 80);
  v151 = v4;
  v37 = v18 | v11 | *(_DWORD *)(v4 + 80) & 0xF8 | v9 | v36 | 7;
  if (v37 == 7 && ((v8 | v6 | v11 | v13 | v16 | v36 | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    v38 = v11;
    v39 = (v8 | v6);
    v40 = v168 + v9;
    v41 = (v168 + v9) & ~v9;
    v163 = v162 + v8;
    v42 = (v163 & ~(unint64_t)v8) + v164;
    v165 = v42 + v39;
    v43 = (v42 + v39 + ((v42 + v39 + v41) & ~v39)) & ~v39;
    v44 = v11 | 7;
    v144 = v42;
    v45 = v44 + v42;
    v46 = v166 + v11;
    v47 = v166 + 7;
    v48 = ((v166 + 7 + (v46 & ~(unint64_t)v11)) & 0xFFFFFFFFFFFFFFF8) + 8;
    v49 = v48 + v11;
    v50 = v18 | 7;
    v51 = ((((v166 + 7 + ((v49 + ((v48 + v44 + ((v45 + v43) & ~(v38 | 7))) & ~(v38 | 7))) & ~v38)) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + v50
        + 8;
    if (((*(_QWORD *)(v35 + 64)
         + 7
         + ((((((((((((((v33 + (v51 & ~v50) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + v36
           + 8) & ~(unint64_t)v36)) & 0xFFFFFFFFFFFFFFF8)
       + 8 <= 0x18)
    {
      v131 = v24;
      v128 = v27;
      v129 = v16 + 8;
      v134 = ((((((((((((v33 + (v51 & ~v50) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + v36
           + 8;
      v124 = v29;
      v125 = *(_QWORD *)(v14 - 8);
      v169 = *(_QWORD *)(v35 + 64) + 7;
      v126 = v29 + 3;
      v127 = v31;
      __n = v33;
      v136 = *(_QWORD *)(v34 - 8);
      v132 = v14;
      v167 = v34;
      v137 = v39;
      v139 = v46;
      v140 = v48 + v44;
      v52 = ~v39;
      v53 = ~(unint64_t)v8;
      v138 = ~v44;
      v150 = v38;
      v141 = v49;
      v54 = ~v38;
      v142 = ~v50;
      v130 = ~(unint64_t)v16;
      v133 = ~(unint64_t)v36;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v151 + 16))(a1, a2, v154);
      v155 = v51;
      v55 = (unint64_t)a1 + v40;
      v152 = v47;
      v56 = ((unint64_t)a1 + v40) & ~v39;
      v57 = (unint64_t)a2 + v40;
      v58 = ((unint64_t)a2 + v40) & v52;
      v59 = *(void (**)(unint64_t, unint64_t, uint64_t))(v153 + 16);
      v59(v56, v58, v171);
      v60 = v163;
      v157 = *(void (**)(unint64_t, unint64_t, uint64_t))(v156 + 16);
      v157((v163 + v56) & v53, (v163 + v58) & v53, v159);
      v61 = ((v55 | v137) + v144) & v52;
      v62 = ((v57 | v137) + v144) & v52;
      v59(v61, v62, v171);
      v157((v60 + v61) & v53, (v60 + v62) & v53, v159);
      v63 = (v165 + v61) & v52;
      v64 = (v165 + v62) & v52;
      v59(v63, v64, v171);
      v157((v60 + v63) & v53, (v60 + v64) & v53, v159);
      v65 = (v45 + v63) & v138;
      v66 = (v45 + v64) & v138;
      v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 16);
      v67((v65 + v150) & v54, (v66 + v150) & v54, v160);
      v68 = (v139 + ((v65 + v150) & v54)) & v54;
      v69 = (v139 + ((v66 + v150) & v54)) & v54;
      v67(v68, v69, v160);
      *(_QWORD *)((v152 + v68) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v152 + v69) & 0xFFFFFFFFFFFFF8);
      v70 = (v140 + v65) & v138;
      v71 = (v140 + v66) & v138;
      v72 = a1;
      v67((v70 + v150) & v54, (v71 + v150) & v54, v160);
      v73 = (v139 + ((v70 + v150) & v54)) & v54;
      v74 = (v139 + ((v71 + v150) & v54)) & v54;
      v67(v73, v74, v160);
      *(_QWORD *)((v152 + v73) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v152 + v74) & 0xFFFFFFFFFFFFF8);
      v67((v141 + v70) & v54, (v141 + v71) & v54, v160);
      v75 = (_QWORD *)((v152 + ((v141 + v70) & v54)) & 0xFFFFFFFFFFFFF8);
      v76 = (_QWORD *)((v152 + ((v141 + v71) & v54)) & 0xFFFFFFFFFFFFF8);
      *v75 = *v76;
      *(_QWORD *)(((unint64_t)v75 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFF8);
      v77 = ((unint64_t)a1 + v155) & v142;
      v78 = ((unint64_t)a2 + v155) & v142;
      if (v161)
      {
        v79 = v170;
        v80 = ~v170;
        v81 = (v170 + ((v78 + 11) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v170;
        if (v148 == v161)
        {
          v82 = v149;
          v83 = v169;
          if (__swift_getEnumTagSinglePayload(v81, v145, v149) < 2)
            goto LABEL_36;
        }
        else
        {
          v91 = (v129
               + ((((((v131 + v81) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v130;
          v83 = v169;
          v82 = v149;
          if (v146 == v161)
          {
            if (!__swift_getEnumTagSinglePayload(v91, v146, v132))
              goto LABEL_36;
          }
          else if (__swift_getEnumTagSinglePayload((v128 + ((v128 + v91) & v130)) & v130, v146, v132) < 2)
          {
LABEL_36:
            *(_DWORD *)v77 = *(_DWORD *)v78;
            *(_DWORD *)(v77 | 4) = *(_DWORD *)(v78 | 4);
            v92 = (_DWORD *)((v77 + 11) & 0xFFFFFFFFFFFFFFF8);
            v93 = (_DWORD *)((v78 + 11) & 0xFFFFFFFFFFFFFFF8);
            *v92 = *v93;
            v92[1] = v93[1];
            v94 = v79 + 8;
            v95 = (void *)(((unint64_t)v92 + v79 + 8) & v80);
            v96 = (const void *)(((unint64_t)v93 + v94) & v80);
            if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v82))
            {
              memcpy(v95, v96, v147);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v143 + 16))(v95, v96, v82);
              __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v82);
            }
            v97 = (_DWORD *)(((unint64_t)v96 + v131) & 0xFFFFFFFFFFFFFFFCLL);
            v98 = (_DWORD *)(((unint64_t)v95 + v131) & 0xFFFFFFFFFFFFFFFCLL);
            *v98 = *v97;
            v99 = (_DWORD *)(((unint64_t)v97 + 7) & 0xFFFFFFFFFFFFFFFCLL);
            v100 = (_DWORD *)(((unint64_t)v98 + 7) & 0xFFFFFFFFFFFFFCLL);
            *v100 = *v99;
            v101 = (_QWORD *)(((unint64_t)v100 + 11) & 0xFFFFFFFFFFFFFFF8);
            v102 = (_QWORD *)(((unint64_t)v99 + 11) & 0xFFFFFFFFFFFFFFF8);
            *v101 = *v102;
            v103 = ((unint64_t)v101 + v129) & v130;
            v104 = ((unint64_t)v102 + v129) & v130;
            v105 = *(void (**)(unint64_t, unint64_t, uint64_t))(v125 + 16);
            v105(v103, v104, v132);
            v106 = (v128 + v103) & v130;
            v107 = (v128 + v104) & v130;
            v105(v106, v107, v132);
            v108 = (void *)((v128 + v106) & v130);
            v109 = (const void *)((v128 + v107) & v130);
            if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v132))
            {
              memcpy(v108, v109, v124);
            }
            else
            {
              v105((unint64_t)v108, (unint64_t)v109, v132);
              __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v132);
            }
            v87 = __n;
            v88 = v136;
            v90 = v133;
            v89 = v134;
            v83 = v169;
            *(_DWORD *)(((unint64_t)v108 + v126) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v109
                                                                                           + v126) & 0xFFFFFFFFFFFFFCLL);
            if (!v161)
              *(_BYTE *)(v77 + v127) = 0;
            goto LABEL_44;
          }
        }
      }
      else
      {
        v83 = v169;
        v79 = v170;
        v82 = v149;
        v80 = ~v170;
        if (!*(_BYTE *)(v78 + v127))
          goto LABEL_36;
        v85 = *(unsigned __int8 *)(v78 + v127) - 1;
        v86 = v127 & 0xFFFFFFFC;
        if ((v127 & 0xFFFFFFFC) != 0)
        {
          v85 = 0;
          v86 = *(_DWORD *)v78;
        }
        if ((v86 | v85) == 0xFFFFFFFF)
          goto LABEL_36;
      }
      v87 = __n;
      memcpy((void *)v77, (const void *)v78, __n);
      v88 = v136;
      v90 = v133;
      v89 = v134;
LABEL_44:
      v110 = (_QWORD *)(((v77 | 7) + v87) & 0xFFFFFFFFFFFFFFF8);
      v111 = (_QWORD *)(((v78 | 7) + v87) & 0xFFFFFFFFFFFFFFF8);
      *v110 = *v111;
      v110[1] = v111[1];
      v112 = (_QWORD *)(((unint64_t)v111 + 23) & 0xFFFFFFFFFFFFFFF8);
      v113 = (_QWORD *)(((unint64_t)v110 + 23) & 0xFFFFFFFFFFFFF8);
      *v113 = *v112;
      v114 = (_QWORD *)(((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFF8);
      v115 = (_QWORD *)(((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v115 = *v114;
      v116 = (_QWORD *)(((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8);
      v117 = (_QWORD *)(((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFF8);
      *v117 = *v116;
      v118 = (_QWORD *)(((unint64_t)v116 + 15) & 0xFFFFFFFFFFFFF8);
      v119 = (_QWORD *)(((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFF8);
      *v119 = *v118;
      *(_QWORD *)(((unint64_t)v119 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFF8);
      v120 = ((unint64_t)a1 + v89) & v90;
      v121 = ((unint64_t)a2 + v89) & v90;
      v122 = *(void (**)(unint64_t, unint64_t, uint64_t))(v88 + 16);
      sub_22ABDEAEC();
      sub_22ABDEAEC();
      v122(v120, v121, v167);
      *(_QWORD *)((v83 + v120) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v83 + v121) & 0xFFFFFFFFFFFFF8);
      return v72;
    }
  }
  v84 = *a2;
  *a1 = *a2;
  v72 = (uint64_t *)(v84 + ((v37 & 0xFFFFFFF8 ^ 0x1FFFFFFF8) & (v37 + 16)));
  swift_retain();
  return v72;
}

uint64_t sub_22AADA354(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _DWORD *v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD *v62;
  unsigned int EnumTagSinglePayload;
  int v64;
  int v65;
  unint64_t v66;
  int v67;
  unsigned int v68;
  unint64_t v69;
  void (*v70)(unint64_t, uint64_t);
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v75;
  _DWORD *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;

  v3 = sub_22ABDD73C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = a1;
  v85 = a1;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = sub_22ABDD8A4();
  v8 = *(_QWORD *)(v7 - 8);
  LODWORD(v4) = *(unsigned __int8 *)(v8 + 80);
  v9 = sub_22ABDDAE4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11;
  v13 = v11 | v4;
  v83 = v6 + v13;
  v14 = (v6 + v13 + v5) & ~v13;
  v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v15(v14, v7);
  v16 = *(_QWORD *)(v8 + 64) + v11;
  v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v17((v16 + v14) & ~v12, v9);
  v18 = *(_QWORD *)(v10 + 64) + (v16 & ~v12);
  v80 = v18 + v13;
  v19 = (v18 + v13 + v14) & ~v13;
  v15(v19, v7);
  v17((v16 + v19) & ~v12, v9);
  v20 = (v18 + v13 + v19) & ~v13;
  v15(v20, v7);
  v17((v16 + v20) & ~v12, v9);
  v21 = sub_22ABDD7D8();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = v23 | 7;
  v78 = (v23 | 7) + v18;
  v25 = (v78 + v20) & ~(v23 | 7);
  v26 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v26((v25 + v23) & ~v23, v21);
  v27 = *(_QWORD *)(v22 + 64);
  v26((v27 + v23 + ((v25 + v23) & ~v23)) & ~v23, v21);
  v28 = ((v27 + 7 + ((v27 + v23) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v29 = (v28 + v24 + v25) & ~v24;
  v26((v29 + v23) & ~v23, v21);
  v26((v27 + v23 + ((v29 + v23) & ~v23)) & ~v23, v21);
  v26((v28 + v23 + v29) & ~v23, v21);
  v30 = (((v27
         + 7
         + ((v28 + v23 + ((v28 + v24 + ((v78 + ((v80 + ((v80 + (v83 & ~v13)) & ~v13)) & ~v13)) & ~v24)) & ~v24)) & ~v23)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  v31 = sub_22ABDD5D4();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v37 = v33 | v36 | 7;
  v38 = v30 + v37 + 8;
  v39 = ~v37;
  v40 = (_DWORD *)((v38 + v85) & ~v37);
  v41 = *(unsigned int *)(v32 + 84);
  v42 = v41 - 1;
  if (!(_DWORD)v41)
    v42 = 0;
  v43 = *(unsigned int *)(v35 + 84);
  if (v43 <= v42)
    v44 = v42;
  else
    v44 = *(_DWORD *)(v35 + 84);
  v45 = v43 - 1;
  if (!(_DWORD)v43)
    v45 = 0;
  if (v45 <= v44)
    v46 = v44;
  else
    v46 = v45;
  v47 = ~v33;
  v48 = *(_QWORD *)(v32 + 64);
  if (!(_DWORD)v41)
    ++v48;
  v49 = v48 + 3;
  v50 = ~v36;
  v51 = v36 + 8;
  v52 = (v36
       + 8
       + ((((((v48 + 3 + ((v33 + 16) & ~v33)) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~v36;
  v53 = *(_QWORD *)(v35 + 64);
  v54 = v53 + v36;
  v55 = (v53 + v36 + ((v53 + v36 + v52) & ~v36)) & ~v36;
  v56 = 3;
  if (!(_DWORD)v43)
    v56 = 4;
  v57 = (v56 + v53 + v55) & 0xFFFFFFFFFFFFFFFCLL;
  v58 = v57 + 4;
  v79 = v39;
  v81 = v38;
  v84 = v57 + 4;
  v77 = v57;
  v75 = v49;
  if (v46)
  {
    v59 = (v33 + (((unint64_t)v40 + 11) & 0xFFFFFFFFFFFFFFF8) + 8) & v47;
    if (v42 == v46)
    {
      v60 = v31;
      v61 = v31;
      v62 = v40;
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v59, v41, v61);
      v47 = ~v33;
      v40 = v62;
      if (EnumTagSinglePayload >= 2)
        goto LABEL_32;
    }
    else
    {
      v76 = v40;
      v66 = (v51 + ((((((v49 + v59) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v50;
      v60 = v31;
      if ((_DWORD)v43 == v46)
      {
        v67 = __swift_getEnumTagSinglePayload(v66, v43, v34);
        v40 = v76;
        v47 = ~v33;
        if (v67)
          goto LABEL_32;
      }
      else
      {
        v68 = __swift_getEnumTagSinglePayload((v54 + ((v54 + v66) & v50)) & v50, v43, v34);
        v40 = v76;
        v47 = ~v33;
        if (v68 >= 2)
          goto LABEL_32;
      }
    }
    goto LABEL_28;
  }
  v60 = v31;
  if (!*((_BYTE *)v40 + v58))
    goto LABEL_28;
  v64 = *((unsigned __int8 *)v40 + v58) - 1;
  v65 = v84 & 0xFFFFFFFC;
  if ((v84 & 0xFFFFFFFC) != 0)
  {
    v64 = 0;
    v65 = *v40;
  }
  if ((v65 | v64) == 0xFFFFFFFF)
  {
LABEL_28:
    v69 = (v33 + (((unint64_t)v40 + 11) & 0xFFFFFFFFFFFFFFF8) + 8) & v47;
    if (!__swift_getEnumTagSinglePayload(v69, 1, v60))
      (*(void (**)(unint64_t, uint64_t))(v32 + 8))(v69, v60);
    v70 = *(void (**)(unint64_t, uint64_t))(v35 + 8);
    v70((v51 + ((((((v75 + v69) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v50, v34);
    v71 = (v54
         + ((v51 + ((((((v75 + v69) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v50)) & v50;
    v70(v71, v34);
    v72 = (v54 + v71) & v50;
    if (!__swift_getEnumTagSinglePayload(v72, 1, v34))
      v70(v72, v34);
  }
LABEL_32:
  if (v46)
    v73 = v84;
  else
    v73 = v77 + 5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 8))((v85 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80) + ((((((((((((v73 + (v81 & v79) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80));
}

uint64_t sub_22AADA8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, unint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  size_t v60;
  size_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unsigned int EnumTagSinglePayload;
  int v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  size_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  int v79;
  unsigned int v80;
  _DWORD *v81;
  _DWORD *v82;
  void *v83;
  const void *v84;
  _DWORD *v85;
  _DWORD *v86;
  _DWORD *v87;
  _DWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  unint64_t v91;
  unint64_t v92;
  void (*v93)(unint64_t, unint64_t, uint64_t);
  unint64_t v94;
  unint64_t v95;
  void *v96;
  const void *v97;
  unint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  void (*v115)(unint64_t, unint64_t, uint64_t);
  unint64_t v117;
  size_t __n;
  size_t v119;
  size_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t __srca;
  _DWORD *__src;
  uint64_t v137;
  uint64_t v138;

  v5 = sub_22ABDD73C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a1;
  v137 = a2;
  v138 = a1;
  v8 = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = sub_22ABDD8A4();
  v11 = *(_QWORD *)(v10 - 8);
  LODWORD(v6) = *(unsigned __int8 *)(v11 + 80);
  v12 = sub_22ABDDAE4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v14;
  v16 = v14 | v6;
  __srca = v9 + v16;
  v17 = (v9 + v16 + v7) & ~v16;
  v18 = (__srca + v8) & ~v16;
  v19 = *(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16);
  v19(v17, v18, v10);
  v20 = *(_QWORD *)(v11 + 64) + v14;
  v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16);
  v21((v20 + v17) & ~v15, (v20 + v18) & ~v15, v12);
  v130 = *(_QWORD *)(v13 + 64) + (v20 & ~v15);
  v22 = (v130 + v16 + v17) & ~v16;
  v23 = (v130 + v16 + v18) & ~v16;
  v19(v22, v23, v10);
  v21((v20 + v22) & ~v15, (v20 + v23) & ~v15, v12);
  v133 = v130 + v16;
  v24 = (v130 + v16 + v22) & ~v16;
  v25 = (v130 + v16 + v23) & ~v16;
  v19(v24, v25, v10);
  v21((v20 + v24) & ~v15, (v20 + v25) & ~v15, v12);
  v26 = sub_22ABDD7D8();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = v28 | 7;
  v131 = (v28 | 7) + v130;
  v30 = (v131 + v24) & ~(v28 | 7);
  v126 = (v131 + v25) & ~(v28 | 7);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  v31((v30 + v28) & ~v28, (v126 + v28) & ~v28, v26);
  v32 = *(_QWORD *)(v27 + 64);
  v33 = v32 + v28;
  v34 = (v32 + v28 + ((v30 + v28) & ~v28)) & ~v28;
  v35 = (v32 + v28 + ((v126 + v28) & ~v28)) & ~v28;
  v31(v34, v35, v26);
  v32 += 7;
  *(_QWORD *)((v32 + v34) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v32 + v35) & 0xFFFFFFFFFFFFF8);
  v124 = ((v32 + (v33 & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v36 = (v124 + v29 + v30) & ~v29;
  v127 = (v124 + v29 + v126) & ~v29;
  v31((v36 + v28) & ~v28, (v127 + v28) & ~v28, v26);
  v37 = (v33 + ((v127 + v28) & ~v28)) & ~v28;
  v31((v33 + ((v36 + v28) & ~v28)) & ~v28, v37, v26);
  *(_QWORD *)((v32 + ((v33 + ((v36 + v28) & ~v28)) & ~v28)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v32 + v37) & 0xFFFFFFFFFFFFF8);
  v31((v124 + v28 + v36) & ~v28, (v124 + v28 + v127) & ~v28, v26);
  v38 = (_QWORD *)((v32 + ((v124 + v28 + v36) & ~v28)) & 0xFFFFFFFFFFFFF8);
  v39 = (_QWORD *)((v32 + ((v124 + v28 + v127) & ~v28)) & 0xFFFFFFFFFFFFF8);
  *v38 = *v39;
  *(_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFF8);
  v40 = ((((v32
          + ((v124
            + v28
            + ((v124 + (v28 | 7) + ((v131 + ((v133 + ((v133 + (__srca & ~v16)) & ~v16)) & ~v16)) & ~v29)) & ~v29)) & ~v28)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v122 = sub_22ABDD5D4();
  v41 = *(_QWORD *)(v122 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
  v43 = *(_QWORD *)(v121 - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v42 | v44;
  v46 = v42 | v44 | 7;
  v47 = ~v46;
  v134 = (v46 + v40 + v138) & ~v46;
  v48 = (v46 + v40 + v137) & ~v46;
  v49 = *(unsigned int *)(v41 + 84);
  v50 = v49 - 1;
  if (!(_DWORD)v49)
    v50 = 0;
  v51 = *(unsigned int *)(v43 + 84);
  if (v51 <= v50)
    v52 = v50;
  else
    v52 = *(_DWORD *)(v43 + 84);
  v53 = v51 - 1;
  if (!(_DWORD)v51)
    v53 = 0;
  if (v53 <= v52)
    v54 = v52;
  else
    v54 = v53;
  if ((_DWORD)v49)
    v55 = *(_QWORD *)(v41 + 64);
  else
    v55 = *(_QWORD *)(v41 + 64) + 1;
  v56 = ~v42;
  v57 = v55 + 3;
  v58 = ~v44;
  v59 = v44 + 8;
  v60 = *(_QWORD *)(v43 + 64);
  v61 = v60 + v44;
  v62 = (v60
       + v44
       + ((v60
         + v44
         + ((v44
           + 8
           + ((((((v55 + 3 + ((v42 + 16) & ~v42)) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~v44)) & ~v44)) & ~v44;
  if (!(_DWORD)v51)
    ++v60;
  v125 = (v60 + 3 + v62) & 0xFFFFFFFFFFFFFFFCLL;
  v128 = v47;
  v63 = v125 + 4;
  __src = (_DWORD *)v48;
  v129 = v45;
  v132 = v125 + 4;
  v119 = v60;
  v120 = v60 + 3;
  __n = v55;
  if (!v54)
  {
    if (!*(_BYTE *)(v48 + v63))
      goto LABEL_32;
    v66 = *(unsigned __int8 *)(v48 + v63) - 1;
    v67 = v132 & 0xFFFFFFFC;
    if ((v132 & 0xFFFFFFFC) != 0)
    {
      v66 = 0;
      v67 = *(_DWORD *)v48;
    }
    if ((v67 | v66) == 0xFFFFFFFF)
      goto LABEL_32;
    goto LABEL_24;
  }
  v64 = (v42 + ((v48 + 11) & 0xFFFFFFFFFFFFFFF8) + 8) & v56;
  if (v50 == v54)
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v64, v49, v122);
    v48 = (unint64_t)__src;
    if (EnumTagSinglePayload < 2)
      goto LABEL_32;
LABEL_24:
    v68 = v125;
    v70 = v125 + 4;
    v69 = v134;
    if (v54)
      v71 = v125 + 4;
    else
      v71 = v125 + 5;
    memcpy((void *)v134, (const void *)v48, v71);
    v72 = (unint64_t)__src;
    v73 = v137;
    v74 = v138;
    v75 = a3;
    v77 = v128;
    v76 = v129;
    goto LABEL_40;
  }
  v78 = (v59 + ((((((v57 + v64) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v58;
  if ((_DWORD)v51 != v54)
  {
    v80 = __swift_getEnumTagSinglePayload((v61 + ((v61 + v78) & v58)) & v58, v51, v121);
    v48 = (unint64_t)__src;
    if (v80 < 2)
      goto LABEL_32;
    goto LABEL_24;
  }
  v79 = __swift_getEnumTagSinglePayload(v78, v51, v121);
  v48 = (unint64_t)__src;
  if (v79)
    goto LABEL_24;
LABEL_32:
  v117 = v40;
  *(_DWORD *)v134 = *(_DWORD *)v48;
  *(_DWORD *)(v134 | 4) = *(_DWORD *)(v48 | 4);
  v81 = (_DWORD *)((v134 + 11) & 0xFFFFFFFFFFFFFFF8);
  v82 = (_DWORD *)((v48 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v81 = *v82;
  v81[1] = v82[1];
  v83 = (void *)(((unint64_t)v81 + v42 + 8) & v56);
  v84 = (const void *)(((unint64_t)v82 + v42 + 8) & v56);
  if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v122))
  {
    memcpy(v83, v84, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 16))(v83, v84, v122);
    __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v122);
  }
  v85 = (_DWORD *)(((unint64_t)v84 + v57) & 0xFFFFFFFFFFFFFFFCLL);
  v86 = (_DWORD *)(((unint64_t)v83 + v57) & 0xFFFFFFFFFFFFFFFCLL);
  *v86 = *v85;
  v87 = (_DWORD *)(((unint64_t)v85 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v88 = (_DWORD *)(((unint64_t)v86 + 7) & 0xFFFFFFFFFFFFFCLL);
  *v88 = *v87;
  v89 = (_QWORD *)(((unint64_t)v88 + 11) & 0xFFFFFFFFFFFFFFF8);
  v90 = (_QWORD *)(((unint64_t)v87 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v89 = *v90;
  v91 = ((unint64_t)v89 + v59) & v58;
  v92 = ((unint64_t)v90 + v59) & v58;
  v93 = *(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 16);
  v93(v91, v92, v121);
  v94 = (v61 + v91) & v58;
  v95 = (v61 + v92) & v58;
  v93(v94, v95, v121);
  v96 = (void *)((v61 + v94) & v58);
  v97 = (const void *)((v61 + v95) & v58);
  if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v121))
  {
    memcpy(v96, v97, v119);
  }
  else
  {
    v93((unint64_t)v96, (unint64_t)v97, v121);
    __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v121);
  }
  v73 = v137;
  v74 = v138;
  v75 = a3;
  v68 = v125;
  v40 = v117;
  v77 = v128;
  v76 = v129;
  v69 = v134;
  v72 = (unint64_t)__src;
  v70 = v125 + 4;
  *(_DWORD *)(((unint64_t)v96 + v120) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v97 + v120) & 0xFFFFFFFFFFFFFCLL);
  if (!v54)
    *(_BYTE *)(v134 + v132) = 0;
LABEL_40:
  v98 = v68 + 5;
  if (v54)
    v98 = v70;
  v99 = (_QWORD *)(((v69 | 7) + v98) & 0xFFFFFFFFFFFFFFF8);
  v100 = (_QWORD *)(((v72 | 7) + v98) & 0xFFFFFFFFFFFFFFF8);
  *v99 = *v100;
  v99[1] = v100[1];
  v101 = (_QWORD *)(((unint64_t)v99 + 23) & 0xFFFFFFFFFFFFF8);
  v102 = (_QWORD *)(((unint64_t)v100 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v101 = *v102;
  v103 = (_QWORD *)(((unint64_t)v101 + 15) & 0xFFFFFFFFFFFFFFF8);
  v104 = (_QWORD *)(((unint64_t)v102 + 15) & 0xFFFFFFFFFFFFF8);
  *v103 = *v104;
  v105 = (_QWORD *)(((unint64_t)v103 + 15) & 0xFFFFFFFFFFFFF8);
  v106 = (_QWORD *)(((unint64_t)v104 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v105 = *v106;
  v107 = (_QWORD *)(((unint64_t)v105 + 15) & 0xFFFFFFFFFFFFF8);
  v108 = (_QWORD *)(((unint64_t)v106 + 15) & 0xFFFFFFFFFFFFF8);
  *v107 = *v108;
  *(_QWORD *)(((unint64_t)v107 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFF8);
  v109 = *(_QWORD *)(v75 + 32);
  v110 = *(_QWORD *)(v109 - 8);
  v111 = *(unsigned __int8 *)(v110 + 80);
  v112 = ((((((((((((v98 + ((v76 + v40) & v77) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + v111
       + 8;
  v113 = (v112 + v74) & ~v111;
  v114 = (v112 + v73) & ~v111;
  v115 = *(void (**)(unint64_t, unint64_t, uint64_t))(v110 + 16);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v115(v113, v114, v109);
  *(_QWORD *)((*(_QWORD *)(v110 + 64) + 7 + v113) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v110 + 64)
                                                                                       + 7
                                                                                       + v114) & 0xFFFFFFFFFFFFF8);
  return v74;
}

uint64_t sub_22AADB13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  size_t v61;
  size_t v62;
  unint64_t v63;
  unint64_t v64;
  size_t v65;
  _DWORD *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unsigned int EnumTagSinglePayload;
  uint64_t v71;
  unsigned int v72;
  unint64_t v73;
  unsigned int v74;
  BOOL v75;
  uint64_t v76;
  int v77;
  int v78;
  unint64_t v79;
  int v80;
  unint64_t v81;
  unsigned int v82;
  BOOL v83;
  unint64_t v84;
  int v85;
  unsigned int v86;
  unint64_t v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  _DWORD *v93;
  _DWORD *v94;
  _DWORD *v95;
  void *v96;
  const void *v97;
  _DWORD *v98;
  _DWORD *v99;
  _DWORD *v100;
  _DWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  unint64_t v104;
  unint64_t v105;
  void (*v106)(unint64_t, unint64_t, uint64_t);
  unint64_t v107;
  unint64_t v108;
  void *v109;
  const void *v110;
  size_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unsigned int v116;
  unint64_t v117;
  unint64_t v118;
  void (*v119)(unint64_t, uint64_t);
  unint64_t v120;
  uint64_t v121;
  size_t v122;
  _DWORD *v123;
  _DWORD *v124;
  void *v125;
  const void *v126;
  int v127;
  int v128;
  size_t v129;
  unint64_t v130;
  _DWORD *v131;
  _DWORD *v132;
  _DWORD *v133;
  _DWORD *v134;
  _QWORD *v135;
  _QWORD *v136;
  unint64_t v137;
  unint64_t v138;
  void (*v139)(unint64_t, unint64_t, uint64_t);
  unint64_t v140;
  unint64_t v141;
  void *v142;
  const void *v143;
  int v144;
  int v145;
  size_t v146;
  size_t v147;
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  _QWORD *v152;
  _QWORD *v153;
  _QWORD *v154;
  _QWORD *v155;
  _QWORD *v156;
  _QWORD *v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v165;
  size_t __n;
  size_t v167;
  size_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t __dst;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unsigned int v187;
  uint64_t v188;
  uint64_t v189;

  v5 = sub_22ABDD73C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a1;
  v188 = a1;
  v189 = a2;
  v8 = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, v5);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = sub_22ABDD8A4();
  v11 = *(_QWORD *)(v10 - 8);
  LODWORD(v6) = *(unsigned __int8 *)(v11 + 80);
  v12 = sub_22ABDDAE4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v14;
  v16 = v14 | v6;
  v17 = v9 + v16;
  v186 = v9 + v16;
  v18 = (v9 + v16 + v7) & ~v16;
  v19 = (v17 + v8) & ~v16;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v20(v18, v19, v10);
  v21 = *(_QWORD *)(v11 + 64) + v14;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24);
  v22((v21 + v18) & ~v15, (v21 + v19) & ~v15, v12);
  v181 = *(_QWORD *)(v13 + 64) + (v21 & ~v15);
  v23 = (v181 + v16 + v18) & ~v16;
  v24 = (v181 + v16 + v19) & ~v16;
  v20(v23, v24, v10);
  v22((v21 + v23) & ~v15, (v21 + v24) & ~v15, v12);
  v184 = v181 + v16;
  v25 = (v181 + v16 + v23) & ~v16;
  v26 = (v181 + v16 + v24) & ~v16;
  v20(v25, v26, v10);
  v22((v21 + v25) & ~v15, (v21 + v26) & ~v15, v12);
  v27 = sub_22ABDD7D8();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = v29 | 7;
  v182 = (v29 | 7) + v181;
  v31 = (v182 + v25) & ~(v29 | 7);
  v177 = (v182 + v26) & ~(v29 | 7);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 24);
  v32((v31 + v29) & ~v29, (v177 + v29) & ~v29, v27);
  v33 = *(_QWORD *)(v28 + 64);
  v34 = v33 + v29;
  v35 = (v33 + v29 + ((v31 + v29) & ~v29)) & ~v29;
  v36 = (v33 + v29 + ((v177 + v29) & ~v29)) & ~v29;
  v32(v35, v36, v27);
  v33 += 7;
  *(_QWORD *)((v33 + v35) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v33 + v36) & 0xFFFFFFFFFFFFF8);
  v175 = ((v33 + (v34 & ~v29)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v37 = (v175 + v30 + v31) & ~v30;
  v178 = (v175 + v30 + v177) & ~v30;
  v32((v37 + v29) & ~v29, (v178 + v29) & ~v29, v27);
  v38 = (v34 + ((v178 + v29) & ~v29)) & ~v29;
  v32((v34 + ((v37 + v29) & ~v29)) & ~v29, v38, v27);
  *(_QWORD *)((v33 + ((v34 + ((v37 + v29) & ~v29)) & ~v29)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v33 + v38) & 0xFFFFFFFFFFFFF8);
  v32((v175 + v29 + v37) & ~v29, (v175 + v29 + v178) & ~v29, v27);
  v39 = (_QWORD *)((v33 + ((v175 + v29 + v37) & ~v29)) & 0xFFFFFFFFFFFFF8);
  v40 = (_QWORD *)((v33 + ((v175 + v29 + v178) & ~v29)) & 0xFFFFFFFFFFFFF8);
  *v39 = *v40;
  *(_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFF8);
  v41 = ((((v33
          + ((v175
            + v29
            + ((v175 + (v29 | 7) + ((v182 + ((v184 + ((v184 + (v186 & ~v16)) & ~v16)) & ~v16)) & ~v30)) & ~v30)) & ~v29)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v183 = sub_22ABDD5D4();
  v42 = *(_QWORD *)(v183 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
  v44 = *(_QWORD *)(v185 - 8);
  v45 = *(unsigned __int8 *)(v44 + 80);
  v46 = v43 | v45;
  v47 = v43 | v45 | 7;
  v170 = v41;
  v48 = ~v47;
  v49 = (v47 + v41 + v188) & ~v47;
  v50 = (v47 + v41 + v189) & ~v47;
  v51 = *(unsigned int *)(v42 + 84);
  if ((_DWORD)v51)
    v52 = v51 - 1;
  else
    v52 = 0;
  v53 = *(unsigned int *)(v44 + 84);
  if (v53 <= v52)
    v54 = v52;
  else
    v54 = *(_DWORD *)(v44 + 84);
  v55 = v53 - 1;
  if (!(_DWORD)v53)
    v55 = 0;
  if (v55 <= v54)
    v56 = v54;
  else
    v56 = v55;
  if ((_DWORD)v51)
    v57 = *(_QWORD *)(v42 + 64);
  else
    v57 = *(_QWORD *)(v42 + 64) + 1;
  v58 = ~v43;
  v59 = ~v45;
  v60 = v45 + 8;
  v169 = *(_QWORD *)(v185 - 8);
  v61 = *(_QWORD *)(v44 + 64);
  v62 = v61 + v45;
  v63 = (v61
       + v45
       + ((v61
         + v45
         + ((v45
           + 8
           + ((((((v57 + 3 + ((v43 + 16) & ~v43)) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~v45)) & ~v45)) & ~v45;
  if (!(_DWORD)v53)
    ++v61;
  v64 = (v61 + 3 + v63) & 0xFFFFFFFFFFFFFFFCLL;
  v172 = v64;
  v65 = v64 + 4;
  v187 = v56;
  v173 = v48;
  v174 = v46;
  v179 = v60;
  __dst = v49;
  v167 = v61;
  v168 = v61 + 3;
  v176 = v57 + 3;
  __n = v57;
  if (v56)
  {
    v165 = v64 + 4;
    v66 = (_DWORD *)v50;
    v67 = v43 + 8;
    v68 = v43 + 8 + ((v49 + 11) & 0xFFFFFFFFFFFFFFF8);
    v69 = v68 & v58;
    if (v52 == v56)
    {
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v68 & v58, v51, v183);
      v71 = ~v43;
      v72 = v187;
      if (EnumTagSinglePayload < 2)
      {
LABEL_20:
        v73 = (v67 + (((unint64_t)v66 + 11) & 0xFFFFFFFFFFFFFFF8)) & v71;
        if (v52 == v72)
        {
          v74 = __swift_getEnumTagSinglePayload(v73, v51, v183);
          v58 = ~v43;
          v75 = v74 >= 2;
          v76 = v189;
          v50 = (unint64_t)v66;
          v65 = v165;
          goto LABEL_56;
        }
        v87 = (v179
             + ((((((v176 + v73) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v59;
        v76 = v189;
        v50 = (unint64_t)v66;
        if ((_DWORD)v53 != v72)
        {
          v75 = __swift_getEnumTagSinglePayload((v62 + ((v62 + v87) & v59)) & v59, v53, v185) >= 2;
          v65 = v165;
          v58 = ~v43;
LABEL_56:
          if (!v75)
            goto LABEL_69;
          goto LABEL_61;
        }
        v88 = __swift_getEnumTagSinglePayload(v87, v53, v185);
        v58 = ~v43;
        v65 = v165;
        if (!v88)
          goto LABEL_69;
LABEL_60:
        v69 = (v43 + ((__dst + 11) & 0xFFFFFFFFFFFFFFF8) + 8) & v58;
LABEL_61:
        if (!__swift_getEnumTagSinglePayload(v69, 1, v183))
          (*(void (**)(unint64_t, uint64_t))(v42 + 8))(v69, v183);
        v119 = *(void (**)(unint64_t, uint64_t))(v169 + 8);
        v119((v179 + ((((((v176 + v69) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v59, v185);
        v120 = (v62
              + ((v179
                + ((((((v176 + v69) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v59)) & v59;
        v119(v120, v185);
        v121 = (v62 + v120) & v59;
        if (!__swift_getEnumTagSinglePayload(v121, 1, v185))
          v119(v121, v185);
        v118 = v172;
        if (v187)
          v122 = v65;
        else
          v122 = v172 + 5;
        v49 = __dst;
        memcpy((void *)__dst, (const void *)v50, v122);
        v116 = v187;
        goto LABEL_90;
      }
    }
    else
    {
      v79 = (v60
           + ((((((v57 + 3 + v69) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v59;
      if ((_DWORD)v53 == v56)
      {
        v80 = __swift_getEnumTagSinglePayload(v79, v53, v185);
        v72 = v187;
        v71 = ~v43;
        if (!v80)
          goto LABEL_20;
      }
      else
      {
        v86 = __swift_getEnumTagSinglePayload((v62 + ((v62 + v79) & v59)) & v59, v53, v185);
        v72 = v187;
        v71 = ~v43;
        if (v86 < 2)
          goto LABEL_20;
      }
    }
    v81 = (v67 + (((unint64_t)v66 + 11) & 0xFFFFFFFFFFFFFFF8)) & v71;
    if (v52 == v72)
    {
      v82 = __swift_getEnumTagSinglePayload(v81, v51, v183);
      v58 = ~v43;
      v56 = v187;
      v83 = v82 >= 2;
      v76 = v189;
      v49 = __dst;
      v50 = (unint64_t)v66;
      v65 = v165;
      goto LABEL_46;
    }
    v84 = (v179 + ((((((v176 + v81) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v59;
    if ((_DWORD)v53 != v72)
    {
      v83 = __swift_getEnumTagSinglePayload((v62 + ((v62 + v84) & v59)) & v59, v53, v185) >= 2;
      v76 = v189;
      v49 = __dst;
      v50 = (unint64_t)v66;
      v56 = v187;
      v65 = v165;
      v58 = ~v43;
LABEL_46:
      if (!v83)
        goto LABEL_47;
LABEL_86:
      v118 = v172;
      if (v56)
        v146 = v65;
      else
        v146 = v172 + 5;
      memcpy((void *)v49, (const void *)v50, v146);
      v116 = v187;
LABEL_90:
      v113 = v188;
      v117 = v50;
      v115 = v170;
      v114 = a3;
      goto LABEL_91;
    }
    v85 = __swift_getEnumTagSinglePayload(v84, v53, v185);
    v76 = v189;
    v49 = __dst;
    v50 = (unint64_t)v66;
    v56 = v187;
    v58 = ~v43;
    v65 = v165;
    if (v85)
      goto LABEL_86;
  }
  else
  {
    v76 = v189;
    if (!*(_BYTE *)(v49 + v65)
      || ((v77 = *(unsigned __int8 *)(v49 + v65) - 1, !(_DWORD)v65) ? (v78 = 0) : (v77 = 0, v78 = *(_DWORD *)v49),
          (v78 | v77) == 0xFFFFFFFF))
    {
      if (!*(_BYTE *)(v50 + v65)
        || ((v91 = *(unsigned __int8 *)(v50 + v65) - 1, !(_DWORD)v65) ? (v92 = 0) : (v91 = 0, v92 = *(_DWORD *)v50),
            (v92 | v91) == 0xFFFFFFFF))
      {
LABEL_69:
        *(_DWORD *)__dst = *(_DWORD *)v50;
        *(_DWORD *)(__dst | 4) = *(_DWORD *)(v50 | 4);
        v123 = (_DWORD *)((__dst + 11) & 0xFFFFFFFFFFFFFFF8);
        v124 = (_DWORD *)((v50 + 11) & 0xFFFFFFFFFFFFFFF8);
        *v123 = *v124;
        v123[1] = v124[1];
        v125 = (void *)(((unint64_t)v123 + v43 + 8) & v58);
        v126 = (const void *)(((unint64_t)v124 + v43 + 8) & v58);
        v127 = __swift_getEnumTagSinglePayload((uint64_t)v125, 1, v183);
        v128 = __swift_getEnumTagSinglePayload((uint64_t)v126, 1, v183);
        if (v127)
        {
          v129 = v65;
          v130 = v50;
          if (!v128)
          {
            (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v125, v126, v183);
            __swift_storeEnumTagSinglePayload((uint64_t)v125, 0, 1, v183);
            goto LABEL_75;
          }
        }
        else
        {
          v129 = v65;
          v130 = v50;
          if (!v128)
          {
            (*(void (**)(void *, const void *, uint64_t))(v42 + 24))(v125, v126, v183);
LABEL_75:
            v131 = (_DWORD *)(((unint64_t)v126 + v176) & 0xFFFFFFFFFFFFFFFCLL);
            v132 = (_DWORD *)(((unint64_t)v125 + v176) & 0xFFFFFFFFFFFFFFFCLL);
            *v132 = *v131;
            v133 = (_DWORD *)(((unint64_t)v131 + 7) & 0xFFFFFFFFFFFFFFFCLL);
            v134 = (_DWORD *)(((unint64_t)v132 + 7) & 0xFFFFFFFFFFFFFCLL);
            *v134 = *v133;
            v135 = (_QWORD *)(((unint64_t)v134 + 11) & 0xFFFFFFFFFFFFFFF8);
            v136 = (_QWORD *)(((unint64_t)v133 + 11) & 0xFFFFFFFFFFFFFFF8);
            *v135 = *v136;
            v137 = ((unint64_t)v135 + v179) & v59;
            v138 = ((unint64_t)v136 + v179) & v59;
            v139 = *(void (**)(unint64_t, unint64_t, uint64_t))(v169 + 24);
            v139(v137, v138, v185);
            v140 = (v62 + v137) & v59;
            v141 = (v62 + v138) & v59;
            v139(v140, v141, v185);
            v142 = (void *)((v62 + v140) & v59);
            v143 = (const void *)((v62 + v141) & v59);
            v144 = __swift_getEnumTagSinglePayload((uint64_t)v142, 1, v185);
            v145 = __swift_getEnumTagSinglePayload((uint64_t)v143, 1, v185);
            v118 = v172;
            if (v144)
            {
              v113 = v188;
              v115 = v170;
              v114 = a3;
              if (!v145)
              {
                (*(void (**)(void *, const void *, uint64_t))(v169 + 16))(v142, v143, v185);
                __swift_storeEnumTagSinglePayload((uint64_t)v142, 0, 1, v185);
LABEL_81:
                *(_DWORD *)(((unint64_t)v142 + v168) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v143
                                                                                               + v168) & 0xFFFFFFFFFFFFFCLL);
                v49 = __dst;
                v117 = v130;
                v116 = v187;
                v65 = v129;
                goto LABEL_91;
              }
            }
            else
            {
              v113 = v188;
              v115 = v170;
              v114 = a3;
              if (!v145)
              {
                v139((unint64_t)v142, (unint64_t)v143, v185);
                goto LABEL_81;
              }
              (*(void (**)(void *, uint64_t))(v169 + 8))(v142, v185);
            }
            memcpy(v142, v143, v167);
            goto LABEL_81;
          }
          (*(void (**)(void *, uint64_t))(v42 + 8))(v125, v183);
        }
        memcpy(v125, v126, __n);
        goto LABEL_75;
      }
      goto LABEL_60;
    }
    if (*(_BYTE *)(v50 + v65))
    {
      v89 = *(unsigned __int8 *)(v50 + v65) - 1;
      if ((_DWORD)v65)
      {
        v89 = 0;
        v90 = *(_DWORD *)v50;
      }
      else
      {
        v90 = 0;
      }
      if ((v90 | v89) != 0xFFFFFFFF)
        goto LABEL_86;
    }
  }
LABEL_47:
  *(_DWORD *)v49 = *(_DWORD *)v50;
  v93 = (_DWORD *)v49;
  *(_DWORD *)(v49 | 4) = *(_DWORD *)(v50 | 4);
  v94 = (_DWORD *)((v49 + 11) & 0xFFFFFFFFFFFFFFF8);
  v95 = (_DWORD *)((v50 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v94 = *v95;
  v94[1] = v95[1];
  v96 = (void *)(((unint64_t)v94 + v43 + 8) & v58);
  v97 = (const void *)(((unint64_t)v95 + v43 + 8) & v58);
  if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v183))
  {
    memcpy(v96, v97, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v96, v97, v183);
    __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v183);
  }
  v98 = (_DWORD *)(((unint64_t)v97 + v176) & 0xFFFFFFFFFFFFFFFCLL);
  v99 = (_DWORD *)(((unint64_t)v96 + v176) & 0xFFFFFFFFFFFFFFFCLL);
  *v99 = *v98;
  v100 = (_DWORD *)(((unint64_t)v98 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v101 = (_DWORD *)(((unint64_t)v99 + 7) & 0xFFFFFFFFFFFFFCLL);
  *v101 = *v100;
  v102 = (_QWORD *)(((unint64_t)v101 + 11) & 0xFFFFFFFFFFFFFFF8);
  v103 = (_QWORD *)(((unint64_t)v100 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v102 = *v103;
  v104 = ((unint64_t)v102 + v179) & v59;
  v105 = ((unint64_t)v103 + v179) & v59;
  v106 = *(void (**)(unint64_t, unint64_t, uint64_t))(v169 + 16);
  v106(v104, v105, v185);
  v107 = (v62 + v104) & v59;
  v108 = (v62 + v105) & v59;
  v106(v107, v108, v185);
  v109 = (void *)((v62 + v107) & v59);
  v110 = (const void *)((v62 + v108) & v59);
  v111 = v65;
  v112 = v50;
  if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v185))
  {
    memcpy(v109, v110, v167);
  }
  else
  {
    v106((unint64_t)v109, (unint64_t)v110, v185);
    __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v185);
  }
  v113 = v188;
  v115 = v170;
  v114 = a3;
  v116 = v187;
  *(_DWORD *)(((unint64_t)v109 + v168) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v110 + v168) & 0xFFFFFFFFFFFFFCLL);
  v49 = (unint64_t)v93;
  v117 = v112;
  v65 = v111;
  v118 = v172;
  if (!v187)
    *((_BYTE *)v93 + v65) = 0;
LABEL_91:
  if (v116)
    v147 = v65;
  else
    v147 = v118 + 5;
  v148 = (_QWORD *)(((v49 | 7) + v147) & 0xFFFFFFFFFFFFFFF8);
  v149 = (_QWORD *)(((v117 | 7) + v147) & 0xFFFFFFFFFFFFFFF8);
  *v148 = *v149;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v148[1] = v149[1];
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v150 = (_QWORD *)(((unint64_t)v148 + 23) & 0xFFFFFFFFFFFFF8);
  v151 = (_QWORD *)(((unint64_t)v149 + 23) & 0xFFFFFFFFFFFFF8);
  *v150 = *v151;
  v152 = (_QWORD *)(((unint64_t)v150 + 15) & 0xFFFFFFFFFFFFF8);
  v153 = (_QWORD *)(((unint64_t)v151 + 15) & 0xFFFFFFFFFFFFF8);
  *v152 = *v153;
  v154 = (_QWORD *)(((unint64_t)v152 + 15) & 0xFFFFFFFFFFFFF8);
  v155 = (_QWORD *)(((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFF8);
  *v154 = *v155;
  v156 = (_QWORD *)(((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFF8);
  v157 = (_QWORD *)(((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFF8);
  *v156 = *v157;
  *(_QWORD *)(((unint64_t)v156 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v157 + 15) & 0xFFFFFFFFFFFFF8);
  v158 = (((((((((((v147 + ((v174 + v115) & v173) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  v159 = *(_QWORD *)(*(_QWORD *)(v114 + 32) - 8);
  v160 = *(unsigned __int8 *)(v159 + 80);
  v161 = v158 + v160 + 8;
  v162 = (v161 + v113) & ~v160;
  v163 = (v161 + v76) & ~v160;
  (*(void (**)(uint64_t, uint64_t))(v159 + 24))(v162, v163);
  *(_QWORD *)((*(_QWORD *)(v159 + 64) + 7 + v162) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v159 + 64)
                                                                                       + 7
                                                                                       + v163) & 0xFFFFFFFFFFFFF8);
  return v113;
}

uint64_t sub_22AADBF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, unint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  size_t v60;
  size_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unsigned int EnumTagSinglePayload;
  int v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  size_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  int v79;
  unsigned int v80;
  _DWORD *v81;
  _DWORD *v82;
  void *v83;
  const void *v84;
  _DWORD *v85;
  _DWORD *v86;
  _DWORD *v87;
  _DWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  unint64_t v91;
  unint64_t v92;
  void (*v93)(unint64_t, unint64_t, uint64_t);
  unint64_t v94;
  unint64_t v95;
  void *v96;
  const void *v97;
  unint64_t v98;
  _OWORD *v99;
  _OWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v115;
  size_t __n;
  size_t v117;
  size_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t __srca;
  _DWORD *__src;
  uint64_t v135;
  uint64_t v136;

  v5 = sub_22ABDD73C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a1;
  v135 = a2;
  v136 = a1;
  v8 = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = sub_22ABDD8A4();
  v11 = *(_QWORD *)(v10 - 8);
  LODWORD(v6) = *(unsigned __int8 *)(v11 + 80);
  v12 = sub_22ABDDAE4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v14;
  v16 = v14 | v6;
  __srca = v9 + v16;
  v17 = (v9 + v16 + v7) & ~v16;
  v18 = (__srca + v8) & ~v16;
  v19 = *(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 32);
  v19(v17, v18, v10);
  v20 = *(_QWORD *)(v11 + 64) + v14;
  v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 32);
  v21((v20 + v17) & ~v15, (v20 + v18) & ~v15, v12);
  v128 = *(_QWORD *)(v13 + 64) + (v20 & ~v15);
  v22 = (v128 + v16 + v17) & ~v16;
  v23 = (v128 + v16 + v18) & ~v16;
  v19(v22, v23, v10);
  v21((v20 + v22) & ~v15, (v20 + v23) & ~v15, v12);
  v131 = v128 + v16;
  v24 = (v128 + v16 + v22) & ~v16;
  v25 = (v128 + v16 + v23) & ~v16;
  v19(v24, v25, v10);
  v21((v20 + v24) & ~v15, (v20 + v25) & ~v15, v12);
  v26 = sub_22ABDD7D8();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = v28 | 7;
  v129 = (v28 | 7) + v128;
  v30 = (v129 + v24) & ~(v28 | 7);
  v124 = (v129 + v25) & ~(v28 | 7);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
  v31((v30 + v28) & ~v28, (v124 + v28) & ~v28, v26);
  v32 = *(_QWORD *)(v27 + 64);
  v33 = v32 + v28;
  v34 = (v32 + v28 + ((v30 + v28) & ~v28)) & ~v28;
  v35 = (v32 + v28 + ((v124 + v28) & ~v28)) & ~v28;
  v31(v34, v35, v26);
  v32 += 7;
  *(_QWORD *)((v32 + v34) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v32 + v35) & 0xFFFFFFFFFFFFF8);
  v122 = ((v32 + (v33 & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v36 = (v122 + v29 + v30) & ~v29;
  v125 = (v122 + v29 + v124) & ~v29;
  v31((v36 + v28) & ~v28, (v125 + v28) & ~v28, v26);
  v37 = (v33 + ((v125 + v28) & ~v28)) & ~v28;
  v31((v33 + ((v36 + v28) & ~v28)) & ~v28, v37, v26);
  *(_QWORD *)((v32 + ((v33 + ((v36 + v28) & ~v28)) & ~v28)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v32 + v37) & 0xFFFFFFFFFFFFF8);
  v31((v122 + v28 + v36) & ~v28, (v122 + v28 + v125) & ~v28, v26);
  v38 = (_QWORD *)((v32 + ((v122 + v28 + v36) & ~v28)) & 0xFFFFFFFFFFFFF8);
  v39 = (_QWORD *)((v32 + ((v122 + v28 + v125) & ~v28)) & 0xFFFFFFFFFFFFF8);
  *v38 = *v39;
  *(_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFF8);
  v40 = ((((v32
          + ((v122
            + v28
            + ((v122 + (v28 | 7) + ((v129 + ((v131 + ((v131 + (__srca & ~v16)) & ~v16)) & ~v16)) & ~v29)) & ~v29)) & ~v28)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v120 = sub_22ABDD5D4();
  v41 = *(_QWORD *)(v120 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
  v43 = *(_QWORD *)(v119 - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v42 | v44;
  v46 = v42 | v44 | 7;
  v47 = ~v46;
  v132 = (v46 + v40 + v136) & ~v46;
  v48 = (v46 + v40 + v135) & ~v46;
  v49 = *(unsigned int *)(v41 + 84);
  v50 = v49 - 1;
  if (!(_DWORD)v49)
    v50 = 0;
  v51 = *(unsigned int *)(v43 + 84);
  if (v51 <= v50)
    v52 = v50;
  else
    v52 = *(_DWORD *)(v43 + 84);
  v53 = v51 - 1;
  if (!(_DWORD)v51)
    v53 = 0;
  if (v53 <= v52)
    v54 = v52;
  else
    v54 = v53;
  if ((_DWORD)v49)
    v55 = *(_QWORD *)(v41 + 64);
  else
    v55 = *(_QWORD *)(v41 + 64) + 1;
  v56 = ~v42;
  v57 = v55 + 3;
  v58 = ~v44;
  v59 = v44 + 8;
  v60 = *(_QWORD *)(v43 + 64);
  v61 = v60 + v44;
  v62 = (v60
       + v44
       + ((v60
         + v44
         + ((v44
           + 8
           + ((((((v55 + 3 + ((v42 + 16) & ~v42)) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~v44)) & ~v44)) & ~v44;
  if (!(_DWORD)v51)
    ++v60;
  v123 = (v60 + 3 + v62) & 0xFFFFFFFFFFFFFFFCLL;
  v126 = v47;
  v63 = v123 + 4;
  __src = (_DWORD *)v48;
  v127 = v45;
  v130 = v123 + 4;
  v117 = v60;
  v118 = v60 + 3;
  __n = v55;
  if (!v54)
  {
    if (!*(_BYTE *)(v48 + v63))
      goto LABEL_32;
    v66 = *(unsigned __int8 *)(v48 + v63) - 1;
    v67 = v130 & 0xFFFFFFFC;
    if ((v130 & 0xFFFFFFFC) != 0)
    {
      v66 = 0;
      v67 = *(_DWORD *)v48;
    }
    if ((v67 | v66) == 0xFFFFFFFF)
      goto LABEL_32;
    goto LABEL_24;
  }
  v64 = (v42 + ((v48 + 11) & 0xFFFFFFFFFFFFFFF8) + 8) & v56;
  if (v50 == v54)
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v64, v49, v120);
    v48 = (unint64_t)__src;
    if (EnumTagSinglePayload < 2)
      goto LABEL_32;
LABEL_24:
    v68 = v123;
    v70 = v123 + 4;
    v69 = v132;
    if (v54)
      v71 = v123 + 4;
    else
      v71 = v123 + 5;
    memcpy((void *)v132, (const void *)v48, v71);
    v72 = (unint64_t)__src;
    v73 = v135;
    v74 = v136;
    v75 = a3;
    v77 = v126;
    v76 = v127;
    goto LABEL_40;
  }
  v78 = (v59 + ((((((v57 + v64) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v58;
  if ((_DWORD)v51 != v54)
  {
    v80 = __swift_getEnumTagSinglePayload((v61 + ((v61 + v78) & v58)) & v58, v51, v119);
    v48 = (unint64_t)__src;
    if (v80 < 2)
      goto LABEL_32;
    goto LABEL_24;
  }
  v79 = __swift_getEnumTagSinglePayload(v78, v51, v119);
  v48 = (unint64_t)__src;
  if (v79)
    goto LABEL_24;
LABEL_32:
  v115 = v40;
  *(_DWORD *)v132 = *(_DWORD *)v48;
  *(_DWORD *)(v132 | 4) = *(_DWORD *)(v48 | 4);
  v81 = (_DWORD *)((v132 + 11) & 0xFFFFFFFFFFFFFFF8);
  v82 = (_DWORD *)((v48 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v81 = *v82;
  v81[1] = v82[1];
  v83 = (void *)(((unint64_t)v81 + v42 + 8) & v56);
  v84 = (const void *)(((unint64_t)v82 + v42 + 8) & v56);
  if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v120))
  {
    memcpy(v83, v84, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v83, v84, v120);
    __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v120);
  }
  v85 = (_DWORD *)(((unint64_t)v84 + v57) & 0xFFFFFFFFFFFFFFFCLL);
  v86 = (_DWORD *)(((unint64_t)v83 + v57) & 0xFFFFFFFFFFFFFFFCLL);
  *v86 = *v85;
  v87 = (_DWORD *)(((unint64_t)v85 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v88 = (_DWORD *)(((unint64_t)v86 + 7) & 0xFFFFFFFFFFFFFCLL);
  *v88 = *v87;
  v89 = (_QWORD *)(((unint64_t)v88 + 11) & 0xFFFFFFFFFFFFFFF8);
  v90 = (_QWORD *)(((unint64_t)v87 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v89 = *v90;
  v91 = ((unint64_t)v89 + v59) & v58;
  v92 = ((unint64_t)v90 + v59) & v58;
  v93 = *(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 32);
  v93(v91, v92, v119);
  v94 = (v61 + v91) & v58;
  v95 = (v61 + v92) & v58;
  v93(v94, v95, v119);
  v96 = (void *)((v61 + v94) & v58);
  v97 = (const void *)((v61 + v95) & v58);
  if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v119))
  {
    memcpy(v96, v97, v117);
  }
  else
  {
    v93((unint64_t)v96, (unint64_t)v97, v119);
    __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v119);
  }
  v73 = v135;
  v74 = v136;
  v75 = a3;
  v68 = v123;
  v40 = v115;
  v77 = v126;
  v76 = v127;
  v69 = v132;
  v72 = (unint64_t)__src;
  v70 = v123 + 4;
  *(_DWORD *)(((unint64_t)v96 + v118) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v97 + v118) & 0xFFFFFFFFFFFFFCLL);
  if (!v54)
    *(_BYTE *)(v132 + v130) = 0;
LABEL_40:
  v98 = v68 + 5;
  if (v54)
    v98 = v70;
  v99 = (_OWORD *)(((v69 | 7) + v98) & 0xFFFFFFFFFFFFFFF8);
  v100 = (_OWORD *)(((v72 | 7) + v98) & 0xFFFFFFFFFFFFFFF8);
  *v99 = *v100;
  v101 = (_QWORD *)(((unint64_t)v99 + 23) & 0xFFFFFFFFFFFFFFF8);
  v102 = (_QWORD *)(((unint64_t)v100 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v101 = *v102;
  v103 = (_QWORD *)(((unint64_t)v101 + 15) & 0xFFFFFFFFFFFFF8);
  v104 = (_QWORD *)(((unint64_t)v102 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v103 = *v104;
  v105 = (_QWORD *)(((unint64_t)v103 + 15) & 0xFFFFFFFFFFFFFFF8);
  v106 = (_QWORD *)(((unint64_t)v104 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v105 = *v106;
  v107 = (_QWORD *)(((unint64_t)v105 + 15) & 0xFFFFFFFFFFFFF8);
  v108 = (_QWORD *)(((unint64_t)v106 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v107 = *v108;
  *(_QWORD *)(((unint64_t)v107 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFF8);
  v109 = *(_QWORD *)(*(_QWORD *)(v75 + 32) - 8);
  v110 = *(unsigned __int8 *)(v109 + 80);
  v111 = ((((((((((((v98 + ((v76 + v40) & v77) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + v110
       + 8;
  v112 = (v111 + v74) & ~v110;
  v113 = (v111 + v73) & ~v110;
  (*(void (**)(unint64_t, unint64_t))(v109 + 32))(v112, v113);
  *(_QWORD *)((*(_QWORD *)(v109 + 64) + 7 + v112) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v109 + 64)
                                                                                       + 7
                                                                                       + v113) & 0xFFFFFFFFFFFFF8);
  return v74;
}

uint64_t sub_22AADC764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, unint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  size_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unsigned int EnumTagSinglePayload;
  unsigned int v69;
  unint64_t v70;
  BOOL v71;
  uint64_t v72;
  unint64_t v73;
  int v74;
  int v75;
  unint64_t v76;
  int v77;
  unint64_t v78;
  unsigned int v79;
  unint64_t v80;
  int v81;
  unsigned int v82;
  unint64_t v83;
  int v84;
  int v85;
  int v86;
  unint64_t v87;
  size_t v88;
  unint64_t v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  unint64_t v94;
  unint64_t v95;
  _DWORD *v96;
  _DWORD *v97;
  void *v98;
  const void *v99;
  uint64_t v100;
  _DWORD *v101;
  _DWORD *v102;
  _DWORD *v103;
  _DWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  void (*v109)(unint64_t, unint64_t, uint64_t);
  unint64_t v110;
  unint64_t v111;
  void *v112;
  const void *v113;
  uint64_t v114;
  _DWORD *v115;
  _DWORD *v116;
  void *v117;
  const void *v118;
  int v119;
  int v120;
  unint64_t v121;
  void (*v122)(unint64_t, uint64_t);
  unint64_t v123;
  uint64_t v124;
  size_t v125;
  _DWORD *v126;
  _DWORD *v127;
  _DWORD *v128;
  _DWORD *v129;
  _QWORD *v130;
  _QWORD *v131;
  unint64_t v132;
  unint64_t v133;
  void (*v134)(unint64_t, unint64_t, uint64_t);
  unint64_t v135;
  unint64_t v136;
  void *v137;
  const void *v138;
  int v139;
  int v140;
  unint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  _QWORD *v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v159;
  size_t __n;
  size_t v161;
  size_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  void *__dsta;
  void *__dstb;
  unint64_t __dst;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unsigned int v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _DWORD *v183;

  v5 = sub_22ABDD73C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a1;
  v180 = a2;
  v181 = a1;
  v8 = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(a1, a2, v5);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = sub_22ABDD8A4();
  v11 = *(_QWORD *)(v10 - 8);
  LODWORD(v6) = *(unsigned __int8 *)(v11 + 80);
  v12 = sub_22ABDDAE4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v14;
  v16 = v14 | v6;
  v17 = v9 + v16;
  v182 = v9 + v16;
  v18 = (v9 + v16 + v7) & ~v16;
  v19 = (v17 + v8) & ~v16;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v20(v18, v19, v10);
  v21 = *(_QWORD *)(v11 + 64) + v14;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40);
  v22((v21 + v18) & ~v15, (v21 + v19) & ~v15, v12);
  v175 = *(_QWORD *)(v13 + 64) + (v21 & ~v15);
  v23 = (v175 + v16 + v18) & ~v16;
  v24 = (v175 + v16 + v19) & ~v16;
  v20(v23, v24, v10);
  v22((v21 + v23) & ~v15, (v21 + v24) & ~v15, v12);
  v178 = v175 + v16;
  v25 = (v175 + v16 + v23) & ~v16;
  v26 = (v175 + v16 + v24) & ~v16;
  v20(v25, v26, v10);
  v22((v21 + v25) & ~v15, (v21 + v26) & ~v15, v12);
  v27 = sub_22ABDD7D8();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = v29 | 7;
  v176 = (v29 | 7) + v175;
  v31 = (v176 + v25) & ~(v29 | 7);
  __dsta = (void *)((v176 + v26) & ~(v29 | 7));
  v32 = *(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 40);
  v32((v31 + v29) & ~v29, ((unint64_t)__dsta + v29) & ~v29, v27);
  v33 = *(_QWORD *)(v28 + 64);
  v34 = v33 + v29;
  v35 = (v33 + v29 + ((v31 + v29) & ~v29)) & ~v29;
  v36 = (v33 + v29 + (((unint64_t)__dsta + v29) & ~v29)) & ~v29;
  v32(v35, v36, v27);
  v33 += 7;
  *(_QWORD *)((v33 + v35) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v33 + v36) & 0xFFFFFFFFFFFFF8);
  v170 = ((v33 + (v34 & ~v29)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v37 = (v170 + v30 + v31) & ~v30;
  __dstb = (void *)(((unint64_t)__dsta + v170 + v30) & ~v30);
  v32((v37 + v29) & ~v29, ((unint64_t)__dstb + v29) & ~v29, v27);
  v38 = (v34 + (((unint64_t)__dstb + v29) & ~v29)) & ~v29;
  v32((v34 + ((v37 + v29) & ~v29)) & ~v29, v38, v27);
  *(_QWORD *)((v33 + ((v34 + ((v37 + v29) & ~v29)) & ~v29)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v33 + v38) & 0xFFFFFFFFFFFFF8);
  v32((v170 + v29 + v37) & ~v29, ((unint64_t)__dstb + v170 + v29) & ~v29, v27);
  v39 = (_QWORD *)((v33 + ((v170 + v29 + v37) & ~v29)) & 0xFFFFFFFFFFFFF8);
  v40 = (_QWORD *)((v33 + (((unint64_t)__dstb + v170 + v29) & ~v29)) & 0xFFFFFFFFFFFFF8);
  *v39 = *v40;
  *(_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFF8);
  v41 = ((((v33
          + ((v170
            + v29
            + ((v170 + (v29 | 7) + ((v176 + ((v178 + ((v178 + (v182 & ~v16)) & ~v16)) & ~v16)) & ~v30)) & ~v30)) & ~v29)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v174 = sub_22ABDD5D4();
  v42 = *(_QWORD *)(v174 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
  v44 = *(_QWORD *)(v177 - 8);
  v45 = *(unsigned __int8 *)(v44 + 80);
  v46 = v43 | v45;
  v47 = v43 | v45 | 7;
  v48 = ~v47;
  v49 = (v47 + v41 + v181) & ~v47;
  v183 = (_DWORD *)((v47 + v41 + v180) & ~v47);
  v50 = *(unsigned int *)(v42 + 84);
  if ((_DWORD)v50)
    v51 = v50 - 1;
  else
    v51 = 0;
  v52 = *(unsigned int *)(v44 + 84);
  if (v52 <= v51)
    v53 = v51;
  else
    v53 = *(_DWORD *)(v44 + 84);
  v54 = v52 - 1;
  if (!(_DWORD)v52)
    v54 = 0;
  if (v54 <= v53)
    v55 = v53;
  else
    v55 = v54;
  if ((_DWORD)v50)
    v56 = *(_QWORD *)(v42 + 64);
  else
    v56 = *(_QWORD *)(v42 + 64) + 1;
  v57 = ~v43;
  v58 = ~v45;
  v59 = v45 + 8;
  v163 = *(_QWORD *)(v177 - 8);
  v60 = *(_QWORD *)(v44 + 64);
  v61 = v60 + v45;
  v62 = (v60
       + v45
       + ((v60
         + v45
         + ((v45
           + 8
           + ((((((v56 + 3 + ((v43 + 16) & ~v43)) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~v45)) & ~v45)) & ~v45;
  if ((_DWORD)v52)
    v63 = *(_QWORD *)(v44 + 64);
  else
    v63 = v60 + 1;
  v164 = (v63 + 3 + v62) & 0xFFFFFFFFFFFFFFFCLL;
  v64 = v164 + 4;
  v179 = v55;
  v166 = v48;
  v167 = v46;
  __dst = v49;
  v161 = v63;
  v162 = v63 + 3;
  v168 = v56 + 3;
  v169 = v59;
  __n = v56;
  if (!v55)
  {
    v72 = a3;
    v73 = (unint64_t)v183;
    if (!*(_BYTE *)(v49 + v64)
      || ((v74 = *(unsigned __int8 *)(v49 + v64) - 1, (_DWORD)v164 == -4) ? (v75 = 0) : (v74 = 0, v75 = *(_DWORD *)v49),
          (v75 | v74) == 0xFFFFFFFF))
    {
      if (!*((_BYTE *)v183 + v64))
        goto LABEL_65;
      v91 = *((unsigned __int8 *)v183 + v64) - 1;
      v92 = v164 + 4;
      if ((_DWORD)v164 != -4)
      {
        v91 = 0;
        v92 = *v183;
      }
      if ((v92 | v91) == 0xFFFFFFFF)
        goto LABEL_65;
      goto LABEL_53;
    }
    if (*((_BYTE *)v183 + v64))
    {
      v85 = *((unsigned __int8 *)v183 + v64) - 1;
      v86 = v164 + 4;
      if ((_DWORD)v164 != -4)
      {
        v85 = 0;
        v86 = *v183;
      }
      if ((v86 | v85) != 0xFFFFFFFF)
        goto LABEL_45;
    }
    goto LABEL_55;
  }
  v159 = v41;
  v65 = v43 + 8;
  v66 = v43 + 8 + ((v49 + 11) & 0xFFFFFFFFFFFFFFF8);
  v67 = v66 & v57;
  if (v51 == v55)
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v66 & v57, v50, v174);
    v69 = v179;
    if (EnumTagSinglePayload < 2)
      goto LABEL_21;
    goto LABEL_28;
  }
  v76 = (v59 + ((((((v56 + 3 + v67) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v58;
  if ((_DWORD)v52 != v55)
  {
    v82 = __swift_getEnumTagSinglePayload((v61 + ((v61 + v76) & v58)) & v58, v52, v177);
    v69 = v179;
    if (v82 >= 2)
      goto LABEL_28;
LABEL_21:
    v70 = (v65 + (((unint64_t)v183 + 11) & 0xFFFFFFFFFFFFFFF8)) & v57;
    if (v51 == v69)
    {
      v71 = __swift_getEnumTagSinglePayload(v70, v50, v174) >= 2;
      v72 = a3;
      v41 = v159;
      goto LABEL_64;
    }
    v83 = (v169 + ((((((v168 + v70) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v58;
    v72 = a3;
    v41 = v159;
    if ((_DWORD)v52 != v69)
    {
      v71 = __swift_getEnumTagSinglePayload((v61 + ((v61 + v83) & v58)) & v58, v52, v177) >= 2;
LABEL_64:
      v73 = (unint64_t)v183;
      if (!v71)
        goto LABEL_65;
      goto LABEL_68;
    }
    v84 = __swift_getEnumTagSinglePayload(v83, v52, v177);
    v73 = (unint64_t)v183;
    if (!v84)
    {
LABEL_65:
      *(_DWORD *)__dst = *(_DWORD *)v73;
      *(_DWORD *)(__dst | 4) = *(_DWORD *)(v73 | 4);
      v115 = (_DWORD *)((__dst + 11) & 0xFFFFFFFFFFFFFFF8);
      v116 = (_DWORD *)((v73 + 11) & 0xFFFFFFFFFFFFFFF8);
      *v115 = *v116;
      v115[1] = v116[1];
      v117 = (void *)(((unint64_t)v115 + v43 + 8) & v57);
      v118 = (const void *)(((unint64_t)v116 + v43 + 8) & v57);
      v119 = __swift_getEnumTagSinglePayload((uint64_t)v117, 1, v174);
      v120 = __swift_getEnumTagSinglePayload((uint64_t)v118, 1, v174);
      v121 = v41;
      if (v119)
      {
        if (!v120)
        {
          (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v117, v118, v174);
          __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v174);
          goto LABEL_80;
        }
      }
      else
      {
        if (!v120)
        {
          (*(void (**)(void *, const void *, uint64_t))(v42 + 40))(v117, v118, v174);
LABEL_80:
          v73 = (unint64_t)v183;
          v126 = (_DWORD *)(((unint64_t)v118 + v168) & 0xFFFFFFFFFFFFFFFCLL);
          v127 = (_DWORD *)(((unint64_t)v117 + v168) & 0xFFFFFFFFFFFFFFFCLL);
          *v127 = *v126;
          v128 = (_DWORD *)(((unint64_t)v126 + 7) & 0xFFFFFFFFFFFFFFFCLL);
          v129 = (_DWORD *)(((unint64_t)v127 + 7) & 0xFFFFFFFFFFFFFCLL);
          *v129 = *v128;
          v130 = (_QWORD *)(((unint64_t)v129 + 11) & 0xFFFFFFFFFFFFFFF8);
          v131 = (_QWORD *)(((unint64_t)v128 + 11) & 0xFFFFFFFFFFFFFFF8);
          *v130 = *v131;
          v132 = ((unint64_t)v130 + v169) & v58;
          v133 = ((unint64_t)v131 + v169) & v58;
          v134 = *(void (**)(unint64_t, unint64_t, uint64_t))(v163 + 40);
          v134(v132, v133, v177);
          v135 = (v61 + v132) & v58;
          v136 = (v61 + v133) & v58;
          v134(v135, v136, v177);
          v137 = (void *)((v61 + v135) & v58);
          v138 = (const void *)((v61 + v136) & v58);
          v139 = __swift_getEnumTagSinglePayload((uint64_t)v137, 1, v177);
          v140 = __swift_getEnumTagSinglePayload((uint64_t)v138, 1, v177);
          v100 = v181;
          if (v139)
          {
            v114 = v180;
            v87 = v164;
            if (!v140)
            {
              (*(void (**)(void *, const void *, uint64_t))(v163 + 32))(v137, v138, v177);
              __swift_storeEnumTagSinglePayload((uint64_t)v137, 0, 1, v177);
LABEL_86:
              v41 = v121;
              *(_DWORD *)(((unint64_t)v137 + v162) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v138
                                                                                             + v162) & 0xFFFFFFFFFFFFFCLL);
              v89 = v164 + 4;
              v49 = __dst;
              v90 = v179;
              goto LABEL_87;
            }
          }
          else
          {
            v114 = v180;
            v87 = v164;
            if (!v140)
            {
              v134((unint64_t)v137, (unint64_t)v138, v177);
              goto LABEL_86;
            }
            (*(void (**)(void *, uint64_t))(v163 + 8))(v137, v177);
          }
          memcpy(v137, v138, v161);
          goto LABEL_86;
        }
        (*(void (**)(void *, uint64_t))(v42 + 8))(v117, v174);
      }
      memcpy(v117, v118, __n);
      goto LABEL_80;
    }
LABEL_53:
    v67 = (v43 + ((__dst + 11) & 0xFFFFFFFFFFFFFFF8) + 8) & v57;
LABEL_68:
    if (!__swift_getEnumTagSinglePayload(v67, 1, v174))
      (*(void (**)(unint64_t, uint64_t))(v42 + 8))(v67, v174);
    v122 = *(void (**)(unint64_t, uint64_t))(v163 + 8);
    v122((v169 + ((((((v168 + v67) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v58, v177);
    v123 = (v61
          + ((v169 + ((((((v168 + v67) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v58)) & v58;
    v122(v123, v177);
    v124 = (v61 + v123) & v58;
    if (!__swift_getEnumTagSinglePayload(v124, 1, v177))
      v122(v124, v177);
    v87 = v164;
    v49 = __dst;
    if (v179)
      v125 = v164 + 4;
    else
      v125 = v164 + 5;
    memcpy((void *)__dst, (const void *)v73, v125);
    v89 = v164 + 4;
    v90 = v179;
    goto LABEL_76;
  }
  v77 = __swift_getEnumTagSinglePayload(v76, v52, v177);
  v69 = v179;
  if (!v77)
    goto LABEL_21;
LABEL_28:
  v78 = (v65 + (((unint64_t)v183 + 11) & 0xFFFFFFFFFFFFFFF8)) & v57;
  if (v51 == v69)
  {
    v79 = __swift_getEnumTagSinglePayload(v78, v50, v174);
    v55 = v179;
    v72 = a3;
    v41 = v159;
    v49 = __dst;
    v73 = (unint64_t)v183;
    if (v79 < 2)
      goto LABEL_55;
LABEL_45:
    v87 = v164;
    if (v55)
      v88 = v164 + 4;
    else
      v88 = v164 + 5;
    memcpy((void *)v49, (const void *)v73, v88);
    v89 = v164 + 4;
    v90 = v179;
LABEL_76:
    v114 = v180;
    v100 = v181;
    goto LABEL_87;
  }
  v80 = (v169 + ((((((v168 + v78) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v58;
  if ((_DWORD)v52 != v69)
  {
    v93 = __swift_getEnumTagSinglePayload((v61 + ((v61 + v80) & v58)) & v58, v52, v177);
    v72 = a3;
    v41 = v159;
    v49 = __dst;
    v73 = (unint64_t)v183;
    v55 = v179;
    if (v93 < 2)
      goto LABEL_55;
    goto LABEL_45;
  }
  v81 = __swift_getEnumTagSinglePayload(v80, v52, v177);
  v72 = a3;
  v41 = v159;
  v49 = __dst;
  v73 = (unint64_t)v183;
  v55 = v179;
  if (v81)
    goto LABEL_45;
LABEL_55:
  v94 = v73 + 11;
  *(_DWORD *)v49 = *(_DWORD *)v73;
  v95 = v73;
  v96 = (_DWORD *)v49;
  *(_DWORD *)(v49 | 4) = *(_DWORD *)(v95 | 4);
  v97 = (_DWORD *)((v49 + 11) & 0xFFFFFFFFFFFFFFF8);
  v94 &= 0xFFFFFFFFFFFFFFF8;
  *v97 = *(_DWORD *)v94;
  v97[1] = *(_DWORD *)(v94 + 4);
  v98 = (void *)(((unint64_t)v97 + v43 + 8) & v57);
  v99 = (const void *)((v43 + 8 + v94) & v57);
  if (__swift_getEnumTagSinglePayload((uint64_t)v99, 1, v174))
  {
    memcpy(v98, v99, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v98, v99, v174);
    __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v174);
  }
  v100 = v181;
  v101 = (_DWORD *)(((unint64_t)v99 + v168) & 0xFFFFFFFFFFFFFFFCLL);
  v102 = (_DWORD *)(((unint64_t)v98 + v168) & 0xFFFFFFFFFFFFFFFCLL);
  *v102 = *v101;
  v103 = (_DWORD *)(((unint64_t)v101 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v104 = (_DWORD *)(((unint64_t)v102 + 7) & 0xFFFFFFFFFFFFFCLL);
  *v104 = *v103;
  v105 = (_QWORD *)(((unint64_t)v104 + 11) & 0xFFFFFFFFFFFFFFF8);
  v106 = (_QWORD *)(((unint64_t)v103 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v105 = *v106;
  v107 = ((unint64_t)v105 + v169) & v58;
  v108 = ((unint64_t)v106 + v169) & v58;
  v109 = *(void (**)(unint64_t, unint64_t, uint64_t))(v163 + 32);
  v109(v107, v108, v177);
  v110 = (v61 + v107) & v58;
  v111 = (v61 + v108) & v58;
  v109(v110, v111, v177);
  v112 = (void *)((v61 + v110) & v58);
  v113 = (const void *)((v61 + v111) & v58);
  if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v177))
  {
    memcpy(v112, v113, v161);
  }
  else
  {
    v109((unint64_t)v112, (unint64_t)v113, v177);
    __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v177);
  }
  v114 = v180;
  v90 = v179;
  v89 = v164 + 4;
  v87 = v164;
  *(_DWORD *)(((unint64_t)v112 + v162) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)v113 + v162) & 0xFFFFFFFFFFFFFCLL);
  v49 = (unint64_t)v96;
  v73 = (unint64_t)v183;
  if (!v179)
    *(_BYTE *)(v49 + v164 + 4) = 0;
LABEL_87:
  if (v90)
    v141 = v89;
  else
    v141 = v87 + 5;
  v142 = (_QWORD *)(((v49 | 7) + v141) & 0xFFFFFFFFFFFFFFF8);
  v143 = (_QWORD *)(((v73 | 7) + v141) & 0xFFFFFFFFFFFFFFF8);
  *v142 = *v143;
  swift_bridgeObjectRelease();
  v142[1] = v143[1];
  swift_bridgeObjectRelease();
  v144 = (_QWORD *)(((unint64_t)v142 + 23) & 0xFFFFFFFFFFFFF8);
  v145 = (_QWORD *)(((unint64_t)v143 + 23) & 0xFFFFFFFFFFFFF8);
  *v144 = *v145;
  v146 = (_QWORD *)(((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFF8);
  v147 = (_QWORD *)(((unint64_t)v145 + 15) & 0xFFFFFFFFFFFFF8);
  *v146 = *v147;
  v148 = (_QWORD *)(((unint64_t)v146 + 15) & 0xFFFFFFFFFFFFF8);
  v149 = (_QWORD *)(((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFF8);
  *v148 = *v149;
  v150 = (_QWORD *)(((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFF8);
  v151 = (_QWORD *)(((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFF8);
  *v150 = *v151;
  *(_QWORD *)(((unint64_t)v150 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v151 + 15) & 0xFFFFFFFFFFFFF8);
  v152 = (((((((((((v141 + ((v167 + v41) & v166) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  v153 = *(_QWORD *)(*(_QWORD *)(v72 + 32) - 8);
  v154 = *(unsigned __int8 *)(v153 + 80);
  v155 = v152 + v154 + 8;
  v156 = (v155 + v100) & ~v154;
  v157 = (v155 + v114) & ~v154;
  (*(void (**)(uint64_t, uint64_t))(v153 + 40))(v156, v157);
  *(_QWORD *)((*(_QWORD *)(v153 + 64) + 7 + v156) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v153 + 64)
                                                                                       + 7
                                                                                       + v157) & 0xFFFFFFFFFFFFF8);
  return v100;
}

uint64_t sub_22AADD50C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unsigned int EnumTagSinglePayload;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  uint64_t v78;
  unsigned int v79;

  v78 = sub_22ABDD73C();
  v5 = *(_QWORD *)(v78 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v72 = sub_22ABDD8A4();
  v7 = *(_QWORD *)(v72 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v71 = sub_22ABDDAE4();
  v9 = *(_QWORD *)(v71 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v75 = v10;
  v76 = v8;
  if (v10 <= v8)
    v10 = v8;
  v79 = v6;
  v77 = v10;
  if (v10 <= v6)
    v11 = v6;
  else
    v11 = v10;
  v74 = sub_22ABDD7D8();
  v12 = *(_QWORD *)(v74 - 8);
  v73 = *(_DWORD *)(v12 + 84);
  if (v73 <= v11)
    v13 = v11;
  else
    v13 = *(_DWORD *)(v12 + 84);
  v70 = sub_22ABDD5D4();
  v14 = *(_QWORD *)(v70 - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v15)
    v16 = v15 - 1;
  else
    v16 = 0;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int *)(v18 + 84);
  if (v19 <= v16)
    v20 = v16;
  else
    v20 = *(_DWORD *)(v18 + 84);
  v21 = v19 - 1;
  if (!(_DWORD)v19)
    v21 = 0;
  if (v21 <= v20)
    v22 = v20;
  else
    v22 = v21;
  if (v22)
    v23 = v22 - 1;
  else
    v23 = 0;
  if (v23 <= v13)
    v24 = v13;
  else
    v24 = v23;
  if (v24 <= 0x7FFFFFFF)
    v25 = 0x7FFFFFFF;
  else
    v25 = v24;
  v26 = *(_QWORD *)(a3 + 32);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_DWORD *)(v27 + 84);
  if (v28 <= v25)
    v29 = v25;
  else
    v29 = *(_DWORD *)(v27 + 84);
  v69 = v15;
  if (v15)
    v30 = *(_QWORD *)(v14 + 64);
  else
    v30 = *(_QWORD *)(v14 + 64) + 1;
  if ((_DWORD)v19)
    v31 = 3;
  else
    v31 = 4;
  if (v22)
    v32 = 4;
  else
    v32 = 5;
  if (!a2)
    return 0;
  v68 = v26;
  v65 = v17;
  v33 = *(_DWORD *)(v9 + 80) | *(unsigned __int8 *)(v7 + 80);
  v67 = *(_QWORD *)(v5 + 64) + v33;
  v63 = *(_QWORD *)(v7 + 64) + *(_DWORD *)(v9 + 80);
  v64 = *(_DWORD *)(v9 + 80);
  v34 = (v63 & ~v64) + *(_QWORD *)(v9 + 64);
  v35 = *(unsigned __int8 *)(v12 + 80);
  v66 = (v35 | 7) + v34;
  v36 = *(_QWORD *)(v12 + 64);
  v37 = (((v36
         + 7
         + ((((v36 + 7 + ((v36 + v35) & ~v35)) & 0xFFFFFFFFFFFFFFF8)
           + 8
           + v35
           + ((((v36 + 7 + ((v36 + v35) & ~v35)) & 0xFFFFFFFFFFFFFFF8)
             + 8
             + (v35 | 7)
             + ((v66 + ((v34 + v33 + ((v34 + v33 + (v67 & ~v33)) & ~v33)) & ~v33)) & ~(v35 | 7))) & ~(v35 | 7))) & ~v35)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(unsigned __int8 *)(v14 + 80);
  v39 = *(unsigned __int8 *)(v18 + 80);
  v40 = v38 | v39 | 7;
  v41 = v37 + v40 + 8;
  v42 = *(_QWORD *)(v18 + 64);
  v43 = ((v31
        + v42
        + ((v42
          + v39
          + ((v42
            + v39
            + ((v39
              + 8
              + ((((((v30 + 3 + ((v38 + 16) & ~v38)) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~v39)) & ~v39)) & ~v39)) & 0xFFFFFFFFFFFFFFFCLL)
      + v32
      + 7;
  v44 = *(unsigned __int8 *)(v27 + 80);
  v45 = ((((((((((((v43 + (v41 & ~v40)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v44
      + 8;
  if (v29 < a2)
  {
    v46 = a2 - v29;
    if (((((*(_QWORD *)(v27 + 64) + (v45 & ~v44) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v47 = 2;
    else
      v47 = v46 + 1;
    if (v47 >= 0x10000)
      v48 = 4;
    else
      v48 = 2;
    if (v47 < 0x100)
      v48 = 1;
    if (v47 >= 2)
      v49 = v48;
    else
      v49 = 0;
    __asm { BR              X25 }
  }
  if (v25 < v28)
  {
    v50 = (v45 + a1) & ~v44;
    v51 = *(unsigned int *)(v27 + 84);
    v52 = v68;
    return __swift_getEnumTagSinglePayload(v50, v51, v52);
  }
  if (v13 == v25)
  {
    v51 = v79;
    if (v79 == v13)
    {
      v50 = a1;
      v52 = v78;
    }
    else
    {
      v55 = ~v33;
      v56 = v67 + a1;
      if (v77 == v13)
      {
        v50 = v56 & v55;
        v51 = v76;
        if (v76 >= v75)
        {
          v52 = v72;
        }
        else
        {
          v50 = (v63 + v50) & ~v64;
          v51 = v75;
          v52 = v71;
        }
      }
      else
      {
        v50 = (((v66 + ((v34 + v33 + (((v56 | v33) + v34) & v55)) & v55)) & ~(v35 | 7)) + v35) & ~v35;
        v51 = v73;
        v52 = v74;
      }
    }
    return __swift_getEnumTagSinglePayload(v50, v51, v52);
  }
  v54 = (v41 + a1) & ~v40;
  if (v23 == v25)
  {
    if (v22 < 2)
      return 0;
    v58 = (v38 + ((v54 + 11) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v38;
    if (v16 == v22)
    {
      v19 = v69;
      v59 = v70;
    }
    else
    {
      v60 = (v39
           + 8
           + ((((((v30 + 3 + v58) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~v39;
      if ((_DWORD)v19 == v22)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v60, v19, v65);
LABEL_80:
        if (EnumTagSinglePayload >= 2)
          return EnumTagSinglePayload - 1;
        else
          return 0;
      }
      v58 = (v42 + v39 + ((v42 + v39 + v60) & ~v39)) & ~v39;
      v59 = v65;
    }
    v62 = __swift_getEnumTagSinglePayload(v58, v19, v59);
    if (v62 >= 2)
      EnumTagSinglePayload = v62 - 1;
    else
      EnumTagSinglePayload = 0;
    goto LABEL_80;
  }
  v57 = *(_QWORD *)((v43 + v54) & 0xFFFFFFFFFFFFF8);
  if (v57 >= 0xFFFFFFFF)
    LODWORD(v57) = -1;
  return (v57 + 1);
}

void sub_22AADDA8C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  size_t v41;
  unsigned int v42;
  int v43;
  unsigned int v44;

  v5 = *(_QWORD *)(sub_22ABDD73C() - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(sub_22ABDD8A4() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_22ABDDAE4() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v10 = v8;
  if (v10 <= v6)
    v11 = v6;
  else
    v11 = v10;
  v12 = *(_QWORD *)(sub_22ABDD7D8() - 8);
  if (*(_DWORD *)(v12 + 84) <= v11)
    v13 = v11;
  else
    v13 = *(_DWORD *)(v12 + 84);
  v14 = *(_QWORD *)(sub_22ABDD5D4() - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v15)
    v16 = v15 - 1;
  else
    v16 = 0;
  v17 = 0;
  v18 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418) - 8);
  v19 = *(_DWORD *)(v18 + 84);
  if (v19 <= v16)
    v20 = v16;
  else
    v20 = *(_DWORD *)(v18 + 84);
  v21 = v19 - 1;
  if (!v19)
    v21 = 0;
  if (v21 <= v20)
    v22 = v20;
  else
    v22 = v21;
  if (v22)
    v23 = v22 - 1;
  else
    v23 = 0;
  if (v23 <= v13)
    v24 = v13;
  else
    v24 = v23;
  if (v24 <= 0x7FFFFFFF)
    v25 = 0x7FFFFFFF;
  else
    v25 = v24;
  v26 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (*(_DWORD *)(v26 + 84) <= v25)
    v27 = v25;
  else
    v27 = *(_DWORD *)(v26 + 84);
  v28 = *(_QWORD *)(v14 + 64);
  if (!v15)
    ++v28;
  v29 = *(_DWORD *)(v9 + 80) | *(unsigned __int8 *)(v7 + 80);
  v30 = ((*(_QWORD *)(v7 + 64) + *(_DWORD *)(v9 + 80)) & ~(unint64_t)*(_DWORD *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  v31 = *(unsigned __int8 *)(v12 + 80);
  v32 = *(_QWORD *)(v12 + 64);
  v33 = v32
      + 7
      + ((((v32 + 7 + ((v32 + v31) & ~v31)) & 0xFFFFFFFFFFFFFFF8)
        + 8
        + v31
        + ((((v32 + 7 + ((v32 + v31) & ~v31)) & 0xFFFFFFFFFFFFFFF8)
          + 8
          + (v31 | 7)
          + (((v31 | 7) + v30 + ((v30 + v29 + ((v30 + v29 + ((*(_QWORD *)(v5 + 64) + v29) & ~v29)) & ~v29)) & ~v29)) & ~(v31 | 7))) & ~(v31 | 7))) & ~v31);
  v34 = *(unsigned __int8 *)(v14 + 80);
  v35 = *(unsigned __int8 *)(v18 + 80);
  v36 = *(_QWORD *)(v18 + 64);
  v37 = (v36
       + v35
       + ((v36
         + v35
         + ((v35
           + 8
           + ((((((v28 + 3 + ((v34 + 16) & ~v34)) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & ~v35)) & ~v35)) & ~v35;
  if (v19)
    v38 = v36;
  else
    v38 = v36 + 1;
  v39 = v38 + v37;
  if (v22)
    v40 = 4;
  else
    v40 = 5;
  v41 = ((*(_QWORD *)(v26 + 64)
        + ((((((((((((((((v39 + 3) & 0xFFFFFFFFFFFFFFFCLL)
                      + v40
                      + (((((v33 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + (v34 | v35 | 7) + 8) & ~(v34 | v35 | 7))
                      + 7) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + *(unsigned __int8 *)(v26 + 80)
          + 8) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v27 < a3)
  {
    if ((_DWORD)v41)
      v42 = 2;
    else
      v42 = a3 - v27 + 1;
    if (v42 >= 0x10000)
      v43 = 4;
    else
      v43 = 2;
    if (v42 < 0x100)
      v43 = 1;
    if (v42 >= 2)
      v17 = v43;
    else
      v17 = 0;
  }
  if (a2 > v27)
  {
    if ((_DWORD)v41)
    {
      v44 = ~v27 + a2;
      bzero(a1, v41);
      *a1 = v44;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X24 }
}

void sub_22AADDE40(uint64_t a1@<X0>, size_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned int a7@<W6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,int a26,int a27,int a28,int a29,uint64_t a30,int a31,int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  int v52;
  uint64_t v53;
  unsigned int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  unsigned int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  unsigned int v74;
  _DWORD *v75;
  unsigned int v76;
  unsigned int v77;
  unint64_t v78;
  _QWORD *v79;
  int v80;
  size_t v81;
  int v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  uint64_t v99;
  int v100;
  uint64_t v101;

  *((_BYTE *)v62 + v66) = 0;
  v69 = *(_DWORD *)(v67 - 92);
  if (!v69)
    return;
  if (v54 < v51)
  {
    v70 = ((unint64_t)v62 + v57) & v53;
    v71 = *(unsigned int *)(v67 - 92);
    a3 = v51;
    v72 = *(_QWORD *)(v67 - 120);
LABEL_4:
    __swift_storeEnumTagSinglePayload(v70, v71, a3, v72);
    return;
  }
  if (v54 < v69)
  {
    v73 = (((((((((((a9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8;
    if (v73 != -8)
    {
      v74 = ~v54 + v69;
      bzero(v62, v73 + 8);
      *v62 = v74;
    }
    return;
  }
  if (v60 != v54)
  {
    v75 = (_DWORD *)(((unint64_t)v62 + v65) & a1);
    if (v55 != v54)
    {
      v79 = (_QWORD *)(((unint64_t)v75 + v64 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((v69 & 0x80000000) != 0)
      {
        *v79 = v69 ^ 0x80000000;
        v79[1] = 0;
      }
      else
      {
        *v79 = v69 - 1;
      }
      return;
    }
    v71 = v69 + 1;
    if (v71 > *(_DWORD *)(v67 - 128))
    {
      v76 = (v52 + 3) & 0xFFFFFFFC;
      a2 = v76 + 4;
      if (v76 == -4)
        return;
      v77 = v69 - *(_DWORD *)(v67 - 128);
LABEL_27:
      bzero(v75, a2);
      *v75 = v77;
      return;
    }
    if (v69 == -1)
      return;
    v70 = (a8 + (((unint64_t)v75 + 11) & 0xFFFFFFFFFFFFFFF8) + 8) & v61;
    v80 = *(_DWORD *)(v67 - 128);
    if (v94 == v80)
    {
      v71 = v69 + 2;
      a3 = v88;
      v72 = v89;
      goto LABEL_4;
    }
    v70 = (v86 + ((((((v87 + v70) & 0xFFFFFFFFFFFFFFFCLL) + 7) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8)) & v83;
    if ((_DWORD)a3 != v80)
    {
      if ((_DWORD)a3)
        v81 = a7;
      else
        v81 = a7 + 1;
      if (v71 > v84)
      {
        if ((_DWORD)v81)
        {
          if (v81 <= 3)
            v82 = v81;
          else
            v82 = 4;
          bzero((void *)((v68 + ((v68 + v70) & v83)) & v83), v81);
          __asm { BR              X10 }
        }
        return;
      }
      v71 = v69 + 2;
      v70 = (v68 + ((v68 + v70) & v83)) & v83;
    }
    v72 = v85;
    goto LABEL_4;
  }
  a3 = *(unsigned int *)(v67 - 124);
  if ((_DWORD)a3 == v60)
  {
    v70 = (unint64_t)v62;
    v71 = *(unsigned int *)(v67 - 92);
    v72 = v101;
    goto LABEL_4;
  }
  v78 = (unint64_t)v62 + v99;
  if (v100 == v60)
  {
    v70 = v78 & v63;
    a3 = v97;
    if (v97 >= v96)
    {
      v71 = *(unsigned int *)(v67 - 92);
      v72 = v93;
    }
    else
    {
      v70 = (v90 + v70) & a6;
      v71 = *(unsigned int *)(v67 - 92);
      a3 = v96;
      v72 = v92;
    }
    goto LABEL_4;
  }
  v75 = (_DWORD *)((v95 + ((v59 + (((v78 | v56) + a5) & v63)) & v63)) & a4);
  a3 = v98;
  if (v98 >= v69)
  {
    v70 = ((unint64_t)v75 + v58) & *(_QWORD *)(v67 - 112);
    v71 = *(unsigned int *)(v67 - 92);
    v72 = v91;
    goto LABEL_4;
  }
  if ((_DWORD)a2)
  {
    v77 = ~v98 + v69;
    goto LABEL_27;
  }
}

void sub_22AADE138()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
}

void sub_22AADE150()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
}

void sub_22AADE158()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
}

void sub_22AADE16C()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AADE17C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 88) + 24))(*(_QWORD *)(a1 + 32));
}

void sub_22AADE1B0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_4();
  MEMORY[0x24BDAC7A8](v0);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_9_60();
}

#error "22AADE318: call analysis failed (funcsize=39)"

void sub_22AADE31C()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AADE32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[12];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  OUTLINED_FUNCTION_4_4();
  v26 = v25;
  v28 = v27;
  v49 = v29;
  v31 = v30;
  v33 = v32;
  v48[2] = v34;
  v50 = v35;
  v51 = v36;
  v48[11] = v37;
  v48[1] = a25;
  v38 = sub_22ABDD4D8();
  v48[9] = *(_QWORD *)(v38 - 8);
  v48[10] = v38;
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_0();
  v48[8] = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_0();
  v48[6] = v41;
  sub_22ABDD4F0();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_0();
  v48[3] = v43;
  sub_22ABDDA0C();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_87();
  v48[7] = v45;
  MEMORY[0x24BDAC7A8](v46);
  v48[4] = (char *)v48 - v47;
  v52 = v33;
  v53 = v31;
  v54 = v49;
  v55 = v28;
  v56 = v26;
  v57 = a21;
  v58 = a22;
  v59 = a23;
  v60 = a24;
  v61 = a25;
  _s14descr24F4C7119C18PredictionSequenceV13AsyncIteratorVMa();
}

void sub_22AADE478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(*(_QWORD *)(v9 - 200) + *(int *)(a1 + 120)) = 0;
  *(_QWORD *)(v9 - 168) = v5;
  *(_QWORD *)(v9 - 160) = v8;
  *(_QWORD *)(v9 - 152) = v4;
  *(_QWORD *)(v9 - 144) = v6;
  *(_QWORD *)(v9 - 136) = v1;
  *(_QWORD *)(v9 - 128) = v2;
  *(_QWORD *)(v9 - 120) = v3;
  *(_QWORD *)(v9 - 112) = v7;
  OUTLINED_FUNCTION_9_60();
}

void sub_22AADE4A0(uint64_t a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v5 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v3 - 248) = v5;
  v6 = *(_QWORD *)(v3 - 184);
  OUTLINED_FUNCTION_24_11(v2, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  *(_QWORD *)(v2 + v1[25]) = *(_QWORD *)(v3 - 272);
  v7 = v2 + v1[26];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v3 - 272) = AssociatedTypeWitness;
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v3 - 192) = v9;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16))(v7, *(_QWORD *)(v3 - 176), AssociatedTypeWitness);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(v6 + *(int *)(a1 + 96));
  *(_QWORD *)(v10 + 40) = *(_QWORD *)(v6 + *(int *)(a1 + 92));
  sub_22AA3EF3C();
  sub_22ABDD4FC();
  sub_22ABDD538();
  OUTLINED_FUNCTION_38_11();
  v11 = *MEMORY[0x24BE6B8B8];
  v12 = *(_QWORD *)(v3 - 224);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 216) + 104);
  v14 = *(_QWORD *)(v3 - 208);
  v13(v12, v11, v14);
  OUTLINED_FUNCTION_36_31();
  sub_22ABDD4FC();
  OUTLINED_FUNCTION_38_11();
  v13(v12, v11, v14);
  OUTLINED_FUNCTION_36_31();
  v15 = *(_QWORD *)(v3 - 200);
  sub_22ABDD700();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 192) + 8))(*(_QWORD *)(v3 - 176), *(_QWORD *)(v3 - 272));
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(*(_QWORD *)(v3 - 184), a1);
  v16 = (_QWORD *)(v15 + v1[29]);
  *v16 = 0;
  v16[1] = 0xE000000000000000;
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = 1;
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AADE678(uint64_t a1)
{
  return sub_22AADE17C(a1);
}

void sub_22AADE690()
{
  sub_22AADE1B0();
}

uint64_t sub_22AADE6A4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

void sub_22AADE6C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B0);
  v3[22] = OUTLINED_FUNCTION_0_0();
  v5 = a2[2];
  v3[23] = v5;
  v6 = a2[5];
  v3[24] = v6;
  v7 = sub_22ABDE8A0();
  v3[25] = v7;
  v3[26] = *(_QWORD *)(v7 - 8);
  v3[27] = OUTLINED_FUNCTION_0_0();
  v8 = a2[3];
  v3[28] = v8;
  v9 = a2[6];
  v3[29] = v9;
  v10 = a2[7];
  v3[30] = v10;
  v11 = a2[8];
  v3[31] = v11;
  v12 = a2[9];
  v3[32] = v12;
  v13 = a2[10];
  v3[33] = v13;
  v3[2] = v5;
  v3[3] = v8;
  v3[4] = v6;
  v3[5] = v9;
  v3[6] = v10;
  v3[7] = v11;
  v3[8] = v12;
  v3[9] = v13;
  OUTLINED_FUNCTION_9_60();
}

uint64_t sub_22AADE784(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v3[34] = a1;
  v3[35] = *(_QWORD *)(a1 - 8);
  v3[36] = OUTLINED_FUNCTION_0_0();
  v4 = sub_22ABDD4D8();
  v3[37] = v4;
  v3[38] = *(_QWORD *)(v4 - 8);
  v3[39] = OUTLINED_FUNCTION_0_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  v3[40] = OUTLINED_FUNCTION_0_0();
  sub_22ABDD4F0();
  v3[41] = OUTLINED_FUNCTION_0_0();
  v5 = sub_22ABDDA0C();
  v3[42] = v5;
  v3[43] = *(_QWORD *)(v5 - 8);
  v3[44] = OUTLINED_FUNCTION_5_17();
  v3[45] = OUTLINED_FUNCTION_5_17();
  v3[46] = OUTLINED_FUNCTION_5_17();
  v3[47] = OUTLINED_FUNCTION_5_17();
  v3[48] = OUTLINED_FUNCTION_5_17();
  v6 = OUTLINED_FUNCTION_46_22();
  v3[49] = v6;
  v3[50] = *(_QWORD *)(v6 - 8);
  v3[51] = OUTLINED_FUNCTION_5_17();
  v3[52] = OUTLINED_FUNCTION_5_17();
  v9 = type metadata accessor for TemporalFeature(255, v2, v7, v8);
  v3[53] = v9;
  v10 = sub_22ABDF5D8();
  v3[54] = v10;
  v3[55] = *(_QWORD *)(v10 - 8);
  v3[56] = OUTLINED_FUNCTION_0_0();
  v3[57] = *(_QWORD *)(v9 - 8);
  v3[58] = OUTLINED_FUNCTION_0_0();
  v3[59] = *(_QWORD *)(v1 + 88);
  v3[60] = *(_QWORD *)(v1 + 32);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v11 = (_QWORD *)swift_task_alloc();
  v3[61] = v11;
  *v11 = v3;
  v11[1] = sub_22AADE93C;
  return OUTLINED_FUNCTION_10_55();
}

uint64_t sub_22AADE93C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 496) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AADE98C()
{
  _QWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t (*v3)(void);

  v1 = v0[56];
  if (__swift_getEnumTagSinglePayload(v1, 1, v0[53]) != 1)
  {
    OUTLINED_FUNCTION_38_8(v0[58], v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[57] + 32));
    OUTLINED_FUNCTION_30_34();
  }
  v2 = (_OWORD *)v0[19];
  OUTLINED_FUNCTION_57_6(v0[55]);
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  OUTLINED_FUNCTION_4_64();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_79_4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v3();
}

uint64_t sub_22AADECB8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v1;
  *v1 = v0;
  v1[1] = sub_22AADED00;
  return sub_22AADF898(*(_QWORD *)(v0 + 160));
}

uint64_t sub_22AADED00()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 512) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AADED50()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t (*v39)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[2];
  __int128 v64;
  uint64_t v65;
  uint64_t v66[3];

  v2 = *(int **)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  if (*(_QWORD *)(v1 + v2[30]) >= *(_QWORD *)(v1 + *(int *)(*(_QWORD *)(v0 + 272) + 96)))
  {
    v61 = *(_QWORD *)(v0 + 512);
    v4 = *(_QWORD *)(v0 + 384);
    v55 = *(_QWORD *)(v0 + 400);
    v56 = *(_QWORD *)(v0 + 392);
    v53 = *(_QWORD *)(v0 + 344);
    v62 = *(_QWORD *)(v0 + 336);
    v6 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 184);
    OUTLINED_FUNCTION_38_8(*(_QWORD *)(v0 + 288), v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 280) + 16));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v1 + v2[27], v7);
    sub_22AA5A180(v5, v9, v4);
    sub_22ABDD8BC();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v4, v62);
    v10 = v1 + v2[28];
    OUTLINED_FUNCTION_24_11(v8, v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16));
    __swift_storeEnumTagSinglePayload(v8, 0, 1, v56);
    sub_22A9C5528();
    if (v61)
    {
      v11 = *(_QWORD *)(v0 + 280);
      v12 = *(_QWORD *)(v0 + 288);
      v13 = *(_QWORD *)(v0 + 272);
      sub_22A9AD754(*(_QWORD *)(v0 + 176), &qword_255B0F3B0);
      OUTLINED_FUNCTION_38_33();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
      sub_22AADFC58();
    }
    v60 = *(_QWORD *)(v0 + 480);
    v48 = *(_QWORD *)(v0 + 472);
    v45 = *(_QWORD *)(v0 + 392);
    v46 = *(_QWORD *)(v0 + 408);
    v43 = *(_QWORD *)(v0 + 360);
    v44 = *(_QWORD *)(v0 + 400);
    v42 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 280);
    v15 = *(_QWORD *)(v0 + 288);
    v16 = *(_QWORD *)(v0 + 272);
    v47 = *(_QWORD *)(v0 + 264);
    v51 = *(_QWORD *)(v0 + 256);
    v52 = *(_QWORD *)(v0 + 368);
    v58 = *(_QWORD *)(v0 + 240);
    v59 = *(_QWORD *)(v0 + 248);
    v17 = *(_QWORD *)(v0 + 224);
    v57 = *(_QWORD *)(v0 + 232);
    v41 = v17;
    v18 = *(_QWORD *)(v0 + 192);
    v54 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 168);
    v49 = v19 + *(int *)(v0 + 520);
    v50 = *(_QWORD *)(v0 + 152);
    sub_22A9AD754(*(_QWORD *)(v0 + 176), &qword_255B0F3B0);
    OUTLINED_FUNCTION_38_33();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    OUTLINED_FUNCTION_38_8(v52, v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 32));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 40))(v10, v46, v45);
    *(_QWORD *)(v0 + 128) = sub_22ABDD9C4();
    v20 = (_QWORD *)swift_task_alloc();
    v20[2] = v54;
    v20[3] = v17;
    v20[4] = v60;
    v20[5] = v18;
    v20[6] = v57;
    v20[7] = v58;
    v20[8] = v59;
    v20[9] = v51;
    v20[10] = v47;
    v20[11] = v48;
    v20[12] = v19;
    v21 = (_QWORD *)swift_task_alloc();
    v21[2] = v54;
    v21[3] = v17;
    v21[4] = v60;
    v21[5] = v18;
    v21[6] = v57;
    v21[7] = v58;
    v21[8] = v59;
    v21[9] = v51;
    v21[10] = v47;
    v21[11] = v48;
    v21[12] = sub_22AAE01B0;
    v21[13] = v20;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B8);
    v24 = type metadata accessor for Classification(0, v17, v47, v23);
    v25 = sub_22A9C8D60((unint64_t *)&qword_255B0F3C0, &qword_255B0F3B8, MEMORY[0x24BEE2FC0]);
    v27 = sub_22A9C2540((uint64_t)sub_22AAE01EC, (uint64_t)v21, v22, v24, MEMORY[0x24BEE4078], v25, MEMORY[0x24BEE40A8], v26);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_13_3();
    v28 = *(_QWORD *)(v49 + 8);
    v29 = *(_QWORD *)(v49 + 32);
    v63[0] = *(_QWORD *)v49;
    v63[1] = v28;
    v64 = *(_OWORD *)(v49 + 16);
    v65 = v29;
    *(_QWORD *)(v0 + 136) = v27;
    v30 = sub_22ABDF0F8();
    sub_22ABDEAEC();
    v31 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v30);
    ClassificationDistribution.init<A>(_:)((char *)(v0 + 136), v41, v30, v47, v31, v66);
    OUTLINED_FUNCTION_38_33();
    *(_QWORD *)(v0 + 144) = v66[0];
    v33 = type metadata accessor for ClassificationDistribution(0, v41, v47, v32);
    TemporalFeature.init(id:feature:)((uint64_t)v63, v0 + 144, v33, v34, v0 + 80);
    v35 = *(_QWORD *)(v0 + 88);
    v36 = *(_QWORD *)(v0 + 112);
    v37 = *(_QWORD *)(v0 + 120);
    v38 = *(_OWORD *)(v0 + 96);
    *(_QWORD *)v50 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v50 + 8) = v35;
    *(_OWORD *)(v50 + 16) = v38;
    *(_QWORD *)(v50 + 32) = v36;
    *(_QWORD *)(v50 + 40) = v37;
    sub_22AADFC58();
  }
  v3 = *(_OWORD **)(v0 + 152);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 456));
  v3[1] = 0u;
  v3[2] = 0u;
  *v3 = 0u;
  OUTLINED_FUNCTION_4_64();
  OUTLINED_FUNCTION_44_24();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v39();
}

uint64_t sub_22AADF37C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_77();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  return OUTLINED_FUNCTION_12_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AADF3FC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 456));
  OUTLINED_FUNCTION_3_77();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  return OUTLINED_FUNCTION_12_24(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AADF488()
{
  sub_22ABDE8A0();
  sub_22ABDE84C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_22ABE8E30;
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t sub_22AADF530(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(_QWORD *)(v2 + *(int *)(a1 + 92));
  v1[4] = v4;
  v5 = sub_22A99EB90(v3, v1);
  swift_setDeallocating();
  result = swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    v7 = sub_22ABDE84C();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = v11;
    *(_QWORD *)(v8 + 32) = v4;
    MEMORY[0x22E2E3298]();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22A9B7B50();
    v9 = swift_allocError();
    *(_QWORD *)v10 = v7;
    *(_QWORD *)(v10 + 8) = 0xD00000000000001CLL;
    *(_QWORD *)(v10 + 16) = 0x800000022ABE5890;
    *(_QWORD *)(v10 + 24) = 0;
    *(_BYTE *)(v10 + 32) = 6;
    return swift_willThrow(v9);
  }
  return result;
}

void sub_22AADF65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD v15[9];
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  OUTLINED_FUNCTION_4_4();
  v2 = v1;
  v15[5] = v3;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = sub_22ABDE8DC();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_87();
  v15[4] = v7;
  MEMORY[0x24BDAC7A8](v8);
  v15[2] = (char *)v15 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
  v10 = OUTLINED_FUNCTION_26_36();
  *(_OWORD *)(v10 + 16) = xmmword_22ABE9FB0;
  v11 = *(_QWORD *)(v0 + *(int *)(v2 + 120));
  *(_QWORD *)(v10 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16A78);
  *(_QWORD *)(v10 + 64) = sub_22A9C8D60(qword_255B16A80, &qword_255B16A78, MEMORY[0x24BDBFE28]);
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v11;
  v12 = *(_QWORD *)(v2 + 24);
  v13 = *(_QWORD *)(v2 + 80);
  v15[6] = v4;
  v15[7] = v12;
  v15[8] = v5;
  v14 = *(_OWORD *)(v2 + 64);
  v16 = *(_OWORD *)(v2 + 48);
  v17 = v14;
  v18 = v13;
  OUTLINED_FUNCTION_9_60();
}

void sub_22AADF760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v8 = *(int *)(a1 + 92);
  *(_QWORD *)(v7 - 168) = v1;
  v9 = *(_QWORD *)(v1 + v8);
  v6[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
  v6[13] = sub_22A9C8D60((unint64_t *)&qword_255B0EBA0, &qword_2540E85F8, MEMORY[0x24BDBFE50]);
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)(v7 - 184) = v4;
  v6[9] = 0;
  v6[10] = v9;
  v10 = sub_22ABDE8A0();
  type metadata accessor for TemporalFeature(0, v10, v11, v12);
  v13 = v5;
  v14 = *(_QWORD *)(v7 - 152);
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v10);
  v15 = *(_QWORD *)(v7 - 160);
  sub_22ABDE984();
  sub_22ABDE8C4();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v3);
  v16 = *(_QWORD *)(v7 - 168);
  sub_22ABDE978();
  v17 = v16 + *(int *)(v2 + 116);
  v18 = *(_QWORD *)(v14 + 24);
  if (v18 < *(_QWORD *)(v17 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(v17 + 24) = v18;
  v19 = *(_QWORD *)(v7 - 184);
  v20 = *(_QWORD *)(v16 + v19);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (!v21)
  {
    *(_QWORD *)(v16 + v19) = v22;
    OUTLINED_FUNCTION_3();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_22AADF898(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[10] = a1;
  v2[11] = v1;
  v2[12] = *(_QWORD *)(a1 + 16);
  v2[13] = *(_QWORD *)(a1 + 40);
  v3 = sub_22ABDE8A0();
  v6 = type metadata accessor for TemporalFeature(255, v3, v4, v5);
  v2[14] = v6;
  v7 = sub_22ABDF5D8();
  v2[15] = v7;
  v2[16] = *(_QWORD *)(v7 - 8);
  v2[17] = OUTLINED_FUNCTION_0_0();
  v2[18] = *(_QWORD *)(v6 - 8);
  v2[19] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AADF920()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_DWORD *)(v1 + 120);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  *(_DWORD *)(v0 + 192) = v2;
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_OWORD *)(v1 + 48);
  v6 = *(_OWORD *)(v1 + 64);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 32) = v3;
  *(_OWORD *)(v0 + 40) = v5;
  *(_OWORD *)(v0 + 56) = v6;
  *(_QWORD *)(v0 + 72) = v4;
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t sub_22AADF984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = *(int *)(a1 + 96);
  *(_DWORD *)(v2 + 180) = v5;
  if (*(_QWORD *)(v3 + v1) >= *(_QWORD *)(v3 + v5))
  {
    OUTLINED_FUNCTION_25_35();
    OUTLINED_FUNCTION_28_0();
    v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_3_1(v9);
  }
  else
  {
    v6 = *(_QWORD *)(v4 + 80);
    *(_DWORD *)(v4 + 200) = *(_DWORD *)(v6 + 104);
    *(_QWORD *)(v4 + 160) = *(_QWORD *)(*(_QWORD *)(v6 + 88) + 8);
    *(_QWORD *)(v4 + 168) = *(_QWORD *)(v6 + 32);
    swift_getAssociatedTypeWitness();
    OUTLINED_FUNCTION_41_21();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 176) = v7;
    *v7 = v4;
    v7[1] = sub_22AADFA50;
    OUTLINED_FUNCTION_40_21();
    return OUTLINED_FUNCTION_10_55();
  }
}

uint64_t sub_22AADFA50()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AADFAA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = v0[17];
  if (__swift_getEnumTagSinglePayload(v1, 1, v0[14]) != 1)
  {
    OUTLINED_FUNCTION_38_8(v0[19], v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 32));
    OUTLINED_FUNCTION_30_34();
  }
  OUTLINED_FUNCTION_57_6(v0[16]);
  OUTLINED_FUNCTION_25_35();
  OUTLINED_FUNCTION_28_0();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v2();
}

uint64_t sub_22AADFB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v2);
  if (*(_QWORD *)(v1 + v5) >= *(_QWORD *)(v1 + v4))
    JUMPOUT(0x22AADFAE8);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_41_21();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 176) = v7;
  *v7 = v3;
  v7[1] = sub_22AADFA50;
  OUTLINED_FUNCTION_40_21();
  return sub_22ABDF188();
}

uint64_t sub_22AADFC20()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AADFC58()
{
  _s14descr24F4C7119C18PredictionSequenceV13AsyncIteratorVMa();
}

void sub_22AADFC98()
{
  sub_22AADFE3C();
}

void sub_22AADFCAC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for TimeSeriesClassifier.Model();
}

void sub_22AADFD70()
{
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22AB593D8();
}

uint64_t sub_22AADFDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float v7;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, v4, v2);
  result = __swift_getEnumTagSinglePayload(v3, 1, v0);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v2);
    return Classification.init(label:probability:)(v3, v0, v5, *(_QWORD *)(v6 - 200), v7);
  }
  return result;
}

void sub_22AADFE3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _QWORD v17[2];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = v2;
  v4 = *(_QWORD *)(v2 + 16);
  v19 = *(_QWORD *)(v2 + 40);
  v20 = v4;
  sub_22ABDE8DC();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v17 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
  v8 = OUTLINED_FUNCTION_26_36();
  *(_OWORD *)(v8 + 16) = xmmword_22ABE9FB0;
  v9 = *(int *)(v3 + 120);
  v10 = *(_QWORD *)(v0 + v9);
  v11 = *(_QWORD *)(v1 + *(int *)(v3 + 100));
  v12 = v10 - v11;
  if (__OFSUB__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = (_QWORD *)v8;
    v18 = xmmword_22ABE9FB0;
    v17[1] = v9;
    *(_QWORD *)(v8 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
    v13[8] = sub_22A9C8D60((unint64_t *)&qword_255B0EBA0, &qword_2540E85F8, MEMORY[0x24BDBFE50]);
    if ((v12 & 0x8000000000000000) == 0)
    {
      v17[0] = v7;
      v13[4] = 0;
      v13[5] = v12;
      v14 = *(_QWORD *)(v3 + 24);
      v15 = *(_QWORD *)(v3 + 80);
      v21 = v20;
      v22 = v14;
      v23 = v19;
      v16 = *(_OWORD *)(v3 + 64);
      v24 = *(_OWORD *)(v3 + 48);
      v25 = v16;
      v26 = v15;
      OUTLINED_FUNCTION_9_60();
    }
  }
  __break(1u);
  JUMPOUT(0x22AAE0024);
}

void sub_22AAE0034(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A9AFDDC;
  sub_22AADE6C0(a1, a2);
}

uint64_t sub_22AAE0094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_22AAE012C;
  return sub_22ABDF1A0();
}

uint64_t sub_22AAE012C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_22AAE0184(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&unk_22ABF86E8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22AAE01B0()
{
  sub_22AADFCAC();
}

uint64_t sub_22AAE01EC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, float))(v1 + 96))(*(_QWORD *)a1, *(float *)(a1 + 8));
}

void _s14descr24F4C7119C18PredictionSequenceV13AsyncIteratorVMa()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AAE022C()
{
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t sub_22AAE0354(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = sub_22ABDD73C();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)type metadata accessor for LSTMFCN(0);
    v8 = v7[5];
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_22ABDD8A4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
    v14 = *(int *)(v13 + 20);
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = sub_22ABDDAE4();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v19 = v7[6];
    v20 = &a1[v19];
    v21 = (char *)a2 + v19;
    v12(&a1[v19], (char *)a2 + v19, v11);
    v18(&v20[*(int *)(v13 + 20)], &v21[*(int *)(v13 + 20)], v17);
    v22 = v7[7];
    v23 = &a1[v22];
    v24 = (char *)a2 + v22;
    v12(&a1[v22], (char *)a2 + v22, v11);
    v18(&v23[*(int *)(v13 + 20)], &v24[*(int *)(v13 + 20)], v17);
    v25 = v7[8];
    v26 = &a1[v25];
    v27 = (char *)a2 + v25;
    v28 = sub_22ABDD7D8();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    v29(v26, v27, v28);
    v30 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
    v29(&v26[*(int *)(v30 + 24)], &v27[*(int *)(v30 + 24)], v28);
    *(_QWORD *)&v26[*(int *)(v30 + 28)] = *(_QWORD *)&v27[*(int *)(v30 + 28)];
    v31 = v7[9];
    v32 = &a1[v31];
    v33 = (char *)a2 + v31;
    v29(&a1[v31], (char *)a2 + v31, v28);
    v29(&v32[*(int *)(v30 + 24)], &v33[*(int *)(v30 + 24)], v28);
    *(_QWORD *)&v32[*(int *)(v30 + 28)] = *(_QWORD *)&v33[*(int *)(v30 + 28)];
    v29(&a1[v7[11]], (char *)a2 + v7[11], v28);
    *(_QWORD *)&a1[v7[12]] = *(uint64_t *)((char *)a2 + v7[12]);
    *(_QWORD *)&a1[v7[13]] = *(uint64_t *)((char *)a2 + v7[13]);
    type metadata accessor for TimeSeriesClassifier.Model();
  }
  v34 = *a2;
  *(_QWORD *)a1 = *a2;
  v35 = v34 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v35;
}

void sub_22AAE08DC(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v2 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = (int *)type metadata accessor for LSTMFCN(0);
  v4 = a1 + v3[5];
  v5 = sub_22ABDD8A4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v8 = v4 + *(int *)(v7 + 20);
  v9 = sub_22ABDDAE4();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v11 = a1 + v3[6];
  v6(v11, v5);
  v10(v11 + *(int *)(v7 + 20), v9);
  v12 = a1 + v3[7];
  v6(v12, v5);
  v10(v12 + *(int *)(v7 + 20), v9);
  v13 = a1 + v3[8];
  v14 = sub_22ABDD7D8();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
  v15(v13, v14);
  v16 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v15(v13 + *(int *)(v16 + 24), v14);
  v17 = a1 + v3[9];
  v15(v17, v14);
  v15(v17 + *(int *)(v16 + 24), v14);
  v15(a1 + v3[11], v14);
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t sub_22AAE0A74(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v1 + *(int *)(a1 + 84);
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  if (!__swift_getEnumTagSinglePayload(v3, 1, (uint64_t)v4))
  {
    v5 = v3 + v4[12];
    v6 = sub_22ABDD5D4();
    if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = v3 + v4[16];
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v7, v8);
    v9(v3 + v4[17], v8);
    v10 = v3 + v4[18];
    if (!__swift_getEnumTagSinglePayload(v10, 1, v8))
      v9(v10, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v1 + v2[26];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v11, AssociatedTypeWitness);
  v13 = v1 + v2[27];
  v14 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = v1 + v2[28];
  v16 = sub_22ABDD718();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  return swift_bridgeObjectRelease();
}

void sub_22AAE0C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for LSTMFCN(0);
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_22ABDD8A4();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v12 = *(int *)(v11 + 20);
  v13 = v7 + v12;
  v14 = v8 + v12;
  v15 = sub_22ABDDAE4();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v17 = v5[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v10(a1 + v17, a2 + v17, v9);
  v16(v18 + *(int *)(v11 + 20), v19 + *(int *)(v11 + 20), v15);
  v20 = v5[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v10(a1 + v20, a2 + v20, v9);
  v16(v21 + *(int *)(v11 + 20), v22 + *(int *)(v11 + 20), v15);
  v23 = v5[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_22ABDD7D8();
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v27(v24, v25, v26);
  v28 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v27(v24 + *(int *)(v28 + 24), v25 + *(int *)(v28 + 24), v26);
  *(_QWORD *)(v24 + *(int *)(v28 + 28)) = *(_QWORD *)(v25 + *(int *)(v28 + 28));
  v29 = v5[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v27(a1 + v29, a2 + v29, v26);
  v27(v30 + *(int *)(v28 + 24), v31 + *(int *)(v28 + 24), v26);
  *(_QWORD *)(v30 + *(int *)(v28 + 28)) = *(_QWORD *)(v31 + *(int *)(v28 + 28));
  v27(a1 + v5[11], a2 + v5[11], v26);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_QWORD *)(a1 + v5[13]) = *(_QWORD *)(a2 + v5[13]);
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t sub_22AAE0E38(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t AssociatedTypeWitness;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v47;

  v5 = a1[21];
  v6 = (_OWORD *)(v1 + v5);
  v7 = (_OWORD *)(v2 + v5);
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v6 = *v7;
    v10 = v8[12];
    v11 = (char *)v6 + v10;
    v12 = (char *)v7 + v10;
    v13 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    *(_DWORD *)((char *)v6 + v8[13]) = *(_DWORD *)((char *)v7 + v8[13]);
    *(_DWORD *)((char *)v6 + v8[14]) = *(_DWORD *)((char *)v7 + v8[14]);
    *(_QWORD *)((char *)v6 + v8[15]) = *(_QWORD *)((char *)v7 + v8[15]);
    v15 = v8[16];
    v16 = (char *)v6 + v15;
    v17 = (char *)v7 + v15;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v19(v16, v17, v18);
    v19((char *)v6 + v8[17], (char *)v7 + v8[17], v18);
    v20 = v8[18];
    v21 = (char *)v6 + v20;
    v22 = (char *)v7 + v20;
    if (__swift_getEnumTagSinglePayload((uint64_t)v7 + v20, 1, v18))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v19(v21, v22, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v18);
    }
    *(_DWORD *)((char *)v6 + v8[19]) = *(_DWORD *)((char *)v7 + v8[19]);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, (uint64_t)v8);
    v3 = v47;
  }
  v24 = a1[22];
  v25 = (_QWORD *)(v1 + v24);
  v26 = (_QWORD *)(v2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  *(_QWORD *)(v1 + a1[23]) = *(_QWORD *)(v2 + a1[23]);
  *(_QWORD *)(v1 + a1[24]) = *(_QWORD *)(v2 + a1[24]);
  *(_QWORD *)(v1 + a1[25]) = *(_QWORD *)(v2 + a1[25]);
  *(_QWORD *)(v1 + a1[26]) = *(_QWORD *)(v2 + a1[26]);
  *(_QWORD *)(v1 + a1[27]) = *(_QWORD *)(v2 + a1[27]);
  v28 = v3[26];
  *(_QWORD *)(v1 + v3[25]) = *(_QWORD *)(v2 + v3[25]);
  v29 = v1 + v28;
  v30 = v2 + v28;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v32(v29, v30, AssociatedTypeWitness);
  v33 = v3[27];
  v34 = v1 + v33;
  v35 = v2 + v33;
  v36 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  v37 = v3[28];
  v38 = v1 + v37;
  v39 = v2 + v37;
  v40 = sub_22ABDD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v41 = v3[29];
  v42 = v3[30];
  v43 = v1 + v41;
  v44 = v2 + v41;
  v45 = *(_QWORD *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *(_QWORD *)(v43 + 8) = v45;
  *(_OWORD *)(v43 + 16) = *(_OWORD *)(v44 + 16);
  *(_QWORD *)(v43 + 32) = *(_QWORD *)(v44 + 32);
  *(_QWORD *)(v1 + v42) = *(_QWORD *)(v2 + v42);
  sub_22ABDEAEC();
  return v1;
}

void sub_22AAE1184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for LSTMFCN(0);
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_22ABDD8A4();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v12 = *(int *)(v11 + 20);
  v13 = v7 + v12;
  v14 = v8 + v12;
  v15 = sub_22ABDDAE4();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v17 = v5[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v10(a1 + v17, a2 + v17, v9);
  v16(v18 + *(int *)(v11 + 20), v19 + *(int *)(v11 + 20), v15);
  v20 = v5[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v10(a1 + v20, a2 + v20, v9);
  v16(v21 + *(int *)(v11 + 20), v22 + *(int *)(v11 + 20), v15);
  v23 = v5[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_22ABDD7D8();
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24);
  v27(v24, v25, v26);
  v28 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v27(v24 + *(int *)(v28 + 24), v25 + *(int *)(v28 + 24), v26);
  *(_QWORD *)(v24 + *(int *)(v28 + 28)) = *(_QWORD *)(v25 + *(int *)(v28 + 28));
  v29 = v5[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v27(a1 + v29, a2 + v29, v26);
  v27(v30 + *(int *)(v28 + 24), v31 + *(int *)(v28 + 24), v26);
  *(_QWORD *)(v30 + *(int *)(v28 + 28)) = *(_QWORD *)(v31 + *(int *)(v28 + 28));
  v27(a1 + v5[11], a2 + v5[11], v26);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_QWORD *)(a1 + v5[13]) = *(_QWORD *)(a2 + v5[13]);
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t sub_22AAE1398(int *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__src, __int128 a13, __int128 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v40;
  char *v41;
  char *v42;
  int *v43;
  int EnumTagSinglePayload;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  int v76;
  size_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t AssociatedTypeWitness;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v98;
  uint64_t v99;
  int *v100;

  v40 = a1[21];
  v41 = (char *)(v36 + v40);
  v42 = (char *)(v37 + v40);
  v43 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, (uint64_t)v43);
  v45 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, (uint64_t)v43);
  if (!EnumTagSinglePayload)
  {
    if (v45)
    {
      sub_22A9AD754((uint64_t)v41, &qword_255B0F3D8);
      goto LABEL_7;
    }
    *(_DWORD *)v41 = *(_DWORD *)v42;
    *((_DWORD *)v41 + 1) = *((_DWORD *)v42 + 1);
    *((_DWORD *)v41 + 2) = *((_DWORD *)v42 + 2);
    *((_DWORD *)v41 + 3) = *((_DWORD *)v42 + 3);
    v52 = v43[12];
    v53 = &v41[v52];
    v54 = &v42[v52];
    v55 = sub_22ABDD5D4();
    v56 = __swift_getEnumTagSinglePayload((uint64_t)v53, 1, v55);
    v57 = __swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55);
    if (v56)
    {
      if (!v57)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
        __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
        goto LABEL_19;
      }
    }
    else
    {
      v67 = *(_QWORD *)(v55 - 8);
      if (!v57)
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 24))(v53, v54, v55);
LABEL_19:
        *(_DWORD *)&v41[v43[13]] = *(_DWORD *)&v42[v43[13]];
        *(_DWORD *)&v41[v43[14]] = *(_DWORD *)&v42[v43[14]];
        *(_QWORD *)&v41[v43[15]] = *(_QWORD *)&v42[v43[15]];
        v69 = v43[16];
        v70 = &v41[v69];
        v71 = &v42[v69];
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
        v98 = *(_QWORD *)(v72 - 8);
        v73 = *(void (**)(char *, char *, uint64_t))(v98 + 24);
        v73(v70, v71, v72);
        v73(&v41[v43[17]], &v42[v43[17]], v72);
        v74 = v43[18];
        v75 = &v42[v74];
        v99 = (uint64_t)&v41[v74];
        LODWORD(v71) = __swift_getEnumTagSinglePayload((uint64_t)&v41[v74], 1, v72);
        v76 = __swift_getEnumTagSinglePayload((uint64_t)v75, 1, v72);
        if ((_DWORD)v71)
        {
          if (!v76)
          {
            (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v99, v75, v72);
            __swift_storeEnumTagSinglePayload(v99, 0, 1, v72);
            goto LABEL_28;
          }
          v77 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_255B0F420) - 8) + 64);
          v78 = (void *)v99;
        }
        else
        {
          if (!v76)
          {
            v73((char *)v99, v75, v72);
            goto LABEL_28;
          }
          (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v99, v72);
          v77 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_255B0F420) - 8) + 64);
          v78 = (void *)v99;
        }
        memcpy(v78, v75, v77);
LABEL_28:
        *(_DWORD *)&v41[v43[19]] = *(_DWORD *)&v42[v43[19]];
LABEL_29:
        v38 = v100;
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v55);
    }
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_19;
  }
  if (!v45)
  {
    *(_DWORD *)v41 = *(_DWORD *)v42;
    *((_DWORD *)v41 + 1) = *((_DWORD *)v42 + 1);
    *((_DWORD *)v41 + 2) = *((_DWORD *)v42 + 2);
    *((_DWORD *)v41 + 3) = *((_DWORD *)v42 + 3);
    v46 = v43[12];
    v47 = &v41[v46];
    v48 = &v42[v46];
    v49 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
    }
    *(_DWORD *)&v41[v43[13]] = *(_DWORD *)&v42[v43[13]];
    *(_DWORD *)&v41[v43[14]] = *(_DWORD *)&v42[v43[14]];
    *(_QWORD *)&v41[v43[15]] = *(_QWORD *)&v42[v43[15]];
    v58 = v43[16];
    v59 = &v41[v58];
    v60 = &v42[v58];
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
    v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
    v62(v59, v60, v61);
    v62(&v41[v43[17]], &v42[v43[17]], v61);
    v63 = v43[18];
    v64 = &v41[v63];
    v65 = &v42[v63];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v42[v63], 1, v61))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v62(v64, v65, v61);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v61);
    }
    *(_DWORD *)&v41[v43[19]] = *(_DWORD *)&v42[v43[19]];
    __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, (uint64_t)v43);
    goto LABEL_29;
  }
LABEL_7:
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
  memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
LABEL_30:
  v79 = a1[22];
  v80 = v36 + v79;
  v81 = v37 + v79;
  *(_QWORD *)(v36 + v79) = *(_QWORD *)(v37 + v79);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v80 + 8) = *(_QWORD *)(v81 + 8);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + a1[23]) = *(_QWORD *)(v37 + a1[23]);
  *(_QWORD *)(v36 + a1[24]) = *(_QWORD *)(v37 + a1[24]);
  *(_QWORD *)(v36 + a1[25]) = *(_QWORD *)(v37 + a1[25]);
  *(_QWORD *)(v36 + a1[26]) = *(_QWORD *)(v37 + a1[26]);
  *(_QWORD *)(v36 + a1[27]) = *(_QWORD *)(v37 + a1[27]);
  *(_QWORD *)(v36 + v38[25]) = *(_QWORD *)(v37 + v38[25]);
  v82 = v38[26];
  v83 = v36 + v82;
  v84 = v37 + v82;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(v83, v84, AssociatedTypeWitness);
  v86 = v38[27];
  v87 = v36 + v86;
  v88 = v37 + v86;
  v89 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 24))(v87, v88, v89);
  v90 = v38[28];
  v91 = v36 + v90;
  v92 = v37 + v90;
  v93 = sub_22ABDD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 24))(v91, v92, v93);
  v94 = v38[29];
  v95 = (_QWORD *)(v36 + v94);
  v96 = (_QWORD *)(v37 + v94);
  *v95 = *(_QWORD *)(v37 + v94);
  v95[1] = *(_QWORD *)(v37 + v94 + 8);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v95[2] = v96[2];
  v95[3] = v96[3];
  v95[4] = v96[4];
  *(_QWORD *)(v36 + v38[30]) = *(_QWORD *)(v37 + v38[30]);
  return v36;
}

void sub_22AAE1998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for LSTMFCN(0);
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_22ABDD8A4();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v12 = *(int *)(v11 + 20);
  v13 = v7 + v12;
  v14 = v8 + v12;
  v15 = sub_22ABDDAE4();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v17 = v5[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v10(a1 + v17, a2 + v17, v9);
  v16(v18 + *(int *)(v11 + 20), v19 + *(int *)(v11 + 20), v15);
  v20 = v5[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v10(a1 + v20, a2 + v20, v9);
  v16(v21 + *(int *)(v11 + 20), v22 + *(int *)(v11 + 20), v15);
  v23 = v5[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_22ABDD7D8();
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  v28 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v27(v24 + *(int *)(v28 + 24), v25 + *(int *)(v28 + 24), v26);
  *(_QWORD *)(v24 + *(int *)(v28 + 28)) = *(_QWORD *)(v25 + *(int *)(v28 + 28));
  v29 = v5[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v27(a1 + v29, a2 + v29, v26);
  v27(v30 + *(int *)(v28 + 24), v31 + *(int *)(v28 + 24), v26);
  *(_QWORD *)(v30 + *(int *)(v28 + 28)) = *(_QWORD *)(v31 + *(int *)(v28 + 28));
  v27(a1 + v5[11], a2 + v5[11], v26);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_QWORD *)(a1 + v5[13]) = *(_QWORD *)(a2 + v5[13]);
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t sub_22AAE1BB0(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  char *v41;
  void (*v42)(char *, char *, uint64_t);

  v5 = a1[21];
  v6 = (_OWORD *)(v1 + v5);
  v7 = (_OWORD *)(v2 + v5);
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v6 = *v7;
    v10 = v8[12];
    v11 = (char *)v6 + v10;
    v12 = (char *)v7 + v10;
    v13 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    *(_DWORD *)((char *)v6 + v8[13]) = *(_DWORD *)((char *)v7 + v8[13]);
    *(_DWORD *)((char *)v6 + v8[14]) = *(_DWORD *)((char *)v7 + v8[14]);
    *(_QWORD *)((char *)v6 + v8[15]) = *(_QWORD *)((char *)v7 + v8[15]);
    v15 = v8[16];
    v41 = (char *)v6 + v15;
    v16 = (char *)v7 + v15;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
    v18(v41, v16, v17);
    v42 = v18;
    v18((char *)v6 + v8[17], (char *)v7 + v8[17], v17);
    v19 = v8[18];
    v20 = (char *)v6 + v19;
    v21 = (char *)v7 + v19;
    if (__swift_getEnumTagSinglePayload((uint64_t)v7 + v19, 1, v17))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v42(v20, v21, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v17);
    }
    *(_DWORD *)((char *)v6 + v8[19]) = *(_DWORD *)((char *)v7 + v8[19]);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, (uint64_t)v8);
  }
  *(_OWORD *)(v1 + a1[22]) = *(_OWORD *)(v2 + a1[22]);
  *(_QWORD *)(v1 + a1[23]) = *(_QWORD *)(v2 + a1[23]);
  *(_QWORD *)(v1 + a1[24]) = *(_QWORD *)(v2 + a1[24]);
  *(_QWORD *)(v1 + a1[25]) = *(_QWORD *)(v2 + a1[25]);
  *(_QWORD *)(v1 + a1[26]) = *(_QWORD *)(v2 + a1[26]);
  *(_QWORD *)(v1 + a1[27]) = *(_QWORD *)(v2 + a1[27]);
  v23 = v3[26];
  *(_QWORD *)(v1 + v3[25]) = *(_QWORD *)(v2 + v3[25]);
  v24 = v1 + v23;
  v25 = v2 + v23;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v24, v25, AssociatedTypeWitness);
  v27 = v3[27];
  v28 = v1 + v27;
  v29 = v2 + v27;
  v30 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = v3[28];
  v32 = v1 + v31;
  v33 = v2 + v31;
  v34 = sub_22ABDD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = v3[29];
  v36 = v3[30];
  v37 = v1 + v35;
  v38 = v2 + v35;
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
  *(_QWORD *)(v1 + v36) = *(_QWORD *)(v2 + v36);
  return v1;
}

void sub_22AAE1ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_22ABDD73C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for LSTMFCN(0);
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_22ABDD8A4();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = type metadata accessor for LSTMFCN.ConvolutionBlock(0);
  v12 = *(int *)(v11 + 20);
  v13 = v7 + v12;
  v14 = v8 + v12;
  v15 = sub_22ABDDAE4();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v17 = v5[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v10(a1 + v17, a2 + v17, v9);
  v16(v18 + *(int *)(v11 + 20), v19 + *(int *)(v11 + 20), v15);
  v20 = v5[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v10(a1 + v20, a2 + v20, v9);
  v16(v21 + *(int *)(v11 + 20), v22 + *(int *)(v11 + 20), v15);
  v23 = v5[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_22ABDD7D8();
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40);
  v27(v24, v25, v26);
  v28 = type metadata accessor for LSTMFCN.SqueezeExciteBlock(0);
  v27(v24 + *(int *)(v28 + 24), v25 + *(int *)(v28 + 24), v26);
  *(_QWORD *)(v24 + *(int *)(v28 + 28)) = *(_QWORD *)(v25 + *(int *)(v28 + 28));
  v29 = v5[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v27(a1 + v29, a2 + v29, v26);
  v27(v30 + *(int *)(v28 + 24), v31 + *(int *)(v28 + 24), v26);
  *(_QWORD *)(v30 + *(int *)(v28 + 28)) = *(_QWORD *)(v31 + *(int *)(v28 + 28));
  v27(a1 + v5[11], a2 + v5[11], v26);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_QWORD *)(a1 + v5[13]) = *(_QWORD *)(a2 + v5[13]);
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t sub_22AAE20E8(int *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__src, __int128 a13, __int128 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v40;
  char *v41;
  char *v42;
  int *v43;
  int EnumTagSinglePayload;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  int v76;
  size_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t AssociatedTypeWitness;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  int *v101;

  v40 = a1[21];
  v41 = (char *)(v36 + v40);
  v42 = (char *)(v37 + v40);
  v43 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, (uint64_t)v43);
  v45 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, (uint64_t)v43);
  if (!EnumTagSinglePayload)
  {
    if (v45)
    {
      sub_22A9AD754((uint64_t)v41, &qword_255B0F3D8);
      goto LABEL_7;
    }
    *(_OWORD *)v41 = *(_OWORD *)v42;
    v52 = v43[12];
    v53 = &v41[v52];
    v54 = &v42[v52];
    v55 = sub_22ABDD5D4();
    v56 = __swift_getEnumTagSinglePayload((uint64_t)v53, 1, v55);
    v57 = __swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55);
    if (v56)
    {
      if (!v57)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
        __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
        goto LABEL_19;
      }
    }
    else
    {
      v67 = *(_QWORD *)(v55 - 8);
      if (!v57)
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v53, v54, v55);
LABEL_19:
        *(_DWORD *)&v41[v43[13]] = *(_DWORD *)&v42[v43[13]];
        *(_DWORD *)&v41[v43[14]] = *(_DWORD *)&v42[v43[14]];
        *(_QWORD *)&v41[v43[15]] = *(_QWORD *)&v42[v43[15]];
        v69 = v43[16];
        v70 = &v41[v69];
        v71 = &v42[v69];
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
        v99 = *(_QWORD *)(v72 - 8);
        v73 = *(void (**)(char *, char *, uint64_t))(v99 + 40);
        v73(v70, v71, v72);
        v73(&v41[v43[17]], &v42[v43[17]], v72);
        v74 = v43[18];
        v75 = &v42[v74];
        v100 = (uint64_t)&v41[v74];
        LODWORD(v71) = __swift_getEnumTagSinglePayload((uint64_t)&v41[v74], 1, v72);
        v76 = __swift_getEnumTagSinglePayload((uint64_t)v75, 1, v72);
        if ((_DWORD)v71)
        {
          if (!v76)
          {
            (*(void (**)(uint64_t, char *, uint64_t))(v99 + 32))(v100, v75, v72);
            __swift_storeEnumTagSinglePayload(v100, 0, 1, v72);
            goto LABEL_28;
          }
          v77 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_255B0F420) - 8) + 64);
          v78 = (void *)v100;
        }
        else
        {
          if (!v76)
          {
            v73((char *)v100, v75, v72);
            goto LABEL_28;
          }
          (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v100, v72);
          v77 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_255B0F420) - 8) + 64);
          v78 = (void *)v100;
        }
        memcpy(v78, v75, v77);
LABEL_28:
        *(_DWORD *)&v41[v43[19]] = *(_DWORD *)&v42[v43[19]];
LABEL_29:
        v38 = v101;
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v55);
    }
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_19;
  }
  if (!v45)
  {
    *(_OWORD *)v41 = *(_OWORD *)v42;
    v46 = v43[12];
    v47 = &v41[v46];
    v48 = &v42[v46];
    v49 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
    }
    *(_DWORD *)&v41[v43[13]] = *(_DWORD *)&v42[v43[13]];
    *(_DWORD *)&v41[v43[14]] = *(_DWORD *)&v42[v43[14]];
    *(_QWORD *)&v41[v43[15]] = *(_QWORD *)&v42[v43[15]];
    v58 = v43[16];
    v59 = &v41[v58];
    v60 = &v42[v58];
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F418);
    v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32);
    v62(v59, v60, v61);
    v62(&v41[v43[17]], &v42[v43[17]], v61);
    v63 = v43[18];
    v64 = &v41[v63];
    v65 = &v42[v63];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v42[v63], 1, v61))
    {
      v66 = __swift_instantiateConcreteTypeFromMangledName(qword_255B0F420);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v62(v64, v65, v61);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v61);
    }
    *(_DWORD *)&v41[v43[19]] = *(_DWORD *)&v42[v43[19]];
    __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, (uint64_t)v43);
    goto LABEL_29;
  }
LABEL_7:
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3D0);
  memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
LABEL_30:
  v79 = a1[22];
  v80 = v36 + v79;
  v81 = v37 + v79;
  *(_QWORD *)(v36 + v79) = *(_QWORD *)(v37 + v79);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v80 + 8) = *(_QWORD *)(v81 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + a1[23]) = *(_QWORD *)(v37 + a1[23]);
  *(_QWORD *)(v36 + a1[24]) = *(_QWORD *)(v37 + a1[24]);
  *(_QWORD *)(v36 + a1[25]) = *(_QWORD *)(v37 + a1[25]);
  *(_QWORD *)(v36 + a1[26]) = *(_QWORD *)(v37 + a1[26]);
  *(_QWORD *)(v36 + a1[27]) = *(_QWORD *)(v37 + a1[27]);
  v82 = v38[26];
  *(_QWORD *)(v36 + v38[25]) = *(_QWORD *)(v37 + v38[25]);
  v83 = v36 + v82;
  v84 = v37 + v82;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v83, v84, AssociatedTypeWitness);
  v86 = v38[27];
  v87 = v36 + v86;
  v88 = v37 + v86;
  v89 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 40))(v87, v88, v89);
  v90 = v38[28];
  v91 = v36 + v90;
  v92 = v37 + v90;
  v93 = sub_22ABDD718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 40))(v91, v92, v93);
  v94 = v38[29];
  v95 = v36 + v94;
  v96 = v37 + v94;
  v97 = *(_QWORD *)(v37 + v94 + 8);
  *(_QWORD *)v95 = *(_QWORD *)(v37 + v94);
  *(_QWORD *)(v95 + 8) = v97;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v95 + 16) = *(_OWORD *)(v96 + 16);
  *(_QWORD *)(v95 + 32) = *(_QWORD *)(v96 + 32);
  *(_QWORD *)(v36 + v38[30]) = *(_QWORD *)(v37 + v38[30]);
  return v36;
}

uint64_t sub_22AAE268C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_22AAE2698()
{
  OUTLINED_FUNCTION_9_60();
}

uint64_t sub_22AAE2798()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22AAE27A4()
{
  OUTLINED_FUNCTION_9_60();
}

uint64_t OUTLINED_FUNCTION_3_77()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_4_64()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 464);
}

void OUTLINED_FUNCTION_9_60()
{
  type metadata accessor for TimeSeriesClassifier.Model();
}

uint64_t OUTLINED_FUNCTION_10_55()
{
  return sub_22ABDF188();
}

uint64_t OUTLINED_FUNCTION_14_54()
{
  return sub_22ABDE8A0();
}

uint64_t OUTLINED_FUNCTION_25_35()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_26_36()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_28_28()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v0, v2, v3);
}

void OUTLINED_FUNCTION_30_34()
{
  sub_22AADF488();
}

uint64_t OUTLINED_FUNCTION_32_25()
{
  return sub_22ABDD988();
}

uint64_t OUTLINED_FUNCTION_36_31()
{
  return sub_22ABDD988();
}

uint64_t OUTLINED_FUNCTION_38_33()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 144))();
}

uint64_t OUTLINED_FUNCTION_40_21()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t OUTLINED_FUNCTION_41_21()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_44_24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v0 + 176);
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_46_22()
{
  return sub_22ABDD718();
}

uint64_t TemporalAdaptor.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t TemporalAdaptor.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t TemporalAdaptor.base.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*TemporalAdaptor.base.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TemporalAdaptor.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v12 = *(_QWORD *)(a5 - 8);
  v8[10] = v12;
  v8[11] = *(_QWORD *)(v12 + 64);
  v8[12] = OUTLINED_FUNCTION_5_62();
  v8[13] = *(_QWORD *)(a6 - 8);
  v8[14] = OUTLINED_FUNCTION_5_62();
  v8[15] = *(_QWORD *)(a5 + 24);
  v8[16] = *(_QWORD *)(a5 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[17] = AssociatedTypeWitness;
  v8[18] = type metadata accessor for TemporalFeature(255, AssociatedTypeWitness, v14, v15);
  v8[19] = *(_QWORD *)(a7 + 8);
  v16 = sub_22ABDFDA0();
  v8[20] = v16;
  v8[21] = *(_QWORD *)(v16 - 8);
  v8[22] = OUTLINED_FUNCTION_38_0();
  v8[23] = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAE2B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = *(_QWORD *)(v0 + 168);
  v22 = *(_QWORD *)(v0 + 176);
  v23 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 184);
  v25 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  v19 = *(_QWORD *)(v0 + 40);
  v24 = *(_QWORD *)(v0 + 16);
  (*(void (**)(void))(*(_QWORD *)(v0 + 104) + 16))();
  OUTLINED_FUNCTION_38_8(v1, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v8 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v17;
  v10[3] = v6;
  v10[4] = v18;
  v10[5] = v5;
  OUTLINED_FUNCTION_38_8((uint64_t)v10 + v8, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  v11 = (_QWORD *)((char *)v10 + v9);
  *v11 = v7;
  v11[1] = v19;
  sub_22A9A9840(v7);
  sub_22ABDF20C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v22, v20, v23);
  v12 = (*(uint64_t (**)(uint64_t))(v5 + 24))(v6);
  v14 = v13 & 1;
  v15 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE7090], v23);
  AnyTemporalSequence.init<A>(_:count:)(v22, v12, v14, v25, v23, v15, v24);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAE2D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[12] = a6;
  v8[13] = a8;
  v8[10] = a4;
  v8[11] = a5;
  v8[8] = a2;
  v8[9] = a3;
  v8[7] = a1;
  v8[14] = swift_getAssociatedTypeWitness();
  v8[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22AAE2D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(uint64_t **)(v0 + 64);
  v3 = *v2;
  v4 = v2[1];
  *(_QWORD *)(v0 + 128) = v4;
  v5 = v2[4];
  v6 = *((_OWORD *)v2 + 1);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v4;
  *(_OWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 48) = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = (uint64_t)v2 + *(int *)(type metadata accessor for TemporalFeature(0, AssociatedTypeWitness, v8, v9) + 28);
  v13 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 24)
                                                                                + *(_QWORD *)(v1 + 24));
  sub_22ABDEAEC();
  v11 = (_QWORD *)OUTLINED_FUNCTION_38_0();
  *(_QWORD *)(v0 + 136) = v11;
  *v11 = v0;
  v11[1] = sub_22AAE2E68;
  return v13(*(_QWORD *)(v0 + 120), v10, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
}

uint64_t sub_22AAE2E68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAE2ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  TemporalFeature.init(id:feature:)(v4 + 16, *(_QWORD *)(v4 + 120), *(_QWORD *)(v4 + 112), a4, *(_QWORD *)(v4 + 56));
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_22AAE2F10()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAE2F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(type metadata accessor for TemporalAdaptor(0, v5, *(_QWORD *)(v4 + 32), a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v7, v5);
  if (*(_QWORD *)(v4 + v8))
    swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for TemporalAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TemporalAdaptor);
}

uint64_t sub_22AAE2FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = v4[2];
  v9 = v4[3];
  v10 = v4[4];
  v11 = *(_QWORD *)(type metadata accessor for TemporalAdaptor(0, v8, v10, a4) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (uint64_t)v4 + v12;
  v14 = (_QWORD *)((char *)v4 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  v15 = *v14;
  v16 = v14[1];
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v17;
  *v17 = v5;
  v17[1] = sub_22A9ABF58;
  return sub_22AAE2D18(a1, a2, v13, v15, v16, v8, v9, v10);
}

uint64_t sub_22AAE30A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9ABF58;
  return TemporalAdaptor.applied<A>(to:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t Transformer.adaptedAsTemporal()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_38_8((uint64_t)v5, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  return OUTLINED_FUNCTION_38_8(a2, (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
}

uint64_t sub_22AAE31B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 8))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22AAE31D4(uint64_t a1, uint64_t a2)
{
  return sub_22AAE31B8(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_22AAE31EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AAE329C + 4 * byte_22ABF87D0[(v8 - 1)]))();
}

void sub_22AAE32E8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t OUTLINED_FUNCTION_5_62()
{
  return swift_task_alloc();
}

void sub_22AAE349C(char *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  char v10;

  v3 = v1;
  v4 = a1[2];
  v10 = *a1;
  v5 = sub_22AAE3738(&v10);
  if (!v2)
  {
    v6 = (void *)v5;
    objc_msgSend(v3, sel_setSessionPreset_, **((_QWORD **)&unk_24F4C7260 + v4));
    objc_allocWithZone(MEMORY[0x24BDB2470]);
    v7 = v6;
    v8 = sub_22AAE3CB4(v7);
    if (objc_msgSend(v3, sel_canAddInput_, v8))
    {
      objc_msgSend(v3, sel_addInput_, v8);
    }
    else
    {
      type metadata accessor for VideoReaderError();
      sub_22AAE3DE0();
      OUTLINED_FUNCTION_53();
      v9 = swift_storeEnumTagMultiPayload();
      swift_willThrow(v9);
    }

  }
}

void sub_22AAE35B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  char v7;
  id v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  v7 = *(_BYTE *)(a1 + 1);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB2508]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10778);
  if ((v7 & 1) != 0)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(inited + 32) = sub_22ABDED50();
    *(_QWORD *)(inited + 40) = v10;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    v11 = 875704422;
  }
  else
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(inited + 32) = sub_22ABDED50();
    *(_QWORD *)(inited + 40) = v12;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    v11 = 1111970369;
  }
  *(_QWORD *)(inited + 48) = v11;
  v13 = sub_22ABDEAC8();
  sub_22AAE3D74(v13, v8);
  objc_msgSend(v8, sel_setAlwaysDiscardsLateVideoFrames_, 1);
  if (objc_msgSend(v4, sel_canAddOutput_, v8))
    objc_msgSend(v4, sel_addOutput_, v8);
  objc_msgSend(v8, sel_setSampleBufferDelegate_queue_, a2, a3);

}

uint64_t sub_22AAE3738(char *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t i;
  id v26;
  unint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t result;
  id v33;
  uint64_t v34;
  char v35;
  void *v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;

  v35 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16BD8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_22ABF8860;
  v2 = (void *)*MEMORY[0x24BDB1A58];
  v3 = (void *)*MEMORY[0x24BDB1A50];
  *(_QWORD *)(v1 + 32) = *MEMORY[0x24BDB1A58];
  *(_QWORD *)(v1 + 40) = v3;
  v4 = (void *)*MEMORY[0x24BDB1A30];
  v5 = (void *)*MEMORY[0x24BDB1A40];
  *(_QWORD *)(v1 + 48) = *MEMORY[0x24BDB1A30];
  *(_QWORD *)(v1 + 56) = v5;
  v6 = (void *)*MEMORY[0x24BDB1A20];
  v7 = (void *)*MEMORY[0x24BDB1A28];
  *(_QWORD *)(v1 + 64) = *MEMORY[0x24BDB1A20];
  *(_QWORD *)(v1 + 72) = v7;
  v8 = (void *)*MEMORY[0x24BDB1A60];
  v36 = (void *)*MEMORY[0x24BDB1A68];
  v9 = *MEMORY[0x24BDB1A68];
  *(_QWORD *)(v1 + 80) = *MEMORY[0x24BDB1A60];
  *(_QWORD *)(v1 + 88) = v9;
  v37 = (void *)*MEMORY[0x24BDB1A70];
  *(_QWORD *)(v1 + 96) = *MEMORY[0x24BDB1A70];
  sub_22A9BEDCC(0, &qword_255B16BE0);
  v10 = (void *)*MEMORY[0x24BDB1D50];
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v36;
  v19 = v37;
  v20 = v10;
  v21 = sub_22AAE3AEC(v1, v10, 0);
  v22 = objc_msgSend(v21, sel_devices);
  sub_22A9BEDCC(0, &qword_255B10238);
  v23 = sub_22ABDEFF0();

  v38 = MEMORY[0x24BEE4AF8];
  if (v23 >> 62)
  {
    sub_22ABDEAEC();
    v24 = sub_22ABDFB60();
    if (v24)
      goto LABEL_3;
LABEL_13:
    OUTLINED_FUNCTION_54();
    v27 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_22ABDEAEC();
  if (!v24)
    goto LABEL_13;
LABEL_3:
  if (v24 < 1)
  {
    __break(1u);
    goto LABEL_22;
  }
  for (i = 0; i != v24; ++i)
  {
    if ((v23 & 0xC000000000000001) != 0)
      MEMORY[0x22E2E3A9C](i, v23);
    else
      v26 = *(id *)(v23 + 8 * i + 32);
    MEMORY[0x22E2E3268]();
    if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_22ABDF050();
    sub_22ABDF0A4();
    sub_22ABDF014();
  }
  OUTLINED_FUNCTION_54();
  v27 = v38;
LABEL_14:
  OUTLINED_FUNCTION_54();
  v39 = v27;
  v28 = objc_msgSend((id)objc_opt_self(), sel_defaultDeviceWithMediaType_, v20);
  if (v28)
  {
    v20 = v28;
    if (!(v27 >> 62))
    {
      v29 = v28;
LABEL_17:
      sub_22A9E87F4(0, 0, (uint64_t)v20);

      v27 = v39;
      goto LABEL_18;
    }
LABEL_22:
    v33 = v20;
    sub_22ABDEAEC();
    v34 = sub_22ABDFB60();
    result = swift_bridgeObjectRelease();
    if (v34 < 0)
    {
      __break(1u);
      return result;
    }
    goto LABEL_17;
  }
LABEL_18:
  LOBYTE(v38) = v35;
  v30 = sub_22AAE3B78((unsigned __int8 *)&v38, v27);
  swift_bridgeObjectRelease();
  if (!v30)
  {
    type metadata accessor for VideoReaderError();
    sub_22AAE3DE0();
    OUTLINED_FUNCTION_53();
    v31 = swift_storeEnumTagMultiPayload();
    swift_willThrow(v31);
  }

  return (uint64_t)v30;
}

id sub_22AAE3AEC(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;

  type metadata accessor for DeviceType(0);
  v5 = (void *)sub_22ABDEFE4();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_discoverySessionWithDeviceTypes_mediaType_position_, v5, a2, a3);

  return v6;
}

id sub_22AAE3B78(unsigned __int8 *a1, unint64_t a2)
{
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;

  v3 = *a1;
  if (!(a2 >> 62))
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_22_21();
    if (v4)
      goto LABEL_3;
LABEL_20:
    OUTLINED_FUNCTION_23();
    return 0;
  }
LABEL_19:
  OUTLINED_FUNCTION_22_21();
  v4 = sub_22ABDFB60();
  if (!v4)
    goto LABEL_20;
LABEL_3:
  v5 = a2 & 0xC000000000000001;
  v6 = 4;
  do
  {
    if (v5)
      v7 = (id)MEMORY[0x22E2E3A9C](v6 - 4, a2);
    else
      v7 = *(id *)(a2 + 8 * v6);
    v8 = v7;
    v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    v10 = objc_msgSend(v7, sel_position);
    if (v10 == (id)1)
    {
      if (v3)
        goto LABEL_16;
    }
    else if (v10 == (id)2 && (v3 & 1) == 0)
    {
      goto LABEL_16;
    }

    ++v6;
  }
  while (v9 != v4);
  OUTLINED_FUNCTION_23();
  sub_22A9B8810(0, v5 == 0, a2);
  if (v5)
  {
    OUTLINED_FUNCTION_22_21();
    v8 = (void *)MEMORY[0x22E2E3A9C](0, a2);
LABEL_16:
    OUTLINED_FUNCTION_23();
    return v8;
  }
  return *(id *)(a2 + 32);
}

id sub_22AAE3CB4(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  v8[0] = 0;
  v3 = objc_msgSend(v1, sel_initWithDevice_error_, a1, v8);
  if (v3)
  {
    v4 = v8[0];
  }
  else
  {
    v5 = v8[0];
    sub_22ABDD004();

    swift_willThrow(v6);
  }

  return v3;
}

void sub_22AAE3D74(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)sub_22ABDEAA4();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setVideoSettings_, v3);

}

unint64_t sub_22AAE3DE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B11678;
  if (!qword_255B11678)
  {
    v1 = type metadata accessor for VideoReaderError();
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for VideoReaderError, v1);
    atomic_store(result, (unint64_t *)&qword_255B11678);
  }
  return result;
}

void sub_22AAE3E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  id v6;

  if (*(_QWORD *)(a3 + 16))
  {
    v4 = OUTLINED_FUNCTION_30_35();
    if ((v5 & 1) != 0)
      v6 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  }
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22AAE3E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_30_35();
    if ((v3 & 1) != 0)
      OUTLINED_FUNCTION_50_9();
  }
  return OUTLINED_FUNCTION_3_43();
}

void sub_22AAE3EA4(void *a1, uint64_t a2)
{
  sub_22AAE3ECC(a1, a2, &qword_255B16CC8);
}

void sub_22AAE3EB8(void *a1, uint64_t a2)
{
  sub_22AAE3ECC(a1, a2, &qword_255B16CC0);
}

void sub_22AAE3ECC(void *a1, uint64_t a2, unint64_t *a3)
{
  id v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v5 = a1;
    v6 = sub_22ABDFAB8();

    if (v6)
    {
      sub_22A9BEDCC(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
    }
  }
  else if (*(_QWORD *)(a2 + 16))
  {
    v7 = sub_22AA036C0((uint64_t)a1);
    if ((v8 & 1) != 0)
      v9 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v7);
  }
  OUTLINED_FUNCTION_1_18();
}

uint64_t sub_22AAE3FA0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 16) && (v4 = OUTLINED_FUNCTION_30_35(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v2 + 56);
    v8 = type metadata accessor for TensorDescription();
    sub_22AAE6E34(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, a2, (void (*)(_QWORD))type metadata accessor for TensorDescription);
    v9 = OUTLINED_FUNCTION_42();
  }
  else
  {
    type metadata accessor for TensorDescription();
    v9 = OUTLINED_FUNCTION_15();
  }
  return OUTLINED_FUNCTION_77_0(v9, v10, v11, v12);
}

uint64_t sub_22AAE4010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = OUTLINED_FUNCTION_30_35(), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  else
    return 0;
}

uint64_t sub_22AAE4050@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 16) && (v4 = OUTLINED_FUNCTION_30_35(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v2 + 56);
    v8 = sub_22ABDDE68();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, v8);
    v9 = OUTLINED_FUNCTION_42();
  }
  else
  {
    sub_22ABDDE68();
    v9 = OUTLINED_FUNCTION_15();
  }
  return OUTLINED_FUNCTION_77_0(v9, v10, v11, v12);
}

void sub_22AAE40C0(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a1 + 16) && (v4 = OUTLINED_FUNCTION_30_35(), (v5 & 1) != 0))
  {
    sub_22A9E7618(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)a2);
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
    OUTLINED_FUNCTION_0_5();
  }
}

uint64_t ColumnSelectorTransformer.init(transformers:columnMapping:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ColumnSelectorTransformer.transformers.getter()
{
  return sub_22ABDEAEC();
}

void ColumnSelectorTransformer.transformers.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_0_5();
}

uint64_t (*ColumnSelectorTransformer.transformers.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t ColumnSelectorTransformer.columnMapping.getter()
{
  return sub_22ABDEAEC();
}

void ColumnSelectorTransformer.columnMapping.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_0_5();
}

uint64_t (*ColumnSelectorTransformer.columnMapping.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t ColumnSelectorTransformer.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _OWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v6 + 72) = a3;
  *(_QWORD *)(v6 + 80) = a4;
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = a2;
  *(_QWORD *)(v6 + 88) = a5[4];
  v8 = a5[2];
  *(_QWORD *)(v6 + 96) = v8;
  *(_QWORD *)(v6 + 104) = swift_getAssociatedTypeWitness();
  v9 = sub_22ABDD3A0();
  *(_QWORD *)(v6 + 112) = v9;
  *(_QWORD *)(v6 + 120) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 128) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v6 + 136) = a5[3];
  v10 = sub_22ABDD3A0();
  *(_QWORD *)(v6 + 144) = v10;
  *(_QWORD *)(v6 + 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 160) = OUTLINED_FUNCTION_0_0();
  v11 = sub_22ABDD400();
  *(_QWORD *)(v6 + 168) = v11;
  *(_QWORD *)(v6 + 176) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 184) = swift_task_alloc();
  *(_QWORD *)(v6 + 192) = swift_task_alloc();
  *(_QWORD *)(v6 + 200) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 208) = OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v6 + 216) = swift_getTupleTypeMetadata2();
  v12 = sub_22ABDF5D8();
  *(_QWORD *)(v6 + 224) = v12;
  *(_QWORD *)(v6 + 232) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 240) = swift_task_alloc();
  *(_QWORD *)(v6 + 248) = swift_task_alloc();
  *(_OWORD *)(v6 + 256) = *v5;
  return swift_task_switch();
}

uint64_t sub_22AAE42F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 *v27;
  unint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = sub_22ABDD2EC();
  *(_QWORD *)(v0 + 272) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v0 + 280) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
  v7 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 352) = v7;
  v8 = -1;
  v9 = -1 << v7;
  if (-(-1 << v7) < 64)
    v8 = ~(-1 << -(char)v9);
  v10 = v8 & *(_QWORD *)(v2 + 64);
  OUTLINED_FUNCTION_50_9();
  if (v10)
  {
    v11 = 0;
    v12 = __clz(__rbit64(v10));
    v13 = (v10 - 1) & v10;
    v14 = *(_QWORD **)(v0 + 256);
LABEL_5:
    v2 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 216);
    v15 = *(_QWORD *)(v0 + 200);
    v16 = *(_QWORD *)(v0 + 96);
    v17 = (_QWORD *)(v14[6] + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)v2 = *v17;
    *(_QWORD *)(v2 + 8) = v18;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(v2 + *(int *)(v9 + 48), v14[7] + *(_QWORD *)(v15 + 72) * v12, v16);
    OUTLINED_FUNCTION_41_22();
    sub_22ABDEAEC();
    goto LABEL_12;
  }
  v19 = 63 - v9;
  if ((unint64_t)(63 - v9) <= 0x7F)
  {
    v11 = 0;
  }
  else
  {
    v14 = *(_QWORD **)(v0 + 256);
    v20 = v14[9];
    if (v20)
    {
      v11 = 1;
LABEL_9:
      v13 = (v20 - 1) & v20;
      v12 = __clz(__rbit64(v20)) + (v11 << 6);
      goto LABEL_5;
    }
    if (v19 < 0xC0)
    {
      v11 = 1;
    }
    else
    {
      v20 = v14[10];
      if (v20)
      {
        v11 = 2;
        goto LABEL_9;
      }
      if (v19 < 0x100)
      {
        v11 = 2;
      }
      else
      {
        v20 = v14[11];
        if (v20)
        {
          v11 = 3;
          goto LABEL_9;
        }
        v28 = v19 >> 6;
        v29 = 12;
        while (v29 - 8 < v28)
        {
          v20 = v14[v29++];
          if (v20)
          {
            v11 = v29 - 9;
            goto LABEL_9;
          }
        }
        v11 = v28 - 1;
      }
    }
  }
  OUTLINED_FUNCTION_32_26();
  v13 = 0;
LABEL_12:
  *(_QWORD *)(v0 + 288) = v11;
  *(_QWORD *)(v0 + 296) = v13;
  OUTLINED_FUNCTION_31_27();
  if (__swift_getEnumTagSinglePayload(v2, 1, v9) == 1)
  {
    OUTLINED_FUNCTION_22_44();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_6_80();
    sub_22ABDF1DC();
    *(_QWORD *)(v0 + 320) = OUTLINED_FUNCTION_62_15();
    if ((v22 & 1) != 0)
    {
      sub_22A9FA7DC();
      v23 = OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_53_22((__n128)xmmword_22ABF8870, v23, v24);
    }
    else
    {
      OUTLINED_FUNCTION_17_48();
      sub_22ABDD3E8();
      OUTLINED_FUNCTION_38_34();
      if (OUTLINED_FUNCTION_85_10())
      {
        OUTLINED_FUNCTION_27_37();
        *(_QWORD *)(v0 + 328) = swift_task_alloc();
        OUTLINED_FUNCTION_37_0();
      }
      OUTLINED_FUNCTION_9_61();
      sub_22ABDD3E8();
      OUTLINED_FUNCTION_57_14();
      *(_QWORD *)(v0 + 16) = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10BF8);
      OUTLINED_FUNCTION_94_6();
      *(_QWORD *)(v0 + 24) = OUTLINED_FUNCTION_36_32();
      swift_getMetatypeMetadata();
      OUTLINED_FUNCTION_93_6();
      OUTLINED_FUNCTION_72_13();
      v26 = OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_37_28((__n128)xmmword_22ABF8870, v26, v27);
    }
    OUTLINED_FUNCTION_71_13(v25);
    OUTLINED_FUNCTION_2_73();
    OUTLINED_FUNCTION_18_10();
    OUTLINED_FUNCTION_23_45();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    swift_task_dealloc();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_22AAE4624(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_65_16();
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_22AAE46A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  int64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 *v38;

  v1 = *(_QWORD *)(v0 + 264);
  OUTLINED_FUNCTION_50_9();
  v2 = OUTLINED_FUNCTION_3_43();
  sub_22AAE3E5C(v2, v3, v1);
  v5 = v4;
  swift_bridgeObjectRelease();
  if (!v5)
  {
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 336);
    sub_22ABDF0F8();
    OUTLINED_FUNCTION_37_0();
  }
  swift_bridgeObjectRelease();
  sub_22ABDD250();
  v6 = *(_QWORD *)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(char **)(v0 + 56);
  if ((v11 & 1) != 0)
  {
    v12 = v0 + 40;
    v14 = OUTLINED_FUNCTION_60_17(v6);
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v14);
    OUTLINED_FUNCTION_14_55();
    sub_22ABDD280();
  }
  else
  {
    v12 = v0 + 48;
    v13 = OUTLINED_FUNCTION_60_17(v6);
    OUTLINED_FUNCTION_22_21();
    MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v13);
    OUTLINED_FUNCTION_14_55();
    sub_22ABDD25C();
    OUTLINED_FUNCTION_23();
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  result = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 96));
  v16 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 288);
  v17 = *(_QWORD *)(v0 + 296);
  if (v17)
  {
    v19 = (v17 - 1) & v17;
    v20 = __clz(__rbit64(v17)) | (v18 << 6);
    v21 = *(_QWORD *)(v0 + 256);
LABEL_8:
    v10 = *(char **)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 216);
    v22 = *(_QWORD *)(v0 + 200);
    v23 = *(_QWORD *)(v0 + 96);
    v24 = (_QWORD *)(*(_QWORD *)(v21 + 48) + 16 * v20);
    v25 = v24[1];
    *(_QWORD *)v10 = *v24;
    *((_QWORD *)v10 + 1) = v25;
    (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(&v10[*(int *)(v5 + 48)], *(_QWORD *)(v21 + 56) + *(_QWORD *)(v22 + 72) * v20, v23);
    OUTLINED_FUNCTION_41_22();
    OUTLINED_FUNCTION_47_3();
    goto LABEL_24;
  }
  v26 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  v27 = (1 << *(_BYTE *)(v0 + 352)) + 63;
  if (v26 < (uint64_t)(v27 >> 6))
  {
    v21 = *(_QWORD *)(v0 + 256);
    v28 = v21 + 64;
    v29 = *(_QWORD *)(v21 + 64 + 8 * v26);
    if (v29)
    {
LABEL_12:
      v19 = (v29 - 1) & v29;
      v20 = __clz(__rbit64(v29)) + (v26 << 6);
      v18 = v26;
      goto LABEL_8;
    }
    v30 = v27 >> 6;
    v31 = v18 + 2;
    ++v18;
    if (v26 + 1 < v30)
    {
      v29 = *(_QWORD *)(v28 + 8 * v31);
      if (v29)
      {
        ++v26;
        goto LABEL_12;
      }
      v32 = v26 + 2;
      v18 = v26 + 1;
      if (v26 + 2 < v30)
      {
        v29 = *(_QWORD *)(v28 + 8 * v32);
        if (v29)
        {
          v26 += 2;
          goto LABEL_12;
        }
        while (1)
        {
          v26 = v32 + 1;
          if (__OFADD__(v32, 1))
            break;
          if (v26 >= v30)
          {
            v18 = v30 - 1;
            goto LABEL_23;
          }
          v29 = *(_QWORD *)(v28 + 8 * v26);
          ++v32;
          if (v29)
            goto LABEL_12;
        }
LABEL_37:
        __break(1u);
        return result;
      }
    }
  }
LABEL_23:
  OUTLINED_FUNCTION_32_26();
  v19 = 0;
LABEL_24:
  *(_QWORD *)(v0 + 288) = v18;
  *(_QWORD *)(v0 + 296) = v19;
  OUTLINED_FUNCTION_31_27();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v5) == 1)
  {
    OUTLINED_FUNCTION_22_44();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_6_80();
    sub_22ABDF1DC();
    if (v16)
    {
      OUTLINED_FUNCTION_23();
    }
    else
    {
      *(_QWORD *)(v0 + 320) = OUTLINED_FUNCTION_62_15();
      if ((v33 & 1) != 0)
      {
        sub_22A9FA7DC();
        v34 = OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_53_22((__n128)xmmword_22ABF8870, v34, v35);
      }
      else
      {
        OUTLINED_FUNCTION_17_48();
        sub_22ABDD3E8();
        OUTLINED_FUNCTION_38_34();
        if (OUTLINED_FUNCTION_85_10())
        {
          OUTLINED_FUNCTION_27_37();
          *(_QWORD *)(v0 + 328) = swift_task_alloc();
          OUTLINED_FUNCTION_37_0();
        }
        OUTLINED_FUNCTION_9_61();
        sub_22ABDD3E8();
        OUTLINED_FUNCTION_57_14();
        *(_QWORD *)(v0 + 16) = v12;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B10BF8);
        OUTLINED_FUNCTION_94_6();
        *(_QWORD *)(v0 + 24) = OUTLINED_FUNCTION_36_32();
        swift_getMetatypeMetadata();
        OUTLINED_FUNCTION_93_6();
        OUTLINED_FUNCTION_72_13();
        v37 = OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_37_28((__n128)xmmword_22ABF8870, v37, v38);
      }
      OUTLINED_FUNCTION_71_13(v36);
    }
    OUTLINED_FUNCTION_2_73();
    OUTLINED_FUNCTION_18_10();
    OUTLINED_FUNCTION_23_45();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    swift_task_dealloc();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_22AAE4AFC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 96));
  OUTLINED_FUNCTION_18_10();
  OUTLINED_FUNCTION_23_45();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAE4BB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x726F66736E617274 && a2 == 0xEC0000007372656DLL;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614D6E6D756C6F63 && a2 == 0xED0000676E697070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AAE4CD8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x614D6E6D756C6F63;
  else
    return 0x726F66736E617274;
}

uint64_t sub_22AAE4D24()
{
  char *v0;

  return sub_22AAE4CD8(*v0);
}

uint64_t sub_22AAE4D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AAE4BB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AAE4D68(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF8AA0, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AAE4D9C(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF8AA0, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22AAE4DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A99DE80;
  return ColumnSelectorTransformer.applied(to:eventHandler:)(a1, a2, a3, a4, a5);
}

uint64_t ColumnSelectorTransformer.debugDescription.getter()
{
  uint64_t v0;

  sub_22ABDF7A0();
  sub_22ABDEDC8();
  v0 = sub_22ABDEB28();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE04F0], v0);
  sub_22ABDFF38();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_22_21();
  sub_22ABDEABC();
  sub_22ABDEDC8();
  OUTLINED_FUNCTION_23();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  return 0;
}

void ColumnSelectorTransformer<>.encode(to:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for ColumnSelectorTransformer.CodingKeys(255, a2[2], a2[3], a2[4]);
  MEMORY[0x22E2E4D80](&unk_22ABF8AA0, v3);
  v4 = sub_22ABDFD58();
  MEMORY[0x24BDAC7A8](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  sub_22ABDEB28();
  OUTLINED_FUNCTION_70_11();
}

void sub_22AAE5090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_34_33();
  v2 = *(_QWORD *)(v1 - 112);
  sub_22ABDFD4C();
  if (v2)
  {
    v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 128) + 8);
  }
  else
  {
    v4 = *(_QWORD *)(v1 - 128);
    *(_QWORD *)(v1 - 72) = *(_QWORD *)(v1 - 144);
    *(_BYTE *)(v1 - 81) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B16BF0);
    sub_22AAE5328(&qword_255B16BF8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    OUTLINED_FUNCTION_34_33();
    sub_22ABDFD4C();
    v3 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  }
  OUTLINED_FUNCTION_35_6(v0, v3);
  OUTLINED_FUNCTION_16();
}

uint64_t type metadata accessor for ColumnSelectorTransformer.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ColumnSelectorTransformer.CodingKeys);
}

void ColumnSelectorTransformer<>.init(from:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for ColumnSelectorTransformer.CodingKeys(255, a2, a3, a4);
  MEMORY[0x22E2E4D80](&unk_22ABF8AA0, v6);
  v7 = sub_22ABDFCB0();
  MEMORY[0x24BDAC7A8](v7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE0298();
  if (!v4)
  {
    sub_22ABDEB28();
    OUTLINED_FUNCTION_70_11();
  }
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_16();
}

void sub_22AAE5328(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD v7[2];

  if (!*a1)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B16BF0);
    v7[0] = a2;
    v7[1] = a2;
    atomic_store(MEMORY[0x22E2E4D80](a3, v6, v7), a1);
  }
  OUTLINED_FUNCTION_1_18();
}

void sub_22AAE537C(_QWORD *a1, uint64_t *a2)
{
  ColumnSelectorTransformer<>.init(from:)(a1, a2[2], a2[3], a2[4]);
}

void sub_22AAE53A0(_QWORD *a1, uint64_t *a2)
{
  ColumnSelectorTransformer<>.encode(to:)(a1, a2);
}

void sub_22AAE53B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  _QWORD *v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  _QWORD *v102;
  BOOL v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t *, _QWORD);
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  unint64_t v134;
  void (*v135)(uint64_t, unint64_t, uint64_t);
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  void (*v168)(uint64_t, unint64_t, uint64_t);
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  char *v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  char *v182;
  BOOL v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  char v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  uint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  int64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t *v248;
  char *v249;
  uint64_t v250;
  uint64_t TupleTypeMetadata2;
  uint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  unint64_t v259;
  uint64_t v260;
  void (*v261)(uint64_t, uint64_t);
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  void (*v271)(uint64_t, unint64_t, uint64_t);
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  unint64_t v280;
  void (*v281)(unint64_t, uint64_t);
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  void (*v285)(uint64_t, unint64_t, uint64_t);
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  _QWORD v290[3];
  _QWORD v291[2];
  _QWORD v292[3];
  _QWORD v293[3];
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;

  v247 = a2;
  v240 = a3;
  v5 = sub_22ABDE3D8();
  OUTLINED_FUNCTION_40_1(v5, (uint64_t)&v267);
  OUTLINED_FUNCTION_4_2(v6);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  v239 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16CB0);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v10);
  v11 = sub_22ABDDE68();
  OUTLINED_FUNCTION_40_1(v11, (uint64_t)v293);
  OUTLINED_FUNCTION_4_2(v12);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v14);
  v15 = sub_22ABDE798();
  OUTLINED_FUNCTION_40_1(v15, (uint64_t)v291);
  OUTLINED_FUNCTION_4_2(v16);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_16_6((uint64_t)&v233 - v19);
  v20 = sub_22ABDE324();
  OUTLINED_FUNCTION_4_2(*(_QWORD *)(v20 - 8));
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v233 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v233 - v27;
  v29 = type metadata accessor for CoreMLPackage();
  OUTLINED_FUNCTION_40_1(v29, (uint64_t)&v270);
  OUTLINED_FUNCTION_4_2(v30);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v233 - v36;
  v38 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_4_2(*(_QWORD *)(v38 - 8));
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_0();
  v255 = v40;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v41 = sub_22ABDF5D8();
  OUTLINED_FUNCTION_40_1(v41, (uint64_t)&v282);
  OUTLINED_FUNCTION_4_2(v42);
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v44);
  v248 = (uint64_t *)((char *)&v233 - v45);
  v46 = *v3;
  v256 = v3[1];
  v286 = sub_22ABDEAEC();
  v47 = sub_22ABDEAE0();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE0310], v47);
  v48 = v269;
  OUTLINED_FUNCTION_49_18();
  v49 = (uint64_t)v28;
  v50 = v267;
  v295 = sub_22ABDF2E4();
  v51 = *(_QWORD *)(v46 + 64);
  v243 = v46 + 64;
  v52 = 1 << *(_BYTE *)(v46 + 32);
  if (v52 < 64)
    v53 = ~(-1 << v52);
  else
    v53 = -1;
  v54 = v53 & v51;
  LODWORD(v277) = *MEMORY[0x24BE632C8];
  v244 = (unint64_t)(v52 + 63) >> 6;
  v233 = v244 - 1;
  v252 = v46;
  sub_22ABDEAEC();
  v55 = 0;
  v56 = MEMORY[0x24BEE4AF8];
  v273 = v20;
  v258 = v23;
  v276 = v49;
  v265 = v37;
  v245 = v38;
  while (1)
  {
    v284 = v56;
    if (v54)
    {
      v260 = v47;
      v253 = (v54 - 1) & v54;
      v254 = v55;
      v57 = __clz(__rbit64(v54)) | (v55 << 6);
LABEL_7:
      v58 = *(_QWORD *)(v252 + 56);
      v59 = (_QWORD *)(*(_QWORD *)(v252 + 48) + 16 * v57);
      v60 = v59[1];
      v61 = v249;
      *(_QWORD *)v249 = *v59;
      *((_QWORD *)v61 + 1) = v60;
      v62 = TupleTypeMetadata2;
      (*(void (**)(char *, unint64_t, uint64_t))(v259 + 16))(&v61[*(int *)(TupleTypeMetadata2 + 48)], v58 + *(_QWORD *)(v259 + 72) * v57, v38);
      OUTLINED_FUNCTION_4_6((uint64_t)v61, 0);
      OUTLINED_FUNCTION_22_21();
      v48 = v269;
      goto LABEL_14;
    }
    v63 = v55 + 1;
    if (__OFADD__(v55, 1))
      goto LABEL_182;
    if (v63 >= v244)
    {
      v260 = v47;
      v254 = v55;
    }
    else
    {
      v64 = *(_QWORD *)(v243 + 8 * v63);
      if (v64)
        goto LABEL_11;
      v111 = v55 + 2;
      if (v55 + 2 >= v244)
      {
        v260 = v47;
      }
      else
      {
        v64 = *(_QWORD *)(v243 + 8 * v111);
        if (v64)
        {
          v63 = v55 + 2;
LABEL_11:
          v260 = v47;
          v253 = (v64 - 1) & v64;
          v57 = __clz(__rbit64(v64)) + (v63 << 6);
          v254 = v63;
          goto LABEL_7;
        }
        v112 = v55 + 3;
        if (v112 >= v244)
        {
          v260 = v47;
          v254 = v111;
          goto LABEL_13;
        }
        v64 = *(_QWORD *)(v243 + 8 * v112);
        if (v64)
        {
          v63 = v112;
          goto LABEL_11;
        }
        while (1)
        {
          v63 = v112 + 1;
          if (__OFADD__(v112, 1))
            goto LABEL_196;
          if (v63 >= v244)
            break;
          v64 = *(_QWORD *)(v243 + 8 * v63);
          ++v112;
          if (v64)
            goto LABEL_11;
        }
        v260 = v47;
        v63 = v233;
      }
      v254 = v63;
    }
LABEL_13:
    v62 = TupleTypeMetadata2;
    OUTLINED_FUNCTION_4_6((uint64_t)v249, 1);
    v253 = 0;
LABEL_14:
    v65 = v248;
    (*(void (**)(void))(v250 + 32))();
    if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v62) == 1)
    {
      OUTLINED_FUNCTION_39_28();
      OUTLINED_FUNCTION_20_45();
      if (*(_QWORD *)(v62 + 16) == 1)
      {
        v118 = v236;
        sub_22AB4EDF4(v62, v236);
        if (__swift_getEnumTagSinglePayload(v118, 1, v241) == 1)
          goto LABEL_198;
        sub_22AAE6E70(v118, v240);
LABEL_135:
        v207 = v62;
        v208 = *(_QWORD *)(v62 + 16);
        if (v208)
        {
          OUTLINED_FUNCTION_8_59();
          v209 = MEMORY[0x24BEE4AF8];
          do
          {
            OUTLINED_FUNCTION_59_16((uint64_t)v37, (uint64_t)&v276);
            v210 = v20;
            sub_22ABDE2B8();
            OUTLINED_FUNCTION_79_11();
            v20 = *(_QWORD *)(v20 + 16);
            v211 = *(_QWORD *)(v209 + 16);
            if (__OFADD__(v211, v20))
              goto LABEL_178;
            if (!swift_isUniquelyReferenced_nonNull_native() || v211 + v20 > *(_QWORD *)(v209 + 24) >> 1)
            {
              OUTLINED_FUNCTION_33_32();
              v209 = v212;
            }
            if (*(_QWORD *)(v210 + 16))
            {
              OUTLINED_FUNCTION_55_17();
              if (v189 != v104)
                goto LABEL_183;
              v214 = OUTLINED_FUNCTION_3_78(v213);
              if (!v183 && v214 < v215)
                goto LABEL_199;
              OUTLINED_FUNCTION_64_12();
              if (v20)
              {
                v217 = *(_QWORD *)(v209 + 16);
                v104 = __OFADD__(v217, v20);
                v218 = v217 + v20;
                if (v104)
                  goto LABEL_186;
                *(_QWORD *)(v209 + 16) = v218;
              }
            }
            else if (v20)
            {
              goto LABEL_179;
            }
            OUTLINED_FUNCTION_3_8();
            v37 += v50;
            --v208;
          }
          while (v208);
          v219 = v284;
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_49_18();
        }
        else
        {
          v219 = v207;
        }
        OUTLINED_FUNCTION_68_13();
        sub_22ABDE2C4();
        v220 = *(_QWORD *)(v219 + 16);
        if (v220)
        {
          OUTLINED_FUNCTION_8_59();
          v221 = MEMORY[0x24BEE4AF8];
          do
          {
            OUTLINED_FUNCTION_59_16(v219, (uint64_t)&v274);
            v222 = v20;
            sub_22ABDE2F4();
            OUTLINED_FUNCTION_79_11();
            v20 = *(_QWORD *)(v20 + 16);
            v223 = *(_QWORD *)(v221 + 16);
            if (__OFADD__(v223, v20))
              goto LABEL_180;
            if (!swift_isUniquelyReferenced_nonNull_native() || v223 + v20 > *(_QWORD *)(v221 + 24) >> 1)
            {
              OUTLINED_FUNCTION_33_32();
              v221 = v224;
            }
            if (*(_QWORD *)(v222 + 16))
            {
              OUTLINED_FUNCTION_55_17();
              if (v189 != v104)
                goto LABEL_184;
              v226 = OUTLINED_FUNCTION_3_78(v225);
              if (!v183 && v226 < v227)
                goto LABEL_199;
              OUTLINED_FUNCTION_64_12();
              if (v20)
              {
                v229 = *(_QWORD *)(v221 + 16);
                v104 = __OFADD__(v229, v20);
                v230 = v229 + v20;
                if (v104)
                  goto LABEL_187;
                *(_QWORD *)(v221 + 16) = v230;
              }
            }
            else if (v20)
            {
              goto LABEL_181;
            }
            OUTLINED_FUNCTION_3_8();
            v219 += v50;
            --v220;
          }
          while (v220);
          swift_bridgeObjectRelease_n();
          OUTLINED_FUNCTION_49_18();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        OUTLINED_FUNCTION_8_28();
        OUTLINED_FUNCTION_68_13();
        sub_22ABDE300();
        sub_22ABDE210();
        sub_22AB32B4C();
        v232 = v231;
        OUTLINED_FUNCTION_23();
        sub_22A9F4EC4(v232);
        OUTLINED_FUNCTION_54();
        sub_22ABDE258();
        goto LABEL_78;
      }
      v50 = v235;
      sub_22ABDE318();
      v119 = v239;
      sub_22ABDE3CC();
      v120 = v241;
      v121 = v240;
      v122 = v240 + *(int *)(v241 + 24);
      v285 = *(void (**)(uint64_t, unint64_t, uint64_t))(v283 + 16);
      v285(v240, v50, v20);
      *(_OWORD *)v122 = 0u;
      *(_OWORD *)(v122 + 16) = 0u;
      *(_OWORD *)(v122 + 32) = 0u;
      *(_OWORD *)(v122 + 48) = 0u;
      *(_OWORD *)(v122 + 64) = 0u;
      v279 = (_QWORD *)v122;
      *(_QWORD *)(v122 + 80) = 0;
      v123 = v237;
      v124 = v121 + *(int *)(v120 + 20);
      v125 = v238;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 16))(v124, v119, v238);
      v126 = sub_22AB319E4();
      v128 = v127;
      v129 = (void (*)(uint64_t *, _QWORD))sub_22ABDE360();
      sub_22AB61400(v126, v128, 0xD00000000000001ALL, 0x800000022ABE1380);
      v129(&v286, 0);
      OUTLINED_FUNCTION_35_6(v239, *(uint64_t (**)(uint64_t, uint64_t))(v123 + 8));
      v281 = *(void (**)(unint64_t, uint64_t))(v283 + 8);
      v281(v50, v273);
      v20 = *(_QWORD *)(v62 + 16);
      if (!v20)
      {
        v37 = (char *)MEMORY[0x24BEE4AF8];
        v205 = v282;
LABEL_134:
        v206 = v234;
        sub_22ABDDEEC();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v205 + 104))(v206, *MEMORY[0x24BE632D0], v269);
        OUTLINED_FUNCTION_68_13();
        sub_22ABDE288();
        OUTLINED_FUNCTION_49_18();
        goto LABEL_135;
      }
      v262 = v62 + ((*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80));
      sub_22ABDEAEC();
      v130 = 0;
      v50 = 0;
      v37 = (char *)MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_50_25();
      *(_QWORD *)(v131 - 256) = v20;
      while (1)
      {
        if (v50 >= *(_QWORD *)(v62 + 16))
          goto LABEL_185;
        v280 = v130;
        sub_22AAE6E34(v262 + *(_QWORD *)(v266 + 72) * v50, v123, (void (*)(_QWORD))type metadata accessor for CoreMLPackage);
        v130 = v123;
        v132 = (uint64_t *)(v123 + *(int *)(v125 + 24));
        v133 = *v132;
        v134 = v132[1];
        v136 = v132[2];
        v135 = (void (*)(uint64_t, unint64_t, uint64_t))v132[3];
        v138 = v132[4];
        v137 = v132[5];
        v139 = v132[6];
        v140 = v132[7];
        v141 = v132[8];
        v142 = v132[10];
        if (!v279[10])
          break;
        if (!v142)
          goto LABEL_112;
        v290[0] = *v132;
        v290[1] = v134;
        v270 = v136;
        v290[2] = v136;
        v271 = v135;
        v291[0] = v135;
        v291[1] = v138;
        v277 = v138;
        v278 = v137;
        v292[0] = v137;
        v292[1] = v139;
        v292[2] = v140;
        v293[0] = v141;
        OUTLINED_FUNCTION_82_11();
        v293[1] = v143;
        v293[2] = v142;
        v265 = (char *)v144;
        v267 = v145;
        sub_22A9D14F0(v144, v145);
        v264 = v142;
        OUTLINED_FUNCTION_50_9();
        v146 = v279;
        v147 = sub_22AB5E808((uint64_t)v290);
        v104 = __OFADD__(v280, v147);
        v280 += v147;
        if (v104)
          goto LABEL_188;
        v272 = v139;
        v148 = OUTLINED_FUNCTION_69_13();
        v130 = v148;
        v62 = *(_QWORD *)(v148 + 16);
        if (v62)
        {
          v263 = v140;
          v259 = v50;
          v149 = (*(unsigned __int8 *)(v283 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v283 + 80);
          v256 = v148;
          v123 = v148 + v149;
          v150 = *(_QWORD *)(v283 + 72);
          OUTLINED_FUNCTION_95_5();
          do
          {
            OUTLINED_FUNCTION_7_6((uint64_t)&v296);
            sub_22ABBA8F4();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_16_51();
              v37 = v161;
            }
            v151 = *((_QWORD *)v37 + 2);
            if (v151 >= *((_QWORD *)v37 + 3) >> 1)
            {
              OUTLINED_FUNCTION_16_51();
              v37 = v162;
            }
            *((_QWORD *)v37 + 2) = v151 + 1;
            (*(void (**)(char *, char *, uint64_t))(v283 + 32))(&v37[v149 + v151 * v150], v258, v273);
            v125 = v257;
            v152 = OUTLINED_FUNCTION_3_43();
            v153 = ((uint64_t (*)(uint64_t))v281)(v152);
            v123 += v150;
            --v62;
          }
          while (v62);
          OUTLINED_FUNCTION_0_69(v153, v154, v155, v156, v157, v158, v159, v160, v233, v234, v235);
          OUTLINED_FUNCTION_1_58();
          OUTLINED_FUNCTION_20_45();
          OUTLINED_FUNCTION_50_25();
          v20 = *(_QWORD *)(v196 - 256);
          v50 = v259;
        }
        else
        {
          sub_22AA93D10((uint64_t)v265, v267, v270, (uint64_t)v271, v277, v278, v272, v140, v276, v275, v264);
          OUTLINED_FUNCTION_51_1();
          OUTLINED_FUNCTION_20_45();
          v20 = (uint64_t)v261;
          v123 = (uint64_t)v146;
          OUTLINED_FUNCTION_95_5();
        }
LABEL_131:
        ++v50;
        sub_22AA3A8DC(v123);
        v205 = v282;
        if (v50 == v20)
        {
          swift_bridgeObjectRelease();
          goto LABEL_134;
        }
      }
      if (v142)
      {
        v259 = v50;
        v163 = v279;
        v164 = *v279;
        v271 = (void (*)(uint64_t, unint64_t, uint64_t))v279[1];
        v270 = v279[2];
        v267 = v279[3];
        v265 = (char *)v279[4];
        v263 = v140;
        v264 = v279[5];
        v256 = v279[6];
        v272 = v139;
        v255 = v279[7];
        v254 = v279[8];
        v253 = v279[9];
        v165 = v133;
        v166 = v142;
        v167 = v134;
        v278 = v137;
        v277 = v138;
        v168 = v135;
        v169 = v136;
        OUTLINED_FUNCTION_82_11();
        sub_22A9D14F0(v170, v171);
        OUTLINED_FUNCTION_124_1();
        sub_22A9D14F0(v165, v167);
        OUTLINED_FUNCTION_124_1();
        v172 = v164;
        v130 = v242;
        sub_22AA93D10(v172, (unint64_t)v271, v270, v267, (uint64_t)v265, v264, v256, v255, v254, v253, 0);
        v265 = (char *)v165;
        *v163 = v165;
        v163[1] = v167;
        v267 = v167;
        v270 = v169;
        v163[2] = v169;
        v163[3] = (uint64_t)v168;
        v271 = v168;
        v173 = v278;
        v163[4] = v277;
        v163[5] = v173;
        v174 = v263;
        v163[6] = v272;
        v163[7] = v174;
        v175 = v275;
        v163[8] = v276;
        v163[9] = v175;
        v264 = v166;
        v163[10] = v166;
        v123 = v130;
        v62 = *(_QWORD *)(OUTLINED_FUNCTION_69_13() + 16);
        v176 = *((_QWORD *)v37 + 2);
        if (__OFADD__(v176, v62))
          goto LABEL_191;
        OUTLINED_FUNCTION_80_14();
        OUTLINED_FUNCTION_95_5();
        if (!v177 || v176 + v62 > *((_QWORD *)v37 + 3) >> 1)
        {
          OUTLINED_FUNCTION_16_51();
          v37 = v178;
        }
        v20 = (uint64_t)v261;
        v50 = v259;
        v125 = v241;
        if (*(_QWORD *)(v167 + 16))
        {
          v179 = *((_QWORD *)v37 + 2);
          if ((*((_QWORD *)v37 + 3) >> 1) - v179 < v62)
            goto LABEL_194;
          v180 = (*(unsigned __int8 *)(v283 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v283 + 80);
          v181 = *(_QWORD *)(v283 + 72);
          v182 = &v37[v180 + v181 * v179];
          v183 = v167 + v180 >= (unint64_t)&v182[v181 * v62]
              || (unint64_t)v182 >= v167 + v180 + v181 * v62;
          if (!v183)
            goto LABEL_199;
          swift_arrayInitWithCopy();
          if (v62)
          {
            v184 = *((_QWORD *)v37 + 2);
            v104 = __OFADD__(v184, v62);
            v185 = v184 + v62;
            if (v104)
              goto LABEL_197;
            *((_QWORD *)v37 + 2) = v185;
          }
        }
        else if (v62)
        {
          goto LABEL_193;
        }
        v197 = OUTLINED_FUNCTION_3_8();
        OUTLINED_FUNCTION_0_69(v197, v198, v199, v200, v201, v202, v203, v204, v233, v234, v235);
        OUTLINED_FUNCTION_20_45();
        goto LABEL_131;
      }
LABEL_112:
      v186 = *(_QWORD *)(OUTLINED_FUNCTION_69_13() + 16);
      v62 = *((_QWORD *)v37 + 2);
      if (__OFADD__(v62, v186))
        goto LABEL_189;
      if (!OUTLINED_FUNCTION_80_14() || v62 + v186 > *((_QWORD *)v37 + 3) >> 1)
      {
        OUTLINED_FUNCTION_16_51();
        v37 = v187;
      }
      OUTLINED_FUNCTION_20_45();
      OUTLINED_FUNCTION_95_5();
      if (*(_QWORD *)(v142 + 16))
      {
        OUTLINED_FUNCTION_55_17();
        if (v189 != v104)
          goto LABEL_192;
        v190 = OUTLINED_FUNCTION_3_78(v188);
        if (!v183 && v190 < v191)
          goto LABEL_199;
        v123 = v192;
        swift_arrayInitWithCopy();
        if (v186)
        {
          v194 = *((_QWORD *)v37 + 2);
          v104 = __OFADD__(v194, v186);
          v195 = v194 + v186;
          if (v104)
            goto LABEL_195;
          *((_QWORD *)v37 + 2) = v195;
        }
      }
      else
      {
        v123 = v242;
        if (v186)
          goto LABEL_190;
      }
      OUTLINED_FUNCTION_3_8();
      v20 = (uint64_t)v261;
      goto LABEL_131;
    }
    v263 = *v65;
    v264 = v65[1];
    (*(void (**)(uint64_t, char *, uint64_t))(v259 + 32))(v255, (char *)v65 + *(int *)(v62 + 48), v38);
    v66 = v260;
    (*(void (**)(uint64_t))(v247 + 8))(v38);
    v47 = v66;
    if (v66)
    {
      OUTLINED_FUNCTION_1_58();
      OUTLINED_FUNCTION_18_54();
      OUTLINED_FUNCTION_1_58();
      OUTLINED_FUNCTION_39_28();
      OUTLINED_FUNCTION_8_28();
LABEL_78:
      OUTLINED_FUNCTION_16();
      return;
    }
    v67 = sub_22ABDE210();
    v56 = v284;
    v281 = *(void (**)(unint64_t, uint64_t))(v67 + 16);
    if (v281)
      break;
    swift_bridgeObjectRelease();
LABEL_62:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_18_54();
    sub_22AA3A8DC((uint64_t)v37);
    v55 = v254;
    v54 = v253;
  }
  v260 = 0;
  v68 = v283;
  v69 = (*(unsigned __int8 *)(v283 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v283 + 80);
  v246 = v67;
  v280 = v67 + v69;
  v47 = v264;
  OUTLINED_FUNCTION_47_3();
  v70 = 0;
  v279 = *(_QWORD **)(v68 + 72);
  v278 = *(_QWORD *)(v68 + 16);
  v71 = v276;
  while (1)
  {
    v284 = v56;
    OUTLINED_FUNCTION_7_6((uint64_t)&v294);
    v56 = v71;
    sub_22ABDE27C();
    v72 = v282;
    v73 = (*(uint64_t (**)(unint64_t, uint64_t))(v282 + 88))(v50, v48);
    if (v73 != (_DWORD)v277)
      break;
    OUTLINED_FUNCTION_13_64(*(uint64_t (**)(uint64_t, uint64_t))(v283 + 8));
    OUTLINED_FUNCTION_35_6(v50, *(uint64_t (**)(uint64_t, uint64_t))(v72 + 8));
    v71 = v56;
    OUTLINED_FUNCTION_20_45();
LABEL_59:
    if ((void (*)(unint64_t, uint64_t))++v70 == v281)
    {
      OUTLINED_FUNCTION_1_58();
      OUTLINED_FUNCTION_1_58();
      OUTLINED_FUNCTION_49_18();
      v38 = v245;
      goto LABEL_62;
    }
  }
  OUTLINED_FUNCTION_35_6(v50, *(uint64_t (**)(uint64_t, uint64_t))(v72 + 8));
  sub_22ABDE2B8();
  OUTLINED_FUNCTION_84_11();
  if (v48 != 1)
  {
    OUTLINED_FUNCTION_1_58();
    OUTLINED_FUNCTION_1_58();
    OUTLINED_FUNCTION_1_58();
    OUTLINED_FUNCTION_51_1();
    OUTLINED_FUNCTION_8_28();
    type metadata accessor for SerializationError();
    sub_22A9D395C();
    v113 = OUTLINED_FUNCTION_5_52();
    OUTLINED_FUNCTION_78_9(v113, v114);
    *v116 = v115 + 11;
    v116[1] = 0x800000022ABE5910;
    v117 = swift_storeEnumTagMultiPayload();
    swift_willThrow(v117);
    OUTLINED_FUNCTION_13_64(*(uint64_t (**)(uint64_t, uint64_t))(v283 + 8));
    (*(void (**)(uint64_t, uint64_t))(v259 + 8))(v255, v245);
    OUTLINED_FUNCTION_39_28();
    sub_22AA3A8DC((uint64_t)v37);
    goto LABEL_78;
  }
  sub_22ABDE2F4();
  OUTLINED_FUNCTION_84_11();
  v74 = sub_22ABDE2B8();
  if (*(_QWORD *)(v74 + 16))
  {
    v75 = v268;
    v270 = (*(unsigned __int8 *)(v268 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v268 + 80);
    v76 = v272;
    v77 = v274;
    v271 = *(void (**)(uint64_t, unint64_t, uint64_t))(v268 + 16);
    v271(v272, v74 + v270, v274);
    OUTLINED_FUNCTION_23();
    v78 = sub_22ABDDE38();
    v79 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v79(v76, v77);
    OUTLINED_FUNCTION_91_6();
    sub_22ABDE2D0();
    OUTLINED_FUNCTION_54();
    sub_22ABDE2F4();
    OUTLINED_FUNCTION_84_11();
    if (v78 == 1)
    {
      OUTLINED_FUNCTION_51_1();
      v80 = v256;
      v81 = *(_QWORD *)(v256 + 16);
      v56 = v284;
      v82 = v264;
      v262 = v70;
      if (v81)
      {
        OUTLINED_FUNCTION_22_21();
        v83 = sub_22AA03688();
        if ((v84 & 1) != 0)
        {
          v85 = (uint64_t *)(*(_QWORD *)(v80 + 56) + 16 * v83);
          v86 = *v85;
          v87 = v85[1];
          OUTLINED_FUNCTION_124_1();
          OUTLINED_FUNCTION_23();
          goto LABEL_29;
        }
        OUTLINED_FUNCTION_23();
      }
      OUTLINED_FUNCTION_22_21();
      v86 = v263;
      v87 = v82;
LABEL_29:
      v89 = v295;
      OUTLINED_FUNCTION_22_21();
      OUTLINED_FUNCTION_124_1();
      sub_22AB443D4(v86, v87, v89);
      v91 = v90;
      swift_bridgeObjectRelease();
      v261 = v79;
      if ((v91 & 1) != 0)
      {
        v285 = (void (*)(uint64_t, unint64_t, uint64_t))(v89 + 56);
        v92 = 1;
        while (1)
        {
          v286 = v86;
          v287 = v87;
          OUTLINED_FUNCTION_124_1();
          sub_22ABDEDC8();
          v288 = v92;
          sub_22ABDFD7C();
          sub_22ABDEDC8();
          OUTLINED_FUNCTION_51_1();
          v93 = v286;
          v47 = v287;
          if (!*(_QWORD *)(v89 + 16))
            break;
          sub_22ABE0244();
          OUTLINED_FUNCTION_47_3();
          sub_22ABDEDB0();
          v94 = sub_22ABE0280();
          v95 = -1 << *(_BYTE *)(v89 + 32);
          v56 = v94 & ~v95;
          OUTLINED_FUNCTION_35_22();
          if ((v96 & 1) == 0)
            goto LABEL_49;
          v97 = *(_QWORD *)(v89 + 48);
          v98 = (_QWORD *)(v97 + 16 * v56);
          v99 = *v98 == v93 && v98[1] == v47;
          if (!v99 && (OUTLINED_FUNCTION_52_19() & 1) == 0)
          {
            v100 = ~v95;
            while (1)
            {
              v56 = (v56 + 1) & v100;
              OUTLINED_FUNCTION_35_22();
              if ((v101 & 1) == 0)
                break;
              v102 = (_QWORD *)(v97 + 16 * v56);
              v103 = *v102 == v93 && v102[1] == v47;
              if (v103 || (OUTLINED_FUNCTION_52_19() & 1) != 0)
                goto LABEL_45;
            }
LABEL_49:
            OUTLINED_FUNCTION_23();
            swift_bridgeObjectRelease();
            goto LABEL_51;
          }
LABEL_45:
          swift_bridgeObjectRelease_n();
          v104 = __OFADD__(v92++, 1);
          if (v104)
          {
            __break(1u);
            goto LABEL_176;
          }
        }
        OUTLINED_FUNCTION_23();
LABEL_51:
        OUTLINED_FUNCTION_20_45();
      }
      else
      {
        v93 = v86;
        v47 = v87;
      }
      OUTLINED_FUNCTION_23();
      v88 = v276;
      v105 = sub_22ABDE2F4();
      v70 = v262;
      if (!*(_QWORD *)(v105 + 16))
        goto LABEL_177;
      v106 = v272;
      v107 = v274;
      OUTLINED_FUNCTION_7_6((uint64_t)v292);
      OUTLINED_FUNCTION_23();
      sub_22ABDDE38();
      v261(v106, v107);
      OUTLINED_FUNCTION_91_6();
      sub_22ABDE2D0();
      OUTLINED_FUNCTION_54();
      v288 = v93;
      v289 = v47;
      OUTLINED_FUNCTION_47_3();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B16CB8);
      sub_22ABDF29C();
      OUTLINED_FUNCTION_1_58();
      v20 = v273;
      v37 = v265;
    }
    else
    {
      v20 = v273;
      v88 = v276;
      v37 = v265;
      OUTLINED_FUNCTION_20_45();
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v283 + 24))(v37, v88, v20);
    sub_22AAE6E34((uint64_t)v37, v275, (void (*)(_QWORD))type metadata accessor for CoreMLPackage);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_75_12();
      v56 = v109;
    }
    v50 = v267;
    v108 = *(_QWORD *)(v56 + 16);
    if (v108 >= *(_QWORD *)(v56 + 24) >> 1)
    {
      OUTLINED_FUNCTION_75_12();
      v56 = v110;
    }
    *(_QWORD *)(v56 + 16) = v108 + 1;
    sub_22AAE6E70(v275, v56+ ((*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80))+ *(_QWORD *)(v266 + 72) * v108);
    v71 = v276;
    (*(void (**)(uint64_t, uint64_t))(v283 + 8))(v276, v20);
    v48 = v269;
    goto LABEL_59;
  }
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  sub_22ABDFB9C();
  __break(1u);
}

void sub_22AAE6CF4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22AAE53B8(a1, *(_QWORD *)(a2 - 8), a3);
}

void sub_22AAE6D10(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  sub_22ABDEAEC();
  OUTLINED_FUNCTION_50_9();
  OUTLINED_FUNCTION_0_5();
}

uint64_t type metadata accessor for ColumnSelectorTransformer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ColumnSelectorTransformer);
}

uint64_t sub_22AAE6D48(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AAE6D94 + 4 * byte_22ABF8885[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AAE6DC8 + 4 * byte_22ABF8880[v4]))();
}

uint64_t sub_22AAE6DC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAE6DD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AAE6DD8);
  return result;
}

uint64_t sub_22AAE6DE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AAE6DECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AAE6DF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAE6DF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AAE6E04()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAE6E14()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAE6E24()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAE6E34(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  void (*v4)(uint64_t);

  a3(0);
  v3 = OUTLINED_FUNCTION_3_43();
  v4(v3);
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22AAE6E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CoreMLPackage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_69(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  return sub_22AA93D10(*(_QWORD *)(v11 - 440), *(_QWORD *)(v11 - 424), *(_QWORD *)(v11 - 400), *(_QWORD *)(v11 - 392), *(_QWORD *)(v11 - 344), *(_QWORD *)(v11 - 336), *(_QWORD *)(v11 - 384), *(_QWORD *)(v11 - 456), a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_2_73()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[25] + 8))(v0[26], v0[12]);
}

uint64_t OUTLINED_FUNCTION_3_78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return v1 + *(_QWORD *)(v2 + 72) * a1;
}

uint64_t OUTLINED_FUNCTION_6_80()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (char *)v0[31];
  v2 = v0[26];
  v3 = v0[27];
  v4 = v0[25];
  v5 = v0[12];
  v0[38] = *(_QWORD *)v1;
  v0[39] = *((_QWORD *)v1 + 1);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v2, &v1[*(int *)(v3 + 48)], v5);
}

uint64_t OUTLINED_FUNCTION_8_59()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 480) = v0;
  return sub_22ABDEAEC();
}

uint64_t OUTLINED_FUNCTION_9_61()
{
  return sub_22ABDD298();
}

uint64_t OUTLINED_FUNCTION_10_56(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return Transformer.applied<A>(to:eventHandler:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t OUTLINED_FUNCTION_13_64@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_55()
{
  return sub_22ABDD34C();
}

void OUTLINED_FUNCTION_16_51()
{
  sub_22AA36108();
}

uint64_t OUTLINED_FUNCTION_17_48()
{
  return sub_22ABDD298();
}

uint64_t OUTLINED_FUNCTION_18_54()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 488) + 8))(*(_QWORD *)(v1 - 520), v0);
}

uint64_t OUTLINED_FUNCTION_22_44()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_23_45()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_26_37@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 160);
}

uint64_t OUTLINED_FUNCTION_27_37()
{
  return sub_22ABDD2B0();
}

unint64_t OUTLINED_FUNCTION_30_35()
{
  return sub_22AA03688();
}

uint64_t OUTLINED_FUNCTION_31_27()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[29] + 32))(v0[31], v0[30], v0[28]);
}

uint64_t OUTLINED_FUNCTION_32_26()
{
  uint64_t v0;

  return __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 240), 1, 1, *(_QWORD *)(v0 + 216));
}

void OUTLINED_FUNCTION_33_32()
{
  sub_22AA360E0();
}

uint64_t OUTLINED_FUNCTION_34_33()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t OUTLINED_FUNCTION_36_32()
{
  return sub_22ABDF5D8();
}

void OUTLINED_FUNCTION_37_28(__n128 a1, uint64_t a2, __n128 *a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  *a3 = a1;
  a3[1].n128_u64[0] = v5;
  a3[1].n128_u64[1] = v3;
  a3[2].n128_u64[0] = v4;
  a3[2].n128_u64[1] = v6;
  a3[3].n128_u64[0] = v7;
  a3[3].n128_u64[1] = v8;
  a3[4].n128_u8[0] = 1;
}

uint64_t OUTLINED_FUNCTION_38_34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_39_28()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_41_22()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_52_19()
{
  return sub_22ABDFF68();
}

double OUTLINED_FUNCTION_53_22(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  double result;

  *(__n128 *)a3 = a1;
  *(_QWORD *)(a3 + 16) = v4;
  *(_QWORD *)(a3 + 24) = v3;
  result = 0.0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_BYTE *)(a3 + 64) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_57_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void OUTLINED_FUNCTION_59_16(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v2)(_QWORD);

  sub_22AAE6E34(a1, *(_QWORD *)(a2 - 256), v2);
}

uint64_t OUTLINED_FUNCTION_60_17@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_62_15()
{
  return sub_22ABDD250();
}

uint64_t OUTLINED_FUNCTION_64_12()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_65_16()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[19] + 8))(v0[20], v0[18]);
}

uint64_t OUTLINED_FUNCTION_68_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_69_13()
{
  return sub_22ABDE210();
}

void OUTLINED_FUNCTION_70_11()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_71_13(uint64_t a1)
{
  return swift_willThrow(a1);
}

unint64_t OUTLINED_FUNCTION_72_13()
{
  return sub_22A9FA7DC();
}

void OUTLINED_FUNCTION_75_12()
{
  sub_22AA3625C();
}

uint64_t OUTLINED_FUNCTION_77_12()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_78_9(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_79_11()
{
  uint64_t v0;

  return sub_22AA3A8DC(v0);
}

uint64_t OUTLINED_FUNCTION_80_14()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_82_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 352) = v0;
  *(_QWORD *)(v2 - 360) = v1;
}

uint64_t OUTLINED_FUNCTION_84_11()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_85_10()
{
  return swift_dynamicCastMetatype();
}

uint64_t OUTLINED_FUNCTION_91_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_93_6()
{
  return sub_22ABDED80();
}

uint64_t OUTLINED_FUNCTION_94_6()
{
  return sub_22ABDED80();
}

void LogisticRegressionClassifier.configuration.getter()
{
  sub_22A99CE8C();
  sub_22A99BD70();
}

void sub_22AAE7464()
{
  type metadata accessor for LogisticRegressionClassifier();
}

void sub_22AAE74D0()
{
  LogisticRegressionClassifier.configuration.getter();
}

__n128 sub_22AAE74DC()
{
  uint64_t v0;
  __n128 result;
  __int128 v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char v6;
  char v7;

  *(_OWORD *)v0 = v2;
  *(_QWORD *)(v0 + 16) = v3;
  result = v4;
  *(__n128 *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 40) = v5;
  *(_BYTE *)(v0 + 48) = v6;
  *(_BYTE *)(v0 + 49) = v7;
  return result;
}

void sub_22AAE751C()
{
  type metadata accessor for LogisticRegressionClassifier();
}

void sub_22AAE7580()
{
  LogisticRegressionClassifier.configuration.setter();
}

void LogisticRegressionClassifier.configuration.setter()
{
  OUTLINED_FUNCTION_6_81();
  sub_22A99CE8C();
  sub_22A99BD70();
}

__n128 sub_22AAE764C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  __n128 result;

  v2 = *(_QWORD *)(v1 - 80);
  v3 = *(_QWORD *)(v1 - 56);
  v4 = *(_BYTE *)(v1 - 48);
  v5 = *(_BYTE *)(v1 - 47);
  *(_OWORD *)(v0 + 8) = *(_OWORD *)(v1 - 96);
  *(_QWORD *)(v0 + 24) = v2;
  result = *(__n128 *)(v1 - 72);
  *(__n128 *)(v0 + 32) = result;
  *(_QWORD *)(v0 + 48) = v3;
  *(_BYTE *)(v0 + 56) = v4;
  *(_BYTE *)(v0 + 57) = v5;
  return result;
}

void LogisticRegressionClassifier.configuration.modify(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = malloc(0x48uLL);
  *a1 = v5;
  v5[7] = a2;
  v5[8] = v2;
  LogisticRegressionClassifier.configuration.getter();
}

void (*sub_22AAE7708())()
{
  return sub_22AAE7728;
}

void sub_22AAE7728()
{
  LogisticRegressionClassifier.configuration.setter();
}

void sub_22AAE7778()
{
  void *v0;

  free(v0);
}

uint64_t LogisticRegressionClassifier.labels.getter()
{
  return sub_22ABDEAEC();
}

uint64_t LogisticRegressionClassifier.labels.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*LogisticRegressionClassifier.labels.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LogisticRegressionClassifier.fitted<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 48) = a4;
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 32) = a2;
  *(_QWORD *)(v8 + 40) = a3;
  *(_QWORD *)(v8 + 24) = a1;
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v7 + 8);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v7 + 24);
  *(_OWORD *)(v8 + 104) = *(_OWORD *)(v7 + 32);
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v7 + 48);
  *(_BYTE *)(v8 + 128) = *(_BYTE *)(v7 + 56);
  *(_BYTE *)(v8 + 129) = *(_BYTE *)(v7 + 57);
  return OUTLINED_FUNCTION_13_29();
}

uint64_t sub_22AAE7818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD **)(v0 + 56);
  v4 = (_QWORD *)OUTLINED_FUNCTION_113();
  v29 = v3[2];
  *v4 = v29;
  v27 = v3[3];
  v4[1] = v27;
  v4[2] = v2;
  v28 = v3[4];
  v4[3] = v28;
  v5 = v3[5];
  v4[4] = v5;
  v6 = v3[6];
  v4[5] = v6;
  v7 = v3[7];
  v4[6] = v7;
  v8 = v3[8];
  v4[7] = v8;
  v9 = v3[9];
  v4[8] = v9;
  v4[9] = v1;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_39_0();
  v11 = (_QWORD *)OUTLINED_FUNCTION_113();
  v11[2] = v2;
  v11[3] = v5;
  v11[4] = v6;
  v11[5] = v7;
  v26 = v8;
  v11[6] = v8;
  v11[7] = v9;
  v11[8] = v1;
  v11[9] = KeyPath;
  v12 = sub_22ABDE8A0();
  v14 = OUTLINED_FUNCTION_35_23((uint64_t)sub_22AA253C8, (uint64_t)v11, v2, v12, MEMORY[0x24BEE4078], v1, MEMORY[0x24BEE40A8], v13);
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_39_0();
  *(_QWORD *)(v0 + 16) = v14;
  v15 = sub_22ABDF0F8();
  v16 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v15);
  OUTLINED_FUNCTION_26_38(v0 + 16, v15, v29, v16, v28, (uint64_t)&v30);
  if (!v9)
  {
    v17 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 72);
    v25 = v17;
    OUTLINED_FUNCTION_3_8();
    v19 = (_QWORD *)OUTLINED_FUNCTION_113();
    *v19 = v29;
    v19[1] = v27;
    v19[2] = v17;
    v19[3] = v28;
    v19[4] = v5;
    v19[5] = v6;
    v19[6] = v7;
    v19[7] = v26;
    v19[8] = 0;
    v19[9] = v18;
    v20 = swift_getKeyPath();
    swift_task_dealloc();
    v21 = (_QWORD *)OUTLINED_FUNCTION_113();
    v21[2] = v25;
    v21[3] = v5;
    v21[4] = v6;
    v21[5] = v7;
    v21[6] = v26;
    v21[7] = 0;
    v21[8] = v18;
    v21[9] = v20;
    v23 = sub_22A9C2540((uint64_t)sub_22AA2556C, (uint64_t)v21, v25, v27, MEMORY[0x24BEE4078], v18, MEMORY[0x24BEE40A8], v22);
    OUTLINED_FUNCTION_21_3();
    swift_task_dealloc();
    *(_QWORD *)(v0 + 16) = v23;
    OUTLINED_FUNCTION_81_0();
    sub_22ABDEAEC();
    OUTLINED_FUNCTION_52_3();
  }
  OUTLINED_FUNCTION_3_8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAE7D3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;
  char v5;

  result = sub_22AB5954C(a1, v2[12], v2[13], v2[3], v2[7], v2[10]);
  if ((v5 & 1) != 0)
    __break(1u);
  else
    *a2 = result;
  return result;
}

uint64_t LogisticRegressionClassifier.fitted<A, B>(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v9 + 96) = v11;
  *(_QWORD *)(v9 + 104) = v12;
  *(_QWORD *)(v9 + 80) = a7;
  *(_QWORD *)(v9 + 88) = a8;
  *(_QWORD *)(v9 + 64) = a5;
  *(_QWORD *)(v9 + 72) = a6;
  *(_QWORD *)(v9 + 48) = a3;
  *(_QWORD *)(v9 + 56) = a4;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  *(_QWORD *)(v9 + 112) = *(_QWORD *)v8;
  *(_OWORD *)(v9 + 120) = *(_OWORD *)(v8 + 8);
  *(_QWORD *)(v9 + 136) = *(_QWORD *)(v8 + 24);
  *(_OWORD *)(v9 + 144) = *(_OWORD *)(v8 + 32);
  *(_QWORD *)(v9 + 160) = *(_QWORD *)(v8 + 48);
  *(_BYTE *)(v9 + 168) = *(_BYTE *)(v8 + 56);
  *(_BYTE *)(v9 + 169) = *(_BYTE *)(v8 + 57);
  return swift_task_switch();
}

uint64_t sub_22AAE7DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[112];

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v33 = v3;
  v5 = *(_QWORD **)(v0 + 72);
  v6 = (_QWORD *)OUTLINED_FUNCTION_3_79();
  v36 = v5[2];
  *v6 = v36;
  v32 = v5[3];
  v6[1] = v32;
  v6[2] = v4;
  v6[3] = v3;
  v38 = v5[4];
  v6[4] = v38;
  v37 = v5[5];
  v6[5] = v37;
  v7 = v5[6];
  v6[6] = v7;
  v8 = v5[7];
  v6[7] = v8;
  v9 = v5[8];
  v6[8] = v9;
  v10 = v5[9];
  v6[9] = v10;
  v6[10] = v1;
  v6[11] = v2;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_13_3();
  v12 = (_QWORD *)OUTLINED_FUNCTION_3_79();
  v12[2] = v4;
  v12[3] = v33;
  v12[4] = v37;
  v12[5] = v7;
  v30 = v8;
  v12[6] = v8;
  v12[7] = v9;
  v31 = v10;
  v12[8] = v10;
  v12[9] = v1;
  v12[10] = v2;
  v12[11] = KeyPath;
  v13 = sub_22ABDE8A0();
  v15 = OUTLINED_FUNCTION_35_23((uint64_t)sub_22AAEA9B4, (uint64_t)v12, v4, v13, MEMORY[0x24BEE4078], v1, MEMORY[0x24BEE40A8], v14);
  OUTLINED_FUNCTION_81_1();
  OUTLINED_FUNCTION_13_3();
  *(_QWORD *)(v0 + 16) = v15;
  v34 = v13;
  v16 = sub_22ABDF0F8();
  v17 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v16);
  sub_22ABC377C(v0 + 16, v16, v36, v17, v38, v37, (uint64_t)v39);
  if (!v4)
  {
    v29 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 88);
    v19 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 80);
    OUTLINED_FUNCTION_3_8();
    v21 = (_QWORD *)OUTLINED_FUNCTION_3_79();
    *v21 = v36;
    v21[1] = v32;
    v21[2] = v20;
    v21[3] = v18;
    v21[4] = v38;
    v21[5] = v37;
    v21[6] = v7;
    v21[7] = v30;
    v21[8] = v9;
    v21[9] = v10;
    v21[10] = v19;
    v21[11] = v29;
    v22 = swift_getKeyPath();
    OUTLINED_FUNCTION_12_3();
    v23 = (_QWORD *)OUTLINED_FUNCTION_3_79();
    v23[2] = v20;
    v23[3] = v18;
    v23[4] = v37;
    v23[5] = v7;
    v23[6] = v30;
    v23[7] = v9;
    v23[8] = v31;
    v23[9] = v19;
    v23[10] = v29;
    v23[11] = v22;
    v25 = sub_22A9C2540((uint64_t)sub_22AAE8678, (uint64_t)v23, v18, v34, MEMORY[0x24BEE4078], v29, MEMORY[0x24BEE40A8], v24);
    swift_release();
    OUTLINED_FUNCTION_12_3();
    *(_QWORD *)(v0 + 16) = v25;
    OUTLINED_FUNCTION_26_38(v0 + 16, v16, v36, v17, v38, (uint64_t)v39);
    OUTLINED_FUNCTION_3_8();
    v26 = sub_22ABDEAEC();
    v35 = sub_22AB593D0(v26, v32, v7, v31);
    sub_22AB593D4(v35, v27, v32, v7, v31);
  }
  OUTLINED_FUNCTION_3_8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

#error "22AAE85D4: call analysis failed (funcsize=52)"

uint64_t sub_22AAE8678()
{
  return swift_getAtKeyPath();
}

uint64_t sub_22AAE86A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;
  char v5;

  result = sub_22AB5954C(a1, v2[14], v2[15], v2[3], v2[8], v2[11]);
  if ((v5 & 1) != 0)
    __break(1u);
  else
    *a2 = result;
  return result;
}

uint64_t sub_22AAE86E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v14 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_22AB5954C(v17, v18, v19, a2, v20, v21);
  if ((v23 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a2);
    v24 = sub_22ABDED80();
    v26 = v25;
    sub_22A9B7B50();
    v27 = swift_allocError();
    *(_QWORD *)v28 = 0xD00000000000001CLL;
    *(_QWORD *)(v28 + 8) = 0x800000022ABF8B50;
    *(_QWORD *)(v28 + 16) = v24;
    *(_QWORD *)(v28 + 24) = v26;
    *(_BYTE *)(v28 + 32) = 3;
    result = swift_willThrow(v27);
    *a11 = v27;
  }
  else
  {
    *a3 = result;
  }
  return result;
}

uint64_t sub_22AAE87F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_22AAE86E4(a1, v3[3], a3, v3[7], v3[8], v3[9], v3[10], v3[11], v3[12], v3[13], a2);
}

void LogisticRegressionClassifier.encode(_:to:)()
{
  type metadata accessor for LogisticRegressionClassifierModel();
}

void sub_22AAE88B4()
{
  sub_22AAC33C4();
}

void LogisticRegressionClassifier.decode(from:)()
{
  sub_22AAC3710();
}

uint64_t sub_22AAE8910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A99E4B4;
  return LogisticRegressionClassifier.fitted<A>(to:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t sub_22AAE89A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v14;
  uint64_t v17;

  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v14;
  *v14 = v7;
  v14[1] = sub_22A99DE80;
  return LogisticRegressionClassifier.fitted<A, B>(to:validateOn:eventHandler:)(a1, a2, a3, a4, a5, v17, a6, a7);
}

void sub_22AAE8A58()
{
  LogisticRegressionClassifier.encode(_:to:)();
}

void sub_22AAE8A6C()
{
  LogisticRegressionClassifier.decode(from:)();
}

void LogisticRegressionClassifier.makeTransformer()(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  v2 = a1[3];
  v3 = a1[6];
  v4 = a1[9];
  v5 = sub_22ABDEAEC();
  v14 = sub_22AB593D0(v5, v2, v3, v4);
  v7 = v6;
  v8 = a1[2];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85C8);
  v11 = a1[4];
  v10 = a1[5];
  v13 = a1[7];
  v12 = a1[8];
  sub_22AAEA45C();
  sub_22AAC2A74((uint64_t)&v15, v14, v7, v8, v2, v9, v11, v10, v3, v13, v12, v4);
}

uint64_t LogisticRegressionClassifier.update<A>(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 + 72) = a6;
  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 56) = a4;
  *(_QWORD *)(v8 + 64) = a5;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 48) = a3;
  *(_QWORD *)(v8 + 32) = a1;
  *(_OWORD *)(v8 + 88) = *(_OWORD *)(v7 + 8);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v7 + 24);
  *(_OWORD *)(v8 + 112) = *(_OWORD *)(v7 + 32);
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v7 + 48);
  *(_BYTE *)(v8 + 136) = *(_BYTE *)(v7 + 56);
  *(_BYTE *)(v8 + 137) = *(_BYTE *)(v7 + 57);
  return OUTLINED_FUNCTION_13_29();
}

void sub_22AAE8B9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_22ABDF1DC();
  v2 = v0[9];
  v1 = v0[10];
  v15 = v1;
  v16 = v2;
  v3 = (_QWORD *)v0[8];
  v4 = (_QWORD *)OUTLINED_FUNCTION_113();
  *v4 = v3[2];
  v4[1] = v3[3];
  v4[2] = v2;
  v4[3] = v3[4];
  v5 = v3[5];
  v4[4] = v5;
  v6 = v3[6];
  v4[5] = v6;
  v7 = v3[7];
  v4[6] = v7;
  v8 = v3[8];
  v4[7] = v8;
  v9 = v3[9];
  v4[8] = v9;
  v4[9] = v1;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_39_0();
  v11 = (_QWORD *)OUTLINED_FUNCTION_113();
  v11[2] = v16;
  v11[3] = v5;
  v11[4] = v6;
  v11[5] = v7;
  v11[6] = v8;
  v11[7] = v9;
  v11[8] = v15;
  v11[9] = KeyPath;
  v12 = sub_22ABDE8A0();
  v14 = sub_22A9C2540((uint64_t)sub_22AA2556C, (uint64_t)v11, v16, v12, MEMORY[0x24BEE4078], v15, MEMORY[0x24BEE40A8], v13);
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_12_3();
  v0[2] = v14;
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22AAE8FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X7>, uint64_t *a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v28 = a4;
  v12 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v15 + 96);
  v17 = *(_QWORD *)(v15 + 104);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  v18 = sub_22AB5954C(a1, v16, v17, a2, a3, a7);
  v20 = v19;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, a2);
    v22 = sub_22ABDED80();
    v24 = v23;
    sub_22A9B7B50();
    v25 = swift_allocError();
    *(_QWORD *)v26 = 0xD00000000000001CLL;
    *(_QWORD *)(v26 + 8) = 0x800000022ABF8B50;
    *(_QWORD *)(v26 + 16) = v22;
    *(_QWORD *)(v26 + 24) = v24;
    *(_BYTE *)(v26 + 32) = 3;
    result = swift_willThrow(v25);
    *a9 = v25;
  }
  else
  {
    *v28 = v18;
  }
  return result;
}

void LogisticRegressionClassifier.encodeWithOptimizer(_:to:)(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
    type metadata accessor for LogisticRegressionClassifierModel();
  sub_22ABDFADC();
  __break(1u);
}

void LogisticRegressionClassifier.decodeWithOptimizer(from:)()
{
  sub_22AAC3710();
}

void sub_22AAE9300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  if (!v1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(qword_255B12178);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v0, v4);
    v6 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16);
    v7 = sub_22AAEA4E4(&qword_255B15150, MEMORY[0x24BEE1400], (uint64_t)&unk_22ABFCCF8);
    v6(&v17, v3, v3, v7, v4, v5);
    v8 = v18;
    v9 = v19;
    v10 = v20;
    v15 = v21;
    v16 = v17;
    v11 = v22;
    v12 = v23;
    v13 = v24;
    sub_22AA6D37C(v27);
    v14 = v26;
    *(_QWORD *)v2 = v25;
    *(_QWORD *)(v2 + 8) = v14;
    *(_OWORD *)(v2 + 16) = v16;
    *(_QWORD *)(v2 + 32) = v8;
    *(_QWORD *)(v2 + 40) = v9;
    *(_QWORD *)(v2 + 48) = v10;
    *(_OWORD *)(v2 + 56) = v15;
    *(_QWORD *)(v2 + 72) = v11;
    *(_QWORD *)(v2 + 80) = v12;
    *(_BYTE *)(v2 + 88) = v13;
    *(_OWORD *)(v2 + 96) = v28;
  }
}

uint64_t sub_22AAE9484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A99E4B4;
  return LogisticRegressionClassifier.update<A>(_:with:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

void sub_22AAE9518(uint64_t a1)
{
  LogisticRegressionClassifier.encodeWithOptimizer(_:to:)(a1);
}

void sub_22AAE952C()
{
  LogisticRegressionClassifier.decodeWithOptimizer(from:)();
}

double LogisticRegressionClassifier.Configuration.l2Penalty.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void LogisticRegressionClassifier.Configuration.l2Penalty.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*LogisticRegressionClassifier.Configuration.l2Penalty.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

double LogisticRegressionClassifier.Configuration.l1Penalty.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void LogisticRegressionClassifier.Configuration.l1Penalty.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*LogisticRegressionClassifier.Configuration.l1Penalty.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LogisticRegressionClassifier.Configuration.maximumIterations.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t LogisticRegressionClassifier.Configuration.maximumIterations.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*LogisticRegressionClassifier.Configuration.maximumIterations.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

double LogisticRegressionClassifier.Configuration.stepSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void LogisticRegressionClassifier.Configuration.stepSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*LogisticRegressionClassifier.Configuration.stepSize.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

double LogisticRegressionClassifier.Configuration.convergenceThreshold.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void LogisticRegressionClassifier.Configuration.convergenceThreshold.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*LogisticRegressionClassifier.Configuration.convergenceThreshold.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LogisticRegressionClassifier.Configuration.earlyStopIterationCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t LogisticRegressionClassifier.Configuration.earlyStopIterationCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*LogisticRegressionClassifier.Configuration.earlyStopIterationCount.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t LogisticRegressionClassifier.Configuration.scaleFeatures.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t LogisticRegressionClassifier.Configuration.scaleFeatures.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*LogisticRegressionClassifier.Configuration.scaleFeatures.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void LogisticRegressionClassifier.Configuration.optimizationStrategy.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 49);
}

void sub_22AAE962C()
{
  type metadata accessor for LogisticRegressionClassifier.Configuration();
}

void sub_22AAE9690()
{
  _BYTE *v0;

  LogisticRegressionClassifier.Configuration.optimizationStrategy.getter(v0);
}

void sub_22AAE96AC()
{
  type metadata accessor for LogisticRegressionClassifier.Configuration();
}

_BYTE *sub_22AAE96E8()
{
  uint64_t v0;

  return LogisticRegressionClassifier.Configuration.optimizationStrategy.setter((_BYTE *)(v0 - 17));
}

_BYTE *LogisticRegressionClassifier.Configuration.optimizationStrategy.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = *result;
  return result;
}

_BYTE *(*LogisticRegressionClassifier.Configuration.optimizationStrategy.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 49);
  return sub_22AAE9728;
}

_BYTE *sub_22AAE9728(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 49) = result[8];
  return result;
}

uint64_t LogisticRegressionClassifier.Configuration.hash(into:)()
{
  sub_22ABE0274();
  sub_22ABE0274();
  sub_22ABE0250();
  sub_22ABE0274();
  sub_22ABE0274();
  sub_22ABE0250();
  sub_22ABE025C();
  return sub_22ABE0250();
}

BOOL static LogisticRegressionClassifier.Configuration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = 0;
  if ((vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24))))), 0xFuLL))) & 1) == 0&& *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)&& *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)&& ((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) == 0)
  {
    return *(unsigned __int8 *)(a1 + 49) == *(unsigned __int8 *)(a2 + 49);
  }
  return result;
}

uint64_t sub_22AAE9870(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v3 = a1 == 0x746C616E6550326CLL && a2 == 0xE900000000000079;
  if (v3 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746C616E6550316CLL && a2 == 0xE900000000000079;
    if (v6 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x800000022ABE4D40 || (sub_22ABDFF68() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x657A695370657473 && a2 == 0xE800000000000000;
      if (v7 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x800000022ABE5A10 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000017 && a2 == 0x800000022ABE4D60 || (sub_22ABDFF68() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = a1 == 0x616546656C616373 && a2 == 0xED00007365727574;
        if (v8 || (sub_22ABDFF68() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x800000022ABE5A30)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          v9 = sub_22ABDFF68();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 7;
          else
            return 8;
        }
      }
    }
  }
}

uint64_t sub_22AAE9BA0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_22AAE9BDC + 4 * byte_22ABF8B10[a1]))(0x746C616E6550326CLL, 0xE900000000000079);
}

uint64_t sub_22AAE9BDC()
{
  return 0x746C616E6550316CLL;
}

unint64_t sub_22AAE9BF0()
{
  return 0xD000000000000011;
}

uint64_t sub_22AAE9C0C()
{
  return 0x657A695370657473;
}

unint64_t sub_22AAE9C24()
{
  return 0xD000000000000014;
}

BOOL sub_22AAE9C98(char *a1, char *a2)
{
  return sub_22A9B0EA4(*a1, *a2);
}

uint64_t sub_22AAE9CD8()
{
  return sub_22A9B1040();
}

uint64_t sub_22AAE9D0C()
{
  return sub_22A9B0EB4();
}

uint64_t sub_22AAE9D40()
{
  sub_22ABE0244();
  sub_22A9B0EB4();
  return sub_22ABE0280();
}

uint64_t sub_22AAE9D94()
{
  unsigned __int8 *v0;

  return sub_22AAE9BA0(*v0);
}

uint64_t sub_22AAE9DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AAE9870(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AAE9E0C()
{
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_22AAE9E44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AA946B8();
  *a1 = result;
  return result;
}

uint64_t sub_22AAE9E88(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF8E30, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AAE9EBC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF8E30, a1);
  return sub_22ABE02F8();
}

void LogisticRegressionClassifier.Configuration.encode(to:)()
{
  OUTLINED_FUNCTION_27_38();
}

void sub_22AAE9F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  MEMORY[0x22E2E4D80](&unk_22ABF8E30, a1);
  v12 = sub_22ABDFD58();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&a9 - v14;
  v16 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v11 - 200) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v11 - 192) = v16;
  *(_DWORD *)(v11 - 72) = *(unsigned __int8 *)(v9 + 48);
  *(_DWORD *)(v11 - 204) = *(unsigned __int8 *)(v9 + 49);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v11 - 176) = 0;
  v17 = *(_QWORD *)(v11 - 184);
  sub_22ABDFD1C();
  if (!v17)
  {
    v18 = *(_DWORD *)(v11 - 204);
    *(_BYTE *)(v11 - 176) = 1;
    OUTLINED_FUNCTION_4_65();
    *(_BYTE *)(v11 - 176) = 2;
    OUTLINED_FUNCTION_15_55();
    *(_BYTE *)(v11 - 176) = 3;
    OUTLINED_FUNCTION_4_65();
    *(_BYTE *)(v11 - 176) = 4;
    OUTLINED_FUNCTION_4_65();
    *(_BYTE *)(v11 - 176) = 5;
    OUTLINED_FUNCTION_15_55();
    *(_BYTE *)(v11 - 176) = 6;
    sub_22ABDFD10();
    *(_BYTE *)(v11 - 176) = v18;
    *(_BYTE *)(v11 - 65) = 7;
    sub_22AAEA558();
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  OUTLINED_FUNCTION_1_61();
}

uint64_t LogisticRegressionClassifier.Configuration.hashValue.getter()
{
  OUTLINED_FUNCTION_6_81();
  sub_22ABE0244();
  LogisticRegressionClassifier.Configuration.hash(into:)();
  return sub_22ABE0280();
}

void LogisticRegressionClassifier.Configuration.init(from:)()
{
  OUTLINED_FUNCTION_27_38();
}

void sub_22AAEA1CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  MEMORY[0x22E2E4D80](&unk_22ABF8E30, a1);
  v4 = sub_22ABDFCB0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = v2[3];
  *(_QWORD *)(v3 - 184) = v2;
  __swift_project_boxed_opaque_existential_1(v2, v6);
  sub_22ABE0298();
  if (!v1)
  {
    v7 = *(_QWORD *)(v3 - 192);
    *(_BYTE *)(v3 - 176) = 0;
    sub_22ABDFC5C();
    v9 = v8;
    OUTLINED_FUNCTION_0_70(1);
    v11 = v10;
    v12 = OUTLINED_FUNCTION_8_60(2);
    OUTLINED_FUNCTION_0_70(3);
    v14 = v13;
    OUTLINED_FUNCTION_0_70(4);
    v16 = v15;
    v17 = OUTLINED_FUNCTION_8_60(5);
    *(_BYTE *)(v3 - 176) = 6;
    v18 = sub_22ABDFC50();
    *(_BYTE *)(v3 - 65) = 7;
    sub_22AAEA594();
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_13_64(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v19 = *(_BYTE *)(v3 - 176);
    *(_QWORD *)v7 = v9;
    *(_QWORD *)(v7 + 8) = v11;
    *(_QWORD *)(v7 + 16) = v12;
    *(_QWORD *)(v7 + 24) = v14;
    *(_QWORD *)(v7 + 32) = v16;
    *(_QWORD *)(v7 + 40) = v17;
    *(_BYTE *)(v7 + 48) = v18 & 1;
    *(_BYTE *)(v7 + 49) = v19;
  }
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 184));
  OUTLINED_FUNCTION_1_61();
}

uint64_t sub_22AAEA3BC()
{
  sub_22ABE0244();
  LogisticRegressionClassifier.Configuration.hash(into:)();
  return sub_22ABE0280();
}

void sub_22AAEA3F4()
{
  LogisticRegressionClassifier.Configuration.init(from:)();
}

void sub_22AAEA428()
{
  LogisticRegressionClassifier.Configuration.encode(to:)();
}

BOOL sub_22AAEA43C(uint64_t a1, uint64_t a2)
{
  return static LogisticRegressionClassifier.Configuration.== infix(_:_:)(a1, a2);
}

unint64_t sub_22AAEA45C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540E85D0;
  if (!qword_2540E85D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540E85C8);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2540E85D0);
  }
  return result;
}

uint64_t sub_22AAEA4A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_22AAE8FA4(a1, v3[3], v3[7], a3, v3[8], v3[9], v3[10], v3[11], a2);
}

uint64_t sub_22AAEA4E4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_255B12178);
    v8[0] = MEMORY[0x24BDBFE38];
    v8[1] = a2;
    result = MEMORY[0x22E2E4D80](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for LogisticRegressionClassifier.Configuration.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

unint64_t sub_22AAEA558()
{
  unint64_t result;

  result = qword_255B16CE8;
  if (!qword_255B16CE8)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for OptimizationStrategy, &type metadata for OptimizationStrategy);
    atomic_store(result, (unint64_t *)&qword_255B16CE8);
  }
  return result;
}

unint64_t sub_22AAEA594()
{
  unint64_t result;

  result = qword_255B16CF0[0];
  if (!qword_255B16CF0[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for OptimizationStrategy, &type metadata for OptimizationStrategy);
    atomic_store(result, qword_255B16CF0);
  }
  return result;
}

uint64_t sub_22AAEA5D0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8);
}

void sub_22AAEA5DC()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AAEA5EC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for LogisticRegressionClassifier<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_22AAEA618()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AAEA648(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AAEA694(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  return a1;
}

uint64_t sub_22AAEA718(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  return a1;
}

uint64_t sub_22AAEA77C(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 58))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22AAEA7BC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 58) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 58) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BaseLogisticRegressionClassifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 50))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 48);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BaseLogisticRegressionClassifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 50) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

uint64_t sub_22AAEA8C8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_22AAEA914 + 4 * byte_22ABF8B1D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_22AAEA948 + 4 * byte_22ABF8B18[v4]))();
}

uint64_t sub_22AAEA948(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAEA950(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AAEA958);
  return result;
}

uint64_t sub_22AAEA964(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AAEA96CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_22AAEA970(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAEA978(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AAEA984()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAEA994()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAEA9A4()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AAEA9B4()
{
  return sub_22AAE8678();
}

uint64_t OUTLINED_FUNCTION_0_70@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 176) = a1;
  return sub_22ABDFC5C();
}

uint64_t OUTLINED_FUNCTION_3_79()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_4_65()
{
  return sub_22ABDFD1C();
}

uint64_t OUTLINED_FUNCTION_5_63@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)(a2 + 16) = a3;
  *(_QWORD *)(a2 + 24) = (v3 - 32) | 0x8000000000000000;
  *(_BYTE *)(a2 + 32) = 5;
  return swift_willThrow(a1);
}

uint64_t OUTLINED_FUNCTION_8_60@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 176) = a1;
  return sub_22ABDFC74();
}

__n128 OUTLINED_FUNCTION_12_56(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_55()
{
  return sub_22ABDFD34();
}

uint64_t OUTLINED_FUNCTION_16_52()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_22_45(double a1, double a2, __n128 a3, __n128 a4, __n128 a5)
{
  char v5;
  uint64_t v6;
  uint64_t v7;

  *(__n128 *)(v6 + 40) = a3;
  *(__n128 *)(v6 + 56) = a4;
  *(__n128 *)(v6 + 72) = a5;
  *(_BYTE *)(v7 - 128) = v5;
}

uint64_t OUTLINED_FUNCTION_23_46()
{
  return 64;
}

void OUTLINED_FUNCTION_24_41(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 216) = a1;
}

void OUTLINED_FUNCTION_25_36(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_26_38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;

  return sub_22ABC377C(a1, a2, a3, a4, a5, v6, a6);
}

void OUTLINED_FUNCTION_27_38()
{
  type metadata accessor for LogisticRegressionClassifier.Configuration.CodingKeys();
}

void OUTLINED_FUNCTION_33_33()
{
  type metadata accessor for LogisticRegressionClassifier.Configuration();
}

uint64_t OUTLINED_FUNCTION_35_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_22A9C2540(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_22AAEAADC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_22AB4CDFC();
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      sub_22ABDEAEC();
      if (v8 >= v7 >> 1)
        sub_22AB4CDFC();
      v4 += 4;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t (*sub_22AAEABB0())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void (*sub_22AAEABC0(void (**a1)(uint64_t a1), uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t *v3;
  void (*result)(uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;

  result = (void (*)(uint64_t))malloc(0x60uLL);
  v8 = result;
  *a1 = result;
  v9 = (uint64_t)result + 32;
  if ((v3[2] & 1) != 0)
  {
    v10 = a3 * *v3;
    if ((unsigned __int128)(a3 * (__int128)*v3) >> 64 == v10 >> 63)
    {
      v11 = v10 + a2;
      if (!__OFADD__(v10, a2))
      {
        *((_QWORD *)result + 10) = sub_22AAEABB0();
        sub_22AAEAD0C(v9, v11);
        *((_QWORD *)v8 + 11) = v12;
        return sub_22AAEACDC;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  v13 = v3[1];
  v14 = a2 * v13;
  if ((unsigned __int128)(a2 * (__int128)v13) >> 64 != (a2 * v13) >> 63)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v15 = __OFADD__(v14, a3);
  v16 = v14 + a3;
  if (!v15)
  {
    *((_QWORD *)result + 8) = sub_22AAEABB0();
    sub_22AAEAD0C(v9, v16);
    *((_QWORD *)v8 + 9) = v17;
    return sub_22AAEACAC;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_22AAEACAC(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  OUTLINED_FUNCTION_4_66();
  OUTLINED_FUNCTION_0_2(v1);
}

void sub_22AAEACDC(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 88))(*(_QWORD *)a1 + 32, 0);
  OUTLINED_FUNCTION_4_66();
  OUTLINED_FUNCTION_0_2(v1);
}

void sub_22AAEAD0C(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  v4 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_22AB88468();
    v4 = v6;
    *v2 = v6;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v4 + 16) <= a2)
LABEL_7:
    __break(1u);
}

void sub_22AAEAD7C(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  v4 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_22AB88498();
    v4 = v6;
    *v2 = v6;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v4 + 16) <= a2)
LABEL_7:
    __break(1u);
}

uint64_t sub_22AAEADEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22ABDD2EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_34();
  sub_22AAEAADC(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B10000);
  sub_22A9A0B88(&qword_255B10060, &qword_255B10000);
  sub_22ABDD2D4();
  swift_bridgeObjectRelease();
  sub_22AAED4A8(a1, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
}

void sub_22AAEAEF8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v5 = a4;
  v6 = a3;
  v7 = a2;
  v8 = a1;
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    sub_22ABDEAEC();
    v11 = 0;
    v24 = v7;
    v12 = (unsigned __int8 *)(v7 + 56);
    v13 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v14 = *((_QWORD *)v12 - 1);
      v15 = *v12;
      sub_22ABDEAEC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22AA35C20();
        v13 = v19;
      }
      v16 = *(_QWORD *)(v13 + 16);
      if (v16 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_22AA35C20();
        v13 = v20;
      }
      *(_QWORD *)(v13 + 16) = v16 + 1;
      *(_QWORD *)(v13 + 8 * v16 + 32) = v11;
      swift_bridgeObjectRelease();
      v17 = v15 >= 4 ? 1 : v14;
      v18 = __OFADD__(v11, v17);
      v11 += v17;
      if (v18)
        break;
      v12 += 32;
      if (!--v10)
      {
        v7 = v24;
        swift_bridgeObjectRelease();
        v5 = a4;
        v8 = a1;
        v6 = a3;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v11 = 0;
  v13 = MEMORY[0x24BEE4AF8];
LABEL_14:
  v21 = v8 * v11;
  if ((unsigned __int128)(v8 * (__int128)v11) >> 64 != (v8 * v11) >> 63)
    goto LABEL_21;
  if (v21 < 0)
  {
LABEL_22:
    __break(1u);
    return;
  }
  if (v21)
  {
    v22 = sub_22ABDF074();
    *(_QWORD *)(v22 + 16) = v21;
    memset_pattern16((void *)(v22 + 32), &unk_22ABF8E80, 4 * v11 * v8);
  }
  else
  {
    v22 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)a5 = v6;
  *(_QWORD *)(a5 + 8) = v5;
  *(_QWORD *)(a5 + 16) = v7;
  *(_QWORD *)(a5 + 24) = v13;
  *(_QWORD *)(a5 + 32) = v8;
  *(_QWORD *)(a5 + 40) = v11;
  *(_BYTE *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = v22;
}

void sub_22AAEB0B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (**v20)(uint64_t);
  uint64_t v21;
  char *v22;
  void (**v23)(uint64_t);
  char *v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, _QWORD);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42[4];
  _BYTE v43[32];
  _BYTE v44[32];
  void (*v45)(uint64_t);
  uint64_t v46;
  void (**v47)(uint64_t);

  v4 = v2;
  v7 = sub_22ABDD400();
  v41 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16DF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16DF8);
  MEMORY[0x24BDAC7A8](v12);
  v47 = (void (**)(uint64_t))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = *(_QWORD *)(v4 + 16);
  if (*(_QWORD *)(v14 + 16) <= a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v15 = *(_QWORD *)(v4 + 24);
  if (*(_QWORD *)(v15 + 16) > a2)
  {
    v16 = v14 + 32 * a2;
    v17 = *(_QWORD *)(v16 + 40);
    v37 = *(_QWORD *)(v16 + 32);
    v36 = *(_QWORD *)(v16 + 48);
    v35 = *(unsigned __int8 *)(v16 + 56);
    v34 = *(_QWORD *)(v15 + 8 * a2 + 32);
    v18 = &v11[*(int *)(v9 + 52)];
    v19 = v41;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    v33(v18, a1, v7);
    v20 = v47;
    *v47 = 0;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v40, v18, v7);
    v21 = v12;
    v22 = (char *)v20 + *(int *)(v12 + 52);
    sub_22AAEDA0C(&qword_255B16E00);
    v39 = v17;
    sub_22ABDEAEC();
    sub_22ABDEE58();
    v23 = v20;
    v38 = *(int *)(v21 + 56);
    *((_BYTE *)v20 + v38) = 0;
    v24 = &v22[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B16E08) + 36)];
    v32 = &v46;
    while (1)
    {
      v25 = *v23;
      if (__OFADD__(*v23, 1))
        break;
      v26 = v4;
      *v23 = (void (*)(uint64_t))((char *)*v23 + 1);
      v27 = *(_QWORD *)v24;
      sub_22AAEDA0C(&qword_255B16E10);
      sub_22ABDF38C();
      if (v27 == v42[0])
      {
        v23 = v47;
        *((_BYTE *)v47 + v38) = 1;
LABEL_11:
        sub_22A9CF82C((uint64_t)v23, &qword_255B16DF8);
        swift_bridgeObjectRelease();
        return;
      }
      v28 = (void (*)(uint64_t *, _QWORD))sub_22ABDF464();
      sub_22AAEDA40(v29, (uint64_t)v43);
      v28(v42, 0);
      v30 = v40;
      v33(v40, (uint64_t)v22, v7);
      sub_22ABDF398();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v7);
      sub_22AAEDA88((uint64_t)v43, (uint64_t)v44);
      v45 = v25;
      v31 = (uint64_t)v32;
      sub_22AAEDA88((uint64_t)v44, (uint64_t)v32);
      sub_22AAEDA88(v31, (uint64_t)v44);
      v4 = v26;
      sub_22AAEB498((uint64_t)v44, v37, v39, v36, v35, v25, v34);
      if (v3)
      {
        swift_bridgeObjectRelease();
        sub_22A9CF82C((uint64_t)v44, qword_2540E86F8);
        sub_22A9CF82C((uint64_t)v47, &qword_255B16DF8);
        return;
      }
      sub_22A9CF82C((uint64_t)v44, qword_2540E86F8);
      v23 = v47;
      if ((*((_BYTE *)v47 + v38) & 1) != 0)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
}

void sub_22AAEB498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, void (*a6)(uint64_t a1), uint64_t a7)
{
  uint64_t *v7;
  uint64_t *v8;
  __int128 *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  float v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  float v29;
  float v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  float *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  float *v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _BYTE v53[32];
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;

  v8 = v7;
  sub_22AAEDA40(a1, (uint64_t)&v54);
  if (!v55)
  {
    sub_22A9CF82C((uint64_t)&v54, qword_2540E86F8);
    return;
  }
  sub_22A9C38BC(&v54, &v56);
  if (a5 >= 4u)
  {
    if (a4)
    {
      sub_22A9E7618((uint64_t)&v56, (uint64_t)v53);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E18);
      if (swift_dynamicCast())
      {
        sub_22A9A1880(&v50, (uint64_t)&v54);
        v16 = v55;
        v17 = __swift_project_boxed_opaque_existential_1(&v54, v55);
        v48 = (uint64_t)&v48;
        v18 = *(_QWORD *)(v16 - 8);
        MEMORY[0x24BDAC7A8](v17);
        v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v18 + 16))(v20);
        if (sub_22ABDF6B0() < 65)
        {
          v49 = a6;
          v36 = sub_22ABDF6BC();
          v37 = sub_22ABDF6A4();
          (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
          if ((v36 & 1) != 0)
            v21 = (float)v37;
          else
            v21 = (float)(unint64_t)v37;
          a6 = v49;
        }
        else
        {
          sub_22AA10574();
          sub_22AAEE154();
          sub_22ABDEA74();
          (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
          v21 = *(float *)&v50;
        }
        goto LABEL_28;
      }
      v52 = 0;
      v50 = 0u;
      v51 = 0u;
      sub_22A9CF82C((uint64_t)&v50, &qword_255B16E20);
      sub_22A9E7618((uint64_t)&v56, (uint64_t)v53);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E28);
      if (!swift_dynamicCast())
      {
        v52 = 0;
        v50 = 0u;
        v51 = 0u;
        sub_22A9CF82C((uint64_t)&v50, &qword_255B16E30);
        sub_22A9E7618((uint64_t)&v56, (uint64_t)&v54);
        sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8628);
        if (swift_dynamicCast())
        {
          v28 = (void *)v50;
          objc_msgSend((id)v50, sel_floatValue);
          v30 = v29;
LABEL_24:
          v39 = sub_22AAEABC0((void (**)(uint64_t))&v54, (uint64_t)a6, a7);
          *v40 = v30;
          ((void (*)(__int128 *, _QWORD))v39)(&v54, 0);

          goto LABEL_4;
        }
        goto LABEL_25;
      }
    }
    else
    {
      sub_22A9E7618((uint64_t)&v56, (uint64_t)v53);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E18);
      if (swift_dynamicCast())
      {
        v49 = a6;
        sub_22A9A1880(&v50, (uint64_t)&v54);
        v22 = v55;
        v23 = __swift_project_boxed_opaque_existential_1(&v54, v55);
        v24 = *(_QWORD *)(v22 - 8);
        MEMORY[0x24BDAC7A8](v23);
        v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v24 + 16))(v26);
        if (sub_22ABDF6B0() < 65)
        {
          LODWORD(v48) = sub_22ABDF6BC();
          v38 = sub_22ABDF6A4();
          (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v22);
          v27 = (uint64_t)v49;
          if ((v48 & 1) != 0)
            v21 = (float)v38;
          else
            v21 = (float)(unint64_t)v38;
        }
        else
        {
          sub_22AA10574();
          sub_22AAEE154();
          sub_22ABDEA74();
          (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v22);
          v21 = *(float *)&v50;
          v27 = (uint64_t)v49;
        }
        goto LABEL_30;
      }
      v52 = 0;
      v50 = 0u;
      v51 = 0u;
      sub_22A9CF82C((uint64_t)&v50, &qword_255B16E20);
      sub_22A9E7618((uint64_t)&v56, (uint64_t)v53);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E28);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v52 = 0;
        v50 = 0u;
        v51 = 0u;
        sub_22A9CF82C((uint64_t)&v50, &qword_255B16E30);
        sub_22A9E7618((uint64_t)&v56, (uint64_t)&v54);
        sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8628);
        if (swift_dynamicCast())
        {
          v28 = (void *)v50;
          v30 = (float)(uint64_t)objc_msgSend((id)v50, sel_integerValue);
          goto LABEL_24;
        }
LABEL_25:
        v42 = *v8;
        v41 = v8[1];
        *(_QWORD *)&v54 = 0;
        *((_QWORD *)&v54 + 1) = 0xE000000000000000;
        sub_22ABDEAEC();
        sub_22ABDF7A0();
        sub_22ABDEDC8();
        sub_22ABDEAEC();
        sub_22ABDEDC8();
        swift_bridgeObjectRelease();
        sub_22ABDEDC8();
        __swift_project_boxed_opaque_existential_1(&v56, v57);
        swift_getDynamicType();
        sub_22ABE0304();
        sub_22ABDEDC8();
        swift_bridgeObjectRelease();
        sub_22ABDEDC8();
        *(_QWORD *)&v50 = a6;
        sub_22ABDFD7C();
        sub_22ABDEDC8();
        swift_bridgeObjectRelease();
        v43 = v54;
        sub_22A9B7B50();
        v44 = swift_allocError();
        *(_QWORD *)v45 = v42;
        *(_QWORD *)(v45 + 8) = v41;
        *(_OWORD *)(v45 + 16) = v43;
        *(_BYTE *)(v45 + 32) = 4;
        swift_willThrow(v44);
        goto LABEL_4;
      }
    }
    sub_22A9A1880(&v50, (uint64_t)&v54);
    v31 = v55;
    v32 = __swift_project_boxed_opaque_existential_1(&v54, v55);
    MEMORY[0x24BDAC7A8](v32);
    v34 = (char *)&v48 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v34);
    v21 = sub_22AAEDAD0((uint64_t)v34, v31);
LABEL_28:
    v27 = (uint64_t)a6;
LABEL_30:
    v46 = sub_22AAEABC0((void (**)(uint64_t))&v50, v27, a7);
    *v47 = v21;
    ((void (*)(__int128 *, _QWORD))v46)(&v50, 0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
    v15 = &v54;
    goto LABEL_31;
  }
  sub_22AAEBBE8((uint64_t)&v56, a2, a3, a4, a5, a4, a6, a7);
LABEL_4:
  v15 = &v56;
LABEL_31:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

void sub_22AAEBBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, void (*a7)(uint64_t a1), uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  int EnumTagSinglePayload;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  int v63;
  uint64_t v64;
  void (*v65)(uint64_t);
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  uint64_t *v105;
  __int128 v106[2];
  _BYTE v107[32];
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t);

  v101 = a8;
  v102 = a6;
  v112 = a7;
  v104 = a5;
  v103 = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E40);
  MEMORY[0x24BDAC7A8](v11);
  v91 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B123A8);
  v90 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v89 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8560);
  MEMORY[0x24BDAC7A8](v14);
  v99 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v97 = *(_QWORD *)(v100 - 8);
  v16 = MEMORY[0x24BDAC7A8](v100);
  v96 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v93 = (char *)&v88 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v95 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v94 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8580);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22A9E7618(a1, (uint64_t)v107);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E48);
  if (swift_dynamicCast())
  {
    sub_22A9A1880(v106, (uint64_t)&v108);
    v30 = v110;
    v31 = v111;
    v32 = a3;
    v33 = __swift_project_boxed_opaque_existential_1(&v108, v110);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E68);
    v35 = sub_22AA204C4();
    sub_22AA1CEDC((uint64_t)v33, a2, v32, v103, v104, v102, (uint64_t)v112, v101, v34, v30, MEMORY[0x24BEE1768], v31, v35);
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
    return;
  }
  v88 = a3;
  sub_22A9E7618(a1, (uint64_t)v107);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E50);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_22A9A1880(v106, (uint64_t)&v108);
    v36 = v110;
    v37 = (_QWORD *)v111;
    v38 = __swift_project_boxed_opaque_existential_1(&v108, v110);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E68);
    v87 = sub_22AA10574();
    v40 = MEMORY[0x24BEE14E8];
LABEL_7:
    v85 = v40;
    v86 = v37;
    v83 = v39;
    v84 = v36;
    v41 = (uint64_t)v38;
    v42 = a2;
    v43 = v88;
    v45 = v102;
    v44 = v103;
    v46 = v104;
    v47 = v112;
    v48 = v101;
LABEL_8:
    sub_22AA1D294(v41, v42, v43, v44, v46, v45, (uint64_t)v47, v48, v83, v84, v85, v86, v87);
    goto LABEL_9;
  }
  sub_22A9E7618(a1, (uint64_t)v107);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E58);
  if (swift_dynamicCast())
  {
    sub_22A9A1880(v106, (uint64_t)&v108);
    v36 = v110;
    v37 = (_QWORD *)v111;
    v38 = __swift_project_boxed_opaque_existential_1(&v108, v110);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E68);
    v87 = sub_22A99CE8C();
    v40 = MEMORY[0x24BEE13C8];
    goto LABEL_7;
  }
  sub_22A9E7618(a1, (uint64_t)&v108);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v26);
    if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v25, v26);
      sub_22AAEC70C((uint64_t)v29, a2, v88, v103, v104, v102, (uint64_t)v112, v101);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
      return;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v26);
  }
  sub_22A9CF82C((uint64_t)v25, &qword_2540E8580);
  v49 = (_QWORD *)a1;
  sub_22A9E7618(a1, (uint64_t)&v108);
  v50 = v98;
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v50);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v50);
    v52 = v105;
    v53 = v104;
    v54 = v103;
    v55 = (uint64_t)v99;
    if (EnumTagSinglePayload != 1)
    {
      v56 = v95;
      v57 = v103;
      v58 = (uint64_t)v94;
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v21, v50);
      sub_22AAECA74(v58, a2, v88, v57, v53, v102, v112, v101);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v58, v50);
      return;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v50);
    v52 = v105;
    v53 = v104;
    v54 = v103;
    v55 = (uint64_t)v99;
  }
  sub_22A9CF82C((uint64_t)v21, &qword_2540E8570);
  sub_22A9E7618(a1, (uint64_t)&v108);
  v59 = v100;
  if (!swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload(v55, 1, 1, v59);
LABEL_25:
    sub_22A9CF82C(v55, &qword_2540E8560);
    sub_22A9E7618(a1, (uint64_t)&v108);
    sub_22A9BEDCC(0, &qword_255B10788);
    v63 = swift_dynamicCast();
    v64 = v102;
    if (v63)
    {
      v65 = v112;
      v66 = *(id *)&v106[0];
      v67 = (uint64_t)v96;
      sub_22ABDE8B8();
      sub_22AAECDD8(v67, a2, v88, v54, v53, v64, (uint64_t)v65, v101);
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v67, v100);

      return;
    }
    sub_22A9E7618((uint64_t)v49, (uint64_t)v107);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E60);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_22A9A1880(v106, (uint64_t)&v108);
      v68 = v53;
      v69 = v64;
      v70 = v110;
      v71 = (_QWORD *)v111;
      v72 = v54;
      v73 = __swift_project_boxed_opaque_existential_1(&v108, v110);
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E68);
      v87 = sub_22AAEE190();
      v85 = MEMORY[0x24BEE4678];
      v86 = v71;
      v83 = v74;
      v84 = v70;
      v41 = (uint64_t)v73;
      v42 = a2;
      v43 = v88;
      v44 = v72;
      v46 = v68;
      v45 = v69;
      v47 = v112;
      v48 = v101;
      goto LABEL_8;
    }
    sub_22A9E7618((uint64_t)v49, (uint64_t)&v108);
    v75 = (uint64_t)v91;
    v59 = v92;
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_storeEnumTagSinglePayload(v75, 0, 1, v59);
      if (__swift_getEnumTagSinglePayload(v75, 1, v59) != 1)
      {
        v76 = v90;
        v61 = (uint64_t)v89;
        (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v89, v75, v59);
        sub_22AAED140(v61, a2, v88, v54, v53, v64, (uint64_t)v112, v101);
        v62 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
        goto LABEL_22;
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload(v75, 1, 1, v59);
    }
    sub_22A9CF82C(v75, &qword_255B16E40);
    v78 = *v52;
    v77 = v52[1];
    v108 = 0;
    v109 = 0xE000000000000000;
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    sub_22ABDEAEC();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    __swift_project_boxed_opaque_existential_1(v49, v49[3]);
    swift_getDynamicType();
    sub_22ABE0304();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    *(_QWORD *)&v106[0] = v112;
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    v79 = v108;
    v80 = v109;
    sub_22A9B7B50();
    v81 = swift_allocError();
    *(_QWORD *)v82 = v78;
    *(_QWORD *)(v82 + 8) = v77;
    *(_QWORD *)(v82 + 16) = v79;
    *(_QWORD *)(v82 + 24) = v80;
    *(_BYTE *)(v82 + 32) = 4;
    swift_willThrow(v81);
    return;
  }
  __swift_storeEnumTagSinglePayload(v55, 0, 1, v59);
  if (__swift_getEnumTagSinglePayload(v55, 1, v59) == 1)
    goto LABEL_25;
  v60 = v97;
  v61 = (uint64_t)v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v93, v55, v59);
  sub_22AAECDD8(v61, a2, v88, v54, v53, v102, (uint64_t)v112, v101);
  v62 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
LABEL_22:
  v62(v61, v59);
}

uint64_t sub_22AAEC70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t inited;
  _QWORD *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  float v17;
  void (*v18)(uint64_t);
  float *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  void (*v26[5])(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(inited + 32) = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
  v12 = (_QWORD *)sub_22ABDE84C();
  v13 = sub_22A99EB90((_QWORD *)inited, v12);
  swift_bridgeObjectRelease();
  result = swift_setDeallocating();
  if ((v13 & 1) == 0)
  {
    v20 = (void (*)(uint64_t))a7;
    v21 = v8[1];
    v25 = *v8;
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDEAEC();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDE84C();
    MEMORY[0x22E2E3298]();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    v26[4] = v20;
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22A9B7B50();
    v22 = swift_allocError();
    *(_QWORD *)v23 = v25;
    *(_QWORD *)(v23 + 8) = v21;
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v23 + 24) = 0xE000000000000000;
    *(_BYTE *)(v23 + 32) = 4;
    return swift_willThrow(v22);
  }
  if (a6 < 0)
    goto LABEL_10;
  if (a6)
  {
    v15 = 0;
    while (!__OFADD__(a8, v15))
    {
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_22ABE8E30;
      *(_QWORD *)(v16 + 32) = v15;
      sub_22A9A0B88(&qword_255B13BD8, &qword_2540E8578);
      sub_22ABDE93C();
      swift_bridgeObjectRelease();
      v17 = (float)SLODWORD(v26[0]);
      v18 = sub_22AAEABC0(v26, a7, a8 + v15);
      *v19 = v17;
      result = ((uint64_t (*)(void (**)(uint64_t), _QWORD))v18)(v26, 0);
      if (a6 == ++v15)
        return result;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_22AAECA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t a1), uint64_t a8)
{
  uint64_t *v8;
  uint64_t inited;
  _QWORD *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void (*v18)(uint64_t);
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25[5])(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(inited + 32) = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  v12 = (_QWORD *)sub_22ABDE84C();
  v13 = sub_22A99EB90((_QWORD *)inited, v12);
  swift_bridgeObjectRelease();
  result = swift_setDeallocating();
  if ((v13 & 1) != 0)
  {
    if (a6 < 0)
    {
LABEL_11:
      __break(1u);
      return result;
    }
    if (a6)
    {
      v15 = 0;
      while (!__OFADD__(a8, v15))
      {
        v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_22ABE8E30;
        *(_QWORD *)(v16 + 32) = v15;
        sub_22A9A0B88(&qword_255B0DAF8, &qword_2540E8568);
        sub_22ABDE93C();
        swift_bridgeObjectRelease();
        v17 = (int)v25[0];
        v18 = sub_22AAEABC0(v25, (uint64_t)a7, a8 + v15);
        *v19 = v17;
        result = ((uint64_t (*)(void (**)(uint64_t), _QWORD))v18)(v25, 0);
        if (a6 == ++v15)
          return result;
      }
      __break(1u);
      goto LABEL_11;
    }
  }
  else
  {
    v20 = *v8;
    v21 = v8[1];
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDEAEC();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDE84C();
    MEMORY[0x22E2E3298]();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    v25[4] = a7;
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22A9B7B50();
    v22 = swift_allocError();
    *(_QWORD *)v23 = v20;
    *(_QWORD *)(v23 + 8) = v21;
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v23 + 24) = 0xE000000000000000;
    *(_BYTE *)(v23 + 32) = 4;
    return swift_willThrow(v22);
  }
  return result;
}

uint64_t sub_22AAECDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t inited;
  _QWORD *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  float v17;
  void (*v18)(uint64_t);
  float *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  void (*v26[5])(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(inited + 32) = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  v12 = (_QWORD *)sub_22ABDE84C();
  v13 = sub_22A99EB90((_QWORD *)inited, v12);
  swift_bridgeObjectRelease();
  result = swift_setDeallocating();
  if ((v13 & 1) == 0)
  {
    v20 = (void (*)(uint64_t))a7;
    v21 = v8[1];
    v25 = *v8;
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDEAEC();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDE84C();
    MEMORY[0x22E2E3298]();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    v26[4] = v20;
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22A9B7B50();
    v22 = swift_allocError();
    *(_QWORD *)v23 = v25;
    *(_QWORD *)(v23 + 8) = v21;
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v23 + 24) = 0xE000000000000000;
    *(_BYTE *)(v23 + 32) = 4;
    return swift_willThrow(v22);
  }
  if (a6 < 0)
    goto LABEL_10;
  if (a6)
  {
    v15 = 0;
    while (!__OFADD__(a8, v15))
    {
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_22ABE8E30;
      *(_QWORD *)(v16 + 32) = v15;
      sub_22A9A0B88(&qword_2540E8538, &qword_2540E8550);
      sub_22ABDE93C();
      swift_bridgeObjectRelease();
      v17 = *(double *)v26;
      v18 = sub_22AAEABC0(v26, a7, a8 + v15);
      *v19 = v17;
      result = ((uint64_t (*)(void (**)(uint64_t), _QWORD))v18)(v26, 0);
      if (a6 == ++v15)
        return result;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_22AAED140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t inited;
  _QWORD *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  void (*v23)(uint64_t);
  _DWORD *v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  void (*v31[5])(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  *(_QWORD *)(inited + 32) = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B123A8);
  v12 = (_QWORD *)sub_22ABDE84C();
  v13 = sub_22A99EB90((_QWORD *)inited, v12);
  swift_bridgeObjectRelease();
  result = swift_setDeallocating();
  if ((v13 & 1) == 0)
  {
    v25 = (void (*)(uint64_t))a7;
    v26 = v8[1];
    v30 = *v8;
    sub_22ABDEAEC();
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDEAEC();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22ABDE84C();
    MEMORY[0x22E2E3298]();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    v31[4] = v25;
    sub_22ABDFD7C();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    sub_22A9B7B50();
    v27 = swift_allocError();
    *(_QWORD *)v28 = v30;
    *(_QWORD *)(v28 + 8) = v26;
    *(_QWORD *)(v28 + 16) = 0;
    *(_QWORD *)(v28 + 24) = 0xE000000000000000;
    *(_BYTE *)(v28 + 32) = 4;
    return swift_willThrow(v27);
  }
  if (a6 < 0)
    goto LABEL_10;
  if (a6)
  {
    v15 = 0;
    while (!__OFADD__(a8, v15))
    {
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_22ABE8E30;
      *(_QWORD *)(v16 + 32) = v15;
      sub_22A9A0B88(&qword_255B16E78, &qword_255B123A8);
      sub_22ABDE93C();
      swift_bridgeObjectRelease();
      _H0 = (__int16)v31[0];
      __asm { FCVT            S8, H0 }
      v23 = sub_22AAEABC0(v31, a7, a8 + v15);
      *v24 = _S8;
      result = ((uint64_t (*)(void (**)(uint64_t), _QWORD))v23)(v31, 0);
      if (a6 == ++v15)
        return result;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_22AAED4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[8];
  __int128 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v5 = v4;
  v28 = sub_22ABDD400();
  v10 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22ABDD274();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22AAEAEF8(v13, a1, a2, a3, (uint64_t)v24);
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v22 = a4;
    v15 = 0;
    v23 = sub_22ABDEAEC();
    v16 = (uint64_t *)(v23 + 40);
    while (1)
    {
      v17 = *(v16 - 1);
      v18 = *v16;
      sub_22ABDEAEC();
      MEMORY[0x22E2E15A0](v17, v18);
      swift_bridgeObjectRelease();
      sub_22AAEB0B0((uint64_t)v12, v15);
      if (v5)
        break;
      v16 += 4;
      ++v15;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v28);
      if (v14 == v15)
      {
        swift_bridgeObjectRelease();
        a4 = v22;
        goto LABEL_6;
      }
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v28);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_6:
    v19 = v26;
    v20 = v27;
    *(_OWORD *)a4 = v25;
    *(_BYTE *)(a4 + 16) = v19;
    *(_QWORD *)(a4 + 24) = v20;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AAED660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = sub_22ABDD400();
  v22 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_33();
  v21 = v2 - v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A90);
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B10AD8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_33();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A88);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_33();
  v16 = v15 - v14;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16DD8);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_34();
  sub_22ABDD3E8();
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_90_6();
    sub_22ABDD394();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
LABEL_5:
    sub_22A9A0B88(&qword_255B16DE0, &qword_255B13A88);
    OUTLINED_FUNCTION_0_71();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
LABEL_6:
    sub_22A9A0B88(&qword_255B16DE8, &qword_255B16DD8);
    return sub_22ABDEE7C();
  }
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_90_6();
    goto LABEL_5;
  }
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_90_6();
    sub_22ABDD394();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v6, v20);
    sub_22A9A0B88(&qword_255B16DE0, &qword_255B13A88);
    OUTLINED_FUNCTION_0_71();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v21, v0, v18);
  sub_22ABDF7A0();
  swift_bridgeObjectRelease();
  sub_22ABDD3F4();
  sub_22ABDEDC8();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  result = sub_22ABDFADC();
  __break(1u);
  return result;
}

float sub_22AAED9E4@<S0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  float result;

  result = *a1;
  *(float *)a2 = result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_22AAED9F8@<S0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  float result;

  result = (float)*a1;
  *(float *)a2 = result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_22AAEDA0C(_QWORD *a1)
{
  if (!*a1)
  {
    sub_22ABDD400();
    OUTLINED_FUNCTION_61();
  }
  OUTLINED_FUNCTION_0_5();
}

uint64_t sub_22AAEDA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E86F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AAEDA88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2540E86F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

float sub_22AAEDAD0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  int v29;
  char *v31;
  uint64_t v32;
  int v33;
  double v34;
  uint64_t v35;
  int v36;
  uint64_t v38;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  __int16 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  float v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;

  v68 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v66 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v67 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v65 = (char *)&v60 - v4;
  v5 = swift_getAssociatedTypeWitness();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v62 = (char *)&v60 - v7;
  v8 = *(_QWORD *)(a2 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v61 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v60 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v60 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v60 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v60 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v60 - v23;
  v25 = sub_22ABDEA14();
  v26 = sub_22ABDEA2C();
  if (v25 == 11)
  {
    if (v26 == 52)
    {
      v32 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v24, v68, a2);
      v33 = swift_dynamicCast();
      v34 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v22, v32, a2);
      if (v33)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v22, a2);
      }
      else
      {
        v48 = sub_22ABDEBAC();
        v49 = v62;
        sub_22ABDEA20();
        v50 = v64;
        swift_getAssociatedConformanceWitness();
        v51 = sub_22ABDF6A4();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v49, v50);
        v52 = v65;
        sub_22ABDEA38();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v22, a2);
        v53 = v67;
        swift_getAssociatedConformanceWitness();
        v54 = sub_22ABDF6A4();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v52, v53);
        *(_QWORD *)&v34 = (v48 << 63) | ((unint64_t)(v51 & 0x7FF) << 52) | v54 & 0xFFFFFFFFFFFFFLL;
      }
      return v34;
    }
LABEL_16:
    sub_22AA10574();
    v38 = v68;
    sub_22ABDEA44();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v38, a2);
    return *(float *)&v69;
  }
  if (v25 == 8)
  {
    if (v26 == 23)
    {
      v35 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v19, v68, a2);
      v36 = swift_dynamicCast();
      _S8 = *(float *)&v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v16, v35, a2);
      if (v36)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v16, a2);
      }
      else
      {
        sub_22ABDEBAC();
        v55 = v62;
        sub_22ABDEA20();
        v56 = v64;
        swift_getAssociatedConformanceWitness();
        sub_22ABDF6A4();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v55, v56);
        v57 = v65;
        sub_22ABDEA38();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v16, a2);
        v58 = v67;
        swift_getAssociatedConformanceWitness();
        sub_22ABDF6A4();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v57, v58);
        sub_22ABDF254();
        return v59;
      }
      return _S8;
    }
    goto LABEL_16;
  }
  if (v25 != 5 || v26 != 10)
    goto LABEL_16;
  v28 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v68, a2);
  v29 = swift_dynamicCast();
  _H8 = LOWORD(v69);
  v31 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v61, v28, a2);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v31, a2);
  }
  else
  {
    sub_22ABDEBAC();
    v40 = v62;
    sub_22ABDEA20();
    v41 = v64;
    swift_getAssociatedConformanceWitness();
    sub_22ABDF6A4();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v41);
    v42 = v65;
    sub_22ABDEA38();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v31, a2);
    v43 = v67;
    swift_getAssociatedConformanceWitness();
    sub_22ABDF6A4();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v43);
    sub_22ABE02BC();
    _H8 = v44;
  }
  __asm { FCVT            S8, H8 }
  return _S8;
}

unint64_t sub_22AAEE154()
{
  unint64_t result;

  result = qword_255B16E38;
  if (!qword_255B16E38)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE4540], MEMORY[0x24BEE44F0]);
    atomic_store(result, (unint64_t *)&qword_255B16E38);
  }
  return result;
}

unint64_t sub_22AAEE190()
{
  unint64_t result;

  result = qword_255B16E70;
  if (!qword_255B16E70)
  {
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE4680], MEMORY[0x24BEE4678]);
    atomic_store(result, (unint64_t *)&qword_255B16E70);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_71()
{
  return sub_22ABDD328();
}

uint64_t OUTLINED_FUNCTION_4_66()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(v0, 0);
}

uint64_t sub_22AAEE1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;

  v41 = a2;
  v36 = sub_22ABDDD78();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  v42 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E80);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  v35 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  v39 = v8;
  v37 = sub_22ABDD4F0();
  v9 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - v13;
  v15 = sub_22ABDDA0C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v35 - v20;
  OUTLINED_FUNCTION_3_80();
  sub_22ABDD964();
  v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  v38 = v21;
  v22(v21, v15);
  sub_22ABDD508();
  v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24 = v14;
  v25 = v37;
  v23(v24, v37);
  OUTLINED_FUNCTION_3_80();
  sub_22ABDD964();
  v40 = v22;
  v22(v18, v15);
  sub_22ABDD508();
  v26 = v11;
  v27 = v39;
  v23(v26, v25);
  sub_22ABDDDB4();
  sub_22ABDD784();
  if (__swift_getEnumTagSinglePayload(v27, 1, v15) == 1)
  {
    sub_22AAEE514(v27);
    sub_22ABDDDCC();
    v28 = v40;
  }
  else
  {
    OUTLINED_FUNCTION_2_74();
    v29 = v27;
    v30 = v40;
    v40((char *)v29, v15);
    sub_22ABDDDCC();
    v31 = v35;
    sub_22ABDDD84();
    __swift_storeEnumTagSinglePayload(v31, 0, 1, v36);
    sub_22ABDDDC0();
    v28 = v30;
  }
  v32 = v38;
  OUTLINED_FUNCTION_3_80();
  OUTLINED_FUNCTION_2_74();
  v28(v32, v15);
  sub_22ABDDD84();
  sub_22ABDDDD8();
  v33 = sub_22ABDD7D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a1, v33);
}

uint64_t sub_22AAEE514(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_2_74()
{
  return sub_22ABDD9C4();
}

uint64_t OUTLINED_FUNCTION_3_80()
{
  return sub_22ABDD7A8();
}

uint64_t TemporalTransformer.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9[16] = a8;
  v9[17] = v8;
  OUTLINED_FUNCTION_41_23(a1, a2, a3, a4, a5, a6, a7);
  v9[18] = v11;
  v9[19] = OUTLINED_FUNCTION_0_0();
  v9[20] = swift_getAssociatedTypeWitness();
  v9[21] = OUTLINED_FUNCTION_0_0();
  v12 = OUTLINED_FUNCTION_37_29();
  v9[22] = v12;
  v9[23] = *(_QWORD *)(v12 - 8);
  v9[24] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v9[25] = OUTLINED_FUNCTION_0_0();
  v9[26] = *(_QWORD *)(a5 - 8);
  v9[27] = OUTLINED_FUNCTION_0_0();
  v13 = OUTLINED_FUNCTION_37_29();
  v9[28] = v13;
  v9[29] = *(_QWORD *)(v13 - 8);
  v9[30] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22AAEE66C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t (*v8)(void);

  v2 = OUTLINED_FUNCTION_40_22();
  OUTLINED_FUNCTION_19_22(v2);
  v1[23] = OUTLINED_FUNCTION_47_10();
  OUTLINED_FUNCTION_62_7();
  OUTLINED_FUNCTION_33_17();
  OUTLINED_FUNCTION_30_16();
  v3 = v1[17];
  v4 = v1[14];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_60_0();
  if (__swift_getEnumTagSinglePayload(v3, 1, v4) == 1)
  {
    OUTLINED_FUNCTION_18_55();
    v5 = *(_QWORD *)(v0 + 64);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_1_26(v5, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_39_29(*(_QWORD *)(v0 + 184));
    sub_22ABDF1DC();
    v7 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_17_49(v7);
    return OUTLINED_FUNCTION_9_62(v8);
  }
}

uint64_t sub_22AAEE7BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

void sub_22AAEE81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 80);
  sub_22ABDF0C8();
  if (v1)
  {
    v19 = *(_QWORD *)(v0 + 184);
    v20 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 192);
    v2 = *(_QWORD *)(v0 + 160);
    v3 = *(void (**)(void))(v0 + 80);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 16))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 96));
    swift_retain();
    v18 = sub_22ABDED80();
    v5 = v4;
    v6 = sub_22ABDEAEC();
    v7 = MEMORY[0x22E2E3340](v6, v2);
    swift_bridgeObjectRelease();
    v8 = sub_22ABDEE70();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
    sub_22A9ADA0C();
    v9 = sub_22ABDEAC8();
    *(_QWORD *)(v0 + 16) = v18;
    *(_QWORD *)(v0 + 24) = v5;
    *(_QWORD *)(v0 + 32) = v7;
    *(_QWORD *)(v0 + 40) = v8;
    *(_BYTE *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = v9;
    v3();
    sub_22A9ADA48((uint64_t)v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  }
  v10 = *(_QWORD *)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 176);
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_60_0();
  if (__swift_getEnumTagSinglePayload(v11, 1, v12) == 1)
  {
    OUTLINED_FUNCTION_18_55();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_92();
    __asm { BR              X1 }
  }
  OUTLINED_FUNCTION_39_29(*(_QWORD *)(v0 + 184));
  sub_22ABDF1DC();
  if (v10)
  {
    v14 = *(_QWORD *)(v0 + 232);
    OUTLINED_FUNCTION_12_57();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_27_39();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_92();
    __asm { BR              X0 }
  }
  v16 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_17_49(v16);
  OUTLINED_FUNCTION_92();
  __asm { BR              X8 }
}

uint64_t sub_22AAEEAA4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  OUTLINED_FUNCTION_12_57();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TemporalTransformer.applied<A, B, C>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v9[18] = v21;
  v9[19] = v8;
  v9[16] = a8;
  v9[17] = v20;
  OUTLINED_FUNCTION_41_23(a1, a2, a3, a4, a5, a6, a7);
  v9[20] = v13;
  v9[21] = OUTLINED_FUNCTION_0_0();
  v9[22] = OUTLINED_FUNCTION_0_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[23] = AssociatedTypeWitness;
  v9[24] = type metadata accessor for AnnotatedFeature(0, AssociatedTypeWitness, a7, v15);
  v9[25] = OUTLINED_FUNCTION_0_0();
  v9[26] = *(_QWORD *)(a6 - 8);
  v9[27] = OUTLINED_FUNCTION_0_0();
  v9[28] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[29] = swift_task_alloc();
  v9[30] = swift_task_alloc();
  v17 = type metadata accessor for AnnotatedFeature(0, a6, a7, v16);
  v9[31] = v17;
  v9[32] = *(_QWORD *)(v17 - 8);
  v9[33] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v9[34] = OUTLINED_FUNCTION_0_0();
  v9[35] = *(_QWORD *)(a5 - 8);
  v9[36] = OUTLINED_FUNCTION_0_0();
  v18 = swift_getAssociatedTypeWitness();
  v9[37] = v18;
  v9[38] = *(_QWORD *)(v18 - 8);
  v9[39] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22AAEECA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v2 = OUTLINED_FUNCTION_40_22();
  OUTLINED_FUNCTION_19_22(v2);
  v1[32] = OUTLINED_FUNCTION_47_10();
  OUTLINED_FUNCTION_62_7();
  OUTLINED_FUNCTION_33_17();
  OUTLINED_FUNCTION_30_16();
  v3 = v1[26];
  v4 = v1[23];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_60_0();
  if (__swift_getEnumTagSinglePayload(v3, 1, v4) == 1)
  {
    OUTLINED_FUNCTION_21_50();
    OUTLINED_FUNCTION_75_1(v5);
    v8 = *(_QWORD *)(v0 + 64);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_1_26(v8, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_39_29(*(_QWORD *)(v0 + 256));
    sub_22ABDF1DC();
    OUTLINED_FUNCTION_29_29();
    v7 = (_QWORD *)OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_13_65(v7);
    return OUTLINED_FUNCTION_9_62(v9);
  }
}

uint64_t sub_22AAEEE30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 336) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v2 + 208));
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

void sub_22AAEEEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 224) + 16))(v2, *(_QWORD *)(v0 + 240), v4);
  AnnotatedFeature.annotation.getter(v1, v5);
  AnnotatedFeature.init(feature:annotation:)(v2, v5, v4, v6, v3);
  sub_22ABDF0C8();
  if (v7)
  {
    v33 = *(_QWORD *)(v0 + 248);
    v34 = *(_QWORD *)(v0 + 264);
    v31 = *(_QWORD *)(v0 + 240);
    v32 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 224);
    v30 = *(_QWORD *)(v0 + 184);
    v9 = *(void (**)(void))(v0 + 80);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 16))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 96));
    swift_retain();
    v10 = sub_22ABDED80();
    v12 = v11;
    v13 = sub_22ABDEAEC();
    v14 = MEMORY[0x22E2E3340](v13, v8);
    swift_bridgeObjectRelease();
    v15 = sub_22ABDEE70();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255B0E250);
    sub_22A9ADA0C();
    v16 = sub_22ABDEAC8();
    *(_QWORD *)(v0 + 16) = v10;
    *(_QWORD *)(v0 + 24) = v12;
    *(_QWORD *)(v0 + 32) = v14;
    *(_QWORD *)(v0 + 40) = v15;
    *(_BYTE *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = v16;
    v9();
    sub_22A9ADA48((uint64_t)v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 256);
    v17 = *(_QWORD *)(v0 + 264);
    v19 = *(_QWORD *)(v0 + 248);
    OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 224));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v20 = *(_QWORD *)(v0 + 336);
  v21 = *(_QWORD *)(v0 + 272);
  v22 = *(_QWORD *)(v0 + 248);
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_60_0();
  if (__swift_getEnumTagSinglePayload(v21, 1, v22) == 1)
  {
    OUTLINED_FUNCTION_21_50();
    OUTLINED_FUNCTION_75_1(v23);
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    swift_task_dealloc();
    OUTLINED_FUNCTION_15_52();
    __asm { BR              X1 }
  }
  OUTLINED_FUNCTION_39_29(*(_QWORD *)(v0 + 256));
  sub_22ABDF1DC();
  if (v20)
  {
    v25 = *(_QWORD *)(v0 + 304);
    OUTLINED_FUNCTION_14_56();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_24_42();
    swift_task_dealloc();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    swift_task_dealloc();
    OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_15_52();
    __asm { BR              X0 }
  }
  OUTLINED_FUNCTION_29_29();
  v27 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_13_65(v27);
  OUTLINED_FUNCTION_15_52();
  __asm { BR              X8 }
}

uint64_t sub_22AAEF1F0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_68();
  v1 = *(_QWORD *)(v0 + 304);
  OUTLINED_FUNCTION_14_56();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TemporalTransformer.callAsFunction<A>(_:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_2_75();
  v10 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v9 + 16) = v10;
  *v10 = v9;
  v10[1] = sub_22A9ABF58;
  return OUTLINED_FUNCTION_14_0(a9);
}

uint64_t TemporalTransformer.callAsFunction<A>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_2_75();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22AA04CF4;
  OUTLINED_FUNCTION_23_47();
  return TemporalTransformer.applied<A>(to:eventHandler:)(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t dispatch thunk of TemporalTransformer.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_2_75();
  v10 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v9 + 16) = v10;
  *v10 = v9;
  v10[1] = sub_22A9ABF58;
  OUTLINED_FUNCTION_23_47();
  return OUTLINED_FUNCTION_14_0(a9);
}

uint64_t OUTLINED_FUNCTION_9_62@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_12_57()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[23] + 8))(v0[24], v0[22]);
}

uint64_t OUTLINED_FUNCTION_13_65(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 328) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 240);
}

uint64_t OUTLINED_FUNCTION_14_56()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[32] + 8))(v0[33], v0[31]);
}

uint64_t OUTLINED_FUNCTION_17_49(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 256) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 168);
}

uint64_t OUTLINED_FUNCTION_18_55()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[29] + 8))(v0[30], v0[28]);
}

uint64_t OUTLINED_FUNCTION_24_42()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 312);
}

uint64_t OUTLINED_FUNCTION_27_39()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_29_29()
{
  uint64_t v0;

  return AnnotatedFeature.feature.getter(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 216));
}

uint64_t OUTLINED_FUNCTION_37_29()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_39_29@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t OUTLINED_FUNCTION_40_22()
{
  return sub_22ABDE9F0();
}

uint64_t OUTLINED_FUNCTION_41_23(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v7[10] = a2;
  v7[11] = a3;
  v7[9] = result;
  return result;
}

void ComposedTabularTransformer.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for ComposedTabularTransformer();
}

uint64_t sub_22AAEF5AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for ComposedTabularTransformer()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t (*ComposedTabularTransformer.outer.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t ComposedTabularTransformer.inner.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t ComposedTabularTransformer.inner.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*ComposedTabularTransformer.inner.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t ComposedTabularTransformer.outer.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t ComposedTabularTransformer.outer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t ComposedTabularTransformer.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v8 = *(_QWORD *)(a5 + 24);
  v6[8] = v8;
  v6[9] = *(_QWORD *)(v8 - 8);
  v6[10] = OUTLINED_FUNCTION_0_0();
  v9 = *(_QWORD *)(a5 + 16);
  v6[11] = v9;
  v6[12] = *(_QWORD *)(v9 - 8);
  v6[13] = OUTLINED_FUNCTION_0_0();
  v10 = sub_22ABDD2EC();
  v6[14] = v10;
  v6[15] = *(_QWORD *)(v10 - 8);
  v6[16] = OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAEF6EC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t);

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[12] + 16))(v1[13], v1[7], v1[11]);
  v2 = (_QWORD *)OUTLINED_FUNCTION_3_81();
  v1[17] = v2;
  *v2 = v1;
  v2[1] = sub_22AAEF764;
  return v4(v1[16], v1[3], v1[4], v1[5], v1[11], v0);
}

uint64_t sub_22AAEF764()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_7();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAEF7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t);

  v2 = *(_QWORD *)(v1 + 144);
  sub_22ABDF1DC();
  if (v2)
  {
    OUTLINED_FUNCTION_39_24();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 72) + 16))(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 56) + *(int *)(*(_QWORD *)(v1 + 48) + 52), *(_QWORD *)(v1 + 64));
    v4 = (_QWORD *)OUTLINED_FUNCTION_3_81();
    *(_QWORD *)(v1 + 152) = v4;
    *v4 = v1;
    v4[1] = sub_22AAEF89C;
    return v5(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 64), v0);
  }
}

uint64_t sub_22AAEF89C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_7();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAEF908()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAEF958()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_61();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAEF98C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_39_24();
  OUTLINED_FUNCTION_8_61();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAEF9C4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF9168, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AAEF9F8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF9168, a1);
  return sub_22ABE02F8();
}

uint64_t sub_22AAEFA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9AFDDC;
  return ComposedTabularTransformer.applied(to:eventHandler:)(a1, a2, a3, a4, a5);
}

uint64_t ComposedTabularTransformer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  sub_22ABDFF2C();
  sub_22ABDEDC8();
  return 0;
}

#error "22AAEFB80: call analysis failed (funcsize=10)"

uint64_t sub_22AAEFB8C()
{
  return sub_22AAEFB64();
}

uint64_t static ComposedTabularTransformer<>.== infix(_:_:)()
{
  if ((sub_22ABDECFC() & 1) != 0)
    type metadata accessor for ComposedTabularTransformer();
  return 0;
}

uint64_t sub_22AAEFC3C()
{
  return static ComposedTabularTransformer<>.== infix(_:_:)();
}

void ComposedTabularTransformer<>.encode(to:)()
{
  OUTLINED_FUNCTION_14_57();
}

void sub_22AAEFCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  MEMORY[0x22E2E4D80](&unk_22ABF9168, a1);
  v11 = sub_22ABDFD58();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&a9 - v13;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_22ABE02B0();
  *(_BYTE *)(v10 - 112) = 0;
  v15 = *(_QWORD *)(v10 - 72);
  sub_22ABDFD4C();
  if (!v15)
  {
    *(_BYTE *)(v10 - 112) = 1;
    sub_22ABDFD4C();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for ComposedTabularTransformer.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AAEFDB4()
{
  ComposedTabularTransformer<>.encode(to:)();
}

void ComposedTabularTransformer<>.init(from:)(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_14_57();
}

void sub_22AAEFE6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x22E2E4D80](&unk_22ABF9168, a1);
  v6 = sub_22ABDFCB0();
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 152) = v3;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for ComposedTabularTransformer();
}

void sub_22AAEFEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v11 - 216) = a1;
  v12 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  *(_QWORD *)(v11 - 128) = v9;
  v15 = *(_QWORD *)(v11 - 72);
  sub_22ABE0298();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    *(_QWORD *)(v11 - 72) = v12;
    v16 = *(_QWORD *)(v11 - 176);
    v17 = (uint64_t)v10;
    v19 = *(_QWORD *)(v11 - 168);
    v18 = *(_QWORD *)(v11 - 160);
    v20 = v14;
    *(_BYTE *)(v11 - 112) = 0;
    v21 = *(_QWORD *)(v11 - 152);
    sub_22ABDFC8C();
    v22 = *(void (**)(char *, _QWORD, uint64_t))(v16 + 32);
    *(_QWORD *)(v11 - 144) = v20;
    v22(v20, *(_QWORD *)(v11 - 136), v21);
    *(_BYTE *)(v11 - 112) = 1;
    sub_22ABDFC8C();
    OUTLINED_FUNCTION_8_6();
    v23 = *(_QWORD *)(v11 - 216);
    v24 = *(_QWORD *)(v11 - 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 208) + 32))(v24 + *(int *)(v23 + 52), v19, v18);
    v25 = *(_QWORD *)(v11 - 72);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v25 + 16))(*(_QWORD *)(v11 - 200), v24, v23);
    __swift_destroy_boxed_opaque_existential_1(v17);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v23);
  }
  OUTLINED_FUNCTION_16();
}

void sub_22AAF0068(uint64_t a1)
{
  ComposedTabularTransformer<>.init(from:)(a1);
}

uint64_t sub_22AAF0180(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AAF025C + 4 * byte_22ABF8F10[v21 - 1]))();
}

void sub_22AAF02D0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_22AAF04C4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AAF0510 + 4 * byte_22ABF8F23[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AAF0544 + 4 * byte_22ABF8F1E[v4]))();
}

uint64_t sub_22AAF0544(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAF054C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AAF0554);
  return result;
}

uint64_t sub_22AAF0560(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AAF0568);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AAF056C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAF0574(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AAF0580()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAF0590()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAF05A0()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_3_81()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_8_61()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_14_57()
{
  type metadata accessor for ComposedTabularTransformer.CodingKeys();
}

void sub_22AAF05E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_4_67(v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_33();
  type metadata accessor for FullyConnectedNetworkClassifierModel();
}

void sub_22AAF06E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 - 208) = v3 + *(int *)(a1 + 84);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  *(_QWORD *)(v6 - 224) = v7;
  OUTLINED_FUNCTION_20_46(v7, v8, v9, v7);
  sub_22ABDEAEC();
  sub_22AB593D4(v2, *(_QWORD *)(v6 - 200), v4, v1, v5);
}

uint64_t sub_22AAF0734(_QWORD *a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char *v13;

  sub_22A9A61EC(v6, a1, v3, v2);
  v8 = sub_22ABDD5D4();
  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v7 - 232), 1, 1, v8);
  v9 = sub_22ABDD598();
  OUTLINED_FUNCTION_20_46(v9, v10, v11, v9);
  OUTLINED_FUNCTION_57();
  sub_22A9BED8C((unint64_t *)&qword_255B0DAE0, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE92BC);
  sub_22ABDD694();
  swift_bridgeObjectRelease();
  __swift_storeEnumTagSinglePayload(v4, 0, 1, *(_QWORD *)(v7 - 224));
  result = sub_22AAF42FC(v4, *(_QWORD *)(v7 - 208));
  v13 = &v2[v5[22]];
  *(_QWORD *)v13 = *(_QWORD *)(v7 - 216);
  *((_QWORD *)v13 + 1) = v1;
  *(_QWORD *)&v2[v5[23]] = *(_QWORD *)(v7 - 184);
  *(_QWORD *)&v2[v5[24]] = *(_QWORD *)(v7 - 176);
  return result;
}

uint64_t sub_22AAF0858(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_33();
  v7 = v6 - v5;
  sub_22A9AF2A4(v2, v6 - v5);
  sub_22A9BED8C((unint64_t *)&qword_255B0DAE0, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE92BC);
  sub_22ABDD580();
  sub_22AAF1D68(v7);
  v8 = v2 + *(int *)(a2 + 84);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
    sub_22ABDD6AC();
  return swift_bridgeObjectRelease();
}

uint64_t FullyConnectedNetworkClassifierModel.applied(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a1;
  v6[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DE30);
  v6[8] = OUTLINED_FUNCTION_0_0();
  v6[9] = *(_QWORD *)(a5 + 16);
  v6[10] = *(_QWORD *)(a5 + 32);
  v8 = sub_22ABDE8A0();
  v6[11] = v8;
  v6[12] = *(_QWORD *)(v8 - 8);
  v6[13] = OUTLINED_FUNCTION_0_0();
  v9 = sub_22ABDDA0C();
  v6[14] = v9;
  v6[15] = *(_QWORD *)(v9 - 8);
  v6[16] = OUTLINED_FUNCTION_38_0();
  v6[17] = OUTLINED_FUNCTION_38_0();
  v6[18] = OUTLINED_FUNCTION_38_0();
  return swift_task_switch();
}

uint64_t sub_22AAF0A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  if (*(uint64_t *)(v1 + *(int *)(v2 + 96)) < 1)
  {
    sub_22ABDF7A0();
    sub_22ABDEDC8();
    OUTLINED_FUNCTION_32_6();
    OUTLINED_FUNCTION_32_6();
    sub_22A9A0888();
    v32 = OUTLINED_FUNCTION_53();
    *v33 = 0;
    v33[1] = 0xE000000000000000;
LABEL_6:
    swift_willThrow(v32);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v31 = *(uint64_t (**)(void))(v0 + 8);
    return v31();
  }
  v3 = (_QWORD *)OUTLINED_FUNCTION_26_39();
  v4 = sub_22A99EB90(v3, *(_QWORD **)(v1 + *(int *)(v2 + 92)));
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    v34 = OUTLINED_FUNCTION_26_39();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v35 = sub_22ABDEAEC();
    MEMORY[0x22E2E3298](v35, MEMORY[0x24BEE1768]);
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22A9B7B50();
    v32 = OUTLINED_FUNCTION_53();
    *(_QWORD *)v36 = v34;
    *(_QWORD *)(v36 + 8) = 0xD000000000000025;
    *(_QWORD *)(v36 + 16) = 0x800000022ABE5B80;
    *(_QWORD *)(v36 + 24) = 0;
    *(_BYTE *)(v36 + 32) = 6;
    goto LABEL_6;
  }
  v6 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 80);
  v40 = v11;
  v48 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD **)(v0 + 48);
  v46 = *(_QWORD *)(v0 + 56);
  v45 = *(uint64_t **)(v0 + 32);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 16))(v9, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 88));
  v41 = v12[5];
  sub_22AA5A180(v9, v11, v8);
  sub_22ABDD904();
  v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v47 = v10;
  v13(v8, v10);
  v44 = v5;
  sub_22ABDD9E8();
  v13(v6, v10);
  v43 = v13;
  sub_22ABDD8BC();
  v14 = v46 + *(int *)(OUTLINED_FUNCTION_57() + 28);
  v15 = sub_22ABDD538();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v48, v14, v15);
  __swift_storeEnumTagSinglePayload(v48, 0, 1, v15);
  v16 = swift_task_alloc();
  *(_QWORD *)(v16 + 16) = v46;
  *(_QWORD *)(v16 + 24) = v8;
  v39 = v6;
  sub_22ABDD58C();
  swift_task_dealloc();
  sub_22A9AD754(v48, &qword_255B0DE30);
  v43(v8, v10);
  *(_QWORD *)(v0 + 16) = sub_22ABDD9C4();
  v17 = (_QWORD *)swift_task_alloc();
  v17[2] = v11;
  v38 = v12[3];
  v17[3] = v38;
  v17[4] = v42;
  v17[5] = v41;
  v18 = v12[6];
  v17[6] = v18;
  v19 = v12[7];
  v17[7] = v19;
  v20 = v12[8];
  v17[8] = v20;
  v21 = v12[9];
  v17[9] = v21;
  v17[10] = v46;
  v22 = (_QWORD *)swift_task_alloc();
  v22[2] = v40;
  v22[3] = v38;
  v22[4] = v42;
  v22[5] = v41;
  v22[6] = v18;
  v22[7] = v19;
  v22[8] = v20;
  v22[9] = v21;
  v22[10] = sub_22AAF10D4;
  v22[11] = v17;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F3B8);
  v25 = type metadata accessor for Classification(0, v38, v21, v24);
  v26 = sub_22AAF1148();
  v28 = sub_22A9C2540((uint64_t)sub_22AAF1108, (uint64_t)v22, v23, v25, MEMORY[0x24BEE4078], v26, MEMORY[0x24BEE40A8], v27);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 24) = v28;
  v29 = sub_22ABDF0F8();
  v30 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v29);
  ClassificationDistribution.init<A>(_:)((char *)(v0 + 24), v38, v29, v21, v30, v45);
  v43(v39, v47);
  v43(v44, v47);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

void sub_22AAF0F58()
{
  sub_22A9A6B0C();
}

void sub_22AAF0F70()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for FullyConnectedNetworkClassifierModel();
}

void sub_22AAF1034()
{
  sub_22AB593D8();
}

uint64_t sub_22AAF1058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float v7;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v4, v2);
  result = __swift_getEnumTagSinglePayload(v3, 1, v0);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v2);
    return Classification.init(label:probability:)(v3, v0, v1, *(_QWORD *)(v6 - 200), v7);
  }
  return result;
}

void sub_22AAF10D4()
{
  sub_22AAF0F70();
}

uint64_t sub_22AAF1108(uint64_t a1)
{
  uint64_t v1;

  return sub_22A9C5868(a1, *(uint64_t (**)(_QWORD, float))(v1 + 80));
}

unint64_t sub_22AAF1148()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B0F3C0;
  if (!qword_255B0F3C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0F3B8);
    result = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2FC0], v1);
    atomic_store(result, (unint64_t *)&qword_255B0F3C0);
  }
  return result;
}

uint64_t sub_22AAF118C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B14980);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22ABDDA0C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v14 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0F248);
  sub_22ABDD4CC();
  type metadata accessor for FullyConnectedNetwork();
  sub_22A9BED8C((unint64_t *)&qword_255B0DAE0, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE92BC);
  sub_22ABDD7FC();
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, v3);
  sub_22ABDD4B4();
  v11 = *MEMORY[0x24BE6B9C8];
  v12 = sub_22ABDD550();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v2, v11, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 0, 1, v12);
  sub_22ABDD5C8();
  sub_22A9AD754((uint64_t)v2, &qword_255B14980);
  v10(v7, v3);
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

uint64_t sub_22AAF1364()
{
  unint64_t v0;

  v0 = sub_22ABDFBE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_22AAF13B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_6_82 + 4 * byte_22ABF91C0[a1]))(0x6C65646F6DLL, 0xE500000000000000);
}

uint64_t sub_22AAF13E8()
{
  return OUTLINED_FUNCTION_29_5();
}

uint64_t sub_22AAF13F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_6_82_0
                                                            + 4 * byte_22ABF91C4[a1]))(0x6C65646F6DLL, 0xE500000000000000);
}

uint64_t sub_22AAF1430()
{
  return OUTLINED_FUNCTION_29_5();
}

uint64_t sub_22AAF1440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_22A99DE80;
  return FullyConnectedNetworkClassifierModel.applied(to:eventHandler:)(a1, a2, v10, v11, a5);
}

uint64_t sub_22AAF14A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2E4D80](&unk_22ABF9370, a3);
  return sub_22ABDFFF8();
}

uint64_t sub_22AAF14FC(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF9370, a1);
  return sub_22ABDEF9C();
}

uint64_t sub_22AAF1548()
{
  MEMORY[0x22E2E4D80](&unk_22ABF9370);
  return sub_22ABDEFB4();
}

uint64_t sub_22AAF1598()
{
  MEMORY[0x22E2E4D80](&unk_22ABF9370);
  return sub_22ABDEFA8();
}

uint64_t sub_22AAF15E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AAF1364();
  *a1 = result;
  return result;
}

uint64_t sub_22AAF161C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_22AAF13B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_22AAF164C()
{
  unsigned __int8 *v0;

  return sub_22AAF13F8(*v0);
}

uint64_t sub_22AAF166C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_22AAF13AC();
  *a1 = result;
  return result;
}

void sub_22AAF1698(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_22AAF16A4(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF9410, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AAF16D8(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF9410, a1);
  return sub_22ABE02F8();
}

void FullyConnectedNetworkClassifierModel.encode(to:)()
{
  type metadata accessor for FullyConnectedNetworkClassifierModel.CodingKeys();
}

void sub_22AAF1778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  MEMORY[0x22E2E4D80](&unk_22ABF9410, a1);
  v12 = sub_22ABDFD58();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&a9 - v14;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  v16 = *(_QWORD *)(v11 - 168);
  sub_22ABE02B0();
  *(_BYTE *)(v11 - 144) = 0;
  type metadata accessor for FullyConnectedNetwork();
  sub_22A9BED8C(&qword_255B16F68, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE9294);
  v17 = *(_QWORD *)(v11 - 160);
  sub_22ABDFD4C();
  if (!v17)
  {
    *(_OWORD *)(v11 - 144) = *(_OWORD *)(v16 + *(int *)(v10 + 88));
    *(_BYTE *)(v11 - 65) = 1;
    v18 = type metadata accessor for LabelEncoder(0, *(_QWORD *)(v11 - 208), *(_QWORD *)(v11 - 224), *(_QWORD *)(v11 - 184));
    *(_QWORD *)(v11 - 152) = *(_QWORD *)(v11 - 176);
    MEMORY[0x22E2E4D80](&unk_22ABFD04C, v18, v11 - 152);
    OUTLINED_FUNCTION_7_71();
    *(_QWORD *)(v11 - 144) = *(_QWORD *)(v16 + *(int *)(v10 + 92));
    *(_BYTE *)(v11 - 65) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8);
    sub_22AAAB5F8(&qword_2540E85E0, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
    OUTLINED_FUNCTION_7_71();
    *(_BYTE *)(v11 - 144) = 3;
    sub_22ABDFD34();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for FullyConnectedNetworkClassifierModel.CodingKeys()
{
  JUMPOUT(0x22E2E4CF0);
}

void FullyConnectedNetworkClassifierModel.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for FullyConnectedNetwork();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_4_67(v1, v2);
  type metadata accessor for FullyConnectedNetworkClassifierModel.CodingKeys();
}

void sub_22AAF19DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 - 184) = MEMORY[0x22E2E4D80](&unk_22ABF9410, a1);
  v9 = sub_22ABDFCB0();
  *(_QWORD *)(v8 - 216) = v9;
  *(_QWORD *)(v8 - 264) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v8 - 160) = v7;
  *(_QWORD *)(v8 - 152) = v2;
  *(_QWORD *)(v8 - 256) = v2;
  *(_QWORD *)(v8 - 248) = v1;
  *(_QWORD *)(v8 - 144) = v5;
  *(_QWORD *)(v8 - 136) = v4;
  *(_QWORD *)(v8 - 128) = v1;
  *(_QWORD *)(v8 - 120) = v6;
  *(_QWORD *)(v8 - 272) = v6;
  *(_QWORD *)(v8 - 112) = *(_QWORD *)(v8 - 200);
  *(_QWORD *)(v8 - 104) = v3;
  type metadata accessor for FullyConnectedNetworkClassifierModel();
}

void sub_22AAF1A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;

  v13 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v12 - 200) = v14;
  v16 = (char *)&a9 - v15;
  v17 = (char *)&a9 + *(int *)(v14 + 84) - v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  *(_QWORD *)(v12 - 208) = v17;
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v18);
  __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  *(_QWORD *)(v12 - 224) = v10;
  v19 = *(_QWORD *)(v12 - 176);
  sub_22ABE0298();
  if (v19)
  {
    v23 = *(_QWORD *)(v12 - 208);
    OUTLINED_FUNCTION_24_24();
    sub_22A9AD754(v23, &qword_255B0DA90);
  }
  else
  {
    *(_QWORD *)(v12 - 184) = v13;
    *(_QWORD *)(v12 - 176) = v9;
    v20 = *(_QWORD *)(v12 - 256);
    v21 = *(_QWORD *)(v12 - 248);
    *(_BYTE *)(v12 - 160) = 0;
    sub_22A9BED8C(qword_255B16F70, (uint64_t (*)(uint64_t))type metadata accessor for FullyConnectedNetwork, (uint64_t)&unk_22ABE926C);
    v22 = *(_QWORD *)(v12 - 232);
    sub_22ABDFC8C();
    sub_22AAF1D24(v22, (uint64_t)v16);
    v24 = type metadata accessor for LabelEncoder(0, v20, v21, *(_QWORD *)(v12 - 176));
    *(_BYTE *)(v12 - 65) = 1;
    *(_QWORD *)(v12 - 168) = *(_QWORD *)(v12 - 272);
    MEMORY[0x22E2E4D80](&unk_22ABFD018, v24, v12 - 168);
    OUTLINED_FUNCTION_8_62();
    v25 = *(int **)(v12 - 200);
    *(_OWORD *)&v16[v25[22]] = *(_OWORD *)(v12 - 160);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8);
    *(_BYTE *)(v12 - 65) = 2;
    sub_22AAAB5F8(&qword_2540E85E8, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
    OUTLINED_FUNCTION_8_62();
    *(_QWORD *)&v16[v25[23]] = *(_QWORD *)(v12 - 160);
    *(_BYTE *)(v12 - 160) = 3;
    v26 = sub_22ABDFC74();
    OUTLINED_FUNCTION_27_40();
    *(_QWORD *)&v16[v25[24]] = v26;
    v27 = *(_QWORD *)(v12 - 184);
    (*(void (**)(_QWORD, char *, int *))(v27 + 16))(*(_QWORD *)(v12 - 280), v16, v25);
    OUTLINED_FUNCTION_24_24();
    (*(void (**)(char *, int *))(v27 + 8))(v16, v25);
  }
  OUTLINED_FUNCTION_16();
}

void type metadata accessor for FullyConnectedNetworkClassifierModel()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AAF1D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FullyConnectedNetwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22AAF1D68(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FullyConnectedNetwork();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22AAF1DA4()
{
  FullyConnectedNetworkClassifierModel.init(from:)();
}

void sub_22AAF1DD8()
{
  FullyConnectedNetworkClassifierModel.encode(to:)();
}

unint64_t FullyConnectedNetworkClassifierModel.debugDescription.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_22AAF1E08(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for FullyConnectedNetworkClassifierModel<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22AAF1E34()
{
  FullyConnectedNetworkClassifierModel.debugDescription.getter();
  return 0xD000000000000024;
}

void sub_22AAF1E50(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[2];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  __int128 v111;
  _OWORD v112[4];
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v91 = a2;
  sub_22ABDE3D8();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v4);
  v5 = sub_22ABDE798();
  OUTLINED_FUNCTION_40_1(v5, (uint64_t)&v113);
  v88 = v6;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v8);
  sub_22ABDDF4C();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v10);
  v11 = sub_22ABDDD90();
  OUTLINED_FUNCTION_40_1(v11, (uint64_t)&v116);
  v97 = v12;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v14);
  v15 = sub_22ABDDF88();
  v102 = *(_QWORD *)(v15 - 8);
  v103 = v15;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_16_6(v17);
  v18 = sub_22ABDDE20();
  OUTLINED_FUNCTION_40_1(v18, (uint64_t)&v115);
  v94 = v19;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_87();
  v92 = v21;
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_16_6((uint64_t)v78 - v23);
  sub_22ABDDC88();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_4_67(v25, v78[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8530);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_33();
  v29 = v28 - v27;
  v30 = sub_22ABDDC10();
  v108 = *(_QWORD *)(v30 - 8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_0();
  v107 = v32;
  v33 = sub_22ABDE324();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_87();
  v86 = v35;
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)v78 - v37;
  sub_22ABDE318();
  sub_22ABDE258();
  v39 = OUTLINED_FUNCTION_19_46();
  sub_22AB59C58(v39, v29);
  if (__swift_getEnumTagSinglePayload(v29, 1, v30) != 1)
  {
    v85 = v34;
    v101 = v33;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32))(v107, v29, v30);
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86A8);
    v47 = sub_22ABDDE68();
    OUTLINED_FUNCTION_40_1(v47, (uint64_t)v112);
    v48 = v38;
    v50 = *(_QWORD *)(v49 + 72);
    v80 = v49;
    v51 = swift_allocObject();
    v84 = v30;
    *(_OWORD *)(v51 + 16) = xmmword_22ABE8E30;
    v79 = *(_QWORD *)(v106 + *(int *)(a1 + 92));
    sub_22ABDDB74();
    OUTLINED_FUNCTION_12_27();
    sub_22ABDDE2C();
    v104 = v48;
    sub_22ABDE2C4();
    v82 = v50;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_22ABE9FB0;
    v52 = *(_QWORD *)(a1 + 24);
    v53 = *(_QWORD *)(a1 + 64);
    v54 = *(_QWORD *)(a1 + 72);
    v83 = *(_QWORD *)(a1 + 48);
    v55 = v105;
    sub_22AAAA204();
    if (v55)
    {
      OUTLINED_FUNCTION_21_51();
      OUTLINED_FUNCTION_11_62(v107, *(uint64_t (**)(uint64_t, _QWORD))(v108 + 8));
      OUTLINED_FUNCTION_14_58();
      v45 = v104;
    }
    else
    {
      v78[1] = (uint64_t)"tworkClassifierModel ";
      v78[0] = a1;
      v56 = v106;
      v57 = v104;
      OUTLINED_FUNCTION_8_32();
      sub_22AAAA314();
      v105 = 0;
      v80 = v52;
      v81 = v54;
      v82 = v53;
      v58 = v57;
      sub_22ABDE300();
      OUTLINED_FUNCTION_8_32();
      sub_22ABDE240();
      sub_22ABDE270();
      sub_22ABDE228();
      if (*(_QWORD *)(v79 + 16) < 2uLL)
      {
        v65 = OUTLINED_FUNCTION_12_27();
        OUTLINED_FUNCTION_12_58(v65);
        v109 = v66;
      }
      else
      {
        v59 = v93;
        sub_22ABDDD9C();
        OUTLINED_FUNCTION_12_58(0xD000000000000010);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(v92, v59, v95);
        sub_22AA360B8();
        v61 = v60;
        v62 = *(_QWORD *)(v60 + 16);
        if (v62 >= *(_QWORD *)(v60 + 24) >> 1)
        {
          sub_22AA360B8();
          v61 = v77;
        }
        *(_QWORD *)(v61 + 16) = v62 + 1;
        v63 = v94;
        v64 = v95;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v94 + 32))(v61+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(_QWORD *)(v94 + 72) * v62, v92, v95);
        v109 = v61;
        sub_22A9A08FC();
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v93, v64);
        v58 = v57;
      }
      v67 = v105;
      v68 = v100;
      sub_22ABDDF7C();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v97 + 104))(v96, *MEMORY[0x24BE62670], v98);
      sub_22ABDDF64();
      sub_22ABDDF70();
      v114 = *(_QWORD *)(v56 + *(int *)(v78[0] + 88));
      v69 = sub_22ABDF0F8();
      v70 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE12E0], v69);
      sub_22AAAA448(v69, v70, v99);
      v72 = v107;
      v71 = v108;
      if (!v67)
      {
        sub_22ABDDF58();
        v73 = v87;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v87, v68, v103);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v88 + 104))(v73, *MEMORY[0x24BE63298], v89);
        sub_22ABDE288();
        v74 = v85;
        v75 = v86;
        v33 = v101;
        (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v86, v58, v101);
        v111 = 0u;
        memset(v112, 0, sizeof(v112));
        v113 = 0;
        v76 = v90;
        sub_22ABDE3CC();
        sub_22AB314C8(v75, v76, &v111, v91);
        OUTLINED_FUNCTION_15_56();
        OUTLINED_FUNCTION_11_62(v72, *(uint64_t (**)(uint64_t, _QWORD))(v71 + 8));
        v44 = *(void (**)(char *, uint64_t))(v74 + 8);
        v45 = v58;
        goto LABEL_3;
      }
      OUTLINED_FUNCTION_15_56();
      OUTLINED_FUNCTION_11_62(v72, *(uint64_t (**)(uint64_t, _QWORD))(v71 + 8));
      OUTLINED_FUNCTION_14_58();
      v45 = v58;
    }
    v46 = v101;
    goto LABEL_7;
  }
  sub_22A9AD754(v29, &qword_2540E8530);
  type metadata accessor for SerializationError();
  sub_22A9BED8C((unint64_t *)&qword_2540E8B40, (uint64_t (*)(uint64_t))type metadata accessor for SerializationError, (uint64_t)&protocol conformance descriptor for SerializationError);
  swift_allocError();
  v41 = v40;
  v109 = 0;
  v110 = 0xE000000000000000;
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  v114 = OUTLINED_FUNCTION_19_46();
  type metadata accessor for MLMultiArrayDataType(0);
  sub_22ABDFA34();
  sub_22ABDEDC8();
  v42 = v110;
  *v41 = v109;
  v41[1] = v42;
  v43 = swift_storeEnumTagMultiPayload();
  swift_willThrow(v43);
  v44 = *(void (**)(char *, uint64_t))(v34 + 8);
  v45 = v38;
LABEL_3:
  v46 = v33;
LABEL_7:
  v44(v45, v46);
  OUTLINED_FUNCTION_16();
}

void sub_22AAF27B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22AAF1E50(a1, a2);
}

void sub_22AAF27C8()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for FullyConnectedNetwork();
  if (v0 <= 0x3F)
  {
    sub_22AAF41B0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_22AAF2870(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = (int *)type metadata accessor for FullyConnectedNetwork();
    v9 = v8[5];
    v10 = (char *)v7 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_22ABDD7D8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    sub_22ABDEAEC();
    v13(v10, v11, v12);
    *(uint64_t *)((char *)v7 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    v14 = v8[7];
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_22ABDD538();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[21];
    v19 = (_OWORD *)((char *)v7 + v18);
    v20 = (_OWORD *)((char *)a2 + v18);
    v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, (uint64_t)v21))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *v19 = *v20;
      v23 = v21[12];
      v24 = (char *)v19 + v23;
      v25 = (char *)v20 + v23;
      v26 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      v28 = v21[13];
      v29 = (char *)v19 + v28;
      v30 = (char *)v20 + v28;
      v31 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
      }
      *(_DWORD *)((char *)v19 + v21[14]) = *(_DWORD *)((char *)v20 + v21[14]);
      *(_QWORD *)((char *)v19 + v21[15]) = *(_QWORD *)((char *)v20 + v21[15]);
      v33 = v21[16];
      v34 = (char *)v19 + v33;
      v35 = (char *)v20 + v33;
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
      v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
      v37(v34, v35, v36);
      v37((char *)v19 + v21[17], (char *)v20 + v21[17], v36);
      v38 = v21[18];
      v39 = (char *)v19 + v38;
      v40 = (char *)v20 + v38;
      if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v36))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(qword_255B16FC0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v37(v39, v40, v36);
        __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v36);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, (uint64_t)v21);
    }
    v42 = a3[22];
    v43 = a3[23];
    v44 = (uint64_t *)((char *)v7 + v42);
    v45 = (uint64_t *)((char *)a2 + v42);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    *(uint64_t *)((char *)v7 + v43) = *(uint64_t *)((char *)a2 + v43);
    *(uint64_t *)((char *)v7 + a3[24]) = *(uint64_t *)((char *)a2 + a3[24]);
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    sub_22ABDEAEC();
  }
  return v7;
}

uint64_t sub_22AAF2BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for FullyConnectedNetwork();
  v5 = a1 + *(int *)(v4 + 20);
  v6 = sub_22ABDD7D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(v4 + 28);
  v8 = sub_22ABDD538();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + *(int *)(a2 + 84);
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  if (!__swift_getEnumTagSinglePayload(v9, 1, (uint64_t)v10))
  {
    v11 = v9 + v10[12];
    v12 = sub_22ABDD5D4();
    if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v13 = v9 + v10[13];
    v14 = sub_22ABDD598();
    if (!__swift_getEnumTagSinglePayload(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    v15 = v9 + v10[16];
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
    v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
    v17(v15, v16);
    v17(v9 + v10[17], v16);
    v18 = v9 + v10[18];
    if (!__swift_getEnumTagSinglePayload(v18, 1, v16))
      v17(v18, v16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22AAF2D8C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for FullyConnectedNetwork();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22ABDD7D8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_22ABDEAEC();
  v11(v8, v9, v10);
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_22ABDD538();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[21];
  v17 = (_OWORD *)((char *)a1 + v16);
  v18 = (_OWORD *)((char *)a2 + v16);
  v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, (uint64_t)v19))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v17 = *v18;
    v21 = v19[12];
    v22 = (char *)v17 + v21;
    v23 = (char *)v18 + v21;
    v24 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
    }
    v26 = v19[13];
    v27 = (char *)v17 + v26;
    v28 = (char *)v18 + v26;
    v29 = sub_22ABDD598();
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
    }
    *(_DWORD *)((char *)v17 + v19[14]) = *(_DWORD *)((char *)v18 + v19[14]);
    *(_QWORD *)((char *)v17 + v19[15]) = *(_QWORD *)((char *)v18 + v19[15]);
    v31 = v19[16];
    v32 = (char *)v17 + v31;
    v33 = (char *)v18 + v31;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    v35(v32, v33, v34);
    v35((char *)v17 + v19[17], (char *)v18 + v19[17], v34);
    v36 = v19[18];
    v37 = (char *)v17 + v36;
    v38 = (char *)v18 + v36;
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v34))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(qword_255B16FC0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v35(v37, v38, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v34);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, (uint64_t)v19);
  }
  v40 = a3[22];
  v41 = a3[23];
  v42 = (_QWORD *)((char *)a1 + v40);
  v43 = (_QWORD *)((char *)a2 + v40);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  *(_QWORD *)((char *)a1 + v41) = *(_QWORD *)((char *)a2 + v41);
  *(_QWORD *)((char *)a1 + a3[24]) = *(_QWORD *)((char *)a2 + a3[24]);
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  sub_22ABDEAEC();
  return a1;
}

_QWORD *sub_22AAF30C4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  int EnumTagSinglePayload;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;

  *a1 = *a2;
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for FullyConnectedNetwork();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22ABDD7D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22ABDD538();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[21];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v18);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      *(_DWORD *)v16 = *(_DWORD *)v17;
      *((_DWORD *)v16 + 1) = *((_DWORD *)v17 + 1);
      *((_DWORD *)v16 + 2) = *((_DWORD *)v17 + 2);
      *((_DWORD *)v16 + 3) = *((_DWORD *)v17 + 3);
      v21 = v18[12];
      v22 = &v16[v21];
      v23 = &v17[v21];
      v24 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      v35 = v18[13];
      v36 = &v16[v35];
      v37 = &v17[v35];
      v38 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
      }
      *(_DWORD *)&v16[v18[14]] = *(_DWORD *)&v17[v18[14]];
      *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
      v40 = v18[16];
      v41 = &v16[v40];
      v42 = &v17[v40];
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
      v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
      v44(v41, v42, v43);
      v44(&v16[v18[17]], &v17[v18[17]], v43);
      v45 = v18[18];
      v46 = &v16[v45];
      v47 = &v17[v45];
      if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v43))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(qword_255B16FC0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v44(v46, v47, v43);
        __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v43);
      }
      v49 = (uint64_t)v16;
      v50 = (uint64_t)v18;
      goto LABEL_20;
    }
    goto LABEL_7;
  }
  if (v20)
  {
    sub_22A9AD754((uint64_t)v16, &qword_255B0DA98);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90) - 8) + 64);
    v27 = v16;
    v28 = v17;
    goto LABEL_8;
  }
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *((_DWORD *)v16 + 1) = *((_DWORD *)v17 + 1);
  *((_DWORD *)v16 + 2) = *((_DWORD *)v17 + 2);
  *((_DWORD *)v16 + 3) = *((_DWORD *)v17 + 3);
  v29 = v18[12];
  v30 = &v16[v29];
  v31 = &v17[v29];
  v32 = sub_22ABDD5D4();
  v33 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v32);
  v34 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  v55 = *(_QWORD *)(v32 - 8);
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v32);
LABEL_24:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 24))(v30, v31, v32);
LABEL_25:
  v57 = v18[13];
  v58 = &v16[v57];
  v59 = &v17[v57];
  v60 = sub_22ABDD598();
  v61 = __swift_getEnumTagSinglePayload((uint64_t)v58, 1, v60);
  v62 = __swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60);
  if (!v61)
  {
    v63 = *(_QWORD *)(v60 - 8);
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v58, v59, v60);
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v58, v60);
    goto LABEL_30;
  }
  if (v62)
  {
LABEL_30:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
  __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
LABEL_31:
  *(_DWORD *)&v16[v18[14]] = *(_DWORD *)&v17[v18[14]];
  *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
  v65 = v18[16];
  v66 = &v16[v65];
  v67 = &v17[v65];
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
  v75 = *(_QWORD *)(v68 - 8);
  v69 = *(void (**)(char *, char *, uint64_t))(v75 + 24);
  v69(v66, v67, v68);
  v69(&v16[v18[17]], &v17[v18[17]], v68);
  v70 = v18[18];
  v71 = (uint64_t)&v16[v70];
  v72 = (uint64_t)&v17[v70];
  v73 = __swift_getEnumTagSinglePayload(v71, 1, v68);
  v74 = __swift_getEnumTagSinglePayload(v72, 1, v68);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v71, v72, v68);
      v49 = v71;
      v50 = v68;
LABEL_20:
      __swift_storeEnumTagSinglePayload(v49, 0, 1, v50);
      goto LABEL_21;
    }
  }
  else
  {
    if (!v74)
    {
      v69((char *)v71, (char *)v72, v68);
      goto LABEL_21;
    }
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v71, v68);
  }
  v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_255B16FC0) - 8) + 64);
  v27 = (void *)v71;
  v28 = (const void *)v72;
LABEL_8:
  memcpy(v27, v28, v26);
LABEL_21:
  v51 = a3[22];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  *(_QWORD *)((char *)a1 + v51) = *(_QWORD *)((char *)a2 + v51);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[24]) = *(_QWORD *)((char *)a2 + a3[24]);
  return a1;
}

_QWORD *sub_22AAF3730(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for FullyConnectedNetwork();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22ABDD7D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22ABDD538();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[21];
  v16 = (_OWORD *)((char *)a1 + v15);
  v17 = (_OWORD *)((char *)a2 + v15);
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v20 = v18[12];
    v21 = (char *)v16 + v20;
    v22 = (char *)v17 + v20;
    v23 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
    }
    v25 = v18[13];
    v26 = (char *)v16 + v25;
    v27 = (char *)v17 + v25;
    v28 = sub_22ABDD598();
    if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
    }
    *(_DWORD *)((char *)v16 + v18[14]) = *(_DWORD *)((char *)v17 + v18[14]);
    *(_QWORD *)((char *)v16 + v18[15]) = *(_QWORD *)((char *)v17 + v18[15]);
    v30 = v18[16];
    v31 = (char *)v16 + v30;
    v32 = (char *)v17 + v30;
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
    v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32);
    v34(v31, v32, v33);
    v34((char *)v16 + v18[17], (char *)v17 + v18[17], v33);
    v35 = v18[18];
    v36 = (char *)v16 + v35;
    v37 = (char *)v17 + v35;
    if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v33))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(qword_255B16FC0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v34(v36, v37, v33);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v33);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, (uint64_t)v18);
  }
  v39 = a3[23];
  *(_OWORD *)((char *)a1 + a3[22]) = *(_OWORD *)((char *)a2 + a3[22]);
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  *(_QWORD *)((char *)a1 + a3[24]) = *(_QWORD *)((char *)a2 + a3[24]);
  return a1;
}

_QWORD *sub_22AAF3A40(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  int EnumTagSinglePayload;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for FullyConnectedNetwork();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_22ABDD7D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22ABDD538();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[21];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA98);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v18);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
      v21 = v18[12];
      v22 = &v16[v21];
      v23 = &v17[v21];
      v24 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      v35 = v18[13];
      v36 = &v16[v35];
      v37 = &v17[v35];
      v38 = sub_22ABDD598();
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
      }
      *(_DWORD *)&v16[v18[14]] = *(_DWORD *)&v17[v18[14]];
      *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
      v40 = v18[16];
      v41 = &v16[v40];
      v42 = &v17[v40];
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
      v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32);
      v44(v41, v42, v43);
      v44(&v16[v18[17]], &v17[v18[17]], v43);
      v45 = v18[18];
      v46 = &v16[v45];
      v47 = &v17[v45];
      if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v43))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(qword_255B16FC0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v44(v46, v47, v43);
        __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v43);
      }
      v49 = (uint64_t)v16;
      v50 = (uint64_t)v18;
      goto LABEL_20;
    }
    goto LABEL_7;
  }
  if (v20)
  {
    sub_22A9AD754((uint64_t)v16, &qword_255B0DA98);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90) - 8) + 64);
    v27 = v16;
    v28 = v17;
    goto LABEL_8;
  }
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v29 = v18[12];
  v30 = &v16[v29];
  v31 = &v17[v29];
  v32 = sub_22ABDD5D4();
  v33 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v32);
  v34 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  v55 = *(_QWORD *)(v32 - 8);
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v32);
LABEL_24:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v30, v31, v32);
LABEL_25:
  v57 = v18[13];
  v58 = &v16[v57];
  v59 = &v17[v57];
  v60 = sub_22ABDD598();
  v61 = __swift_getEnumTagSinglePayload((uint64_t)v58, 1, v60);
  v62 = __swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60);
  if (!v61)
  {
    v63 = *(_QWORD *)(v60 - 8);
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v58, v59, v60);
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v58, v60);
    goto LABEL_30;
  }
  if (v62)
  {
LABEL_30:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
  __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
LABEL_31:
  *(_DWORD *)&v16[v18[14]] = *(_DWORD *)&v17[v18[14]];
  *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
  v65 = v18[16];
  v66 = &v16[v65];
  v67 = &v17[v65];
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB00);
  v75 = *(_QWORD *)(v68 - 8);
  v69 = *(void (**)(char *, char *, uint64_t))(v75 + 40);
  v69(v66, v67, v68);
  v69(&v16[v18[17]], &v17[v18[17]], v68);
  v70 = v18[18];
  v71 = (uint64_t)&v16[v70];
  v72 = (uint64_t)&v17[v70];
  v73 = __swift_getEnumTagSinglePayload(v71, 1, v68);
  v74 = __swift_getEnumTagSinglePayload(v72, 1, v68);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v71, v72, v68);
      v49 = v71;
      v50 = v68;
LABEL_20:
      __swift_storeEnumTagSinglePayload(v49, 0, 1, v50);
      goto LABEL_21;
    }
  }
  else
  {
    if (!v74)
    {
      v69((char *)v71, (char *)v72, v68);
      goto LABEL_21;
    }
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v71, v68);
  }
  v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_255B16FC0) - 8) + 64);
  v27 = (void *)v71;
  v28 = (const void *)v72;
LABEL_8:
  memcpy(v27, v28, v26);
LABEL_21:
  v51 = a3[22];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  *(_QWORD *)((char *)a1 + v51) = *(_QWORD *)((char *)a2 + v51);
  swift_bridgeObjectRelease();
  *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[24]) = *(_QWORD *)((char *)a2 + a3[24]);
  return a1;
}

uint64_t sub_22AAF405C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAF4068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = OUTLINED_FUNCTION_57();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 84);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 88));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_22AAF4108()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAF4114(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = OUTLINED_FUNCTION_57();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
    return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1 + *(int *)(a4 + 84);
    return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 88)) = (a2 - 1);
  return result;
}

void sub_22AAF41B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255B17048[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B0DA98);
    v0 = sub_22ABDF5D8();
    if (!v1)
      atomic_store(v0, qword_255B17048);
  }
}

uint64_t sub_22AAF4208(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22AAF4254 + 4 * byte_22ABF91CD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22AAF4288 + 4 * byte_22ABF91C8[v4]))();
}

uint64_t sub_22AAF4288(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAF4290(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AAF4298);
  return result;
}

uint64_t sub_22AAF42A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AAF42ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22AAF42B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AAF42B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AAF42C4()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAF42D4()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AAF42E4()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AAF42F4()
{
  return sub_22AAF118C();
}

uint64_t sub_22AAF42FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_4_67(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_6_82()
{
  return 0x636E456C6562616CLL;
}

uint64_t OUTLINED_FUNCTION_7_71()
{
  return sub_22ABDFD4C();
}

uint64_t OUTLINED_FUNCTION_8_62()
{
  return sub_22ABDFC8C();
}

uint64_t OUTLINED_FUNCTION_9_63()
{
  return 0x6168537475706E69;
}

uint64_t OUTLINED_FUNCTION_10_57()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 216));
}

uint64_t OUTLINED_FUNCTION_11_62@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 392));
}

void OUTLINED_FUNCTION_12_58(uint64_t a1)
{
  sub_22A9A6CB4(a1);
}

uint64_t OUTLINED_FUNCTION_15_56()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 248) + 8))(v0, *(_QWORD *)(v1 - 240));
}

uint64_t OUTLINED_FUNCTION_19_46()
{
  return sub_22ABDE8E8();
}

uint64_t OUTLINED_FUNCTION_20_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return __swift_storeEnumTagSinglePayload(v4, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_21_51()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_26_39()
{
  return sub_22ABDE84C();
}

uint64_t OUTLINED_FUNCTION_27_40()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 224), *(_QWORD *)(v1 - 216));
}

uint64_t sub_22AAF4470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255B117B0);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_33();
  v9 = v8 - v7;
  type metadata accessor for TensorDescription();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_33();
  v13 = v12 - v11;
  if (__swift_getEnumTagSinglePayload(a1, 1, v14) == 1)
  {
    sub_22A9AD754(a1, &qword_255B117B0);
    sub_22A9E7780(a2, a3, v9);
    OUTLINED_FUNCTION_23();
    return sub_22A9AD754(v9, &qword_255B117B0);
  }
  else
  {
    sub_22A9E7D90(a1, v13);
    sub_22AB6148C(v13, a2, a3);
    return OUTLINED_FUNCTION_23();
  }
}

uint64_t sub_22AAF4564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAF45AC(a1, a2, a3, &qword_255B14C10, (uint64_t (*)(_QWORD))MEMORY[0x24BE63098], (void (*)(char *, uint64_t, uint64_t))sub_22AB61498, (void (*)(uint64_t, uint64_t))sub_22A9E7864);
}

uint64_t sub_22AAF4588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAF45AC(a1, a2, a3, &qword_255B0FB90, (uint64_t (*)(_QWORD))MEMORY[0x24BE62F58], (void (*)(char *, uint64_t, uint64_t))sub_22AB614A4, (void (*)(uint64_t, uint64_t))sub_22A9E7878);
}

uint64_t sub_22AAF45AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(char *, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);

  v22 = a6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_33();
  v15 = v14 - v13;
  v16 = a5(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v21 - v18;
  if (__swift_getEnumTagSinglePayload(a1, 1, v16) == 1)
  {
    OUTLINED_FUNCTION_7_72(a1);
    a7(a2, a3);
    OUTLINED_FUNCTION_23();
    return OUTLINED_FUNCTION_7_72(v15);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v19, a1, v16);
    v22(v19, a2, a3);
    return OUTLINED_FUNCTION_23();
  }
}

uint64_t sub_22AAF46CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAF45AC(a1, a2, a3, &qword_255B170F8, (uint64_t (*)(_QWORD))MEMORY[0x24BE62580], (void (*)(char *, uint64_t, uint64_t))sub_22AB614B0, (void (*)(uint64_t, uint64_t))sub_22A9E788C);
}

uint64_t sub_22AAF46F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AAF4714(a1, a2, a3, (void (*)(void))sub_22A9C38BC, (void (*)(_QWORD *, uint64_t, uint64_t))sub_22AB6150C, qword_255B17100, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_22A9E79D0);
}

uint64_t sub_22AAF4714(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(_QWORD *, uint64_t, uint64_t), uint64_t *a6, void (*a7)(_QWORD *__return_ptr, uint64_t, uint64_t))
{
  _QWORD v12[4];

  if (*(_QWORD *)(a1 + 24))
  {
    a4();
    a5(v12, a2, a3);
    return OUTLINED_FUNCTION_23();
  }
  else
  {
    sub_22A9AD754(a1, a6);
    a7(v12, a2, a3);
    OUTLINED_FUNCTION_23();
    return OUTLINED_FUNCTION_7_72((uint64_t)v12);
  }
}

unint64_t ImageColorTransformer.brightness.getter()
{
  unsigned int *v0;

  return OUTLINED_FUNCTION_0_72(*v0);
}

uint64_t ImageColorTransformer.brightness.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)v1 = result;
  *(_BYTE *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageColorTransformer.brightness.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

unint64_t ImageColorTransformer.contrast.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_0_72(*(unsigned int *)(v0 + 8));
}

uint64_t ImageColorTransformer.contrast.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  *(_BYTE *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageColorTransformer.contrast.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

unint64_t ImageColorTransformer.hue.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_0_72(*(unsigned int *)(v0 + 16));
}

uint64_t ImageColorTransformer.hue.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  *(_BYTE *)(v1 + 20) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageColorTransformer.hue.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

unint64_t ImageColorTransformer.saturation.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_0_72(*(unsigned int *)(v0 + 24));
}

uint64_t ImageColorTransformer.saturation.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  *(_BYTE *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageColorTransformer.saturation.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void __swiftcall ImageColorTransformer.init(brightness:contrast:hue:saturation:)(CreateMLComponents::ImageColorTransformer *__return_ptr retstr, Swift::Float_optional *brightness, Swift::Float_optional *contrast, Swift::Float_optional *hue, Swift::Float_optional *saturation)
{
  LODWORD(retstr->brightness.value) = (_DWORD)brightness;
  retstr->brightness.is_nil = BYTE4(brightness) & 1;
  LODWORD(retstr->contrast.value) = (_DWORD)contrast;
  retstr->contrast.is_nil = BYTE4(contrast) & 1;
  LODWORD(retstr->hue.value) = (_DWORD)hue;
  retstr->hue.is_nil = BYTE4(hue) & 1;
  LODWORD(retstr->saturation.value) = (_DWORD)saturation;
  retstr->saturation.is_nil = BYTE4(saturation) & 1;
}

id ImageColorTransformer.applied(to:eventHandler:)(void *a1)
{
  int *v1;
  int v3;
  char v4;
  int v5;
  char v6;
  int v7;
  char v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD v30[8];
  uint64_t v31;
  uint64_t v32;

  v3 = *v1;
  v4 = *((_BYTE *)v1 + 4);
  v5 = v1[2];
  v6 = *((_BYTE *)v1 + 12);
  v7 = v1[4];
  v8 = *((_BYTE *)v1 + 20);
  v9 = v1[6];
  v10 = *((_BYTE *)v1 + 28);
  v31 = MEMORY[0x24BEE4B00];
  v32 = MEMORY[0x24BEE4B00];
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    sub_22ABDED50();
    OUTLINED_FUNCTION_3_82();
    v30[0] = v3;
    OUTLINED_FUNCTION_1_62((uint64_t)v30, v21, v22, (void (*)(void))sub_22A9C38BC, (void (*)(_QWORD *, uint64_t, uint64_t))sub_22AB61258, qword_2540E86F8, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_22A9E76D8, v23);
    if ((v6 & 1) != 0)
    {
LABEL_3:
      if ((v10 & 1) != 0)
        goto LABEL_4;
LABEL_9:
      sub_22ABDED50();
      OUTLINED_FUNCTION_3_82();
      v30[0] = v9;
      OUTLINED_FUNCTION_1_62((uint64_t)v30, v27, v28, (void (*)(void))sub_22A9C38BC, (void (*)(_QWORD *, uint64_t, uint64_t))sub_22AB61258, qword_2540E86F8, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_22A9E76D8, v29);
      if ((v8 & 1) != 0)
        goto LABEL_6;
      goto LABEL_5;
    }
  }
  sub_22ABDED50();
  OUTLINED_FUNCTION_3_82();
  v30[0] = v5;
  OUTLINED_FUNCTION_1_62((uint64_t)v30, v24, v25, (void (*)(void))sub_22A9C38BC, (void (*)(_QWORD *, uint64_t, uint64_t))sub_22AB61258, qword_2540E86F8, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_22A9E76D8, v26);
  if ((v10 & 1) == 0)
    goto LABEL_9;
LABEL_4:
  if ((v8 & 1) == 0)
  {
LABEL_5:
    sub_22ABDED50();
    OUTLINED_FUNCTION_3_82();
    v30[0] = v7;
    OUTLINED_FUNCTION_1_62((uint64_t)v30, v11, v12, (void (*)(void))sub_22A9C38BC, (void (*)(_QWORD *, uint64_t, uint64_t))sub_22AB61258, qword_2540E86F8, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_22A9E76D8, v13);
  }
LABEL_6:
  v14 = (void *)sub_22ABDED2C();
  v15 = (void *)OUTLINED_FUNCTION_4_68();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(a1, sel_imageByApplyingFilter_withInputParameters_, v14, v15);

  v17 = (void *)sub_22ABDED2C();
  v18 = (void *)OUTLINED_FUNCTION_4_68();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_imageByApplyingFilter_withInputParameters_, v17, v18);

  return v19;
}

uint64_t sub_22AAF4B34(id *a1, void **a2)
{
  uint64_t v2;

  *a1 = ImageColorTransformer.applied(to:eventHandler:)(*a2);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v2 + 8));
}

__n128 __swift_memcpy29_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ImageColorTransformer(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 29))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ImageColorTransformer(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 29) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ImageColorTransformer()
{
  return &type metadata for ImageColorTransformer;
}

unint64_t OUTLINED_FUNCTION_0_72@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 v1;

  return a1 | ((unint64_t)v1 << 32);
}

uint64_t OUTLINED_FUNCTION_4_68()
{
  return sub_22ABDEAA4();
}

uint64_t OUTLINED_FUNCTION_7_72(uint64_t a1)
{
  uint64_t *v1;

  return sub_22A9AD754(a1, v1);
}

uint64_t Transformer.adaptedAsAnnotatedFeatureTransformer<A>(annotationType:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, a1);
}

void sub_22AAF4CB4(uint64_t *a1)
{
  type metadata accessor for AnnotatedFeatureTransformerAdaptor(255, *a1, a1[1], a1[2]);
  JUMPOUT(0x22E2E4D80);
}

uint64_t type metadata accessor for AnnotatedFeatureTransformerAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnnotatedFeatureTransformerAdaptor);
}

uint64_t sub_22AAF4CEC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AAF4D9C + 4 * byte_22ABF94A0[(v8 - 1)]))();
}

void sub_22AAF4DE8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_22AAF4F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v5[2] = a1;
  v5[3] = a2;
  v10 = a5[3];
  v5[4] = v10;
  v5[5] = *(_QWORD *)(v10 - 8);
  v5[6] = OUTLINED_FUNCTION_0_0();
  v11 = a5[4];
  v5[7] = v11;
  v12 = a5[2];
  v5[8] = v12;
  v5[9] = swift_getAssociatedTypeWitness();
  v13 = OUTLINED_FUNCTION_0_0();
  v5[10] = v13;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 24)
                                                                                     + *(_QWORD *)(v11 + 24));
  v14 = (_QWORD *)swift_task_alloc();
  v5[11] = v14;
  *v14 = v5;
  v14[1] = sub_22AAF5088;
  return v16(v13, a2, a3, a4, v12, v11);
}

uint64_t sub_22AAF5088()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22AAF50EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = type metadata accessor for AnnotatedFeature(0, AssociatedTypeWitness, v5, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6 + *(int *)(v10 + 36), v5);
  AnnotatedFeature.init(feature:annotation:)(v2, v3, v1, v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAF51AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22A9B24D4;
  return sub_22AAF4F90(a1, a2, a3, a4, a5);
}

uint64_t sub_22AAF522C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  float *v4;
  float v5;
  float v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_22AB4D538();
    result = v8;
    v4 = (float *)(a1 + 36);
    do
    {
      v5 = *(v4 - 1);
      v6 = 0.0;
      if ((LODWORD(v5) & 0x7FFFFFFF) != 0 && (*(_DWORD *)v4 & 0x7FFFFFFF) != 0)
        v6 = 1.0 / v5;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      if (v7 >= *(_QWORD *)(result + 24) >> 1)
      {
        sub_22AB4D538();
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(float *)(result + 4 * v7 + 32) = v6;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t HumanBodyActionCounter.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  *(_QWORD *)(v7 + 32) = a5;
  *(_QWORD *)(v7 + 40) = a6;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a5 - 8);
  *(_QWORD *)(v7 + 56) = swift_task_alloc();
  *(_QWORD *)(v7 + 64) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255B145C8);
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(a6 + 8);
  v9 = sub_22ABDFDA0();
  *(_QWORD *)(v7 + 80) = v9;
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 96) = swift_task_alloc();
  *(_QWORD *)(v7 + 104) = swift_task_alloc();
  *(_OWORD *)(v7 + 112) = *(_OWORD *)v6;
  *(_QWORD *)(v7 + 128) = *(_QWORD *)(v6 + 16);
  return OUTLINED_FUNCTION_6_3();
}

uint64_t sub_22AAF53E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[4];

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 40);
  v18 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_OWORD **)(v0 + 16);
  (*(void (**)(void))(*(_QWORD *)(v0 + 48) + 16))();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = v15;
  v7[4] = v1;
  swift_retain();
  sub_22ABDEAEC();
  sub_22ABDF20C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v18, v2, v4);
  v8 = (*(uint64_t (**)(uint64_t))(v17 + 24))(v5);
  LOBYTE(v5) = v9 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B100E0);
  v11 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE7090], v4);
  AnyTemporalSequence.init<A>(_:count:)(v18, v8, v5, v10, v4, v11, (uint64_t)v19);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, v4);
  v12 = v19[1];
  *v6 = v19[0];
  v6[1] = v12;
  v13 = v19[3];
  v6[2] = v19[2];
  v6[3] = v13;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAF5584(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = *a2;
  v7 = a2[1];
  *(_QWORD *)(v5 + 48) = a1;
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = v7;
  *(_OWORD *)(v5 + 72) = *((_OWORD *)a2 + 1);
  v8 = a2[5];
  *(_QWORD *)(v5 + 88) = a2[4];
  *(_QWORD *)(v5 + 16) = a3;
  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = a5;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 96) = v9;
  *v9 = v5;
  v9[1] = sub_22AAF55F4;
  return sub_22A9F0DF4(v8);
}

uint64_t sub_22AAF55F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 112) = a1;
  return OUTLINED_FUNCTION_6_3();
}

uint64_t sub_22AAF565C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v8 = *(_OWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  sub_22ABDEAEC();
  v6 = sub_22AAF522C(v1);
  swift_bridgeObjectRelease();
  *(_QWORD *)v5 = v4;
  *(_QWORD *)(v5 + 8) = v3;
  *(_OWORD *)(v5 + 16) = v8;
  *(_QWORD *)(v5 + 32) = v2;
  *(_QWORD *)(v5 + 40) = v6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAF56EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AAF56F8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22AAF5724(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_22A9ABF58;
  return sub_22AAF5584(a1, a2, v6, v7, v8);
}

unint64_t sub_22AAF57A4()
{
  unint64_t result;

  result = qword_255B171D0;
  if (!qword_255B171D0)
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for HumanBodyActionCounter.CumulativeSumSequence, &type metadata for HumanBodyActionCounter.CumulativeSumSequence);
    atomic_store(result, (unint64_t *)&qword_255B171D0);
  }
  return result;
}

uint64_t sub_22AAF57E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_22A9ABF58;
  return HumanBodyActionCounter.applied<A>(to:eventHandler:)(a1, a2, v12, v13, a5, a6);
}

ValueMetadata *type metadata accessor for HumanBodyActionCounter()
{
  return &type metadata for HumanBodyActionCounter;
}

uint64_t PreprocessingSupervisedEstimator.preprocessor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 16), a2);
}

uint64_t PreprocessingSupervisedEstimator.preprocessor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*PreprocessingSupervisedEstimator.preprocessor.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t PreprocessingSupervisedEstimator.estimator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_8(*(_QWORD *)(a1 + 24), a2);
}

uint64_t PreprocessingSupervisedEstimator.estimator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_7_7(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*PreprocessingSupervisedEstimator.estimator.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void PreprocessingSupervisedEstimator.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for PreprocessingSupervisedEstimator();
}

uint64_t sub_22AAF5934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for PreprocessingSupervisedEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void PreprocessingSupervisedEstimator.preprocessed<A>(from:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[11] = a6;
  v7[12] = v6;
  v7[9] = a3;
  v7[10] = a5;
  v7[7] = a1;
  v7[8] = a2;
  v7[13] = a4[4];
  v7[14] = a4[2];
  swift_getAssociatedTypeWitness();
  v7[15] = sub_22ABDF0F8();
  v7[16] = a4[5];
  v7[17] = a4[3];
  v7[18] = OUTLINED_FUNCTION_72_14();
  v7[19] = sub_22ABDFA10();
  OUTLINED_FUNCTION_52_3();
}

void sub_22AAF5A4C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = a1;
  OUTLINED_FUNCTION_76_6();
}

void sub_22AAF5A60(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[21] = a1;
  v2[2] = v1;
  v2[3] = v3;
  v2[4] = v4;
  v2[22] = OUTLINED_FUNCTION_71_6(a1);
  OUTLINED_FUNCTION_115_0();
}

uint64_t sub_22AAF5A88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1[23] = a1;
  v7 = sub_22ABDF7B8();
  v1[24] = v7;
  v1[25] = *(_QWORD *)(v7 - 8);
  v1[26] = OUTLINED_FUNCTION_0_0();
  v1[27] = *(_QWORD *)(v3 - 8);
  v1[28] = OUTLINED_FUNCTION_0_0();
  v1[29] = *(_QWORD *)(v6 - 8);
  v1[30] = OUTLINED_FUNCTION_0_0();
  v1[31] = type metadata accessor for AnnotatedFeature(255, v4, v5, v8);
  v1[32] = sub_22ABDFA10();
  v1[33] = OUTLINED_FUNCTION_0_0();
  v1[34] = *(_QWORD *)(v2 - 8);
  v1[35] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_117_0();
  v9 = sub_22ABDF7B8();
  v1[36] = v9;
  v1[37] = *(_QWORD *)(v9 - 8);
  v1[38] = OUTLINED_FUNCTION_0_0();
  v1[39] = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_117_0();
  v10 = sub_22ABDFA10();
  v1[40] = v10;
  v1[41] = *(_QWORD *)(v10 - 8);
  v1[42] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

uint64_t sub_22AAF5BB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v14 = v0[36];
  v18 = v0[35];
  v19 = v0[40];
  v17 = v0[34];
  v1 = v0[16];
  v2 = v0[17];
  v3 = v0[13];
  v4 = v0[14];
  v5 = v0[11];
  v15 = v0[37];
  v16 = v0[12];
  v6 = v0[10];
  sub_22ABDEEB8();
  v7 = (_QWORD *)OUTLINED_FUNCTION_100();
  *v7 = v4;
  v7[1] = v2;
  v7[2] = v6;
  v7[3] = v3;
  v7[4] = v1;
  v7[5] = v5;
  v8 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v9 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v9[2] = v4;
  v9[3] = v2;
  v9[4] = v6;
  v9[5] = v3;
  v9[6] = v1;
  v9[7] = v5;
  v9[8] = v8;
  v0[43] = MEMORY[0x22E2E4D80](MEMORY[0x24BEE25B0], v14);
  sub_22ABDFBC0();
  swift_release();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
  v0[44] = (uint64_t)v10;
  OUTLINED_FUNCTION_51_0(v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v16, v4);
  v11 = (_QWORD *)swift_task_alloc();
  v0[45] = (uint64_t)v11;
  v12 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v19);
  *v11 = v0;
  v11[1] = sub_22AAF5D48;
  return Transformer.applied<A>(to:eventHandler:)(v0[42], v0[8], v0[9], v0[14], v0[40], v0[13], v12);
}

uint64_t sub_22AAF5D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 368) = v1;
  swift_task_dealloc();
  v5 = *(_QWORD *)(v4 + 272);
  if (!v1)
    *(_QWORD *)(v4 + 376) = a1;
  OUTLINED_FUNCTION_30_0(v5);
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AAF5DC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v14 = (void (*)(uint64_t, uint64_t))v0[44];
  v19 = v0[38];
  v12 = v0[36];
  v16 = v0[29];
  v13 = v0[27];
  v15 = v0[26];
  v18 = v0[25];
  v17 = v0[24];
  v1 = v0[17];
  v0[6] = v0[47];
  v2 = v0[16];
  v3 = v0[13];
  v4 = v0[14];
  v5 = v0[10];
  v6 = v0[11];
  sub_22ABDEEB8();
  v7 = (_QWORD *)OUTLINED_FUNCTION_100();
  *v7 = v4;
  v7[1] = v1;
  v7[2] = v5;
  v7[3] = v3;
  v7[4] = v2;
  v7[5] = v6;
  v8 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v9 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v9[2] = v4;
  v9[3] = v1;
  v9[4] = v5;
  v9[5] = v3;
  v9[6] = v2;
  v9[7] = v6;
  v9[8] = v8;
  sub_22ABDFBC0();
  swift_release();
  v14(v19, v12);
  sub_22ABE0178();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  swift_bridgeObjectRelease();
  sub_22ABDEEB8();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  v10 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v10[2] = v4;
  v10[3] = v1;
  v10[4] = v5;
  v10[5] = v3;
  v10[6] = v2;
  v10[7] = v6;
  v11 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v11[2] = v4;
  v11[3] = v1;
  v11[4] = v5;
  v11[5] = v3;
  v11[6] = v2;
  v11[7] = v6;
  v11[8] = sub_22AAF6418;
  v11[9] = v10;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE25B0], v17);
  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22AAF608C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_22ABDF764();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 - 136) + 8))(*(_QWORD *)(v1 - 120), *(_QWORD *)(v1 - 128));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_48_8();
  OUTLINED_FUNCTION_62_6();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_96_2();
  OUTLINED_FUNCTION_174();
  OUTLINED_FUNCTION_13_3();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_22AAF6100()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = OUTLINED_FUNCTION_63_15();
  v2(v1);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22AAF6188()
{
  sub_22AAF62AC();
}

uint64_t sub_22AAF61A4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v5 = (char *)&v11 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - v4, a1, AssociatedTypeWitness, v3);
  v7 = swift_getAssociatedTypeWitness();
  v9 = type metadata accessor for AnnotatedFeature(0, AssociatedTypeWitness, v7, v8);
  return AnnotatedFeature.feature.setter((uint64_t)v5, v9);
}

void sub_22AAF627C()
{
  OUTLINED_FUNCTION_77_13();
}

uint64_t sub_22AAF6288()
{
  swift_release();
  return swift_deallocObject();
}

void sub_22AAF62AC()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_89_6();
  OUTLINED_FUNCTION_72_14();
  v1 = OUTLINED_FUNCTION_71_14();
  v5 = OUTLINED_FUNCTION_81_10(v1, v2, v3, v4);
  v0(v5);
  OUTLINED_FUNCTION_38();
}

void sub_22AAF630C()
{
  sub_22AAF62AC();
}

uint64_t sub_22AAF6328(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v5 = (char *)&v11 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - v4, a1, AssociatedTypeWitness, v3);
  v7 = swift_getAssociatedTypeWitness();
  v9 = type metadata accessor for AnnotatedFeature(0, v7, AssociatedTypeWitness, v8);
  return AnnotatedFeature.annotation.setter((uint64_t)v5, v9);
}

void sub_22AAF6400()
{
  OUTLINED_FUNCTION_77_13();
}

uint64_t sub_22AAF640C()
{
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_22AAF641C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_22AAF64DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t PreprocessingSupervisedEstimator.fitted<A>(toPreprocessed:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v10 = a5[2];
  v8[10] = v10;
  v8[11] = *(_QWORD *)(v10 - 8);
  v8[12] = OUTLINED_FUNCTION_0_0();
  v11 = a5[3];
  v8[13] = v11;
  v8[14] = *(_QWORD *)(v11 - 8);
  v8[15] = OUTLINED_FUNCTION_0_0();
  v8[16] = a5[5];
  v12 = OUTLINED_FUNCTION_65_2();
  v8[17] = v12;
  v8[18] = *(_QWORD *)(v12 - 8);
  v8[19] = OUTLINED_FUNCTION_23_0();
  v8[20] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAF65AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v1 = v0[16];
  OUTLINED_FUNCTION_58_12(v0[15], v0[14]);
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v1 + 40));
  v5 = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[21] = v3;
  *v3 = v0;
  v3[1] = sub_22AAF6628;
  return v5(v0[20], v0[3], v0[4], v0[5], v0[7], v0[8], v0[13], v0[16]);
}

uint64_t sub_22AAF6628()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_17_1();
  v3 = *(_QWORD *)(v2 + 112);
  *v4 = *v1;
  *(_QWORD *)(v2 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

#error "22AAF66E8: call analysis failed (funcsize=20)"

uint64_t sub_22AAF66EC()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_46_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_5_0(v0);
}

uint64_t sub_22AAF6708()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PreprocessingSupervisedEstimator.fitted<A, B>(toPreprocessed:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v9[11] = v16;
  v9[12] = v8;
  v9[9] = a8;
  v9[10] = v15;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  v11 = a6[2];
  v9[13] = v11;
  v9[14] = *(_QWORD *)(v11 - 8);
  v9[15] = OUTLINED_FUNCTION_0_0();
  v12 = a6[3];
  v9[16] = v12;
  v9[17] = *(_QWORD *)(v12 - 8);
  v9[18] = OUTLINED_FUNCTION_0_0();
  v9[19] = a6[5];
  v13 = OUTLINED_FUNCTION_65_2();
  v9[20] = v13;
  v9[21] = *(_QWORD *)(v13 - 8);
  v9[22] = OUTLINED_FUNCTION_23_0();
  v9[23] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AAF6808()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0[19];
  OUTLINED_FUNCTION_58_12(v0[18], v0[17]);
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v1 + 48));
  v4 = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_22AAF6890;
  __asm { BR              X8 }
}

uint64_t sub_22AAF6890()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_17_1();
  v3 = *(_QWORD *)(v2 + 136);
  *v4 = *v1;
  *(_QWORD *)(v2 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

#error "22AAF6950: call analysis failed (funcsize=20)"

uint64_t sub_22AAF6954()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_46_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_5_0(v0);
}

uint64_t sub_22AAF6970()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_0_8(*(uint64_t (**)(void))(v0 + 8));
}

void PreprocessingSupervisedEstimator.fitted<A>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_23_5();
  v3 = v2;
  v1[13] = v4;
  v1[14] = v0;
  v1[11] = v2;
  v1[12] = v5;
  v1[9] = v6;
  v1[10] = v7;
  v1[7] = v8;
  v1[8] = v9;
  v1[15] = *(_QWORD *)(v2 + 32);
  v1[16] = *(_QWORD *)(v2 + 16);
  swift_getAssociatedTypeWitness();
  v1[17] = sub_22ABDF0F8();
  v1[18] = *(_QWORD *)(v3 + 40);
  v1[19] = *(_QWORD *)(v3 + 24);
  v1[20] = swift_getAssociatedTypeWitness();
  v1[21] = sub_22ABDFA10();
  OUTLINED_FUNCTION_52_3();
}

void sub_22AAF6A90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v2[22] = a1;
  v5 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v3);
  v2[23] = v5;
  v2[2] = v1;
  v2[3] = v3;
  v2[4] = a1;
  v2[24] = OUTLINED_FUNCTION_71_6(v5);
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22AAF6AD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;

  v2[25] = a1;
  v8 = sub_22ABDF7B8();
  v2[26] = v8;
  v2[27] = *(_QWORD *)(v8 - 8);
  v2[28] = OUTLINED_FUNCTION_0_0();
  v2[29] = *(_QWORD *)(v1 - 8);
  v2[30] = OUTLINED_FUNCTION_0_0();
  v2[31] = type metadata accessor for AnnotatedFeature(255, v4, v7, v9);
  v10 = sub_22ABDFA10();
  v2[32] = v10;
  v2[33] = *(_QWORD *)(v10 - 8);
  v2[34] = OUTLINED_FUNCTION_0_0();
  v2[35] = *(_QWORD *)(v6 - 8);
  v2[36] = OUTLINED_FUNCTION_0_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[37] = AssociatedTypeWitness;
  v2[38] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[39] = OUTLINED_FUNCTION_23_0();
  v2[40] = OUTLINED_FUNCTION_38_0();
  v2[41] = *(_QWORD *)(v3 - 8);
  v2[42] = OUTLINED_FUNCTION_23_0();
  v2[43] = OUTLINED_FUNCTION_38_0();
  v2[44] = *(_QWORD *)(v5 - 8);
  v2[45] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_117_0();
  v12 = sub_22ABDF7B8();
  v2[46] = v12;
  v2[47] = *(_QWORD *)(v12 - 8);
  v2[48] = OUTLINED_FUNCTION_0_0();
  v2[49] = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_117_0();
  v13 = sub_22ABDFA10();
  v2[50] = v13;
  v2[51] = *(_QWORD *)(v13 - 8);
  v2[52] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AAF6C54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = v0[19];
  v2 = v0[18];
  v4 = v0[15];
  v3 = v0[16];
  v5 = v0[13];
  v6 = v0[12];
  sub_22ABDEEB8();
  v7 = (_QWORD *)OUTLINED_FUNCTION_100();
  *v7 = v3;
  v7[1] = v1;
  v7[2] = v6;
  v7[3] = v4;
  v8 = v4;
  v7[4] = v2;
  v7[5] = v5;
  v9 = v2;
  v10 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v11 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v11[2] = v3;
  v11[3] = v1;
  v11[4] = v6;
  v11[5] = v8;
  v11[6] = v9;
  v11[7] = v5;
  v11[8] = v10;
  OUTLINED_FUNCTION_106();
}

uint64_t sub_22AAF6D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v45)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_90_9();
  swift_release();
  v45 = *(uint64_t (**)(uint64_t, uint64_t))(a15 + 8);
  OUTLINED_FUNCTION_48_2(v22, v45);
  sub_22ABDEEB8();
  v28 = (_QWORD *)OUTLINED_FUNCTION_100();
  v29 = v21;
  *v28 = v21;
  v28[1] = a10;
  v28[2] = v23;
  v28[3] = v25;
  v28[4] = a9;
  v28[5] = v26;
  v30 = v26;
  v31 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v32 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v32[2] = v29;
  v32[3] = a10;
  v32[4] = v23;
  v32[5] = v25;
  v32[6] = a9;
  v32[7] = v30;
  v32[8] = v31;
  v34 = *(_QWORD *)(v27 - 88);
  v33 = *(_QWORD *)(v27 - 80);
  sub_22ABDFBC0();
  swift_release();
  v45(v34, v33);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(a19 + 16);
  *(_QWORD *)(v24 + 424) = v35;
  v35(a20, a18, v29);
  v36 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v24 + 432) = v36;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], a21);
  *v36 = v24;
  v36[1] = sub_22AAF6EBC;
  OUTLINED_FUNCTION_36_30();
  return Transformer.applied<A>(to:eventHandler:)(v37, v38, v39, v40, v41, v42, v43);
}

uint64_t sub_22AAF6EBC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_83_12();
  v0[55] = v2;
  v0[56] = v1;
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_30_0(v0[41]);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AAF6F1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0[56];
  sub_22ABDF1DC();
  if (v1)
  {
    swift_bridgeObjectRelease();
    v2 = v0[51];
    (*(void (**)(_QWORD, _QWORD))(v0[44] + 8))(v0[45], v0[21]);
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_85_3();
    OUTLINED_FUNCTION_60_6();
    OUTLINED_FUNCTION_84_3();
    OUTLINED_FUNCTION_47_5();
    OUTLINED_FUNCTION_48_8();
    OUTLINED_FUNCTION_36_30();
    __asm { BR              X0 }
  }
  v4 = v0[55];
  v20 = v0[32];
  v5 = v0[30];
  v6 = v0[28];
  v19 = v0[27];
  v12 = v0[29];
  v7 = v0[19];
  v17 = v0[18];
  v18 = v0[26];
  v16 = v0[15];
  v14 = v0[16];
  v15 = v0[13];
  v13 = v0[12];
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v0[35] + 16))(v0[36], v0[14] + *(int *)(v0[11] + 52), v7);
  v0[6] = v4;
  sub_22ABE0178();
  OUTLINED_FUNCTION_3_8();
  sub_22ABDEEB8();
  OUTLINED_FUNCTION_28_4(v5, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  v8 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v8[2] = v14;
  v8[3] = v7;
  v8[4] = v13;
  v8[5] = v16;
  v8[6] = v17;
  v8[7] = v15;
  v9 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v9[2] = v14;
  v9[3] = v7;
  v9[4] = v13;
  v9[5] = v16;
  v9[6] = v17;
  v9[7] = v15;
  v9[8] = sub_22AAF6418;
  v9[9] = v8;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE25B0], v18);
  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v6, v18);
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v17 + 40));
  v10 = (_QWORD *)swift_task_alloc();
  v0[57] = v10;
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v20);
  *v10 = v0;
  v10[1] = sub_22AAF71C8;
  OUTLINED_FUNCTION_36_30();
  __asm { BR              X8 }
}

uint64_t sub_22AAF71C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 464) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 280);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v2 + 264));
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AAF7248()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = v0[52];
  v11 = (void (*)(uint64_t, uint64_t, uint64_t))v0[53];
  v3 = v0[50];
  v2 = v0[51];
  v4 = v0[42];
  v5 = v0[39];
  v9 = v0[40];
  v6 = v0[38];
  v7 = v0[16];
  v8 = v0[14];
  v10 = v0[7];
  OUTLINED_FUNCTION_30_0(v0[44]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v11(v4, v8, v7);
  OUTLINED_FUNCTION_27_8(v5, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  swift_getAssociatedConformanceWitness();
  ComposedTransformer.init(_:_:)(v4, v7, v10);
}

uint64_t sub_22AAF7350()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_60_6();
  OUTLINED_FUNCTION_84_3();
  swift_task_dealloc();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v0();
}

uint64_t sub_22AAF73A4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6_83();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AAF7418()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6_83();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v1 + 8));
}

void sub_22AAF748C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_80_15();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_61_16();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_79_12();
  OUTLINED_FUNCTION_66_17();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_18_56(v2, v3);
  OUTLINED_FUNCTION_46_23();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_17_18();
}

uint64_t sub_22AAF7524()
{
  return OUTLINED_FUNCTION_2_17();
}

void sub_22AAF7530()
{
  sub_22AAF748C();
}

uint64_t sub_22AAF7550(uint64_t a1)
{
  uint64_t v1;

  return sub_22AAF641C(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 64));
}

void PreprocessingSupervisedEstimator.fitted<A, B>(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;

  v11[21] = a10;
  v11[22] = v10;
  v11[19] = a8;
  v11[20] = a9;
  v11[17] = a6;
  v11[18] = a7;
  v11[15] = a4;
  v11[16] = a5;
  v11[13] = a2;
  v11[14] = a3;
  v11[12] = a1;
  v11[23] = a6[4];
  v11[24] = a6[2];
  OUTLINED_FUNCTION_72_14();
  v11[25] = sub_22ABDF0F8();
  v11[26] = a6[5];
  v11[27] = a6[3];
  v11[28] = swift_getAssociatedTypeWitness();
  v11[29] = OUTLINED_FUNCTION_67_13();
  OUTLINED_FUNCTION_52_3();
}

void sub_22AAF7670(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
  OUTLINED_FUNCTION_115_0();
}

void sub_22AAF7684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[31] = a1;
  v3[2] = v2;
  v3[3] = v4;
  v3[4] = v1;
  v3[32] = OUTLINED_FUNCTION_71_6(a1);
  OUTLINED_FUNCTION_106();
}

void sub_22AAF76AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[33] = a1;
  v5 = sub_22ABDF7B8();
  v2[34] = v5;
  v2[35] = *(_QWORD *)(v5 - 8);
  v2[36] = OUTLINED_FUNCTION_0_0();
  v2[37] = *(_QWORD *)(v3 - 8);
  v2[38] = OUTLINED_FUNCTION_0_0();
  v2[39] = type metadata accessor for AnnotatedFeature(255, v1, v4, v6);
  v7 = sub_22ABDFA10();
  v2[40] = v7;
  v2[41] = *(_QWORD *)(v7 - 8);
  v2[42] = OUTLINED_FUNCTION_0_0();
  v2[43] = OUTLINED_FUNCTION_67_13();
  OUTLINED_FUNCTION_76_6();
}

void sub_22AAF7748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[44] = a1;
  v3[6] = v2;
  v3[7] = v4;
  v3[8] = v1;
  v3[9] = a1;
  v3[45] = sub_22ABDF7E8();
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22AAF7778(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2[46] = a1;
  v6 = sub_22ABDF7B8();
  v2[47] = v6;
  v2[48] = *(_QWORD *)(v6 - 8);
  v2[49] = OUTLINED_FUNCTION_0_0();
  v2[50] = *(_QWORD *)(v1 - 8);
  v2[51] = OUTLINED_FUNCTION_0_0();
  v7 = sub_22ABDFA10();
  v2[52] = v7;
  v2[53] = *(_QWORD *)(v7 - 8);
  v2[54] = OUTLINED_FUNCTION_0_0();
  v2[55] = *(_QWORD *)(v4 - 8);
  v2[56] = OUTLINED_FUNCTION_0_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[57] = AssociatedTypeWitness;
  v2[58] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[59] = OUTLINED_FUNCTION_23_0();
  v2[60] = OUTLINED_FUNCTION_38_0();
  v2[61] = *(_QWORD *)(v14 - 8);
  v2[62] = OUTLINED_FUNCTION_23_0();
  v2[63] = OUTLINED_FUNCTION_38_0();
  v2[64] = OUTLINED_FUNCTION_38_0();
  v2[65] = *(_QWORD *)(v5 - 8);
  v2[66] = OUTLINED_FUNCTION_0_0();
  v9 = sub_22ABDF7B8();
  v2[67] = v9;
  v2[68] = *(_QWORD *)(v9 - 8);
  v2[69] = OUTLINED_FUNCTION_0_0();
  v2[70] = swift_getAssociatedTypeWitness();
  v10 = sub_22ABDFA10();
  v2[71] = v10;
  v2[72] = *(_QWORD *)(v10 - 8);
  v2[73] = OUTLINED_FUNCTION_0_0();
  v2[74] = *(_QWORD *)(v3 - 8);
  v2[75] = OUTLINED_FUNCTION_0_0();
  v11 = sub_22ABDF7B8();
  v2[76] = v11;
  v2[77] = *(_QWORD *)(v11 - 8);
  v2[78] = OUTLINED_FUNCTION_0_0();
  v12 = sub_22ABDFA10();
  v2[79] = v12;
  v2[80] = *(_QWORD *)(v12 - 8);
  v2[81] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AAF795C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = v0[27];
  v2 = v0[26];
  v4 = v0[23];
  v3 = v0[24];
  v5 = v0[21];
  v7 = v0[19];
  v6 = v0[20];
  v8 = v0[18];
  sub_22ABDEEB8();
  v9 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  *v9 = v3;
  v9[1] = v1;
  v9[2] = v8;
  v9[3] = v7;
  v9[4] = v4;
  v9[5] = v2;
  v9[6] = v6;
  v9[7] = v5;
  v11 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v10 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v10[2] = v3;
  v10[3] = v1;
  v10[4] = v8;
  v10[5] = v7;
  v10[6] = v4;
  v10[7] = v2;
  v10[8] = v6;
  v10[9] = v5;
  v10[10] = v11;
  OUTLINED_FUNCTION_115_0();
}

void sub_22AAF7AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);

  sub_22ABDFBC0();
  swift_release();
  v44 = *(uint64_t (**)(uint64_t, uint64_t))(a13 + 8);
  OUTLINED_FUNCTION_99_1(v44);
  sub_22ABDEEB8();
  v33 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v34 = *(_QWORD *)(v32 - 104);
  v35 = *(_QWORD *)(v32 - 96);
  *v33 = v28;
  v33[1] = v35;
  v33[2] = v31;
  v33[3] = v30;
  v33[4] = v34;
  v33[5] = a28;
  v33[6] = v29;
  v33[7] = a26;
  v43 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v36 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v36[2] = v28;
  v36[3] = v35;
  v36[4] = v31;
  v36[5] = v30;
  v36[6] = v34;
  v36[7] = a28;
  v36[8] = v29;
  v36[9] = a26;
  v36[10] = v43;
  v37 = *(_QWORD *)(v32 - 144);
  sub_22ABDFBC0();
  swift_release();
  v44(a27, v37);
  OUTLINED_FUNCTION_87_8();
  v38 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v40 = *(_QWORD *)(v32 - 104);
  v39 = *(_QWORD *)(v32 - 96);
  *v38 = a23;
  v38[1] = v39;
  v38[2] = v31;
  v38[3] = v30;
  v38[4] = v40;
  v38[5] = a28;
  v38[6] = v29;
  v38[7] = a26;
  *(_QWORD *)(v32 - 144) = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v41 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v41[2] = a23;
  v41[3] = v39;
  v41[4] = v31;
  v41[5] = a22;
  v41[6] = v40;
  v41[7] = a28;
  v41[8] = v29;
  v42 = *(_QWORD *)(v32 - 144);
  v41[9] = a26;
  v41[10] = v42;
  OUTLINED_FUNCTION_115_0();
}

uint64_t sub_22AAF7C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v7 - 144) = a1;
  OUTLINED_FUNCTION_90_9();
  swift_release();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
  *(_QWORD *)(v7 - 128) = v8;
  OUTLINED_FUNCTION_99_1(v8);
  v9 = v6;
  OUTLINED_FUNCTION_87_8();
  v10 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v11 = *(_QWORD *)(v7 - 96);
  *v10 = v4;
  v10[1] = v11;
  v10[2] = v23;
  v10[3] = v9;
  v10[4] = v5;
  v10[5] = v2;
  v10[6] = v24;
  v10[7] = v1;
  v12 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v13 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v13[2] = v4;
  v13[3] = v11;
  v13[4] = v23;
  v13[5] = v9;
  v13[6] = *(_QWORD *)(v7 - 104);
  v13[7] = v2;
  v13[8] = v24;
  v13[9] = v25;
  v13[10] = v12;
  v14 = *(_QWORD *)(v7 - 136);
  OUTLINED_FUNCTION_90_9();
  swift_release();
  (*(void (**)(_QWORD *, uint64_t))(v7 - 128))(v10, v14);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v3[82] = (uint64_t)v15;
  OUTLINED_FUNCTION_27_8(v22, v20, v15);
  v16 = (_QWORD *)swift_task_alloc();
  v3[83] = (uint64_t)v16;
  v17 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40]);
  *v16 = v3;
  v16[1] = sub_22AAF7DC0;
  return Transformer.applied<A>(to:eventHandler:)(v3[81], v3[15], v3[16], v3[24], v3[79], v3[23], v17);
}

uint64_t sub_22AAF7DC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_83_12();
  v0[84] = v2;
  v0[85] = v1;
  OUTLINED_FUNCTION_62_2();
  v3 = v0[64];
  v4 = v0[24];
  v5 = *(void (**)(uint64_t, uint64_t))(v0[61] + 8);
  if (!v1)
    v0[86] = v5;
  v5(v3, v4);
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAF7E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_15_19();
  v3 = *(_QWORD *)(v0 + 680);
  sub_22ABDF1DC();
  if (!v3)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 656))(*(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 192));
    *(_QWORD *)(v0 + 696) = swift_task_alloc();
    OUTLINED_FUNCTION_52_3();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_88_5();
  v11 = v4;
  v5 = *(_QWORD *)(v0 + 600);
  v6 = *(_QWORD *)(v0 + 592);
  v7 = *(_QWORD *)(v0 + 584);
  v8 = *(_QWORD *)(v0 + 576);
  OUTLINED_FUNCTION_65_17();
  OUTLINED_FUNCTION_41_24(v9);
  OUTLINED_FUNCTION_48_2(v7, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_28_4(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_60_6();
  OUTLINED_FUNCTION_84_3();
  OUTLINED_FUNCTION_47_5();
  OUTLINED_FUNCTION_81_3();
  OUTLINED_FUNCTION_174();
  return OUTLINED_FUNCTION_2_34(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAF7F7C(uint64_t a1)
{
  uint64_t **v1;
  uint64_t *v2;

  *v1 = v2;
  v1[1] = (uint64_t *)sub_22AAF7FC4;
  return Transformer.applied<A>(to:eventHandler:)(v2[73], v2[15], v2[16], v2[24], v2[71], v2[23], a1);
}

uint64_t sub_22AAF7FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_83_12();
  *(_QWORD *)(v0 + 704) = v2;
  *(_QWORD *)(v0 + 712) = v1;
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_98_6(*(uint64_t (**)(_QWORD, _QWORD))(v0 + 688));
  if (v1)
    OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AAF802C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = *(_QWORD *)(v0 + 712);
  sub_22ABDF1DC();
  if (!v3)
  {
    v11 = *(_QWORD *)(v0 + 672);
    v12 = *(_QWORD *)(v0 + 360);
    v25 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 152);
    OUTLINED_FUNCTION_27_8(*(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 176) + *(int *)(*(_QWORD *)(v0 + 136) + 52), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 440) + 16));
    *(_QWORD *)(v0 + 80) = v11;
    sub_22ABE0178();
    swift_bridgeObjectRelease();
    sub_22ABDEEB8();
    v15 = OUTLINED_FUNCTION_63_15();
    v16(v15, v12);
    v17 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v17[2] = v14;
    v17[3] = v13;
    v17[4] = v22;
    v17[5] = v19;
    v17[6] = v20;
    v17[7] = v21;
    v17[8] = v24;
    v17[9] = v25;
    v18 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v18[2] = v14;
    v18[3] = v13;
    v18[4] = v22;
    v18[5] = v19;
    v18[6] = v20;
    v18[7] = v21;
    v18[8] = v24;
    v18[9] = v25;
    v18[10] = sub_22AAF8C2C;
    v18[11] = v17;
    OUTLINED_FUNCTION_106();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_88_5();
  v23 = v4;
  v5 = *(_QWORD *)(v0 + 600);
  v6 = *(_QWORD *)(v0 + 592);
  v7 = *(_QWORD *)(v0 + 584);
  v8 = *(_QWORD *)(v0 + 576);
  OUTLINED_FUNCTION_65_17();
  OUTLINED_FUNCTION_41_24(v9);
  OUTLINED_FUNCTION_48_2(v7, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_28_4(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v23);
  OUTLINED_FUNCTION_46_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_62_6();
  OUTLINED_FUNCTION_96_2();
  OUTLINED_FUNCTION_174();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22AAF8364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  v36 = OUTLINED_FUNCTION_63_15();
  OUTLINED_FUNCTION_48_2(v36, v37);
  *(_QWORD *)(v30 + 88) = a28;
  sub_22ABE0178();
  OUTLINED_FUNCTION_3_8();
  sub_22ABDEEB8();
  OUTLINED_FUNCTION_48_2(a25, *(uint64_t (**)(uint64_t, uint64_t))(a29 + 8));
  v38 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v39 = *(_QWORD *)(v35 - 120);
  v38[2] = v39;
  v38[3] = v33;
  v40 = v33;
  v38[4] = v31;
  v38[5] = v34;
  v38[6] = v32;
  v38[7] = v29;
  v41 = *(_QWORD *)(v35 - 112);
  v42 = *(_QWORD *)(v35 - 88);
  v38[8] = v41;
  v38[9] = v42;
  v43 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v43[2] = v39;
  v43[3] = v40;
  v43[4] = v31;
  v43[5] = v34;
  v43[6] = v32;
  v43[7] = v29;
  v44 = *(_QWORD *)(v35 - 88);
  v43[8] = v41;
  v43[9] = v44;
  v43[10] = sub_22AAF8C2C;
  v43[11] = v38;
  OUTLINED_FUNCTION_76_6();
}

uint64_t sub_22AAF8460()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  v3 = OUTLINED_FUNCTION_63_15();
  OUTLINED_FUNCTION_28_4(v3, v4);
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v0 + 48));
  *(v2 - 11) = v5;
  v6 = (_QWORD *)swift_task_alloc();
  v1[90] = v6;
  v7 = MEMORY[0x24BEE2B40];
  v8 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], *(v2 - 16));
  v9 = MEMORY[0x22E2E4D80](v7, *(v2 - 17));
  *v6 = v1;
  v6[1] = sub_22AAF8530;
  v10 = v1[60];
  v11 = v1[54];
  v12 = v1[52];
  v13 = v1[42];
  v14 = v1[40];
  v15 = v1[26];
  v16 = v1[15];
  v17 = v1[16];
  v2[3] = v1[27];
  v2[4] = v15;
  v2[2] = v9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(v2 - 11))(v10, v11, v13, v16, v17, v12, v14, v8);
}

uint64_t sub_22AAF8530()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  (*v1)[91] = v0;
  swift_task_dealloc();
  v4 = v2[55];
  v3 = v2[56];
  v6 = v2[53];
  v5 = v2[54];
  OUTLINED_FUNCTION_30_0(v2[41]);
  OUTLINED_FUNCTION_48_2(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_28_4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AAF85DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v13 = v0[80];
  v15 = v0[79];
  v16 = v0[81];
  v7 = v0[74];
  v8 = v0[75];
  v1 = v0[73];
  v17 = (void (*)(uint64_t, uint64_t, uint64_t))v0[82];
  v2 = v0[72];
  v3 = v0[71];
  v9 = v0[62];
  v14 = v0[60];
  v4 = v0[57];
  v11 = v0[58];
  v12 = v0[59];
  v5 = v0[24];
  v6 = v0[22];
  v10 = v0[12];
  (*(void (**)(void))(v0[65] + 8))();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  OUTLINED_FUNCTION_48_2(v8, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v15);
  v17(v9, v6, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v12, v14, v4);
  swift_getAssociatedConformanceWitness();
  ComposedTransformer.init(_:_:)(v9, v5, v10);
}

uint64_t sub_22AAF876C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_39_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_47_5();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_62_6();
  OUTLINED_FUNCTION_96_2();
  OUTLINED_FUNCTION_174();
  OUTLINED_FUNCTION_48_8();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v0();
}

#error "22AAF8828: call analysis failed (funcsize=35)"

#error "22AAF88B4: call analysis failed (funcsize=35)"

#error "22AAF8940: call analysis failed (funcsize=35)"

void sub_22AAF899C()
{
  sub_22AAF8AC0();
}

uint64_t sub_22AAF89B8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v5 = (char *)&v11 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - v4, a1, AssociatedTypeWitness, v3);
  v7 = swift_getAssociatedTypeWitness();
  v9 = type metadata accessor for AnnotatedFeature(0, AssociatedTypeWitness, v7, v8);
  return AnnotatedFeature.feature.setter((uint64_t)v5, v9);
}

void sub_22AAF8A90()
{
  OUTLINED_FUNCTION_77_13();
}

uint64_t sub_22AAF8A9C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_22AAF8AC0()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_89_6();
  OUTLINED_FUNCTION_72_14();
  v1 = OUTLINED_FUNCTION_71_14();
  v5 = OUTLINED_FUNCTION_81_10(v1, v2, v3, v4);
  v0(v5);
  OUTLINED_FUNCTION_38();
}

void sub_22AAF8B20()
{
  sub_22AAF8AC0();
}

uint64_t sub_22AAF8B3C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v5 = (char *)&v11 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v11 - v4, a1, AssociatedTypeWitness, v3);
  v7 = swift_getAssociatedTypeWitness();
  v9 = type metadata accessor for AnnotatedFeature(0, v7, AssociatedTypeWitness, v8);
  return AnnotatedFeature.annotation.setter((uint64_t)v5, v9);
}

void sub_22AAF8C14()
{
  OUTLINED_FUNCTION_77_13();
}

uint64_t sub_22AAF8C20()
{
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_22AAF8C30(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_22AAF8CEC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_22AAF8D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_80_15();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_61_16();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_79_12();
  OUTLINED_FUNCTION_66_17();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_18_56(v2, v3);
  OUTLINED_FUNCTION_46_23();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_17_18();
}

uint64_t sub_22AAF8DAC()
{
  return OUTLINED_FUNCTION_2_17();
}

void sub_22AAF8DB8()
{
  sub_22AAF8D14();
}

uint64_t sub_22AAF8DE8(uint64_t a1)
{
  uint64_t v1;

  return sub_22AAF8C30(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 80));
}

void PreprocessingSupervisedEstimator.encode(_:to:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ComposedTransformer();
}

uint64_t sub_22AAF8EBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v2 + *(int *)(a1 + 52), v1, v4, v3);
}

uint64_t PreprocessingSupervisedEstimator.decode(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a3;
  v25 = *(_QWORD *)(a2 + 16);
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_33();
  v26 = v6 - v5;
  v8 = *(_QWORD *)(v7 + 40);
  v9 = *(_QWORD *)(v7 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - v16;
  v23 = v3;
  v18 = v27;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v8 + 64))(a1, v9, v8, v15);
  if (!v18)
  {
    v20 = v25;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v23, v25);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    ComposedTransformer.init(_:_:)(v26, v20, v24);
  }
  return result;
}

void sub_22AAF9094()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22AA16B30;
  PreprocessingSupervisedEstimator.fitted<A>(to:eventHandler:)();
}

void sub_22AAF912C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v16;
  uint64_t v18;
  _QWORD *v19;

  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_22A9AFDDC;
  PreprocessingSupervisedEstimator.fitted<A, B>(to:validateOn:eventHandler:)(a1, a2, a3, a4, a5, v19, a6, a7, a8, v18);
}

void sub_22AAF91DC()
{
  PreprocessingSupervisedEstimator.encode(_:to:)();
}

uint64_t sub_22AAF91F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return PreprocessingSupervisedEstimator.decode(from:)(a1, a2, a3);
}

uint64_t sub_22AAF92E4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22AAF9304(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AAF93E0 + 4 * byte_22ABF9550[v21 - 1]))();
}

void sub_22AAF9454(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t OUTLINED_FUNCTION_6_83()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[44] + 8))(v0[45], v0[21]);
}

uint64_t OUTLINED_FUNCTION_18_56@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a1 + 16))((char *)&a2 - v2, v4, v3);
}

void OUTLINED_FUNCTION_20_47(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  ComposedTransformer.init(_:_:)(v10, v11, a10);
}

uint64_t OUTLINED_FUNCTION_34_34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return AnnotatedFeature.init(feature:annotation:)(v2, v4, v1, v3, v0);
}

uint64_t OUTLINED_FUNCTION_35_24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(v2, a1, v3);
}

uint64_t OUTLINED_FUNCTION_41_24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 96) = *(_QWORD *)(v1 + 288);
  return (*(uint64_t (**)(uint64_t, _QWORD))(a1 + 8))(v2, *(_QWORD *)(v1 + 232));
}

uint64_t OUTLINED_FUNCTION_46_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0, v1);
}

__n128 OUTLINED_FUNCTION_47_19(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_49_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_58_12@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, v2 + *(int *)(v3 + 52));
}

uint64_t OUTLINED_FUNCTION_63_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_67_13()
{
  return sub_22ABDFA10();
}

uint64_t OUTLINED_FUNCTION_70_12()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_71_14()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_72_14()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_79_12()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_81_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for AnnotatedFeature(0, v4, a1, a4);
}

void OUTLINED_FUNCTION_83_12()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_87_8()
{
  return sub_22ABDEEB8();
}

uint64_t OUTLINED_FUNCTION_90_9()
{
  return sub_22ABDFBC0();
}

uint64_t OUTLINED_FUNCTION_96_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_98_6@<X0>(uint64_t (*a1)(_QWORD, _QWORD)@<X8>)
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 504), *(_QWORD *)(v1 + 192));
}

uint64_t OUTLINED_FUNCTION_99_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void LinearTimeSeriesForecaster.Model.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[11] = a7;
  v8[12] = v7;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a2;
  v8[13] = *(_QWORD *)(a6 - 8);
  v8[14] = OUTLINED_FUNCTION_0_0();
  v8[15] = *(a5 - 1);
  v8[16] = OUTLINED_FUNCTION_0_0();
  v12 = a5[2];
  v8[17] = v12;
  v13 = a5[3];
  v8[18] = v13;
  v14 = a5[4];
  v8[19] = v14;
  v8[2] = v12;
  v8[3] = a6;
  v8[4] = v13;
  v8[5] = v14;
  v8[6] = a7;
  _s18PredictionSequenceVMa();
}

uint64_t sub_22AAF9938(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = a1;
  *(_QWORD *)(v1 + 168) = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AAF9968()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[21];
  v2 = v0[18];
  v9 = v0[19];
  v3 = v0[16];
  v4 = v0[17];
  v5 = v0[14];
  v6 = v0[13];
  v7 = v0[10];
  v8 = v0[8];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[15] + 16))(v3, v0[12], v0[9]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  sub_22AAF9A74(v3, v4, v2, v9, v1);
}

uint64_t sub_22AAF99F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  uint64_t v6;

  v1 = sub_22ABDE8A0();
  v2 = MEMORY[0x22E2E4D80](&unk_22ABF9788);
  AnyTemporalSequence.init<A>(_:)(v0, v1, v6, v2, v5);
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_28_0();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v3();
}

void _s18PredictionSequenceVMa()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AAF9A74(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v7;

  v7 = type metadata accessor for LinearTimeSeriesForecaster.Model(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a5, a1, v7);
  _s18PredictionSequenceVMa();
}

uint64_t sub_22AAF9AF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 60), v2, v1);
}

void sub_22AAF9B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v13;
  *v13 = v7;
  v13[1] = sub_22AA16B30;
  LinearTimeSeriesForecaster.Model.applied<A>(to:eventHandler:)(a1, a2, v14, v15, a7, a5, a6);
}

uint64_t sub_22AAF9BAC(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for LinearTimeSeriesForecaster.Model(319, a1[2], a1[4], a1[5]);
  if (v2 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v3 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_22AAF9C3C(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)(a3 + 16);
    v8 = *(_QWORD *)(a3 + 32);
    v44 = *(_QWORD *)(a3 + 40);
    _s5StateOMa(0, v7, v8, v44);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_22ABDE8A0();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v10(a1, a2, v9);
      v11 = sub_22ABDF5D8();
      v12 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v13 = &a1[v12];
      v14 = &a2[v12];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v12], 1, v9))
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v10(v13, v14, v9);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
      }
    }
    else
    {
      v42 = v8;
      v16 = sub_22ABDD7D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v18 = &a1[v17];
      v19 = &a2[v17];
      *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
      v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v21 = v20[12];
      v22 = &v18[v21];
      v23 = &v19[v21];
      v24 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      v26 = v20[13];
      v27 = &v18[v26];
      v28 = &v19[v26];
      v29 = sub_22ABDD598();
      v43 = v7;
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
      }
      *(_DWORD *)&v18[v20[14]] = *(_DWORD *)&v19[v20[14]];
      *(_QWORD *)&v18[v20[15]] = *(_QWORD *)&v19[v20[15]];
      v31 = v20[16];
      v32 = &v18[v31];
      v33 = &v19[v31];
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
      v35(v32, v33, v34);
      v35(&v18[v20[17]], &v19[v20[17]], v34);
      v36 = v20[18];
      v37 = &v18[v36];
      v38 = &v19[v36];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v19[v36], 1, v34))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v35(v37, v38, v34);
        __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v34);
      }
      v8 = v42;
      v7 = v43;
    }
    swift_storeEnumTagMultiPayload();
    v40 = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v7, v8, v44);
    *(_QWORD *)&a1[v40[11]] = *(_QWORD *)&a2[v40[11]];
    *(_QWORD *)&a1[v40[12]] = *(_QWORD *)&a2[v40[12]];
    *(_QWORD *)&a1[v40[13]] = *(_QWORD *)&a2[v40[13]];
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 16))(&a1[*(int *)(a3 + 60)], &a2[*(int *)(a3 + 60)]);
  }
  return a1;
}

uint64_t sub_22AAFA030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;

  _s5StateOMa(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40));
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22ABDE8A0();
    v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v5(a1, v4);
    sub_22ABDF5D8();
    v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    if (!__swift_getEnumTagSinglePayload(v6, 1, v4))
      v5(v6, v4);
  }
  else
  {
    v7 = sub_22ABDD7D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v10 = v8 + v9[12];
    v11 = sub_22ABDD5D4();
    if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = v8 + v9[13];
    v13 = sub_22ABDD598();
    if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v14 = v8 + v9[16];
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
    v16(v14, v15);
    v16(v8 + v9[17], v15);
    v17 = v8 + v9[18];
    if (!__swift_getEnumTagSinglePayload(v17, 1, v15))
      v16(v17, v15);
  }
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))(a1 + *(int *)(a2 + 60));
}

uint64_t sub_22AAFA240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  int *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 32);
  v42 = *(_QWORD *)(a3 + 40);
  _s5StateOMa(0, v6, v7, v42);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22ABDE8A0();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    v10 = sub_22ABDF5D8();
    v11 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    if (__swift_getEnumTagSinglePayload(a2 + v11, 1, v8))
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v9((uint64_t)v12, (uint64_t)v13, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
    }
  }
  else
  {
    v40 = v7;
    v14 = sub_22ABDD7D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
    v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v16 = a1 + v15;
    v17 = a2 + v15;
    *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
    v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v19 = v18[12];
    v20 = (void *)(v16 + v19);
    v21 = (const void *)(v17 + v19);
    v22 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
    v24 = v18[13];
    v25 = (void *)(v16 + v24);
    v26 = (const void *)(v17 + v24);
    v27 = sub_22ABDD598();
    v41 = v6;
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
    }
    *(_DWORD *)(v16 + v18[14]) = *(_DWORD *)(v17 + v18[14]);
    *(_QWORD *)(v16 + v18[15]) = *(_QWORD *)(v17 + v18[15]);
    v29 = v18[16];
    v30 = v16 + v29;
    v31 = v17 + v29;
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
    v33(v30, v31, v32);
    v33(v16 + v18[17], v17 + v18[17], v32);
    v34 = v18[18];
    v35 = (void *)(v16 + v34);
    v36 = (const void *)(v17 + v34);
    if (__swift_getEnumTagSinglePayload(v17 + v34, 1, v32))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v33((uint64_t)v35, (uint64_t)v36, v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v32);
    }
    v7 = v40;
    v6 = v41;
  }
  swift_storeEnumTagMultiPayload();
  v38 = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v6, v7, v42);
  *(_QWORD *)(a1 + v38[11]) = *(_QWORD *)(a2 + v38[11]);
  *(_QWORD *)(a1 + v38[12]) = *(_QWORD *)(a2 + v38[12]);
  *(_QWORD *)(a1 + v38[13]) = *(_QWORD *)(a2 + v38[13]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 16))(a1 + *(int *)(a3 + 60), a2 + *(int *)(a3 + 60));
  return a1;
}

uint64_t sub_22AAFA608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  const void *v38;
  uint64_t v39;
  int *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(a3 + 40);
  if (a1 != a2)
  {
    v44 = *(_QWORD *)(a3 + 40);
    v9 = _s5StateOMa(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 32), v7);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22ABDE8A0();
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v11(a1, a2, v10);
      v12 = sub_22ABDF5D8();
      v13 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v14 = (void *)(a1 + v13);
      v15 = (const void *)(a2 + v13);
      if (__swift_getEnumTagSinglePayload(a2 + v13, 1, v10))
      {
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v11((uint64_t)v14, (uint64_t)v15, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
      }
    }
    else
    {
      v43 = v6;
      v16 = sub_22ABDD7D8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v18 = (char *)(a1 + v17);
      v19 = a2 + v17;
      *(_DWORD *)v18 = *(_DWORD *)(a2 + v17);
      *((_DWORD *)v18 + 1) = *(_DWORD *)(a2 + v17 + 4);
      *((_DWORD *)v18 + 2) = *(_DWORD *)(a2 + v17 + 8);
      *((_DWORD *)v18 + 3) = *(_DWORD *)(a2 + v17 + 12);
      v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v21 = v20[12];
      v22 = &v18[v21];
      v23 = (const void *)(v19 + v21);
      v24 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      v26 = v20[13];
      v27 = &v18[v26];
      v28 = (const void *)(v19 + v26);
      v29 = sub_22ABDD598();
      v42 = v8;
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
      }
      *(_DWORD *)&v18[v20[14]] = *(_DWORD *)(v19 + v20[14]);
      *(_QWORD *)&v18[v20[15]] = *(_QWORD *)(v19 + v20[15]);
      v31 = v20[16];
      v32 = &v18[v31];
      v33 = v19 + v31;
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v35 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
      v35(v32, v33, v34);
      v35(&v18[v20[17]], v19 + v20[17], v34);
      v36 = v20[18];
      v37 = &v18[v36];
      v38 = (const void *)(v19 + v36);
      if (__swift_getEnumTagSinglePayload(v19 + v36, 1, v34))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v35(v37, (uint64_t)v38, v34);
        __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v34);
      }
      v8 = v42;
      v6 = v43;
    }
    swift_storeEnumTagMultiPayload();
    v7 = v44;
  }
  v40 = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v6, v8, v7);
  *(_QWORD *)(a1 + v40[11]) = *(_QWORD *)(a2 + v40[11]);
  *(_QWORD *)(a1 + v40[12]) = *(_QWORD *)(a2 + v40[12]);
  *(_QWORD *)(a1 + v40[13]) = *(_QWORD *)(a2 + v40[13]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 24))(a1 + *(int *)(a3 + 60), a2 + *(int *)(a3 + 60));
  return a1;
}

uint64_t sub_22AAFAA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  int *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 32);
  v42 = *(_QWORD *)(a3 + 40);
  _s5StateOMa(0, v6, v7, v42);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22ABDE8A0();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    v10 = sub_22ABDF5D8();
    v11 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    if (__swift_getEnumTagSinglePayload(a2 + v11, 1, v8))
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v9((uint64_t)v12, (uint64_t)v13, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
    }
  }
  else
  {
    v40 = v7;
    v14 = sub_22ABDD7D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
    v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v16 = a1 + v15;
    v17 = a2 + v15;
    *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
    v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v19 = v18[12];
    v20 = (void *)(v16 + v19);
    v21 = (const void *)(v17 + v19);
    v22 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
    v24 = v18[13];
    v25 = (void *)(v16 + v24);
    v26 = (const void *)(v17 + v24);
    v27 = sub_22ABDD598();
    v41 = v6;
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
    }
    *(_DWORD *)(v16 + v18[14]) = *(_DWORD *)(v17 + v18[14]);
    *(_QWORD *)(v16 + v18[15]) = *(_QWORD *)(v17 + v18[15]);
    v29 = v18[16];
    v30 = v16 + v29;
    v31 = v17 + v29;
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32);
    v33(v30, v31, v32);
    v33(v16 + v18[17], v17 + v18[17], v32);
    v34 = v18[18];
    v35 = (void *)(v16 + v34);
    v36 = (const void *)(v17 + v34);
    if (__swift_getEnumTagSinglePayload(v17 + v34, 1, v32))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v33((uint64_t)v35, (uint64_t)v36, v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v32);
    }
    v7 = v40;
    v6 = v41;
  }
  swift_storeEnumTagMultiPayload();
  v38 = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v6, v7, v42);
  *(_QWORD *)(a1 + v38[11]) = *(_QWORD *)(a2 + v38[11]);
  *(_QWORD *)(a1 + v38[12]) = *(_QWORD *)(a2 + v38[12]);
  *(_QWORD *)(a1 + v38[13]) = *(_QWORD *)(a2 + v38[13]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 32))(a1 + *(int *)(a3 + 60), a2 + *(int *)(a3 + 60));
  return a1;
}

uint64_t sub_22AAFADD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  int *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(a3 + 40);
  if (a1 != a2)
  {
    v44 = *(_QWORD *)(a3 + 40);
    v9 = _s5StateOMa(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 32), v7);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22ABDE8A0();
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(a1, a2, v10);
      v12 = sub_22ABDF5D8();
      v13 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v14 = (void *)(a1 + v13);
      v15 = (const void *)(a2 + v13);
      if (__swift_getEnumTagSinglePayload(a2 + v13, 1, v10))
      {
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v11((uint64_t)v14, (uint64_t)v15, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
      }
    }
    else
    {
      v43 = v6;
      v16 = sub_22ABDD7D8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v18 = a1 + v17;
      v19 = a2 + v17;
      *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
      v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v21 = v20[12];
      v22 = (void *)(v18 + v21);
      v23 = (const void *)(v19 + v21);
      v24 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      v26 = v20[13];
      v27 = (void *)(v18 + v26);
      v28 = (const void *)(v19 + v26);
      v29 = sub_22ABDD598();
      v42 = v8;
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
      }
      *(_DWORD *)(v18 + v20[14]) = *(_DWORD *)(v19 + v20[14]);
      *(_QWORD *)(v18 + v20[15]) = *(_QWORD *)(v19 + v20[15]);
      v31 = v20[16];
      v32 = v18 + v31;
      v33 = v19 + v31;
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32);
      v35(v32, v33, v34);
      v35(v18 + v20[17], v19 + v20[17], v34);
      v36 = v20[18];
      v37 = (void *)(v18 + v36);
      v38 = (const void *)(v19 + v36);
      if (__swift_getEnumTagSinglePayload(v19 + v36, 1, v34))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v35((uint64_t)v37, (uint64_t)v38, v34);
        __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v34);
      }
      v8 = v42;
      v6 = v43;
    }
    swift_storeEnumTagMultiPayload();
    v7 = v44;
  }
  v40 = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v6, v8, v7);
  *(_QWORD *)(a1 + v40[11]) = *(_QWORD *)(a2 + v40[11]);
  *(_QWORD *)(a1 + v40[12]) = *(_QWORD *)(a2 + v40[12]);
  *(_QWORD *)(a1 + v40[13]) = *(_QWORD *)(a2 + v40[13]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 40))(a1 + *(int *)(a3 + 60), a2 + *(int *)(a3 + 60));
  return a1;
}

uint64_t sub_22AAFB1B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAFB1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_17_50(a1, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 32), *(_QWORD *)(a3 + 40));
  OUTLINED_FUNCTION_21_18();
  if (v7)
  {
    v8 = v6;
    v9 = a1;
  }
  else
  {
    v8 = *(_QWORD *)(a3 + 24);
    v9 = a1 + *(int *)(a3 + 60);
  }
  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t sub_22AAFB224()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAFB230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_17_50(v4, v3[2], v3[4], v3[5]);
  OUTLINED_FUNCTION_22_16();
  if (v6)
  {
    v7 = v5;
    v8 = v1;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 24);
    v8 = v1 + *(int *)(v2 + 60);
  }
  return __swift_storeEnumTagSinglePayload(v8, v0, v0, v7);
}

void sub_22AAFB288()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AAFB298(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 48) + 24))(*(_QWORD *)(a1 + 24));
}

void sub_22AAFB2CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = a2;
  v4 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v7 + 48);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v8);
  v9 = type metadata accessor for LinearTimeSeriesForecaster.Model(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  v10 = MEMORY[0x24BDAC7A8](v9);
  (*(void (**)(char *, uint64_t, double))(v11 + 16))((char *)&v13 - v12, v2, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, v2 + *(int *)(a1 + 60), v4);
  sub_22ABDF200();
  sub_22AAFB424();
}

void sub_22AAFB418()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AAFB424()
{
  _s18PredictionSequenceV13AsyncIteratorVMa();
}

uint64_t sub_22AAFB47C(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v1 + a1[18]) = 0;
  v7 = type metadata accessor for LinearTimeSeriesForecaster.Model(0, v4, v3, v5);
  v15 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v1, v2, v7);
  v8 = v1 + a1[15];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v14, AssociatedTypeWitness);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  v11 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v11 + 16) = xmmword_22ABE9FB0;
  *(_QWORD *)(v11 + 32) = LinearTimeSeriesForecaster.Model.inputWindowSize.getter(v7);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v2 + *(int *)(v7 + 44));
  sub_22AA3EF3C();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, AssociatedTypeWitness);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v2, v7);
  v13 = (_QWORD *)(v1 + a1[17]);
  *v13 = 0;
  v13[1] = 0xE000000000000000;
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = 1;
  return result;
}

uint64_t sub_22AAFB5B8(uint64_t a1)
{
  return sub_22AAFB298(a1);
}

void sub_22AAFB5D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22AAFB2CC(a1, a2);
}

uint64_t sub_22AAFB5E4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_22AAFB600(uint64_t *a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_17_50((uint64_t)a1, a1[2], a1[4], a1[5]) + 52));
}

uint64_t sub_22AAFB624(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = a2[2];
  v3[6] = a2[4];
  v5 = sub_22ABDE8A0();
  v3[7] = v5;
  v3[8] = *(_QWORD *)(v5 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  v8 = type metadata accessor for TemporalFeature(255, v5, v6, v7);
  v3[11] = v8;
  v9 = sub_22ABDF5D8();
  v3[12] = v9;
  v3[13] = *(_QWORD *)(v9 - 8);
  v3[14] = OUTLINED_FUNCTION_0_0();
  v3[15] = *(_QWORD *)(v8 - 8);
  v3[16] = OUTLINED_FUNCTION_0_0();
  v3[17] = a2[6];
  v3[18] = a2[3];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = (_QWORD *)swift_task_alloc();
  v3[19] = v10;
  *v10 = v3;
  v10[1] = sub_22AAFB780;
  return OUTLINED_FUNCTION_10_55();
}

uint64_t sub_22AAFB780()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAFB7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v18;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(v1, *(_QWORD *)(v0 + 96));
    __swift_storeEnumTagSinglePayload(v3, 1, 1, v2);
    OUTLINED_FUNCTION_9_64();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return v4();
  }
  v5 = *(_QWORD *)(v0 + 160);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 128), v1, v2);
  OUTLINED_FUNCTION_22_46(*(int *)(v2 + 28));
  v6 = *(_QWORD *)(v0 + 128);
  if (v5)
  {
    OUTLINED_FUNCTION_21_52(v6, *(_QWORD *)(v0 + 120));
    swift_task_dealloc();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  v8 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 32);
  v10 = *(int *)(v8 + 68);
  *(_DWORD *)(v0 + 216) = v10;
  v11 = v9 + v10;
  v12 = *(_QWORD *)v6;
  v13 = *(_QWORD *)(v6 + 8);
  if (*(_QWORD *)(v9 + v10) != *(_QWORD *)v6 || *(_QWORD *)(v9 + v10 + 8) != v13)
  {
    v15 = sub_22ABDFF68();
    v6 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 24);
    if ((v15 & 1) == 0)
    {
      *(_QWORD *)(*(_QWORD *)(v0 + 32) + *(int *)(v8 + 72)) = 0;
      v18 = *(_OWORD *)(v6 + 16);
      v16 = *(_QWORD *)(v6 + 32);
      sub_22ABDEAEC();
      swift_bridgeObjectRelease();
      *(_QWORD *)v11 = v12;
      *(_QWORD *)(v11 + 8) = v13;
      *(_OWORD *)(v11 + 16) = v18;
      *(_QWORD *)(v11 + 32) = v16;
      v6 = *(_QWORD *)(v0 + 128);
      v8 = *(_QWORD *)(v0 + 24);
    }
  }
  sub_22AAFBF9C(v6, v8);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v17;
  *v17 = v0;
  v17[1] = sub_22AAFB994;
  return sub_22AAFC1DC(*(_QWORD *)(v0 + 24));
}

uint64_t sub_22AAFB994()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAFB9E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;
  _QWORD *v13;

  v2 = v1[5];
  v3 = v1[6];
  v4 = v1[3];
  v5 = *(_QWORD *)(v1[4] + *(int *)(v4 + 72));
  v6 = *(_QWORD *)(v4 + 40);
  v1[23] = v6;
  v7 = OUTLINED_FUNCTION_17_50(a1, v2, v3, v6);
  v1[24] = v7;
  if (v5 >= LinearTimeSeriesForecaster.Model.inputWindowSize.getter(v7))
  {
    v12 = v1[4] + *(int *)(v1[3] + 64);
    v13 = (_QWORD *)swift_task_alloc();
    v1[25] = v13;
    *v13 = v1;
    v13[1] = sub_22AAFBADC;
    return LinearTimeSeriesForecaster.Model.applied(to:eventHandler:)(v1[10], v12, 0, 0, v7);
  }
  else
  {
    v8 = v1[11];
    v9 = v1[2];
    (*(void (**)(_QWORD, uint64_t))(v1[15] + 8))(v1[16], v8);
    __swift_storeEnumTagSinglePayload(v9, 1, 1, v8);
    OUTLINED_FUNCTION_9_64();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return v10();
  }
}

uint64_t sub_22AAFBADC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 208) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

void sub_22AAFBB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + *(int *)(v0 + 216) + 16);
  v2 = LinearTimeSeriesForecaster.Model.inputWindowSize.getter(*(_QWORD *)(v0 + 192));
  v3 = v1 + v2;
  if (__OFADD__(v1, v2))
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = LinearTimeSeriesForecaster.Model.forecastWindowSize.getter(*(_QWORD *)(v0 + 192));
  if (__OFADD__(v3, v4))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 + v4 >= v3)
  {
    v5 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(_QWORD *)(v0 + 32);
    v17 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
    v11 = OUTLINED_FUNCTION_33_2();
    *(_OWORD *)(v11 + 16) = xmmword_22ABE9FB0;
    sub_22ABDEAEC();
    *(_QWORD *)(v11 + 32) = LinearTimeSeriesForecaster.Model.forecastWindowSize.getter(v5);
    *(_QWORD *)(v11 + 40) = *(_QWORD *)(v9 + *(int *)(v5 + 48));
    sub_22ABDE87C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v7, v8);
    OUTLINED_FUNCTION_26_40();
    TemporalFeature.init(id:feature:)(v12, v13, v14, v15, v16);
    __swift_storeEnumTagSinglePayload(v10, 0, 1, v6);
    sub_22AAFC580();
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_22AAFBCE8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_63();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AAFBD28()
{
  uint64_t v0;

  OUTLINED_FUNCTION_21_52(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 120));
  OUTLINED_FUNCTION_8_63();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AAFBD70()
{
  sub_22AAFC580();
}

uint64_t sub_22AAFBDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  OUTLINED_FUNCTION_8_63();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_22AAFBDDC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t inited;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2[2];
  v5 = a2[4];
  sub_22ABDE8A0();
  v6 = (_QWORD *)sub_22ABDE84C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E86C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22ABE8E30;
  v8 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for LinearTimeSeriesForecaster.Model(0, v4, v5, a2[5]) + 44));
  *(_QWORD *)(inited + 32) = v8;
  v9 = sub_22A99EB90(v6, (_QWORD *)inited);
  swift_setDeallocating();
  result = swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    v11 = sub_22ABDE84C();
    sub_22ABDF7A0();
    swift_bridgeObjectRelease();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_22ABE8E30;
    *(_QWORD *)(v12 + 32) = v8;
    MEMORY[0x22E2E3298]();
    sub_22ABDEDC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22ABDEDC8();
    sub_22A9B7B50();
    v13 = swift_allocError();
    *(_QWORD *)v14 = v11;
    *(_QWORD *)(v14 + 8) = 0xD00000000000001CLL;
    *(_QWORD *)(v14 + 16) = 0x800000022ABE5890;
    *(_QWORD *)(v14 + 24) = 0;
    *(_BYTE *)(v14 + 32) = 6;
    return swift_willThrow(v13);
  }
  return result;
}

void sub_22AAFBF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v33 = a1;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = sub_22ABDE8DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v30 = (char *)&v28 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
  v11 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v11 + 16) = xmmword_22ABE9FB0;
  v12 = *(int *)(a2 + 72);
  v13 = *(_QWORD *)(v2 + v12);
  *(_QWORD *)(v11 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_255B16A78);
  *(_QWORD *)(v11 + 64) = sub_22A9C8D60(qword_255B16A80, &qword_255B16A78, MEMORY[0x24BDBFE28]);
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v13;
  v14 = *(int *)(type metadata accessor for LinearTimeSeriesForecaster.Model(0, v4, v5, *(_QWORD *)(a2 + 40)) + 44);
  v31 = v2;
  v15 = *(_QWORD *)(v2 + v14);
  *(_QWORD *)(v11 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
  *(_QWORD *)(v11 + 104) = sub_22A9C8D60((unint64_t *)&qword_255B0EBA0, &qword_2540E85F8, MEMORY[0x24BDBFE50]);
  if (v15 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  v29 = v12;
  *(_QWORD *)(v11 + 72) = 0;
  *(_QWORD *)(v11 + 80) = v15;
  v16 = sub_22ABDE8A0();
  type metadata accessor for TemporalFeature(0, v16, v17, v18);
  v19 = v7;
  v20 = v33;
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v16);
  v21 = v32;
  sub_22ABDE984();
  sub_22ABDE8C4();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v6);
  v22 = v31;
  sub_22ABDE978();
  v23 = v22 + *(int *)(a2 + 68);
  v24 = *(_QWORD *)(v20 + 24);
  if (v24 < *(_QWORD *)(v23 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(v23 + 24) = v24;
  v25 = *(_QWORD *)(v22 + v29);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (!v26)
  {
    *(_QWORD *)(v22 + v29) = v27;
    OUTLINED_FUNCTION_3();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_22AAFC1DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *(_QWORD *)(a1 + 16);
  v2[5] = *(_QWORD *)(a1 + 32);
  v3 = sub_22ABDE8A0();
  v6 = type metadata accessor for TemporalFeature(255, v3, v4, v5);
  v2[6] = v6;
  v7 = sub_22ABDF5D8();
  v2[7] = v7;
  v2[8] = *(_QWORD *)(v7 - 8);
  v2[9] = OUTLINED_FUNCTION_0_0();
  v2[10] = *(_QWORD *)(v6 - 8);
  v2[11] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAFC264(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(void);

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(int *)(v4 + 72);
  *(_DWORD *)(v1 + 136) = v6;
  v7 = *(_QWORD *)(v5 + v6);
  v8 = OUTLINED_FUNCTION_17_50(a1, v2, v3, *(_QWORD *)(v4 + 40));
  *(_QWORD *)(v1 + 96) = v8;
  if (v7 >= LinearTimeSeriesForecaster.Model.inputWindowSize.getter(v8))
  {
    OUTLINED_FUNCTION_16_53();
    OUTLINED_FUNCTION_28_0();
    v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return OUTLINED_FUNCTION_3_1(v12);
  }
  else
  {
    v9 = *(_QWORD *)(v1 + 16);
    *(_DWORD *)(v1 + 140) = *(_DWORD *)(v9 + 60);
    *(_QWORD *)(v1 + 104) = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8);
    *(_QWORD *)(v1 + 112) = *(_QWORD *)(v9 + 24);
    swift_getAssociatedTypeWitness();
    OUTLINED_FUNCTION_41_21();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 120) = v10;
    *v10 = v1;
    v10[1] = sub_22AAFC360;
    OUTLINED_FUNCTION_23_48();
    return OUTLINED_FUNCTION_10_55();
  }
}

uint64_t sub_22AAFC360()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_30_5();
  *(_QWORD *)(v1 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAFC3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v1, *(_QWORD *)(v0 + 56));
    goto LABEL_3;
  }
  v4 = *(_QWORD *)(v0 + 128);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 32))(*(_QWORD *)(v0 + 88), v1, v2);
  OUTLINED_FUNCTION_22_46(*(int *)(v2 + 28));
  if (v4)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 48));
    OUTLINED_FUNCTION_16_53();
    OUTLINED_FUNCTION_28_0();
    v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  v7 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v8 = *(int *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 24);
  sub_22AAFBF9C(v7, *(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v10);
  v12 = *(_QWORD *)(v11 + v8);
  if (v12 >= LinearTimeSeriesForecaster.Model.inputWindowSize.getter(v6))
  {
LABEL_3:
    OUTLINED_FUNCTION_16_53();
    OUTLINED_FUNCTION_28_0();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
    return v3();
  }
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_41_21();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v13;
  *v13 = v0;
  v13[1] = sub_22AAFC360;
  OUTLINED_FUNCTION_23_48();
  return sub_22ABDF188();
}

uint64_t sub_22AAFC548()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  return OUTLINED_FUNCTION_3_1(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22AAFC580()
{
  _s18PredictionSequenceV13AsyncIteratorVMa();
}

void sub_22AAFC5AC(uint64_t a1)
{
  sub_22AAFC5C0(a1);
}

void sub_22AAFC5C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  __int128 v25;
  uint64_t v26;

  v3 = *(_QWORD *)(a1 + 32);
  v26 = *(_QWORD *)(a1 + 16);
  sub_22ABDE8DC();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v24 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EB98);
  v7 = OUTLINED_FUNCTION_33_2();
  v25 = xmmword_22ABE9FB0;
  *(_OWORD *)(v7 + 16) = xmmword_22ABE9FB0;
  v8 = *(int *)(a1 + 72);
  v9 = *(_QWORD *)(v1 + v8);
  v10 = sub_22AAFB600((uint64_t *)a1);
  v11 = v9 - v10;
  if (__OFSUB__(v9, v10))
  {
    __break(1u);
    goto LABEL_10;
  }
  v24[0] = v8;
  v24[1] = v6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85F8);
  *(_QWORD *)(v7 + 56) = v12;
  v13 = sub_22A9C8D60((unint64_t *)&qword_255B0EBA0, &qword_2540E85F8, MEMORY[0x24BDBFE50]);
  *(_QWORD *)(v7 + 64) = v13;
  if (v11 < 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v14 = v13;
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = v11;
  v15 = *(_QWORD *)(v1
                  + *(int *)(type metadata accessor for LinearTimeSeriesForecaster.Model(0, v26, v3, *(_QWORD *)(a1 + 40))+ 44));
  *(_QWORD *)(v7 + 96) = v12;
  *(_QWORD *)(v7 + 104) = v14;
  if (v15 < 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(_QWORD *)(v7 + 72) = 0;
  *(_QWORD *)(v7 + 80) = v15;
  v16 = OUTLINED_FUNCTION_33_2();
  *(_OWORD *)(v16 + 16) = v25;
  v17 = OUTLINED_FUNCTION_18_57();
  *(_QWORD *)(v16 + 56) = v12;
  *(_QWORD *)(v16 + 64) = v14;
  if (v9 < v17)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 40) = v9;
  *(_QWORD *)(v16 + 96) = v12;
  *(_QWORD *)(v16 + 104) = v14;
  *(_QWORD *)(v16 + 72) = 0;
  *(_QWORD *)(v16 + 80) = v15;
  v18 = sub_22ABDE8A0();
  MEMORY[0x22E2E4D80](MEMORY[0x24BDBFCD0], v18);
  OUTLINED_FUNCTION_26_40();
  sub_22ABDE96C();
  swift_bridgeObjectRelease();
  sub_22ABDE978();
  v19 = OUTLINED_FUNCTION_18_57();
  if (__OFSUB__(v9, v19))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  *(_QWORD *)(v1 + v24[0]) = v9 - v19;
  v20 = v1 + *(int *)(a1 + 68);
  v21 = *(_QWORD *)(v20 + 16);
  v22 = OUTLINED_FUNCTION_18_57();
  v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*(_QWORD *)(v20 + 24) >= v23)
  {
    *(_QWORD *)(v20 + 16) = v23;
    OUTLINED_FUNCTION_3();
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_22AAFC7C4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_22A9AFDDC;
  return sub_22AAFB624(a1, a2);
}

uint64_t sub_22AAFC824(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&unk_22ABF96F8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void _s18PredictionSequenceV13AsyncIteratorVMa()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AAFC85C(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for LinearTimeSeriesForecaster.Model(319, a1[2], a1[4], a1[5]);
  if (v2 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v3 <= 0x3F)
    {
      result = sub_22ABDE8A0();
      if (v4 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_22AAFC950(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t AssociatedTypeWitness;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)(a3 + 16);
    v8 = *(_QWORD *)(a3 + 32);
    v59 = *(_QWORD *)(a3 + 40);
    _s5StateOMa(0, v7, v8, v59);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = v8;
      v10 = sub_22ABDE8A0();
      v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v11(a1, a2, v10);
      v12 = sub_22ABDF5D8();
      v13 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v13, 1, v10))
      {
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v11((uint64_t *)v14, (uint64_t *)v15, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
      v27 = v9;
    }
    else
    {
      v57 = v8;
      v17 = sub_22ABDD7D8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
      v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v22 = v21[12];
      v23 = &v19[v22];
      v24 = &v20[v22];
      v25 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      }
      v28 = v21[13];
      v29 = &v19[v28];
      v30 = &v20[v28];
      v31 = sub_22ABDD598();
      v58 = v7;
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
      }
      *(_DWORD *)&v19[v21[14]] = *(_DWORD *)&v20[v21[14]];
      *(_QWORD *)&v19[v21[15]] = *(_QWORD *)&v20[v21[15]];
      v33 = v21[16];
      v34 = &v19[v33];
      v35 = &v20[v33];
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
      v37(v34, v35, v36);
      v37(&v19[v21[17]], &v20[v21[17]], v36);
      v38 = v21[18];
      v39 = &v19[v38];
      v40 = &v20[v38];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v20[v38], 1, v36))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v37(v39, v40, v36);
        __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v36);
      }
      v27 = v57;
      v7 = v58;
      swift_storeEnumTagMultiPayload();
    }
    v42 = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v7, v27, v59);
    *(uint64_t *)((char *)a1 + v42[11]) = *(uint64_t *)((char *)a2 + v42[11]);
    *(uint64_t *)((char *)a1 + v42[12]) = *(uint64_t *)((char *)a2 + v42[12]);
    *(uint64_t *)((char *)a1 + v42[13]) = *(uint64_t *)((char *)a2 + v42[13]);
    v43 = *(int *)(a3 + 60);
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v44, v45, AssociatedTypeWitness);
    v47 = *(int *)(a3 + 64);
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = sub_22ABDE8A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
    v51 = *(int *)(a3 + 68);
    v52 = *(int *)(a3 + 72);
    v53 = (char *)a1 + v51;
    v54 = (char *)a2 + v51;
    v55 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *((_QWORD *)v53 + 1) = v55;
    *((_OWORD *)v53 + 1) = *((_OWORD *)v54 + 1);
    *((_QWORD *)v53 + 4) = *((_QWORD *)v54 + 4);
    *(uint64_t *)((char *)a1 + v52) = *(uint64_t *)((char *)a2 + v52);
    sub_22ABDEAEC();
  }
  return a1;
}

uint64_t sub_22AAFCDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;

  _s5StateOMa(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40));
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22ABDE8A0();
    v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v5(a1, v4);
    sub_22ABDF5D8();
    v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    if (!__swift_getEnumTagSinglePayload(v6, 1, v4))
      v5(v6, v4);
  }
  else
  {
    v7 = sub_22ABDD7D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v10 = v8 + v9[12];
    v11 = sub_22ABDD5D4();
    if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = v8 + v9[13];
    v13 = sub_22ABDD598();
    if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v14 = v8 + v9[16];
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
    v16(v14, v15);
    v16(v8 + v9[17], v15);
    v17 = v8 + v9[18];
    if (!__swift_getEnumTagSinglePayload(v17, 1, v15))
      v16(v17, v15);
  }
  v18 = a1 + *(int *)(a2 + 60);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v18, AssociatedTypeWitness);
  v20 = a1 + *(int *)(a2 + 64);
  v21 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22AAFD05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t AssociatedTypeWitness;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 32);
  v57 = *(_QWORD *)(a3 + 40);
  _s5StateOMa(0, v6, v7, v57);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = v7;
    v9 = sub_22ABDE8A0();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v10(a1, a2, v9);
    v11 = sub_22ABDF5D8();
    v12 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    if (__swift_getEnumTagSinglePayload(a2 + v12, 1, v9))
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v10((uint64_t)v13, (uint64_t)v14, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
    v25 = v8;
  }
  else
  {
    v55 = v7;
    v15 = sub_22ABDD7D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
    v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v17 = a1 + v16;
    v18 = a2 + v16;
    *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
    v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v20 = v19[12];
    v21 = (void *)(v17 + v20);
    v22 = (const void *)(v18 + v20);
    v23 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
    }
    v26 = v19[13];
    v27 = (void *)(v17 + v26);
    v28 = (const void *)(v18 + v26);
    v29 = sub_22ABDD598();
    v56 = v6;
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
    }
    *(_DWORD *)(v17 + v19[14]) = *(_DWORD *)(v18 + v19[14]);
    *(_QWORD *)(v17 + v19[15]) = *(_QWORD *)(v18 + v19[15]);
    v31 = v19[16];
    v32 = v17 + v31;
    v33 = v18 + v31;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    v35(v32, v33, v34);
    v35(v17 + v19[17], v18 + v19[17], v34);
    v36 = v19[18];
    v37 = (void *)(v17 + v36);
    v38 = (const void *)(v18 + v36);
    if (__swift_getEnumTagSinglePayload(v18 + v36, 1, v34))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v35((uint64_t)v37, (uint64_t)v38, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v34);
    }
    v25 = v55;
    v6 = v56;
    swift_storeEnumTagMultiPayload();
  }
  v40 = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v6, v25, v57);
  *(_QWORD *)(a1 + v40[11]) = *(_QWORD *)(a2 + v40[11]);
  *(_QWORD *)(a1 + v40[12]) = *(_QWORD *)(a2 + v40[12]);
  *(_QWORD *)(a1 + v40[13]) = *(_QWORD *)(a2 + v40[13]);
  v41 = *(int *)(a3 + 60);
  v42 = a1 + v41;
  v43 = a2 + v41;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v42, v43, AssociatedTypeWitness);
  v45 = *(int *)(a3 + 64);
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
  v49 = *(int *)(a3 + 68);
  v50 = *(int *)(a3 + 72);
  v51 = a1 + v49;
  v52 = a2 + v49;
  v53 = *(_QWORD *)(v52 + 8);
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_QWORD *)(v51 + 8) = v53;
  *(_OWORD *)(v51 + 16) = *(_OWORD *)(v52 + 16);
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);
  sub_22ABDEAEC();
  return a1;
}

uint64_t sub_22AAFD4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  const void *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t AssociatedTypeWitness;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(a3 + 40);
  if (a1 != a2)
  {
    v56 = *(_QWORD *)(a3 + 40);
    v9 = _s5StateOMa(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 32), v7);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = v8;
      v11 = sub_22ABDE8A0();
      v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      v13 = sub_22ABDF5D8();
      v14 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v15 = (void *)(a1 + v14);
      v16 = (const void *)(a2 + v14);
      if (__swift_getEnumTagSinglePayload(a2 + v14, 1, v11))
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v12((uint64_t)v15, (uint64_t)v16, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
      v8 = v10;
    }
    else
    {
      v54 = v8;
      v17 = sub_22ABDD7D8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v19 = (char *)(a1 + v18);
      v20 = a2 + v18;
      *(_DWORD *)v19 = *(_DWORD *)(a2 + v18);
      *((_DWORD *)v19 + 1) = *(_DWORD *)(a2 + v18 + 4);
      *((_DWORD *)v19 + 2) = *(_DWORD *)(a2 + v18 + 8);
      *((_DWORD *)v19 + 3) = *(_DWORD *)(a2 + v18 + 12);
      v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v22 = v21[12];
      v23 = &v19[v22];
      v24 = (const void *)(v20 + v22);
      v25 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      }
      v27 = v21[13];
      v28 = &v19[v27];
      v29 = (const void *)(v20 + v27);
      v30 = sub_22ABDD598();
      v55 = v6;
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      }
      *(_DWORD *)&v19[v21[14]] = *(_DWORD *)(v20 + v21[14]);
      *(_QWORD *)&v19[v21[15]] = *(_QWORD *)(v20 + v21[15]);
      v32 = v21[16];
      v33 = &v19[v32];
      v34 = v20 + v32;
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v36 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
      v36(v33, v34, v35);
      v36(&v19[v21[17]], v20 + v21[17], v35);
      v37 = v21[18];
      v38 = &v19[v37];
      v39 = (const void *)(v20 + v37);
      if (__swift_getEnumTagSinglePayload(v20 + v37, 1, v35))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v36(v38, (uint64_t)v39, v35);
        __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v35);
      }
      v8 = v54;
      v6 = v55;
      swift_storeEnumTagMultiPayload();
    }
    v7 = v56;
  }
  v41 = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v6, v8, v7);
  *(_QWORD *)(a1 + v41[11]) = *(_QWORD *)(a2 + v41[11]);
  *(_QWORD *)(a1 + v41[12]) = *(_QWORD *)(a2 + v41[12]);
  *(_QWORD *)(a1 + v41[13]) = *(_QWORD *)(a2 + v41[13]);
  v42 = *(int *)(a3 + 60);
  v43 = a1 + v42;
  v44 = a2 + v42;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(v43, v44, AssociatedTypeWitness);
  v46 = *(int *)(a3 + 64);
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
  v50 = *(int *)(a3 + 68);
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  *v51 = *(_QWORD *)(a2 + v50);
  v51[1] = *(_QWORD *)(a2 + v50 + 8);
  sub_22ABDEAEC();
  swift_bridgeObjectRelease();
  v51[2] = v52[2];
  v51[3] = v52[3];
  v51[4] = v52[4];
  *(_QWORD *)(a1 + *(int *)(a3 + 72)) = *(_QWORD *)(a2 + *(int *)(a3 + 72));
  return a1;
}

uint64_t sub_22AAFD97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t AssociatedTypeWitness;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 32);
  v57 = *(_QWORD *)(a3 + 40);
  _s5StateOMa(0, v6, v7, v57);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = v7;
    v9 = sub_22ABDE8A0();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
    v10(a1, a2, v9);
    v11 = sub_22ABDF5D8();
    v12 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    if (__swift_getEnumTagSinglePayload(a2 + v12, 1, v9))
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v10((uint64_t)v13, (uint64_t)v14, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
    v25 = v8;
  }
  else
  {
    v55 = v7;
    v15 = sub_22ABDD7D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
    v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
    v17 = a1 + v16;
    v18 = a2 + v16;
    *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
    v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
    v20 = v19[12];
    v21 = (void *)(v17 + v20);
    v22 = (const void *)(v18 + v20);
    v23 = sub_22ABDD5D4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
    }
    v26 = v19[13];
    v27 = (void *)(v17 + v26);
    v28 = (const void *)(v18 + v26);
    v29 = sub_22ABDD598();
    v56 = v6;
    if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
    }
    *(_DWORD *)(v17 + v19[14]) = *(_DWORD *)(v18 + v19[14]);
    *(_QWORD *)(v17 + v19[15]) = *(_QWORD *)(v18 + v19[15]);
    v31 = v19[16];
    v32 = v17 + v31;
    v33 = v18 + v31;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
    v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32);
    v35(v32, v33, v34);
    v35(v17 + v19[17], v18 + v19[17], v34);
    v36 = v19[18];
    v37 = (void *)(v17 + v36);
    v38 = (const void *)(v18 + v36);
    if (__swift_getEnumTagSinglePayload(v18 + v36, 1, v34))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v35((uint64_t)v37, (uint64_t)v38, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v34);
    }
    v25 = v55;
    v6 = v56;
    swift_storeEnumTagMultiPayload();
  }
  v40 = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v6, v25, v57);
  *(_QWORD *)(a1 + v40[11]) = *(_QWORD *)(a2 + v40[11]);
  *(_QWORD *)(a1 + v40[12]) = *(_QWORD *)(a2 + v40[12]);
  *(_QWORD *)(a1 + v40[13]) = *(_QWORD *)(a2 + v40[13]);
  v41 = *(int *)(a3 + 60);
  v42 = a1 + v41;
  v43 = a2 + v41;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v42, v43, AssociatedTypeWitness);
  v45 = *(int *)(a3 + 64);
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
  v49 = *(int *)(a3 + 68);
  v50 = *(int *)(a3 + 72);
  v51 = a1 + v49;
  v52 = a2 + v49;
  v53 = *(_OWORD *)(v52 + 16);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *(_OWORD *)(v51 + 16) = v53;
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);
  return a1;
}

uint64_t sub_22AAFDDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t AssociatedTypeWitness;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v6 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(a3 + 40);
  if (a1 != a2)
  {
    v57 = *(_QWORD *)(a3 + 40);
    v9 = _s5StateOMa(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 32), v7);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = v8;
      v11 = sub_22ABDE8A0();
      v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
      v12(a1, a2, v11);
      v13 = sub_22ABDF5D8();
      v14 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v15 = (void *)(a1 + v14);
      v16 = (const void *)(a2 + v14);
      if (__swift_getEnumTagSinglePayload(a2 + v14, 1, v11))
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v12((uint64_t)v15, (uint64_t)v16, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
      v8 = v10;
    }
    else
    {
      v55 = v8;
      v17 = sub_22ABDD7D8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B10230) + 48);
      v19 = a1 + v18;
      v20 = a2 + v18;
      *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
      v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255B10220);
      v22 = v21[12];
      v23 = (void *)(v19 + v22);
      v24 = (const void *)(v20 + v22);
      v25 = sub_22ABDD5D4();
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAD0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      }
      v27 = v21[13];
      v28 = (void *)(v19 + v27);
      v29 = (const void *)(v20 + v27);
      v30 = sub_22ABDD598();
      v56 = v6;
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DAC8);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      }
      *(_DWORD *)(v19 + v21[14]) = *(_DWORD *)(v20 + v21[14]);
      *(_QWORD *)(v19 + v21[15]) = *(_QWORD *)(v20 + v21[15]);
      v32 = v21[16];
      v33 = v19 + v32;
      v34 = v20 + v32;
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B15EA0);
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 32);
      v36(v33, v34, v35);
      v36(v19 + v21[17], v20 + v21[17], v35);
      v37 = v21[18];
      v38 = (void *)(v19 + v37);
      v39 = (const void *)(v20 + v37);
      if (__swift_getEnumTagSinglePayload(v20 + v37, 1, v35))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(qword_255B15EA8);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v36((uint64_t)v38, (uint64_t)v39, v35);
        __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v35);
      }
      v8 = v55;
      v6 = v56;
      swift_storeEnumTagMultiPayload();
    }
    v7 = v57;
  }
  v41 = (int *)type metadata accessor for LinearTimeSeriesForecaster.Model(0, v6, v8, v7);
  *(_QWORD *)(a1 + v41[11]) = *(_QWORD *)(a2 + v41[11]);
  *(_QWORD *)(a1 + v41[12]) = *(_QWORD *)(a2 + v41[12]);
  *(_QWORD *)(a1 + v41[13]) = *(_QWORD *)(a2 + v41[13]);
  v42 = *(int *)(a3 + 60);
  v43 = a1 + v42;
  v44 = a2 + v42;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v43, v44, AssociatedTypeWitness);
  v46 = *(int *)(a3 + 64);
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = sub_22ABDE8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
  v50 = *(int *)(a3 + 68);
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = *(_QWORD *)(a2 + v50 + 8);
  *(_QWORD *)v51 = *(_QWORD *)(a2 + v50);
  *(_QWORD *)(v51 + 8) = v53;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v51 + 16) = *(_OWORD *)(v52 + 16);
  *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + 32);
  *(_QWORD *)(a1 + *(int *)(a3 + 72)) = *(_QWORD *)(a2 + *(int *)(a3 + 72));
  return a1;
}

uint64_t sub_22AAFE260()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22AAFE26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v15;

  type metadata accessor for LinearTimeSeriesForecaster.Model(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 32), *(_QWORD *)(a3 + 40));
  OUTLINED_FUNCTION_21_18();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_21_18();
  if (v9)
  {
    v7 = v10;
    v11 = *(int *)(a3 + 60);
LABEL_10:
    v8 = a1 + v11;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  sub_22ABDE8A0();
  OUTLINED_FUNCTION_21_18();
  if (v12)
  {
    v7 = v13;
    v11 = *(int *)(a3 + 64);
    goto LABEL_10;
  }
  v15 = *(_QWORD *)(a1 + *(int *)(a3 + 68) + 8);
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  return (v15 + 1);
}

uint64_t sub_22AAFE35C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22AAFE368()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_26_40();
  type metadata accessor for LinearTimeSeriesForecaster.Model(v3, v4, v5, v6);
  OUTLINED_FUNCTION_22_16();
  if (v10)
  {
    v8 = v7;
    v9 = v1;
  }
  else
  {
    swift_getAssociatedTypeWitness();
    OUTLINED_FUNCTION_22_16();
    if (v10)
    {
      v8 = v11;
      v12 = v2[15];
    }
    else
    {
      OUTLINED_FUNCTION_26_40();
      sub_22ABDE8A0();
      OUTLINED_FUNCTION_22_16();
      if (!v13)
      {
        *(_QWORD *)(v1 + v2[17] + 8) = (v0 - 1);
        return;
      }
      v8 = v14;
      v12 = v2[16];
    }
    v9 = v1 + v12;
  }
  __swift_storeEnumTagSinglePayload(v9, v0, v0, v8);
}

uint64_t OUTLINED_FUNCTION_8_63()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_9_64()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_16_53()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17_50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for LinearTimeSeriesForecaster.Model(0, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_18_57()
{
  uint64_t *v0;

  return sub_22AAFB600(v0);
}

uint64_t OUTLINED_FUNCTION_21_52@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 8))(a1, *(_QWORD *)(v2 + 88));
}

uint64_t OUTLINED_FUNCTION_22_46@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  return sub_22AAFBDDC(v1 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_23_48()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

void sub_22AAFE4B8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for ComposedUpdatableSupervisedTemporalEstimator();
}

uint64_t sub_22AAFE510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_79(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

void sub_22AAFE540()
{
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_150_1();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_148_1();
  OUTLINED_FUNCTION_33_34();
}

void sub_22AAFE5B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_146_1();
  UpdatableTemporalEstimator.adaptedAsSupervised<A>(annotationType:)(v6, v3, v6, v4, v5);
  OUTLINED_FUNCTION_28_4(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  OUTLINED_FUNCTION_110_3(*(_QWORD *)(v7 - 128), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  OUTLINED_FUNCTION_115_0();
}

void sub_22AAFE624(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v1;
  *(_QWORD *)(v4 - 96) = a1;
  *(_QWORD *)(v4 - 88) = v2;
  type metadata accessor for ComposedUpdatableSupervisedTemporalEstimator();
}

void sub_22AAFE638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v2 + *(int *)(a1 + 52), *(_QWORD *)(v3 - 120), v1);
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AAFE660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v10[12] = a9;
  v10[13] = v9;
  v10[10] = a7;
  v10[11] = a8;
  v10[8] = a5;
  v10[9] = a6;
  v10[6] = a3;
  v10[7] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v10[14] = *(_QWORD *)(a5[5] + 8);
  v10[15] = a5[3];
  v16 = OUTLINED_FUNCTION_131_0();
  v10[16] = v16;
  v10[17] = *(_QWORD *)(v16 - 8);
  v10[18] = OUTLINED_FUNCTION_77_4();
  v10[19] = swift_task_alloc();
  v17 = *(_QWORD *)(a5[4] + 8);
  v18 = a5[2];
  v19 = OUTLINED_FUNCTION_109_4();
  v10[20] = v19;
  v10[21] = *(_QWORD *)(v19 - 8);
  v10[22] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_131_0();
  v10[23] = swift_getAssociatedConformanceWitness();
  v20 = OUTLINED_FUNCTION_122_2();
  v10[24] = v20;
  v10[25] = type metadata accessor for AnnotatedFeature(0, v20, v19, v21);
  v10[26] = OUTLINED_FUNCTION_0_0();
  v10[27] = *(_QWORD *)(v20 - 8);
  v10[28] = OUTLINED_FUNCTION_80_8();
  v10[29] = swift_task_alloc();
  v23 = type metadata accessor for AnnotatedFeature(0, a7, v19, v22);
  v10[30] = v23;
  v10[31] = *(_QWORD *)(v23 - 8);
  v10[32] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v10[33] = OUTLINED_FUNCTION_0_0();
  v10[34] = *(_QWORD *)(a6 - 8);
  v10[35] = OUTLINED_FUNCTION_0_0();
  v24 = OUTLINED_FUNCTION_134_2();
  v10[36] = v24;
  v10[37] = *(_QWORD *)(v24 - 8);
  v10[38] = OUTLINED_FUNCTION_0_0();
  v25 = OUTLINED_FUNCTION_128_1();
  v10[39] = v25;
  v10[40] = *(_QWORD *)(v25 - 8);
  v10[41] = OUTLINED_FUNCTION_23_0();
  v26 = swift_task_alloc();
  v10[42] = v26;
  v27 = (_QWORD *)OUTLINED_FUNCTION_25();
  v10[43] = v27;
  *v27 = v10;
  v27[1] = sub_22AAFE8D4;
  return v29(v26, a2, a3, a4, a6, a7, a8, a9, v18, v17);
}

uint64_t sub_22AAFE8D4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAFE924()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  uint64_t v11;

  OUTLINED_FUNCTION_67();
  v1 = v0[44];
  sub_22ABDF1DC();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[40] + 8))(v0[42], v0[39]);
LABEL_3:
    OUTLINED_FUNCTION_31_17();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_82_3();
    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_112_1();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_19_0(v2);
  }
  v0[2] = sub_22ABDE9F0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_54_0();
  v4 = v0[33];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_7_40(v4);
  if (v5)
  {
    OUTLINED_FUNCTION_30_0(v0[37]);
    OUTLINED_FUNCTION_84_6();
    if (!v4)
    {
      v11 = OUTLINED_FUNCTION_19_27();
      OUTLINED_FUNCTION_88_3(v11);
      OUTLINED_FUNCTION_86_4();
    }
    v6 = v0[42];
    v7 = v0[39];
    v8 = v0[40];
    OUTLINED_FUNCTION_75_8();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_39_29(v0[31]);
  v9 = (_QWORD *)OUTLINED_FUNCTION_65_9();
  OUTLINED_FUNCTION_33_22(v9);
  return OUTLINED_FUNCTION_18_0(v10);
}

uint64_t sub_22AAFEA6C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_103_1();
  OUTLINED_FUNCTION_43_12((uint64_t)sub_22AA56C38);
  return OUTLINED_FUNCTION_3_7(v0);
}

uint64_t sub_22AAFEAA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 368) = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AAFEAF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  _QWORD *v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_67();
  v13 = v0[31];
  v1 = v0[30];
  v2 = v0[27];
  v12 = v0[29];
  OUTLINED_FUNCTION_83_13(v3, v12);
  OUTLINED_FUNCTION_53_15(*(int *)(v1 + 36));
  OUTLINED_FUNCTION_47_20();
  OUTLINED_FUNCTION_156_1();
  OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_48_10(v12, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  v4 = v0[46];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_60_7();
  if (v5)
  {
    OUTLINED_FUNCTION_30_0(v0[37]);
    sub_22ABDF1DC();
    if (!v4)
    {
      v11 = OUTLINED_FUNCTION_19_27();
      OUTLINED_FUNCTION_88_3(v11);
      OUTLINED_FUNCTION_86_4();
    }
    v6 = v0[40];
    OUTLINED_FUNCTION_75_8();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    OUTLINED_FUNCTION_31_17();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_82_3();
    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_112_1();
    v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_19_0(v7);
  }
  else
  {
    OUTLINED_FUNCTION_39_29(v0[31]);
    v8 = (_QWORD *)OUTLINED_FUNCTION_65_9();
    OUTLINED_FUNCTION_33_22(v8);
    return OUTLINED_FUNCTION_18_0(v9);
  }
}

uint64_t sub_22AAFEC48()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_103_1();
  OUTLINED_FUNCTION_43_12((uint64_t)sub_22AA56C38);
  return OUTLINED_FUNCTION_3_7(v0);
}

uint64_t sub_22AAFEC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v11[17] = a10;
  v11[18] = v10;
  v11[15] = v36;
  v11[16] = a9;
  v11[13] = a8;
  v11[14] = v35;
  v11[11] = a6;
  v11[12] = a7;
  v11[9] = a4;
  v11[10] = a5;
  v11[7] = a2;
  v11[8] = a3;
  v11[6] = a1;
  v11[19] = *(_QWORD *)(a6[5] + 8);
  v11[20] = a6[3];
  v15 = OUTLINED_FUNCTION_130_0();
  v11[21] = v15;
  v11[22] = *(_QWORD *)(v15 - 8);
  v11[23] = swift_task_alloc();
  v11[24] = swift_task_alloc();
  v11[25] = *(_QWORD *)(a8 - 8);
  v11[26] = OUTLINED_FUNCTION_0_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[27] = AssociatedTypeWitness;
  v11[28] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[29] = OUTLINED_FUNCTION_0_0();
  v17 = *(_QWORD *)(a6[4] + 8);
  v18 = a6[2];
  v19 = OUTLINED_FUNCTION_140_2();
  v11[30] = v19;
  v11[31] = *(_QWORD *)(v19 - 8);
  v11[32] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_130_0();
  v11[33] = OUTLINED_FUNCTION_141_1();
  v20 = OUTLINED_FUNCTION_122_2();
  v11[34] = v20;
  v21 = OUTLINED_FUNCTION_158_0();
  v11[35] = type metadata accessor for AnnotatedFeature(v21, v22, v19, v23);
  v11[36] = OUTLINED_FUNCTION_0_0();
  v11[37] = *(_QWORD *)(v20 - 8);
  v11[38] = OUTLINED_FUNCTION_2_21();
  v11[39] = OUTLINED_FUNCTION_5_17();
  v11[40] = OUTLINED_FUNCTION_5_17();
  v25 = type metadata accessor for AnnotatedFeature(0, v35, v19, v24);
  v11[41] = v25;
  v11[42] = *(_QWORD *)(v25 - 8);
  v11[43] = OUTLINED_FUNCTION_80_8();
  v11[44] = swift_task_alloc();
  OUTLINED_FUNCTION_158_0();
  sub_22ABDF5D8();
  v11[45] = OUTLINED_FUNCTION_2_21();
  v11[46] = OUTLINED_FUNCTION_5_17();
  v11[47] = *(_QWORD *)(a7 - 8);
  v11[48] = OUTLINED_FUNCTION_0_0();
  v26 = swift_getAssociatedTypeWitness();
  v11[49] = v26;
  v11[50] = *(_QWORD *)(v26 - 8);
  v11[51] = OUTLINED_FUNCTION_0_0();
  v27 = OUTLINED_FUNCTION_128_1();
  v11[52] = v27;
  v11[53] = *(_QWORD *)(v27 - 8);
  v11[54] = OUTLINED_FUNCTION_23_0();
  v28 = swift_task_alloc();
  v11[55] = v28;
  v29 = (_QWORD *)OUTLINED_FUNCTION_25();
  v11[56] = v29;
  *v29 = v11;
  v29[1] = sub_22AAFEF78;
  return v31(v28, a2, a4, a5, a7, v35, v36, a10, v18, v17);
}

uint64_t sub_22AAFEF78()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 456) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AAFEFC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t (*v18)(void);
  uint64_t v19;

  OUTLINED_FUNCTION_101_3();
  v1 = v0[57];
  sub_22ABDF1DC();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[53] + 8))(v0[55], v0[52]);
LABEL_3:
    swift_task_dealloc();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_82_3();
    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_112_1();
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_79_4();
    OUTLINED_FUNCTION_111_1();
    OUTLINED_FUNCTION_89_0();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_94_3();
    return OUTLINED_FUNCTION_15_36(v2);
  }
  v0[2] = sub_22ABDE9F0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_54_0();
  v4 = v0[46];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_7_40(v4);
  if (v5)
  {
    OUTLINED_FUNCTION_129_0();
    v7 = v0[25];
    v6 = v0[26];
    v8 = v0[13];
    v9 = v0[8];
    OUTLINED_FUNCTION_30_0(v10);
    v0[3] = sub_22ABDE9F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    sub_22ABDEE58();
    v11 = v0[45];
    v12 = v0[41];
    swift_getAssociatedConformanceWitness();
    sub_22ABDF650();
    if (__swift_getEnumTagSinglePayload(v11, 1, v12) == 1)
    {
      OUTLINED_FUNCTION_30_0(v0[28]);
      OUTLINED_FUNCTION_84_6();
      if (!v12)
      {
        v19 = OUTLINED_FUNCTION_2_43();
        OUTLINED_FUNCTION_55_10(v19);
        OUTLINED_FUNCTION_106();
      }
      v13 = v0[55];
      v14 = v0[52];
      v15 = v0[53];
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_75_8();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      goto LABEL_3;
    }
    OUTLINED_FUNCTION_36_17();
    v17 = (_QWORD *)OUTLINED_FUNCTION_9_37();
    OUTLINED_FUNCTION_39_18(v17);
  }
  else
  {
    OUTLINED_FUNCTION_39_29(v0[42]);
    v16 = (_QWORD *)OUTLINED_FUNCTION_9_37();
    OUTLINED_FUNCTION_84_7(v16);
  }
  OUTLINED_FUNCTION_38_20();
  return OUTLINED_FUNCTION_14_37(v18);
}

uint64_t sub_22AAFF240()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = OUTLINED_FUNCTION_60_11();
  OUTLINED_FUNCTION_4_38(v0, (uint64_t)sub_22AAFF6D0);
  return OUTLINED_FUNCTION_44_3(v1);
}

uint64_t sub_22AAFF26C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 472) = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AAFF2BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  _QWORD *v13;
  _QWORD *v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_101_3();
  v1 = v0[41];
  v18 = v0[42];
  v2 = v0[37];
  v17 = v0[40];
  OUTLINED_FUNCTION_83_13(v3, v17);
  OUTLINED_FUNCTION_53_15(*(int *)(v1 + 36));
  OUTLINED_FUNCTION_47_20();
  OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_112_2();
  OUTLINED_FUNCTION_48_10(v17, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  v4 = v0[59];
  v5 = v0[49];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_60_7();
  if (!v6)
  {
    OUTLINED_FUNCTION_39_29(v0[42]);
    v13 = (_QWORD *)OUTLINED_FUNCTION_9_37();
    OUTLINED_FUNCTION_84_7(v13);
LABEL_7:
    OUTLINED_FUNCTION_38_20();
    return OUTLINED_FUNCTION_14_37(v15);
  }
  OUTLINED_FUNCTION_129_0();
  v8 = v0[25];
  v7 = v0[26];
  v9 = v0[8];
  OUTLINED_FUNCTION_30_0(v10);
  v0[3] = sub_22ABDE9F0();
  OUTLINED_FUNCTION_66_12(v7, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  sub_22ABDEE58();
  OUTLINED_FUNCTION_86_7();
  OUTLINED_FUNCTION_103_1();
  OUTLINED_FUNCTION_111_2();
  OUTLINED_FUNCTION_7_40(v5);
  if (!v6)
  {
    OUTLINED_FUNCTION_36_17();
    v14 = (_QWORD *)OUTLINED_FUNCTION_9_37();
    OUTLINED_FUNCTION_39_18(v14);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_0(v0[28]);
  sub_22ABDF1DC();
  if (!v4)
  {
    v16 = OUTLINED_FUNCTION_2_43();
    OUTLINED_FUNCTION_55_10(v16);
    OUTLINED_FUNCTION_106();
  }
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_75_8();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_17_30();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_88_0();
  v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
  return OUTLINED_FUNCTION_15_36(v11);
}

uint64_t sub_22AAFF4B4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = OUTLINED_FUNCTION_60_11();
  OUTLINED_FUNCTION_4_38(v0, (uint64_t)sub_22AAFF6D0);
  return OUTLINED_FUNCTION_44_3(v1);
}

uint64_t sub_22AAFF4E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 488) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_125_1();
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AAFF538()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_101_3();
  v1 = v0[43];
  v17 = v0[42];
  v2 = v0[41];
  v3 = v0[39];
  v5 = v0[36];
  v4 = v0[37];
  v6 = v0[34];
  v16 = v0[38];
  v7 = v0[32];
  v8 = v0[30];
  OUTLINED_FUNCTION_110_3(v3, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  OUTLINED_FUNCTION_53_15(*(int *)(v2 + 36));
  AnnotatedFeature.init(feature:annotation:)(v3, v7, v6, v8, v5);
  OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_112_2();
  OUTLINED_FUNCTION_48_10(v16, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_28_4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  v9 = v0[61];
  OUTLINED_FUNCTION_86_7();
  OUTLINED_FUNCTION_103_1();
  OUTLINED_FUNCTION_111_2();
  OUTLINED_FUNCTION_7_40(v4);
  if (v10)
  {
    OUTLINED_FUNCTION_30_0(v0[28]);
    sub_22ABDF1DC();
    if (!v9)
    {
      v15 = OUTLINED_FUNCTION_2_43();
      OUTLINED_FUNCTION_55_10(v15);
      OUTLINED_FUNCTION_106();
    }
    OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_75_8();
    OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    OUTLINED_FUNCTION_17_30();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_82_3();
    OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_112_1();
    OUTLINED_FUNCTION_80_4();
    OUTLINED_FUNCTION_79_4();
    OUTLINED_FUNCTION_111_1();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_88_0();
    v11 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_15_36(v11);
  }
  else
  {
    OUTLINED_FUNCTION_36_17();
    v12 = (_QWORD *)OUTLINED_FUNCTION_9_37();
    OUTLINED_FUNCTION_39_18(v12);
    OUTLINED_FUNCTION_38_20();
    return OUTLINED_FUNCTION_14_37(v13);
  }
}

uint64_t sub_22AAFF6A4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = OUTLINED_FUNCTION_60_11();
  OUTLINED_FUNCTION_4_38(v0, (uint64_t)sub_22AAFF6D0);
  return OUTLINED_FUNCTION_44_3(v1);
}

uint64_t sub_22AAFF6D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 520) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

void sub_22AAFF73C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[54];
  v2 = v0[52];
  v3 = v0[23];
  v4 = v0[24];
  v5 = v0[22];
  v6 = v0[6];
  (*(void (**)(uint64_t))(v0[53] + 32))(v1);
  OUTLINED_FUNCTION_66_12(v3, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  OUTLINED_FUNCTION_74();
  swift_getAssociatedConformanceWitness();
  ComposedTemporalTransformer.init(_:_:)(v1, v2, v6);
}

uint64_t sub_22AAFF830()
{
  uint64_t v0;

  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_88_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22AAFF8B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v10 = v2;
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_22();
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_158_0();
  v6 = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_9_9();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 16))(&associated type descriptor for SupervisedTemporalEstimator.Transformer, v5, v4);
  v8 = OUTLINED_FUNCTION_74();
  v9(v8);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_85();
  ComposedTemporalTransformer.init(_:_:)((uint64_t)&associated type descriptor for SupervisedTemporalEstimator.Transformer, v6, v10);
}

void sub_22AAFF9C8()
{
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AAFF9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v10[16] = a9;
  v10[17] = v9;
  v10[14] = a7;
  v10[15] = a8;
  v10[12] = a5;
  v10[13] = a6;
  v10[10] = a3;
  v10[11] = a4;
  v10[8] = a1;
  v10[9] = a2;
  v14 = *(_QWORD *)(a5 + 32);
  v15 = *(_QWORD *)(a5 + 16);
  v16 = OUTLINED_FUNCTION_109_4();
  v10[18] = v16;
  v10[19] = *(_QWORD *)(v16 - 8);
  v10[20] = OUTLINED_FUNCTION_0_0();
  v10[21] = OUTLINED_FUNCTION_109_4();
  v10[22] = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10[23] = AssociatedTypeWitness;
  v10[24] = type metadata accessor for AnnotatedFeature(0, AssociatedTypeWitness, v16, v18);
  v10[25] = OUTLINED_FUNCTION_0_0();
  v10[26] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10[27] = OUTLINED_FUNCTION_77_4();
  v10[28] = swift_task_alloc();
  v20 = type metadata accessor for AnnotatedFeature(0, a7, v16, v19);
  v10[29] = v20;
  v10[30] = *(_QWORD *)(v20 - 8);
  v10[31] = OUTLINED_FUNCTION_0_0();
  sub_22ABDF5D8();
  v10[32] = OUTLINED_FUNCTION_0_0();
  v10[33] = *(_QWORD *)(a6 - 8);
  v10[34] = OUTLINED_FUNCTION_0_0();
  v21 = OUTLINED_FUNCTION_134_2();
  v10[35] = v21;
  v10[36] = *(_QWORD *)(v21 - 8);
  v10[37] = OUTLINED_FUNCTION_0_0();
  v22 = (_QWORD *)OUTLINED_FUNCTION_25();
  v10[38] = v22;
  *v22 = v10;
  v22[1] = sub_22AAFFBE0;
  return v24(a1, a2, a3, a4, a6, a7, a8, a9, v15, v14);
}

uint64_t sub_22AAFFBE0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_69(&v4);
  *(_QWORD *)(v2 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    return OUTLINED_FUNCTION_1_6((uint64_t (*)(void))v1[1]);
  }
  else
  {
    OUTLINED_FUNCTION_50_0();
    return swift_task_switch();
  }
}

uint64_t sub_22AAFFC8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  char v5;
  _QWORD *v6;
  uint64_t (*v7)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_67();
  v1 = v0[39];
  sub_22ABDF1DC();
  if (v1)
  {
LABEL_2:
    OUTLINED_FUNCTION_48_23();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_19_0(v2);
  }
  v0[6] = sub_22ABDE9F0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_54_0();
  v4 = v0[32];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_7_40(v4);
  if (v5)
  {
    OUTLINED_FUNCTION_30_0(v0[36]);
    OUTLINED_FUNCTION_84_6();
    if (!v4)
    {
      OUTLINED_FUNCTION_31_28();
      OUTLINED_FUNCTION_106_3();
      v8 = OUTLINED_FUNCTION_116_4();
      OUTLINED_FUNCTION_92_4(v8);
    }
    swift_bridgeObjectRelease();
    goto LABEL_2;
  }
  OUTLINED_FUNCTION_39_29(v0[30]);
  OUTLINED_FUNCTION_128_1();
  v6 = (_QWORD *)OUTLINED_FUNCTION_96_3();
  v0[40] = v6;
  OUTLINED_FUNCTION_52_20(v6);
  return OUTLINED_FUNCTION_18_0(v7);
}

void sub_22AAFFDD4()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_103_3(v0);
  OUTLINED_FUNCTION_84();
}

uint64_t sub_22AAFFDF8()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_135_2();
  OUTLINED_FUNCTION_56_18((uint64_t)sub_22AB00034);
  return OUTLINED_FUNCTION_3_7(v0);
}

uint64_t sub_22AAFFE28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 328) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AAFFE7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*v6)(void);
  _QWORD *v7;
  uint64_t (*v8)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_67();
  v12 = v0[30];
  v1 = v0[29];
  v2 = v0[26];
  v11 = v0[28];
  OUTLINED_FUNCTION_83_13(v3, v11);
  OUTLINED_FUNCTION_53_15(*(int *)(v1 + 36));
  OUTLINED_FUNCTION_47_20();
  OUTLINED_FUNCTION_156_1();
  OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_48_10(v11, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  v4 = v0[41];
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_48_12();
  OUTLINED_FUNCTION_60_7();
  if (v5)
  {
    OUTLINED_FUNCTION_30_0(v0[36]);
    sub_22ABDF1DC();
    if (!v4)
    {
      OUTLINED_FUNCTION_31_28();
      OUTLINED_FUNCTION_106_3();
      v10 = OUTLINED_FUNCTION_116_4();
      OUTLINED_FUNCTION_92_4(v10);
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48_23();
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_33_0();
    v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_76();
    return OUTLINED_FUNCTION_19_0(v6);
  }
  else
  {
    OUTLINED_FUNCTION_39_29(v0[30]);
    OUTLINED_FUNCTION_128_1();
    v7 = (_QWORD *)OUTLINED_FUNCTION_96_3();
    v0[40] = v7;
    OUTLINED_FUNCTION_52_20(v7);
    return OUTLINED_FUNCTION_18_0(v8);
  }
}

void sub_22AAFFFE0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_103_3(v0);
  OUTLINED_FUNCTION_84();
}

uint64_t sub_22AB00004()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_135_2();
  OUTLINED_FUNCTION_56_18((uint64_t)sub_22AB00034);
  return OUTLINED_FUNCTION_3_7(v0);
}

uint64_t sub_22AB00034()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_69(v2);
  *(_QWORD *)(v0 + 352) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AB00090()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AB0010C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 288);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 240));
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_48_23();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_1_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AB00184()
{
  uint64_t v0;

  OUTLINED_FUNCTION_48_23();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  return OUTLINED_FUNCTION_1_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AB001E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 32) + 8) + 56))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    OUTLINED_FUNCTION_74();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTemporalTransformer();
  }
  return result;
}

void sub_22AB00330(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a3;
  v7 = *(_QWORD *)(a2[5] + 8);
  v37 = a2[3];
  v38 = v7;
  v8 = OUTLINED_FUNCTION_32_0();
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_87();
  v34 = v9;
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_75(v11, v12, v13, v14, v15, v16, v17, v18, v29);
  v19 = a2[2];
  v20 = OUTLINED_FUNCTION_32_0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v29 - v23;
  v36 = a1;
  OUTLINED_FUNCTION_71(a1);
  if (!v3)
  {
    v29 = v19;
    v30 = v4;
    v39 = v20;
    v26 = v34;
    v25 = v35;
    (*(void (**)(uint64_t, uint64_t))(v38 + 64))(v36, v37);
    v27 = v30;
    v28 = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v30, v24, v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v26, v25, v32);
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_80();
    ComposedTemporalTransformer.init(_:_:)(v27, v28, v33);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AB00520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 32) + 32))();
  if (!v3)
  {
    OUTLINED_FUNCTION_150_1();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTemporalTransformer();
  }
  return result;
}

void sub_22AB00674(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v35 = a3;
  v40 = a2[5];
  v7 = a2[3];
  v34 = *(_QWORD *)(v40 + 8);
  v41 = v7;
  v33 = OUTLINED_FUNCTION_32_0();
  v37 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_87();
  v36 = v8;
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_75(v10, v11, v12, v13, v14, v15, v16, v17, v30);
  v18 = a2[2];
  v32 = *(_QWORD *)(a2[4] + 8);
  v19 = OUTLINED_FUNCTION_32_0();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_58_0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v30 - v22;
  v39 = a1;
  OUTLINED_FUNCTION_71(a1);
  if (!v3)
  {
    v31 = v4;
    v42 = v18;
    v24 = v19;
    v26 = v36;
    v25 = v37;
    v27 = v38;
    (*(void (**)(uint64_t, uint64_t))(v40 + 40))(v39, v41);
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v31, v23, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v26, v27, v33);
    OUTLINED_FUNCTION_86();
    OUTLINED_FUNCTION_86();
    v28 = OUTLINED_FUNCTION_74();
    ComposedTemporalTransformer.init(_:_:)(v28, v24, v29);
  }
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AB00868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v18;

  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v18;
  *v18 = v9;
  v18[1] = sub_22A9AFDDC;
  return sub_22AAFF9D4(a1, a2, a3, a4, a9, a5, a6, a7, a8);
}

uint64_t sub_22AB0091C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB00520(a1, a2, a3);
}

void sub_22AB00930(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_22AB00674(a1, a2, a3);
}

uint64_t sub_22AB00944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  uint64_t v9;
  _QWORD *v18;

  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v18;
  *v18 = v9;
  v18[1] = sub_22AA16B30;
  return sub_22AAFE660(a1, a2, a3, a4, a9, a5, a6, a7, a8);
}

uint64_t sub_22AB009FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v10;
  _QWORD *v16;
  uint64_t v21;

  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v16;
  *v16 = v10;
  v16[1] = sub_22AA16B30;
  return sub_22AAFEC80(a1, a2, a3, a4, a5, a10, a6, a7, a8, v21);
}

uint64_t sub_22AB00AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB001E0(a1, a2, a3);
}

void sub_22AB00AC4(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_22AB00330(a1, a2, a3);
}

void sub_22AB00B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = a1;
  *(_QWORD *)(v3 - 88) = AssociatedConformanceWitness;
  OUTLINED_FUNCTION_33_34();
}

void sub_22AB00BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&a9 - v18;
  v20 = OUTLINED_FUNCTION_159_0();
  UpdatableEstimator.adaptedAsTemporal()(v20);
  UpdatableTemporalEstimator.adaptedAsSupervised<A>(annotationType:)(v9, v13, v9, v12, v10);
  OUTLINED_FUNCTION_48_10(v14, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 160) + 8));
  OUTLINED_FUNCTION_79(v11, *(_QWORD *)(v15 - 128), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 136) + 16));
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableTemporalEstimatorToSupervisedAdaptor<A, B>, a1);
  sub_22AAFE4B8((uint64_t)v19, a1, *(_QWORD *)(v15 - 120));
}

void sub_22AB00C50()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AB00CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v3 - 168) = a1;
  v5 = OUTLINED_FUNCTION_141_1();
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = a1;
  *(_QWORD *)(v3 - 88) = v5;
  OUTLINED_FUNCTION_33_34();
}

void sub_22AB00D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_9_9();
  type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(0, v5, v1, v8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_145_0();
  UpdatableSupervisedEstimator<>.adaptedAsTemporal()(v5, v1);
  TemporalTransformer.adaptedAsUpdatableEstimator()(*(_QWORD *)(v6 - 160), *(_QWORD *)(v6 - 152));
  UpdatableTemporalEstimator.adaptedAsSupervised<A>(annotationType:)(v0, v2, v0, *(_QWORD *)(v6 - 168), v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 128) + 8))(v4, v2);
  OUTLINED_FUNCTION_106();
}

void sub_22AB00DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableTemporalEstimatorToSupervisedAdaptor<A, B>, v2);
  OUTLINED_FUNCTION_131_2(v1, v0, *(_QWORD *)(v3 - 120));
}

void sub_22AB00DE0()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AB00E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v6);
  v8 = type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(0, v2, v1, v7);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_146_1();
  UpdatableSupervisedEstimator<>.adaptedAsTemporal()(v2, v1);
  UpdatableTemporalEstimator.adaptedAsSupervised<A>(annotationType:)(v3, v0, v3, *(_QWORD *)(v5 - 136), v4);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableSupervisedEstimatorToTemporalAdaptor<A>, v8);
  OUTLINED_FUNCTION_84();
}

void sub_22AB00F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22AAFE4B8(v0, v1, *(_QWORD *)(v2 - 120));
}

void sub_22AB00F20()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AB00FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22AAFE4B8(v2, v1, v0);
}

void sub_22AB00FE8()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AB010A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_145_0();
  UpdatableTemporalEstimator.adaptedAsSupervised<A>(annotationType:)(v4, v6, v4, v2, v1);
  UpdatableSupervisedEstimator<>.adaptedAsTemporal()(v5, v3);
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableTemporalEstimatorToSupervisedAdaptor<A, B>, a1);
  OUTLINED_FUNCTION_86_4();
}

void sub_22AB01108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_131_2(v0, v1, *(_QWORD *)(v2 - 120));
}

void sub_22AB01124()
{
  OUTLINED_FUNCTION_3();
}

#error "22AB01164: call analysis failed (funcsize=22)"

void sub_22AB01188()
{
  OUTLINED_FUNCTION_3();
}

void UpdatableSupervisedTemporalEstimator.appending<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_4_4();
  v1 = OUTLINED_FUNCTION_61_17(v0);
  type metadata accessor for TransformerToTemporalAdaptor(v1, v2, v3, v4);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_89_7();
  OUTLINED_FUNCTION_106();
}

{
  sub_22AB0149C();
}

{
  sub_22AB0149C();
}

{
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_150_1();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_148_1();
  OUTLINED_FUNCTION_33_34();
}

void sub_22AB011F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 - 176) = a1;
  v2 = OUTLINED_FUNCTION_158_0();
  *(_QWORD *)(v1 - 168) = *(_QWORD *)(type metadata accessor for TemporalTransformerToUpdatableEstimatorAdaptor(v2, v3, v4, v5)- 8);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_9_9();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_115_0();
}

void sub_22AB0125C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;

  *(_QWORD *)(v3 - 184) = a1;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 192) = AssociatedConformanceWitness;
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = a1;
  *(_QWORD *)(v3 - 88) = AssociatedConformanceWitness;
  OUTLINED_FUNCTION_33_34();
}

void sub_22AB01290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_2_22();
  OUTLINED_FUNCTION_126_1();
  v19 = MEMORY[0x24BDAC7A8](v18);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v21 + 16))((char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), *(_QWORD *)(v16 - 152), v12, v19);
  Transformer.adaptedAsTemporal()(v9, *(_QWORD *)(v16 - 160));
  TemporalTransformer.adaptedAsUpdatableEstimator()(v11, *(_QWORD *)(v16 - 176));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 144) + 8))(v15, v11);
  UpdatableTemporalEstimator.adaptedAsSupervised<A>(annotationType:)(v13, v14, v13, *(_QWORD *)(v16 - 184), *(_QWORD *)(v16 - 192));
  OUTLINED_FUNCTION_48_10(v10, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 168) + 8));
  OUTLINED_FUNCTION_37_0();
}

void sub_22AB01358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22AAFE4B8(v0, v1, *(_QWORD *)(v2 - 120));
}

void sub_22AB01378()
{
  OUTLINED_FUNCTION_3();
}

void UpdatableSupervisedTemporalEstimator.appending<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_4_4();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(0, v25, v23, v29);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_126_1();
  v32 = MEMORY[0x24BDAC7A8](v31);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v34 + 16))((char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v28, v32);
  UpdatableSupervisedEstimator<>.adaptedAsTemporal()(v26, v24);
  OUTLINED_FUNCTION_84();
}

void sub_22AB01458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_131_2(v2, v0, v1);
}

void sub_22AB01474()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AB0149C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_4();
  v1 = v0;
  v3 = OUTLINED_FUNCTION_61_17(v2);
  v5 = v4(v3);
  OUTLINED_FUNCTION_13_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_89_7();
  swift_getAssociatedTypeWitness();
  MEMORY[0x22E2E4D80](v1, v5);
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_33_34();
}

void sub_22AB01560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_79(v4, *(_QWORD *)(v6 - 160), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  v10 = OUTLINED_FUNCTION_159_0();
  (*(void (**)(uint64_t))(v6 - 136))(v10);
  UpdatableTemporalEstimator.adaptedAsSupervised<A>(annotationType:)(v1, v2, v1, v3, v0);
  OUTLINED_FUNCTION_28_4(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 144) + 8));
  OUTLINED_FUNCTION_106();
}

void sub_22AB015F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22AAFE4B8(v1, v0, *(_QWORD *)(v2 - 120));
}

void sub_22AB0160C()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AB01694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_10_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_126_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_3_23();
  OUTLINED_FUNCTION_79(v1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  UpdatableTemporalEstimator.adaptedAsSupervised<A>(annotationType:)(v5, v2, v5, v0, v4);
  OUTLINED_FUNCTION_115_0();
}

void sub_22AB01700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_131_2(v1, v0, *(_QWORD *)(v2 - 120));
}

void sub_22AB0171C()
{
  OUTLINED_FUNCTION_3();
}

#error "22AB0175C: call analysis failed (funcsize=22)"

void sub_22AB01780()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AB0178C()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_40_23();
  type metadata accessor for UpdatableEstimatorToTemporalAdaptor(255, *v0, v0[2], v1);
  OUTLINED_FUNCTION_64_13();
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB017DC()
{
  OUTLINED_FUNCTION_54_17();
  OUTLINED_FUNCTION_34_35();
}

void sub_22AB017FC()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB0180C()
{
  OUTLINED_FUNCTION_23_49();
}

void type metadata accessor for ComposedUpdatableSupervisedTemporalEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AB0183C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_23();
  v1 = v0[1];
  v2 = v0[3];
  type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(255, *v0, v0[2], v3);
  type metadata accessor for TemporalTransformerToUpdatableEstimatorAdaptor(255, v1, v2, v4);
  OUTLINED_FUNCTION_149_1();
  OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_86_4();
}

void sub_22AB018B0()
{
  OUTLINED_FUNCTION_141_1();
  OUTLINED_FUNCTION_34_35();
}

void sub_22AB018D8()
{
  OUTLINED_FUNCTION_37_0();
}

void sub_22AB018E8()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB018F8()
{
  OUTLINED_FUNCTION_23_49();
}

void sub_22AB0191C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_40_23();
  OUTLINED_FUNCTION_128_3(v0, v1, v2, v3);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_54_17();
  OUTLINED_FUNCTION_34_35();
}

void sub_22AB01988()
{
  OUTLINED_FUNCTION_86_4();
}

void sub_22AB01998()
{
  OUTLINED_FUNCTION_37_0();
}

void sub_22AB019A8()
{
  OUTLINED_FUNCTION_23_49();
}

void sub_22AB019CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(255, *a1, a1[2], a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AB01A00()
{
  OUTLINED_FUNCTION_23_49();
}

void sub_22AB01A24()
{
  OUTLINED_FUNCTION_40_23();
  OUTLINED_FUNCTION_64_13();
  OUTLINED_FUNCTION_54_17();
  OUTLINED_FUNCTION_34_35();
}

void sub_22AB01A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_128_3(a1, a2, a3, a4);
  OUTLINED_FUNCTION_86_4();
}

void sub_22AB01A90()
{
  OUTLINED_FUNCTION_37_0();
}

void sub_22AB01AA0()
{
  OUTLINED_FUNCTION_23_49();
}

void sub_22AB01AC4()
{
  OUTLINED_FUNCTION_40_23();
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_80_5();
  OUTLINED_FUNCTION_34_35();
}

void sub_22AB01B14()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB01B24()
{
  OUTLINED_FUNCTION_23_49();
}

void sub_22AB01B48()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_40_23();
  type metadata accessor for TransformerToTemporalAdaptor(255, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 24), v1);
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB01B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for TemporalTransformerToUpdatableEstimatorAdaptor(255, v4, a1, a4);
  OUTLINED_FUNCTION_64_13();
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB01BB8()
{
  OUTLINED_FUNCTION_54_17();
  OUTLINED_FUNCTION_34_35();
}

void sub_22AB01BD8()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB01BE8()
{
  OUTLINED_FUNCTION_23_49();
}

void sub_22AB01C0C()
{
  get_witness_table_18CreateMLComponents36UpdatableSupervisedTemporalEstimatorRzAA0cF0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcdeF0VyxAA0cef2ToD7AdaptorVyAA0cfkeL0Vyqd__G10AnnotationQzGGAaBHPyHCTm();
}

void sub_22AB01C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  OUTLINED_FUNCTION_37_0();
}

void sub_22AB01C54()
{
  OUTLINED_FUNCTION_23_49();
}

void sub_22AB01C78()
{
  get_witness_table_18CreateMLComponents36UpdatableSupervisedTemporalEstimatorRzAA0cF0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcdeF0VyxAA0cef2ToD7AdaptorVyAA0cfkeL0Vyqd__G10AnnotationQzGGAaBHPyHCTm();
}

void get_witness_table_18CreateMLComponents36UpdatableSupervisedTemporalEstimatorRzAA0cF0Rd__11Transformer_5InputQYd__AD_6OutputRTzr__lAA08ComposedcdeF0VyxAA0cef2ToD7AdaptorVyAA0cfkeL0Vyqd__G10AnnotationQzGGAaBHPyHCTm()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, _QWORD);

  OUTLINED_FUNCTION_40_23();
  v1(255, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 24));
  OUTLINED_FUNCTION_149_1();
  OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_86_4();
}

void sub_22AB01CE8()
{
  OUTLINED_FUNCTION_141_1();
  OUTLINED_FUNCTION_34_35();
}

void sub_22AB01D10()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB01D20()
{
  OUTLINED_FUNCTION_23_49();
}

void sub_22AB01D44()
{
  OUTLINED_FUNCTION_40_23();
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_80_5();
  OUTLINED_FUNCTION_34_35();
}

void sub_22AB01D94()
{
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB01DA4()
{
  OUTLINED_FUNCTION_23_49();
}

void sub_22AB01DC8()
{
  OUTLINED_FUNCTION_23_49();
}

uint64_t sub_22AB01DFC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AB01ED8 + 4 * byte_22ABF97E0[v21 - 1]))();
}

void sub_22AB01F4C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_22AB02140()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22AB02164(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&unk_22ABF9830);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void OUTLINED_FUNCTION_23_49()
{
  type metadata accessor for ComposedUpdatableSupervisedTemporalEstimator();
}

void OUTLINED_FUNCTION_31_28()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[6];
  v0[42] = v1;
  v0[7] = v1;
}

void OUTLINED_FUNCTION_33_34()
{
  type metadata accessor for UpdatableTemporalEstimatorToSupervisedAdaptor();
}

void OUTLINED_FUNCTION_34_35()
{
  type metadata accessor for UpdatableTemporalEstimatorToSupervisedAdaptor();
}

uint64_t OUTLINED_FUNCTION_47_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return AnnotatedFeature.init(feature:annotation:)(v0, v4, v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_48_23()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_52_20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 224);
}

uint64_t OUTLINED_FUNCTION_53_23@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v4);
}

uint64_t OUTLINED_FUNCTION_54_17()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_56_18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  *v5 = v3;
  v5[1] = a1;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_61_17@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_64_13()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_83_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, a2, v4);
}

void OUTLINED_FUNCTION_92_4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = v4;
  v2[3] = v1;
  v2[4] = v3;
  v2[5] = a1;
  type metadata accessor for ComposedTemporalTransformer();
}

uint64_t OUTLINED_FUNCTION_96_3()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_99_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_103_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 344) = a1;
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_106_3()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_109_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_116_4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_128_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(255, v4, v5, a4);
}

void OUTLINED_FUNCTION_131_2(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_22AAFE4B8(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_134_2()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_135_2()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_137_1()
{
  return sub_22ABDF0C8();
}

uint64_t OUTLINED_FUNCTION_140_2()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_141_1()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_148_1()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_149_1()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_150_1()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_156_1()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_158_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_159_0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_22AB024D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_0_73();
  return OUTLINED_FUNCTION_1_64((void (*)(char *, uint64_t))sub_22AB02A04, MEMORY[0x24BEE1768], MEMORY[0x24BEE4078], v0, MEMORY[0x24BEE40A8], v1, v2, v4);
}

uint64_t sub_22AB02520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_0_73();
  return OUTLINED_FUNCTION_1_64((void (*)(char *, uint64_t))sub_22AB029DC, MEMORY[0x24BEE1768], MEMORY[0x24BEE4078], v0, MEMORY[0x24BEE40A8], v1, v2, v4);
}

void sub_22AB02574(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_22A9D5E14(a1);
  sub_22A9D5EA0(a1);
  if (__OFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_5;
  }
  v4 = a1 & 1;
  v5 = sub_22A9D5E14(a1 & 1);
  sub_22A9D5F18(v4);
  if (__OFADD__(v5, v6))
LABEL_5:
    __break(1u);
}

uint64_t MultiLabelClassificationMetrics.count(of:)(uint64_t a1, uint64_t a2)
{
  return sub_22AB027B4(a1, a2, (uint64_t (*)(uint64_t))sub_22AB02614);
}

uint64_t sub_22AB02614(char a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 24);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_22AA03A10(a1 & 1), (v4 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v3);
  else
    return 0;
}

uint64_t MultiLabelClassificationMetrics.truePositiveCount(of:)(uint64_t a1, uint64_t a2)
{
  return sub_22AB027B4(a1, a2, (uint64_t (*)(uint64_t))sub_22A9D5E14);
}

uint64_t MultiLabelClassificationMetrics.trueNegativeCount(of:)(uint64_t a1, uint64_t a2)
{
  return sub_22AB027B4(a1, a2, (uint64_t (*)(uint64_t))sub_22AB0266C);
}

uint64_t sub_22AB0266C(int a1)
{
  uint64_t v1;
  uint64_t result;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _BYTE *v16;
  uint64_t v17;
  BOOL v18;

  result = 0;
  v4 = 0;
  v5 = *(_QWORD *)(v1 + 40);
  v6 = 1 << *(_BYTE *)(v5 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v5 + 64;
  v9 = v7 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_20;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v10)
      return result;
    v14 = *(_QWORD *)(v8 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v10)
        return result;
      v14 = *(_QWORD *)(v8 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v10)
          return result;
        v14 = *(_QWORD *)(v8 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_20:
    v16 = (_BYTE *)(*(_QWORD *)(v5 + 48) + 2 * v12);
    if (*v16 != (a1 & 1) && ((v16[1] ^ a1) & 1) != 0)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v12);
      v18 = __OFADD__(result, v17);
      result += v17;
      if (v18)
      {
        __break(1u);
        return result;
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return result;
  v14 = *(_QWORD *)(v8 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v10)
      return result;
    v14 = *(_QWORD *)(v8 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t MultiLabelClassificationMetrics.falsePositiveCount(of:)(uint64_t a1, uint64_t a2)
{
  return sub_22AB027B4(a1, a2, (uint64_t (*)(uint64_t))sub_22A9D5EA0);
}

uint64_t MultiLabelClassificationMetrics.falseNegativeCount(of:)(uint64_t a1, uint64_t a2)
{
  return sub_22AB027B4(a1, a2, (uint64_t (*)(uint64_t))sub_22A9D5F18);
}

uint64_t sub_22AB027B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FEA0);
  MEMORY[0x22E2E2DE8](&v14, a1, v7, v8, v9, *(_QWORD *)(a2 + 24));
  v10 = v15;
  if (!v15)
    return 0;
  v11 = v14;
  v20 = v14;
  v21 = v15;
  v22 = v16 & 1;
  v23 = v17;
  v24 = v18;
  v25 = v19;
  v12 = a3(1);
  sub_22A9D5EB4(v11, v10);
  return v12;
}

_QWORD *MultiLabelClassificationMetrics.f1Score(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0FEA0);
  result = MEMORY[0x22E2E2DE8](&v11, a1, v5, v6, v7, *(_QWORD *)(a2 + 24));
  v9 = v12;
  if (v12)
  {
    v10 = v11;
    v17 = v11;
    v18 = v12;
    v19 = v13 & 1;
    v20 = v14;
    v21 = v15;
    v22 = v16;
    sub_22AB02574(1);
    return (_QWORD *)sub_22A9D5EB4(v10, v9);
  }
  return result;
}

void sub_22AB02960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for ClassificationDistribution(0, a3, a5, a4);
  ClassificationDistribution.subscript.getter(a2, v6, v7, v8);
}

uint64_t sub_22AB029AC(uint64_t result)
{
  _QWORD *v1;
  float v2;

  if ((result & 0x100000000) != 0)
    __break(1u);
  else
    *v1 = *(float *)&result >= v2;
  return result;
}

void sub_22AB029DC(uint64_t a1)
{
  uint64_t *v1;

  sub_22AB02960(a1, v1[6], v1[2], v1[3], v1[4]);
}

uint64_t sub_22AB02A04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22ABDF2C0();
  *a1 = result & 1;
  return result;
}

uint64_t ShuffleRandomly.init<A>(_:)@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[5];

  v14[0] = a2;
  v14[1] = a2;
  swift_getExtendedExistentialTypeMetadata();
  *a5 = sub_22ABDF068();
  v14[3] = a3;
  v14[4] = a4;
  __swift_allocate_boxed_opaque_existential_1(v14);
  a1();
  v12 = type metadata accessor for ShuffleRandomly(0, a2, v10, v11);
  sub_22AA170D4((uint64_t)v14, v12);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t ShuffleRandomly.applied<A>(to:generator:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9[21] = a7;
  v9[22] = a8;
  v9[19] = a4;
  v9[20] = a5;
  v9[17] = a2;
  v9[18] = a3;
  v9[16] = a1;
  v10 = *(_QWORD *)(a6 + 16);
  v9[23] = v10;
  v9[24] = *(_QWORD *)(v10 - 8);
  v11 = swift_task_alloc();
  v12 = *v8;
  v9[25] = v11;
  v9[26] = v12;
  return swift_task_switch();
}

uint64_t sub_22AB02B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ExtendedExistentialTypeMetadata;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t (*v13)(void);

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 192) + 16))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v2);
  *(_QWORD *)(v0 + 120) = v1;
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v2;
  ExtendedExistentialTypeMetadata = swift_getExtendedExistentialTypeMetadata();
  *(_QWORD *)(v0 + 216) = ExtendedExistentialTypeMetadata;
  v4 = sub_22ABDF0F8();
  MEMORY[0x22E2E4D80](MEMORY[0x24BEE12C8], v4);
  v5 = sub_22ABDEF3C();
  *(_QWORD *)(v0 + 224) = v5;
  v6 = sub_22ABDEFFC();
  *(_QWORD *)(v0 + 112) = v6;
  if (v6 == MEMORY[0x22E2E3364](v5, ExtendedExistentialTypeMetadata))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v8 = sub_22ABDF08C();
    sub_22ABDF038();
    if ((v8 & 1) != 0)
    {
      v10 = *(_QWORD *)(v0 + 216);
      v9 = *(_QWORD *)(v0 + 224);
      sub_22A9A1A28(v9 + 40 * v6 + 32, v0 + 16);
      sub_22ABDEAEC();
      MEMORY[0x22E2E3370](v0 + 112, v9, v10);
      swift_bridgeObjectRelease();
      sub_22A9A1880((__int128 *)(v0 + 16), v0 + 56);
      OUTLINED_FUNCTION_3_83((_QWORD *)(v0 + 56));
      v13 = v11;
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 232) = v12;
      OUTLINED_FUNCTION_0_74(v12);
      return OUTLINED_FUNCTION_2_76(v13);
    }
    else
    {
      result = sub_22ABDF800();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_22AB02D3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_22AB02DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _QWORD *v13;
  uint64_t (*v14)(void);

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v6, v3, v5);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v7 = *(_QWORD *)(v0 + 112);
  if (v7 == MEMORY[0x22E2E3364](v1, v2))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v9 = sub_22ABDF08C();
    sub_22ABDF038();
    v11 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 224);
    if ((v9 & 1) != 0)
    {
      sub_22A9A1A28(v10 + 40 * v7 + 32, v0 + 16);
      sub_22ABDEAEC();
      MEMORY[0x22E2E3370](v0 + 112, v10, v11);
      swift_bridgeObjectRelease();
      sub_22A9A1880((__int128 *)(v0 + 16), v0 + 56);
      OUTLINED_FUNCTION_3_83((_QWORD *)(v0 + 56));
      v14 = v12;
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 232) = v13;
      OUTLINED_FUNCTION_0_74(v13);
      return OUTLINED_FUNCTION_2_76(v14);
    }
    else
    {
      result = sub_22ABDF800();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_22AB02F20()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 184));
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AB02F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_22A99DE80;
  return ShuffleRandomly.applied<A>(to:generator:eventHandler:)(a1, a2, a3, a4, a5, a8, a6, a7);
}

uint64_t type metadata accessor for ShuffleRandomly(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShuffleRandomly);
}

uint64_t OUTLINED_FUNCTION_0_74(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *a1 = v3;
  a1[1] = v1;
  result = *(_QWORD *)(v3 + 200);
  *(_QWORD *)(v4 + 16) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_76@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_3_83(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return *(unsigned int *)(*(_QWORD *)(v2 + 24) + 4);
}

id ImageReader.applied(to:eventHandler:)(uint64_t a1)
{
  return static ImageReader.read(url:)(a1);
}

id static ImageReader.read(url:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  unsigned int v8;
  id result;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_22ABDD0E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_22ABDD0C4();
  v7 = (void *)sub_22ABDED2C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_fileExistsAtPath_, v7);

  if (v8)
  {
    sub_22AB03278();
    OUTLINED_FUNCTION_1_65();
    result = sub_22AB032B4((uint64_t)v5);
    if (result)
      return result;
    type metadata accessor for DatasetError();
    sub_22AB03238();
    OUTLINED_FUNCTION_0_75();
    v11 = (_QWORD *)(v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255B114A0) + 48));
    OUTLINED_FUNCTION_1_65();
    *v11 = 0xD000000000000020;
    v11[1] = 0x800000022ABE5C10;
  }
  else
  {
    type metadata accessor for DatasetError();
    sub_22AB03238();
    OUTLINED_FUNCTION_0_75();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v12, a1, v2);
  }
  v13 = swift_storeEnumTagMultiPayload();
  return (id)swift_willThrow(v13);
}

unint64_t sub_22AB03238()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255B11498;
  if (!qword_255B11498)
  {
    v1 = type metadata accessor for DatasetError();
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for DatasetError, v1);
    atomic_store(result, (unint64_t *)&qword_255B11498);
  }
  return result;
}

unint64_t sub_22AB03278()
{
  unint64_t result;

  result = qword_255B17638;
  if (!qword_255B17638)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255B17638);
  }
  return result;
}

id sub_22AB032B4(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_22ABDD070();
  v4 = objc_msgSend(v2, sel_initWithContentsOfURL_, v3);

  v5 = sub_22ABDD0E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t sub_22AB03330(id *a1, uint64_t a2)
{
  uint64_t v2;

  *a1 = ImageReader.applied(to:eventHandler:)(a2);
  return sub_22A9A2EA8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t ImageReader.debugDescription.getter()
{
  return 0x6165526567616D49;
}

uint64_t sub_22AB033B0()
{
  return 0x6165526567616D49;
}

ValueMetadata *type metadata accessor for ImageReader()
{
  return &type metadata for ImageReader;
}

uint64_t OUTLINED_FUNCTION_0_75()
{
  return swift_allocError();
}

void CategoricalImputer.strategy.getter()
{
  OUTLINED_FUNCTION_6_84();
}

void sub_22AB03418(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(a1 + 16))(v1, v2);
  OUTLINED_FUNCTION_33_13();
}

void type metadata accessor for CategoricalImputer.Strategy()
{
  JUMPOUT(0x22E2E4CF0);
}

void CategoricalImputer.strategy.setter()
{
  OUTLINED_FUNCTION_6_84();
}

void sub_22AB03460(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(a1 + 40));
  OUTLINED_FUNCTION_33_13();
}

uint64_t (*CategoricalImputer.strategy.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void CategoricalImputer.init(_:)()
{
  OUTLINED_FUNCTION_6_84();
}

void sub_22AB034A8(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(a1 + 32));
  OUTLINED_FUNCTION_33_13();
}

uint64_t CategoricalImputer.init(constant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  v3 = OUTLINED_FUNCTION_15_57();
  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

void CategoricalImputer.fitted<A>(to:eventHandler:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_6_84();
}

void sub_22AB03578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v19 = MEMORY[0x24BDAC7A8](a1);
  v21 = (char *)&a9 - v20;
  (*(void (**)(char *, uint64_t, double))(v22 + 16))((char *)&a9 - v20, v17, v19);
  if (OUTLINED_FUNCTION_19_47((uint64_t)v21) == 1)
  {
    sub_22AB03614(v16, v13, v12, *(void (**)(uint64_t, char *, uint64_t))(v18 - 120), v9);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v14, v21, v10);
    ImputeTransformer.init(value:)(v14, v10, v15, *(_QWORD *)(v18 - 144), v9);
  }
  OUTLINED_FUNCTION_3();
}

void sub_22AB03614(uint64_t a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X4>, void (*a4)(uint64_t, char *, uint64_t)@<X5>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;

  v51 = a4;
  v57 = a2;
  v53 = a1;
  v48 = a5;
  v6 = a2[2];
  v47 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_87();
  v46 = v7;
  MEMORY[0x24BDAC7A8](v8);
  v55 = (uint64_t)&v43 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v56 = (char *)&v43 - v11;
  v12 = sub_22ABDF5D8();
  v13 = sub_22ABDF5D8();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v43 - v14;
  v52 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v49 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v21 = (char *)&v43 - v20;
  v22 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_87();
  v50 = v24;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v43 - v26;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v43 - v29;
  v45 = v57[5];
  v60 = sub_22ABDE9E4();
  v54 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v30, 1, 1, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v18, v53, a3);
  sub_22ABDEE58();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_9_65();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v12) != 1)
  {
    v52 = 0;
    v33 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    do
    {
      v33(v27, v15, v12);
      if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v6) == 1)
      {
        (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v12);
      }
      else
      {
        v34 = v47;
        v44 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
        v44(v56, v27, v6);
        v51 = *(void (**)(uint64_t, char *, uint64_t))(v34 + 16);
        v51(v55, v56, v6);
        if (*(_QWORD *)(v60 + 16) && (v53 = v60, v35 = sub_22AB27690(v55, v6, v45), (v36 & 1) != 0))
          v37 = *(_QWORD *)(*(_QWORD *)(v53 + 56) + 8 * v35);
        else
          v37 = 0;
        v43 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
        v43(v55, v6);
        v53 = v37 + 1;
        if (__OFADD__(v37, 1))
        {
          __break(1u);
          goto LABEL_20;
        }
        v51(v46, v56, v6);
        v58 = v53;
        v59 = 0;
        sub_22ABDEB28();
        sub_22ABDEB64();
        if (v52 >= v53)
        {
          v43((uint64_t)v56, v6);
        }
        else
        {
          v38 = v54;
          (*(void (**)(char *, uint64_t))(v22 + 8))(v54, v12);
          v44(v38, v56, v6);
          v39 = OUTLINED_FUNCTION_15_57();
          __swift_storeEnumTagSinglePayload(v39, v40, v41, v42);
          v52 = v53;
        }
      }
      OUTLINED_FUNCTION_9_65();
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v12) != 1);
  }
  (*(void (**)(char *, uint64_t))(v49 + 8))(v21, AssociatedTypeWitness);
  if ((sub_22AA2F904() & 1) == 0)
    sub_22AA2F98C(0xD000000000000012, 0x800000022ABF9960);
  v31 = v50;
  v32 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v50, v54, v12);
  if (__swift_getEnumTagSinglePayload(v31, 1, v6) == 1)
  {
LABEL_20:
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v32, v12);
    ImputeTransformer.init(value:)(v31, v6, v57[3], v57[4], v48);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3();
  }
}

void sub_22AB03AB8(uint64_t a1, uint64_t a2)
{
  CategoricalImputer.fitted<A>(to:eventHandler:)(a2);
}

uint64_t sub_22AB03AE4()
{
  uint64_t v0;

  return sub_22A9A2EA8(*(uint64_t (**)(void))(v0 + 8));
}

void CategoricalImputer.debugDescription.getter()
{
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  type metadata accessor for CategoricalImputer.Strategy();
}

uint64_t sub_22AB03B6C()
{
  uint64_t v1;

  sub_22ABDFF2C();
  sub_22ABDEDC8();
  return v1;
}

void sub_22AB03BA4()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB03BB8()
{
  type metadata accessor for CategoricalImputer.Strategy();
}

void type metadata accessor for CategoricalImputer()
{
  JUMPOUT(0x22E2E4CF0);
}

uint64_t sub_22AB03C58()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_22AB03CB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  size_t v6;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_DWORD *)(v5 + 84))
    v6 = *(_QWORD *)(v5 + 64);
  else
    v6 = *(_QWORD *)(v5 + 64) + 1;
  if (*(_DWORD *)(v5 + 80) > 7u || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v6 > 0x18)
  {
    *a1 = *a2;
    swift_retain();
  }
  else if (OUTLINED_FUNCTION_19_47((uint64_t)a2))
  {
    memcpy(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_5_64(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    OUTLINED_FUNCTION_1_66();
  }
  OUTLINED_FUNCTION_38();
}

void sub_22AB03D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (OUTLINED_FUNCTION_12_59(a1, a2, a3))
  {
    OUTLINED_FUNCTION_7_73(v3);
  }
  else
  {
    OUTLINED_FUNCTION_5_64(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    OUTLINED_FUNCTION_1_66();
  }
  OUTLINED_FUNCTION_21();
}

void sub_22AB03D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;

  v5 = OUTLINED_FUNCTION_2_77(a1, a2, a3);
  if (!v3)
  {
    if (!v5)
    {
      OUTLINED_FUNCTION_0_4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24));
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_11_7();
    goto LABEL_6;
  }
  if (v5)
  {
LABEL_6:
    OUTLINED_FUNCTION_4_69();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_0_4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  OUTLINED_FUNCTION_11_63();
LABEL_7:
  OUTLINED_FUNCTION_38();
}

void sub_22AB03DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (OUTLINED_FUNCTION_12_59(a1, a2, a3))
  {
    OUTLINED_FUNCTION_7_73(v3);
  }
  else
  {
    OUTLINED_FUNCTION_5_64(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    OUTLINED_FUNCTION_1_66();
  }
  OUTLINED_FUNCTION_21();
}

void sub_22AB03E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;

  v5 = OUTLINED_FUNCTION_2_77(a1, a2, a3);
  if (!v3)
  {
    if (!v5)
    {
      OUTLINED_FUNCTION_0_4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40));
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_11_7();
    goto LABEL_6;
  }
  if (v5)
  {
LABEL_6:
    OUTLINED_FUNCTION_4_69();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_0_4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  OUTLINED_FUNCTION_11_63();
LABEL_7:
  OUTLINED_FUNCTION_38();
}

uint64_t sub_22AB03E7C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = 8 * v8;
    if (v8 > 3)
      goto LABEL_8;
    v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v8);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v8);
        if (!*(_BYTE *)(a1 + v8))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v8 > 3)
          v13 = 0;
        if ((_DWORD)v8)
        {
          if (v8 > 3)
            LODWORD(v8) = 4;
          __asm { BR              X12 }
        }
        return v7 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v8);
      if (*(_WORD *)(a1 + v8))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v6 < 2)
    return 0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v6, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

void sub_22AB03FA8(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if (v11)
      {
        v17 = v16 & ~(-1 << v12);
        OUTLINED_FUNCTION_104();
        if (v11 == 3)
        {
          *(_WORD *)a1 = v17;
          *(_BYTE *)(a1 + 2) = BYTE2(v17);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      OUTLINED_FUNCTION_104();
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_22AB0412C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_22AB04134()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_22AB04158(uint64_t a1, uint64_t a2)
{
  return __swift_getEnumTagSinglePayload(a1, 1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_22AB04164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, *(_QWORD *)(a3 + 16));
}

uint64_t OUTLINED_FUNCTION_2_77(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a3 + 16);
  __swift_getEnumTagSinglePayload(a1, 1, v4);
  return __swift_getEnumTagSinglePayload(a2, 1, v4);
}

void *OUTLINED_FUNCTION_4_69()
{
  void *v0;
  const void *v1;
  uint64_t v2;
  size_t v3;

  if (*(_DWORD *)(v2 + 84))
    v3 = *(_QWORD *)(v2 + 64);
  else
    v3 = *(_QWORD *)(v2 + 64) + 1;
  return memcpy(v0, v1, v3);
}

uint64_t OUTLINED_FUNCTION_5_64@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v3, v2);
}

void OUTLINED_FUNCTION_6_84()
{
  type metadata accessor for CategoricalImputer.Strategy();
}

void *OUTLINED_FUNCTION_7_73@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  const void *v2;
  int v3;
  size_t v4;
  size_t v5;

  v3 = *(_DWORD *)(a1 + 84);
  v4 = *(_QWORD *)(a1 + 64);
  if (v3)
    v5 = v4;
  else
    v5 = v4 + 1;
  return memcpy(v1, v2, v5);
}

uint64_t OUTLINED_FUNCTION_9_65()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_11_63()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_12_59(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a2, 1, *(_QWORD *)(a3 + 16));
}

uint64_t OUTLINED_FUNCTION_15_57()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_47(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t HumanHandPoseExtractor.applied(to:eventHandler:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_22AB042A0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = (void *)v0[3];
  type metadata accessor for VNImageOption(0);
  sub_22A9BED8C(&qword_255B0D920, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_22ABE88B8);
  v2 = v1;
  sub_22ABDEAC8();
  v3 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
  v4 = sub_22A9BEBE8(v2);
  v0[4] = v4;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF9B88]), sel_init);
  v0[5] = v5;
  v6 = OUTLINED_FUNCTION_3_12();
  v0[6] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = OUTLINED_FUNCTION_3_12();
  v0[7] = v7;
  *(_QWORD *)(v7 + 16) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  v0[8] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B0EEB8);
  *v8 = v0;
  v8[1] = sub_22AB043F0;
  return sub_22ABDFF74();
}

uint64_t sub_22AB043F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return OUTLINED_FUNCTION_3_0();
}

uint64_t sub_22AB0445C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AB044B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_22AB044CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OUTLINED_FUNCTION_3_12();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255B0EEB8);
  *v2 = v0;
  v2[1] = sub_22AB0456C;
  return sub_22ABE0118();
}

uint64_t sub_22AB0456C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return OUTLINED_FUNCTION_3_0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_22AB045D8(uint64_t a1, _QWORD *a2, void *a3)
{
  _QWORD *v3;

  v3 = sub_22AB04634(a2, a3);
  sub_22ABC56E0(v3, 0);
  sub_22A9BED14(v3, 0);
}

_QWORD *sub_22AB04634(_QWORD *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  unsigned int v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  id v33[2];

  v33[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_22ABDF1DC();
  if (v2)
    return a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_2540E8788);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22ABEA720;
  *(_QWORD *)(v5 + 32) = a1;
  sub_22ABDF014();
  sub_22A9BEDCC(0, &qword_255B0EEE8);
  v6 = a1;
  a1 = (_QWORD *)sub_22ABDEFE4();
  swift_bridgeObjectRelease();
  v33[0] = 0;
  v7 = objc_msgSend(a2, sel_performRequests_error_, a1, v33);

  if (!v7)
  {
    v9 = v33[0];
    sub_22ABDD004();

LABEL_7:
    swift_willThrow(v10);
    return a1;
  }
  v8 = v33[0];
  v31 = sub_22AB04EDC(v6);
  if (!v31)
  {
    sub_22ABDF17C();
    sub_22A9BED8C(&qword_255B0EEF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    OUTLINED_FUNCTION_2_78();
    v10 = sub_22ABDE9FC();
    goto LABEL_7;
  }
  sub_22ABDF1DC();
  if (v31 >> 62)
    goto LABEL_27;
  v12 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v12)
  {
    v33[0] = (id)MEMORY[0x24BEE4AF8];
    sub_22AB4D56C();
    if (v12 < 0)
      __break(1u);
    v13 = 0;
    a1 = v33[0];
    while (v12 != v13)
    {
      if ((v31 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x22E2E3A9C](v13, v31);
      else
        v14 = *(id *)(v31 + 8 * v13 + 32);
      v15 = v14;
      v16 = (void *)sub_22ABDED2C();
      v32 = 0;
      v17 = objc_msgSend(v15, sel_recognizedPointsForGroupKey_error_, v16, &v32);

      v18 = v32;
      if (!v17)
      {
        v28 = v32;
        sub_22ABDD004();

        swift_willThrow(v29);
        OUTLINED_FUNCTION_1_8();
        swift_release();

        return a1;
      }
      type metadata accessor for VNRecognizedPointKey(0);
      sub_22A9BEDCC(0, (unint64_t *)&qword_255B0EEF8);
      sub_22A9BED8C((unint64_t *)&qword_255B0D910, (uint64_t (*)(uint64_t))type metadata accessor for VNRecognizedPointKey, (uint64_t)&unk_22ABE8874);
      v19 = sub_22ABDEAB0();
      v20 = v18;

      sub_22AAD68C8(v19);
      v22 = v21;
      OUTLINED_FUNCTION_2_1();
      if (*(_QWORD *)(v22 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255B0EF00);
        v23 = (void *)sub_22ABDFB90();
      }
      else
      {
        v23 = (void *)MEMORY[0x24BEE4B00];
      }
      v32 = v23;
      v24 = sub_22ABDEAEC();
      sub_22AB04BD4(v24, 1, &v32);

      swift_bridgeObjectRelease();
      v25 = v32;
      v33[0] = a1;
      v26 = a1[2];
      if (v26 >= a1[3] >> 1)
      {
        sub_22AB4D56C();
        a1 = v33[0];
      }
      ++v13;
      a1[2] = v26 + 1;
      v27 = &a1[3 * v26];
      v27[4] = v25;
      v27[5] = 0x6C6C414F50494E56;
      v27[6] = 0xE800000000000000;
      if (v12 == v13)
      {
        OUTLINED_FUNCTION_1_8();
        return a1;
      }
    }
    __break(1u);
LABEL_27:
    sub_22ABDEAEC();
    v30 = sub_22ABDFB60();
    OUTLINED_FUNCTION_2_1();
    if (!v30)
      break;
    sub_22ABDEAEC();
    v12 = sub_22ABDFB60();
    OUTLINED_FUNCTION_2_1();
  }
  OUTLINED_FUNCTION_1_8();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_22AB04AD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *a2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_22A9BEB54;
  return HumanHandPoseExtractor.applied(to:eventHandler:)(v3);
}

unint64_t HumanHandPoseExtractor.debugDescription.getter()
{
  return 0xD000000000000016;
}

unint64_t sub_22AB04B3C()
{
  HumanHandPoseExtractor.debugDescription.getter();
  return 0xD000000000000016;
}

uint64_t sub_22AB04B58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_22A9B24D4;
  return sub_22AB044B0(a1, v5, v4);
}

ValueMetadata *type metadata accessor for HumanHandPoseExtractor()
{
  return &type metadata for HumanHandPoseExtractor;
}

void sub_22AB04BCC(uint64_t a1)
{
  uint64_t v1;

  sub_22AB045D8(a1, *(_QWORD **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_22AB04BD4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = a1;
  v5 = *(_QWORD *)(a1 + 16);
  sub_22ABDEAEC();
  v32 = v5;
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v6 = 0;
  v7 = 0;
  v31 = v4;
  while (1)
  {
    if (v7 >= *(_QWORD *)(v4 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_22ABE0190();
      __break(1u);
      goto LABEL_24;
    }
    v8 = *(_DWORD *)(v4 + v6 + 80);
    v10 = *(_QWORD *)(v4 + v6 + 64);
    v9 = *(_QWORD *)(v4 + v6 + 72);
    v11 = *(_QWORD *)(v4 + v6 + 56);
    v36 = *(_QWORD *)(v4 + v6 + 48);
    v13 = *(_QWORD *)(v4 + v6 + 32);
    v12 = *(_QWORD *)(v4 + v6 + 40);
    sub_22ABDEAEC();
    sub_22ABDEAEC();
    if (!v12)
      goto LABEL_18;
    v33 = v10;
    v34 = v9;
    v35 = v11;
    v14 = (_QWORD *)*a3;
    v16 = OUTLINED_FUNCTION_5_65();
    v17 = v14[2];
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      goto LABEL_21;
    v20 = v15;
    if (v14[3] < v19)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255B10D18);
      sub_22ABDFA70();
      if ((v20 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v23 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v24 = (_QWORD *)(v23[6] + 16 * v16);
    *v24 = v13;
    v24[1] = v12;
    v25 = v23[7] + 40 * v16;
    *(_QWORD *)v25 = v36;
    *(_QWORD *)(v25 + 8) = v35;
    *(_QWORD *)(v25 + 16) = v33;
    *(_QWORD *)(v25 + 24) = v34;
    *(_DWORD *)(v25 + 32) = v8;
    v26 = v23[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_22;
    ++v7;
    v23[2] = v28;
    v6 += 56;
    a2 = 1;
    v4 = v31;
    if (v32 == v7)
      goto LABEL_18;
  }
  sub_22AAD871C(v19, a2 & 1);
  v21 = OUTLINED_FUNCTION_5_65();
  if ((v20 & 1) != (v22 & 1))
    goto LABEL_23;
  v16 = v21;
  if ((v20 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v29 = (void *)OUTLINED_FUNCTION_2_78();
  swift_willThrow(v29);
  v30 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B15CA0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  sub_22ABDFA34();
  sub_22ABDEDC8();
  sub_22ABDFADC();
  __break(1u);
}

uint64_t sub_22AB04EDC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_results);
  if (!v1)
    return 0;
  v2 = v1;
  sub_22A9BEDCC(0, &qword_255B177E0);
  v3 = sub_22ABDEFF0();

  return v3;
}

uint64_t OUTLINED_FUNCTION_2_78()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_5_65()
{
  uint64_t v0;
  uint64_t v1;

  return sub_22AA03684(v1, v0);
}

uint64_t EstimatorToTemporalAdaptor.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t (*TransformerToTemporalAdaptor.base.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TransformerToTemporalAdaptor.applied<A>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8[7] = a7;
  v8[8] = v7;
  v8[5] = a4;
  v8[6] = a6;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  v8[9] = *(_QWORD *)(a6 - 8);
  v8[10] = OUTLINED_FUNCTION_0_0();
  v8[11] = *(_QWORD *)(a5 + 24);
  v11 = *(_QWORD *)(a5 + 16);
  v8[12] = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[13] = AssociatedTypeWitness;
  v8[14] = type metadata accessor for TemporalFeature(255, AssociatedTypeWitness, v13, v14);
  v8[15] = *(_QWORD *)(a7 + 8);
  v15 = sub_22ABDFDA0();
  v8[16] = v15;
  v8[17] = *(_QWORD *)(v15 - 8);
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  v16 = *(_QWORD *)(v11 - 8);
  v8[20] = v16;
  v8[21] = *(_QWORD *)(v16 + 64);
  v8[22] = OUTLINED_FUNCTION_38_0();
  v8[23] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AB050AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  unint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v0[22];
  v1 = v0[23];
  v3 = v0[20];
  v13 = v0[21];
  v18 = v0[17];
  v19 = v0[18];
  v17 = v0[19];
  v4 = v0[12];
  v5 = v0[10];
  v14 = v0[11];
  v6 = v0[9];
  v7 = v0[6];
  v20 = v0[7];
  v8 = v0[3];
  v15 = v0[4];
  v16 = v0[5];
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v9(v1, v0[8], v4);
  OUTLINED_FUNCTION_38_8(v5, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  v9(v2, v1, v4);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = v4;
  *((_QWORD *)v11 + 3) = v7;
  *((_QWORD *)v11 + 4) = v14;
  *((_QWORD *)v11 + 5) = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v11[v10], v2, v4);
  v12 = (uint64_t *)&v11[(v13 + v10 + 7) & 0xFFFFFFFFFFFFFFF8];
  *v12 = v15;
  v12[1] = v16;
  sub_22A9A9840(v15);
  sub_22ABDF20C();
  swift_release();
  OUTLINED_FUNCTION_27_8(v19, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  (*(void (**)(uint64_t))(v20 + 24))(v7);
  OUTLINED_FUNCTION_106();
}

uint64_t sub_22AB0524C(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  AnyTemporalSequence.init<A>(_:count:)(v3, v2, v1, *(_QWORD *)(v9 - 88), v4, a1, *(_QWORD *)(v9 - 96));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v4);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v7);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_33_0();
  v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v10();
}

uint64_t sub_22AB052C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;

  v8[12] = a6;
  v8[13] = a8;
  v8[10] = a4;
  v8[11] = a5;
  v8[8] = a2;
  v8[9] = a3;
  v8[7] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[14] = AssociatedTypeWitness;
  v8[15] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[16] = swift_task_alloc();
  v8[17] = swift_getAssociatedTypeWitness();
  v8[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22AB05394()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  OUTLINED_FUNCTION_97();
  v1 = v0[16];
  v4 = type metadata accessor for TemporalFeature(0, v0[14], v2, v3);
  TemporalFeature.id.getter((uint64_t)(v0 + 2));
  TemporalFeature.feature.getter(v4, v1);
  v5 = (_QWORD *)OUTLINED_FUNCTION_60_18();
  v0[19] = v5;
  *v5 = v0;
  v5[1] = sub_22AB05428;
  return v7(v0[18], v0[16], v0[10], v0[11], v0[12], v0[13]);
}

uint64_t sub_22AB05428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_97();
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

uint64_t sub_22AB054A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t (*v5)(void);

  TemporalFeature.init(id:feature:)((uint64_t)(v4 + 2), v4[18], v4[17], a4, v4[7]);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_3_1(v5);
}

uint64_t sub_22AB054E8()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_1_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AB0551C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22A9ADC14;
  return TransformerToTemporalAdaptor.applied<A>(to:eventHandler:)(a1, a2, a3, a4, a7, a5, a6);
}

uint64_t EstimatorToTemporalAdaptor.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t (*EstimatorToTemporalAdaptor.base.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t EstimatorToTemporalAdaptor.fitted<A>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_75_6();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v1[9] = v8;
  v1[10] = v0;
  v1[7] = v9;
  v1[8] = v4;
  v1[5] = v10;
  v1[6] = v11;
  v1[4] = v12;
  v13 = *(_QWORD *)(v6 + 16);
  v1[11] = v13;
  v1[12] = *(_QWORD *)(v13 - 8);
  v1[13] = OUTLINED_FUNCTION_0_0();
  v1[14] = *(_QWORD *)(v7 + 24);
  v14 = OUTLINED_FUNCTION_145_1();
  v1[15] = v14;
  v1[16] = *(_QWORD *)(v14 - 8);
  v1[17] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_121_3();
  v1[18] = OUTLINED_FUNCTION_168();
  v15 = OUTLINED_FUNCTION_0_0();
  v1[19] = v15;
  v19 = OUTLINED_FUNCTION_71_15(v15, v16, v17, v18);
  v1[20] = v19;
  v1[21] = *(_QWORD *)(v19 - 8);
  v1[22] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v1[23] = OUTLINED_FUNCTION_0_0();
  v20 = OUTLINED_FUNCTION_42_20();
  v1[24] = v20;
  v1[25] = *(_QWORD *)(v20 - 8);
  v1[26] = OUTLINED_FUNCTION_0_0();
  v1[27] = *(_QWORD *)(v3 + 8);
  v21 = OUTLINED_FUNCTION_65_2();
  v1[28] = v21;
  v1[29] = *(_QWORD *)(v21 - 8);
  v1[30] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v1[31] = OUTLINED_FUNCTION_0_0();
  v1[32] = *(_QWORD *)(v5 - 8);
  v1[33] = OUTLINED_FUNCTION_0_0();
  v22 = OUTLINED_FUNCTION_42_20();
  v1[34] = v22;
  v1[35] = *(_QWORD *)(v22 - 8);
  v1[36] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_37_15();
}

uint64_t sub_22AB0577C()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_137_2();
  v1 = v0[32];
  v0[2] = OUTLINED_FUNCTION_156_2();
  OUTLINED_FUNCTION_15_58(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_88_6();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v2)
  {
    OUTLINED_FUNCTION_30_0(v0[35]);
    OUTLINED_FUNCTION_4_70();
    v3 = v0[2];
    v0[39] = v3;
    v0[40] = OUTLINED_FUNCTION_38_35(v3);
    OUTLINED_FUNCTION_13_66();
    OUTLINED_FUNCTION_106();
  }
  OUTLINED_FUNCTION_43_19();
  OUTLINED_FUNCTION_40_24();
  OUTLINED_FUNCTION_198();
  swift_getAssociatedConformanceWitness();
  v4 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_53_24(v4);
  return OUTLINED_FUNCTION_7_74();
}

uint64_t sub_22AB058B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_132_2();
  if (v0)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AB058F4()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_75_6();
  v1 = v0[23];
  OUTLINED_FUNCTION_106_0(v1, 1, v0[20]);
  if (v2)
  {
    OUTLINED_FUNCTION_30_0(v0[29]);
    OUTLINED_FUNCTION_88_6();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_49_10();
    OUTLINED_FUNCTION_53_12();
    if (v2)
    {
      OUTLINED_FUNCTION_30_0(v0[35]);
      OUTLINED_FUNCTION_4_70();
      v3 = v0[2];
      v0[39] = v3;
      v0[3] = v3;
      v0[40] = OUTLINED_FUNCTION_60_18();
      OUTLINED_FUNCTION_13_66();
      OUTLINED_FUNCTION_106();
    }
    OUTLINED_FUNCTION_43_19();
    OUTLINED_FUNCTION_40_24();
  }
  else
  {
    v5 = v0[21];
    v4 = v0[22];
    OUTLINED_FUNCTION_38_8(v4, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    OUTLINED_FUNCTION_146_2();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_151_0();
    OUTLINED_FUNCTION_35_6(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
  OUTLINED_FUNCTION_198();
  swift_getAssociatedConformanceWitness();
  v6 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_53_24(v6);
  return OUTLINED_FUNCTION_7_74();
}

uint64_t sub_22AB05A5C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_112_4();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

uint64_t sub_22AB05AA8()
{
  _QWORD *v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_68();
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[16] + 32))(v0[4], v0[17], v0[15]);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_136_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_2_6(v1);
}

uint64_t sub_22AB05B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_68();
  v2 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 288);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 232));
  OUTLINED_FUNCTION_35_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_105_5();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AB05BA0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_105_5();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

void EstimatorToTemporalAdaptor.encode(_:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_183(v1, v2);
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_91_7();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_67_14();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_23_50(v5, v10);
  OUTLINED_FUNCTION_160_1();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_31_29(AssociatedConformanceWitness, v7, v8, v9);
  OUTLINED_FUNCTION_34_36(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 32));
  OUTLINED_FUNCTION_85_11();
  OUTLINED_FUNCTION_108_4();
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

void EstimatorToTemporalAdaptor.decode(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_155_1(v3);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_101_6();
  OUTLINED_FUNCTION_187();
  OUTLINED_FUNCTION_92_5();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_148_2();
  OUTLINED_FUNCTION_179();
  if (!v1)
    OUTLINED_FUNCTION_49(v6, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AB05D04()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ABF58;
  return EstimatorToTemporalAdaptor.fitted<A>(to:eventHandler:)();
}

void sub_22AB05DAC()
{
  EstimatorToTemporalAdaptor.encode(_:to:)();
}

void sub_22AB05DC0()
{
  EstimatorToTemporalAdaptor.decode(from:)();
}

uint64_t (*UpdatableEstimatorToTemporalAdaptor.base.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UpdatableEstimatorToTemporalAdaptor.makeTransformer()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22AB083F4(a1, a2);
}

uint64_t UpdatableEstimatorToTemporalAdaptor.fitted<A>(to:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_75_6();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v1[9] = v8;
  v1[10] = v0;
  v1[7] = v9;
  v1[8] = v4;
  v1[5] = v10;
  v1[6] = v11;
  v1[4] = v12;
  v13 = *(_QWORD *)(v6 + 16);
  v1[11] = v13;
  v1[12] = *(_QWORD *)(v13 - 8);
  v1[13] = OUTLINED_FUNCTION_0_0();
  v1[14] = *(_QWORD *)(*(_QWORD *)(v7 + 24) + 8);
  v14 = OUTLINED_FUNCTION_145_1();
  v1[15] = v14;
  v1[16] = *(_QWORD *)(v14 - 8);
  v1[17] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_121_3();
  v1[18] = OUTLINED_FUNCTION_168();
  v15 = OUTLINED_FUNCTION_0_0();
  v1[19] = v15;
  v19 = OUTLINED_FUNCTION_71_15(v15, v16, v17, v18);
  v1[20] = v19;
  v1[21] = *(_QWORD *)(v19 - 8);
  v1[22] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v1[23] = OUTLINED_FUNCTION_0_0();
  v20 = OUTLINED_FUNCTION_42_20();
  v1[24] = v20;
  v1[25] = *(_QWORD *)(v20 - 8);
  v1[26] = OUTLINED_FUNCTION_0_0();
  v1[27] = *(_QWORD *)(v3 + 8);
  v21 = OUTLINED_FUNCTION_65_2();
  v1[28] = v21;
  v1[29] = *(_QWORD *)(v21 - 8);
  v1[30] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v1[31] = OUTLINED_FUNCTION_0_0();
  v1[32] = *(_QWORD *)(v5 - 8);
  v1[33] = OUTLINED_FUNCTION_0_0();
  v22 = OUTLINED_FUNCTION_42_20();
  v1[34] = v22;
  v1[35] = *(_QWORD *)(v22 - 8);
  v1[36] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_37_15();
}

uint64_t sub_22AB05FA0()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_137_2();
  v1 = v0[32];
  v0[2] = OUTLINED_FUNCTION_156_2();
  OUTLINED_FUNCTION_15_58(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_88_6();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v2)
  {
    OUTLINED_FUNCTION_30_0(v0[35]);
    OUTLINED_FUNCTION_4_70();
    v3 = v0[2];
    v0[39] = v3;
    v0[40] = OUTLINED_FUNCTION_38_35(v3);
    OUTLINED_FUNCTION_13_66();
    OUTLINED_FUNCTION_106();
  }
  OUTLINED_FUNCTION_43_19();
  OUTLINED_FUNCTION_40_24();
  OUTLINED_FUNCTION_198();
  swift_getAssociatedConformanceWitness();
  v4 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_53_24(v4);
  return OUTLINED_FUNCTION_7_74();
}

uint64_t sub_22AB060D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_132_2();
  if (v0)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AB06118()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_75_6();
  v1 = v0[23];
  OUTLINED_FUNCTION_106_0(v1, 1, v0[20]);
  if (v2)
  {
    OUTLINED_FUNCTION_30_0(v0[29]);
    OUTLINED_FUNCTION_88_6();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_49_10();
    OUTLINED_FUNCTION_53_12();
    if (v2)
    {
      OUTLINED_FUNCTION_30_0(v0[35]);
      OUTLINED_FUNCTION_4_70();
      v3 = v0[2];
      v0[39] = v3;
      v0[3] = v3;
      v0[40] = OUTLINED_FUNCTION_60_18();
      OUTLINED_FUNCTION_13_66();
      OUTLINED_FUNCTION_106();
    }
    OUTLINED_FUNCTION_43_19();
    OUTLINED_FUNCTION_40_24();
  }
  else
  {
    v5 = v0[21];
    v4 = v0[22];
    OUTLINED_FUNCTION_38_8(v4, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    OUTLINED_FUNCTION_146_2();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_151_0();
    OUTLINED_FUNCTION_35_6(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
  OUTLINED_FUNCTION_198();
  swift_getAssociatedConformanceWitness();
  v6 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_53_24(v6);
  return OUTLINED_FUNCTION_7_74();
}

uint64_t sub_22AB06280()
{
  uint64_t v0;

  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_112_4();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

uint64_t UpdatableEstimatorToTemporalAdaptor.update<A>(_:with:eventHandler:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_75_6();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v1[9] = v8;
  v1[10] = v0;
  v1[7] = v9;
  v1[8] = v4;
  v1[5] = v10;
  v1[6] = v11;
  v1[4] = v12;
  v13 = *(_QWORD *)(v6 + 16);
  v1[11] = v13;
  v1[12] = *(_QWORD *)(v13 - 8);
  v1[13] = OUTLINED_FUNCTION_0_0();
  v1[14] = *(_QWORD *)(v7 + 24);
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_121_3();
  v1[15] = OUTLINED_FUNCTION_168();
  v14 = OUTLINED_FUNCTION_0_0();
  v1[16] = v14;
  v18 = OUTLINED_FUNCTION_71_15(v14, v15, v16, v17);
  v1[17] = v18;
  v1[18] = *(_QWORD *)(v18 - 8);
  v1[19] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v1[20] = OUTLINED_FUNCTION_0_0();
  v19 = OUTLINED_FUNCTION_42_20();
  v1[21] = v19;
  v1[22] = *(_QWORD *)(v19 - 8);
  v1[23] = OUTLINED_FUNCTION_0_0();
  v1[24] = *(_QWORD *)(v3 + 8);
  v20 = OUTLINED_FUNCTION_65_2();
  v1[25] = v20;
  v1[26] = *(_QWORD *)(v20 - 8);
  v1[27] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v1[28] = OUTLINED_FUNCTION_0_0();
  v1[29] = *(_QWORD *)(v5 - 8);
  v1[30] = OUTLINED_FUNCTION_0_0();
  v21 = OUTLINED_FUNCTION_42_20();
  v1[31] = v21;
  v1[32] = *(_QWORD *)(v21 - 8);
  v1[33] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_37_15();
}

uint64_t sub_22AB06458()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_137_2();
  v1 = v0[29];
  v0[2] = OUTLINED_FUNCTION_156_2();
  OUTLINED_FUNCTION_15_58(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_189();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v2)
  {
    OUTLINED_FUNCTION_30_0(v0[32]);
    OUTLINED_FUNCTION_4_70();
    v3 = v0[2];
    v0[36] = v3;
    v0[37] = OUTLINED_FUNCTION_38_35(v3);
    OUTLINED_FUNCTION_13_66();
    OUTLINED_FUNCTION_106();
  }
  OUTLINED_FUNCTION_27_8(v0[23], v0[28], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[22] + 32));
  OUTLINED_FUNCTION_40_24();
  swift_getAssociatedConformanceWitness();
  v4 = (_QWORD *)swift_task_alloc();
  v0[34] = v4;
  *v4 = v0;
  v4[1] = sub_22AB065B4;
  OUTLINED_FUNCTION_54_18();
  return OUTLINED_FUNCTION_7_74();
}

uint64_t sub_22AB065B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AB06614()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_75_6();
  v1 = v0[20];
  OUTLINED_FUNCTION_106_0(v1, 1, v0[17]);
  if (v2)
  {
    OUTLINED_FUNCTION_30_0(v0[26]);
    OUTLINED_FUNCTION_189();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_49_10();
    OUTLINED_FUNCTION_53_12();
    if (v2)
    {
      OUTLINED_FUNCTION_30_0(v0[32]);
      OUTLINED_FUNCTION_4_70();
      v3 = v0[2];
      v0[36] = v3;
      v0[3] = v3;
      v0[37] = OUTLINED_FUNCTION_60_18();
      OUTLINED_FUNCTION_13_66();
      OUTLINED_FUNCTION_106();
    }
    OUTLINED_FUNCTION_27_8(v0[23], v0[28], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[22] + 32));
    OUTLINED_FUNCTION_40_24();
  }
  else
  {
    v5 = v0[18];
    v4 = v0[19];
    OUTLINED_FUNCTION_38_8(v4, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    OUTLINED_FUNCTION_146_2();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_151_0();
    OUTLINED_FUNCTION_35_6(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
  swift_getAssociatedConformanceWitness();
  v6 = (_QWORD *)swift_task_alloc();
  v0[34] = v6;
  *v6 = v0;
  v6[1] = sub_22AB065B4;
  OUTLINED_FUNCTION_54_18();
  return OUTLINED_FUNCTION_7_74();
}

uint64_t sub_22AB067B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_97();
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

uint64_t sub_22AB06824()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_19_5();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_3_1(v0);
}

uint64_t sub_22AB06898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_68();
  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 208));
  OUTLINED_FUNCTION_35_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_128_4();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AB06904()
{
  uint64_t v0;

  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_128_4();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  return OUTLINED_FUNCTION_2_6(*(uint64_t (**)(void))(v0 + 8));
}

void UpdatableEstimatorToTemporalAdaptor.encode(_:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_165_0(v1, v2);
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_91_7();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_67_14();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_23_50(v5, v10);
  OUTLINED_FUNCTION_160_1();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_31_29(AssociatedConformanceWitness, v7, v8, v9);
  OUTLINED_FUNCTION_34_36(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 32));
  OUTLINED_FUNCTION_85_11();
  OUTLINED_FUNCTION_108_4();
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

void UpdatableEstimatorToTemporalAdaptor.decode(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_86_9(v1);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_154_1();
  OUTLINED_FUNCTION_186();
  OUTLINED_FUNCTION_92_5();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_66_18();
  OUTLINED_FUNCTION_83_14();
  OUTLINED_FUNCTION_124_2();
  if (!v0)
    OUTLINED_FUNCTION_122_4();
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

void UpdatableEstimatorToTemporalAdaptor.encodeWithOptimizer(_:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  OUTLINED_FUNCTION_12();
  v18[0] = v1;
  v18[1] = v2;
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)v18 - v8;
  v10 = *(_QWORD *)(v4 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v14, v0, v4, v12);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = type metadata accessor for TransformerToTemporalAdaptor(0, AssociatedTypeWitness, AssociatedConformanceWitness, v16);
  (*(void (**)(char *, _QWORD))(*(_QWORD *)(*(_QWORD *)(v17 + 16) - 8) + 16))(v9, v18[0]);
  OUTLINED_FUNCTION_34_36(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 32));
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v4);
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

void UpdatableEstimatorToTemporalAdaptor.decodeWithOptimizer(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_86_9(v1);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_101_6();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_92_5();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_66_18();
  OUTLINED_FUNCTION_83_14();
  OUTLINED_FUNCTION_124_2();
  if (!v0)
    OUTLINED_FUNCTION_122_4();
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AB06C10()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  return UpdatableEstimatorToTemporalAdaptor.update<A>(_:with:eventHandler:)();
}

void sub_22AB06CB4()
{
  UpdatableEstimatorToTemporalAdaptor.encodeWithOptimizer(_:to:)();
}

void sub_22AB06CC8()
{
  UpdatableEstimatorToTemporalAdaptor.decodeWithOptimizer(from:)();
}

uint64_t sub_22AB06CDC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ADC14;
  return UpdatableEstimatorToTemporalAdaptor.fitted<A>(to:eventHandler:)();
}

void sub_22AB06D84()
{
  UpdatableEstimatorToTemporalAdaptor.encode(_:to:)();
}

void sub_22AB06D98()
{
  UpdatableEstimatorToTemporalAdaptor.decode(from:)();
}

uint64_t (*SupervisedEstimatorToTemporalAdaptor.base.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SupervisedEstimatorToTemporalAdaptor.fitted<A, B>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_19_5();
  v12 = v11;
  v14 = v13;
  v10[10] = v15;
  v10[11] = v9;
  v10[8] = v11;
  v10[9] = v16;
  v10[6] = v17;
  v10[7] = v18;
  v10[4] = v19;
  v10[5] = v20;
  v21 = *(_QWORD *)(v13 + 16);
  v10[12] = v21;
  v10[13] = *(_QWORD *)(v21 - 8);
  v10[14] = OUTLINED_FUNCTION_0_0();
  v10[15] = *(_QWORD *)(v14 + 24);
  v22 = OUTLINED_FUNCTION_21_53();
  v10[16] = v22;
  v10[17] = *(_QWORD *)(v22 - 8);
  v10[18] = OUTLINED_FUNCTION_84_12();
  v10[19] = OUTLINED_FUNCTION_138_2();
  v10[20] = OUTLINED_FUNCTION_21_53();
  v10[21] = OUTLINED_FUNCTION_0_0();
  v10[22] = OUTLINED_FUNCTION_79_13();
  v23 = OUTLINED_FUNCTION_0_0();
  v10[23] = v23;
  v10[24] = OUTLINED_FUNCTION_80_16(v23, v24, v25, v26);
  v27 = OUTLINED_FUNCTION_0_0();
  v10[25] = v27;
  v31 = OUTLINED_FUNCTION_71_15(v27, v28, v29, v30);
  v10[26] = v31;
  v10[27] = *(_QWORD *)(v31 - 8);
  v10[28] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v10[29] = OUTLINED_FUNCTION_0_0();
  v10[30] = OUTLINED_FUNCTION_0_0();
  v10[31] = *(_QWORD *)(a9 + 8);
  v32 = OUTLINED_FUNCTION_94_7();
  v10[32] = v32;
  v10[33] = *(_QWORD *)(v32 - 8);
  v33 = OUTLINED_FUNCTION_0_0();
  v10[34] = v33;
  v37 = OUTLINED_FUNCTION_81_11(v33, v34, v35, v36);
  v10[35] = v37;
  v10[36] = *(_QWORD *)(v37 - 8);
  v10[37] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v10[38] = OUTLINED_FUNCTION_0_0();
  v10[39] = *(_QWORD *)(v12 - 8);
  v10[40] = OUTLINED_FUNCTION_0_0();
  v38 = OUTLINED_FUNCTION_69_7();
  v10[41] = v38;
  v10[42] = *(_QWORD *)(v38 - 8);
  v10[43] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_34_25();
}

uint64_t sub_22AB06F9C()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_137_2();
  v1 = v0[39];
  v0[2] = OUTLINED_FUNCTION_147_1();
  OUTLINED_FUNCTION_15_58(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_72_15();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v2)
  {
    OUTLINED_FUNCTION_30_0(v0[42]);
    OUTLINED_FUNCTION_4_70();
    v3 = v0[2];
    v0[46] = v3;
    v0[3] = v3;
    v0[47] = OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_13_66();
    OUTLINED_FUNCTION_106();
  }
  OUTLINED_FUNCTION_27_41(v0[38], v0[36]);
  OUTLINED_FUNCTION_37_30();
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_196();
  swift_getAssociatedConformanceWitness();
  v4 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_52_21(v4);
  return OUTLINED_FUNCTION_7_74();
}

uint64_t sub_22AB070F0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_133_1();
  if (v0)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

#error "22AB07210: call analysis failed (funcsize=82)"

uint64_t sub_22AB07298()
{
  uint64_t v0;

  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_111_4();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

uint64_t sub_22AB072E4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_177_0(*(_QWORD *)(v0 + 136));
  OUTLINED_FUNCTION_184();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_88_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v1();
}

uint64_t sub_22AB073B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_53_9();
  v2 = *(_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 288);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 264));
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_35_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_63_16();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AB07444()
{
  uint64_t v0;

  OUTLINED_FUNCTION_53_9();
  OUTLINED_FUNCTION_63_16();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SupervisedEstimatorToTemporalAdaptor.fitted<A, B, C>(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_19_5();
  v25 = v24;
  v27 = v26;
  v23[12] = a20;
  v23[13] = v22;
  v23[10] = v24;
  v23[11] = a19;
  v23[8] = v28;
  v23[9] = v29;
  v23[6] = v30;
  v23[7] = v31;
  v32 = *(_QWORD *)(v26 + 16);
  v23[14] = v32;
  v23[15] = *(_QWORD *)(v32 - 8);
  v23[16] = OUTLINED_FUNCTION_0_0();
  v23[17] = *(_QWORD *)(v27 + 24);
  v33 = OUTLINED_FUNCTION_21_53();
  v23[18] = v33;
  v23[19] = *(_QWORD *)(v33 - 8);
  v23[20] = OUTLINED_FUNCTION_84_12();
  v23[21] = OUTLINED_FUNCTION_138_2();
  v23[22] = OUTLINED_FUNCTION_21_53();
  v23[23] = OUTLINED_FUNCTION_0_0();
  v23[24] = OUTLINED_FUNCTION_79_13();
  v34 = OUTLINED_FUNCTION_0_0();
  v23[25] = v34;
  v23[26] = OUTLINED_FUNCTION_80_16(v34, v35, v36, v37);
  v38 = OUTLINED_FUNCTION_0_0();
  v23[27] = v38;
  v42 = OUTLINED_FUNCTION_71_15(v38, v39, v40, v41);
  v23[28] = v42;
  v23[29] = *(_QWORD *)(v42 - 8);
  v23[30] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v23[31] = OUTLINED_FUNCTION_23_0();
  v23[32] = OUTLINED_FUNCTION_38_0();
  v23[33] = OUTLINED_FUNCTION_0_0();
  v23[34] = *(_QWORD *)(a22 + 8);
  v43 = OUTLINED_FUNCTION_94_7();
  v23[35] = v43;
  v23[36] = *(_QWORD *)(v43 - 8);
  v23[37] = OUTLINED_FUNCTION_23_0();
  v44 = OUTLINED_FUNCTION_38_0();
  v23[38] = v44;
  v48 = OUTLINED_FUNCTION_81_11(v44, v45, v46, v47);
  v49 = OUTLINED_FUNCTION_120_1(v48);
  v23[42] = OUTLINED_FUNCTION_197(v49);
  OUTLINED_FUNCTION_63_6();
  v23[43] = OUTLINED_FUNCTION_23_0();
  v23[44] = OUTLINED_FUNCTION_38_0();
  v23[45] = *(_QWORD *)(v25 - 8);
  v23[46] = OUTLINED_FUNCTION_0_0();
  v50 = OUTLINED_FUNCTION_188();
  v23[47] = v50;
  v23[48] = *(_QWORD *)(v50 - 8);
  v23[49] = OUTLINED_FUNCTION_23_0();
  v23[50] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_106_4();
}

uint64_t sub_22AB07684()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  v0[2] = OUTLINED_FUNCTION_141_2();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[51] = v5;
  OUTLINED_FUNCTION_15_58(v5);
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_68_14();
  v0[52] = OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_64_14();
  OUTLINED_FUNCTION_106_0(v1, 1, v2);
  if (v6)
  {
    v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[51];
    OUTLINED_FUNCTION_10_58(v0[50]);
    v7 = OUTLINED_FUNCTION_194();
    OUTLINED_FUNCTION_140_3(v7, v8, v9, v10, v11, v12, v13, v14, v18);
    OUTLINED_FUNCTION_113_1();
    OUTLINED_FUNCTION_74_12();
    OUTLINED_FUNCTION_106_0(v3, 1, v19);
    if (v6)
    {
      OUTLINED_FUNCTION_32_27();
      OUTLINED_FUNCTION_15_58(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
      v0[61] = OUTLINED_FUNCTION_14_59();
      OUTLINED_FUNCTION_13_66();
      OUTLINED_FUNCTION_76_6();
    }
    OUTLINED_FUNCTION_18_58();
    OUTLINED_FUNCTION_110_5();
    OUTLINED_FUNCTION_1_67();
    OUTLINED_FUNCTION_123_2();
    swift_getAssociatedConformanceWitness();
    v16 = (_QWORD *)swift_task_alloc();
    OUTLINED_FUNCTION_89_8(v16);
  }
  else
  {
    OUTLINED_FUNCTION_26_41();
    OUTLINED_FUNCTION_37_30();
    OUTLINED_FUNCTION_1_67();
    OUTLINED_FUNCTION_123_2();
    swift_getAssociatedConformanceWitness();
    v15 = (_QWORD *)swift_task_alloc();
    OUTLINED_FUNCTION_90_10(v15);
  }
  OUTLINED_FUNCTION_54_18();
  return OUTLINED_FUNCTION_41_25();
}

uint64_t sub_22AB0781C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_134_3();
  if (v0)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

#error "22AB078DC: call analysis failed (funcsize=105)"

uint64_t sub_22AB07A24()
{
  uint64_t v0;

  OUTLINED_FUNCTION_135_3();
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_125_1();
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

#error "22AB07B74: call analysis failed (funcsize=96)"

uint64_t sub_22AB07C0C()
{
  OUTLINED_FUNCTION_98_7();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_185();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AB07C6C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_177_0(*(_QWORD *)(v0 + 152));
  OUTLINED_FUNCTION_184();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_85_3();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return v1();
}

uint64_t sub_22AB07D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_193();
  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 320);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 288));
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_35_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_8_64();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_85_3();
  return OUTLINED_FUNCTION_48_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AB07E20()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_193();
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 320);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 288));
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v1(v2, v3);
  OUTLINED_FUNCTION_8_64();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_85_3();
  return OUTLINED_FUNCTION_48_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AB07ECC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_8_64();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_85_3();
  return OUTLINED_FUNCTION_48_24(*(uint64_t (**)(void))(v0 + 8));
}

void SupervisedEstimatorToTemporalAdaptor.encode(_:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_183(v1, v2);
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_91_7();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_67_14();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_23_50(v5, v10);
  OUTLINED_FUNCTION_160_1();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_31_29(AssociatedConformanceWitness, v7, v8, v9);
  OUTLINED_FUNCTION_34_36(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 56));
  OUTLINED_FUNCTION_85_11();
  OUTLINED_FUNCTION_108_4();
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

void SupervisedEstimatorToTemporalAdaptor.decode(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_155_1(v3);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_101_6();
  OUTLINED_FUNCTION_187();
  OUTLINED_FUNCTION_92_5();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_148_2();
  OUTLINED_FUNCTION_179();
  if (!v1)
    OUTLINED_FUNCTION_49(v6, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

uint64_t sub_22AB08054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v18;

  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v18;
  *v18 = v9;
  v18[1] = sub_22A9ADC14;
  return SupervisedEstimatorToTemporalAdaptor.fitted<A, B>(to:eventHandler:)(a1, a2, a3, a4, a9, a5, a6, a7, a8);
}

uint64_t sub_22AB0810C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v22 + 16) = v29;
  *v29 = v22;
  v29[1] = sub_22A9ADC14;
  return SupervisedEstimatorToTemporalAdaptor.fitted<A, B, C>(to:validateOn:eventHandler:)(a1, a2, v30, a4, a5, a10, a6, v31, a8, v33, a11, a9, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

void sub_22AB081BC()
{
  SupervisedEstimatorToTemporalAdaptor.encode(_:to:)();
}

void sub_22AB081D0()
{
  SupervisedEstimatorToTemporalAdaptor.decode(from:)();
}

uint64_t _s18CreateMLComponents11TransformerPAAE17adaptedAsTemporalAA0c2ToF7AdaptorVyxGyF_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_38_8((uint64_t)v5, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  return OUTLINED_FUNCTION_38_8(a2, (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
}

uint64_t _s18CreateMLComponents28TransformerToTemporalAdaptorV4basexvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*UpdatableSupervisedEstimatorToTemporalAdaptor.base.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_22AB08290()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(_QWORD *)(v1 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_30_0(v1);
  if (*(_QWORD *)(v0 + v2))
    swift_release();
  return swift_deallocObject();
}

void sub_22AB082FC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22A9ABF58;
  __asm { BR              X9; sub_22AB052C4 }
}

uint64_t type metadata accessor for TransformerToTemporalAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TransformerToTemporalAdaptor);
}

uint64_t UpdatableSupervisedEstimatorToTemporalAdaptor.makeTransformer()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22AB083F4(a1, a2);
}

uint64_t sub_22AB083F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = OUTLINED_FUNCTION_94_7();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, v2, v4, v12);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v4, v9);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v14, v10);
}

uint64_t UpdatableSupervisedEstimatorToTemporalAdaptor.fitted<A, B>(to:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_19_5();
  v12 = v11;
  v14 = v13;
  v10[10] = v15;
  v10[11] = v9;
  v10[8] = v11;
  v10[9] = v16;
  v10[6] = v17;
  v10[7] = v18;
  v10[4] = v19;
  v10[5] = v20;
  v21 = *(_QWORD *)(v13 + 16);
  v10[12] = v21;
  v10[13] = *(_QWORD *)(v21 - 8);
  v10[14] = OUTLINED_FUNCTION_0_0();
  v10[15] = *(_QWORD *)(*(_QWORD *)(v14 + 24) + 8);
  v22 = OUTLINED_FUNCTION_21_53();
  v10[16] = v22;
  v10[17] = *(_QWORD *)(v22 - 8);
  v10[18] = OUTLINED_FUNCTION_84_12();
  v10[19] = OUTLINED_FUNCTION_138_2();
  v10[20] = OUTLINED_FUNCTION_21_53();
  v10[21] = OUTLINED_FUNCTION_0_0();
  v10[22] = OUTLINED_FUNCTION_79_13();
  v23 = OUTLINED_FUNCTION_0_0();
  v10[23] = v23;
  v10[24] = OUTLINED_FUNCTION_80_16(v23, v24, v25, v26);
  v27 = OUTLINED_FUNCTION_0_0();
  v10[25] = v27;
  v31 = OUTLINED_FUNCTION_71_15(v27, v28, v29, v30);
  v10[26] = v31;
  v10[27] = *(_QWORD *)(v31 - 8);
  v10[28] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v10[29] = OUTLINED_FUNCTION_0_0();
  v10[30] = OUTLINED_FUNCTION_0_0();
  v10[31] = *(_QWORD *)(a9 + 8);
  v32 = OUTLINED_FUNCTION_94_7();
  v10[32] = v32;
  v10[33] = *(_QWORD *)(v32 - 8);
  v33 = OUTLINED_FUNCTION_0_0();
  v10[34] = v33;
  v37 = OUTLINED_FUNCTION_81_11(v33, v34, v35, v36);
  v10[35] = v37;
  v10[36] = *(_QWORD *)(v37 - 8);
  v10[37] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v10[38] = OUTLINED_FUNCTION_0_0();
  v10[39] = *(_QWORD *)(v12 - 8);
  v10[40] = OUTLINED_FUNCTION_0_0();
  v38 = OUTLINED_FUNCTION_69_7();
  v10[41] = v38;
  v10[42] = *(_QWORD *)(v38 - 8);
  v10[43] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_34_25();
}

uint64_t sub_22AB086D8()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_137_2();
  v1 = v0[39];
  v0[2] = OUTLINED_FUNCTION_147_1();
  OUTLINED_FUNCTION_15_58(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_72_15();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v2)
  {
    OUTLINED_FUNCTION_30_0(v0[42]);
    OUTLINED_FUNCTION_4_70();
    v3 = v0[2];
    v0[46] = v3;
    v0[3] = v3;
    v0[47] = OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_13_66();
    OUTLINED_FUNCTION_106();
  }
  OUTLINED_FUNCTION_27_41(v0[38], v0[36]);
  OUTLINED_FUNCTION_37_30();
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_196();
  swift_getAssociatedConformanceWitness();
  v4 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_52_21(v4);
  return OUTLINED_FUNCTION_7_74();
}

uint64_t sub_22AB0882C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_133_1();
  if (v0)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

#error "22AB0894C: call analysis failed (funcsize=82)"

uint64_t sub_22AB089D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_111_4();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

uint64_t UpdatableSupervisedEstimatorToTemporalAdaptor.fitted<A, B, C>(to:validateOn:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_19_5();
  v25 = v24;
  v27 = v26;
  v23[12] = a20;
  v23[13] = v22;
  v23[10] = v24;
  v23[11] = a19;
  v23[8] = v28;
  v23[9] = v29;
  v23[6] = v30;
  v23[7] = v31;
  v32 = *(_QWORD *)(v26 + 16);
  v23[14] = v32;
  v23[15] = *(_QWORD *)(v32 - 8);
  v23[16] = OUTLINED_FUNCTION_0_0();
  v23[17] = *(_QWORD *)(*(_QWORD *)(v27 + 24) + 8);
  v33 = OUTLINED_FUNCTION_21_53();
  v23[18] = v33;
  v23[19] = *(_QWORD *)(v33 - 8);
  v23[20] = OUTLINED_FUNCTION_84_12();
  v23[21] = OUTLINED_FUNCTION_138_2();
  v23[22] = OUTLINED_FUNCTION_21_53();
  v23[23] = OUTLINED_FUNCTION_0_0();
  v23[24] = OUTLINED_FUNCTION_79_13();
  v34 = OUTLINED_FUNCTION_0_0();
  v23[25] = v34;
  v23[26] = OUTLINED_FUNCTION_80_16(v34, v35, v36, v37);
  v38 = OUTLINED_FUNCTION_0_0();
  v23[27] = v38;
  v42 = OUTLINED_FUNCTION_71_15(v38, v39, v40, v41);
  v23[28] = v42;
  v23[29] = *(_QWORD *)(v42 - 8);
  v23[30] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v23[31] = OUTLINED_FUNCTION_23_0();
  v23[32] = OUTLINED_FUNCTION_38_0();
  v23[33] = OUTLINED_FUNCTION_0_0();
  v23[34] = *(_QWORD *)(a22 + 8);
  v43 = OUTLINED_FUNCTION_94_7();
  v23[35] = v43;
  v23[36] = *(_QWORD *)(v43 - 8);
  v23[37] = OUTLINED_FUNCTION_23_0();
  v44 = OUTLINED_FUNCTION_38_0();
  v23[38] = v44;
  v48 = OUTLINED_FUNCTION_81_11(v44, v45, v46, v47);
  v49 = OUTLINED_FUNCTION_120_1(v48);
  v23[42] = OUTLINED_FUNCTION_197(v49);
  OUTLINED_FUNCTION_63_6();
  v23[43] = OUTLINED_FUNCTION_23_0();
  v23[44] = OUTLINED_FUNCTION_38_0();
  v23[45] = *(_QWORD *)(v25 - 8);
  v23[46] = OUTLINED_FUNCTION_0_0();
  v50 = OUTLINED_FUNCTION_188();
  v23[47] = v50;
  v23[48] = *(_QWORD *)(v50 - 8);
  v23[49] = OUTLINED_FUNCTION_23_0();
  v23[50] = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_106_4();
}

uint64_t sub_22AB08C00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  v0[2] = OUTLINED_FUNCTION_141_2();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[51] = v5;
  OUTLINED_FUNCTION_15_58(v5);
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_68_14();
  v0[52] = OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_64_14();
  OUTLINED_FUNCTION_106_0(v1, 1, v2);
  if (v6)
  {
    v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[51];
    OUTLINED_FUNCTION_10_58(v0[50]);
    v7 = OUTLINED_FUNCTION_194();
    OUTLINED_FUNCTION_140_3(v7, v8, v9, v10, v11, v12, v13, v14, v18);
    OUTLINED_FUNCTION_113_1();
    OUTLINED_FUNCTION_74_12();
    OUTLINED_FUNCTION_106_0(v3, 1, v19);
    if (v6)
    {
      OUTLINED_FUNCTION_32_27();
      OUTLINED_FUNCTION_15_58(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
      v0[61] = OUTLINED_FUNCTION_14_59();
      OUTLINED_FUNCTION_13_66();
      OUTLINED_FUNCTION_76_6();
    }
    OUTLINED_FUNCTION_18_58();
    OUTLINED_FUNCTION_110_5();
    OUTLINED_FUNCTION_1_67();
    OUTLINED_FUNCTION_123_2();
    swift_getAssociatedConformanceWitness();
    v16 = (_QWORD *)swift_task_alloc();
    OUTLINED_FUNCTION_89_8(v16);
  }
  else
  {
    OUTLINED_FUNCTION_26_41();
    OUTLINED_FUNCTION_37_30();
    OUTLINED_FUNCTION_1_67();
    OUTLINED_FUNCTION_123_2();
    swift_getAssociatedConformanceWitness();
    v15 = (_QWORD *)swift_task_alloc();
    OUTLINED_FUNCTION_90_10(v15);
  }
  OUTLINED_FUNCTION_54_18();
  return OUTLINED_FUNCTION_41_25();
}

uint64_t sub_22AB08D98()
{
  uint64_t v0;

  OUTLINED_FUNCTION_134_3();
  if (v0)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

#error "22AB08E58: call analysis failed (funcsize=105)"

uint64_t sub_22AB08FA0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_135_3();
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_125_1();
  }
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

#error "22AB090F0: call analysis failed (funcsize=96)"

uint64_t sub_22AB09188()
{
  OUTLINED_FUNCTION_98_7();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_185();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t UpdatableSupervisedEstimatorToTemporalAdaptor.update<A, B>(_:with:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v10[10] = a8;
  v10[11] = v9;
  v10[8] = a6;
  v10[9] = a7;
  v10[6] = a3;
  v10[7] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v13 = *(_QWORD *)(a5 + 16);
  v10[12] = v13;
  v10[13] = *(_QWORD *)(v13 - 8);
  v10[14] = OUTLINED_FUNCTION_0_0();
  v10[15] = *(_QWORD *)(a5 + 24);
  v10[16] = OUTLINED_FUNCTION_65_2();
  v10[17] = OUTLINED_FUNCTION_0_0();
  v10[18] = OUTLINED_FUNCTION_79_13();
  v14 = OUTLINED_FUNCTION_0_0();
  v10[19] = v14;
  v10[20] = OUTLINED_FUNCTION_80_16(v14, v15, v16, v17);
  v18 = OUTLINED_FUNCTION_0_0();
  v10[21] = v18;
  v22 = OUTLINED_FUNCTION_71_15(v18, v19, v20, v21);
  v10[22] = v22;
  v10[23] = *(_QWORD *)(v22 - 8);
  v10[24] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v10[25] = OUTLINED_FUNCTION_0_0();
  v10[26] = OUTLINED_FUNCTION_0_0();
  v10[27] = *(_QWORD *)(a9 + 8);
  v23 = OUTLINED_FUNCTION_94_7();
  v10[28] = v23;
  v10[29] = *(_QWORD *)(v23 - 8);
  v24 = OUTLINED_FUNCTION_0_0();
  v10[30] = v24;
  v28 = OUTLINED_FUNCTION_81_11(v24, v25, v26, v27);
  v10[31] = v28;
  v10[32] = *(_QWORD *)(v28 - 8);
  v10[33] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_63_6();
  v10[34] = OUTLINED_FUNCTION_0_0();
  v10[35] = *(_QWORD *)(a6 - 8);
  v10[36] = OUTLINED_FUNCTION_0_0();
  v29 = OUTLINED_FUNCTION_69_7();
  v10[37] = v29;
  v10[38] = *(_QWORD *)(v29 - 8);
  v10[39] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_34_25();
}

uint64_t sub_22AB093A0()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_137_2();
  v1 = v0[35];
  v0[2] = OUTLINED_FUNCTION_147_1();
  OUTLINED_FUNCTION_15_58(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_172();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_53_12();
  if (v2)
  {
    OUTLINED_FUNCTION_30_0(v0[38]);
    OUTLINED_FUNCTION_4_70();
    v3 = v0[2];
    v0[42] = v3;
    v0[43] = OUTLINED_FUNCTION_38_35(v3);
    OUTLINED_FUNCTION_13_66();
    OUTLINED_FUNCTION_106();
  }
  OUTLINED_FUNCTION_27_41(v0[34], v0[32]);
  OUTLINED_FUNCTION_37_30();
  OUTLINED_FUNCTION_1_67();
  swift_getAssociatedConformanceWitness();
  v4 = (_QWORD *)swift_task_alloc();
  v0[40] = v4;
  *v4 = v0;
  v4[1] = sub_22AB09500;
  OUTLINED_FUNCTION_54_18();
  return OUTLINED_FUNCTION_7_74();
}

uint64_t sub_22AB09500()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
    OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AB09560()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_53_9();
  if (__swift_getEnumTagSinglePayload(v0[25], 1, v0[22]) == 1)
  {
    OUTLINED_FUNCTION_30_0(v0[29]);
    OUTLINED_FUNCTION_76_14();
    OUTLINED_FUNCTION_172();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_49_10();
    OUTLINED_FUNCTION_53_12();
    if (v1)
    {
      OUTLINED_FUNCTION_30_0(v0[38]);
      OUTLINED_FUNCTION_4_70();
      v2 = v0[2];
      v0[42] = v2;
      v0[3] = v2;
      v0[43] = swift_task_alloc();
      OUTLINED_FUNCTION_13_66();
      OUTLINED_FUNCTION_106();
    }
    OUTLINED_FUNCTION_27_41(v0[34], v0[32]);
    OUTLINED_FUNCTION_37_30();
    OUTLINED_FUNCTION_1_67();
  }
  else
  {
    v14 = v0[16];
    v15 = v0[18];
    OUTLINED_FUNCTION_33_35();
    OUTLINED_FUNCTION_45_20();
    v3 = OUTLINED_FUNCTION_75_13();
    OUTLINED_FUNCTION_119_3(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, v15);
    OUTLINED_FUNCTION_169();
    OUTLINED_FUNCTION_152();
    OUTLINED_FUNCTION_44_25();
  }
  swift_getAssociatedConformanceWitness();
  v11 = (_QWORD *)swift_task_alloc();
  v0[40] = v11;
  *v11 = v0;
  v11[1] = sub_22AB09500;
  OUTLINED_FUNCTION_54_18();
  return OUTLINED_FUNCTION_41_25();
}

uint64_t sub_22AB09744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_97();
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_43_7();
}

uint64_t sub_22AB097B4()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_23_5();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_19_3();
  return OUTLINED_FUNCTION_5_0(v0);
}

uint64_t sub_22AB09834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_5();
  v2 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 256);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 232));
  OUTLINED_FUNCTION_48_14(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_35_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_78_11();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  return OUTLINED_FUNCTION_5_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AB098BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_78_11();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  return OUTLINED_FUNCTION_5_0(*(uint64_t (**)(void))(v0 + 8));
}

void UpdatableSupervisedEstimatorToTemporalAdaptor.encode(_:to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_165_0(v1, v2);
  OUTLINED_FUNCTION_41_13();
  OUTLINED_FUNCTION_91_7();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_67_14();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_23_50(v5, v10);
  OUTLINED_FUNCTION_160_1();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_31_29(AssociatedConformanceWitness, v7, v8, v9);
  OUTLINED_FUNCTION_34_36(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 56));
  OUTLINED_FUNCTION_85_11();
  OUTLINED_FUNCTION_108_4();
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

void UpdatableSupervisedEstimatorToTemporalAdaptor.decode(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_86_9(v1);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_154_1();
  OUTLINED_FUNCTION_186();
  OUTLINED_FUNCTION_92_5();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_66_18();
  OUTLINED_FUNCTION_83_14();
  OUTLINED_FUNCTION_124_2();
  if (!v0)
    OUTLINED_FUNCTION_122_4();
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

uint64_t UpdatableSupervisedEstimatorToTemporalAdaptor.encodeWithOptimizer(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a3 + 24) + 32))(a1, a2, *(_QWORD *)(a3 + 16));
}

void UpdatableSupervisedEstimatorToTemporalAdaptor.decodeWithOptimizer(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t AssociatedTypeWitness;
  uint64_t v31;
  double v32;
  uint64_t v33;
  char *v34;

  OUTLINED_FUNCTION_12();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v29 = *(_QWORD *)(v27 + 16);
  v28 = *(_QWORD *)(v27 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v32 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v34 = (char *)&a9 - v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v28 + 40))(v24, v29, v28, v32);
  if (!v20)
    OUTLINED_FUNCTION_49(v26, (uint64_t)v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32));
  OUTLINED_FUNCTION_99_3();
  OUTLINED_FUNCTION_16();
}

void sub_22AB09AE8()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AB09AF8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableEstimatorToTemporalAdaptor<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AB09B24()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22AB09B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v18;

  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v18;
  *v18 = v9;
  v18[1] = sub_22A9ADC14;
  return UpdatableSupervisedEstimatorToTemporalAdaptor.update<A, B>(_:with:eventHandler:)(a1, a2, a3, a4, a9, a5, a6, a7, a8);
}

uint64_t sub_22AB09BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UpdatableSupervisedEstimatorToTemporalAdaptor.encodeWithOptimizer(_:to:)(a1, a2, a3);
}

#error "22AB09C14: call analysis failed (funcsize=5)"

uint64_t sub_22AB09C20(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for UpdatableSupervisedEstimatorToTemporalAdaptor<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22AB09C4C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22AB09C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v18;

  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v18;
  *v18 = v9;
  v18[1] = sub_22A9ADC14;
  return UpdatableSupervisedEstimatorToTemporalAdaptor.fitted<A, B>(to:eventHandler:)(a1, a2, a3, a4, a9, a5, a6, a7, a8);
}

uint64_t sub_22AB09D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v22 + 16) = v29;
  *v29 = v22;
  v29[1] = sub_22A9ADC14;
  return UpdatableSupervisedEstimatorToTemporalAdaptor.fitted<A, B, C>(to:validateOn:eventHandler:)(a1, a2, v30, a4, a5, a10, a6, v31, a8, v33, a11, a9, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

void sub_22AB09DD4()
{
  UpdatableSupervisedEstimatorToTemporalAdaptor.encode(_:to:)();
}

void sub_22AB09DE8()
{
  UpdatableSupervisedEstimatorToTemporalAdaptor.decode(from:)();
}

uint64_t type metadata accessor for EstimatorToTemporalAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EstimatorToTemporalAdaptor);
}

uint64_t type metadata accessor for UpdatableEstimatorToTemporalAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UpdatableEstimatorToTemporalAdaptor);
}

uint64_t type metadata accessor for SupervisedEstimatorToTemporalAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SupervisedEstimatorToTemporalAdaptor);
}

uint64_t sub_22AB09E2C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AB09EDC + 4 * byte_22ABF9A30[(v8 - 1)]))();
}

void sub_22AB09F28(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        OUTLINED_FUNCTION_104();
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v15;
          *(_BYTE *)(a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      OUTLINED_FUNCTION_104();
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for UpdatableSupervisedEstimatorToTemporalAdaptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UpdatableSupervisedEstimatorToTemporalAdaptor);
}

uint64_t OUTLINED_FUNCTION_4_70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_7_74()
{
  return sub_22ABDF188();
}

uint64_t OUTLINED_FUNCTION_8_64()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_9_66@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_10_58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  v3 = v1[48];
  v4 = v1[47];
  *(_QWORD *)(v2 + 40) = v1[39];
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v1[55] = v5;
  return v5(a1, v4);
}

uint64_t OUTLINED_FUNCTION_12_60@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;

  *v2 = v3;
  v2[1] = a2;
  result = v3[21];
  v6 = v3[17];
  v4[3] = v3[14];
  v4[4] = v6;
  v4[2] = a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_13_66()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_14_59()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = v1[2];
  v1[60] = v4;
  v1[4] = v4;
  v1[5] = v0;
  *(_QWORD *)(v3 + 40) = **(int **)(v2 + 48) + *(_QWORD *)(v2 + 48);
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_15_58@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_18_58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, _QWORD, uint64_t);

  v1 = v0[39];
  v2 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v0[40] + 32);
  v0[56] = v2;
  return v2(v0[41], v0[43], v1);
}

uint64_t OUTLINED_FUNCTION_21_53()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_23_50@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v2);
}

uint64_t OUTLINED_FUNCTION_25_37()
{
  return sub_22ABDF188();
}

uint64_t OUTLINED_FUNCTION_26_41()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[40] + 32))(v0[42], v0[44], v0[39]);
}

uint64_t OUTLINED_FUNCTION_27_41@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 32))(v3, a1, v2);
}

uint64_t OUTLINED_FUNCTION_29_30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = **(int **)(v0 + 48) + *(_QWORD *)(v0 + 48);
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_31_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = type metadata accessor for TransformerToTemporalAdaptor(0, v5, a1, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 16) - 8) + 16))(v6, v4);
}

uint64_t OUTLINED_FUNCTION_32_27()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 472) = v0;
  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 440))(*(_QWORD *)(v1 + 392), *(_QWORD *)(v1 + 376));
}

uint64_t OUTLINED_FUNCTION_33_35()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v3, v1, v0);
}

uint64_t OUTLINED_FUNCTION_34_36@<X0>(uint64_t (*a1)(uint64_t, _QWORD, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return a1(v3, *(_QWORD *)(v4 - 88), v1, v2);
}

uint64_t OUTLINED_FUNCTION_37_30()
{
  uint64_t v0;
  uint64_t v1;

  return AnnotatedFeature.feature.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_38_35@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_40_24()
{
  return sub_22ABDF200();
}

uint64_t OUTLINED_FUNCTION_41_25()
{
  return sub_22ABDF188();
}

uint64_t OUTLINED_FUNCTION_42_20()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_43_19()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[25] + 32))(v0[26], v0[31], v0[24]);
}

uint64_t OUTLINED_FUNCTION_44_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_45_20()
{
  uint64_t v0;
  uint64_t v1;

  return TemporalFeature.feature.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_48_24(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_52_21(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 352) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 232);
}

uint64_t OUTLINED_FUNCTION_53_24(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 296) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 184);
}

uint64_t OUTLINED_FUNCTION_60_18()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_63_16()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_64_14()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_66_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v0, v1);
}

uint64_t OUTLINED_FUNCTION_68_14()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t OUTLINED_FUNCTION_71_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for TemporalFeature(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_72_15()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t OUTLINED_FUNCTION_74_12()
{
  return sub_22ABDF650();
}

uint64_t OUTLINED_FUNCTION_75_13()
{
  uint64_t v0;
  uint64_t v1;

  return AnnotatedFeature.annotation.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_76_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_78_11()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_79_13()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_80_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for AnnotatedFeature(0, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_81_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for AnnotatedFeature(0, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_83_14()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_84_12()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_85_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_86_9(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = v1;
  *(_QWORD *)(v2 - 88) = a1;
}

uint64_t OUTLINED_FUNCTION_87_9@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;

  *v3 = v2;
  v3[1] = a2;
  result = v2[21];
  v6 = v2[17];
  v4[3] = v2[14];
  v4[4] = v6;
  v4[2] = a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_88_6()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_89_8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 456) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 248);
}

uint64_t OUTLINED_FUNCTION_90_10(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 424) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 256);
}

uint64_t OUTLINED_FUNCTION_94_7()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_98_7()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 496) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_100_4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[2];
  v0[46] = v1;
  v0[3] = v1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_104_3()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 472) = *(_QWORD *)(v0 + 24);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 440))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 376));
}

uint64_t OUTLINED_FUNCTION_105_5()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_106_4()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_108_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_110_5()
{
  uint64_t v0;
  uint64_t v1;

  return AnnotatedFeature.feature.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_111_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 384) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_112_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 328) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_113_1()
{
  return sub_22ABDEE58();
}

uint64_t OUTLINED_FUNCTION_118_3()
{
  return sub_22ABDF0C8();
}

uint64_t OUTLINED_FUNCTION_119_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  return AnnotatedFeature.init(feature:annotation:)(v13, v12, a11, a10, v11);
}

uint64_t OUTLINED_FUNCTION_120_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 312) = a1;
  *(_QWORD *)(v1 + 320) = *(_QWORD *)(a1 - 8);
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_121_3()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_122_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v0 + 32))(*(_QWORD *)(v3 - 88), v2, v1);
}

uint64_t OUTLINED_FUNCTION_123_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 272);
}

uint64_t OUTLINED_FUNCTION_124_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_125_3@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 136);
}

uint64_t OUTLINED_FUNCTION_126_2@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 152);
}

uint64_t OUTLINED_FUNCTION_127_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, v0, v2);
}

uint64_t OUTLINED_FUNCTION_128_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_132_2()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 304) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_133_1()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 360) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_134_3()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 432) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_135_3()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 464) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_138_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_139_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v12 + 24) = a1;
  return a11(v11, v13, v14);
}

uint64_t OUTLINED_FUNCTION_140_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v10 + 24) = a1;
  return a9(v9, v11, v12);
}

uint64_t OUTLINED_FUNCTION_141_2()
{
  return sub_22ABDE9F0();
}

uint64_t OUTLINED_FUNCTION_143_1()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_145_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_146_2()
{
  uint64_t v0;
  uint64_t v1;

  return TemporalFeature.feature.getter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_147_1()
{
  return sub_22ABDE9F0();
}

uint64_t OUTLINED_FUNCTION_148_2()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_151_0()
{
  return sub_22ABDF0C8();
}

uint64_t OUTLINED_FUNCTION_152()
{
  return sub_22ABDF0C8();
}

uint64_t OUTLINED_FUNCTION_153_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return AnnotatedFeature.init(feature:annotation:)(v12, v11, a9, v9, v10);
}

void OUTLINED_FUNCTION_155_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = v1;
  *(_QWORD *)(v2 - 88) = a1;
}

uint64_t OUTLINED_FUNCTION_156_2()
{
  return sub_22ABDE9F0();
}

uint64_t OUTLINED_FUNCTION_160_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_164_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return AnnotatedFeature.init(feature:annotation:)(v12, v11, a10, a9, v10);
}

void OUTLINED_FUNCTION_165_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 72) = v2;
  *(_QWORD *)(v3 - 88) = a2;
}

uint64_t OUTLINED_FUNCTION_167_0()
{
  uint64_t v0;

  return __swift_getEnumTagSinglePayload(*(_QWORD *)(v0 + 232), 1, *(_QWORD *)(v0 + 208));
}

uint64_t OUTLINED_FUNCTION_168()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_169()
{
  return sub_22ABDF0F8();
}

uint64_t OUTLINED_FUNCTION_171()
{
  uint64_t v0;

  return __swift_getEnumTagSinglePayload(*(_QWORD *)(v0 + 256), 1, *(_QWORD *)(v0 + 224));
}

uint64_t OUTLINED_FUNCTION_172()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t OUTLINED_FUNCTION_177_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_179()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_180()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_181()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_182()
{
  uint64_t v0;
  uint64_t v1;

  return AnnotatedFeature.annotation.getter(v0, v1);
}

void OUTLINED_FUNCTION_183(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 72) = v2;
  *(_QWORD *)(v3 - 88) = a2;
}

uint64_t OUTLINED_FUNCTION_184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_185()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_186()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_187()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_188()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_189()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_194()
{
  return sub_22ABDE9F0();
}

uint64_t OUTLINED_FUNCTION_196()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 248);
}

uint64_t OUTLINED_FUNCTION_197(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 328) = a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_198()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 216);
}

uint64_t AudioPreprocessingError.errorDescription.getter()
{
  return AudioPreprocessingError.debugDescription.getter();
}

uint64_t AudioPreprocessingError.debugDescription.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = v1;
  v4 = v2;
  sub_22ABDF7A0();
  sub_22ABDEDC8();
  v5 = objc_msgSend(v3, sel_description);
  sub_22ABDED50();
  OUTLINED_FUNCTION_1_68();
  OUTLINED_FUNCTION_7_57();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();
  v6 = objc_msgSend(v4, sel_description);
  sub_22ABDED50();
  OUTLINED_FUNCTION_1_68();
  OUTLINED_FUNCTION_7_57();
  swift_bridgeObjectRelease();
  sub_22ABDEDC8();

  return 0;
}

uint64_t static AudioPreprocessingError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  char v10;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  sub_22AA2FDC8();
  v6 = v2;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  LOBYTE(v5) = sub_22ABDF560();

  if ((v5 & 1) != 0)
    v10 = sub_22ABDF560();
  else
    v10 = 0;

  return v10 & 1;
}

unint64_t sub_22AB0AFB0()
{
  unint64_t result;

  result = qword_255B17C28[0];
  if (!qword_255B17C28[0])
  {
    result = MEMORY[0x22E2E4D80](&protocol conformance descriptor for AudioPreprocessingError, &type metadata for AudioPreprocessingError);
    atomic_store(result, qword_255B17C28);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioPreprocessingError(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for AudioPreprocessingError(id *a1)
{

}

uint64_t assignWithCopy for AudioPreprocessingError(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for AudioPreprocessingError(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for AudioPreprocessingError()
{
  return &type metadata for AudioPreprocessingError;
}

uint64_t Classification.init(label:probability:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a4, a1, a2);
  result = type metadata accessor for Classification(0, a2, a3, v9);
  *(float *)(a4 + *(int *)(result + 36)) = a5;
  return result;
}

uint64_t type metadata accessor for Classification(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Classification);
}

uint64_t Classification.label.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Classification.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*Classification.label.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

float Classification.probability.getter(uint64_t a1)
{
  uint64_t v1;

  return *(float *)(v1 + *(int *)(a1 + 36));
}

uint64_t Classification.probability.setter(uint64_t result, float a2)
{
  uint64_t v2;

  *(float *)(v2 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t (*Classification.probability.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Classification.hash(into:)()
{
  sub_22ABDEC0C();
  return sub_22ABE0268();
}

BOOL static Classification.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if ((sub_22ABDECFC() & 1) == 0)
    return 0;
  v9 = type metadata accessor for Classification(0, a3, a4, v8);
  return *(float *)(a1 + *(int *)(v9 + 36)) == *(float *)(a2 + *(int *)(v9 + 36));
}

uint64_t sub_22AB0B28C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_22ABDFF68() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C696261626F7270 && a2 == 0xEB00000000797469)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_22ABDFF68();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_22AB0B388(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C696261626F7270;
  else
    return 0x6C6562616CLL;
}

uint64_t sub_22AB0B3C4()
{
  char *v0;

  return sub_22AB0B388(*v0);
}

uint64_t sub_22AB0B3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22AB0B28C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22AB0B400(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF9FA0, a1);
  return sub_22ABE02EC();
}

uint64_t sub_22AB0B434(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&unk_22ABF9FA0, a1);
  return sub_22ABE02F8();
}

uint64_t Classification.hashValue.getter()
{
  sub_22ABE0244();
  Classification.hash(into:)();
  return sub_22ABE0280();
}

uint64_t sub_22AB0B4B4()
{
  sub_22ABE0244();
  Classification.hash(into:)();
  return sub_22ABE0280();
}

BOOL sub_22AB0B4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Classification.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t Classification<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[4];
  char v13;
  char v14;

  v12[2] = a4;
  v12[0] = a2;
  v5 = type metadata accessor for Classification.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x22E2E4D80](&unk_22ABF9FA0, v5);
  v6 = sub_22ABDFD58();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22ABE02B0();
  v14 = 0;
  v10 = v12[3];
  sub_22ABDFD4C();
  if (!v10)
  {
    v13 = 1;
    sub_22ABDFD28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t type metadata accessor for Classification.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Classification.CodingKeys);
}

uint64_t Classification<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  char v40;

  v29 = a5;
  v32 = *(_QWORD *)(a2 - 8);
  v33 = a3;
  MEMORY[0x24BDAC7A8](a1);
  v34 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Classification.CodingKeys(255, v9, v11, v10);
  MEMORY[0x22E2E4D80](&unk_22ABF9FA0, v12);
  v35 = sub_22ABDFCB0();
  v31 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v14 = (char *)&v28 - v13;
  v36 = a2;
  v30 = type metadata accessor for Classification(0, a2, a4, v15);
  v16 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v18 = (char *)&v28 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v37 = v14;
  v19 = v38;
  sub_22ABE0298();
  if (v19)
    return OUTLINED_FUNCTION_8_0();
  v38 = v16;
  v20 = v30;
  v21 = v18;
  v22 = v32;
  v40 = 0;
  v23 = v34;
  sub_22ABDFC8C();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v21, v23, v36);
  v39 = 1;
  sub_22ABDFC68();
  v25 = v24;
  OUTLINED_FUNCTION_0_76();
  *(_DWORD *)&v21[*(int *)(v20 + 36)] = v25;
  v26 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v29, v21, v20);
  OUTLINED_FUNCTION_8_0();
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v21, v20);
}

void sub_22AB0B8A8()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t sub_22AB0B8B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Classification<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), *(_QWORD *)(a2 + 24), a4);
}

uint64_t sub_22AB0B8D8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return Classification<>.encode(to:)(a1, a2, a3, *(_QWORD *)(a3 - 16));
}

uint64_t sub_22AB0B8F0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22AB0B968(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  v8 = v7 & 0xFC | 3;
  v9 = v7 & 0x100000;
  if (v8 > 7 || v9 != 0 || ((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4 > 0x18)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_DWORD *)(((unint64_t)v4 + v6 + 3) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)(((unint64_t)a2 + v6 + 3) & 0xFFFFFFFFFFFFFCLL);
  }
  return v4;
}

uint64_t sub_22AB0BA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a1) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a2) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_22AB0BA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a1) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a2) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_22AB0BAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a1) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a2) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_22AB0BB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a1) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((*(_QWORD *)(v5 + 64) + 3 + a2) & 0xFFFFFFFFFFFFFCLL);
  return a1;
}

uint64_t sub_22AB0BB88(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    return 0;
  }
  if (((((*(_QWORD *)(v5 + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4) & 0xFFFFFFFC) != 0)
    v7 = 2;
  else
    v7 = a2 - v6 + 1;
  if (v7 >= 0x10000)
    v8 = 4;
  else
    v8 = 2;
  if (v7 < 0x100)
    v8 = 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = 0;
  return ((uint64_t (*)(void))((char *)&loc_22AB0BBF8 + 4 * byte_22ABF9D80[v9]))();
}

void sub_22AB0BC4C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if (v7 >= a3)
  {
    v12 = 0;
  }
  else
  {
    v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 3) & 0xFFFFFFFC) == 0xFFFFFFFC)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v13 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_22AB0BD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_BYTE *)(v4 + v5) = 0;
  if ((_DWORD)a2)
    return __swift_storeEnumTagSinglePayload(v4, a2, a3, a4);
  return result;
}

void sub_22AB0BD68(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x22AB0BD70);
  JUMPOUT(0x22AB0BD50);
}

uint64_t sub_22AB0BD88(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22AB0BDD4 + 4 * byte_22ABF9D94[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22AB0BE08 + 4 * byte_22ABF9D8F[v4]))();
}

uint64_t sub_22AB0BE08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB0BE10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22AB0BE18);
  return result;
}

uint64_t sub_22AB0BE24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22AB0BE2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22AB0BE30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22AB0BE38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_22AB0BE44()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB0BE54()
{
  JUMPOUT(0x22E2E4D80);
}

void sub_22AB0BE64()
{
  JUMPOUT(0x22E2E4D80);
}

uint64_t OUTLINED_FUNCTION_0_76()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 104), v1);
}

void sub_22AB0BE84(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  OUTLINED_FUNCTION_69_14();
}

uint64_t sub_22AB0BED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + a1, v2, v1);
}

void sub_22AB0BF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_4();
  v2 = type metadata accessor for TransformerToEstimatorAdaptor(0, v0, v1, v0);
  MEMORY[0x24BDAC7A8](v2);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_106();
}

void sub_22AB0BFB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = a1;
  *(_QWORD *)(v3 - 88) = AssociatedConformanceWitness;
  type metadata accessor for EstimatorToSupervisedAdaptor();
}

void sub_22AB0BFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;

  *(_QWORD *)(v15 - 160) = *(_QWORD *)(a1 - 8);
  v16 = MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&a9 - v17;
  (*(void (**)(uint64_t, _QWORD, uint64_t, double))(*(_QWORD *)(v11 - 8) + 32))(v10, *(_QWORD *)(v15 - 144), v11, v16);
  Transformer.adaptedAsEstimator()(v13, *(_QWORD *)(v15 - 136));
  OUTLINED_FUNCTION_23_17(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8));
  Estimator.adaptedAsSupervised<A>(annotationType:)(v9, v12, (uint64_t)v18);
  OUTLINED_FUNCTION_48_2(v14, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 120) + 8));
  OUTLINED_FUNCTION_116_2();
}

void sub_22AB0C088(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 112) = v1;
  *(_QWORD *)(v3 - 104) = v2;
  *(_QWORD *)(v3 - 96) = *(_QWORD *)(v3 - 152);
  *(_QWORD *)(v3 - 88) = a1;
  OUTLINED_FUNCTION_69_14();
}

void sub_22AB0C09C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 160) + 32))(*(_QWORD *)(v3 - 168) + a1, v1, v2);
  OUTLINED_FUNCTION_3();
}

void sub_22AB0C0C4(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  OUTLINED_FUNCTION_60_8();
  OUTLINED_FUNCTION_83_15();
  EstimatorToSupervisedAdaptor.init(_:)(a1, a2, a3);
  OUTLINED_FUNCTION_29_31();
}

void sub_22AB0C160()
{
  OUTLINED_FUNCTION_106();
}

void sub_22AB0C170()
{
  OUTLINED_FUNCTION_69_14();
}

void sub_22AB0C180(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + a1, v2, v1);
  OUTLINED_FUNCTION_51_10();
}

void sub_22AB0C1A0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_29_31();
}

void sub_22AB0C240(uint64_t a1)
{
  MEMORY[0x22E2E4D80](&protocol conformance descriptor for EstimatorToSupervisedAdaptor<A, B>, a1);
  OUTLINED_FUNCTION_69_14();
}

void sub_22AB0C264(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  EstimatorToSupervisedAdaptor.init(_:)(v2, v1, v3 + a1);
  OUTLINED_FUNCTION_51_10();
}

void sub_22AB0C288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[13] = a7;
  v8[14] = v7;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  v8[15] = *(_QWORD *)(a5 + 32);
  v8[16] = *(_QWORD *)(a5 + 16);
  OUTLINED_FUNCTION_73_3();
  v8[17] = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v8[18] = sub_22ABDF0F8();
  v8[19] = OUTLINED_FUNCTION_73_3();
  v8[20] = sub_22ABDFA10();
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB0C388(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
  OUTLINED_FUNCTION_116_2();
}

void sub_22AB0C39C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[22] = a1;
  v3[2] = v1;
  v3[3] = v4;
  v3[4] = v2;
  v3[23] = OUTLINED_FUNCTION_71_6(a1);
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22AB0C3C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[24] = a1;
  OUTLINED_FUNCTION_115();
  v7 = sub_22ABDF7B8();
  v2[25] = v7;
  v2[26] = *(_QWORD *)(v7 - 8);
  v2[27] = OUTLINED_FUNCTION_0_0();
  v2[28] = *(_QWORD *)(v1 - 8);
  v2[29] = OUTLINED_FUNCTION_0_0();
  v2[30] = type metadata accessor for AnnotatedFeature(255, v3, v5, v8);
  OUTLINED_FUNCTION_115();
  v9 = sub_22ABDFA10();
  v2[31] = v9;
  v2[32] = *(_QWORD *)(v9 - 8);
  v2[33] = OUTLINED_FUNCTION_0_0();
  v10 = *(_QWORD *)(v4 + 24);
  v2[34] = v10;
  v2[35] = *(_QWORD *)(v10 - 8);
  v2[36] = OUTLINED_FUNCTION_0_0();
  v2[37] = *(_QWORD *)(v4 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[38] = AssociatedTypeWitness;
  v2[39] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[40] = OUTLINED_FUNCTION_23_0();
  v2[41] = OUTLINED_FUNCTION_38_0();
  v12 = swift_checkMetadataState();
  v2[42] = v12;
  v2[43] = *(_QWORD *)(v12 - 8);
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = *(_QWORD *)(v6 - 8);
  v2[47] = OUTLINED_FUNCTION_0_0();
  v13 = sub_22ABDF7B8();
  v2[48] = v13;
  v2[49] = *(_QWORD *)(v13 - 8);
  v2[50] = OUTLINED_FUNCTION_0_0();
  v2[51] = swift_getAssociatedTypeWitness();
  v14 = sub_22ABDFA10();
  v2[52] = v14;
  v2[53] = *(_QWORD *)(v14 - 8);
  v2[54] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AB0C578()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[37];
  v2 = v0[34];
  v3 = v0[15];
  v4 = v0[16];
  v6 = v0[12];
  v5 = v0[13];
  sub_22ABDEEB8();
  v7 = (_QWORD *)swift_task_alloc();
  *v7 = v4;
  v7[1] = v2;
  v7[2] = v6;
  v7[3] = v3;
  v7[4] = v1;
  v7[5] = v5;
  v8 = v1;
  v9 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v10 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v10[2] = v4;
  v10[3] = v2;
  v10[4] = v6;
  v10[5] = v3;
  v10[6] = v8;
  v10[7] = v5;
  v10[8] = v9;
  OUTLINED_FUNCTION_76_6();
}

uint64_t sub_22AB0C650()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v14;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t (*v18)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  sub_22ABDFBC0();
  swift_release();
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
  OUTLINED_FUNCTION_23_17(v17);
  sub_22ABDEEB8();
  v7 = (_QWORD *)swift_task_alloc();
  v8 = v1;
  *v7 = v1;
  v7[1] = v6;
  v7[2] = v5;
  v7[3] = v0;
  v9 = v0;
  v10 = v3;
  v7[4] = v3;
  v7[5] = v4;
  v11 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v12 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v12[2] = v8;
  v12[3] = v6;
  v12[4] = v5;
  v12[5] = v9;
  v12[6] = v10;
  v12[7] = v4;
  v12[8] = v11;
  sub_22ABDFBC0();
  swift_release();
  ((void (*)())v17)();
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v9 + 40));
  v18 = v13;
  v14 = (_QWORD *)swift_task_alloc();
  v2[55] = v14;
  *v14 = v2;
  v14[1] = sub_22AB0C79C;
  return v18(v2[45], v2[8], v2[9], v2[10], v2[12], v2[13], v2[16], v2[15]);
}

uint64_t sub_22AB0C79C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 448) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AB0C7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 448);
  sub_22ABDF1DC();
  if (!v2)
  {
    *(_QWORD *)(v0 + 456) = swift_task_alloc();
    OUTLINED_FUNCTION_52_3();
  }
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v0 + 344));
  OUTLINED_FUNCTION_54_19();
  OUTLINED_FUNCTION_57_6(v3);
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  OUTLINED_FUNCTION_80_4();
  OUTLINED_FUNCTION_79_4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AB0C8D0(uint64_t a1)
{
  uint64_t **v1;
  uint64_t *v2;

  *v1 = v2;
  v1[1] = (uint64_t *)sub_22AB0C91C;
  return Transformer.applied<A>(to:eventHandler:)(v2[54], v2[9], v2[10], v2[42], v2[52], v2[17], a1);
}

uint64_t sub_22AB0C91C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 464) = a1;
  *(_QWORD *)(v3 + 472) = v1;
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_22AB0C978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(v0 + 472);
  sub_22ABDF1DC();
  if (!v2)
  {
    v6 = *(_QWORD *)(v0 + 464);
    v17 = *(_QWORD *)(v0 + 296);
    v7 = *(_QWORD *)(v0 + 272);
    v8 = *(_QWORD *)(v0 + 232);
    v9 = *(_QWORD *)(v0 + 184);
    v12 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 96);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 280) + 16))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 112) + *(int *)(*(_QWORD *)(v0 + 88) + 52), v7);
    *(_QWORD *)(v0 + 48) = v6;
    sub_22ABE0178();
    OUTLINED_FUNCTION_3_8();
    sub_22ABDEEB8();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v9);
    v10 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v10[2] = v14;
    v10[3] = v7;
    v10[4] = v13;
    v10[5] = v16;
    v10[6] = v17;
    v10[7] = v15;
    v11 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v11[2] = v14;
    v11[3] = v7;
    v11[4] = v13;
    v11[5] = v16;
    v11[6] = v17;
    v11[7] = v15;
    v11[8] = sub_22AB0F664;
    v11[9] = v10;
    OUTLINED_FUNCTION_106();
  }
  v3 = *(_QWORD *)(v0 + 344);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_54_19();
  OUTLINED_FUNCTION_57_6(v4);
  OUTLINED_FUNCTION_51_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_60_6();
  OUTLINED_FUNCTION_84_3();
  OUTLINED_FUNCTION_47_5();
  OUTLINED_FUNCTION_48_8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AB0CB80()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t (*v9)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD);

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_48_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v0 + 40));
  v9 = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v1[60] = v5;
  v6 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], *(_QWORD *)(v3 - 88));
  *v5 = v1;
  v5[1] = sub_22AB0CC28;
  return v9(v1[41], v1[33], v1[9], v1[10], v1[31], v6, v1[34], v1[37]);
}

uint64_t sub_22AB0CC28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 280);
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v2 + 256));
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AB0CCB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0[53];
  v2 = v0[54];
  v3 = v0[45];
  v5 = v0[43];
  v4 = v0[44];
  v7 = v0[41];
  v6 = v0[42];
  v8 = v0[40];
  v10 = v0[39];
  v11 = v0[52];
  v9 = v0[38];
  v12 = v0[7];
  OUTLINED_FUNCTION_30_0(v0[46]);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v11);
  OUTLINED_FUNCTION_37_7(v4, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v7, v9);
  swift_getAssociatedConformanceWitness();
  ComposedTransformer.init(_:_:)(v4, v6, v12);
}

uint64_t sub_22AB0CDA8()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_85_3();
  OUTLINED_FUNCTION_60_6();
  OUTLINED_FUNCTION_84_3();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22AB0CE04()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_53_9();
  OUTLINED_FUNCTION_4_71();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AB0CE68()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_53_9();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v1 + 344));
  OUTLINED_FUNCTION_4_71();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AB0CED8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_53_9();
  OUTLINED_FUNCTION_30_0(*(_QWORD *)(v1 + 344));
  OUTLINED_FUNCTION_4_71();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_82_3();
  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_11(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_22AB0CF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v16 - v8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v16 - v12, a1, v10, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, AssociatedTypeWitness);
  return AnnotatedFeature.init(feature:annotation:)((uint64_t)v13, (uint64_t)v9, v10, AssociatedTypeWitness, a3);
}

uint64_t sub_22AB0D0AC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

void sub_22AB0D1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_53_9();
  v27[21] = a26;
  v27[22] = v26;
  v27[19] = v28;
  v27[20] = a25;
  v27[17] = v29;
  v27[18] = v30;
  v27[15] = v31;
  v27[16] = v32;
  v27[13] = v33;
  v27[14] = v34;
  v27[12] = v35;
  v27[23] = *(_QWORD *)(v29 + 32);
  v27[24] = *(_QWORD *)(v29 + 16);
  OUTLINED_FUNCTION_75_5();
  v27[25] = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v27[26] = sub_22ABDF0F8();
  v27[27] = OUTLINED_FUNCTION_75_5();
  v27[28] = OUTLINED_FUNCTION_85_5();
  OUTLINED_FUNCTION_52_3();
}

void sub_22AB0D2AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v2[29] = a1;
  v5 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], v3);
  v2[30] = v5;
  v2[2] = v1;
  v2[3] = v3;
  v2[4] = a1;
  v2[31] = OUTLINED_FUNCTION_71_6(v5);
  OUTLINED_FUNCTION_86_4();
}

void sub_22AB0D2EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[32] = a1;
  v5 = OUTLINED_FUNCTION_91_3();
  v2[33] = v5;
  v2[34] = *(_QWORD *)(v5 - 8);
  v2[35] = OUTLINED_FUNCTION_0_0();
  v2[36] = *(_QWORD *)(v1 - 8);
  v2[37] = OUTLINED_FUNCTION_0_0();
  v2[38] = type metadata accessor for AnnotatedFeature(255, v3, v4, v6);
  v7 = OUTLINED_FUNCTION_85_5();
  v2[39] = v7;
  v2[40] = *(_QWORD *)(v7 - 8);
  v2[41] = OUTLINED_FUNCTION_0_0();
  v2[42] = OUTLINED_FUNCTION_85_5();
  OUTLINED_FUNCTION_116_2();
}

void sub_22AB0D380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[43] = a1;
  v3[6] = v2;
  v3[7] = v4;
  v3[8] = v1;
  v3[9] = a1;
  v3[44] = sub_22ABDF7E8();
  OUTLINED_FUNCTION_52_3();
}

uint64_t sub_22AB0D3B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[45] = a1;
  OUTLINED_FUNCTION_115();
  v6 = sub_22ABDF7B8();
  v2[46] = v6;
  v2[47] = *(_QWORD *)(v6 - 8);
  v2[48] = OUTLINED_FUNCTION_0_0();
  v2[49] = *(_QWORD *)(v1 - 8);
  v2[50] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_115();
  v7 = sub_22ABDFA10();
  v2[51] = v7;
  v2[52] = *(_QWORD *)(v7 - 8);
  v2[53] = OUTLINED_FUNCTION_0_0();
  v8 = *(_QWORD *)(v4 + 24);
  v2[54] = v8;
  v2[55] = *(_QWORD *)(v8 - 8);
  v2[56] = OUTLINED_FUNCTION_0_0();
  v2[57] = *(_QWORD *)(v4 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[58] = AssociatedTypeWitness;
  v2[59] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[60] = OUTLINED_FUNCTION_23_0();
  v2[61] = OUTLINED_FUNCTION_38_0();
  v2[62] = OUTLINED_FUNCTION_38_0();
  v10 = swift_checkMetadataState();
  v2[63] = v10;
  v2[64] = *(_QWORD *)(v10 - 8);
  v2[65] = swift_task_alloc();
  v2[66] = swift_task_alloc();
  v2[67] = *(_QWORD *)(v3 - 8);
  v2[68] = OUTLINED_FUNCTION_0_0();
  v11 = sub_22ABDF7B8();
  v2[69] = v11;
  v2[70] = *(_QWORD *)(v11 - 8);
  v2[71] = OUTLINED_FUNCTION_0_0();
  v2[72] = swift_getAssociatedTypeWitness();
  v12 = sub_22ABDFA10();
  v2[73] = v12;
  v2[74] = *(_QWORD *)(v12 - 8);
  v2[75] = OUTLINED_FUNCTION_0_0();
  v2[76] = *(_QWORD *)(v5 - 8);
  v2[77] = OUTLINED_FUNCTION_0_0();
  v13 = OUTLINED_FUNCTION_91_3();
  v2[78] = v13;
  v2[79] = *(_QWORD *)(v13 - 8);
  v2[80] = OUTLINED_FUNCTION_0_0();
  v14 = OUTLINED_FUNCTION_85_5();
  v2[81] = v14;
  v2[82] = *(_QWORD *)(v14 - 8);
  v2[83] = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_50_0();
  return swift_task_switch();
}

void sub_22AB0D5AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = v0[57];
  v2 = v0[54];
  v3 = v0[23];
  v4 = v0[24];
  v5 = v0[20];
  v6 = v0[21];
  v7 = v0[18];
  v8 = v0[19];
  sub_22ABDEEB8();
  v9 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  *v9 = v4;
  v9[1] = v2;
  v9[2] = v7;
  v9[3] = v8;
  v9[4] = v3;
  v9[5] = v1;
  v9[6] = v5;
  v9[7] = v6;
  v11 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v10 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v10[2] = v4;
  v10[3] = v2;
  v10[4] = v7;
  v10[5] = v8;
  v10[6] = v3;
  v10[7] = v1;
  v10[8] = v5;
  v10[9] = v6;
  v10[10] = v11;
  OUTLINED_FUNCTION_76_6();
}

void sub_22AB0D6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);

  sub_22ABDFBC0();
  swift_release();
  v44 = *(uint64_t (**)(uint64_t, uint64_t))(a16 + 8);
  OUTLINED_FUNCTION_23_17(v44);
  v30 = v27;
  sub_22ABDEEB8();
  v31 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v32 = v26;
  v33 = *(_QWORD *)(v29 + 40);
  *v31 = v26;
  v31[1] = v33;
  *(_QWORD *)(v29 - 96) = v30;
  v31[2] = v30;
  v31[3] = a23;
  v31[4] = a22;
  v31[5] = v28;
  v42 = v28;
  v34 = *(_QWORD *)(v29 - 104);
  v31[6] = v25;
  v31[7] = v34;
  v43 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v35 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v35[2] = v32;
  v35[3] = v33;
  v35[4] = v30;
  v35[5] = a23;
  v35[6] = a22;
  v35[7] = v28;
  v36 = v25;
  v35[8] = v25;
  v35[9] = v34;
  v35[10] = v43;
  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  v44(a24, a25);
  sub_22ABDEEB8();
  v37 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v38 = *(_QWORD *)(v29 + 40);
  *v37 = v32;
  v37[1] = v38;
  v39 = *(_QWORD *)(v29 - 96);
  v37[2] = v39;
  v37[3] = a23;
  v37[4] = a22;
  v37[5] = v42;
  v37[6] = v25;
  v37[7] = v34;
  v40 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v41 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v41[2] = v32;
  v41[3] = v38;
  v41[4] = v39;
  v41[5] = a23;
  v41[6] = a22;
  v41[7] = v42;
  v41[8] = v36;
  v41[9] = *(_QWORD *)(v29 - 104);
  v41[10] = v40;
  OUTLINED_FUNCTION_76_6();
}

uint64_t sub_22AB0D878()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_22ABDFBC0();
  swift_release();
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
  *(v5 - 16) = v6;
  OUTLINED_FUNCTION_23_17(v6);
  v7 = v3;
  sub_22ABDEEB8();
  v8 = (_QWORD *)OUTLINED_FUNCTION_79_0();
  v9 = v5[5];
  *v8 = v27;
  v8[1] = v9;
  v8[2] = *(v5 - 12);
  v8[3] = v4;
  v8[4] = v1;
  v8[5] = v2;
  v8[6] = v29;
  v8[7] = v7;
  v10 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_28_0();
  v11 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v11[2] = v27;
  v11[3] = v9;
  v12 = *(v5 - 11);
  v11[4] = *(v5 - 12);
  v11[5] = v4;
  v11[6] = v1;
  v11[7] = v2;
  v13 = *(v5 - 13);
  v11[8] = v29;
  v11[9] = v13;
  v11[10] = v10;
  sub_22ABDFBC0();
  swift_release();
  ((void (*)(uint64_t))*(v5 - 16))(v12);
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v1 + 48));
  v5[5] = v14;
  v15 = (_QWORD *)swift_task_alloc();
  v0[84] = v15;
  *v15 = v0;
  v15[1] = sub_22AB0D9EC;
  v16 = v0[66];
  v17 = v0[23];
  v18 = v0[21];
  v19 = v0[19];
  v20 = v0[20];
  v21 = v0[18];
  v22 = v0[15];
  v23 = v0[16];
  v24 = v0[13];
  v25 = v0[14];
  v5[3] = v0[24];
  v5[4] = v17;
  v5[2] = v18;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v5[5])(v16, v24, v25, v22, v23, v21, v19, v20);
}

uint64_t sub_22AB0D9EC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_1();
  *v2 = *v1;
  *(_QWORD *)(v3 + 680) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

#error "22AB0DA7C: call analysis failed (funcsize=48)"

uint64_t sub_22AB0DB00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *v0 = v1;
  v0[1] = sub_22AB0DB24;
  OUTLINED_FUNCTION_64_15();
  return OUTLINED_FUNCTION_32_11(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_22AB0DB24(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 696) = a1;
  *(_QWORD *)(v3 + 704) = v1;
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_0_1();
}

#error "22AB0DBD8: call analysis failed (funcsize=53)"

uint64_t sub_22AB0DC5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *v0 = v1;
  v0[1] = sub_22AB0DC80;
  OUTLINED_FUNCTION_64_15();
  return OUTLINED_FUNCTION_32_11(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_22AB0DC80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 720) = a1;
  *(_QWORD *)(v3 + 728) = v1;
  OUTLINED_FUNCTION_62_2();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

uint64_t sub_22AB0DCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 728);
  sub_22ABDF1DC();
  if (!v1)
  {
    v10 = *(_QWORD *)(v0 + 696);
    v22 = *(_QWORD *)(v0 + 456);
    v11 = *(_QWORD *)(v0 + 432);
    v17 = *(_QWORD *)(v0 + 392);
    v20 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 184);
    v21 = *(_QWORD *)(v0 + 192);
    v15 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 440) + 16))(*(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 176) + *(int *)(*(_QWORD *)(v0 + 136) + 52), v11);
    *(_QWORD *)(v0 + 80) = v10;
    sub_22ABE0178();
    swift_bridgeObjectRelease();
    sub_22ABDEEB8();
    OUTLINED_FUNCTION_23_17(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    v13 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v13[2] = v21;
    v13[3] = v11;
    v13[4] = v16;
    v13[5] = v19;
    v13[6] = v12;
    v13[7] = v22;
    v13[8] = v15;
    v13[9] = v20;
    v14 = (_QWORD *)OUTLINED_FUNCTION_33_2();
    v14[2] = v21;
    v14[3] = v11;
    v14[4] = v16;
    v14[5] = v19;
    v14[6] = v12;
    v14[7] = v22;
    v14[8] = v15;
    v14[9] = v20;
    v14[10] = sub_22AB0F590;
    v14[11] = v13;
    OUTLINED_FUNCTION_86_4();
  }
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 512);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_48_2(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v4 = *(_QWORD *)(v0 + 664);
  v5 = *(_QWORD *)(v0 + 656);
  v18 = *(_QWORD *)(v0 + 648);
  v6 = *(_QWORD *)(v0 + 608);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 592);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 536) + 8))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 224));
  OUTLINED_FUNCTION_48_2(v7, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_23_17(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v18);
  OUTLINED_FUNCTION_46_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_11_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_174();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22AB0E06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_63_17(a25);
  *(_QWORD *)(v27 + 88) = a27;
  sub_22ABE0178();
  OUTLINED_FUNCTION_3_8();
  sub_22ABDEEB8();
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(a26 + 8));
  v33 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v34 = *(_QWORD *)(v32 - 112);
  v33[2] = v34;
  v33[3] = v29;
  v35 = *(_QWORD *)(v32 - 136);
  v36 = *(_QWORD *)(v32 - 128);
  v33[4] = v30;
  v33[5] = v35;
  v33[6] = v36;
  v33[7] = v28;
  v37 = *(_QWORD *)(v32 - 120);
  v33[8] = v31;
  v33[9] = v37;
  v38 = (_QWORD *)OUTLINED_FUNCTION_33_2();
  v38[2] = v34;
  v38[3] = v29;
  v38[4] = v30;
  v38[5] = v35;
  v39 = *(_QWORD *)(v32 - 104);
  v38[6] = v36;
  v38[7] = v39;
  v38[8] = v31;
  v38[9] = v37;
  v38[10] = sub_22AB0F590;
  v38[11] = v33;
  OUTLINED_FUNCTION_86_4();
}

uint64_t sub_22AB0E154()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_22ABDFBC0();
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_63_17(*(v2 - 20));
  OUTLINED_FUNCTION_46_4(*(_QWORD *)(v1 + 48));
  *(v2 - 11) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  v0[92] = v4;
  v5 = MEMORY[0x24BEE2B40];
  v6 = MEMORY[0x22E2E4D80](MEMORY[0x24BEE2B40], *(v2 - 18));
  v7 = MEMORY[0x22E2E4D80](v5, *(v2 - 19));
  *v4 = v0;
  v4[1] = sub_22AB0E21C;
  v8 = v0[61];
  v9 = v0[57];
  v10 = v0[53];
  v11 = v0[51];
  v12 = v0[41];
  v13 = v0[39];
  v14 = v0[15];
  v15 = v0[16];
  v2[3] = v0[54];
  v2[4] = v9;
  v2[2] = v7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(v2 - 11))(v8, v10, v12, v14, v15, v11, v13, v6);
}

uint64_t sub_22AB0E21C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  (*v1)[93] = v0;
  swift_task_dealloc();
  v3 = v2[55];
  v4 = v2[53];
  v5 = v2[51];
  v6 = v2[52];
  OUTLINED_FUNCTION_30_0(v2[40]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  OUTLINED_FUNCTION_32_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_4();
}

void sub_22AB0E2C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = v0[83];
  v12 = v0[82];
  v13 = v0[81];
  v1 = v0[77];
  v2 = v0[76];
  v3 = v0[75];
  v4 = v0[74];
  v5 = v0[73];
  v19 = v0[66];
  v16 = v0[65];
  v11 = v0[64];
  v6 = v0[62];
  v14 = v0[63];
  v20 = v0[61];
  v7 = v0[59];
  v17 = v0[60];
  v8 = v0[58];
  v9 = v0[42];
  v18 = v0[12];
  (*(void (**)(void))(v0[67] + 8))();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v9);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v13);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v10(v6, v20, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v16, v19, v14);
  v10(v17, v6, v8);
  swift_getAssociatedConformanceWitness();
  ComposedTransformer.init(_:_:)(v16, v14, v18);
}

uint64_t sub_22AB0E470()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_39_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_48_8();
  OUTLINED_FUNCTION_12_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_174();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

#error "22AB0E530: call analysis failed (funcsize=32)"

#error "22AB0E5B4: call analysis failed (funcsize=33)"

#error "22AB0E638: call analysis failed (funcsize=33)"

#error "22AB0E6BC: call analysis failed (funcsize=33)"

uint64_t sub_22AB0E714(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

void sub_22AB0E80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t AssociatedTypeWitness;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  OUTLINED_FUNCTION_4_4();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = OUTLINED_FUNCTION_60_8();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&a9 - v30;
  OUTLINED_FUNCTION_60_8();
  OUTLINED_FUNCTION_83_15();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v34 = (char *)&a9 - v33;
  OUTLINED_FUNCTION_37_7((uint64_t)&a9 - v33, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16));
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v31, v23, v28);
  AnnotatedFeature.init(feature:annotation:)((uint64_t)v34, (uint64_t)v31, AssociatedTypeWitness, v28, v27);
  OUTLINED_FUNCTION_3();
}

uint64_t sub_22AB0E940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 32) + 56))();
  if (!v3)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ComposedTransformer();
  }
  return result;
}

uint64_t sub_22AB0EA8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v21;
  uint64_t result;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a3;
  v5 = a2[5];
  v34 = a2[3];
  v35 = v5;
  v6 = OUTLINED_FUNCTION_119_1();
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v26 - v9;
  v10 = a2[4];
  v11 = a2[2];
  v12 = OUTLINED_FUNCTION_119_1();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - v18;
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 64);
  v33 = a1;
  v21 = v36;
  result = v20(a1, v11, v10, v17);
  if (!v21)
  {
    v26 = v11;
    v27 = v15;
    v36 = v12;
    v23 = v32;
    (*(void (**)(uint64_t, uint64_t))(v35 + 64))(v33, v34);
    v24 = (uint64_t)v27;
    v25 = v36;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v27, v19, v36);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v28, v23, v30);
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    ComposedTransformer.init(_:_:)(v24, v25, v31);
  }
  return result;
}

void sub_22AB0ECC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_22AA16B30;
  sub_22AB0C288(a1, a2, a3, a4, a7, a5, a6);
}

void sub_22AB0ED60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;

  v34 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v26 + 16) = v34;
  *v34 = v26;
  v34[1] = sub_22A9AFDDC;
  sub_22AB0D1A4(a1, a2, a3, a4, a5, v37, a6, a7, a8, v36, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

uint64_t sub_22AB0EE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22AB0E940(a1, a2, a3);
}

uint64_t sub_22AB0EE24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AB0EA8C(a1, a2, a3);
}

void Estimator.appending<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_4_4();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_23_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v21, v20, v27);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v29, v25);
  sub_22AB0C0C4(v21, v27, v31);
}

void sub_22AB0EEF4()
{
  OUTLINED_FUNCTION_3();
}

void sub_22AB0EF24()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_4_4();
  v19 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_23_1();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_37_7((uint64_t)v16, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v1, v12, v8);
  v19(v16, v1, v10, v8, v6, v4);
  OUTLINED_FUNCTION_3();
}

void sub_22AB0EFF4()
{
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_80_5();
  OUTLINED_FUNCTION_29_31();
}

void sub_22AB0F044()
{
  OUTLINED_FUNCTION_86_4();
}

void sub_22AB0F054()
{
  OUTLINED_FUNCTION_65_19();
}

void type metadata accessor for ComposedSupervisedEstimator()
{
  JUMPOUT(0x22E2E4CF0);
}

void sub_22AB0F084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for TransformerToEstimatorAdaptor(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_86_4();
}

void sub_22AB0F0E4()
{
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_29_31();
}

void sub_22AB0F110()
{
  OUTLINED_FUNCTION_86_4();
}

void sub_22AB0F120()
{
  OUTLINED_FUNCTION_65_19();
}

void sub_22AB0F144()
{
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_80_5();
  OUTLINED_FUNCTION_29_31();
}

void sub_22AB0F194()
{
  OUTLINED_FUNCTION_86_4();
}

void sub_22AB0F1A4()
{
  OUTLINED_FUNCTION_65_19();
}

void sub_22AB0F1C8()
{
  OUTLINED_FUNCTION_65_19();
}

uint64_t sub_22AB0F1FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_22AB0F2D8 + 4 * byte_22ABF9FF0[v21 - 1]))();
}

void sub_22AB0F34C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_22AB0F540()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22AB0F560()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AB0F584()
{
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_22AB0F594()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AB0F5BC()
{
  return OUTLINED_FUNCTION_2_17();
}

#error "22AB0F5E8: call analysis failed (funcsize=12)"

uint64_t sub_22AB0F5F8(uint64_t a1)
{
  uint64_t v1;

  return sub_22AB0E714(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 80));
}

uint64_t sub_22AB0F634()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AB0F658()
{
  return OUTLINED_FUNCTION_2_17();
}

uint64_t sub_22AB0F664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22AB0CF48(a1, a2, a3);
}

uint64_t sub_22AB0F674()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22AB0F698(uint64_t a1)
{
  uint64_t v1;

  return sub_22AB0D0AC(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 64));
}

uint64_t OUTLINED_FUNCTION_0_77@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 80) = a1;
  v3 = v1[68];
  v4 = v1[67];
  v5 = v1[35];
  *(_QWORD *)(v2 - 96) = v1[37];
  *(_QWORD *)(v2 - 88) = v5;
  return (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 8))(v3, v1[28]);
}

uint64_t OUTLINED_FUNCTION_3_84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 88) = v0;
  v3 = v1[68];
  v4 = v1[67];
  *(_QWORD *)(v2 - 96) = v1[35];
  return (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 8))(v3, v1[28]);
}

uint64_t OUTLINED_FUNCTION_4_71()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[46] + 8))(v0[47], v0[20]);
}

uint64_t OUTLINED_FUNCTION_16_54()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[64] + 8))(v0[66], v0[63]);
}

uint64_t OUTLINED_FUNCTION_21_54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void OUTLINED_FUNCTION_29_31()
{
  type metadata accessor for EstimatorToSupervisedAdaptor();
}

uint64_t OUTLINED_FUNCTION_63_17@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

void OUTLINED_FUNCTION_65_19()
{
  type metadata accessor for ComposedSupervisedEstimator();
}

void OUTLINED_FUNCTION_69_14()
{
  type metadata accessor for ComposedSupervisedEstimator();
}

uint64_t OUTLINED_FUNCTION_83_15()
{
  return swift_getAssociatedConformanceWitness();
}

void type metadata accessor for FeatureDescriptor()
{
  OUTLINED_FUNCTION_24_2();
}

void sub_22AB0F904(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_22AB4CE30();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x22E2E3A9C](v3, a1);
      else
        v4 = *(id *)(a1 + 8 * v3 + 32);
      v5 = v4;
      v6 = objc_msgSend(v4, sel_integerValue);

      v7 = *(_QWORD *)(v8 + 16);
      if (v7 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_22AB4CE30();
      ++v3;
      *(_QWORD *)(v8 + 16) = v7 + 1;
      *(_QWORD *)(v8 + 8 * v7 + 32) = v6;
      if (v2 == v3)
        return;
    }
    __break(1u);
LABEL_15:
    sub_22ABDEAEC();
    v2 = sub_22ABDFB60();
    OUTLINED_FUNCTION_2_1();
  }
}

uint64_t sub_22AB0FA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t result;
  char *v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, uint64_t *, uint64_t);
  uint64_t v162;
  uint64_t *v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(void);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t (*v209)(void);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t (*v213)(_QWORD, uint64_t);
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  unint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t (*v243)(uint64_t, _QWORD);
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void (*v256)(uint64_t, uint64_t);
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  void (*v265)(unint64_t, uint64_t, uint64_t);
  uint64_t v266;
  char v267;
  unint64_t v268;
  unint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t (*v273)(uint64_t, _QWORD);
  unint64_t v274;
  char v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t (*v281)(uint64_t, _QWORD);
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t *v288;
  id *v289;
  id v290;
  id v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void (*v299)(unint64_t, uint64_t, uint64_t);
  uint64_t v300;
  char v301;
  unint64_t v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t (*v307)(uint64_t, _QWORD);
  id v308;
  void *v309;
  id v310;
  unint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  _QWORD *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  id v319;
  char v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  _QWORD v325[2];
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char v353[8];
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  _QWORD v362[2];
  uint64_t v363;
  uint64_t v364;
  char v365[8];
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  char v369[8];
  _QWORD v370[3];
  uint64_t v371;
  uint64_t v372;
  uint64_t v373[2];
  uint64_t v374;
  uint64_t v375;
  _QWORD v376[2];
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  char v381[8];
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  unint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  _QWORD v397[2];
  uint64_t v398;
  char v399[8];
  uint64_t v400;
  char v401[8];
  uint64_t v402;
  unint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;

  v398 = a3;
  v326 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB20);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B0DB10);
  OUTLINED_FUNCTION_40_1(v7, (uint64_t)&v359);
  v333 = v8;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8550);
  OUTLINED_FUNCTION_40_1(v12, (uint64_t)v370);
  v340 = v13;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v16);
  v327 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A68);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13990);
  OUTLINED_FUNCTION_40_1(v19, (uint64_t)&v368);
  v341 = v20;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8560);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v28);
  v330 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139B8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v30);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139C0);
  OUTLINED_FUNCTION_40_1(v31, (uint64_t)v381);
  v352 = v32;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v35);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8568);
  OUTLINED_FUNCTION_40_1(v36, (uint64_t)&v386);
  v356 = v37;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v40);
  v332 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A50);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v42);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139A0);
  OUTLINED_FUNCTION_40_1(v43, (uint64_t)&v384);
  v357 = v44;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8570);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v52);
  v342 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v54);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139D0);
  OUTLINED_FUNCTION_40_1(v55, (uint64_t)&v371);
  v348 = v56;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v58);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v59);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B123A8);
  OUTLINED_FUNCTION_40_1(v60, (uint64_t)v397);
  v373[1] = v61;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v62);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v64);
  v347 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B17E68);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v66);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B17E70);
  OUTLINED_FUNCTION_40_1(v67, (uint64_t)&v402);
  v375 = v68;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v69);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v70);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B16E40);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v72);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v73);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v74);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v75);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v76);
  v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B17E78);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v77);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v78);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B17E80);
  OUTLINED_FUNCTION_40_1(v79, (uint64_t)&v391);
  v366 = v80;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v81);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x24BDAC7A8](v82);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v83);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8578);
  OUTLINED_FUNCTION_40_1(v84, (uint64_t)&v395);
  v388 = v85;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v86);
  OUTLINED_FUNCTION_87();
  v387 = v87;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v88);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v89);
  v364 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B13A38);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v90);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v91);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139B0);
  v93 = *(_QWORD *)(v92 - 8);
  v390 = v92;
  v391 = v93;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v94);
  OUTLINED_FUNCTION_87();
  v389 = v95;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v96);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v97);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E8580);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v98);
  OUTLINED_FUNCTION_87();
  v386 = v99;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v100);
  OUTLINED_FUNCTION_12_0();
  v385 = v101;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v102);
  OUTLINED_FUNCTION_12_0();
  v384 = v103;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v104);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v105);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139E8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v107);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v108);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139F0);
  OUTLINED_FUNCTION_40_1(v109, (uint64_t)&v404);
  v393 = v110;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v111);
  OUTLINED_FUNCTION_87();
  v392 = v112;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v113);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v114);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B17E88);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v116);
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_39_1(v117);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B17E90);
  OUTLINED_FUNCTION_40_1(v118, (uint64_t)&v406);
  v395 = v119;
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v120);
  OUTLINED_FUNCTION_87();
  v394 = v121;
  OUTLINED_FUNCTION_4_0();
  MEMORY[0x24BDAC7A8](v122);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_39_1(v123);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139D8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x24BDAC7A8](v125);
  v127 = (char *)v325 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_255B139E0);
  OUTLINED_FUNCTION_55_7();
  v130 = MEMORY[0x24BDAC7A8](v129);
  v132 = (_QWORD *)((char *)v325 - ((v131 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v130);
  v134 = (char *)v325 - v133;
  swift_bridgeObjectRelease();
  v396 = sub_22ABDD3F4();
  v397[1] = v135;
  v398 = a1;
  sub_22ABDD3E8();
  if (swift_dynamicCastMetatype()
    || OUTLINED_FUNCTION_77_7()
    || OUTLINED_FUNCTION_77_7()
    || OUTLINED_FUNCTION_77_7()
    || OUTLINED_FUNCTION_77_7()
    || OUTLINED_FUNCTION_77_7())
  {
    goto LABEL_4;
  }
  v325[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85D8);
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_25_38();
    OUTLINED_FUNCTION_88_7(*(uint64_t (**)(void))(v3 + 16));
    sub_22AA2545C(&qword_255B13A18, &qword_255B139E0, MEMORY[0x24BDF5F98]);
    sub_22ABDEE58();
    v138 = &v127[*(int *)(v124 + 36)];
    sub_22AA2545C(&qword_255B13A20, &qword_255B139E0, MEMORY[0x24BDF5FA0]);
    v394 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v139 = *(_QWORD *)v138;
      sub_22ABDF38C();
      if (v139 == v400)
        break;
      sub_22ABDF464();
      v141 = *v140;
      sub_22ABDEAEC();
      OUTLINED_FUNCTION_27_25();
      OUTLINED_FUNCTION_99_4();
      sub_22ABDF398();
      (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v132, v128);
      if (v141)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22AA365CC();
          v394 = v145;
        }
        v142 = v394;
        v143 = *(_QWORD *)(v394 + 16);
        v144 = v143 + 1;
        if (v143 >= *(_QWORD *)(v394 + 24) >> 1)
        {
          v393 = v143 + 1;
          sub_22AA365CC();
          v144 = v393;
          v142 = v146;
        }
        *(_QWORD *)(v142 + 16) = v144;
        v394 = v142;
        *(_QWORD *)(v142 + 8 * v143 + 32) = v141;
      }
    }
    sub_22A9CF82C((uint64_t)v127, &qword_255B139D8);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v134, v128);
    if (*(_QWORD *)(v394 + 16))
    {
      sub_22ABDEAEC();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_32();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v115 = v396;
    goto LABEL_48;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B101C8);
  if (OUTLINED_FUNCTION_8_38())
  {
    OUTLINED_FUNCTION_6_85();
    v147 = v382;
    OUTLINED_FUNCTION_90_3(v394, (uint64_t)v132);
    OUTLINED_FUNCTION_28_29(&qword_255B17EB8, v148, MEMORY[0x24BDF5F98]);
    v149 = v377;
    sub_22ABDEE58();
    v150 = (uint64_t *)(v149 + *(int *)(v115 + 36));
    OUTLINED_FUNCTION_28_29(&qword_255B17EC0, v151, MEMORY[0x24BDF5FA0]);
    v152 = MEMORY[0x24BEE4AF8];
    v115 = v396;
    while (1)
    {
      v153 = *v150;
      OUTLINED_FUNCTION_41_26();
      OUTLINED_FUNCTION_61_18();
      if (v155)
        break;
      OUTLINED_FUNCTION_46_24();
      OUTLINED_FUNCTION_17_51();
      OUTLINED_FUNCTION_27_25();
      v156 = v394;
      OUTLINED_FUNCTION_90_3(v394, v149);
      OUTLINED_FUNCTION_49_20();
      (*(void (**)(uint64_t, uint64_t))(v395 + 8))(v156, v147);
      if (v153)
      {
        if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
        {
          OUTLINED_FUNCTION_12_61();
          sub_22AA365B8();
          v152 = v159;
        }
        OUTLINED_FUNCTION_45_21();
        if (v158)
        {
          OUTLINED_FUNCTION_14_60(v157);
          sub_22AA365B8();
          v152 = v160;
        }
        OUTLINED_FUNCTION_44_26();
        v147 = v382;
      }
    }
    OUTLINED_FUNCTION_84_13(v154, &qword_255B17E88);
    (*(void (**)(uint64_t, uint64_t))(v395 + 8))(v383, v147);
LABEL_45:
    if (*(_QWORD *)(v152 + 16))
    {
      OUTLINED_FUNCTION_42_21();
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_29_32();
    }
    else
    {
      OUTLINED_FUNCTION_23();
    }
LABEL_48:
    v173 = OUTLINED_FUNCTION_10_59();
    OUTLINED_FUNCTION_0_78(v173);
    return v115;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B100D8);
  if (OUTLINED_FUNCTION_8_38())
  {
    OUTLINED_FUNCTION_6_85();
    v161 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v393 + 16);
    v161(v392, v132, v378);
    OUTLINED_FUNCTION_28_29(&qword_255B13A28, v162, MEMORY[0x24BDF5F98]);
    v163 = (uint64_t *)v376[0];
    sub_22ABDEE58();
    v164 = (uint64_t *)((char *)v163 + *(int *)(v106 + 36));
    OUTLINED_FUNCTION_28_29(&qword_255B13A30, v165, MEMORY[0x24BDF5FA0]);
    v152 = MEMORY[0x24BEE4AF8];
    v115 = v396;
LABEL_36:
    v166 = v378;
    while (1)
    {
      v167 = *v164;
      OUTLINED_FUNCTION_41_26();
      OUTLINED_FUNCTION_61_18();
      if (v155)
        break;
      OUTLINED_FUNCTION_46_24();
      OUTLINED_FUNCTION_17_51();
      OUTLINED_FUNCTION_27_25();
      v161(v392, v163, v166);
      OUTLINED_FUNCTION_49_20();
      OUTLINED_FUNCTION_37_31(v393);
      if (v167)
      {
        if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
        {
          OUTLINED_FUNCTION_12_61();
          sub_22AA365A4();
          v152 = v171;
        }
        v170 = *(_QWORD *)(v152 + 16);
        v169 = *(_QWORD *)(v152 + 24);
        if (v170 >= v169 >> 1)
        {
          OUTLINED_FUNCTION_14_60(v169);
          sub_22AA365A4();
          v152 = v172;
        }
        *(_QWORD *)(v152 + 16) = v170 + 1;
        *(_QWORD *)(v152 + 8 * v170 + 32) = v167;
        goto LABEL_36;
      }
    }
    OUTLINED_FUNCTION_84_13(v168, &qword_255B139E8);
    (*(void (**)(_QWORD, uint64_t))(v393 + 8))(v376[1], v166);
    goto LABEL_45;
  }
  v174 = v370[0];
  if (swift_dynamicCastMetatype())
  {
    OUTLINED_FUNCTION_105_6();
    OUTLINED_FUNCTION_25_38();
    OUTLINED_FUNCTION_20_26();
    OUTLINED_FUNCTION_88_7(v175);
    OUTLINED_FUNCTION_37_18(&qword_255B13A40, v176, MEMORY[0x24BDF5F98]);
    v115 = v380;
    sub_22ABDEE58();
    v177 = v115 + *(int *)(v364 + 36);
    OUTLINED_FUNCTION_37_18(&qword_255B13A48, v178, MEMORY[0x24BDF5FA0]);
    OUTLINED_FUNCTION_35_25();
    OUTLINED_FUNCTION_104_4();
    if (!v155)
    {
      v192 = MEMORY[0x24BEE4AF8];
      do
      {
        OUTLINED_FUNCTION_102_3();
        OUTLINED_FUNCTION_78_12();
        v193 = v384;
        OUTLINED_FUNCTION_97_4(v194);
        OUTLINED_FUNCTION_32_28();
        OUTLINED_FUNCTION_99_4();
        OUTLINED_FUNCTION_74_13();
        OUTLINED_FUNCTION_37_31(v391);
        v195 = v385;
        OUTLINED_FUNCTION_36_33(v193, v385);
        v196 = v386;
        OUTLINED_FUNCTION_36_33(v195, v386);
        OUTLINED_FUNCTION_106_0(v196, 1, v174);
        if (v155)
        {
          OUTLINED_FUNCTION_66_19(v196);
        }
        else
        {
          v197 = v379;
          OUTLINED_FUNCTION_101_7(v379, v196);
          OUTLINED_FUNCTION_101_7(v387, v197);
          v198 = OUTLINED_FUNCTION_81_12();
          if ((v198 & 1) == 0)
          {
            OUTLINED_FUNCTION_19_48();
            sub_22AA36590();
            v192 = v202;
          }
          OUTLINED_FUNCTION_47_21();
          if (v158)
          {
            OUTLINED_FUNCTION_21_55(v199);
            sub_22AA36590();
            v192 = v203;
          }
          *(_QWORD *)(v192 + 16) = v197;
          v200 = OUTLINED_FUNCTION_15_59();
          OUTLINED_FUNCTION_101_7(v200, v201);
          v115 = v380;
        }
        OUTLINED_FUNCTION_91_8();
        OUTLINED_FUNCTION_35_25();
        OUTLINED_FUNCTION_103_4();
      }
      while (!v155);
    }
    sub_22A9CF82C(v115, &qword_255B13A38);
    OUTLINED_FUNCTION_106_5(*(uint64_t (**)(_QWORD, uint64_t))(v391 + 8));
    v179 = OUTLINED_FUNCTION_50_26();
    sub_22AB4EF00(v179);
    OUTLINED_FUNCTION_51_1();
    v180 = OUTLINED_FUNCTION_69_9();
    OUTLINED_FUNCTION_106_0(v180, v181, v174);
    if (v155)
    {
      sub_22A9CF82C(v177, &qword_2540E8580);
      v204 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v204 = sub_22ABDE84C();
      (*(void (**)(uint64_t, uint64_t))(v388 + 8))(v177, v174);
    }
    OUTLINED_FUNCTION_89_9();
    if (!v158)
    {
      if (!v205)
        goto LABEL_189;
      goto LABEL_182;
    }
    goto LABEL_78;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B12398);
  if (OUTLINED_FUNCTION_8_38())
  {
    OUTLINED_FUNCTION_6_85();
    OUTLINED_FUNCTION_63_18();
    v182 = OUTLINED_FUNCTION_48_25((uint64_t)&v405);
    OUTLINED_FUNCTION_58_13(v182, v183, (uint64_t)&v391);
    OUTLINED_FUNCTION_28_29(&qword_255B17EA8, v184, MEMORY[0x24BDF5F98]);
    OUTLINED_FUNCTION_39_30();
    OUTLINED_FUNCTION_79_14();
    OUTLINED_FUNCTION_28_29(&qword_255B17EB0, v185, MEMORY[0x24BDF5FA0]);
    v186 = MEMORY[0x24BEE4AF8];
    v187 = v366;
LABEL_57:
    v188 = v367;
    while (1)
    {
      OUTLINED_FUNCTION_22_47();
      OUTLINED_FUNCTION_61_18();
      if (v155)
        break;
      OUTLINED_FUNCTION_23_51();
      OUTLINED_FUNCTION_17_51();
      OUTLINED_FUNCTION_27_25();
      OUTLINED_FUNCTION_11_64((uint64_t)&v405);
      OUTLINED_FUNCTION_40_25();
      OUTLINED_FUNCTION_99_1(*(uint64_t (**)(uint64_t, uint64_t))(v187 + 8));
      if (v134)
      {
        if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
        {
          OUTLINED_FUNCTION_12_61();
          sub_22AA3657C();
          v186 = v190;
        }
        OUTLINED_FUNCTION_45_21();
        if (v158)
        {
          OUTLINED_FUNCTION_14_60(v189);
          sub_22AA3657C();
          v186 = v191;
        }
        OUTLINED_FUNCTION_44_26();
        goto LABEL_57;
      }
    }
    sub_22A9CF82C(v188, &qword_255B17E78);
    OUTLINED_FUNCTION_107_3(*(uint64_t (**)(_QWORD, uint64_t))(v187 + 8));
    if (*(_QWORD *)(v186 + 16))
      goto LABEL_151;
    goto LABEL_126;
  }
  if (OUTLINED_FUNCTION_85_12())
  {
    OUTLINED_FUNCTION_105_6();
    OUTLINED_FUNCTION_25_38();
    OUTLINED_FUNCTION_20_26();
    OUTLINED_FUNCTION_88_7(v209);
    OUTLINED_FUNCTION_37_18(&qword_255B17E98, v210, MEMORY[0x24BDF5F98]);
    sub_22ABDEE58();
    OUTLINED_FUNCTION_80_17();
    OUTLINED_FUNCTION_37_18(&qword_255B17EA0, v211, MEMORY[0x24BDF5FA0]);
    OUTLINED_FUNCTION_35_25();
    OUTLINED_FUNCTION_104_4();
    if (v155)
    {
      OUTLINED_FUNCTION_59_17();
    }
    else
    {
      v227 = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_59_17();
      do
      {
        OUTLINED_FUNCTION_102_3();
        OUTLINED_FUNCTION_78_12();
        v228 = v371;
        OUTLINED_FUNCTION_97_4(v229);
        OUTLINED_FUNCTION_32_28();
        v230 = v374;
        OUTLINED_FUNCTION_99_4();
        OUTLINED_FUNCTION_74_13();
        OUTLINED_FUNCTION_37_31(v375);
        OUTLINED_FUNCTION_16_55(v228, (uint64_t)v399);
        v231 = v372;
        OUTLINED_FUNCTION_36_33(v230, v372);
        OUTLINED_FUNCTION_106_0(v231, 1, v115);
        if (v155)
        {
          OUTLINED_FUNCTION_66_19(v231);
        }
        else
        {
          v232 = v368;
          OUTLINED_FUNCTION_98_8(v368, v231);
          OUTLINED_FUNCTION_98_8(v373[0], v232);
          v233 = OUTLINED_FUNCTION_81_12();
          if ((v233 & 1) == 0)
          {
            OUTLINED_FUNCTION_19_48();
            sub_22AA36568();
            v227 = v236;
          }
          OUTLINED_FUNCTION_47_21();
          if (v158)
          {
            OUTLINED_FUNCTION_21_55(v234);
            sub_22AA36568();
            v227 = v237;
          }
          *(_QWORD *)(v227 + 16) = v232;
          v235 = OUTLINED_FUNCTION_15_59();
          v115 = v370[2];
          OUTLINED_FUNCTION_98_8(v235, v373[0]);
        }
        OUTLINED_FUNCTION_91_8();
        OUTLINED_FUNCTION_35_25();
        OUTLINED_FUNCTION_103_4();
      }
      while (!v155);
    }
    OUTLINED_FUNCTION_84_13(v212, &qword_255B17E68);
    OUTLINED_FUNCTION_83_9();
    OUTLINED_FUNCTION_106_5(v213);
    v214 = OUTLINED_FUNCTION_50_26();
    sub_22AB4EF0C(v214);
    OUTLINED_FUNCTION_51_1();
    v215 = OUTLINED_FUNCTION_69_9();
    OUTLINED_FUNCTION_106_0(v215, v216, v115);
    if (v155)
    {
      OUTLINED_FUNCTION_57_10(&qword_255B16E40, (uint64_t)&v374);
      v204 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v204 = OUTLINED_FUNCTION_55_18();
      OUTLINED_FUNCTION_33_36((uint64_t)v401);
    }
    OUTLINED_FUNCTION_89_9();
    if (!v158)
    {
      if (!v238)
        goto LABEL_189;
      goto LABEL_182;
    }
LABEL_78:
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    *v206 = v204;
    v206[1] = 0xD000000000000031;
    OUTLINED_FUNCTION_71_16((uint64_t)v206, (uint64_t)"Feature shaped arrays need to be one-dimensional.");
    v207 = sub_22ABDEAEC();
    swift_willThrow(v207);
    v208 = OUTLINED_FUNCTION_10_59();
    OUTLINED_FUNCTION_0_78(v208);
    OUTLINED_FUNCTION_93_3();
LABEL_79:
    swift_bridgeObjectRelease();
    return v115;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255B100E0);
  if (OUTLINED_FUNCTION_8_38())
  {
    OUTLINED_FUNCTION_6_85();
    OUTLINED_FUNCTION_63_18();
    v217 = OUTLINED_FUNCTION_48_25((uint64_t)&v396);
    OUTLINED_FUNCTION_58_13(v217, v218, (uint64_t)&v371);
    OUTLINED_FUNCTION_28_29(&qword_255B13A08, v219, MEMORY[0x24BDF5F98]);
    OUTLINED_FUNCTION_39_30();
    OUTLINED_FUNCTION_79_14();
    OUTLINED_FUNCTION_28_29(&qword_255B13A10, v220, MEMORY[0x24BDF5FA0]);
    v221 = MEMORY[0x24BEE4AF8];
    v222 = v348;
LABEL_95:
    v223 = v349;
    while (1)
    {
      OUTLINED_FUNCTION_22_47();
      OUTLINED_FUNCTION_61_18();
      if (v155)
        break;
      OUTLINED_FUNCTION_23_51();
      OUTLINED_FUNCTION_17_51();
      OUTLINED_FUNCTION_27_25();
      OUTLINED_FUNCTION_11_64((uint64_t)&v396);
      OUTLINED_FUNCTION_40_25();
      OUTLINED_FUNCTION_99_1(*(uint64_t (**)(uint64_t, uint64_t))(v222 + 8));
      if (v134)
      {
        if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
        {
          OUTLINED_FUNCTION_12_61();
          sub_22AA36554();
          v221 = v225;
        }
        OUTLINED_FUNCTION_45_21();
        if (v158)
        {
          OUTLINED_FUNCTION_14_60(v224);
          sub_22AA36554();
          v221 = v226;
        }
        OUTLINED_FUNCTION_44_26();
        goto LABEL_95;
      }
    }
    sub_22A9CF82C(v223, &qword_255B139C8);
    OUTLINED_FUNCTION_107_3(*(uint64_t (**)(_QWORD, uint64_t))(v222 + 8));
    if (*(_QWORD *)(v221 + 16))
      goto LABEL_151;
    goto LABEL_126;
  }
  if (OUTLINED_FUNCTION_85_12())
  {
    OUTLINED_FUNCTION_105_6();
    OUTLINED_FUNCTION_25_38();
    OUTLINED_FUNCTION_63_18();
    v239 = OUTLINED_FUNCTION_20_26();
    OUTLINED_FUNCTION_90_3(v239, v240);
    OUTLINED_FUNCTION_37_18(&qword_255B13A58, v241, MEMORY[0x24BDF5F98]);
    OUTLINED_FUNCTION_65_20();
    OUTLINED_FUNCTION_80_17();
    OUTLINED_FUNCTION_37_18(&qword_255B13A60, v242, MEMORY[0x24BDF5FA0]);
    OUTLINED_FUNCTION_35_25();
    OUTLINED_FUNCTION_104_4();
    if (!v155)
    {
      v260 = MEMORY[0x24BEE4AF8];
      v261 = v354;
      do
      {
        OUTLINED_FUNCTION_102_3();
        v262 = v362[1];
        v115 = v362[0];
        v263 = OUTLINED_FUNCTION_78_12();
        OUTLINED_FUNCTION_53_25(v263, v264);
        OUTLINED_FUNCTION_32_28();
        OUTLINED_FUNCTION_11_64((uint64_t)&v378);
        OUTLINED_FUNCTION_30_21();
        OUTLINED_FUNCTION_99_1(*(uint64_t (**)(uint64_t, uint64_t))(v357 + 8));
        OUTLINED_FUNCTION_16_55(v261, (uint64_t)v376);
        OUTLINED_FUNCTION_16_55(v262, (uint64_t)&v383);
        OUTLINED_FUNCTION_106_0(v262, 1, v363);
        if (v155)
        {
          OUTLINED_FUNCTION_66_19(v361);
        }
        else
        {
          v265 = *(void (**)(unint64_t, uint64_t, uint64_t))(v356 + 32);
          v115 = v350;
          v266 = v363;
          OUTLINED_FUNCTION_68_15(v350, v361);
          OUTLINED_FUNCTION_68_15(v355, v115);
          v267 = OUTLINED_FUNCTION_81_12();
          if ((v267 & 1) == 0)
          {
            OUTLINED_FUNCTION_19_48();
            sub_22AA36540();
            v260 = v270;
          }
          OUTLINED_FUNCTION_47_21();
          if (v158)
          {
            OUTLINED_FUNCTION_21_55(v268);
            sub_22AA36540();
            v260 = v271;
          }
          *(_QWORD *)(v260 + 16) = v266;
          v269 = OUTLINED_FUNCTION_15_59();
          v265(v269, v355, v363);
        }
        OUTLINED_FUNCTION_91_8();
        OUTLINED_FUNCTION_35_25();
        OUTLINED_FUNCTION_103_4();
      }
      while (!v155);
    }
    OUTLINED_FUNCTION_57_10(&qword_255B13A50, (uint64_t)&v385);
    OUTLINED_FUNCTION_83_9();
    OUTLINED_FUNCTION_82_8(v337, v243);
    v244 = OUTLINED_FUNCTION_50_26();
    sub_22AB4EF18(v244);
    OUTLINED_FUNCTION_51_1();
    v245 = OUTLINED_FUNCTION_69_9();
    OUTLINED_FUNCTION_106_0(v245, v246, v363);
    if (v155)
    {
      OUTLINED_FUNCTION_57_10(&qword_2540E8570, (uint64_t)v362);
      v204 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v204 = OUTLINED_FUNCTION_55_18();
      OUTLINED_FUNCTION_33_36((uint64_t)&v377);
    }
    OUTLINED_FUNCTION_89_9();
    if (v158)
      goto LABEL_78;
    if (!v272)
      goto LABEL_189;
LABEL_182:
    OUTLINED_FUNCTION_26_42();
    goto LABEL_189;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540E85C8);
  if (OUTLINED_FUNCTION_8_38())
  {
    OUTLINED_FUNCTION_6_85();
    OUTLINED_FUNCTION_63_18();
    v247 = OUTLINED_FUNCTION_48_25((uint64_t)v373);
    OUTLINED_FUNCTION_58_13(v247, v248, (uint64_t)v381);
    OUTLINED_FUNCTION_28_29(&qword_255B139F8, v249, MEMORY[0x24BDF5F98]);
    OUTLINED_FUNCTION_39_30();
    OUTLINED_FUNCTION_79_14();
    OUTLINED_FUNCTION_28_29(&qword_255B13A00, v250, MEMORY[0x24BDF5FA0]);
    v251 = MEMORY[0x24BEE4AF8];
    v252 = v351;
    while (1)
    {
      v253 = *v132;
      OUTLINED_FUNCTION_41_26();
      OUTLINED_FUNCTION_61_18();
      if (v155)
        break;
      v254 = v360;
      v255 = v359;
      OUTLINED_FUNCTION_46_24();
      OUTLINED_FUNCTION_17_51();
      OUTLINED_FUNCTION_27_25();
      OUTLINED_FUNCTION_90_3(v252, v254);
      OUTLINED_FUNCTION_49_20();
      OUTLINED_FUNCTION_83_9();
      v256(v252, v255);
      if (v253)
      {
        if ((OUTLINED_FUNCTION_18_36() & 1) == 0)
        {
          OUTLINED_FUNCTION_12_61();
          sub_22AA3622C();
          v251 = v258;
        }
        OUTLINED_FUNCTION_45_21();
        if (v158)
        {
          OUTLINED_FUNCTION_14_60(v257);
          sub_22AA3622C();
          v251 = v259;
        }
        OUTLINED_FUNCTION_44_26();
      }
    }
    OUTLINED_FUNCTION_57_10(&qword_255B139B8, (uint64_t)&v382);
    OUTLINED_FUNCTION_83_9();
    OUTLINED_FUNCTION_82_8(v331, v273);
    if (*(_QWORD *)(v251 + 16))
    {
LABEL_151:
      v274 = OUTLINED_FUNCTION_67_15();
      sub_22A9B880C(v274, v275, v276);
      OUTLINED_FUNCTION_42_21();
      OUTLINED_FUNCTION_23();
      OUTLINED_FUNCTION_29_32();
      goto LABEL_4;
    }
LABEL_126:
    OUTLINED_FUNCTION_23();
LABEL_4:
    v136 = OUTLINED_FUNCTION_10_59();
    OUTLINED_FUNCTION_0_78(v136);
    return v396;
  }
  if (OUTLINED_FUNCTION_85_12())
  {
    OUTLINED_FUNCTION_105_6();
    OUTLINED_FUNCTION_25_38();
    OUTLINED_FUNCTION_63_18();
    v277 = OUTLINED_FUNCTION_20_26();
    OUTLINED_FUNCTION_90_3(v277, v278);
    OUTLINED_FUNCTION_37_18(&qword_255B13A70, v279, MEMORY[0x24BDF5F98]);
    OUTLINED_FUNCTION_65_20();
    OUTLINED_FUNCTION_80_17();
    OUTLINED_FUNCTION_37_18(&qword_255B13A78, v280, MEMORY[0x24BDF5FA0]);
    OUTLINED_FUNCTION_35_25();
    OUTLINED_FUNCTION_104_4();
    if (!v155)
    {
      v294 = MEMORY[0x24BEE4AF8];
      v295 = v338;
      do
      {
        OUTLINED_FUNCTION_102_3();
        v296 = v345;
        v115 = v344;
        v297 = OUTLINED_FUNCTION_78_12();
        OUTLINED_FUNCTION_53_25(v297, v298);
        OUTLINED_FUNCTION_32_28();
        OUTLINED_FUNCTION_11_64((uint64_t)v365);
        OUTLINED_FUNCTION_30_21();
        OUTLINED_FUNCTION_99_1(*(uint64_t (**)(uint64_t, uint64_t))(v341 + 8));
        OUTLINED_FUNCTION_16_55(v295, (uint64_t)&v363);
        OUTLINED_FUNCTION_16_55(v296, (uint64_t)&v367);
        OUTLINED_FUNCTION_106_0(v296, 1, v346);
        if (v155)
        {
          OUTLINED_FUNCTION_66_19(v343);
        }
        else
        {
          v299 = *(void (**)(unint64_t, uint64_t, uint64_t))(v340 + 32);
          v115 = v334;
          v300 = v346;
          OUTLINED_FUNCTION_68_15(v334, v343);
          OUTLINED_FUNCTION_68_15(v339, v115);
          v301 = OUTLINED_FUNCTION_81_12();
          if ((v301 & 1) == 0)
          {
            OUTLINED_FUNCTION_19_48();
            sub_22AA363F0();
            v294 = v304;
          }
          OUTLINED_FUNCTION_47_21();
          if (v158)
          {
            OUTLINED_FUNCTION_21_55(v302);
            sub_22AA363F0();
            v294 = v305;
          }
          *(_QWORD *)(v294 + 16) = v300;
          v303 = OUTLINED_FUNCTION_15_59();
          v299(v303, v339, v346);
        }
        OUTLINED_FUNCTION_91_8();
        OUTLINED_FUNCTION_35_25();
        OUTLINED_FUNCTION_103_4();
      }
      while (!v155);
    }
    OUTLINED_FUNCTION_57_10(&qword_255B13A68, (uint64_t)v369);
    OUTLINED_FUNCTION_83_9();
    OUTLINED_FUNCTION_82_8(v329, v281);
    v282 = OUTLINED_FUNCTION_50_26();
    sub_22AB4EF24(v282);
    OUTLINED_FUNCTION_51_1();
    v283 = OUTLINED_FUNCTION_69_9();
    OUTLINED_FUNCTION_106_0(v283, v284, v346);
    if (v155)
    {
      OUTLINED_FUNCTION_57_10(&qword_2540E8560, (uint64_t)v353);
      v204 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v204 = OUTLINED_FUNCTION_55_18();
      OUTLINED_FUNCTION_33_36((uint64_t)&v364);
    }
    OUTLINED_FUNCTION_89_9();
    if (v158)
      goto LABEL_78;
    if (!v306)
    {
LABEL_189:
      v318 = OUTLINED_FUNCTION_10_59();
      OUTLINED_FUNCTION_0_78(v318);
      OUTLINED_FUNCTION_3_8();
      return v396;
    }
    goto LABEL_182;
  }
  sub_22A9BEDCC(0, &qword_255B10788);
  if (!OUTLINED_FUNCTION_8_38())
  {
LABEL_196:
    v324 = OUTLINED_FUNCTION_10_59();
    OUTLINED_FUNCTION_0_78(v324);
    OUTLINED_FUNCTION_93_3();
    return 0;
  }
  OUTLINED_FUNCTION_6_85();
  v285 = MEMORY[0x24BEE4AF8];
  v403 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_63_18();
  v286 = OUTLINED_FUNCTION_48_25((uint64_t)&v356);
  v115 = v335;
  ((void (*)(uint64_t))v106)(v286);
  sub_22AA2545C(&qword_255B13A80, &qword_255B0DB10, MEMORY[0x24BDF5F98]);
  v287 = v336;
  sub_22ABDEE58();
  v288 = (uint64_t *)(v287 + *(int *)(v326 + 36));
  sub_22AA2545C(&qword_255B0DB28, &qword_255B0DB10, MEMORY[0x24BDF5FA0]);
  OUTLINED_FUNCTION_22_47();
  OUTLINED_FUNCTION_61_18();
  if (!v155)
  {
    v115 = v335;
    do
    {
      OUTLINED_FUNCTION_23_51();
      v290 = *v289;
      v291 = *v289;
      OUTLINED_FUNCTION_32_28();
      OUTLINED_FUNCTION_11_64((uint64_t)&v356);
      OUTLINED_FUNCTION_40_25();
      v292 = OUTLINED_FUNCTION_99_1(*(uint64_t (**)(uint64_t, uint64_t))(v333 + 8));
      if (v290)
      {
        MEMORY[0x22E2E3268](v292);
        if (*(_QWORD *)((v403 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v403 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_22ABDF050();
        sub_22ABDF0A4();
        sub_22ABDF014();
      }
      v293 = *v288;
      OUTLINED_FUNCTION_41_26();
    }
    while (v293 != v400);
    v285 = v403;
  }
  OUTLINED_FUNCTION_57_10(&qword_255B0DB20, (uint64_t)&v360);
  OUTLINED_FUNCTION_83_9();
  OUTLINED_FUNCTION_82_8(v328, v307);
  if (!(v285 >> 62))
  {
    if (*(_QWORD *)((v285 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_185;
    goto LABEL_195;
  }
  OUTLINED_FUNCTION_22_21();
  v323 = sub_22ABDFB60();
  OUTLINED_FUNCTION_23();
  if (!v323)
  {
LABEL_195:
    OUTLINED_FUNCTION_23();
    goto LABEL_196;
  }
LABEL_185:
  sub_22A9B8810(0, (v285 & 0xC000000000000001) == 0, v285);
  if ((v285 & 0xC000000000000001) != 0)
    v308 = (id)MEMORY[0x22E2E3A9C](0, v285);
  else
    v308 = *(id *)(v285 + 32);
  v309 = v308;
  OUTLINED_FUNCTION_23();
  v310 = objc_msgSend(v309, sel_shape);
  sub_22A9BEDCC(0, (unint64_t *)&qword_2540E8628);
  v311 = sub_22ABDEFF0();

  v312 = v397[0];
  sub_22AB0F904(v311);
  v314 = v313;
  OUTLINED_FUNCTION_2_1();
  if (*(_QWORD *)(v314 + 16) >= 2uLL)
  {
    sub_22A9B7B50();
    OUTLINED_FUNCTION_53();
    *v315 = v314;
    v315[1] = 0xD000000000000031;
    OUTLINED_FUNCTION_71_16((uint64_t)v315, (uint64_t)"Feature shaped arrays need to be one-dimensional.");
    v316 = OUTLINED_FUNCTION_22_21();
    swift_willThrow(v316);
    v317 = OUTLINED_FUNCTION_10_59();
    OUTLINED_FUNCTION_0_78(v317);
    OUTLINED_FUNCTION_93_3();

    goto LABEL_79;
  }
  OUTLINED_FUNCTION_23();
  v319 = v309;
  result = sub_22AB11C7C(v319);
  if (v312)
  {
    v321 = OUTLINED_FUNCTION_10_59();
    OUTLINED_FUNCTION_0_78(v321);
    OUTLINED_FUNCTION_93_3();

    return v115;
  }
  if (v320 != -1)
  {
    v322 = OUTLINED_FUNCTION_10_59();
    OUTLINED_FUNCTION_0_78(v322);

    return v396;
  }
  __break(1u);
  return result;
}

