uint64_t sub_21C35F41C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD v11[8];

  v11[3] = a1;
  v11[7] = *MEMORY[0x24BDAC8D0];
  v1 = sub_21C3A7E24();
  v11[2] = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_21C3A7F08();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21C3A7DE8();
  v11[0] = *(_QWORD *)(v6 - 8);
  v11[1] = v6;
  MEMORY[0x24BDAC7A8](v6);
  sub_21C3A7EFC();
  v7 = sub_21C3A7EE4();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v9 >> 60 != 15)
  {
    sub_21C2D1198(&qword_25525EC78, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
    sub_21C3A7DDC();
    __asm { BR              X10 }
  }
  return v7;
}

uint64_t sub_21C35F778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_21C3A7E18();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A7DE8();
  sub_21C2D1198(&qword_25525EC80, (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0], MEMORY[0x24BDC62E8]);
  sub_21C3A7DF4();
  v5 = sub_21C3A7E0C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

void sub_21C35FA94()
{
  void *v0;
  id v1;

  v0 = (void *)sub_21C3A7EB4();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v0);

  if (v1)
    qword_255278F20 = (uint64_t)v1;
  else
    __break(1u);
}

uint64_t PINData.isPINBypass.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_isPINBypass);
}

uint64_t PINData.pinCipherBlobBase64.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_pinCipherBlobBase64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINData.pinKeyBlobBase64.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_pinKeyBlobBase64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINData.pinKekId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_pinKekId);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINData.seAttestationBase64.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_seAttestationBase64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINData.casdCertificateHex.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader7PINData_casdCertificateHex);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static PINData.supportsSecureCoding.getter()
{
  return 1;
}

id PINData.__allocating_init(isPINBypass:pinKekId:pinCipherBlob:pinKeyBlob:seAttestation:casdCertificate:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11)
{
  objc_class *v11;
  objc_class *v12;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  id v35;
  objc_class *v38;
  objc_super v41;
  uint64_t v42;

  v12 = v11;
  v18 = objc_allocWithZone(v12);
  v18[OBJC_IVAR____TtC15ProximityReader7PINData_isPINBypass] = a1;
  v19 = v18;
  v20 = sub_21C3A7734();
  v21 = (uint64_t *)&v19[OBJC_IVAR____TtC15ProximityReader7PINData_pinCipherBlobBase64];
  *v21 = v20;
  v21[1] = v22;
  v23 = sub_21C3A7734();
  v24 = (uint64_t *)&v19[OBJC_IVAR____TtC15ProximityReader7PINData_pinKeyBlobBase64];
  *v24 = v23;
  v24[1] = v25;
  v26 = &v19[OBJC_IVAR____TtC15ProximityReader7PINData_pinKekId];
  *v26 = a2;
  v26[1] = a3;
  v27 = sub_21C3A7734();
  v28 = (uint64_t *)&v19[OBJC_IVAR____TtC15ProximityReader7PINData_seAttestationBase64];
  *v28 = v27;
  v28[1] = v29;
  sub_21C360B48(a10, a11);
  v42 = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ECD0);
  sub_21C2FA074();
  v31 = sub_21C3A7E84();
  v33 = v32;
  swift_bridgeObjectRelease();
  v34 = (uint64_t *)&v19[OBJC_IVAR____TtC15ProximityReader7PINData_casdCertificateHex];
  *v34 = v31;
  v34[1] = v33;

  v41.receiver = v19;
  v41.super_class = v38;
  v35 = objc_msgSendSuper2(&v41, sel_init);
  sub_21C2D2B48(a10, a11);
  sub_21C2D2B48(a8, a9);
  sub_21C2D2B48(a6, a7);
  sub_21C2D2B48(a4, a5);
  return v35;
}

id PINData.init(isPINBypass:pinKekId:pinCipherBlob:pinKeyBlob:seAttestation:casdCertificate:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11)
{
  id v16;

  v16 = sub_21C360EEC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  sub_21C2D2B48(a10, a11);
  sub_21C2D2B48(a8, a9);
  sub_21C2D2B48(a6, a7);
  sub_21C2D2B48(a4, a5);
  return v16;
}

Swift::Void __swiftcall PINData.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader7PINData_isPINBypass);
  v4 = (void *)sub_21C3A7EB4();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v3, v4);

  v5 = (void *)sub_21C3A7EB4();
  v6 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);

  v7 = (void *)sub_21C3A7EB4();
  v8 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);

  v9 = (void *)sub_21C3A7EB4();
  v10 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);

  v11 = (void *)sub_21C3A7EB4();
  v12 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v11, v12);

  v13 = (void *)sub_21C3A7EB4();
  v14 = (id)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v13, v14);

}

id PINData.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PINData.init(coder:)(a1);
}

id PINData.init(coder:)(void *a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _BYTE *v7;
  void *v8;
  unsigned int v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v46;
  void *v47;
  unsigned int v48;
  objc_class *v49;
  objc_super v50;

  ObjectType = swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1;
  v8 = (void *)sub_21C3A7EB4();
  v9 = objc_msgSend(a1, sel_decodeBoolForKey_, v8);

  sub_21C2D1C1C();
  v10 = sub_21C3A825C();
  if (v10)
  {
    v11 = (void *)v10;
    v48 = v9;
    v12 = sub_21C3A825C();
    if (v12)
    {
      v13 = (void *)v12;
      v49 = (objc_class *)ObjectType;
      v14 = sub_21C3A825C();
      if (v14)
      {
        v15 = (void *)v14;
        v16 = sub_21C3A825C();
        if (v16)
        {
          v47 = (void *)v16;
          v17 = sub_21C3A825C();
          if (v17)
          {
            v18 = (void *)v17;
            v7[OBJC_IVAR____TtC15ProximityReader7PINData_isPINBypass] = v48;
            v19 = sub_21C3A7ED8();
            v20 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader7PINData_pinKekId];
            *v20 = v19;
            v20[1] = v21;
            v22 = sub_21C3A7ED8();
            v23 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader7PINData_pinCipherBlobBase64];
            *v23 = v22;
            v23[1] = v24;
            v25 = sub_21C3A7ED8();
            v26 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader7PINData_pinKeyBlobBase64];
            *v26 = v25;
            v26[1] = v27;
            v28 = v47;
            v29 = sub_21C3A7ED8();
            v30 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader7PINData_seAttestationBase64];
            *v30 = v29;
            v30[1] = v31;
            v32 = sub_21C3A7ED8();
            v34 = v33;

            v35 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader7PINData_casdCertificateHex];
            *v35 = v32;
            v35[1] = v34;

            v50.receiver = v7;
            v50.super_class = v49;
            v36 = objc_msgSendSuper2(&v50, sel_init);

            return v36;
          }

          v38 = v13;
          v37 = v15;
          v11 = v47;
        }
        else
        {
          v38 = v11;
          v37 = v13;
          v11 = v15;
        }

      }
      else
      {
        v37 = v11;
        v11 = v13;
      }

    }
  }

  if (qword_25525AAC8 != -1)
    swift_once();
  v39 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F30);
  sub_21C2D1D80(v39, (uint64_t)v6);
  v40 = sub_21C3A79D4();
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v6, 1, v40) == 1)
  {

    sub_21C2D1DC8((uint64_t)v6);
  }
  else
  {
    v42 = sub_21C3A79BC();
    v43 = sub_21C3A81C0();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_21C2CD000, v42, v43, "PINData | Failed to decode object", v44, 2u);
      MEMORY[0x22077AF8C](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v40);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t PINData.printResult.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  sub_21C3A83DC();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  v0 = sub_21C3A76F8();
  if (v1 >> 60 != 15)
  {
    v2 = v0;
    v3 = v1;
    sub_21C360B48(v0, v1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ECD0);
    sub_21C2FA074();
    sub_21C3A7E84();
    swift_bridgeObjectRelease();
    sub_21C2D2B34(v2, v3);
  }
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  v4 = sub_21C3A76F8();
  if (v5 >> 60 != 15)
  {
    v6 = v4;
    v7 = v5;
    sub_21C360B48(v4, v5);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ECD0);
    sub_21C2FA074();
    sub_21C3A7E84();
    swift_bridgeObjectRelease();
    sub_21C2D2B34(v6, v7);
  }
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  swift_bridgeObjectRetain();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  v8 = sub_21C3A76F8();
  if (v9 >> 60 != 15)
  {
    v10 = v8;
    v11 = v9;
    sub_21C360B48(v8, v9);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ECD0);
    sub_21C2FA074();
    sub_21C3A7E84();
    swift_bridgeObjectRelease();
    sub_21C2D2B34(v10, v11);
  }
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  v12 = sub_21C3A76F8();
  if (v13 >> 60 != 15)
  {
    v14 = v12;
    v15 = v13;
    sub_21C360B48(v12, v13);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ECD0);
    sub_21C2FA074();
    sub_21C3A7E84();
    swift_bridgeObjectRelease();
    sub_21C2D2B34(v14, v15);
  }
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  return 0;
}

id PINData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PINData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PINData.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_21C360B48(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_21C360BA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int16 v23;
  char v24;
  char v25;
  char v26;
  char v27;
  unsigned __int8 v28;

  v4 = v28;
  if (v28)
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = v28;
    sub_21C31E1D8(0, v28, 0);
    v6 = a1;
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v7 = (int)a1;
      else
        v7 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v7 = 0;
    }
    *(_QWORD *)(v3 - 144) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v7 < (int)a1 || v7 >= a1 >> 32)
            goto LABEL_29;
          v8 = sub_21C3A74C4();
          if (!v8)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v9 = v8;
          v10 = sub_21C3A74E8();
          v11 = v7 - v10;
          if (__OFSUB__(v7, v10))
            goto LABEL_32;
        }
        else
        {
          if (v7 < *(_QWORD *)(v6 + 16))
            goto LABEL_31;
          if (v7 >= *(_QWORD *)(v6 + 24))
            goto LABEL_33;
          v13 = sub_21C3A74C4();
          if (!v13)
            goto LABEL_36;
          v9 = v13;
          v14 = sub_21C3A74E8();
          v11 = v7 - v14;
          if (__OFSUB__(v7, v14))
            goto LABEL_34;
        }
        v12 = *(_BYTE *)(v9 + v11);
        v6 = a1;
      }
      else
      {
        if (v7 >= v28)
          goto LABEL_30;
        *(_BYTE *)(v3 - 118) = v6;
        *(_DWORD *)(v3 - 117) = *(_DWORD *)((char *)&a1 + 1);
        *(_WORD *)(v3 - 113) = *(_WORD *)((char *)&a1 + 5);
        *(_BYTE *)(v3 - 111) = HIBYTE(a1);
        *(_WORD *)(v3 - 110) = v23;
        *(_BYTE *)(v3 - 108) = v24;
        *(_BYTE *)(v3 - 107) = v25;
        *(_BYTE *)(v3 - 106) = v26;
        *(_BYTE *)(v3 - 105) = v27;
        v12 = *(_BYTE *)(v3 - 118 + v7);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525C218);
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_21C3ACA90;
      *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE4260];
      *(_QWORD *)(v15 + 64) = MEMORY[0x24BEE42B0];
      *(_BYTE *)(v15 + 32) = v12;
      v16 = sub_21C3A7EF0();
      v18 = v17;
      *(_QWORD *)(v3 - 104) = v2;
      v20 = *(_QWORD *)(v2 + 16);
      v19 = *(_QWORD *)(v2 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_21C31E1D8(v19 > 1, v20 + 1, 1);
        v6 = a1;
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v20 + 1;
      v21 = v2 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
      ++v7;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 144);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x21C360EC4);
  }
  return v2;
}

id sub_21C360EEC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _BYTE *v11;
  _BYTE *v12;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  objc_class *ObjectType;
  objc_super v34;
  uint64_t v35;

  v12 = v11;
  ObjectType = (objc_class *)swift_getObjectType();
  v12[OBJC_IVAR____TtC15ProximityReader7PINData_isPINBypass] = a1;
  v16 = v12;
  v17 = sub_21C3A7734();
  v18 = (uint64_t *)&v16[OBJC_IVAR____TtC15ProximityReader7PINData_pinCipherBlobBase64];
  *v18 = v17;
  v18[1] = v19;
  v20 = sub_21C3A7734();
  v21 = (uint64_t *)&v16[OBJC_IVAR____TtC15ProximityReader7PINData_pinKeyBlobBase64];
  *v21 = v20;
  v21[1] = v22;
  v23 = &v16[OBJC_IVAR____TtC15ProximityReader7PINData_pinKekId];
  *(_QWORD *)v23 = a2;
  *((_QWORD *)v23 + 1) = a3;
  v24 = sub_21C3A7734();
  v25 = (uint64_t *)&v16[OBJC_IVAR____TtC15ProximityReader7PINData_seAttestationBase64];
  *v25 = v24;
  v25[1] = v26;
  sub_21C360B48(a10, a11);
  v35 = v27;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ECD0);
  sub_21C2FA074();
  v28 = sub_21C3A7E84();
  v30 = v29;
  swift_bridgeObjectRelease();
  v31 = (uint64_t *)&v16[OBJC_IVAR____TtC15ProximityReader7PINData_casdCertificateHex];
  *v31 = v28;
  v31[1] = v30;

  v34.receiver = v16;
  v34.super_class = ObjectType;
  return objc_msgSendSuper2(&v34, sel_init);
}

uint64_t type metadata accessor for PINData()
{
  return objc_opt_self();
}

uint64_t method lookup function for PINData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PINData.__allocating_init(isPINBypass:pinKekId:pinCipherBlob:pinKeyBlob:seAttestation:casdCertificate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of PINData.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t MobileDriversLicenseDisplayRequest.elements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDisplayRequest.elements.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*MobileDriversLicenseDisplayRequest.elements.modify())()
{
  return nullsub_1;
}

void MobileDriversLicenseDisplayRequest.options.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *MobileDriversLicenseDisplayRequest.options.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*MobileDriversLicenseDisplayRequest.options.modify())()
{
  return nullsub_1;
}

uint64_t MobileDriversLicenseDisplayRequest.init(elements:options:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v3;
  return result;
}

uint64_t MobileDriversLicenseDisplayRequest.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  v1 = *v0;
  sub_21C3A870C();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_BYTE *)(v1 + 40);
    do
    {
      if ((*v3 & 1) == 0)
        sub_21C3A870C();
      v3 += 16;
      sub_21C3A870C();
      --v2;
    }
    while (v2);
  }
  return sub_21C3A870C();
}

uint64_t static MobileDriversLicenseDisplayRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  return sub_21C311C28(*(_QWORD *)a1, *(_QWORD *)a2) & (v2 == v3);
}

uint64_t MobileDriversLicenseDisplayRequest.hashValue.getter()
{
  sub_21C3A8700();
  MobileDriversLicenseDisplayRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C361264()
{
  sub_21C3A8700();
  MobileDriversLicenseDisplayRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C3612B8()
{
  sub_21C3A8700();
  MobileDriversLicenseDisplayRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C361304(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  return sub_21C311C28(*(_QWORD *)a1, *(_QWORD *)a2) & (v2 == v3);
}

uint64_t static MobileDocumentRequest<>.displayDriversLicense(_:options:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_21C361358()
{
  unint64_t result;

  result = qword_25525ED08;
  if (!qword_25525ED08)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDisplayRequest.Response, &type metadata for MobileDriversLicenseDisplayRequest.Response);
    atomic_store(result, (unint64_t *)&qword_25525ED08);
  }
  return result;
}

unint64_t sub_21C36139C(uint64_t a1)
{
  unint64_t result;

  result = sub_21C3613C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C3613C0()
{
  unint64_t result;

  result = qword_25525ED30;
  if (!qword_25525ED30)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDisplayRequest, &type metadata for MobileDriversLicenseDisplayRequest);
    atomic_store(result, (unint64_t *)&qword_25525ED30);
  }
  return result;
}

unint64_t sub_21C361408()
{
  unint64_t result;

  result = qword_25525ED38;
  if (!qword_25525ED38)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDisplayRequest, &type metadata for MobileDriversLicenseDisplayRequest);
    atomic_store(result, (unint64_t *)&qword_25525ED38);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MobileDriversLicenseDisplayRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MobileDriversLicenseDisplayRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for MobileDriversLicenseDisplayRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseDisplayRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDisplayRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest()
{
  return &type metadata for MobileDriversLicenseDisplayRequest;
}

uint64_t static StoreAndForwardStatusInternal.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_25525ED40;
}

uint64_t static StoreAndForwardStatusInternal.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_25525ED40 = a1;
  return result;
}

uint64_t (*static StoreAndForwardStatusInternal.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id StoreAndForwardStatusInternal.__allocating_init(activationID:readCount:expiry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_activationID];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_readCount] = a3;
  v11 = &v9[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_expiry];
  v12 = sub_21C3A77B8();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a4, v12);
  v16.receiver = v9;
  v16.super_class = v4;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a4, v12);
  return v14;
}

id StoreAndForwardStatusInternal.init(activationID:readCount:expiry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_activationID];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_readCount] = a3;
  v11 = &v4[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_expiry];
  v12 = sub_21C3A77B8();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a4, v12);
  v16.receiver = v4;
  v16.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a4, v12);
  return v14;
}

Swift::Void __swiftcall StoreAndForwardStatusInternal.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v3 = (void *)sub_21C3A7EB4();
  v4 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_readCount);
  v6 = (void *)sub_21C3A7EB4();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v5, v6);

  v7 = (void *)sub_21C3A777C();
  v8 = (id)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);

}

id StoreAndForwardStatusInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return StoreAndForwardStatusInternal.init(coder:)(a1);
}

id StoreAndForwardStatusInternal.init(coder:)(void *a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v40;
  uint64_t v41;
  objc_class *v42;
  char *v43;
  uint64_t v44;
  id v45;
  objc_super v46;
  uint64_t v47;
  uint64_t v48;

  ObjectType = swift_getObjectType();
  v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v44);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - v10;
  v12 = sub_21C3A77B8();
  v13 = *(_QWORD **)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v43 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2D7704(0, (unint64_t *)&qword_25525AE20);
  v15 = v1;
  v45 = a1;
  v16 = sub_21C3A825C();
  if (v16)
  {
    v17 = (void *)v16;
    v47 = 0;
    v48 = 0;
    sub_21C3A7ECC();

    v18 = v48;
    if (v48)
    {
      v42 = (objc_class *)ObjectType;
      v19 = v47;
      sub_21C2D7704(0, &qword_25525ED70);
      v20 = sub_21C3A825C();
      if (v20)
      {
        v21 = (void *)v20;
        v41 = v19;
        v22 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v13[7];
        v22(v8, 1, 1, v12);
        sub_21C361FEC();
        sub_21C3A84FC();

        v23 = (unsigned int (*)(char *, uint64_t, uint64_t))v13[6];
        if (v23(v8, 1, v12) != 1)
        {
          v24 = (void (*)(char *, char *, uint64_t))v13[4];
          v24(v11, v8, v12);
          v22(v11, 0, 1, v12);
          if (v23(v11, 1, v12) != 1)
          {
            v25 = v18;
            v26 = v43;
            v24(v43, v11, v12);
            v27 = &v15[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_activationID];
            *(_QWORD *)v27 = v41;
            *((_QWORD *)v27 + 1) = v25;
            v28 = (void *)sub_21C3A7EB4();
            v29 = v45;
            v30 = objc_msgSend(v45, sel_decodeIntegerForKey_, v28);

            *(_QWORD *)&v15[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_readCount] = v30;
            v24(&v15[OBJC_IVAR____TtC15ProximityReader29StoreAndForwardStatusInternal_expiry], v26, v12);

            v46.receiver = v15;
            v46.super_class = v42;
            v31 = objc_msgSendSuper2(&v46, sel_init);

            return v31;
          }
          goto LABEL_10;
        }
      }
      else
      {
        v22 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v13[7];
      }
      v22(v11, 1, 1, v12);
LABEL_10:

      swift_bridgeObjectRelease();
      sub_21C2D775C((uint64_t)v11, (uint64_t *)&unk_25525ED60);
      goto LABEL_11;
    }
  }

LABEL_11:
  v32 = v44;
  if (qword_25525AAC8 != -1)
    swift_once();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_255278F30);
  sub_21C2D1D80(v33, (uint64_t)v5);
  v34 = sub_21C3A79D4();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v5, 1, v34) == 1)
  {

    sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v36 = sub_21C3A79BC();
    v37 = sub_21C3A81C0();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_21C2CD000, v36, v37, "StoreAndForwardStatusInternal | Failed to decode object", v38, 2u);
      MEMORY[0x22077AF8C](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v34);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

id StoreAndForwardStatusInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StoreAndForwardStatusInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StoreAndForwardStatusInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_21C361FEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525ED78;
  if (!qword_25525ED78)
  {
    v1 = sub_21C3A77B8();
    result = MEMORY[0x22077AECC](MEMORY[0x24BDCE980], v1);
    atomic_store(result, (unint64_t *)&qword_25525ED78);
  }
  return result;
}

uint64_t sub_21C362034()
{
  return type metadata accessor for StoreAndForwardStatusInternal();
}

uint64_t type metadata accessor for StoreAndForwardStatusInternal()
{
  uint64_t result;

  result = qword_25525EDA8;
  if (!qword_25525EDA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C362078()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C3A77B8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for StoreAndForwardStatusInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StoreAndForwardStatusInternal.__allocating_init(activationID:readCount:expiry:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of StoreAndForwardStatusInternal.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t PaymentCardReaderSession.ReadError.errorName.getter()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 16))
    return 0xD000000000000013;
  if (*(_BYTE *)(v0 + 16) == 1)
    return 0xD00000000000001BLL;
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C3621A0 + 4 * byte_21C3B3810[*(_QWORD *)v0]))(0x41746F4E64616572, 0xEE006465776F6C6CLL);
}

void sub_21C3621A0()
{
  JUMPOUT(0x21C36213CLL);
}

void sub_21C3621B0()
{
  JUMPOUT(0x21C36213CLL);
}

void sub_21C3621C0()
{
  JUMPOUT(0x21C36213CLL);
}

uint64_t sub_21C3621D0()
{
  return 0x7265646165526F6ELL;
}

void sub_21C3621F4()
{
  JUMPOUT(0x21C36213CLL);
}

void sub_21C362204()
{
  JUMPOUT(0x21C36213CLL);
}

void sub_21C362214()
{
  JUMPOUT(0x21C36213CLL);
}

void sub_21C362224()
{
  JUMPOUT(0x21C36213CLL);
}

void sub_21C362234()
{
  JUMPOUT(0x21C36213CLL);
}

uint64_t sub_21C362244()
{
  return 0x636E614364616572;
}

uint64_t sub_21C362268()
{
  return 0x4164696C61766E69;
}

void sub_21C36228C()
{
  JUMPOUT(0x21C362150);
}

void sub_21C362298()
{
  JUMPOUT(0x21C362150);
}

uint64_t sub_21C3622A4()
{
  return 0x626173694463666ELL;
}

void sub_21C3622C4()
{
  JUMPOUT(0x21C36213CLL);
}

void sub_21C3622D4()
{
  JUMPOUT(0x21C36213CLL);
}

uint64_t sub_21C3622E4()
{
  return 0x6461655264726163;
}

uint64_t sub_21C362358()
{
  return 0x6E656B6F546E6970;
}

uint64_t sub_21C36237C()
{
  return 0x7972746E456E6970;
}

uint64_t sub_21C3623A0()
{
  return 0x65636E61436E6970;
}

uint64_t sub_21C3623C0()
{
  return 0x6C41746F4E6E6970;
}

uint64_t PaymentCardReaderSession.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaymentCardReaderSession.Event.name.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C362448 + 4 * byte_21C3B382A[*v0]))(0x726F467964616572, 0xEB00000000706154);
}

uint64_t sub_21C362448()
{
  return 0x6574654464726163;
}

uint64_t sub_21C362468()
{
  return 0x614365766F6D6572;
}

uint64_t sub_21C362484()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_21C3624A0()
{
  return 0x7972746572;
}

uint64_t sub_21C3624B4()
{
  return 0x636E614364616572;
}

unint64_t sub_21C3624D8()
{
  return 0xD000000000000010;
}

BOOL static PaymentCardReaderSession.Event.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PaymentCardReaderSession.Event.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t PaymentCardReaderSession.Event.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t PaymentCardReaderSession.ReadError.errorDescription.getter()
{
  uint64_t v0;
  unint64_t v2;

  if (*(_BYTE *)(v0 + 16))
  {
    if (*(_BYTE *)(v0 + 16) != 1)
      __asm { BR              X9 }
    swift_bridgeObjectRetain();
    sub_21C3A83DC();
    swift_bridgeObjectRelease();
    v2 = 0xD00000000000002ALL;
    goto LABEL_6;
  }
  if (*(_QWORD *)(v0 + 8))
  {
    v2 = 0xD000000000000030;
    sub_21C3A7F8C();
    swift_bridgeObjectRetain();
LABEL_6:
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    return v2;
  }
  return 0xD00000000000005CLL;
}

void sub_21C3626D8()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C3626E8()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C3626F8()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362708()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362718()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362728()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362738()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362748()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362758()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362768()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362778()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362784()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362794()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C3627A4()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C3627B4()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C3627C4()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C3627D4()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C3627E0()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C3627F0()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362800()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362810()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362820()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362830()
{
  JUMPOUT(0x21C3626BCLL);
}

void sub_21C362840()
{
  JUMPOUT(0x21C3626BCLL);
}

uint64_t PaymentCardReaderSession.PINToken.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ProximityReader::PaymentCardReaderSession::PINToken __swiftcall PaymentCardReaderSession.PINToken.init(rawValue:)(ProximityReader::PaymentCardReaderSession::PINToken rawValue)
{
  ProximityReader::PaymentCardReaderSession::PINToken *v1;

  *v1 = rawValue;
  return rawValue;
}

uint64_t PaymentCardReaderSession.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - v6;
  if (qword_25525AAD0 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v8, (uint64_t)v7);
  v9 = sub_21C3A79D4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_21C2D1DC8((uint64_t)v7);
  }
  else
  {
    sub_21C365870(v1, 0x74696E696564, 0xE600000000000000, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  sub_21C2D1D80(v8, (uint64_t)v4);
  if (v11(v4, 1, v9) == 1)
  {
    sub_21C2D1DC8((uint64_t)v4);
  }
  else
  {
    v12 = sub_21C3A79BC();
    v13 = sub_21C3A81D8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21C2CD000, v12, v13, "PaymentCardReaderSession destroyed", v14, 2u);
      MEMORY[0x22077AF8C](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t PaymentCardReaderSession.__deallocating_deinit()
{
  PaymentCardReaderSession.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21C362AB4()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C362B14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (__cdecl *v9)();

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[4];
  v2 = __swift_project_value_buffer(v0[3], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[4];
  if (v5 == 1)
  {
    sub_21C2D1DC8(v0[4]);
  }
  else
  {
    sub_21C365870(v0[2], 0x65526C65636E6163, 0xEC00000029286461, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AAB0 != -1)
    swift_once();
  v9 = (uint64_t (__cdecl *)())((char *)&dword_25525E2E0 + dword_25525E2E0);
  v7 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_21C362C5C;
  return v9();
}

uint64_t sub_21C362C5C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_21C362CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C362D28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[6];
  v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[6];
  if (v5 == 1)
  {
    sub_21C2D1DC8(v0[6]);
  }
  else
  {
    sub_21C365870(v0[4], 0xD000000000000013, 0x800000021C3BD5A0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_21C362E3C;
  return sub_21C362E8C(v0[2], v0[3], 0, 0);
}

uint64_t sub_21C362E3C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C362E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D5F8);
  v5[7] = swift_task_alloc();
  v5[8] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C362F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned __int8 v17[9];

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 64), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 72);
  if (v5 == 1)
  {
    sub_21C2D1DC8(*(_QWORD *)(v0 + 72));
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 48), 0xD000000000000020, 0x800000021C3BD5C0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_21C2F86A8(*(unsigned int **)(v0 + 24));
  v7 = sub_21C2F8F28(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 48));
  v8 = *(_QWORD *)(v0 + 56);
  sub_21C2ED3E0(*(_QWORD *)(v0 + 24), v8, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardTransactionRequest);
  v9 = type metadata accessor for PaymentCardTransactionRequest();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v17[0] = 4;
  v10 = objc_allocWithZone((Class)type metadata accessor for TransactionInternal());
  v11 = sub_21C322DE8(0, v8, -1, v7, 0, MEMORY[0x24BEE4AF8], 3, v17);
  *(_QWORD *)(v0 + 80) = v11;
  if (qword_25525AAB0 != -1)
    swift_once();
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v12 + 32);
  v14 = *(_QWORD *)(v12 + 40);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v15;
  *v15 = v0;
  v15[1] = sub_21C363148;
  return sub_21C33E99C(v13, v14, (uint64_t)v11, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_21C363148(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C3631B4()
{
  uint64_t v0;
  void *object;
  void *v2;
  uint64_t v3;
  Swift::Bool isPINFallback;
  __int16 v5;
  uint64_t countAndFlagsBits;
  Swift::String_optional paymentCardData;
  Swift::String_optional generalCardData;
  Swift::String_optional applicationTypeIdentifier;
  void *v10;
  void *v11;
  uint64_t v12;
  ProximityReader::PaymentCardReadResult_optional v14;

  ReadResult.getPaymentData()(&v14);
  object = v14.value.id._object;
  if (v14.value.id._object)
  {
    v2 = *(void **)(v0 + 96);
    v3 = *(_QWORD *)(v0 + 16);
    isPINFallback = v14.value.isPINFallback;
    v5 = *(_WORD *)&v14.value.outcome;
    countAndFlagsBits = v14.value.id._countAndFlagsBits;

    paymentCardData = v14.value.paymentCardData;
    generalCardData = v14.value.generalCardData;
    applicationTypeIdentifier = v14.value.applicationTypeIdentifier;
    *(_QWORD *)v3 = countAndFlagsBits;
    *(_QWORD *)(v3 + 8) = object;
    *(Swift::String_optional *)(v3 + 16) = paymentCardData;
    *(Swift::String_optional *)(v3 + 32) = generalCardData;
    *(Swift::String_optional *)(v3 + 48) = applicationTypeIdentifier;
    *(_BYTE *)(v3 + 64) = v5;
    *(_BYTE *)(v3 + 65) = HIBYTE(v5) & 1;
    *(_BYTE *)(v3 + 66) = isPINFallback;
  }
  else
  {
    v10 = *(void **)(v0 + 96);
    v11 = *(void **)(v0 + 80);
    sub_21C2FA030();
    swift_allocError();
    *(_OWORD *)v12 = xmmword_21C3B17C0;
    *(_BYTE *)(v12 + 16) = 2;
    swift_willThrow();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3632D8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C363320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C363384()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[6];
  v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[6];
  if (v5 == 1)
  {
    sub_21C2D1DC8(v0[6]);
  }
  else
  {
    sub_21C365870(v0[4], 0xD000000000000013, 0x800000021C3BD5A0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_21C3651A4;
  return sub_21C363498(v0[2], v0[3], 0, 0);
}

uint64_t sub_21C363498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  type metadata accessor for PaymentCardVerificationRequest();
  v5[7] = swift_task_alloc();
  v5[8] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C363530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[3];
  uint64_t v24;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 64), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v6 = v5(v1, 1, v3);
  v7 = *(_QWORD *)(v0 + 80);
  if (v6 == 1)
  {
    sub_21C2D1DC8(*(_QWORD *)(v0 + 80));
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 48), 0xD000000000000020, 0x800000021C3BD5C0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v8 = *(uint64_t **)(v0 + 24);
  type metadata accessor for CurrencyDefinitions();
  static CurrencyDefinitions.find(isoCurrencyCode:countryCode:)(*v8, v8[1], -1, (uint64_t)v23);
  v9 = v24;
  sub_21C2FA0C0(v23[0], v23[1], v23[2], v24);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 56);
    sub_21C2ED3E0(*(_QWORD *)(v0 + 24), v10, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardVerificationRequest);
    v11 = _s15ProximityReader19TransactionInternalC12verificationAcA30PaymentCardVerificationRequestV_tcfC_0(v10);
    *(_QWORD *)(v0 + 88) = v11;
    if (qword_25525AAB0 != -1)
      swift_once();
    v12 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v12 + 32);
    v14 = *(_QWORD *)(v12 + 40);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v15;
    *v15 = v0;
    v15[1] = sub_21C363824;
    return sub_21C33E99C(v13, v14, (uint64_t)v11, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 72);
    sub_21C2D1D80(v2, v17);
    if (v5(v17, 1, v3) == 1)
    {
      sub_21C2D1DC8(*(_QWORD *)(v0 + 72));
    }
    else
    {
      v18 = sub_21C3A79BC();
      v19 = sub_21C3A81C0();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_21C2CD000, v18, v19, "PaymentCardVerificationRequest - invalidCurrencyCode", v20, 2u);
        MEMORY[0x22077AF8C](v20, -1, -1);
      }
      v21 = *(_QWORD *)(v0 + 72);

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v21, v3);
    }
    sub_21C2FA030();
    swift_allocError();
    *(_OWORD *)v22 = xmmword_21C3ACA80;
    *(_BYTE *)(v22 + 16) = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21C363824(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C363890()
{
  uint64_t v0;
  void *object;
  void *v2;
  uint64_t v3;
  Swift::Bool isPINFallback;
  __int16 v5;
  uint64_t countAndFlagsBits;
  Swift::String_optional paymentCardData;
  Swift::String_optional generalCardData;
  Swift::String_optional applicationTypeIdentifier;
  void *v10;
  void *v11;
  uint64_t v12;
  ProximityReader::PaymentCardReadResult_optional v14;

  ReadResult.getPaymentData()(&v14);
  object = v14.value.id._object;
  if (v14.value.id._object)
  {
    v2 = *(void **)(v0 + 104);
    v3 = *(_QWORD *)(v0 + 16);
    isPINFallback = v14.value.isPINFallback;
    v5 = *(_WORD *)&v14.value.outcome;
    countAndFlagsBits = v14.value.id._countAndFlagsBits;

    paymentCardData = v14.value.paymentCardData;
    generalCardData = v14.value.generalCardData;
    applicationTypeIdentifier = v14.value.applicationTypeIdentifier;
    *(_QWORD *)v3 = countAndFlagsBits;
    *(_QWORD *)(v3 + 8) = object;
    *(Swift::String_optional *)(v3 + 16) = paymentCardData;
    *(Swift::String_optional *)(v3 + 32) = generalCardData;
    *(Swift::String_optional *)(v3 + 48) = applicationTypeIdentifier;
    *(_BYTE *)(v3 + 64) = v5;
    *(_BYTE *)(v3 + 65) = HIBYTE(v5) & 1;
    *(_BYTE *)(v3 + 66) = isPINFallback;
  }
  else
  {
    v10 = *(void **)(v0 + 104);
    v11 = *(void **)(v0 + 88);
    sub_21C2FA030();
    swift_allocError();
    *(_OWORD *)v12 = xmmword_21C3B17C0;
    *(_BYTE *)(v12 + 16) = 2;
    swift_willThrow();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3639CC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C363A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C363A88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[6];
  v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[6];
  if (v5 == 1)
  {
    sub_21C2D1DC8(v0[6]);
  }
  else
  {
    sub_21C365870(v0[4], 0x2853415664616572, 0xEB00000000293A5FLL, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_21C3651A4;
  return sub_21C363BA0(v0[2], v0[3], 0, 0);
}

uint64_t sub_21C363BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D5F8);
  v5[7] = swift_task_alloc();
  v5[8] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C363C2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned __int8 v18[9];

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[9];
  v2 = __swift_project_value_buffer(v0[8], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[9];
  if (v5 == 1)
  {
    sub_21C2D1DC8(v0[9]);
  }
  else
  {
    sub_21C365870(v0[6], 0xD000000000000018, 0x800000021C3BD5F0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = sub_21C2F9984(v0[3], *(_QWORD *)(v0[6] + 48));
  v0[10] = (uint64_t)v7;
  v8 = v7;
  v9 = v0[7];
  v10 = type metadata accessor for PaymentCardTransactionRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v18[0] = 4;
  v11 = objc_allocWithZone((Class)type metadata accessor for TransactionInternal());
  swift_retain();
  v12 = sub_21C322DE8(1, v9, -1, MEMORY[0x24BEE4AF8], v8, MEMORY[0x24BEE4AF8], 2, v18);
  v0[11] = (uint64_t)v12;
  swift_release();
  if (qword_25525AAB0 != -1)
    swift_once();
  v13 = v0[6];
  v14 = *(_QWORD *)(v13 + 32);
  v15 = *(_QWORD *)(v13 + 40);
  v16 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v16;
  *v16 = v0;
  v16[1] = sub_21C363E54;
  return sub_21C33E99C(v14, v15, (uint64_t)v12, v0[4], v0[5]);
}

uint64_t sub_21C363E54(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 112) = a1;
  return swift_task_switch();
}

uint64_t sub_21C363EC8()
{
  uint64_t v0;
  char *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t D0VGSayACGFZ_0;

  v1 = *(char **)(v0 + 112);
  v2 = *(void **)(v0 + 88);
  v3 = *(_QWORD **)(v0 + 16);
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId + 8];
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries];
  swift_bridgeObjectRetain();
  D0VGSayACGFZ_0 = _s15ProximityReader12VASReadEntryC11externalizeySayAA0C6ResultV04ReadD0VGSayACGFZ_0(v6);

  swift_release();
  *v3 = v5;
  v3[1] = v4;
  v3[2] = D0VGSayACGFZ_0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C363F88()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C363FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_BYTE *)(v6 + 80) = a5;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v6 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C364044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 56), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 64);
  if (v5 == 1)
  {
    sub_21C2D1DC8(*(_QWORD *)(v0 + 64));
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 48), 0xD00000000000002ELL, 0x800000021C3BD610, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  *v7 = v0;
  v7[1] = sub_21C364160;
  return sub_21C3641B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 80), 0, 0);
}

uint64_t sub_21C364160()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C3641B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 + 56) = a7;
  *(_QWORD *)(v8 + 64) = v7;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a6;
  *(_BYTE *)(v8 + 136) = a5;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D5F8);
  *(_QWORD *)(v8 + 72) = swift_task_alloc();
  *(_QWORD *)(v8 + 80) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v8 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C364244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned __int8 v19[9];

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 88);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 80), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 88);
  if (v5 == 1)
  {
    sub_21C2D1DC8(*(_QWORD *)(v0 + 88));
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 64), 0xD00000000000003BLL, 0x800000021C3BD640, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_21C2F86A8(*(unsigned int **)(v0 + 32));
  v7 = sub_21C2F8F28(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 48));
  v8 = sub_21C2F9984(*(_QWORD *)(v0 + 40), *(_QWORD *)(*(_QWORD *)(v0 + 64) + 48));
  *(_QWORD *)(v0 + 96) = v8;
  v9 = v8;
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(unsigned __int8 *)(v0 + 136);
  sub_21C2ED3E0(*(_QWORD *)(v0 + 32), v10, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardTransactionRequest);
  v12 = type metadata accessor for PaymentCardTransactionRequest();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  v19[0] = 4;
  objc_allocWithZone((Class)type metadata accessor for TransactionInternal());
  swift_retain();
  v13 = sub_21C322DE8(2, v10, -1, v7, v9, MEMORY[0x24BEE4AF8], v11, v19);
  *(_QWORD *)(v0 + 104) = v13;
  swift_release();
  if (qword_25525AAB0 != -1)
    swift_once();
  v14 = *(_QWORD *)(v0 + 64);
  v15 = *(_QWORD *)(v14 + 32);
  v16 = *(_QWORD *)(v14 + 40);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v17;
  *v17 = v0;
  v17[1] = sub_21C3644AC;
  return sub_21C33E99C(v15, v16, (uint64_t)v13, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_21C3644AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 128) = a1;
  return swift_task_switch();
}

uint64_t sub_21C364520()
{
  uint64_t v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  void *object;
  Swift::Bool isPINFallback;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t D0VGSayACGFZ_0;
  uint64_t countAndFlagsBits;
  Swift::String_optional generalCardData;
  Swift::String_optional paymentCardData;
  Swift::String id;
  __int16 v15;
  void *v16;
  ProximityReader::PaymentCardReadResult_optional v17;

  v1 = *(char **)(v0 + 128);
  v16 = *(void **)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD **)(v0 + 24);
  ReadResult.getPaymentData()(&v17);
  paymentCardData = v17.value.paymentCardData;
  id = v17.value.id;
  generalCardData = v17.value.generalCardData;
  object = v17.value.applicationTypeIdentifier.value._object;
  countAndFlagsBits = v17.value.applicationTypeIdentifier.value._countAndFlagsBits;
  v15 = *(_WORD *)&v17.value.outcome;
  isPINFallback = v17.value.isPINFallback;
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId];
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId + 8];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries];
  swift_bridgeObjectRetain();
  D0VGSayACGFZ_0 = _s15ProximityReader12VASReadEntryC11externalizeySayAA0C6ResultV04ReadD0VGSayACGFZ_0(v8);
  swift_release();

  *(Swift::String *)v3 = id;
  *(Swift::String_optional *)(v3 + 16) = paymentCardData;
  *(Swift::String_optional *)(v3 + 32) = generalCardData;
  *(_QWORD *)(v3 + 48) = countAndFlagsBits;
  *(_QWORD *)(v3 + 56) = object;
  *(_BYTE *)(v3 + 66) = isPINFallback;
  *(_WORD *)(v3 + 64) = v15;
  *v2 = v6;
  v2[1] = v7;
  v2[2] = D0VGSayACGFZ_0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C364644()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C364694(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a1;
  v5[5] = a3;
  v5[8] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v7 = swift_task_alloc();
  v8 = *a2;
  v9 = a2[1];
  v5[9] = v7;
  v5[10] = v8;
  v5[11] = v9;
  return swift_task_switch();
}

uint64_t sub_21C364704()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[9];
  v2 = __swift_project_value_buffer(v0[8], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[9];
  if (v5 == 1)
  {
    sub_21C2D1DC8(v0[9]);
  }
  else
  {
    sub_21C365870(v0[7], 0xD00000000000002ALL, 0x800000021C3BD680, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AAB0 != -1)
    swift_once();
  v7 = v0[11];
  v8 = v0[7];
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_QWORD *)(v8 + 40);
  v0[2] = v0[10];
  v0[3] = v7;
  v11 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = sub_21C364864;
  return sub_21C33FBAC(v0[4], v9, v10, v0 + 2, v0[5], v0[6]);
}

uint64_t sub_21C364864()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C3648D8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_21C364910()
{
  unint64_t result;

  result = qword_25525EE10;
  if (!qword_25525EE10)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCardReaderSession.Event, &type metadata for PaymentCardReaderSession.Event);
    atomic_store(result, (unint64_t *)&qword_25525EE10);
  }
  return result;
}

unint64_t sub_21C364958()
{
  unint64_t result;

  result = qword_25525EE18;
  if (!qword_25525EE18)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCardReaderSession.PINToken, &type metadata for PaymentCardReaderSession.PINToken);
    atomic_store(result, (unint64_t *)&qword_25525EE18);
  }
  return result;
}

uint64_t type metadata accessor for PaymentCardReaderSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for PaymentCardReaderSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PaymentCardReaderSession.cancelRead()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 120) + *(_QWORD *)(*(_QWORD *)v0 + 120));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21C2DF728;
  return v4();
}

uint64_t dispatch thunk of PaymentCardReaderSession.readPaymentCard(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 128) + *(_QWORD *)(*(_QWORD *)v2 + 128));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_21C2DFEDC;
  return v8(a1, a2);
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_21C2DFEDC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of PaymentCardReaderSession.readPaymentCard(_:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 136)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 136));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_21C2DFEDC;
  return v12(a1, a2, a3, a4);
}

{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 152)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 152));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_21C2DFEDC;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PaymentCardReaderSession.readVAS(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 160) + *(_QWORD *)(*(_QWORD *)v2 + 160));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_21C2DFEDC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of PaymentCardReaderSession.readVAS(_:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 168)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 168));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_21C2DFEDC;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PaymentCardReaderSession.readPaymentCard(_:vasRequest:stopOnVASResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 176)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 176));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_21C2DFEDC;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PaymentCardReaderSession.readPaymentCard(_:vasRequest:stopOnVASResult:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v7 + 184)
                                                                                              + *(_QWORD *)(*(_QWORD *)v7 + 184));
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_21C2D8DB8;
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of PaymentCardReaderSession.capturePIN(using:cardReaderTransactionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 192)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 192));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_21C2DFEDC;
  return v12(a1, a2, a3, a4);
}

uint64_t storeEnumTagSinglePayload for PaymentCardReaderSession.Event(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_21C364F40 + 4 * byte_21C3B3850[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_21C364F74 + 4 * byte_21C3B384B[v4]))();
}

uint64_t sub_21C364F74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C364F7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C364F84);
  return result;
}

uint64_t sub_21C364F90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C364F98);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_21C364F9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C364FA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardReaderSession.Event()
{
  return &type metadata for PaymentCardReaderSession.Event;
}

uint64_t destroy for PaymentCardReaderSession.ReadError(uint64_t a1)
{
  return sub_21C34AFF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s15ProximityReader24PaymentCardReaderSessionC9ReadErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21C34AFE0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PaymentCardReaderSession.ReadError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21C34AFE0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_21C34AFF8(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PaymentCardReaderSession.ReadError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_21C34AFF8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaymentCardReaderSession.ReadError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaymentCardReaderSession.ReadError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_21C365154(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_21C36516C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardReaderSession.ReadError()
{
  return &type metadata for PaymentCardReaderSession.ReadError;
}

ValueMetadata *type metadata accessor for PaymentCardReaderSession.PINToken()
{
  return &type metadata for PaymentCardReaderSession.PINToken;
}

uint64_t sub_21C3651A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  __swift_allocate_value_buffer(v0, qword_255278F30);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255278F30);
  sub_21C3A79C8();
  v2 = sub_21C3A79D4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_21C36523C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  __swift_allocate_value_buffer(v0, qword_255278F48);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255278F48);
  sub_21C3A79C8();
  v2 = sub_21C3A79D4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_21C3652E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  __swift_allocate_value_buffer(v0, qword_255278F60);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255278F60);
  sub_21C3A79C8();
  v2 = sub_21C3A79D4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_21C365388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  __swift_allocate_value_buffer(v0, qword_255278F78);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255278F78);
  sub_21C3A79C8();
  v2 = sub_21C3A79D4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_21C365420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  __swift_allocate_value_buffer(v0, qword_255278F90);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255278F90);
  sub_21C3A79C8();
  v2 = sub_21C3A79D4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_21C3654BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  __swift_allocate_value_buffer(v0, qword_255278FA8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255278FA8);
  sub_21C3A79C8();
  v2 = sub_21C3A79D4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_21C365564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  __swift_allocate_value_buffer(v0, qword_255278FC0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255278FC0);
  sub_21C3A79C8();
  v2 = sub_21C3A79D4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_21C36560C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  __swift_allocate_value_buffer(v0, qword_255278FD8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255278FD8);
  sub_21C3A79C8();
  v2 = sub_21C3A79D4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_21C3656AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  __swift_allocate_value_buffer(v0, qword_255278FF0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255278FF0);
  sub_21C3A79C8();
  v2 = sub_21C3A79D4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_21C36574C()
{
  uint64_t result;

  result = MCGestaltIsInternalBuild();
  byte_255279008 = result;
  return result;
}

uint64_t type metadata accessor for PRLoggers()
{
  return objc_opt_self();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_21C3657C8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_21C3A7F74();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_21C3A8010();
  }
  __break(1u);
  return result;
}

void sub_21C365870(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  if (qword_25525AB10 != -1)
    swift_once();
  if (byte_255279008 == 1)
  {
    v9 = HIBYTE(a5) & 0xF;
    if ((a5 & 0x2000000000000000) == 0)
      v9 = a4 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      v30 = a2;
      v31 = a3;
      swift_bridgeObjectRetain();
      sub_21C3A7F8C();
      sub_21C3A7F8C();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v30 = sub_21C3A7E9C();
    v31 = v10;
    sub_21C30E1A4();
    v11 = sub_21C3A831C();
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = sub_21C3657C8(8uLL, v11, v13);
    v16 = v15;
    v29 = v17;
    v19 = v18;
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_21C3A79BC();
    v21 = sub_21C3A81A8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v30 = v28;
      *(_DWORD *)v22 = 136381187;
      swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525F010);
      v23 = sub_21C3A7F14();
      sub_21C350398(v23, v24, &v30);
      sub_21C3A82F8();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2081;
      swift_bridgeObjectRetain();
      v25 = MEMORY[0x22077A11C](v14, v16, v29, v19);
      v27 = v26;
      swift_bridgeObjectRelease();
      sub_21C350398(v25, v27, &v30);
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_21C350398(a2, a3, &v30);
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21C2CD000, v20, v21, "(o)%{private}s-%{private}s.%{private}s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v28, -1, -1);
      MEMORY[0x22077AF8C](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
    }

  }
}

_QWORD *LayoutBundleManager.__allocating_init()()
{
  _QWORD *v0;
  id v1;

  v0 = (_QWORD *)swift_allocObject();
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  return v0;
}

_QWORD *LayoutBundleManager.init()()
{
  _QWORD *v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  return v0;
}

uint64_t sub_21C365CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  v3[6] = swift_task_alloc();
  v4 = sub_21C3A76C8();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C365DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void (*v20)(uint64_t, uint64_t);
  id v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD *v25;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  _QWORD *v31;

  if (qword_25525AB08 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 144);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 128), (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v6 = v5(v1, 1, v3);
  v7 = *(_QWORD *)(v0 + 144);
  if (v6 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 144), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 40), 0x286C6C6174736E69, 0xEE00293A6D6F7266, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 48);
  sub_21C3A76B0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {
    v11 = *(_QWORD *)(v0 + 136);
    sub_21C2D775C(*(_QWORD *)(v0 + 48), &qword_25525C138);
    sub_21C2D1D80(v2, v11);
    if (v5(v11, 1, v3) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v27 = sub_21C3A79BC();
      v28 = sub_21C3A81C0();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_21C2CD000, v27, v28, "install - unable to install layout bundle", v29, 2u);
        MEMORY[0x22077AF8C](v29, -1, -1);
      }
      v30 = *(_QWORD *)(v0 + 136);

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v30, v3);
    }
    sub_21C30C508();
    swift_allocError();
    *v31 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 56);
    v17 = *(_QWORD *)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v15 + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 48), v16);
    v18 = *(void **)(v17 + 16);
    *(_QWORD *)(v0 + 152) = v18;
    v19 = objc_msgSend(v18, sel_temporaryDirectory);
    sub_21C3A7698();

    sub_21C3A7680();
    v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    *(_QWORD *)(v0 + 160) = v20;
    v20(v14, v16);
    sub_21C3A7680();
    v20(v13, v16);
    sub_21C3A765C();
    sub_21C3A7680();
    swift_bridgeObjectRelease();
    v20(v12, v16);
    v21 = objc_msgSend(v18, sel_temporaryDirectory);
    sub_21C3A7698();

    sub_21C3A7680();
    v20(v14, v16);
    sub_21C3A7680();
    v20(v13, v16);
    sub_21C3A7674();
    sub_21C3A765C();
    v20(v13, v16);
    sub_21C3A7680();
    swift_bridgeObjectRelease();
    v20(v12, v16);
    v22 = (void *)sub_21C3A76A4();
    sub_21C366958(v22, v23);
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(v18, sel_temporaryDirectory);
    sub_21C3A7698();

    sub_21C3A7680();
    v20(v13, v16);
    sub_21C3A7680();
    v20(v12, v16);
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v25;
    *v25 = v0;
    v25[1] = sub_21C366384;
    return sub_21C366E40(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 72));
  }
}

uint64_t sub_21C366384()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 160);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_21C366450()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 176);
  sub_21C368BE0(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 80));
  if (v1)
  {
    v2 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v3 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 56);
    v2(*(_QWORD *)(v0 + 80), v5);
    v2(v3, v5);
    v2(v4, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(void **)(v0 + 152);
    sub_21C3A76A4();
    v8 = (void *)sub_21C3A7EB4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 16) = 0;
    LODWORD(v7) = objc_msgSend(v7, sel_removeItemAtPath_error_, v8, v0 + 16);

    v9 = *(void **)(v0 + 16);
    if ((_DWORD)v7)
    {
      v10 = v9;
    }
    else
    {
      v11 = v9;
      v12 = (void *)sub_21C3A75FC();

      swift_willThrow();
    }
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v15 = *(_QWORD *)(v0 + 112);
    v14 = *(_QWORD *)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 56);
    v18 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v18 + 24) = sub_21C3A76A4();
    *(_QWORD *)(v18 + 32) = v19;
    swift_bridgeObjectRelease();
    v20 = sub_21C3A76A4();
    v22 = v21;
    v13(v16, v17);
    v13(v15, v17);
    v13(v14, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v20, v22);
  }
}

uint64_t sub_21C3666FC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 56);
  v1(*(_QWORD *)(v0 + 80), v4);
  v1(v2, v4);
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C366810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AB08 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v5, (uint64_t)v4);
  v6 = sub_21C3A79D4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_21C2D775C((uint64_t)v4, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v1, 0x292865766F6D6572, 0xE800000000000000, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v8 = *(void **)(v1 + 24);
  v9 = *(void **)(v1 + 32);
  swift_bridgeObjectRetain();
  sub_21C366958(v8, v9);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C366958(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  unsigned int v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  unsigned int v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  char *v37;
  uint64_t v38;
  uint8_t *v39;
  char *v40;
  uint64_t v41;
  id v42[3];

  v42[2] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v9 = *(void **)(v2 + 16);
    swift_bridgeObjectRetain();
    v10 = (void *)sub_21C3A7EB4();
    v11 = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

    if (!v11)
      return swift_bridgeObjectRelease();
    v12 = (void *)sub_21C3A7EB4();
    v42[0] = 0;
    v13 = objc_msgSend(v9, sel_contentsOfDirectoryAtPath_error_, v12, v42);

    v14 = v42[0];
    if (v13)
    {
      v15 = sub_21C3A8070();
      v16 = v14;

      v17 = *(_QWORD *)(v15 + 16);
      if (v17)
      {
        v39 = (uint8_t *)v5;
        v40 = v8;
        v38 = v15;
        v18 = v15 + 40;
        for (i = v17 - 1; ; --i)
        {
          v42[0] = a1;
          v42[1] = a2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21C3A7F8C();
          swift_bridgeObjectRetain();
          sub_21C3A7F8C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v20 = (void *)sub_21C3A7EB4();
          swift_bridgeObjectRelease();
          v42[0] = 0;
          v21 = objc_msgSend(v9, sel_removeItemAtPath_error_, v20, v42, v38);

          if (!v21)
          {
            v25 = v42[0];
            swift_bridgeObjectRelease();
            v24 = (void *)sub_21C3A75FC();

            swift_willThrow();
            v5 = (uint64_t)v39;
            v8 = v40;
            goto LABEL_17;
          }
          if (!i)
            break;
          v18 += 16;
          v22 = v42[0];
        }
        v26 = v42[0];
        v5 = (uint64_t)v39;
        v8 = v40;
      }
      swift_bridgeObjectRelease();
      v27 = (void *)sub_21C3A7EB4();
      v42[0] = 0;
      v28 = objc_msgSend(v9, sel_removeItemAtPath_error_, v27, v42);

      if (v28)
      {
        v29 = v42[0];
        return swift_bridgeObjectRelease();
      }
      v30 = v42[0];
      v24 = (void *)sub_21C3A75FC();

    }
    else
    {
      v23 = v42[0];
      v24 = (void *)sub_21C3A75FC();

    }
    swift_willThrow();
LABEL_17:
    if (qword_25525AB08 != -1)
      swift_once();
    v31 = __swift_project_value_buffer(v5, (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v31, (uint64_t)v8);
    v32 = sub_21C3A79D4();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v8, 1, v32) == 1)
    {

      swift_bridgeObjectRelease();
      return sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain();
      v34 = sub_21C3A79BC();
      v35 = sub_21C3A81C0();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v40 = (char *)swift_slowAlloc();
        v42[0] = v40;
        *(_DWORD *)v36 = 136315138;
        v39 = v36 + 4;
        swift_bridgeObjectRetain();
        v41 = sub_21C350398((uint64_t)a1, (unint64_t)a2, (uint64_t *)v42);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v34, v35, "removeBundle - unable to remove the bundle folder %s", v36, 0xCu);
        v37 = v40;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v37, -1, -1);
        MEMORY[0x22077AF8C](v36, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }

      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v8, v32);
    }
  }
  return result;
}

uint64_t sub_21C366E40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v4 = sub_21C3A7404();
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v5 = sub_21C3A76C8();
  v3[22] = v5;
  v3[23] = *(_QWORD *)(v5 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C366F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(_QWORD, _QWORD, _QWORD);
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  void *v27;
  void *v28;
  unsigned __int8 v29;
  void *v30;
  unsigned int v31;
  void *v32;
  unsigned int v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  unsigned int v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  void *v44;
  unsigned __int8 v45;
  id v46;
  _QWORD *v47;
  uint64_t v49;
  id v50;
  unsigned int v51;
  os_log_type_t v52;
  uint8_t *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(_QWORD, _QWORD, _QWORD);
  uint64_t v61;
  uint64_t v62[2];

  v62[1] = *MEMORY[0x24BDAC8D0];
  sub_21C3A765C();
  sub_21C3A7680();
  swift_bridgeObjectRelease();
  if (qword_25525AB08 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 168);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 120), (uint64_t)qword_255278FF0);
  *(_QWORD *)(v0 + 224) = v2;
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  *(_QWORD *)(v0 + 232) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v0 + 240) = v4;
  v5 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v4 + 48);
  *(_QWORD *)(v0 + 248) = v5;
  v60 = v5;
  v61 = v2;
  if (v5(v1, 1, v3) == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 168), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 16))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 176));
    v6 = sub_21C3A79BC();
    v7 = sub_21C3A81D8();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 176);
    v58 = *(_QWORD *)(v0 + 184);
    if (v8)
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v56 = v10;
      v12 = swift_slowAlloc();
      v62[0] = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = sub_21C3A7644();
      *(_QWORD *)(v0 + 64) = sub_21C350398(v13, v14, v62);
      sub_21C3A82F8();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v9, v56);
      _os_log_impl(&dword_21C2CD000, v6, v7, "downloadFile - remoteFileURL:      %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v12, -1, -1);
      v15 = v11;
      v5 = v60;
      MEMORY[0x22077AF8C](v15, -1, -1);

    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v9, v10);
    }
    (*(void (**)(_QWORD, uint64_t))(v4 + 8))(*(_QWORD *)(v0 + 168), v3);
  }
  v16 = *(_QWORD *)(v0 + 160);
  sub_21C2D1D80(v2, v16);
  if (v5(v16, 1, v3) == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 160), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 16))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 176));
    v17 = sub_21C3A79BC();
    v18 = sub_21C3A81D8();
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(_QWORD *)(v0 + 200);
    v21 = *(_QWORD *)(v0 + 176);
    v59 = *(_QWORD *)(v0 + 184);
    if (v19)
    {
      v57 = v3;
      v22 = (uint8_t *)swift_slowAlloc();
      v55 = v21;
      v23 = swift_slowAlloc();
      v62[0] = v23;
      *(_DWORD *)v22 = 136315138;
      v24 = sub_21C3A7644();
      *(_QWORD *)(v0 + 56) = sub_21C350398(v24, v25, v62);
      sub_21C3A82F8();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v20, v55);
      _os_log_impl(&dword_21C2CD000, v17, v18, "               destinationFileURL: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v23, -1, -1);
      v26 = v22;
      v3 = v57;
      MEMORY[0x22077AF8C](v26, -1, -1);

    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v20, v21);
    }
    (*(void (**)(_QWORD, uint64_t))(v4 + 8))(*(_QWORD *)(v0 + 160), v3);
  }
  v27 = *(void **)(*(_QWORD *)(v0 + 88) + 16);
  sub_21C3A76A4();
  v28 = (void *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v27, sel_fileExistsAtPath_, v28);

  if ((v29 & 1) != 0)
  {
    sub_21C3A76A4();
    v30 = (void *)sub_21C3A7EB4();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v27, sel_fileExistsAtPath_, v30);

    if (!v31)
    {
LABEL_24:
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 16))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 176));
      sub_21C3A73EC();
      v47 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 256) = v47;
      *v47 = v0;
      v47[1] = sub_21C367810;
      return sub_21C367D58(v0 + 16, *(_QWORD *)(v0 + 112));
    }
    sub_21C3A76A4();
    v32 = (void *)sub_21C3A7EB4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 48) = 0;
    v33 = objc_msgSend(v27, sel_removeItemAtPath_error_, v32, v0 + 48);

    v34 = *(void **)(v0 + 48);
    if (!v33)
    {
      v35 = *(_QWORD *)(v0 + 136);
      v36 = v34;
      v37 = (void *)sub_21C3A75FC();

      swift_willThrow();
      sub_21C2D1D80(v61, v35);
      v38 = v60(v35, 1, v3);
      v39 = *(_QWORD *)(v0 + 136);
      if (v38 != 1)
      {
        v40 = sub_21C3A79BC();
        v41 = sub_21C3A81C0();
        if (os_log_type_enabled(v40, v41))
        {
          v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v42 = 0;
          _os_log_impl(&dword_21C2CD000, v40, v41, "downloadFile - unable to delete former file", v42, 2u);
          MEMORY[0x22077AF8C](v42, -1, -1);
        }
        v43 = *(_QWORD *)(v0 + 136);
LABEL_30:

        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v43, v3);
        goto LABEL_31;
      }
      goto LABEL_26;
    }
LABEL_23:
    v46 = v34;
    goto LABEL_24;
  }
  sub_21C3A76A4();
  v44 = (void *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 40) = 0;
  v45 = objc_msgSend(v27, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v44, 1, 0, v0 + 40);

  v34 = *(void **)(v0 + 40);
  if ((v45 & 1) != 0)
    goto LABEL_23;
  v49 = *(_QWORD *)(v0 + 144);
  v50 = v34;
  v37 = (void *)sub_21C3A75FC();

  swift_willThrow();
  sub_21C2D1D80(v61, v49);
  v51 = v60(v49, 1, v3);
  v39 = *(_QWORD *)(v0 + 144);
  if (v51 != 1)
  {
    v40 = sub_21C3A79BC();
    v52 = sub_21C3A81C0();
    if (os_log_type_enabled(v40, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_21C2CD000, v40, v52, "downloadFile - unable to create folder", v53, 2u);
      MEMORY[0x22077AF8C](v53, -1, -1);
    }
    v43 = *(_QWORD *)(v0 + 144);
    goto LABEL_30;
  }
LABEL_26:
  sub_21C2D775C(v39, (uint64_t *)&unk_25525B0E0);
LABEL_31:
  sub_21C30C508();
  swift_allocError();
  *v54 = 6;
  swift_willThrow();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C367810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_21C3678B0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);

  v1 = *(_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
    v3 = *(_QWORD *)(v0 + 232);
    v4 = *(_QWORD *)(v0 + 152);
    sub_21C2D1D80(*(_QWORD *)(v0 + 224), v4);
    if (v2(v4, 1, v3) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 152), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v6 = sub_21C3A79BC();
      v7 = sub_21C3A81C0();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_21C2CD000, v6, v7, "downloadFile - unable to download file", v8, 2u);
        MEMORY[0x22077AF8C](v8, -1, -1);
      }
      v9 = *(_QWORD *)(v0 + 232);
      v10 = *(_QWORD *)(v0 + 240);
      v11 = *(_QWORD *)(v0 + 152);

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v9);
    }
    sub_21C30C508();
    swift_allocError();
    *v12 = v1;
    swift_willThrow();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 176));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v16 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 24);
    sub_21C2D1E94(*(_QWORD *)(v0 + 16), v5);
    sub_21C3A7764();
    v13 = *(_QWORD *)(v0 + 216);
    v15 = *(_QWORD *)(v0 + 176);
    v14 = *(_QWORD *)(v0 + 184);
    sub_21C36939C(v1, v5, 0);
    sub_21C36939C(v1, v5, 0);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v16 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v16();
}

void sub_21C367CE8()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_ephemeralSessionConfiguration);
  v1 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_, v0);

  qword_255279010 = (uint64_t)v1;
}

uint64_t sub_21C367D58(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[8] = a1;
  v2[9] = a2;
  v3 = sub_21C3A792C();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525F138);
  v2[14] = swift_task_alloc();
  v4 = sub_21C3A7944();
  v2[15] = v4;
  v2[16] = *(_QWORD *)(v4 - 8);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  v2[18] = swift_task_alloc();
  v5 = sub_21C3A7404();
  v2[19] = v5;
  v2[20] = *(_QWORD *)(v5 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C367EC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v27;
  os_log_type_t v28;
  NSObject *log;
  uint64_t v30;

  if (qword_25525AB08 != -1)
    swift_once();
  v1 = v0[28];
  v2 = __swift_project_value_buffer(v0[22], (uint64_t)qword_255278FF0);
  v0[29] = v2;
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v0[30] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v0[31] = v4;
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[32] = v5;
  if (v5(v1, 1, v3) == 1)
  {
    sub_21C2D775C(v0[28], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[20] + 16))(v0[21], v0[9], v0[19]);
    v6 = sub_21C3A79BC();
    v7 = sub_21C3A81D8();
    v8 = os_log_type_enabled(v6, v7);
    v9 = v0[21];
    if (v8)
    {
      v28 = v7;
      v10 = v0[18];
      v11 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v30 = v27;
      *(_DWORD *)v11 = 136315138;
      sub_21C3A73F8();
      v12 = sub_21C3A76C8();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12);
      v15 = v0[18];
      log = v6;
      if (v14 == 1)
      {
        sub_21C2D775C(v15, &qword_25525C138);
        v16 = 0xE800000000000000;
        v17 = 0x3E6C7275206F6E3CLL;
      }
      else
      {
        v17 = sub_21C3A7644();
        v16 = v20;
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
      }
      v22 = v0[20];
      v21 = v0[21];
      v23 = v0[19];
      v0[7] = sub_21C350398(v17, v16, &v30);
      sub_21C3A82F8();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      _os_log_impl(&dword_21C2CD000, log, v28, "Request: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v27, -1, -1);
      MEMORY[0x22077AF8C](v11, -1, -1);

    }
    else
    {
      v18 = v0[19];
      v19 = v0[20];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v9, v18);
    }
    (*(void (**)(_QWORD, uint64_t))(v4 + 8))(v0[28], v3);
  }
  if (qword_25525AB18 != -1)
    swift_once();
  v24 = (void *)qword_255279010;
  v0[33] = qword_255279010;
  v24;
  v25 = (_QWORD *)swift_task_alloc();
  v0[34] = v25;
  *v25 = v0;
  v25[1] = sub_21C3681F4;
  return sub_21C3A819C();
}

uint64_t sub_21C3681F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v5 = *v4;
  *(_QWORD *)(v5 + 280) = a1;
  *(_QWORD *)(v5 + 288) = a2;
  *(_QWORD *)(v5 + 296) = a3;
  *(_QWORD *)(v5 + 304) = v3;
  swift_task_dealloc();
  if (!v3)

  return swift_task_switch();
}

uint64_t sub_21C36826C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  int v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  __int128 v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  BOOL v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v42;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (!v1)
  {
    v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
    v13 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 216);
    sub_21C2D1D80(*(_QWORD *)(v0 + 232), v14);
    if (v12(v14, 1, v13) != 1)
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Execute download file - internalError - Channel failure, nil api service", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = *(_QWORD *)(v0 + 288);
      v24 = *(_QWORD *)(v0 + 280);
      v25 = *(_QWORD *)(v0 + 240);
      v26 = *(_QWORD *)(v0 + 248);
      v27 = *(_QWORD *)(v0 + 216);

      sub_21C2D2B48(v24, v23);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
      goto LABEL_16;
    }
    v15 = *(_QWORD *)(v0 + 288);
    v16 = *(_QWORD *)(v0 + 280);
    v11 = *(_QWORD *)(v0 + 216);

    sub_21C2D2B48(v16, v15);
    goto LABEL_7;
  }
  v2 = (void *)v1;
  v3 = *(id *)(v0 + 296);
  if ((char *)objc_msgSend(v2, sel_statusCode) - 300 < (char *)0xFFFFFFFFFFFFFF9CLL)
  {
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
    v5 = *(_QWORD *)(v0 + 240);
    v6 = *(_QWORD *)(v0 + 208);
    sub_21C2D1D80(*(_QWORD *)(v0 + 232), v6);
    v7 = v4(v6, 1, v5);
    v8 = *(void **)(v0 + 296);
    if (v7 != 1)
    {
      v28 = v8;
      v29 = sub_21C3A79BC();
      v30 = sub_21C3A81C0();
      v31 = os_log_type_enabled(v29, v30);
      v33 = *(_QWORD *)(v0 + 288);
      v32 = *(void **)(v0 + 296);
      v34 = *(_QWORD *)(v0 + 280);
      if (v31)
      {
        v42 = *(_QWORD *)(v0 + 288);
        v35 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v35 = 134217984;
        *(_QWORD *)(v0 + 48) = objc_msgSend(v2, sel_statusCode);
        sub_21C3A82F8();

        _os_log_impl(&dword_21C2CD000, v29, v30, "Execute download file - serverError - Invalid status from server: %ld", v35, 0xCu);
        MEMORY[0x22077AF8C](v35, -1, -1);

        sub_21C2D2B48(v34, v42);
        v36 = *(NSObject **)(v0 + 296);
      }
      else
      {

        sub_21C2D2B48(v34, v33);
        v36 = *(NSObject **)(v0 + 296);
        v29 = v36;
      }
      v37 = *(_QWORD *)(v0 + 240);
      v38 = *(_QWORD *)(v0 + 248);
      v39 = *(_QWORD *)(v0 + 208);

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v37);
      goto LABEL_16;
    }
    v9 = *(_QWORD *)(v0 + 280);
    v10 = *(_QWORD *)(v0 + 288);
    v11 = *(_QWORD *)(v0 + 208);

    sub_21C2D2B48(v9, v10);
LABEL_7:
    sub_21C2D775C(v11, (uint64_t *)&unk_25525B0E0);
LABEL_16:
    v19 = xmmword_21C3B3AD0;
    v18 = 1;
    goto LABEL_17;
  }
  v17 = *(void **)(v0 + 296);

  v18 = 0;
  v19 = *(_OWORD *)(v0 + 280);
LABEL_17:
  v40 = *(_QWORD *)(v0 + 64);
  *(_OWORD *)v40 = v19;
  *(_BYTE *)(v40 + 16) = v18;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C36860C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  char v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  int v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  BOOL v42;
  void *v43;
  uint8_t *v44;
  _QWORD *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v50;
  os_log_type_t v51;
  BOOL v52;
  void *v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(void **)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 128);

  *(_QWORD *)(v0 + 16) = v1;
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
  v4 = swift_dynamicCast();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v4 & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 80);
    v58 = *(_QWORD *)(v0 + 88);
    v5(v9, 0, 1, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v9, v8);
    sub_21C2D1198(&qword_25525F140, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF610], MEMORY[0x24BDCF608]);
    sub_21C3A75E4();
    sub_21C3A7938();
    sub_21C2D1198(&qword_25525F148, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF5D8], MEMORY[0x24BDCF5F0]);
    sub_21C3A8034();
    sub_21C3A8034();
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 40);
    v15 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v15(v11, v12);
    v15(v10, v12);
    if (v13 == v14)
    {
      v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
      v17 = *(_QWORD *)(v0 + 240);
      v18 = *(_QWORD *)(v0 + 200);
      sub_21C2D1D80(*(_QWORD *)(v0 + 232), v18);
      if (v16(v18, 1, v17) == 1)
      {
        v19 = *(void **)(v0 + 304);
        v20 = *(_QWORD *)(v0 + 200);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));

        sub_21C2D775C(v20, (uint64_t *)&unk_25525B0E0);
        v21 = 5;
      }
      else
      {
        v50 = sub_21C3A79BC();
        v51 = sub_21C3A81C0();
        v52 = os_log_type_enabled(v50, v51);
        v53 = *(void **)(v0 + 304);
        if (v52)
        {
          v54 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v54 = 0;
          _os_log_impl(&dword_21C2CD000, v50, v51, "Execute download file - request cancelled", v54, 2u);
          MEMORY[0x22077AF8C](v54, -1, -1);

        }
        else
        {

        }
        v55 = *(_QWORD *)(v0 + 240);
        v56 = *(_QWORD *)(v0 + 248);
        v57 = *(_QWORD *)(v0 + 200);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v55);
        v21 = 5;
      }
      goto LABEL_19;
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 112);
    v5(v22, 1, 1, *(_QWORD *)(v0 + 120));
    sub_21C2D775C(v22, &qword_25525F138);
  }
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v24 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 192);
  sub_21C2D1D80(*(_QWORD *)(v0 + 232), v25);
  if (v23(v25, 1, v24) == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 192), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v26 = sub_21C3A79BC();
    v27 = sub_21C3A81C0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_21C2CD000, v26, v27, "Execute download file - networkError - Server not reachable", v28, 2u);
      MEMORY[0x22077AF8C](v28, -1, -1);
    }
    v29 = *(_QWORD *)(v0 + 240);
    v30 = *(_QWORD *)(v0 + 248);
    v31 = *(_QWORD *)(v0 + 192);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v29);
  }
  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v33 = *(_QWORD *)(v0 + 240);
  v34 = *(_QWORD *)(v0 + 184);
  sub_21C2D1D80(*(_QWORD *)(v0 + 232), v34);
  v35 = v32(v34, 1, v33);
  v36 = *(void **)(v0 + 304);
  v37 = *(_QWORD *)(v0 + 184);
  if (v35 == 1)
  {

    sub_21C2D775C(v37, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v38 = v36;
    v39 = v36;
    v40 = sub_21C3A79BC();
    v41 = sub_21C3A81C0();
    v42 = os_log_type_enabled(v40, v41);
    v43 = *(void **)(v0 + 304);
    if (v42)
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v45 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v44 = 138412290;
      v46 = v43;
      v47 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 24) = v47;
      sub_21C3A82F8();
      *v45 = v47;

      _os_log_impl(&dword_21C2CD000, v40, v41, "Error processing request: %@", v44, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v45, -1, -1);
      MEMORY[0x22077AF8C](v44, -1, -1);

    }
    else
    {

    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 240));
  }
  v21 = 3;
LABEL_19:
  v48 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)v48 = v21;
  *(_QWORD *)(v48 + 8) = 0;
  *(_BYTE *)(v48 + 16) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C368BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  unsigned int v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint8_t *v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  NSURL *v40;
  NSURL *v41;
  char v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  _QWORD *v55;
  _QWORD v56[2];
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70[2];

  v70[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_21C3A76C8();
  v68 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v64 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v56 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v67 = (uint64_t)v56 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v56 - v14;
  if (qword_25525AB08 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v9, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v16, (uint64_t)v15);
  v17 = sub_21C3A79D4();
  v66 = *(_QWORD *)(v17 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v19 = v18(v15, 1, v17);
  v65 = a2;
  v61 = v18;
  v62 = v16;
  if (v19 == 1)
  {
    sub_21C2D775C((uint64_t)v15, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v58 = v17;
    v20 = v68;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    v60 = a1;
    v21(v8, a1, v4);
    v22 = v4;
    v23 = sub_21C3A79BC();
    v24 = sub_21C3A81D8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v57 = (void *)swift_slowAlloc();
      v70[0] = v57;
      *(_DWORD *)v25 = 136315138;
      v56[1] = v25 + 4;
      v26 = sub_21C3A76A4();
      v69 = sub_21C350398(v26, v27, (uint64_t *)v70);
      v16 = v62;
      sub_21C3A82F8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v4);
      _os_log_impl(&dword_21C2CD000, v23, v24, "unzipping file %s", v25, 0xCu);
      v28 = v57;
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v28, -1, -1);
      v29 = v25;
      v18 = v61;
      MEMORY[0x22077AF8C](v29, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v4);
    }
    v4 = v22;
    v17 = v58;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v58);
    a1 = v60;
    a2 = v65;
  }
  v30 = v67;
  sub_21C2D1D80(v16, v67);
  v31 = v18((char *)v30, 1, v17);
  v32 = v68;
  v33 = v64;
  if (v31 == 1)
  {
    sub_21C2D775C(v30, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v64, a2, v4);
    v57 = (void *)v4;
    v34 = sub_21C3A79BC();
    v35 = sub_21C3A81D8();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = (void *)swift_slowAlloc();
      v70[0] = v37;
      v58 = v17;
      *(_DWORD *)v36 = 136315138;
      v60 = a1;
      v38 = sub_21C3A76A4();
      v69 = sub_21C350398(v38, v39, (uint64_t *)v70);
      sub_21C3A82F8();
      swift_bridgeObjectRelease();
      v17 = v58;
      (*(void (**)(char *, void *))(v68 + 8))(v33, v57);
      _os_log_impl(&dword_21C2CD000, v34, v35, "     to folder %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v37, -1, -1);
      MEMORY[0x22077AF8C](v36, -1, -1);

    }
    else
    {

      (*(void (**)(char *, void *))(v32 + 8))(v33, v57);
    }
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v17);
  }
  v40 = (NSURL *)sub_21C3A7668();
  v41 = (NSURL *)sub_21C3A7668();
  v42 = PKUnarchiverZip(v40, v41);

  if ((v42 & 1) == 0)
  {
    v43 = v63;
    sub_21C2D1D80(v62, v63);
    if (v61((char *)v43, 1, v17) == 1)
    {
      sub_21C2D775C(v43, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v44 = sub_21C3A79BC();
      v45 = sub_21C3A81B4();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_21C2CD000, v44, v45, "unzip failure", v46, 2u);
        MEMORY[0x22077AF8C](v46, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v63, v17);
    }
    v47 = (void *)sub_21C3A76A4();
    v48 = v59;
    sub_21C366958(v47, v49);
    swift_bridgeObjectRelease();
    v50 = *(void **)(v48 + 16);
    sub_21C3A76A4();
    v51 = (void *)sub_21C3A7EB4();
    swift_bridgeObjectRelease();
    v70[0] = 0;
    LODWORD(v48) = objc_msgSend(v50, sel_removeItemAtPath_error_, v51, v70);

    if ((_DWORD)v48)
    {
      v52 = v70[0];
    }
    else
    {
      v53 = v70[0];
      v54 = (void *)sub_21C3A75FC();

      swift_willThrow();
    }
    sub_21C30C508();
    swift_allocError();
    *v55 = 6;
    swift_willThrow();
  }
}

uint64_t LayoutBundleManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LayoutBundleManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LayoutBundleManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for LayoutBundleManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LayoutBundleManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of LayoutBundleManager.install(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 136) + *(_QWORD *)(*(_QWORD *)v2 + 136));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_21C2DF954;
  return v8(a1, a2);
}

uint64_t dispatch thunk of LayoutBundleManager.remove()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t sub_21C36939C(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return sub_21C2D2B48(a1, a2);
  return a1;
}

uint64_t ReadErrorInternal.externalize.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;

  switch(result)
  {
    case 0:
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
      goto LABEL_29;
    case 1:
      v2 = xmmword_21C3B3C20;
      goto LABEL_28;
    case 2:
      v2 = xmmword_21C3B17F0;
      goto LABEL_28;
    case 3:
      v2 = xmmword_21C3B17C0;
      goto LABEL_28;
    case 4:
      v2 = xmmword_21C3B3C10;
      goto LABEL_28;
    case 5:
      v2 = xmmword_21C3B3C00;
      goto LABEL_28;
    case 6:
      v2 = xmmword_21C3B3AD0;
      goto LABEL_28;
    case 7:
      v2 = xmmword_21C3B3BF0;
      goto LABEL_28;
    case 8:
      v2 = xmmword_21C3B3BE0;
      goto LABEL_28;
    case 9:
      v2 = xmmword_21C3B17E0;
      goto LABEL_28;
    case 10:
      v2 = xmmword_21C3B3BD0;
      goto LABEL_28;
    case 11:
      v2 = xmmword_21C3ACA70;
      goto LABEL_28;
    case 12:
      v2 = xmmword_21C3ACA80;
      goto LABEL_28;
    case 15:
      v2 = xmmword_21C3B3BC0;
      goto LABEL_28;
    case 17:
      v2 = xmmword_21C3B3BB0;
      goto LABEL_28;
    case 18:
      v2 = xmmword_21C3B3BA0;
      goto LABEL_28;
    case 19:
    case 20:
    case 21:
    case 22:
      v2 = xmmword_21C3B3B30;
      goto LABEL_28;
    case 23:
      *(_QWORD *)a2 = 0xD00000000000001FLL;
      *(_QWORD *)(a2 + 8) = 0x800000021C3BA1B0;
      *(_BYTE *)(a2 + 16) = 0;
      return result;
    case 24:
      v2 = xmmword_21C3B3B90;
      goto LABEL_28;
    case 25:
    case 26:
      v2 = xmmword_21C3B3B70;
      goto LABEL_28;
    case 27:
      v2 = xmmword_21C3B17D0;
      goto LABEL_28;
    case 28:
      v2 = xmmword_21C3B3B60;
      goto LABEL_28;
    case 29:
      v2 = xmmword_21C3B3B50;
      goto LABEL_28;
    case 30:
      v2 = xmmword_21C3B3B40;
      goto LABEL_28;
    case 31:
      v2 = xmmword_21C3B3B80;
      goto LABEL_28;
    default:
      v2 = xmmword_21C3B3B20;
LABEL_28:
      *(_OWORD *)a2 = v2;
LABEL_29:
      *(_BYTE *)(a2 + 16) = 2;
      return result;
  }
}

BOOL ReadErrorInternal.isPINError.getter(uint64_t a1)
{
  return (unint64_t)(a1 - 25) < 6;
}

unint64_t ReadErrorInternal.init(rawValue:)(unint64_t a1)
{
  return sub_21C369BA0(a1);
}

unint64_t static ReadErrorInternal._nsErrorDomain.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_21C369568()
{
  sub_21C3A8700();
  sub_21C3A7E60();
  return sub_21C3A8724();
}

uint64_t sub_21C3695C8()
{
  sub_21C369D70();
  return sub_21C3A756C();
}

uint64_t sub_21C369600()
{
  sub_21C3A8700();
  sub_21C3A7E60();
  return sub_21C3A8724();
}

unint64_t sub_21C36965C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_21C369BA0(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_21C36968C()
{
  sub_21C369D70();
  return sub_21C3A7584();
}

uint64_t sub_21C3696B4()
{
  sub_21C369D70();
  return sub_21C3A7578();
}

uint64_t sub_21C3696DC()
{
  sub_21C369D70();
  return sub_21C3A7560();
}

unint64_t sub_21C36971C()
{
  return 0xD000000000000021;
}

uint64_t ReadErrorInternal.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x41746F4E64616572;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000017;
      break;
    case 2:
      result = 0xD00000000000001CLL;
      break;
    case 3:
      result = 0xD000000000000012;
      break;
    case 4:
      result = 0x7265646165526F6ELL;
      break;
    case 5:
      result = 0xD000000000000014;
      break;
    case 6:
      result = 0xD000000000000012;
      break;
    case 7:
      result = 0xD000000000000019;
      break;
    case 8:
      result = 0xD000000000000020;
      break;
    case 9:
      result = 0xD000000000000011;
      break;
    case 10:
      result = 0x636E614364616572;
      break;
    case 11:
      result = 0x4164696C61766E69;
      break;
    case 12:
    case 21:
    case 23:
    case 31:
    case 33:
      result = 0xD000000000000013;
      break;
    case 13:
      result = 0xD000000000000010;
      break;
    case 14:
      result = 0x656D695464616572;
      break;
    case 15:
      result = 0x626173694463666ELL;
      break;
    case 16:
      result = 0x6461655264726163;
      break;
    case 17:
      result = 0xD000000000000018;
      break;
    case 18:
      result = 0xD000000000000010;
      break;
    case 19:
      result = 0x4664616552736176;
      break;
    case 20:
      result = 0x4E61746144736176;
      break;
    case 22:
      result = 0xD00000000000001BLL;
      break;
    case 24:
      result = 0xD000000000000011;
      break;
    case 25:
      result = 0x6E6F436F4E6E6970;
      break;
    case 26:
      result = 0x7972746E456E6970;
      break;
    case 27:
      result = 0x6E656B6F546E6970;
      break;
    case 28:
      result = 0x7972746E456E6970;
      break;
    case 29:
      result = 0x65636E61436E6970;
      break;
    case 30:
      result = 0x6C41746F4E6E6970;
      break;
    case 32:
      result = 0xD00000000000001BLL;
      break;
    case 34:
      result = 0x7261655464726163;
      break;
    case 35:
      result = 0x4164616552797274;
      break;
    case 36:
      result = 0x5464726143736176;
      break;
    case 37:
      result = 0xD000000000000012;
      break;
    default:
      result = sub_21C3A8670();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_21C369B98()
{
  uint64_t *v0;

  return ReadErrorInternal.description.getter(*v0);
}

unint64_t sub_21C369BA0(unint64_t result)
{
  if (result > 0x25)
    return 0;
  return result;
}

unint64_t sub_21C369BB4()
{
  unint64_t result;

  result = qword_25525F150;
  if (!qword_25525F150)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadErrorInternal, &type metadata for ReadErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F150);
  }
  return result;
}

unint64_t sub_21C369BFC()
{
  unint64_t result;

  result = qword_25525F158;
  if (!qword_25525F158)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadErrorInternal, &type metadata for ReadErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F158);
  }
  return result;
}

unint64_t sub_21C369C44()
{
  unint64_t result;

  result = qword_25525F160;
  if (!qword_25525F160)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadErrorInternal, &type metadata for ReadErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F160);
  }
  return result;
}

unint64_t sub_21C369C8C()
{
  unint64_t result;

  result = qword_25525F168;
  if (!qword_25525F168)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadErrorInternal, &type metadata for ReadErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F168);
  }
  return result;
}

unint64_t sub_21C369CD4()
{
  unint64_t result;

  result = qword_25525F170;
  if (!qword_25525F170)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadErrorInternal, &type metadata for ReadErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F170);
  }
  return result;
}

unint64_t sub_21C369D1C()
{
  unint64_t result;

  result = qword_25525F178;
  if (!qword_25525F178)
  {
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25525F178);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadErrorInternal()
{
  return &type metadata for ReadErrorInternal;
}

unint64_t sub_21C369D70()
{
  unint64_t result;

  result = qword_25525F180;
  if (!qword_25525F180)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadErrorInternal, &type metadata for ReadErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F180);
  }
  return result;
}

uint64_t DiscoveryErrorInternal.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x4E746E65746E6F63;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000014;
      break;
    case 2:
      result = 0x6F70707553746F6ELL;
      break;
    case 3:
      result = 0xD000000000000012;
      break;
    case 4:
      result = 0x75426D6574737973;
      break;
    case 5:
      result = 0x656C6C65636E6163;
      break;
    case 6:
      result = 0x6E776F6E6B6E75;
      break;
    default:
      result = sub_21C3A8670();
      __break(1u);
      break;
  }
  return result;
}

unint64_t DiscoveryErrorInternal.externalize.getter@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v2;

  v2 = 0x5050403020100uLL >> (8 * result);
  if (result >= 7)
    LOBYTE(v2) = 5;
  *a2 = v2;
  return result;
}

unint64_t DiscoveryErrorInternal.init(rawValue:)(unint64_t a1)
{
  return sub_21C36A054(a1);
}

unint64_t static DiscoveryErrorInternal._nsErrorDomain.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_21C369F38()
{
  sub_21C36A198();
  return sub_21C3A756C();
}

unint64_t sub_21C369F70@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_21C36A054(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_21C369FA0()
{
  sub_21C36A198();
  return sub_21C3A7584();
}

uint64_t sub_21C369FC8()
{
  sub_21C36A198();
  return sub_21C3A7578();
}

uint64_t sub_21C369FF0()
{
  sub_21C36A198();
  return sub_21C3A7560();
}

unint64_t sub_21C36A030()
{
  return 0xD000000000000026;
}

uint64_t sub_21C36A04C()
{
  uint64_t *v0;

  return DiscoveryErrorInternal.description.getter(*v0);
}

unint64_t sub_21C36A054(unint64_t result)
{
  if (result > 6)
    return 0;
  return result;
}

unint64_t sub_21C36A068()
{
  unint64_t result;

  result = qword_25525F188;
  if (!qword_25525F188)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryErrorInternal, &type metadata for DiscoveryErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F188);
  }
  return result;
}

unint64_t sub_21C36A0B4()
{
  unint64_t result;

  result = qword_25525F190;
  if (!qword_25525F190)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryErrorInternal, &type metadata for DiscoveryErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F190);
  }
  return result;
}

unint64_t sub_21C36A0FC()
{
  unint64_t result;

  result = qword_25525F198;
  if (!qword_25525F198)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryErrorInternal, &type metadata for DiscoveryErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F198);
  }
  return result;
}

unint64_t sub_21C36A144()
{
  unint64_t result;

  result = qword_25525F1A0;
  if (!qword_25525F1A0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryErrorInternal, &type metadata for DiscoveryErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F1A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryErrorInternal()
{
  return &type metadata for DiscoveryErrorInternal;
}

unint64_t sub_21C36A198()
{
  unint64_t result;

  result = qword_25525F1A8;
  if (!qword_25525F1A8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryErrorInternal, &type metadata for DiscoveryErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525F1A8);
  }
  return result;
}

uint64_t AccountAuth.partnerToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_partnerToken);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountAuth.relink.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_relink);
}

uint64_t AccountAuth.gsToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_gsToken);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountAuth.altDsId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_altDsId);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountAuth.deviceLocale.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_deviceLocale);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static AccountAuth.supportsSecureCoding.getter()
{
  return 1;
}

id AccountAuth.__allocating_init(partnerToken:relink:gsToken:altDsId:deviceLocale:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_class *v9;
  _BYTE *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  objc_super v24;

  v18 = objc_allocWithZone(v9);
  v19 = &v18[OBJC_IVAR____TtC15ProximityReader11AccountAuth_partnerToken];
  *v19 = a1;
  v19[1] = a2;
  v18[OBJC_IVAR____TtC15ProximityReader11AccountAuth_relink] = a3;
  v20 = &v18[OBJC_IVAR____TtC15ProximityReader11AccountAuth_gsToken];
  *v20 = a4;
  v20[1] = a5;
  v21 = &v18[OBJC_IVAR____TtC15ProximityReader11AccountAuth_altDsId];
  *v21 = a6;
  v21[1] = a7;
  v22 = &v18[OBJC_IVAR____TtC15ProximityReader11AccountAuth_deviceLocale];
  *v22 = a8;
  v22[1] = a9;
  v24.receiver = v18;
  v24.super_class = v9;
  return objc_msgSendSuper2(&v24, sel_init);
}

id AccountAuth.init(partnerToken:relink:gsToken:altDsId:deviceLocale:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _BYTE *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  objc_super v15;

  v10 = &v9[OBJC_IVAR____TtC15ProximityReader11AccountAuth_partnerToken];
  *v10 = a1;
  v10[1] = a2;
  v9[OBJC_IVAR____TtC15ProximityReader11AccountAuth_relink] = a3;
  v11 = &v9[OBJC_IVAR____TtC15ProximityReader11AccountAuth_gsToken];
  *v11 = a4;
  v11[1] = a5;
  v12 = &v9[OBJC_IVAR____TtC15ProximityReader11AccountAuth_altDsId];
  *v12 = a6;
  v12[1] = a7;
  v13 = &v9[OBJC_IVAR____TtC15ProximityReader11AccountAuth_deviceLocale];
  *v13 = a8;
  v13[1] = a9;
  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for AccountAuth();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for AccountAuth()
{
  return objc_opt_self();
}

void sub_21C36A448(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v3 = (void *)sub_21C3A7EB4();
  v4 = (void *)sub_21C3A7EB4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader11AccountAuth_relink);
  v6 = (void *)sub_21C3A7EB4();
  objc_msgSend(a1, sel_encodeBool_forKey_, v5, v6);

  v7 = (void *)sub_21C3A7EB4();
  v8 = (void *)sub_21C3A7EB4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  v9 = (void *)sub_21C3A7EB4();
  v10 = (void *)sub_21C3A7EB4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  v11 = (void *)sub_21C3A7EB4();
  v12 = (id)sub_21C3A7EB4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

}

id AccountAuth.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return AccountAuth.init(coder:)(a1);
}

id AccountAuth.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BYTE *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  objc_class *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  objc_super v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2D1C1C();
  v6 = v1;
  v7 = sub_21C3A825C();
  if (v7)
  {
    v8 = (void *)v7;
    v9 = (void *)sub_21C3A7EB4();
    v10 = objc_msgSend(a1, sel_decodeBoolForKey_, v9);

    v11 = sub_21C3A825C();
    if (v11)
    {
      v12 = (void *)v11;
      v13 = sub_21C3A825C();
      if (v13)
      {
        v14 = (void *)v13;
        v15 = sub_21C3A825C();
        if (v15)
        {
          v16 = (void *)v15;
          v17 = sub_21C3A7ED8();
          v18 = (uint64_t *)&v6[OBJC_IVAR____TtC15ProximityReader11AccountAuth_partnerToken];
          *v18 = v17;
          v18[1] = v19;
          v6[OBJC_IVAR____TtC15ProximityReader11AccountAuth_relink] = v10;
          v20 = sub_21C3A7ED8();
          v21 = (uint64_t *)&v6[OBJC_IVAR____TtC15ProximityReader11AccountAuth_gsToken];
          *v21 = v20;
          v21[1] = v22;
          v23 = sub_21C3A7ED8();
          v24 = (uint64_t *)&v6[OBJC_IVAR____TtC15ProximityReader11AccountAuth_altDsId];
          *v24 = v23;
          v24[1] = v25;
          v26 = sub_21C3A7ED8();
          v28 = v27;

          v29 = (uint64_t *)&v6[OBJC_IVAR____TtC15ProximityReader11AccountAuth_deviceLocale];
          *v29 = v26;
          v29[1] = v28;

          v30 = (objc_class *)type metadata accessor for AccountAuth();
          v40.receiver = v6;
          v40.super_class = v30;
          v31 = objc_msgSendSuper2(&v40, sel_init);

          return v31;
        }

        v32 = v12;
        v8 = v14;
      }
      else
      {
        v32 = v8;
        v8 = v12;
      }

    }
  }

  if (qword_25525AAC8 != -1)
    swift_once();
  v33 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F30);
  sub_21C2D1D80(v33, (uint64_t)v5);
  v34 = sub_21C3A79D4();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v5, 1, v34) == 1)
  {

    sub_21C2D1DC8((uint64_t)v5);
  }
  else
  {
    v36 = sub_21C3A79BC();
    v37 = sub_21C3A81C0();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_21C2CD000, v36, v37, "AccountAuth | Failed to decode object", v38, 2u);
      MEMORY[0x22077AF8C](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v34);
  }
  type metadata accessor for AccountAuth();
  swift_deallocPartialClassInstance();
  return 0;
}

id AccountAuth.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AccountAuth.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AccountAuth.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountAuth();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AccountAuth()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccountAuth.__allocating_init(partnerToken:relink:gsToken:altDsId:deviceLocale:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AccountAuth.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AccountAuth.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t VASMode.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C36ABC0 + 4 * byte_21C3B3FE8[a1]))(0x20646E6120736156, 0xEF746E656D796170);
}

uint64_t sub_21C36ABC0()
{
  return 0x7020726F20736156;
}

uint64_t sub_21C36ABE4()
{
  return 0x796C6E6F20736156;
}

uint64_t sub_21C36ABFC()
{
  return 0x20746E656D796150;
}

void *static VASMode.allCases.getter()
{
  return &unk_24E02E288;
}

void sub_21C36AC2C(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_21C36AC9C@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_21C36AD0C + 4 * byte_21C3B3FF0[a1]))(0x7020726F20736156);
}

uint64_t sub_21C36AD0C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7020726F20736156 && v1 == 0xEE00746E656D7961)
    v2 = 1;
  else
    v2 = sub_21C3A864C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_21C36ADC8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_21C3A8700();
  __asm { BR              X9 }
}

uint64_t sub_21C36AE20()
{
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

void sub_21C36AEA4()
{
  __asm { BR              X10 }
}

uint64_t sub_21C36AEEC()
{
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

void sub_21C36AF5C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_21C3A8700();
  __asm { BR              X9 }
}

uint64_t sub_21C36AFB0()
{
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t sub_21C36B034@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s15ProximityReader7VASModeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_21C36B060()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_21C36B09C + 4 * byte_21C3B4000[*v0]))();
}

void sub_21C36B09C(char *a1@<X8>)
{
  strcpy(a1, "Vas or payment");
  a1[15] = -18;
}

void sub_21C36B0C4(_QWORD *a1@<X8>)
{
  *a1 = 0x796C6E6F20736156;
  a1[1] = 0xE800000000000000;
}

void sub_21C36B0E0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "Payment only");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_21C36B104(_QWORD *a1@<X8>)
{
  *a1 = &unk_24E02E2B0;
}

uint64_t _s15ProximityReader7VASModeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_21C3A8508();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_21C36B160()
{
  unint64_t result;

  result = qword_25525F200;
  if (!qword_25525F200)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for VASMode, &type metadata for VASMode);
    atomic_store(result, (unint64_t *)&qword_25525F200);
  }
  return result;
}

unint64_t sub_21C36B1A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525F208;
  if (!qword_25525F208)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_25525F210);
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25525F208);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VASMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21C36B240 + 4 * byte_21C3B4009[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21C36B274 + 4 * byte_21C3B4004[v4]))();
}

uint64_t sub_21C36B274(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C36B27C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C36B284);
  return result;
}

uint64_t sub_21C36B290(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C36B298);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21C36B29C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C36B2A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VASMode()
{
  return &type metadata for VASMode;
}

uint64_t sub_21C36B2C0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = a2[2];
    v6 = a2[5];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v7 = *(int *)(a3 + 28);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    *(_QWORD *)(a1 + 40) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_21C3A7A7C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_21C36B3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_21C3A7A7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_21C36B45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_21C3A7A7C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_21C36B53C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 28);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_21C2D775C((uint64_t)a1 + v7, &qword_25525C788);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_21C3A7A7C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_21C36B650(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_21C3A7A7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_21C36B700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 28);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_21C2D775C(a1 + v8, &qword_25525C788);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_21C3A7A7C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_21C36B7F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C36B7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25525CA08);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_21C36B87C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C36B888(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_25525CA08);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DiscoveryErrorSheet()
{
  uint64_t result;

  result = qword_25525F270;
  if (!qword_25525F270)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21C36B93C()
{
  unint64_t v0;

  sub_21C30ECFC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_21C36B9C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C36B9D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a2;
  v3 = type metadata accessor for DiscoveryErrorSheet();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB08);
  v37 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v36 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB10);
  MEMORY[0x24BDAC7A8](v12);
  v38 = (uint64_t)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v36 - v15;
  *(_QWORD *)v16 = sub_21C3A7B24();
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v17 = &v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525CB30) + 44)];
  v36[0] = (uint64_t)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C36C024((uint64_t)a1, v36[0]);
  v18 = *(unsigned __int8 *)(v4 + 80);
  v19 = (v18 + 16) & ~v18;
  v36[1] = v18 | 7;
  v36[2] = v19 + v5;
  v20 = swift_allocObject();
  sub_21C36C06C((uint64_t)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB38);
  sub_21C310418();
  sub_21C3A7D58();
  v21 = v37;
  v22 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v22(v8, v11, v6);
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB78);
  v22(&v17[*(int *)(v23 + 48)], v8, v6);
  v24 = *(void (**)(char *, uint64_t))(v21 + 8);
  v24(v11, v6);
  v24(v8, v6);
  v25 = *a1;
  v26 = a1[1];
  v27 = a1[2];
  v28 = a1[3];
  v29 = (uint64_t)a1;
  v30 = v36[0];
  sub_21C36C024(v29, v36[0]);
  v31 = swift_allocObject();
  sub_21C36C06C(v30, v31 + v19);
  v32 = v38;
  sub_21C2F50EC((uint64_t)v16, v38, &qword_25525CB10);
  v33 = v39;
  sub_21C2F50EC(v32, v39, &qword_25525CB10);
  v34 = v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525F2C8) + 48);
  *(_QWORD *)v34 = v25;
  *(_QWORD *)(v34 + 8) = v26;
  *(_QWORD *)(v34 + 16) = v27;
  *(_QWORD *)(v34 + 24) = v28;
  *(_BYTE *)(v34 + 32) = 0;
  *(_QWORD *)(v34 + 40) = 0;
  *(_QWORD *)(v34 + 48) = 0;
  *(_QWORD *)(v34 + 56) = sub_21C36C1A0;
  *(_QWORD *)(v34 + 64) = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C34B3E8(0);
  sub_21C34B3E8((uint64_t)sub_21C36C1A0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C2D775C((uint64_t)v16, &qword_25525CB10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21C2F7984(0);
  sub_21C2F7984((uint64_t)sub_21C36C1A0);
  return sub_21C2D775C(v32, &qword_25525CB10);
}

uint64_t sub_21C36BD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_21C3A7A7C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DiscoveryErrorSheet();
  sub_21C36C1DC((uint64_t)v3);
  sub_21C3A7A70();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_21C36BDAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t KeyPath;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_21C3A7D40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A7D34();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3FD0], v2);
  v22 = sub_21C3A7D4C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_21C3A7D94();
  sub_21C3A7A64();
  v6 = v23;
  v7 = v24;
  v8 = v25;
  v9 = v26;
  v11 = v27;
  v10 = v28;
  v12 = objc_msgSend((id)objc_opt_self(), sel_systemDarkGrayColor);
  v13 = MEMORY[0x220779F0C](v12);
  KeyPath = swift_getKeyPath();
  v15 = sub_21C3A7C2C();
  result = sub_21C3A7A4C();
  *(_QWORD *)a1 = v22;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = KeyPath;
  *(_QWORD *)(a1 + 64) = v13;
  *(_BYTE *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v17;
  *(_QWORD *)(a1 + 88) = v18;
  *(_QWORD *)(a1 + 96) = v19;
  *(_QWORD *)(a1 + 104) = v20;
  *(_BYTE *)(a1 + 112) = 0;
  return result;
}

uint64_t sub_21C36BF48@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525F2B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = sub_21C3A7D88();
  v6[1] = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525F2B8);
  sub_21C36B9D0(v2, (uint64_t)v6 + *(int *)(v8 + 44));
  v9 = sub_21C3A7AA0();
  v10 = sub_21C3A7C2C();
  sub_21C2F50EC((uint64_t)v6, a1, &qword_25525F2B0);
  v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525F2C0) + 36);
  *(_QWORD *)v11 = v9;
  *(_BYTE *)(v11 + 8) = v10;
  return sub_21C2D775C((uint64_t)v6, &qword_25525F2B0);
}

uint64_t sub_21C36C024(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DiscoveryErrorSheet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C36C06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DiscoveryErrorSheet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C36C0B0()
{
  type metadata accessor for DiscoveryErrorSheet();
  return sub_21C36BD14();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for DiscoveryErrorSheet();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_21C3A7A7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_21C36C1A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DiscoveryErrorSheet() - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 32))();
}

uint64_t sub_21C36C1DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v2 = v1;
  v4 = sub_21C3A7B18();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2F50EC(v2, (uint64_t)v10, &qword_25525C788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_21C3A7A7C();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = sub_21C3A81CC();
    v14 = sub_21C3A7C14();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19[1] = a1;
      v18 = v17;
      v20 = v17;
      *(_DWORD *)v16 = 136315138;
      v19[2] = sub_21C350398(0x417373696D736944, 0xED00006E6F697463, &v20);
      sub_21C3A82F8();
      _os_log_impl(&dword_21C2CD000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v18, -1, -1);
      MEMORY[0x22077AF8C](v16, -1, -1);
    }

    sub_21C3A7B0C();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_21C36C420@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21C3A7AB8();
  *a1 = result;
  return result;
}

uint64_t sub_21C36C448@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21C3A7AB8();
  *a1 = result;
  return result;
}

uint64_t sub_21C36C470()
{
  swift_retain();
  return sub_21C3A7AC4();
}

uint64_t sub_21C36C498()
{
  swift_retain();
  return sub_21C3A7AC4();
}

unint64_t sub_21C36C4C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25525F2D0;
  if (!qword_25525F2D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525F2C0);
    v2[0] = sub_21C3105F0(&qword_25525F2D8, &qword_25525F2B0, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x22077AECC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25525F2D0);
  }
  return result;
}

uint64_t UnknownErrorCode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

uint64_t static Constants.UnknownCountryCode.getter()
{
  return -1;
}

unint64_t static Constants.CRLocalizableTable.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static Constants.CRUIBundleIdentifier.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static Constants.PRUIServiceBundleIdentifier.getter()
{
  return 0xD000000000000022;
}

uint64_t static Constants.PINUI.getter()
{
  return 0x49554E4950;
}

uint64_t static Constants.TapUI.getter()
{
  return 0x4955706154;
}

uint64_t static Constants.RegUI.getter()
{
  return 0x4955676552;
}

uint64_t static Constants.IdentityUI.getter()
{
  return 0x797469746E656449;
}

unint64_t static Constants.PreferenceKeyServerEnvironmentSPS.getter()
{
  return 0xD000000000000014;
}

unint64_t static Constants.PreferenceKeyServerEnvironmentPSP.getter()
{
  return 0xD000000000000014;
}

unint64_t static Constants.PreferenceKeyServerEnvironmentWCS.getter()
{
  return 0xD000000000000014;
}

uint64_t static Constants.MonitorEventOrigin.getter()
{
  return 100;
}

uint64_t static Constants.MonitorEventComponent.getter()
{
  return 100;
}

uint64_t static Constants.EnvironmentDefaultRegion.getter()
{
  return 21333;
}

uint64_t static Constants.EnvironmentDefaultServer.getter()
{
  return 3367281;
}

unint64_t static Constants.EnvironmentMerchantdDomain.getter()
{
  return 0xD000000000000013;
}

uint64_t static Constants.EnvironmentKey.getter()
{
  return 0x6D6E6F7269766E65;
}

uint64_t static Constants.ContentDefaultEnvironment.getter()
{
  return 7759204;
}

uint64_t static Constants.ReadCardPaymentTimeout.getter()
{
  return 39;
}

uint64_t static Constants.ReadCardVasTimeout.getter()
{
  return 39;
}

uint64_t static Constants.DeviceSerialMaxLength.getter()
{
  return 8;
}

uint64_t static Constants.EmptyEventFieldMonitoring.getter()
{
  return 0x65756C61765F6F6ELL;
}

uint64_t static Constants.UnknownReadCountMonitoring.getter()
{
  return -1;
}

unint64_t static Constants.GSTokenIdentifier.getter()
{
  return 0xD000000000000023;
}

double static Constants.SessionExpirationTolerance.getter()
{
  return 60.0;
}

double static Constants.safMaxAllowedTimeInterval.getter()
{
  return 86400.0;
}

uint64_t static Constants.safMaxNumberOfTransactions.getter()
{
  return 2000;
}

unint64_t static Constants.DaemonPreferenceDomain.getter()
{
  return 0xD000000000000013;
}

unint64_t static Constants.EnablePrivacyLockKey.getter()
{
  return 0xD000000000000016;
}

unint64_t static Constants.EnableAlwaysPlaySound.getter()
{
  return 0xD000000000000017;
}

uint64_t static Constants.defaultConfigurationRegion.getter()
{
  return 0x4E4F4D4D4F43;
}

unint64_t static Constants.proximityReaderFolder.getter()
{
  return 0xD000000000000019;
}

uint64_t static Constants.discoveryFolder.getter()
{
  return 0x7265766F63736944;
}

uint64_t sub_21C36C7EC()
{
  return MCGestaltIsInternalBuild();
}

uint64_t (*static Constants.isInternalInstall.getter())()
{
  return sub_21C36C7EC;
}

void sub_21C36C810()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (id)MCGestaltGetDeviceUUID();
  if (v0)
  {
    v1 = v0;
    v2 = sub_21C3A7ED8();
    v4 = v3;

    qword_25525F2E0 = v2;
    *(_QWORD *)algn_25525F2E8 = v4;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static Constants.uniqueDeviceID.getter()
{
  uint64_t v0;

  if (qword_25525AB20 != -1)
    swift_once();
  v0 = qword_25525F2E0;
  swift_bridgeObjectRetain();
  return v0;
}

double static Constants.PINEntryTimeout.getter()
{
  return 300.0;
}

double static Constants.PINEntrySafeGuardDelay.getter()
{
  return 2.0;
}

uint64_t static Constants.PrivacyLockAuthTimeout.getter()
{
  return 300;
}

uint64_t static Constants.UnknownMerchantCategoryCode.getter()
{
  return 0;
}

uint64_t static Constants.QRCodeScannerSleepTimeout.getter()
{
  return 300;
}

uint64_t static Constants.maxPreferredAIDs.getter()
{
  return 4;
}

uint64_t static Constants.TermsAndConditionsVersion.getter()
{
  return 3157554;
}

double static Constants.uiFinishTimeout.getter()
{
  return 5.0;
}

double static Server.sessionRequestTimeout.getter()
{
  return 10.0;
}

uint64_t static Server.sessionRequestRetries.getter()
{
  return 3;
}

uint64_t static Server.transaction.getter()
{
  return 0x73746E656D796170;
}

uint64_t static Server.monitoring.getter()
{
  return 0x69726F74696E6F6DLL;
}

uint64_t static Server.attestation.getter()
{
  return 0x7461747365747461;
}

uint64_t static Server.authorization.getter()
{
  return 0x7A69726F68747561;
}

unint64_t static Server.merchant.getter()
{
  return 0xD000000000000010;
}

unint64_t static Server.assets.getter()
{
  return 0xD000000000000013;
}

uint64_t static StatusKey.daemonVersion.getter()
{
  return 7497078;
}

uint64_t static StatusKey.cardReaderVersion.getter()
{
  return 0x726564616572;
}

uint64_t static StatusKey.env.getter()
{
  return 7761509;
}

uint64_t static StatusKey.virtualTerminalId.getter()
{
  return 1684632694;
}

uint64_t static StatusKey.bundleId.getter()
{
  return 0x656C646E7562;
}

uint64_t static StatusKey.installId.getter()
{
  return 0x6C6C6174736E69;
}

uint64_t static StatusKey.seId.getter()
{
  return 1684628851;
}

uint64_t static StatusKey.terminalProfileId.getter()
{
  return 1684631668;
}

uint64_t static StatusKey.sessionExpiration.getter()
{
  return 0x6E6F6973736573;
}

uint64_t static StatusKey.isProdSE.getter()
{
  return 0x4553646F72507369;
}

uint64_t static StatusKey.isSEAvailable.getter()
{
  return 0x6961764145537369;
}

unint64_t static StatusKey.isJCOPVersionCorrect.getter()
{
  return 0xD000000000000014;
}

uint64_t static StatusKey.kernelNeeded.getter()
{
  return 0x654E6C656E72656BLL;
}

uint64_t static StatusKey.configNeeded.getter()
{
  return 0x654E6769666E6F63;
}

unint64_t static StatusKey.kernelUpdateNeeded.getter()
{
  return 0xD000000000000012;
}

uint64_t static StatusKey.profiles.getter()
{
  return 0x73656C69666F7270;
}

unint64_t static Onboarding.tapToPayBundleID.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static Onboarding.tapToPresentBundleID.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t static Analytics.Client.Name.getter()
{
  return 0x6F705F74705F7078;
}

uint64_t static Analytics.Client.Wallet.getter()
{
  return 0x74656C6C6177;
}

double static Analytics.Client.Version.getter()
{
  return 1.0;
}

uint64_t static Analytics.Client.SessionId.getter()
{
  return 1234;
}

uint64_t static Analytics.Client.Category.getter()
{
  return 1;
}

uint64_t static Analytics.Client.CType.getter()
{
  return 100;
}

uint64_t static Analytics.Service.TapToPay.getter()
{
  return 0x7961506F54706174;
}

uint64_t static Analytics.Service.IdVerifier.getter()
{
  return 0x7265566F54706174;
}

unint64_t static Analytics.Service.IdVerifierDataTransfer.getter()
{
  return 0xD000000000000016;
}

uint64_t static Analytics.Key.hierarchyToken.getter()
{
  return 0x6863726172656968;
}

uint64_t static Analytics.Key.sessionStarted.getter()
{
  return 0x536E6F6973736573;
}

uint64_t static Analytics.Key.cvm.getter()
{
  return 5068355;
}

uint64_t static Analytics.Key.readerMode.getter()
{
  return 0x6F4D726564616572;
}

uint64_t static Analytics.Key.readType.getter()
{
  return 0x6570795464616572;
}

uint64_t static Analytics.Key.eventType.getter()
{
  return 0x707954746E657665;
}

uint64_t static Analytics.Key.buttonTag.getter()
{
  return 0x61546E6F74747562;
}

uint64_t static Analytics.Key.errorType.getter()
{
  return 0x707954726F727265;
}

uint64_t static Analytics.Key.pspId.getter()
{
  return 0x6449707370;
}

uint64_t static Analytics.Key.appId.getter()
{
  return 0x6449707061;
}

uint64_t static Analytics.Key.networkName.getter()
{
  return 0x4E6B726F7774656ELL;
}

unint64_t static Analytics.Key.merchantCategory.getter()
{
  return 0xD000000000000010;
}

uint64_t static Analytics.Key.roundedTS.getter()
{
  return 0x546465646E756F72;
}

uint64_t static Analytics.Key.sessionDuration.getter()
{
  return 0x446E6F6973736573;
}

uint64_t static Analytics.Key.pinRequestType.getter()
{
  return 0x65757165526E6970;
}

uint64_t static Analytics.Key.pinEntryType.getter()
{
  return 0x7972746E456E6970;
}

unint64_t static Analytics.Key.privacyLockEnabled.getter()
{
  return 0xD000000000000012;
}

uint64_t static Analytics.Key.pinBypass.getter()
{
  return 0x73617079426E6970;
}

uint64_t static Analytics.Key.triggerType.getter()
{
  return 0x5472656767697274;
}

uint64_t static Analytics.Key.inRange.getter()
{
  return 0x65676E61526E69;
}

uint64_t static Analytics.Key.inRangeTime.getter()
{
  return 0x5465676E61526E69;
}

unint64_t static Analytics.Key.preferredLanguage.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.Key.accessibilityPinEntryType.getter()
{
  return 0xD000000000000019;
}

unint64_t static Analytics.Key.scribbleRetryCount.getter()
{
  return 0xD000000000000012;
}

uint64_t static Analytics.Key.pageTag.getter()
{
  return 0x67615465676170;
}

uint64_t static Analytics.Key.productType.getter()
{
  return 0x54746375646F7270;
}

uint64_t static Analytics.Key.productSubType.getter()
{
  return 0x53746375646F7270;
}

unint64_t static Analytics.Key.dataTransferType.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.Key.dataTransferSubType.getter()
{
  return 0xD000000000000013;
}

uint64_t static Analytics.Key.serviceName.getter()
{
  return 0x4E65636976726573;
}

uint64_t static Analytics.Key.relyingPartyId.getter()
{
  return 0x50676E69796C6572;
}

unint64_t static Analytics.Key.relyingPartyName.getter()
{
  return 0xD000000000000010;
}

uint64_t static Analytics.Key.appType.getter()
{
  return 0x65707954707061;
}

uint64_t static Analytics.Key.teamId.getter()
{
  return 0x64496D616574;
}

uint64_t static Analytics.Key.issuer.getter()
{
  return 0x726575737369;
}

uint64_t static Analytics.Key.fieldsRequested.getter()
{
  return 0x655273646C656966;
}

uint64_t static Analytics.Key.fieldsStored.getter()
{
  return 0x745373646C656966;
}

uint64_t static Analytics.Key.multiCheck.getter()
{
  return 0x65684369746C756DLL;
}

uint64_t static Analytics.Key.locale.getter()
{
  return 0x656C61636F6CLL;
}

uint64_t static Analytics.Key.purchaseContext.getter()
{
  return 0x6573616863727570;
}

unint64_t static Analytics.Key.contentScrollable.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.Key.contentScrollQuantile.getter()
{
  return 0xD000000000000015;
}

uint64_t static Analytics.Key.contentId.getter()
{
  return 0x49746E65746E6F63;
}

unint64_t static Analytics.Key.contentSessionId.getter()
{
  return 0xD000000000000010;
}

uint64_t static Analytics.Key.contentVersion.getter()
{
  return 0x56746E65746E6F63;
}

uint64_t static Analytics.Key.contentRegion.getter()
{
  return 0x52746E65746E6F63;
}

uint64_t static Analytics.EventType.buttonTap.getter()
{
  return 0x61546E6F74747562;
}

uint64_t static Analytics.EventType.readerActive.getter()
{
  return 0x6341726564616572;
}

uint64_t static Analytics.EventType.readerInactive.getter()
{
  return 0x6E49726564616572;
}

uint64_t static Analytics.EventType.readReady.getter()
{
  return 0x6461655264616572;
}

uint64_t static Analytics.EventType.readInitFailed.getter()
{
  return 0x74696E4964616572;
}

uint64_t static Analytics.EventType.cardDetected.getter()
{
  return 0x6574654464726163;
}

uint64_t static Analytics.EventType.cardTear.getter()
{
  return 0x7261655464726163;
}

uint64_t static Analytics.EventType.readSuccess.getter()
{
  return 0x6363755364616572;
}

uint64_t static Analytics.EventType.readFailed.getter()
{
  return 0x6C69614664616572;
}

unint64_t static Analytics.EventType.cardInfoDelivered.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.EventType.cardInfoNotDelivered.getter()
{
  return 0xD000000000000014;
}

uint64_t static Analytics.EventType.pinEntrySuccess.getter()
{
  return 0x7972746E456E6970;
}

uint64_t static Analytics.EventType.pinEntryFailed.getter()
{
  return 0x7972746E456E6970;
}

unint64_t static Analytics.EventType.privacyAuthSuccess.getter()
{
  return 0xD000000000000012;
}

unint64_t static Analytics.EventType.privacyAuthFailed.getter()
{
  return 0xD000000000000011;
}

uint64_t static Analytics.EventType.guidanceActive.getter()
{
  return 0x65636E6164697567;
}

unint64_t static Analytics.EventType.guidanceDismissed.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.EventType.inRangeProxEvent.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.EventType.contentPresented.getter()
{
  return 0xD000000000000010;
}

uint64_t static Analytics.EventType.contentScrolled.getter()
{
  return 0x53746E65746E6F63;
}

unint64_t static Analytics.EventType.contentDismissed.getter()
{
  return 0xD000000000000010;
}

uint64_t static Analytics.EventType.viewDidAppear.getter()
{
  return 0x4164694477656976;
}

uint64_t static Analytics.EventType.hostAppError.getter()
{
  return 0x4570704174736F68;
}

uint64_t static Analytics.EventType.tapInitiated.getter()
{
  return 0x6974696E49706174;
}

uint64_t static Analytics.EventType.tapSuccess.getter()
{
  return 0x6563637553706174;
}

uint64_t static Analytics.EventType.scanInitiated.getter()
{
  return 0x74696E496E616373;
}

uint64_t static Analytics.EventType.scanSuccess.getter()
{
  return 0x636375536E616373;
}

uint64_t static Analytics.EventType.tapError.getter()
{
  return 0x726F727245706174;
}

uint64_t static Analytics.EventType.scanError.getter()
{
  return 0x6F7272456E616373;
}

uint64_t static Analytics.EventType.connectionError.getter()
{
  return 0x697463656E6E6F63;
}

uint64_t static Analytics.EventType.infoReceived.getter()
{
  return 0x656365526F666E69;
}

unint64_t static Analytics.Button.useCurrentAppleID.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.Button.useDifferentAppleID.getter()
{
  return 0xD000000000000013;
}

uint64_t static Analytics.PINRequestType.cardRequired.getter()
{
  return 0x7571655264726163;
}

uint64_t static Analytics.PINRequestType.issuerRequired.getter()
{
  return 0x6552726575737369;
}

uint64_t static Analytics.PINEntryType.standard.getter()
{
  return 0x647261646E617473;
}

uint64_t static Analytics.PINEntryType.accessibility.getter()
{
  return 0x6269737365636361;
}

uint64_t static Analytics.PrivacyLock.enabled.getter()
{
  return 1;
}

uint64_t static Analytics.PrivacyLock.disabled.getter()
{
  return 0;
}

uint64_t static Analytics.GuidanceActive.cardTear.getter()
{
  return 0x7261655464726163;
}

uint64_t static Analytics.GuidanceActive.sensorObscured.getter()
{
  return 0x624F726F736E6573;
}

uint64_t static Analytics.GuidanceActive.rapidCardTap.getter()
{
  return 0x7261436469706172;
}

uint64_t static Analytics.GuidanceActive.userSwipeDown.getter()
{
  return 0x7069775372657375;
}

uint64_t static Analytics.GuidanceActive.timerThreshold.getter()
{
  return 0x72685472656D6974;
}

uint64_t static Analytics.GuidanceDismiss.userCancel.getter()
{
  return 0x636E614372657375;
}

uint64_t static Analytics.GuidanceDismiss.userSwipeUp.getter()
{
  return 0x7069775372657375;
}

uint64_t static Analytics.GuidanceDismiss.readTimedOut.getter()
{
  return 0x656D695464616572;
}

uint64_t static Analytics.CancelationTrigger.userCancel.getter()
{
  return 0x636E614372657375;
}

uint64_t static Analytics.CancelationTrigger.appCancel.getter()
{
  return 0x65636E6143707061;
}

uint64_t static Analytics.CancelationTrigger.systemCancel.getter()
{
  return 0x61436D6574737973;
}

uint64_t static Analytics.PINBypass.enabled.getter()
{
  return 1;
}

uint64_t static Analytics.PINBypass.disabled.getter()
{
  return 0;
}

uint64_t static Analytics.PrivacyLockCancelationTrigger.systemCancel.getter()
{
  return 0x61436D6574737973;
}

uint64_t static Analytics.PreferredLanguage.device.getter()
{
  return 0x656369766564;
}

uint64_t static Analytics.PreferredLanguage.app.getter()
{
  return 7368801;
}

uint64_t static Analytics.PreferredLanguage.buyer.getter()
{
  return 0x7265797562;
}

uint64_t static Analytics.PreferredLanguage.card.getter()
{
  return 1685217635;
}

uint64_t static Analytics.PreferredLanguage.unset.getter()
{
  return 24942;
}

uint64_t static Analytics.AccessibilityPINEntryType.noEntry.getter()
{
  return 0x7972746E456F6ELL;
}

uint64_t static Analytics.AccessibilityPINEntryType.tapOnly.getter()
{
  return 0x796C6E4F706174;
}

uint64_t static Analytics.AccessibilityPINEntryType.scribbleOnly.getter()
{
  return 0x656C626269726373;
}

uint64_t static Analytics.AccessibilityPINEntryType.tapAndScribble.getter()
{
  return 0x6353646E41706174;
}

unint64_t static Analytics.SpecificErrors.interfaceOrCVMFailed.getter()
{
  return 0xD000000000000014;
}

uint64_t static Analytics.DataTransferType.displayOnly.getter()
{
  return 0x4F79616C70736944;
}

uint64_t static Analytics.DataTransferType.dataTransfer.getter()
{
  return 0x6E61725461746144;
}

uint64_t static Analytics.DataTransferType.rawDataTransfer.getter()
{
  return 0x5461746144776172;
}

unint64_t static Analytics.DataTransferType.validatedDataTransfer.getter()
{
  return 0xD000000000000015;
}

uint64_t static Analytics.ProductType.identity.getter()
{
  return 0x797469746E656469;
}

unint64_t static Analytics.ProductSubType.mobileDriversLicense.getter()
{
  return 0xD000000000000014;
}

uint64_t static Analytics.ProductSubType.nationalID.getter()
{
  return 0x6C616E6F6974616ELL;
}

uint64_t static Analytics.PageTag.tapUI.getter()
{
  return 0x4955706174;
}

uint64_t static Analytics.PageTag.hostAppUI.getter()
{
  return 0x5570704174736F68;
}

uint64_t static Analytics.PageTag.resultUI.getter()
{
  return 0x4955746C75736572;
}

uint64_t static Analytics.ErrorType.tapFailed.getter()
{
  return 0x656C696146706174;
}

uint64_t static Analytics.ErrorType.notMobileDrivingLicence.getter()
{
  return 0x4C446D746F6ELL;
}

uint64_t static Analytics.ErrorType.invalidMobileDrivingLicence.getter()
{
  return 0x6D64696C61766E69;
}

uint64_t static Analytics.ErrorType.tapTimeout.getter()
{
  return 0x6F656D6954706174;
}

uint64_t static Analytics.ErrorType.bluetoothOff.getter()
{
  return 0x746F6F7465756C62;
}

uint64_t static Analytics.ErrorType.nfcError.getter()
{
  return 0x726F72724543464ELL;
}

uint64_t static Analytics.ErrorType.connectionError.getter()
{
  return 0x697463656E6E6F63;
}

unint64_t static Analytics.ErrorType.presentmentError.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.ErrorType.connectionTimeout.getter()
{
  return 0xD000000000000011;
}

uint64_t static Analytics.ErrorType.otherError.getter()
{
  return 0x726568746FLL;
}

uint64_t static Analytics.ButtonTag.scanQRCode.getter()
{
  return 0x6F4352516E616373;
}

uint64_t static Analytics.ButtonTag.dismiss.getter()
{
  return 0x7373696D736964;
}

uint64_t static Analytics.ButtonTag.done.getter()
{
  return 1701736292;
}

uint64_t static Analytics.ButtonTag.matchesPerson.getter()
{
  return 0x507365686374616DLL;
}

uint64_t static Analytics.ButtonTag.doesNotMatch.getter()
{
  return 0x4D746F4E73656F64;
}

uint64_t static Analytics.PurchaseContext.surchargeAmount.getter()
{
  return 0x6772616863727573;
}

unint64_t static Analytics.PurchaseContext.surchargePercent.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.PurchaseContext.weeklyInstallment.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.PurchaseContext.monthlyInstallment.getter()
{
  return 0xD000000000000012;
}

unint64_t static Analytics.PurchaseContext.yearlyInstallment.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.PurchaseContext.weeklyMembership.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.PurchaseContext.monthlyMembership.getter()
{
  return 0xD000000000000011;
}

unint64_t static Analytics.PurchaseContext.yearlyMembership.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.PurchaseContext.preAuthorization.getter()
{
  return 0xD000000000000010;
}

unint64_t static Analytics.PurchaseContext.includePreAuthAmount.getter()
{
  return 0xD000000000000014;
}

uint64_t static Analytics.PurchaseContext.preAuthRelease.getter()
{
  return 0x5268747541657270;
}

uint64_t static Analytics.PurchaseContext.notApplicable.getter()
{
  return 0x696C707041746F6ELL;
}

uint64_t static Analytics.IdentityAppType.direct.getter()
{
  return 0x746365726964;
}

uint64_t static Analytics.IdentityAppType.indirect.getter()
{
  return 0x7463657269446E69;
}

uint64_t static Analytics.DiscoveryScrollQuantile.notDefined.getter()
{
  return 1819047278;
}

uint64_t static Analytics.DiscoveryContentVersion.notDefined.getter()
{
  return 1819047278;
}

uint64_t static Analytics.DiscoveryErrorType.unknown.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t static Analytics.DiscoveryRegion.notDefined.getter()
{
  return 1819047278;
}

unint64_t static ErrorDetails.readerNotInitialized.getter()
{
  return 0xD000000000000019;
}

unint64_t static ErrorDetails.unexpectedConfigErrorType.getter()
{
  return 0xD000000000000015;
}

unint64_t static ErrorDetails.errorParsingSessionToken.getter()
{
  return 0xD000000000000017;
}

unint64_t static ErrorDetails.secureChannelError.getter()
{
  return 0xD000000000000014;
}

unint64_t static ErrorDetails.apiResponseFormatError.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static ErrorDetails.unexpectedSessionError.getter()
{
  return 0xD000000000000018;
}

unint64_t static ErrorDetails.unknownSessionError.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static ErrorDetails.sessionFormatError.getter()
{
  return 0xD000000000000014;
}

unint64_t static ErrorDetails.invalidSessionFile.getter()
{
  return 0xD000000000000019;
}

unint64_t static ErrorDetails.invalidToken.getter()
{
  return 0xD000000000000021;
}

unint64_t static ErrorDetails.invalidComponent.getter()
{
  return 0xD000000000000025;
}

unint64_t static ErrorDetails.appletInstallationFailed.getter()
{
  return 0xD000000000000015;
}

unint64_t static ErrorDetails.configInstallationFailed.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static ErrorDetails.kernelConfigNotValid.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static ErrorDetails.kernelTokenExpired.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static ErrorDetails.kernelCouldNotParseToken.getter()
{
  return 0xD000000000000023;
}

unint64_t static ErrorDetails.kernelUnknownError.getter()
{
  return 0xD000000000000017;
}

unint64_t static ErrorDetails.attestationDataInvalid.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static ErrorDetails.clockNotAutomatic.getter()
{
  return 0xD000000000000025;
}

unint64_t static ErrorDetails.unknownErrorAttest.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static ErrorDetails.attestationTokenInvalid.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static ErrorDetails.cannotRenewCertificate.getter()
{
  return 0xD000000000000018;
}

unint64_t static ErrorDetails.sessionBusy.getter()
{
  return 0xD000000000000016;
}

unint64_t static ErrorDetails.invalidSLAM.getter()
{
  return 0xD000000000000015;
}

unint64_t static ErrorDetails.couldNotAttest.getter()
{
  return 0xD000000000000018;
}

unint64_t static ErrorDetails.appletNotAvailable.getter()
{
  return 0xD000000000000026;
}

unint64_t static ErrorDetails.baselineSelection.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static ErrorDetails.incorrectJCOPVersion.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static ErrorDetails.endpointNotFound.getter()
{
  return 0xD000000000000020;
}

unint64_t static ErrorDetails.invalidEnvironment.getter()
{
  return 0xD000000000000020;
}

unint64_t static ErrorDetails.readerSecurePairingBroken.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static ErrorDetails.invalidTimeSync.getter()
{
  return 0xD000000000000022;
}

unint64_t static ErrorDetails.unexpectedConfigurationError.getter()
{
  return 0xD00000000000001CLL;
}

ProximityReader::UnknownErrorCode_optional __swiftcall UnknownErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x302010004uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 5)
    LOBYTE(v2) = 4;
  *v1 = v2;
  return (ProximityReader::UnknownErrorCode_optional)rawValue;
}

uint64_t sub_21C36E0AC()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t sub_21C36E0F0()
{
  return sub_21C3A870C();
}

uint64_t sub_21C36E11C()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

ProximityReader::UnknownErrorCode_optional sub_21C36E15C(Swift::Int *a1)
{
  return UnknownErrorCode.init(rawValue:)(*a1);
}

void sub_21C36E164(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

ProximityReader::XPCUserInfoKey_optional __swiftcall XPCUserInfoKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ProximityReader::XPCUserInfoKey_optional result;
  char v5;

  v2 = v1;
  v3 = sub_21C3A8508();
  result.value = swift_bridgeObjectRelease();
  v5 = 16;
  if (v3 < 0x10)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t XPCUserInfoKey.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C36E204 + 4 * byte_21C3B41B0[*v0]))(0x746361736E617274, 0xEB000000006E6F69);
}

uint64_t sub_21C36E204()
{
  return 0x746E61686372656DLL;
}

uint64_t sub_21C36E21C()
{
  return 0x49737365636F7270;
}

uint64_t sub_21C36E238()
{
  return 0x79636E6572727563;
}

uint64_t sub_21C36E258()
{
  return 0x6E656B6F546E6970;
}

uint64_t sub_21C36E270()
{
  return 0x69666E6F436E6970;
}

unint64_t sub_21C36E290()
{
  return 0xD000000000000012;
}

uint64_t sub_21C36E2AC()
{
  return 0x4C79636176697270;
}

uint64_t sub_21C36E2CC()
{
  return 0x65646F4D6975;
}

uint64_t sub_21C36E2E0()
{
  return 7234157;
}

uint64_t sub_21C36E2F0()
{
  return 0x746E756F6D61;
}

uint64_t sub_21C36E304()
{
  return 0x6C50737961776C61;
}

uint64_t sub_21C36E328()
{
  return 0x6172747369676572;
}

uint64_t sub_21C36E348()
{
  return 0x74736575716572;
}

unint64_t sub_21C36E360()
{
  return 0xD000000000000015;
}

uint64_t sub_21C36E380()
{
  return 0x747865746E6F63;
}

uint64_t sub_21C36E398()
{
  return sub_21C375FB0();
}

uint64_t sub_21C36E3A4()
{
  sub_21C3A8700();
  XPCUserInfoKey.rawValue.getter();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t sub_21C36E408()
{
  XPCUserInfoKey.rawValue.getter();
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C36E458()
{
  sub_21C3A8700();
  XPCUserInfoKey.rawValue.getter();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

ProximityReader::XPCUserInfoKey_optional sub_21C36E4B8(Swift::String *a1)
{
  return XPCUserInfoKey.init(rawValue:)(*a1);
}

uint64_t sub_21C36E4C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = XPCUserInfoKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ProximityReader::UIMode_optional __swiftcall UIMode.init(rawValue:)(Swift::Int rawValue)
{
  ProximityReader::UIMode_optional v1;

  if (rawValue == 1)
    v1.value = ProximityReader_UIMode_issuerPIN;
  else
    v1.value = ProximityReader_UIMode_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

uint64_t UIMode.rawValue.getter(char a1)
{
  return a1 & 1;
}

_QWORD *sub_21C36E508@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t static DiscoveryInternalTopics.Main.payment.getter()
{
  return 0x746E656D796170;
}

uint64_t static DiscoveryInternalTopics.Payment.howToTap.getter()
{
  return 0x7061546F54776F68;
}

unint64_t sub_21C36E55C()
{
  unint64_t result;

  result = qword_25525F2F0;
  if (!qword_25525F2F0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for UnknownErrorCode, &type metadata for UnknownErrorCode);
    atomic_store(result, (unint64_t *)&qword_25525F2F0);
  }
  return result;
}

unint64_t sub_21C36E5A4()
{
  unint64_t result;

  result = qword_25525F2F8;
  if (!qword_25525F2F8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for XPCUserInfoKey, &type metadata for XPCUserInfoKey);
    atomic_store(result, (unint64_t *)&qword_25525F2F8);
  }
  return result;
}

unint64_t sub_21C36E5EC()
{
  unint64_t result;

  result = qword_25525F300;
  if (!qword_25525F300)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for UIMode, &type metadata for UIMode);
    atomic_store(result, (unint64_t *)&qword_25525F300);
  }
  return result;
}

ValueMetadata *type metadata accessor for Constants()
{
  return &type metadata for Constants;
}

ValueMetadata *type metadata accessor for Server()
{
  return &type metadata for Server;
}

ValueMetadata *type metadata accessor for StatusKey()
{
  return &type metadata for StatusKey;
}

ValueMetadata *type metadata accessor for Onboarding()
{
  return &type metadata for Onboarding;
}

ValueMetadata *type metadata accessor for Analytics()
{
  return &type metadata for Analytics;
}

ValueMetadata *type metadata accessor for Analytics.Client()
{
  return &type metadata for Analytics.Client;
}

ValueMetadata *type metadata accessor for Analytics.Service()
{
  return &type metadata for Analytics.Service;
}

ValueMetadata *type metadata accessor for Analytics.Key()
{
  return &type metadata for Analytics.Key;
}

ValueMetadata *type metadata accessor for Analytics.EventType()
{
  return &type metadata for Analytics.EventType;
}

ValueMetadata *type metadata accessor for Analytics.Button()
{
  return &type metadata for Analytics.Button;
}

ValueMetadata *type metadata accessor for Analytics.PINRequestType()
{
  return &type metadata for Analytics.PINRequestType;
}

ValueMetadata *type metadata accessor for Analytics.PINEntryType()
{
  return &type metadata for Analytics.PINEntryType;
}

ValueMetadata *type metadata accessor for Analytics.PrivacyLock()
{
  return &type metadata for Analytics.PrivacyLock;
}

ValueMetadata *type metadata accessor for Analytics.GuidanceActive()
{
  return &type metadata for Analytics.GuidanceActive;
}

ValueMetadata *type metadata accessor for Analytics.GuidanceDismiss()
{
  return &type metadata for Analytics.GuidanceDismiss;
}

ValueMetadata *type metadata accessor for Analytics.CancelationTrigger()
{
  return &type metadata for Analytics.CancelationTrigger;
}

ValueMetadata *type metadata accessor for Analytics.PINBypass()
{
  return &type metadata for Analytics.PINBypass;
}

ValueMetadata *type metadata accessor for Analytics.PrivacyLockCancelationTrigger()
{
  return &type metadata for Analytics.PrivacyLockCancelationTrigger;
}

ValueMetadata *type metadata accessor for Analytics.PreferredLanguage()
{
  return &type metadata for Analytics.PreferredLanguage;
}

ValueMetadata *type metadata accessor for Analytics.AccessibilityPINEntryType()
{
  return &type metadata for Analytics.AccessibilityPINEntryType;
}

ValueMetadata *type metadata accessor for Analytics.SpecificErrors()
{
  return &type metadata for Analytics.SpecificErrors;
}

ValueMetadata *type metadata accessor for Analytics.DataTransferType()
{
  return &type metadata for Analytics.DataTransferType;
}

ValueMetadata *type metadata accessor for Analytics.ProductType()
{
  return &type metadata for Analytics.ProductType;
}

ValueMetadata *type metadata accessor for Analytics.ProductSubType()
{
  return &type metadata for Analytics.ProductSubType;
}

ValueMetadata *type metadata accessor for Analytics.PageTag()
{
  return &type metadata for Analytics.PageTag;
}

ValueMetadata *type metadata accessor for Analytics.ErrorType()
{
  return &type metadata for Analytics.ErrorType;
}

ValueMetadata *type metadata accessor for Analytics.ButtonTag()
{
  return &type metadata for Analytics.ButtonTag;
}

ValueMetadata *type metadata accessor for Analytics.PurchaseContext()
{
  return &type metadata for Analytics.PurchaseContext;
}

ValueMetadata *type metadata accessor for Analytics.IdentityAppType()
{
  return &type metadata for Analytics.IdentityAppType;
}

ValueMetadata *type metadata accessor for Analytics.DiscoveryScrollQuantile()
{
  return &type metadata for Analytics.DiscoveryScrollQuantile;
}

ValueMetadata *type metadata accessor for Analytics.DiscoveryContentVersion()
{
  return &type metadata for Analytics.DiscoveryContentVersion;
}

ValueMetadata *type metadata accessor for Analytics.DiscoveryErrorType()
{
  return &type metadata for Analytics.DiscoveryErrorType;
}

ValueMetadata *type metadata accessor for Analytics.DiscoveryRegion()
{
  return &type metadata for Analytics.DiscoveryRegion;
}

ValueMetadata *type metadata accessor for ErrorDetails()
{
  return &type metadata for ErrorDetails;
}

uint64_t storeEnumTagSinglePayload for UnknownErrorCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21C36E89C + 4 * byte_21C3B41C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21C36E8D0 + 4 * byte_21C3B41C0[v4]))();
}

uint64_t sub_21C36E8D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C36E8D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C36E8E0);
  return result;
}

uint64_t sub_21C36E8EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C36E8F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21C36E8F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C36E900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnknownErrorCode()
{
  return &type metadata for UnknownErrorCode;
}

uint64_t getEnumTagSinglePayload for XPCUserInfoKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCUserInfoKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_21C36E9F8 + 4 * byte_21C3B41CF[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_21C36EA2C + 4 * byte_21C3B41CA[v4]))();
}

uint64_t sub_21C36EA2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C36EA34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C36EA3CLL);
  return result;
}

uint64_t sub_21C36EA48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C36EA50);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_21C36EA54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C36EA5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCUserInfoKey()
{
  return &type metadata for XPCUserInfoKey;
}

uint64_t storeEnumTagSinglePayload for UIMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C36EAC4 + 4 * byte_21C3B41D9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C36EAF8 + 4 * byte_21C3B41D4[v4]))();
}

uint64_t sub_21C36EAF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C36EB00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C36EB08);
  return result;
}

uint64_t sub_21C36EB14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C36EB1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C36EB20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C36EB28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIMode()
{
  return &type metadata for UIMode;
}

ValueMetadata *type metadata accessor for DiscoveryInternalTopics()
{
  return &type metadata for DiscoveryInternalTopics;
}

ValueMetadata *type metadata accessor for DiscoveryInternalTopics.Main()
{
  return &type metadata for DiscoveryInternalTopics.Main;
}

ValueMetadata *type metadata accessor for DiscoveryInternalTopics.Payment()
{
  return &type metadata for DiscoveryInternalTopics.Payment;
}

_BYTE *MobileDriversLicenseDisplayRequest.Options.init(validationMode:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL static MobileDriversLicenseDisplayRequest.Options.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void MobileDriversLicenseDisplayRequest.Options.validationMode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *MobileDriversLicenseDisplayRequest.Options.validationMode.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*MobileDriversLicenseDisplayRequest.Options.validationMode.modify())()
{
  return nullsub_1;
}

uint64_t MobileDriversLicenseDisplayRequest.Options.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileDriversLicenseDisplayRequest.Options.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C36EC2C()
{
  unint64_t result;

  result = qword_25525F308;
  if (!qword_25525F308)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDisplayRequest.Options, &type metadata for MobileDriversLicenseDisplayRequest.Options);
    atomic_store(result, (unint64_t *)&qword_25525F308);
  }
  return result;
}

uint64_t _s7OptionsVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C36ECBC + 4 * byte_21C3B467D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C36ECF0 + 4 * asc_21C3B4678[v4]))();
}

uint64_t sub_21C36ECF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C36ECF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C36ED00);
  return result;
}

uint64_t sub_21C36ED0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C36ED14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C36ED18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C36ED20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest.Options()
{
  return &type metadata for MobileDriversLicenseDisplayRequest.Options;
}

Swift::Void __swiftcall CRSignpost.begin()()
{
  sub_21C36ED54((void (*)(void))MEMORY[0x24BEE7948]);
}

Swift::Void __swiftcall CRSignpost.end()()
{
  sub_21C36ED54((void (*)(void))MEMORY[0x24BEE7940]);
}

uint64_t sub_21C36ED54(void (*a1)(void))
{
  a1();
  if (qword_25525AB28 != -1)
    swift_once();
  type metadata accessor for CRSignpost();
  return sub_21C3A7998();
}

uint64_t CRSignpost.begin(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21C36EDF0(a1, a2, a3, a4, (void (*)(void))MEMORY[0x24BEE7948]);
}

uint64_t CRSignpost.end(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21C36EDF0(a1, a2, a3, a4, (void (*)(void))MEMORY[0x24BEE7940]);
}

uint64_t sub_21C36EDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v6;

  a5();
  if (qword_25525AB28 != -1)
    swift_once();
  type metadata accessor for CRSignpost();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C218);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21C3ACA90;
  *(_QWORD *)(v6 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2C0);
  *(_QWORD *)(v6 + 64) = sub_21C34B010();
  *(_QWORD *)(v6 + 32) = a4;
  swift_bridgeObjectRetain();
  sub_21C3A798C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C36EF14()
{
  uint64_t result;

  sub_21C372DCC();
  result = sub_21C3A82E0();
  qword_255279018 = result;
  return result;
}

uint64_t type metadata accessor for CRSignpost()
{
  uint64_t result;

  result = qword_25525F968;
  if (!qword_25525F968)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C36EFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F310);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F310);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "context-total-public";
  *(_QWORD *)(v6 + 8) = 20;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.contextPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB30, (uint64_t)qword_25525F310, a1);
}

uint64_t sub_21C36F09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRSignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C36F0E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F328);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F328);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "context-total-daemon";
  *(_QWORD *)(v6 + 8) = 20;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.context.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB38, (uint64_t)qword_25525F328, a1);
}

uint64_t sub_21C36F1C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F340);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F340);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "context-001-verify";
  *(_QWORD *)(v6 + 8) = 18;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.contextVerify.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB40, (uint64_t)qword_25525F340, a1);
}

uint64_t sub_21C36F2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F358);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F358);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "context-002-environmentSelection";
  *(_QWORD *)(v6 + 8) = 32;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.environmentSelection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB48, (uint64_t)qword_25525F358, a1);
}

uint64_t sub_21C36F398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F370);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F370);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "session-total-public";
  *(_QWORD *)(v6 + 8) = 20;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.sessionPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB50, (uint64_t)qword_25525F370, a1);
}

uint64_t sub_21C36F480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F388);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F388);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "session-total-daemon";
  *(_QWORD *)(v6 + 8) = 20;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.session.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB58, (uint64_t)qword_25525F388, a1);
}

uint64_t sub_21C36F568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F3A0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F3A0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "session-001-verify";
  *(_QWORD *)(v6 + 8) = 18;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.sessionVerify.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB60, (uint64_t)qword_25525F3A0, a1);
}

uint64_t sub_21C36F650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F3B8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F3B8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "session-002-load";
  *(_QWORD *)(v6 + 8) = 16;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.loadSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB68, (uint64_t)qword_25525F3B8, a1);
}

uint64_t sub_21C36F738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F3D0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F3D0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "session-003-attestationToken";
  *(_QWORD *)(v6 + 8) = 28;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.attestationToken.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB70, (uint64_t)qword_25525F3D0, a1);
}

uint64_t sub_21C36F820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F3E8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F3E8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "session-004-openSession";
  *(_QWORD *)(v6 + 8) = 23;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.openSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB78, (uint64_t)qword_25525F3E8, a1);
}

uint64_t sub_21C36F908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F400);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F400);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "session-005-kernelInstall";
  *(_QWORD *)(v6 + 8) = 25;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.kernelInstall.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB80, (uint64_t)qword_25525F400, a1);
}

uint64_t sub_21C36F9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F418);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F418);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "session-006-save";
  *(_QWORD *)(v6 + 8) = 16;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.saveSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB88, (uint64_t)qword_25525F418, a1);
}

uint64_t sub_21C36FAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F430);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F430);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "read-total-public";
  *(_QWORD *)(v6 + 8) = 17;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.readPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB90, (uint64_t)qword_25525F430, a1);
}

uint64_t sub_21C36FBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F448);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F448);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "read-total-daemon";
  *(_QWORD *)(v6 + 8) = 17;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.read.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AB98, (uint64_t)qword_25525F448, a1);
}

uint64_t sub_21C36FCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F460);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F460);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "read-001-verify";
  *(_QWORD *)(v6 + 8) = 15;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.readVerify.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABA0, (uint64_t)qword_25525F460, a1);
}

uint64_t sub_21C36FD90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F478);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F478);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "read-002-startUI";
  *(_QWORD *)(v6 + 8) = 16;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.startUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABA8, (uint64_t)qword_25525F478, a1);
}

uint64_t sub_21C36FE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F490);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F490);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "read-003-readerReady";
  *(_QWORD *)(v6 + 8) = 20;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.readerReady.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABB0, (uint64_t)qword_25525F490, a1);
}

uint64_t sub_21C36FF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F4A8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F4A8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "read-004-userTap";
  *(_QWORD *)(v6 + 8) = 16;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.userTap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABB8, (uint64_t)qword_25525F4A8, a1);
}

uint64_t sub_21C370048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F4C0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F4C0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "read-005-cardRead";
  *(_QWORD *)(v6 + 8) = 17;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.cardRead.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABC0, (uint64_t)qword_25525F4C0, a1);
}

uint64_t sub_21C370130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F4D8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F4D8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "read-006-cardReaderBlobEncryption";
  *(_QWORD *)(v6 + 8) = 33;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.cardReaderBlobEncryption.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABC8, (uint64_t)qword_25525F4D8, a1);
}

uint64_t sub_21C370218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F4F0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F4F0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "read-007-closeUI";
  *(_QWORD *)(v6 + 8) = 16;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.closeUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABD0, (uint64_t)qword_25525F4F0, a1);
}

uint64_t sub_21C370300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F508);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F508);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "read-008-deliverReadCardResult";
  *(_QWORD *)(v6 + 8) = 30;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.deliverReadCardResult.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABD8, (uint64_t)qword_25525F508, a1);
}

uint64_t sub_21C3703E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F520);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F520);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "registration-total-public";
  *(_QWORD *)(v6 + 8) = 25;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.registrationPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABE0, (uint64_t)qword_25525F520, a1);
}

uint64_t sub_21C3704D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F538);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F538);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "registration-total-daemon";
  *(_QWORD *)(v6 + 8) = 25;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.registrationDaemon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABE8, (uint64_t)qword_25525F538, a1);
}

uint64_t sub_21C3705B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F550);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F550);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "registration-001-showRegistrationUI";
  *(_QWORD *)(v6 + 8) = 35;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.showRegistrationUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABF0, (uint64_t)qword_25525F550, a1);
}

uint64_t sub_21C3706A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F568);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F568);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "registration-002-showTermsOfServiceUI";
  *(_QWORD *)(v6 + 8) = 37;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.showTermsOfServiceUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ABF8, (uint64_t)qword_25525F568, a1);
}

uint64_t sub_21C370788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F580);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F580);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "registration-003-configure";
  *(_QWORD *)(v6 + 8) = 26;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.configure.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC00, (uint64_t)qword_25525F580, a1);
}

uint64_t sub_21C370870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F598);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F598);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "registration-004-useDifferentAppleId";
  *(_QWORD *)(v6 + 8) = 36;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.useDifferentAppleId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC08, (uint64_t)qword_25525F598, a1);
}

uint64_t sub_21C370958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F5B0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F5B0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "registration-005-payloadCreation";
  *(_QWORD *)(v6 + 8) = 32;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.payloadCreation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC10, (uint64_t)qword_25525F5B0, a1);
}

uint64_t sub_21C370A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F5C8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F5C8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "registration-006-register";
  *(_QWORD *)(v6 + 8) = 25;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.registration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC18, (uint64_t)qword_25525F5C8, a1);
}

uint64_t sub_21C370B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F5E0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F5E0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "startIssuerPINEntry-total-public";
  *(_QWORD *)(v6 + 8) = 32;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.startIssuerPINEntryPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC20, (uint64_t)qword_25525F5E0, a1);
}

uint64_t sub_21C370C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F5F8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F5F8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "startIssuerPINEntry-total-daemon";
  *(_QWORD *)(v6 + 8) = 32;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.startIssuerPINEntry.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC28, (uint64_t)qword_25525F5F8, a1);
}

uint64_t sub_21C370CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F610);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F610);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-001-startPINUI";
  *(_QWORD *)(v6 + 8) = 18;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.startPINUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC30, (uint64_t)qword_25525F610, a1);
}

uint64_t sub_21C370DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F628);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F628);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-002-addPINDigit";
  *(_QWORD *)(v6 + 8) = 19;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.addPINDigit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC38, (uint64_t)qword_25525F628, a1);
}

uint64_t sub_21C370EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F640);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F640);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-003-removePINDigit";
  *(_QWORD *)(v6 + 8) = 22;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.removePINDigit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC40, (uint64_t)qword_25525F640, a1);
}

uint64_t sub_21C370FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F658);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F658);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-004-clearPINDigits";
  *(_QWORD *)(v6 + 8) = 22;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.clearPINDigits.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC48, (uint64_t)qword_25525F658, a1);
}

uint64_t sub_21C371098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F670);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F670);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-005-capturePIN";
  *(_QWORD *)(v6 + 8) = 18;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.capturePIN.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC50, (uint64_t)qword_25525F670, a1);
}

uint64_t sub_21C371180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F688);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F688);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-006-generatePINBlock";
  *(_QWORD *)(v6 + 8) = 24;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.generatePINBlock.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC58, (uint64_t)qword_25525F688, a1);
}

uint64_t sub_21C371268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F6A0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F6A0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-007-sendPINData";
  *(_QWORD *)(v6 + 8) = 19;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.sendPINData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC60, (uint64_t)qword_25525F6A0, a1);
}

uint64_t sub_21C371350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F6B8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F6B8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-008-cancelPINCapture";
  *(_QWORD *)(v6 + 8) = 24;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.cancelPINCapture.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC68, (uint64_t)qword_25525F6B8, a1);
}

uint64_t sub_21C371438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F6D0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F6D0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-009-closePINUI";
  *(_QWORD *)(v6 + 8) = 18;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.closePINUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC70, (uint64_t)qword_25525F6D0, a1);
}

uint64_t sub_21C371520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F6E8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F6E8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-010-displayPINRequired";
  *(_QWORD *)(v6 + 8) = 26;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.displayPINRequired.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC78, (uint64_t)qword_25525F6E8, a1);
}

uint64_t sub_21C371608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F700);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F700);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "pin-011-deliverPINResult";
  *(_QWORD *)(v6 + 8) = 24;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.deliverPINResult.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC80, (uint64_t)qword_25525F700, a1);
}

uint64_t sub_21C3716F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F718);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F718);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-identifier-total-public";
  *(_QWORD *)(v6 + 8) = 32;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityIdentifierPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC88, (uint64_t)qword_25525F718, a1);
}

uint64_t sub_21C3717D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F730);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F730);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-001-identifier";
  *(_QWORD *)(v6 + 8) = 23;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC90, (uint64_t)qword_25525F730, a1);
}

uint64_t sub_21C3718C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F748);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F748);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-session-total-public";
  *(_QWORD *)(v6 + 8) = 29;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identitySessionPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AC98, (uint64_t)qword_25525F748, a1);
}

uint64_t sub_21C3719A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F760);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F760);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-session-001";
  *(_QWORD *)(v6 + 8) = 20;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identitySession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACA0, (uint64_t)qword_25525F760, a1);
}

uint64_t sub_21C371A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F778);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F778);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-readRawData-total-public";
  *(_QWORD *)(v6 + 8) = 33;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityReadRawDataPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACA8, (uint64_t)qword_25525F778, a1);
}

uint64_t sub_21C371B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F790);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F790);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-readRawData-001-readerReady";
  *(_QWORD *)(v6 + 8) = 36;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityReaderReadyForRawData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACB0, (uint64_t)qword_25525F790, a1);
}

uint64_t sub_21C371C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F7A8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F7A8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-readRawData-002-deliver-response";
  *(_QWORD *)(v6 + 8) = 41;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityDeliverRawDataResponse.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACB8, (uint64_t)qword_25525F7A8, a1);
}

uint64_t sub_21C371D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F7C0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F7C0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-readData-total-public";
  *(_QWORD *)(v6 + 8) = 30;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityReadDataPublic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACC0, (uint64_t)qword_25525F7C0, a1);
}

uint64_t sub_21C371E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F7D8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F7D8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-readData-001-readerReady";
  *(_QWORD *)(v6 + 8) = 33;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityReaderReadyForData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACC8, (uint64_t)qword_25525F7D8, a1);
}

uint64_t sub_21C371F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F7F0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F7F0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-readData-002-deliver-response";
  *(_QWORD *)(v6 + 8) = 38;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityDeliverDataResponse.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACD0, (uint64_t)qword_25525F7F0, a1);
}

uint64_t sub_21C372000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F808);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F808);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-displayOnly-001-readerReady";
  *(_QWORD *)(v6 + 8) = 36;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityDisplayOnlyReaderReady.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACD8, (uint64_t)qword_25525F808, a1);
}

uint64_t sub_21C3720E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F820);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F820);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-displayOnly-002-IdentityInfo";
  *(_QWORD *)(v6 + 8) = 37;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityDisplayIdentityInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACE0, (uint64_t)qword_25525F820, a1);
}

uint64_t sub_21C3721D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F838);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F838);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-registration-001-showRegistrationUI";
  *(_QWORD *)(v6 + 8) = 44;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityShowRegistrationUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACE8, (uint64_t)qword_25525F838, a1);
}

uint64_t sub_21C3722B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F850);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F850);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-registration-002-register";
  *(_QWORD *)(v6 + 8) = 34;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityRegister.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACF0, (uint64_t)qword_25525F850, a1);
}

uint64_t sub_21C3723A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F868);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F868);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-001-validate-request";
  *(_QWORD *)(v6 + 8) = 29;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityValidateRequest.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525ACF8, (uint64_t)qword_25525F868, a1);
}

uint64_t sub_21C372488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F880);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F880);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-002-preFlightCheck";
  *(_QWORD *)(v6 + 8) = 27;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityPreFlightCheck.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AD00, (uint64_t)qword_25525F880, a1);
}

uint64_t sub_21C372570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F898);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F898);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-003-showTapUI";
  *(_QWORD *)(v6 + 8) = 22;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityShowTapUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AD08, (uint64_t)qword_25525F898, a1);
}

uint64_t sub_21C372658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F8B0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F8B0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-004-waiting-tap";
  *(_QWORD *)(v6 + 8) = 24;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityWaitingTap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AD10, (uint64_t)qword_25525F8B0, a1);
}

uint64_t sub_21C372740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F8C8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F8C8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-005-connecting-holder";
  *(_QWORD *)(v6 + 8) = 30;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityConnectingHolder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AD18, (uint64_t)qword_25525F8C8, a1);
}

uint64_t sub_21C372828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F8E0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F8E0);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-006-waiting-approval";
  *(_QWORD *)(v6 + 8) = 29;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityWaitingApproval.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AD20, (uint64_t)qword_25525F8E0, a1);
}

uint64_t sub_21C372910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21C3A79B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRSignpost();
  __swift_allocate_value_buffer(v4, qword_25525F8F8);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_25525F8F8);
  sub_21C3A79A4();
  v6 = v5 + *(int *)(v4 + 20);
  *(_QWORD *)v6 = "identity-007-fetchMerchantDetails";
  *(_QWORD *)(v6 + 8) = 33;
  *(_BYTE *)(v6 + 16) = 2;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

uint64_t static CRSignpost.identityFetchMerchantDetails.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C3729F8(&qword_25525AD28, (uint64_t)qword_25525F8F8, a1);
}

uint64_t sub_21C3729F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for CRSignpost();
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_21C36F09C(v6, a3);
}

uint64_t *initializeBufferWithCopyOfBuffer for CRSignpost(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C3A79B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
  }
  return a1;
}

uint64_t destroy for CRSignpost(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C3A79B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CRSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_21C3A79B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t assignWithCopy for CRSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_21C3A79B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t initializeWithTake for CRSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_21C3A79B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for CRSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_21C3A79B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRSignpost()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C372CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C3A79B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CRSignpost()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C372D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C3A79B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_21C372D5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C3A79B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_21C372DCC()
{
  unint64_t result;

  result = qword_25525F9A0;
  if (!qword_25525F9A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25525F9A0);
  }
  return result;
}

void SecureStorage.save(at:data:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  void *v6;
  unsigned __int8 v7;
  void *v8;
  uint64_t inited;
  void **v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23[11];

  v23[10] = *(id *)MEMORY[0x24BDAC8D0];
  v21 = sub_21C3A76C8();
  v1 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  v22 = objc_msgSend(v4, sel_defaultManager);
  sub_21C3A768C();
  v5 = objc_msgSend(v4, sel_defaultManager);
  sub_21C3A76A4();
  v6 = (void *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_fileExistsAtPath_, v6);

  if ((v7 & 1) != 0)
    goto LABEL_4;
  v20 = v0;
  v8 = (void *)sub_21C3A7668();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525F9A8);
  inited = swift_initStackObject();
  v10 = (void **)MEMORY[0x24BDD0CF0];
  *(_OWORD *)(inited + 16) = xmmword_21C3ACA90;
  v11 = *v10;
  *(_QWORD *)(inited + 32) = *v10;
  v12 = (void *)*MEMORY[0x24BDD0CD0];
  type metadata accessor for FileProtectionType(0);
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 40) = v12;
  v14 = v11;
  v15 = v12;
  sub_21C2F611C(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_21C3731D8();
  v16 = (void *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  v23[0] = 0;
  v17 = v22;
  LODWORD(inited) = objc_msgSend(v22, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v8, 1, v16, v23);

  if ((_DWORD)inited)
  {
    v18 = v23[0];
LABEL_4:
    sub_21C3A7764();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v21);

    return;
  }
  v19 = v23[0];
  sub_21C3A75FC();

  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v21);
}

uint64_t SecureStorage.read(at:)()
{
  return sub_21C3A76EC();
}

Swift::OpaquePointer_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SecureStorage.getDirectoryContentAbsolutePath(at:)(Swift::String at)
{
  void *object;
  void *countAndFlagsBits;
  uint64_t v3;
  void *rawValue;
  Swift::OpaquePointer_optional result;

  object = at._object;
  countAndFlagsBits = (void *)at._countAndFlagsBits;
  result = SecureStorage.getDirectoryContent(at:)(at);
  if (!v3)
  {
    rawValue = result.value._rawValue;
    if (result.value._rawValue)
    {
      swift_bridgeObjectRetain();
      countAndFlagsBits = (void *)sub_21C3736B0((uint64_t)rawValue, (uint64_t)countAndFlagsBits, (uint64_t)object);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      countAndFlagsBits = 0;
    }
  }
  result.value._rawValue = countAndFlagsBits;
  return result;
}

id SecureStorage.exists(at:)()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_21C3A76A4();
  v1 = (void *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

unint64_t sub_21C3731D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525ADE0;
  if (!qword_25525ADE0)
  {
    type metadata accessor for FileAttributeKey(255);
    result = MEMORY[0x22077AECC](&unk_21C3A9ABC, v1);
    atomic_store(result, (unint64_t *)&qword_25525ADE0);
  }
  return result;
}

uint64_t SecureStorage.delete(at:)()
{
  id v0;
  void *v1;
  unsigned __int8 v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_21C3A7668();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v6);

  if ((v2 & 1) != 0)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_21C3A75FC();

    swift_willThrow();
  }
  return 1;
}

void *SecureStorage.getDirectoryContent(at:)()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_21C3A7668();
  v7[0] = 0;
  v2 = objc_msgSend(v0, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v1, 0, 0, v7);

  v3 = v7[0];
  if (v2)
  {
    sub_21C3A76C8();
    v1 = (void *)sub_21C3A8070();
    v4 = v3;

  }
  else
  {
    v5 = v7[0];
    sub_21C3A75FC();

    swift_willThrow();
  }
  return v1;
}

Swift::OpaquePointer_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SecureStorage.getDirectoryContent(at:)(Swift::String at)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  Swift::Bool v6;
  id v7;
  void *v8;
  id v9[2];
  Swift::OpaquePointer_optional result;

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v2 = (void *)sub_21C3A7EB4();
  v9[0] = 0;
  v3 = objc_msgSend(v1, sel_contentsOfDirectoryAtPath_error_, v2, v9);

  v4 = v9[0];
  if (v3)
  {
    v2 = (void *)sub_21C3A8070();
    v5 = v4;

  }
  else
  {
    v7 = v9[0];
    sub_21C3A75FC();

    swift_willThrow();
  }
  v8 = v2;
  result.value._rawValue = v8;
  result.is_nil = v6;
  return result;
}

void sub_21C373530()
{
  SecureStorage.save(at:data:)();
}

uint64_t sub_21C373544()
{
  return sub_21C3A76EC();
}

id sub_21C37355C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_21C3A76A4();
  v1 = (void *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

uint64_t sub_21C3735E0()
{
  SecureStorage.delete(at:)();
  return 1;
}

void *sub_21C3735F8()
{
  return SecureStorage.getDirectoryContent(at:)();
}

unint64_t sub_21C37360C(uint64_t a1, uint64_t a2)
{
  return (unint64_t)SecureStorage.getDirectoryContent(at:)(*(Swift::String *)&a1);
}

uint64_t sub_21C373620(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a1;
  v4 = (unint64_t)SecureStorage.getDirectoryContent(at:)(*(Swift::String *)&a1);
  if (!v5)
  {
    v6 = v4;
    if (v4)
    {
      swift_bridgeObjectRetain();
      v3 = sub_21C3736B0(v6, v3, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_21C3736B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_21C31E1D8(0, v3, 0);
    v4 = v13;
    v7 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21C3A7F8C();
      sub_21C3A7F8C();
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(v13 + 16);
      v8 = *(_QWORD *)(v13 + 24);
      if (v9 >= v8 >> 1)
        sub_21C31E1D8(v8 > 1, v9 + 1, 1);
      v7 += 16;
      *(_QWORD *)(v13 + 16) = v9 + 1;
      v10 = v13 + 16 * v9;
      *(_QWORD *)(v10 + 32) = a2;
      *(_QWORD *)(v10 + 40) = a3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t dispatch thunk of Storage.save(at:data:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of Storage.read(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Storage.exists(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Storage.delete(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))() & 1;
}

uint64_t dispatch thunk of Storage.getDirectoryContent(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of Storage.getDirectoryContent(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of Storage.getDirectoryContentAbsolutePath(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

ValueMetadata *type metadata accessor for SecureStorage()
{
  return &type metadata for SecureStorage;
}

void MobileDriversLicenseDisplayRequest.Response.validationOutcome.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t MobileDriversLicenseDisplayRequest.Response.hash(into:)()
{
  return sub_21C3A870C();
}

BOOL static MobileDriversLicenseDisplayRequest.Response.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDriversLicenseDisplayRequest.Response.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C37390C()
{
  unint64_t result;

  result = qword_25525F9B0;
  if (!qword_25525F9B0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDisplayRequest.Response, &type metadata for MobileDriversLicenseDisplayRequest.Response);
    atomic_store(result, (unint64_t *)&qword_25525F9B0);
  }
  return result;
}

uint64_t _s8ResponseVwst_2(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C37399C + 4 * byte_21C3B4755[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C3739D0 + 4 * asc_21C3B4750[v4]))();
}

uint64_t sub_21C3739D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3739D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C3739E0);
  return result;
}

uint64_t sub_21C3739EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C3739F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C3739F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C373A00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest.Response()
{
  return &type metadata for MobileDriversLicenseDisplayRequest.Response;
}

uint64_t static VASProtocol.internalize(_:)(char a1)
{
  return a1 & 1;
}

BOOL VASProtocol.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_21C373A4C()
{
  unint64_t result;

  result = qword_25525F9B8;
  if (!qword_25525F9B8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for VASProtocol, &type metadata for VASProtocol);
    atomic_store(result, (unint64_t *)&qword_25525F9B8);
  }
  return result;
}

_QWORD *sub_21C373A90@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for VASProtocol()
{
  return &type metadata for VASProtocol;
}

uint64_t sub_21C373AD0()
{
  _BYTE *v0;

  if (*v0)
    return 0x797469746E656469;
  else
    return 0x7961506F54706174;
}

uint64_t sub_21C373B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C374A24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C373B28()
{
  sub_21C373F24();
  return sub_21C3A8754();
}

uint64_t sub_21C373B50()
{
  sub_21C373F24();
  return sub_21C3A8760();
}

unint64_t sub_21C373B78()
{
  return 0xD000000000000024;
}

uint64_t sub_21C373B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C374B14(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_21C373BBC()
{
  sub_21C373F68();
  return sub_21C3A8754();
}

uint64_t sub_21C373BE4()
{
  sub_21C373F68();
  return sub_21C3A8760();
}

uint64_t sub_21C373C0C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6B6E696C6572;
  else
    return 0x5472656E74726170;
}

uint64_t sub_21C373C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C374B98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C373C70()
{
  sub_21C373FAC();
  return sub_21C3A8754();
}

uint64_t sub_21C373C98()
{
  sub_21C373FAC();
  return sub_21C3A8760();
}

uint64_t RegistrationType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525F9C0);
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525F9C8);
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525F9D0);
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v24 = v1[1];
  v25 = v12;
  v13 = *((char *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C373F24();
  sub_21C3A8748();
  if (v13 < 0)
  {
    v31 = 1;
    sub_21C373F68();
    v18 = v27;
    sub_21C3A85A4();
    v19 = v21;
    sub_21C3A85E0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  else
  {
    v30 = 0;
    sub_21C373FAC();
    v14 = v27;
    sub_21C3A85A4();
    v29 = 0;
    v15 = v23;
    v16 = v26;
    sub_21C3A85E0();
    if (!v16)
    {
      v28 = 1;
      sub_21C3A85EC();
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v14);
  }
}

unint64_t sub_21C373F24()
{
  unint64_t result;

  result = qword_25525F9D8;
  if (!qword_25525F9D8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4C2C, &type metadata for RegistrationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525F9D8);
  }
  return result;
}

unint64_t sub_21C373F68()
{
  unint64_t result;

  result = qword_25525F9E0;
  if (!qword_25525F9E0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4BDC, &type metadata for RegistrationType.IdentityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525F9E0);
  }
  return result;
}

unint64_t sub_21C373FAC()
{
  unint64_t result;

  result = qword_25525F9E8;
  if (!qword_25525F9E8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4B8C, &type metadata for RegistrationType.TapToPayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525F9E8);
  }
  return result;
}

uint64_t RegistrationType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525F9F0);
  v4 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  v40 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525F9F8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FA00);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_21C373F24();
  v15 = v43;
  sub_21C3A873C();
  if (!v15)
  {
    v16 = v41;
    v37 = v7;
    v43 = v11;
    v17 = sub_21C3A8598();
    if (*(_QWORD *)(v17 + 16) == 1)
    {
      if ((*(_BYTE *)(v17 + 32) & 1) != 0)
      {
        v47 = 1;
        sub_21C373F68();
        v18 = v16;
        sub_21C3A8514();
        v19 = v39;
        v26 = sub_21C3A855C();
        v28 = v27;
        (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v19);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v10);
        v29 = 0x80;
      }
      else
      {
        v46 = 0;
        sub_21C373FAC();
        v23 = v9;
        sub_21C3A8514();
        v45 = 0;
        v24 = v6;
        v41 = (char *)sub_21C3A855C();
        v31 = v30;
        v44 = 1;
        v32 = v23;
        v33 = sub_21C3A8568();
        v34 = v43;
        LOBYTE(v23) = v33;
        (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v10);
        v29 = v23 & 1;
        v28 = v31;
        v26 = (uint64_t)v41;
      }
      v35 = v38;
      *v38 = v26;
      v35[1] = v28;
      *((_BYTE *)v35 + 16) = v29;
    }
    else
    {
      v20 = sub_21C3A840C();
      swift_allocError();
      v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
      *v22 = &type metadata for RegistrationType;
      sub_21C3A8520();
      sub_21C3A8400();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

uint64_t sub_21C374410@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RegistrationType.init(from:)(a1, a2);
}

uint64_t sub_21C374424(_QWORD *a1)
{
  return RegistrationType.encode(to:)(a1);
}

uint64_t sub_21C37443C()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for RegistrationType()
{
  return sub_21C374454();
}

uint64_t sub_21C374454()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s15ProximityReader16RegistrationTypeOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_21C37443C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RegistrationType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_21C37443C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_21C374454();
  return a1;
}

uint64_t assignWithTake for RegistrationType(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_21C374454();
  return a1;
}

uint64_t getEnumTagSinglePayload for RegistrationType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 16) & 0x7E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RegistrationType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_21C3745E0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_21C3745EC(uint64_t result)
{
  *(_BYTE *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_21C3745FC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for RegistrationType()
{
  return &type metadata for RegistrationType;
}

ValueMetadata *type metadata accessor for RegistrationType.CodingKeys()
{
  return &type metadata for RegistrationType.CodingKeys;
}

uint64_t _s15ProximityReader16RegistrationTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C374680 + 4 * byte_21C3B4895[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C3746B4 + 4 * asc_21C3B4890[v4]))();
}

uint64_t sub_21C3746B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3746BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C3746C4);
  return result;
}

uint64_t sub_21C3746D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C3746D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C3746DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3746E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RegistrationType.TapToPayCodingKeys()
{
  return &type metadata for RegistrationType.TapToPayCodingKeys;
}

uint64_t storeEnumTagSinglePayload for RegistrationType.IdentityCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C374740 + 4 * byte_21C3B489A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C374760 + 4 * byte_21C3B489F[v4]))();
}

_BYTE *sub_21C374740(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C374760(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C374768(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C374770(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C374778(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C374780(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RegistrationType.IdentityCodingKeys()
{
  return &type metadata for RegistrationType.IdentityCodingKeys;
}

unint64_t sub_21C3747A0()
{
  unint64_t result;

  result = qword_25525FA08;
  if (!qword_25525FA08)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B49F4, &type metadata for RegistrationType.IdentityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FA08);
  }
  return result;
}

unint64_t sub_21C3747E8()
{
  unint64_t result;

  result = qword_25525FA10;
  if (!qword_25525FA10)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4AAC, &type metadata for RegistrationType.TapToPayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FA10);
  }
  return result;
}

unint64_t sub_21C374830()
{
  unint64_t result;

  result = qword_25525FA18;
  if (!qword_25525FA18)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4B64, &type metadata for RegistrationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FA18);
  }
  return result;
}

unint64_t sub_21C374878()
{
  unint64_t result;

  result = qword_25525FA20;
  if (!qword_25525FA20)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4A1C, &type metadata for RegistrationType.TapToPayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FA20);
  }
  return result;
}

unint64_t sub_21C3748C0()
{
  unint64_t result;

  result = qword_25525FA28;
  if (!qword_25525FA28)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4A44, &type metadata for RegistrationType.TapToPayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FA28);
  }
  return result;
}

unint64_t sub_21C374908()
{
  unint64_t result;

  result = qword_25525FA30;
  if (!qword_25525FA30)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4964, &type metadata for RegistrationType.IdentityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FA30);
  }
  return result;
}

unint64_t sub_21C374950()
{
  unint64_t result;

  result = qword_25525FA38;
  if (!qword_25525FA38)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B498C, &type metadata for RegistrationType.IdentityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FA38);
  }
  return result;
}

unint64_t sub_21C374998()
{
  unint64_t result;

  result = qword_25525FA40;
  if (!qword_25525FA40)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4AD4, &type metadata for RegistrationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FA40);
  }
  return result;
}

unint64_t sub_21C3749E0()
{
  unint64_t result;

  result = qword_25525FA48;
  if (!qword_25525FA48)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4AFC, &type metadata for RegistrationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FA48);
  }
  return result;
}

uint64_t sub_21C374A24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7961506F54706174 && a2 == 0xE800000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469746E656469 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21C374B14(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000024 && a2 == 0x800000021C3BC540)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_21C374B98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5472656E74726170 && a2 == 0xEC0000006E656B6FLL;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B6E696C6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

BOOL static MobileDriversLicenseDisplayRequest.Response.ValidationOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDriversLicenseDisplayRequest.Response.ValidationOutcome.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileDriversLicenseDisplayRequest.Response.ValidationOutcome.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C374D1C()
{
  unint64_t result;

  result = qword_25525FA50;
  if (!qword_25525FA50)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDisplayRequest.Response.ValidationOutcome, &type metadata for MobileDriversLicenseDisplayRequest.Response.ValidationOutcome);
    atomic_store(result, (unint64_t *)&qword_25525FA50);
  }
  return result;
}

uint64_t _s17ValidationOutcomeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C374DAC + 4 * byte_21C3B4C85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C374DE0 + 4 * byte_21C3B4C80[v4]))();
}

uint64_t sub_21C374DE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C374DE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C374DF0);
  return result;
}

uint64_t sub_21C374DFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C374E04);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C374E08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C374E10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest.Response.ValidationOutcome()
{
  return &type metadata for MobileDriversLicenseDisplayRequest.Response.ValidationOutcome;
}

uint64_t static PINConfiguration.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t PINConfiguration.digest.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_digest);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINConfiguration.allowPINBypass.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_allowPINBypass);
}

uint64_t PINConfiguration.privacyLock.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_privacyLock);
}

uint64_t PINConfiguration.merchantName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_merchantName);
  swift_bridgeObjectRetain();
  return v1;
}

id PINConfiguration.amount.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_amount);
}

uint64_t PINConfiguration.currencyCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_currencyCode);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PINConfiguration.countryCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_countryCode);
}

uint64_t PINConfiguration.customerLocaleIdentifier.getter()
{
  return sub_21C374F3C(&OBJC_IVAR____TtC15ProximityReader16PINConfiguration_customerLocaleIdentifier);
}

uint64_t PINConfiguration.cardPreferredLocaleIdentifier.getter()
{
  return sub_21C374F3C(&OBJC_IVAR____TtC15ProximityReader16PINConfiguration_cardPreferredLocaleIdentifier);
}

uint64_t sub_21C374F3C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

id PINConfiguration.__allocating_init(digest:allowPINBypass:privacyLock:merchantName:amount:currencyCode:countryCode:customerLocaleIdentifier:cardPreferredLocaleIdentifier:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  objc_class *v14;
  _BYTE *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  objc_super v30;

  v22 = objc_allocWithZone(v14);
  v23 = &v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_digest];
  *v23 = a1;
  v23[1] = a2;
  v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_allowPINBypass] = a3;
  v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_privacyLock] = a4;
  v24 = &v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_merchantName];
  *v24 = a5;
  v24[1] = a6;
  *(_QWORD *)&v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_amount] = a7;
  v25 = &v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_currencyCode];
  *v25 = a8;
  v25[1] = a9;
  *(_QWORD *)&v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_countryCode] = a10;
  v26 = &v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_customerLocaleIdentifier];
  *v26 = a11;
  v26[1] = a12;
  v27 = &v22[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_cardPreferredLocaleIdentifier];
  *v27 = a13;
  v27[1] = a14;
  v30.receiver = v22;
  v30.super_class = v14;
  return objc_msgSendSuper2(&v30, sel_init);
}

id PINConfiguration.init(digest:allowPINBypass:privacyLock:merchantName:amount:currencyCode:countryCode:customerLocaleIdentifier:cardPreferredLocaleIdentifier:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _BYTE *v14;
  objc_class *ObjectType;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  objc_super v30;

  ObjectType = (objc_class *)swift_getObjectType();
  v23 = &v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_digest];
  *v23 = a1;
  v23[1] = a2;
  v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_allowPINBypass] = a3;
  v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_privacyLock] = a4;
  v24 = &v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_merchantName];
  *v24 = a5;
  v24[1] = a6;
  *(_QWORD *)&v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_amount] = a7;
  v25 = &v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_currencyCode];
  *v25 = a8;
  v25[1] = a9;
  *(_QWORD *)&v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_countryCode] = a10;
  v26 = &v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_customerLocaleIdentifier];
  *v26 = a11;
  v26[1] = a12;
  v27 = &v14[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_cardPreferredLocaleIdentifier];
  *v27 = a13;
  v27[1] = a14;
  v30.receiver = v14;
  v30.super_class = ObjectType;
  return objc_msgSendSuper2(&v30, sel_init);
}

Swift::Void __swiftcall PINConfiguration.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;

  v3 = (void *)sub_21C3A7EB4();
  v4 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_allowPINBypass);
  v6 = (void *)sub_21C3A7EB4();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v5, v6);

  v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_privacyLock);
  v8 = (void *)sub_21C3A7EB4();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v7, v8);

  v9 = (void *)sub_21C3A7EB4();
  v10 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);

  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_amount);
  v12 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v11, v12);

  v13 = (void *)sub_21C3A7EB4();
  v14 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v13, v14);

  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_countryCode);
  v16 = (void *)sub_21C3A7EB4();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v15, v16);

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_customerLocaleIdentifier + 8))
    v17 = sub_21C3A7EB4();
  else
    v17 = 0;
  v18 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v17, v18);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader16PINConfiguration_cardPreferredLocaleIdentifier + 8))
    v19 = sub_21C3A7EB4();
  else
    v19 = 0;
  v20 = (id)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v19, v20);
  swift_unknownObjectRelease();

}

id PINConfiguration.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PINConfiguration.init(coder:)(a1);
}

id PINConfiguration.init(coder:)(void *a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  id v42;
  objc_class *v44;
  uint64_t *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  objc_class *v57;
  objc_super v58;

  ObjectType = swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2D7704(0, (unint64_t *)&qword_25525AE20);
  v7 = v1;
  v8 = sub_21C3A825C();
  if (v8)
  {
    v9 = (void *)v8;
    v56 = sub_21C3A7ED8();
    v11 = v10;

    v12 = (void *)sub_21C3A7EB4();
    v55 = objc_msgSend(a1, sel_decodeBoolForKey_, v12);

    v13 = (void *)sub_21C3A7EB4();
    v14 = objc_msgSend(a1, sel_decodeBoolForKey_, v13);

    v15 = sub_21C3A825C();
    if (v15)
    {
      v16 = (void *)v15;
      v57 = (objc_class *)ObjectType;
      v54 = sub_21C3A7ED8();
      v18 = v17;

      sub_21C2D7704(0, (unint64_t *)&unk_25525D5A8);
      v19 = sub_21C3A825C();
      if (v19)
      {
        v20 = (void *)v19;
        v21 = sub_21C3A825C();
        if (v21)
        {
          v22 = (void *)v21;
          v53 = sub_21C3A7ED8();
          v24 = v23;

          v25 = (void *)sub_21C3A7EB4();
          v26 = objc_msgSend(a1, sel_decodeIntegerForKey_, v25);

          v27 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_digest];
          *v27 = v56;
          v27[1] = v11;
          v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_allowPINBypass] = v55;
          v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_privacyLock] = v14;
          v28 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_merchantName];
          *v28 = v54;
          v28[1] = v18;
          *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_amount] = v20;
          v29 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_currencyCode];
          *v29 = v53;
          v29[1] = v24;
          *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_countryCode] = v26;
          v30 = v20;
          v31 = sub_21C3A825C();
          if (v31)
          {
            v32 = (void *)v31;
            v33 = sub_21C3A7ED8();
            v35 = v34;

          }
          else
          {
            v33 = 0;
            v35 = 0;
          }
          v44 = v57;
          v45 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_customerLocaleIdentifier];
          *v45 = v33;
          v45[1] = v35;
          v46 = sub_21C3A825C();
          if (v46)
          {
            v47 = (void *)v46;
            v48 = sub_21C3A7ED8();
            v50 = v49;

          }
          else
          {

            v48 = 0;
            v50 = 0;
          }
          v51 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader16PINConfiguration_cardPreferredLocaleIdentifier];
          *v51 = v48;
          v51[1] = v50;

          v58.receiver = v7;
          v58.super_class = v44;
          v42 = objc_msgSendSuper2(&v58, sel_init);

          return v42;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }

  if (qword_25525AAE0 != -1)
    swift_once();
  v36 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F78);
  sub_21C2D1D80(v36, (uint64_t)v6);
  v37 = sub_21C3A79D4();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v6, 1, v37) == 1)
  {

    sub_21C2D1DC8((uint64_t)v6);
  }
  else
  {
    v39 = sub_21C3A79BC();
    v40 = sub_21C3A81C0();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_21C2CD000, v39, v40, "PINConfiguration | Failed to decode object", v41, 2u);
      MEMORY[0x22077AF8C](v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v37);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

id PINConfiguration.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PINConfiguration.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PINConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PINConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for PINConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PINConfiguration.__allocating_init(digest:allowPINBypass:privacyLock:merchantName:amount:currencyCode:countryCode:customerLocaleIdentifier:cardPreferredLocaleIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of PINConfiguration.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

void sub_21C375C68(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_21C375CB4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_21C375D44 + 4 * byte_21C3B4D55[a2]))(0x7665447974706D45);
}

uint64_t sub_21C375D44(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7665447974706D45 && v1 == 0xED00004449656369)
    v2 = 1;
  else
    v2 = sub_21C3A864C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_21C375E1C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_21C375E80(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_21C375EF4 + 4 * byte_21C3B4D5E[a2]))(0x496E6F6973736573);
}

uint64_t sub_21C375EF4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x496E6F6973736573 && v1 == 0xE900000000000044)
    v2 = 1;
  else
    v2 = sub_21C3A864C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_21C375FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = XPCUserInfoKey.rawValue.getter();
  v2 = v1;
  if (v0 == XPCUserInfoKey.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_21C3A864C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_21C376044(char a1)
{
  sub_21C3A8700();
  __asm { BR              X10 }
}

uint64_t sub_21C37609C()
{
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

void sub_21C376140(char a1)
{
  sub_21C3A8700();
  __asm { BR              X10 }
}

uint64_t sub_21C376198()
{
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

void sub_21C37621C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_21C376260()
{
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

void sub_21C3762E8(uint64_t a1, char a2)
{
  sub_21C3A8700();
  __asm { BR              X10 }
}

uint64_t sub_21C37633C()
{
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

void sub_21C3763C0(uint64_t a1, char a2)
{
  sub_21C3A8700();
  __asm { BR              X10 }
}

uint64_t sub_21C376414()
{
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t sub_21C3764B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E260);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_21C2D775C(a1, &qword_25525E260);
    sub_21C2F7790(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_21C2D775C((uint64_t)v10, &qword_25525E260);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_21C2F7D60((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21C376630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_21C2D7828((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_21C2F814C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_21C2D775C(a1, &qword_25525B110);
    sub_21C2F7B48(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_21C2D775C((uint64_t)v9, &qword_25525B110);
  }
}

uint64_t sub_21C376704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E540);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AnalyticsReporter();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_21C2D775C(a1, &qword_25525E540);
    sub_21C2F7C38(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_21C2D775C((uint64_t)v10, &qword_25525E540);
  }
  else
  {
    sub_21C2F83F0(a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v4;
    *v4 = 0x8000000000000000;
    sub_21C2F827C((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_21C376864(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C140);
    v2 = sub_21C3A84D8();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_21C2D77EC(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_21C2D7828(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_21C2D7828(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_21C2D7828(v36, v37);
    sub_21C2D7828(v37, &v33);
    result = sub_21C3A83AC();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_21C2D7828(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_21C320A10();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_21C376C28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t result;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[3];
  _OWORD v45[2];
  __int128 v46;
  _OWORD v47[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D500);
    v2 = (_QWORD *)sub_21C3A84D8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v35 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v34 = (unint64_t)(63 - v3) >> 6;
  v6 = v47;
  v7 = v45;
  v8 = &v41;
  v9 = &v43;
  result = swift_bridgeObjectRetain();
  v36 = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v36 + 1;
  if (__OFADD__(v36, 1))
    goto LABEL_35;
  if (v19 >= v34)
    goto LABEL_32;
  v20 = *(_QWORD *)(v35 + 8 * v19);
  v21 = v36 + 1;
  if (!v20)
  {
    v21 = v36 + 2;
    if (v36 + 2 >= v34)
      goto LABEL_32;
    v20 = *(_QWORD *)(v35 + 8 * v21);
    if (!v20)
    {
      v21 = v36 + 3;
      if (v36 + 3 >= v34)
        goto LABEL_32;
      v20 = *(_QWORD *)(v35 + 8 * v21);
      if (!v20)
      {
        v21 = v36 + 4;
        if (v36 + 4 >= v34)
          goto LABEL_32;
        v20 = *(_QWORD *)(v35 + 8 * v21);
        if (!v20)
        {
          v22 = v36 + 5;
          if (v36 + 5 < v34)
          {
            v20 = *(_QWORD *)(v35 + 8 * v22);
            if (v20)
            {
              v21 = v36 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v34)
                break;
              v20 = *(_QWORD *)(v35 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_21C320A10();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v36 = v21;
  v37 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v36 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    sub_21C2D77EC(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v6);
    *(_QWORD *)&v46 = v25;
    *((_QWORD *)&v46 + 1) = v24;
    v44[2] = v46;
    v45[0] = v47[0];
    v45[1] = v47[1];
    v39 = v25;
    v40 = v24;
    sub_21C2D7828(v7, &v38);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E6E0);
    swift_dynamicCast();
    v27 = v39;
    v26 = v40;
    sub_21C2D7828(v8, v9);
    sub_21C2D7828(v9, v44);
    sub_21C2D7828(v44, &v42);
    result = sub_21C2DC178(v27, v26);
    v28 = result;
    if ((v29 & 1) != 0)
    {
      v11 = v9;
      v12 = v8;
      v13 = v1;
      v14 = v7;
      v15 = v6;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v27;
      v16[1] = v26;
      v6 = v15;
      v7 = v14;
      v1 = v13;
      v8 = v12;
      v9 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      result = (unint64_t)sub_21C2D7828(&v42, v17);
      v5 = v37;
      if (!v37)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v30 = (uint64_t *)(v2[6] + 16 * result);
    *v30 = v27;
    v30[1] = v26;
    result = (unint64_t)sub_21C2D7828(&v42, (_OWORD *)(v2[7] + 32 * result));
    v31 = v2[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_34;
    v2[2] = v33;
    v5 = v37;
    if (!v37)
      goto LABEL_11;
LABEL_10:
    v37 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_21C376FD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D500);
    v2 = (_QWORD *)sub_21C3A84D8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x24BEE4AD0] + 8;
  v11 = MEMORY[0x24BEE4AD8] + 8;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_21C320A10();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    sub_21C2D7828(v6, v7);
    sub_21C2D7828(v7, v40);
    sub_21C2D7828(v40, &v38);
    result = sub_21C2DC178(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      result = (unint64_t)sub_21C2D7828(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_21C2D7828(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t AnalyticsReporter.init(serviceName:hierarchyToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t inited;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[2];
  __int128 v78;
  uint64_t v79;

  v75 = a3;
  v71 = a5;
  v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v67);
  v68 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C3A77E8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AnalyticsReporter();
  v69 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21C3A77DC();
  v16 = sub_21C3A77C4();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v12, v9);
  v15[3] = v16;
  v15[4] = v18;
  v20 = a1;
  v15[1] = a1;
  v15[2] = a2;
  v70 = v13;
  v21 = (char *)v15 + *(int *)(v13 + 32);
  swift_bridgeObjectRetain();
  sub_21C3A77AC();
  if (a4)
  {
    v22 = v75;
  }
  else
  {
    sub_21C3A77DC();
    v22 = sub_21C3A77C4();
    a4 = v23;
    v19(v12, v9);
  }
  v15[5] = v22;
  v15[6] = a4;
  if (a1 == 0x7265566F54706174 && a2 == 0xEB00000000796669
    || (sub_21C3A864C() & 1) != 0
    || a1 == 0xD000000000000016 && a2 == 0x800000021C3BDB70
    || (sub_21C3A864C() & 1) != 0)
  {
    v74 = 0xE600000000000000;
    v73 = 0x74656C6C6177;
    v24 = 55;
  }
  else
  {
    v74 = 0xE900000000000073;
    v73 = 0x6F705F74705F7078;
    v24 = 31;
  }
  v72 = a2;
  if (qword_25525AD30 != -1)
    swift_once();
  v75 = v20;
  result = *MEMORY[0x24BE7CAB8];
  if (!*MEMORY[0x24BE7CAB8])
  {
    __break(1u);
    goto LABEL_34;
  }
  v26 = qword_25525FAD8;
  v27 = sub_21C3A7ED8();
  v29 = v28;
  v30 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v31 = objc_msgSend(v30, sel_mainBundle);
  v32 = objc_msgSend(v31, sel_bundleIdentifier);

  v33 = MEMORY[0x24BEE0D00];
  if (v32)
  {
    v34 = sub_21C3A7ED8();
    v36 = v35;

    v79 = v33;
    if (v36)
      goto LABEL_19;
    v34 = 0;
  }
  else
  {
    v34 = 0;
    v79 = MEMORY[0x24BEE0D00];
  }
  v36 = 0xE000000000000000;
LABEL_19:
  *(_QWORD *)&v78 = v34;
  *((_QWORD *)&v78 + 1) = v36;
  sub_21C2D7828(&v78, v77);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v76 = v26;
  sub_21C2F814C(v77, v27, v29, isUniquelyReferenced_nonNull_native);
  v38 = v76;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *MEMORY[0x24BE7CAC8];
  if (!*MEMORY[0x24BE7CAC8])
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v39 = sub_21C3A7ED8();
  v41 = v40;
  v79 = MEMORY[0x24BEE3F88];
  LODWORD(v78) = v24;
  sub_21C2D7828(&v78, v77);
  v42 = swift_isUniquelyReferenced_nonNull_native();
  v76 = v38;
  sub_21C2F814C(v77, v39, v41, v42);
  v43 = v76;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FAE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21C3AA490;
  result = *MEMORY[0x24BE7CB20];
  if (!*MEMORY[0x24BE7CB20])
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v45 = v21;
  *(_QWORD *)(inited + 32) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 40) = v46;
  *(_QWORD *)(inited + 72) = v33;
  v47 = v74;
  *(_QWORD *)(inited + 48) = v73;
  *(_QWORD *)(inited + 56) = v47;
  result = *MEMORY[0x24BE7CB30];
  v48 = v75;
  if (!*MEMORY[0x24BE7CB30])
  {
LABEL_36:
    __break(1u);
    return result;
  }
  *(_QWORD *)(inited + 80) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 88) = v49;
  *(_QWORD *)(inited + 120) = v33;
  v50 = v72;
  *(_QWORD *)(inited + 96) = v48;
  *(_QWORD *)(inited + 104) = v50;
  v51 = sub_21C2F5FE8(inited);
  sub_21C376864(v43);
  swift_bridgeObjectRelease();
  sub_21C376864(v51);
  swift_bridgeObjectRelease();
  v52 = objc_allocWithZone(MEMORY[0x24BE7CA78]);
  v53 = (void *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  v54 = (void *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  v55 = (void *)sub_21C3A8064();
  v56 = objc_msgSend(v52, sel_initWithSessionInfo_userInfo_frameworksToCheck_, v53, v54, v55);

  if (v56)
  {
    *v15 = v56;
    v57 = v71;
    sub_21C3535E4((uint64_t)v15, v71);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v57, 0, 1, v70);
    return sub_21C3546F4((uint64_t)v15);
  }
  else
  {
    if (qword_25525AB00 != -1)
      swift_once();
    v58 = __swift_project_value_buffer(v67, (uint64_t)qword_255278FD8);
    v59 = v68;
    sub_21C2D1D80(v58, v68);
    v60 = sub_21C3A79D4();
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60) == 1)
    {
      sub_21C2D775C(v59, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v62 = sub_21C3A79BC();
      v63 = sub_21C3A81C0();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v64 = 0;
        _os_log_impl(&dword_21C2CD000, v62, v63, "Could not create the RTCReporting object", v64, 2u);
        MEMORY[0x22077AF8C](v64, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v59, v60);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v65 = sub_21C3A77B8();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v45, v65);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v71, 1, 1, v70);
  }
}

uint64_t type metadata accessor for AnalyticsReporter()
{
  uint64_t result;

  result = qword_25525FB78;
  if (!qword_25525FB78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AnalyticsReporter.sessionDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v0 = sub_21C3A77B8();
  v18 = *(_QWORD *)(v0 - 8);
  v19 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21C3A78F0();
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21C3A7518();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A78D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525EC90);
  v10 = sub_21C3A78E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_21C3ACA90;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x24BDCF260], v10);
  sub_21C3794C8(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  type metadata accessor for AnalyticsReporter();
  sub_21C3A77AC();
  sub_21C3A78B4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v2, v19);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  v14 = sub_21C3A7500();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

id sub_21C377CEC(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  id v31[25];

  v31[23] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FAE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21C3B5040;
  if (!*MEMORY[0x24BE7CA88])
  {
    __break(1u);
    goto LABEL_15;
  }
  *(_QWORD *)(inited + 32) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 40) = v7;
  v8 = MEMORY[0x24BEE4478];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE4478];
  *(_WORD *)(inited + 48) = 1;
  if (!*MEMORY[0x24BE7CAA0])
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  *(_QWORD *)(inited + 80) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 88) = v9;
  *(_QWORD *)(inited + 120) = v8;
  *(_WORD *)(inited + 96) = 100;
  if (!*MEMORY[0x24BE7CA98])
    goto LABEL_16;
  *(_QWORD *)(inited + 128) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 136) = v10;
  *(_QWORD *)(inited + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E368);
  *(_QWORD *)(inited + 144) = a1;
  swift_bridgeObjectRetain();
  v11 = sub_21C2F5FE8(inited);
  v12 = *v1;
  sub_21C376864(v11);
  swift_bridgeObjectRelease();
  v13 = (void *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  v31[0] = 0;
  LODWORD(v12) = objc_msgSend(v12, sel_sendMessageWithDictionary_error_, v13, v31);

  if ((_DWORD)v12)
    return v31[0];
  v29 = v31[0];
  v15 = v31[0];
  v16 = (void *)sub_21C3A75FC();

  swift_willThrow();
  if (qword_25525AB00 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v3, (uint64_t)qword_255278FD8);
  sub_21C2D1D80(v17, (uint64_t)v5);
  v18 = sub_21C3A79D4();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v5, 1, v18) == 1)
  {

    return (id)sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v20 = v16;
    v21 = v16;
    v22 = sub_21C3A79BC();
    v23 = sub_21C3A81C0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = (void *)swift_slowAlloc();
      v31[0] = v25;
      *(_DWORD *)v24 = 136315138;
      v29 = v24 + 4;
      v30 = (uint64_t)v16;
      v26 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
      v27 = sub_21C3A7F14();
      v30 = sub_21C350398(v27, v28, (uint64_t *)v31);
      sub_21C3A82F8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21C2CD000, v22, v23, "Error sending analytics: [%s]", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v25, -1, -1);
      MEMORY[0x22077AF8C](v24, -1, -1);

    }
    else
    {

    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v5, v18);
  }
}

uint64_t static AnalyticsError.== infix(_:_:)()
{
  return 1;
}

uint64_t AnalyticsError.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t AnalyticsError.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C3781B0()
{
  uint64_t inited;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FAE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21C3B5040;
  result = *MEMORY[0x24BE7CAD8];
  if (!*MEMORY[0x24BE7CAD8])
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)(inited + 32) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 48) = 0x3FF0000000000000;
  result = *MEMORY[0x24BE7CB18];
  if (!*MEMORY[0x24BE7CB18])
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)(inited + 80) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 88) = v3;
  *(_QWORD *)(inited + 120) = MEMORY[0x24BEE44F0];
  *(_DWORD *)(inited + 96) = 1234;
  result = *MEMORY[0x24BE7CAA8];
  if (*MEMORY[0x24BE7CAA8])
  {
    *(_QWORD *)(inited + 128) = sub_21C3A7ED8();
    *(_QWORD *)(inited + 136) = v4;
    *(_QWORD *)(inited + 168) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 144) = 1;
    result = sub_21C2F5FE8(inited);
    qword_25525FAD8 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t AnalyticsReporter.serviceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnalyticsReporter.sessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnalyticsReporter.hierarchyToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnalyticsReporter.creationTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AnalyticsReporter() + 32);
  v4 = sub_21C3A77B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_21C378360(char *a1)
{
  sub_21C375E1C(*a1);
}

void sub_21C37836C()
{
  char *v0;

  sub_21C376140(*v0);
}

void sub_21C378374()
{
  __asm { BR              X10 }
}

uint64_t sub_21C3783B8()
{
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

void sub_21C378428(uint64_t a1)
{
  char *v1;

  sub_21C3762E8(a1, *v1);
}

uint64_t sub_21C378430@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21C37A44C();
  *a1 = result;
  return result;
}

uint64_t sub_21C37845C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_21C378494 + 4 * byte_21C3B4D7D[*v0]))();
}

void sub_21C378494(_QWORD *a1@<X8>)
{
  *a1 = 0x496E6F6973736573;
  a1[1] = 0xE900000000000044;
}

void sub_21C3784B4(char *a1@<X8>)
{
  strcpy(a1, "hierarchyToken");
  a1[15] = -18;
}

void sub_21C3784DC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x800000021C3B82D0;
}

uint64_t sub_21C3784FC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C378534 + 4 * byte_21C3B4D81[*v0]))(0x4E65636976726573, 0xEB00000000656D61);
}

uint64_t sub_21C378534()
{
  return 0x496E6F6973736573;
}

uint64_t sub_21C378550()
{
  return 0x6863726172656968;
}

unint64_t sub_21C378574()
{
  return 0xD000000000000011;
}

uint64_t sub_21C378590@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21C37A44C();
  *a1 = result;
  return result;
}

uint64_t sub_21C3785B4()
{
  sub_21C379BF0();
  return sub_21C3A8754();
}

uint64_t sub_21C3785DC()
{
  sub_21C379BF0();
  return sub_21C3A8760();
}

uint64_t AnalyticsReporter.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t inited;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;

  v81 = a2;
  v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v79);
  v80 = (uint64_t)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_21C3A77B8();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FAE8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AnalyticsReporter();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v85 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_21C379BF0();
  v14 = v84;
  sub_21C3A873C();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
  v77 = v5;
  v84 = v7;
  v78 = v10;
  v15 = v83;
  LOBYTE(v87) = 0;
  v16 = v9;
  v17 = sub_21C3A855C();
  v20 = v19;
  v21 = v12;
  *((_QWORD *)v12 + 1) = v17;
  *((_QWORD *)v12 + 2) = v19;
  LOBYTE(v87) = 1;
  v22 = v17;
  swift_bridgeObjectRetain();
  v23 = sub_21C3A855C();
  v24 = v84;
  v76 = v22;
  *((_QWORD *)v21 + 3) = v23;
  *((_QWORD *)v21 + 4) = v25;
  LOBYTE(v87) = 2;
  v26 = sub_21C3A855C();
  v75 = v20;
  *((_QWORD *)v21 + 5) = v26;
  *((_QWORD *)v21 + 6) = v27;
  LOBYTE(v87) = 3;
  sub_21C2D1198(&qword_25525FAF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v28 = v77;
  sub_21C3A858C();
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(&v21[*(int *)(v78 + 32)], v28, v15);
  if (qword_25525AD30 != -1)
    swift_once();
  v71 = 0;
  v77 = v16;
  v74 = v6;
  result = *MEMORY[0x24BE7CAB8];
  if (!*MEMORY[0x24BE7CAB8])
  {
    __break(1u);
    goto LABEL_29;
  }
  v29 = qword_25525FAD8;
  v73 = sub_21C3A7ED8();
  v72 = v30;
  v31 = (void *)objc_opt_self();
  v32 = v29;
  swift_bridgeObjectRetain();
  v33 = objc_msgSend(v31, sel_mainBundle);
  v34 = objc_msgSend(v33, sel_bundleIdentifier);

  v35 = MEMORY[0x24BEE0D00];
  if (v34)
  {
    v36 = sub_21C3A7ED8();
    v38 = v37;

    v88 = v35;
    if (v38)
      goto LABEL_15;
    v36 = 0;
  }
  else
  {
    v36 = 0;
    v88 = MEMORY[0x24BEE0D00];
  }
  v38 = 0xE000000000000000;
LABEL_15:
  v39 = v32;
  v40 = v73;
  v41 = v72;
  *(_QWORD *)&v87 = v36;
  *((_QWORD *)&v87 + 1) = v38;
  sub_21C2D7828(&v87, &v86);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v89 = v39;
  sub_21C2F814C(&v86, v40, v41, isUniquelyReferenced_nonNull_native);
  v43 = v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *MEMORY[0x24BE7CAC8];
  if (!*MEMORY[0x24BE7CAC8])
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v44 = sub_21C3A7ED8();
  v46 = v45;
  v88 = MEMORY[0x24BEE3F88];
  LODWORD(v87) = 31;
  sub_21C2D7828(&v87, &v86);
  v47 = swift_isUniquelyReferenced_nonNull_native();
  v89 = v43;
  sub_21C2F814C(&v86, v44, v46, v47);
  v48 = v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FAE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21C3AA490;
  result = *MEMORY[0x24BE7CB20];
  if (!*MEMORY[0x24BE7CB20])
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_QWORD *)(inited + 32) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 40) = v50;
  v51 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0x6F705F74705F7078;
  *(_QWORD *)(inited + 56) = 0xE900000000000073;
  result = *MEMORY[0x24BE7CB30];
  v52 = v75;
  if (!*MEMORY[0x24BE7CB30])
  {
LABEL_31:
    __break(1u);
    return result;
  }
  *(_QWORD *)(inited + 80) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 88) = v53;
  *(_QWORD *)(inited + 120) = v51;
  *(_QWORD *)(inited + 96) = v76;
  *(_QWORD *)(inited + 104) = v52;
  v54 = sub_21C2F5FE8(inited);
  sub_21C376864(v48);
  swift_bridgeObjectRelease();
  sub_21C376864(v54);
  swift_bridgeObjectRelease();
  v55 = objc_allocWithZone(MEMORY[0x24BE7CA78]);
  v56 = (void *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  v57 = (void *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  v58 = (void *)sub_21C3A8064();
  v59 = objc_msgSend(v55, sel_initWithSessionInfo_userInfo_frameworksToCheck_, v56, v57, v58);

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v77, v74);
    *(_QWORD *)v21 = v59;
    sub_21C3535E4((uint64_t)v21, v81);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
    return sub_21C3546F4((uint64_t)v21);
  }
  else
  {
    v60 = v74;
    v61 = v77;
    if (qword_25525AB00 != -1)
      swift_once();
    v62 = __swift_project_value_buffer(v79, (uint64_t)qword_255278FD8);
    v63 = v80;
    sub_21C2D1D80(v62, v80);
    v64 = sub_21C3A79D4();
    v65 = *(_QWORD *)(v64 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64) == 1)
    {
      sub_21C2D775C(v63, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v66 = sub_21C3A79BC();
      v67 = sub_21C3A81C0();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v68 = 0;
        _os_log_impl(&dword_21C2CD000, v66, v67, "Could not create the RTCReporting object", v68, 2u);
        v69 = v68;
        v60 = v74;
        MEMORY[0x22077AF8C](v69, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
      v61 = v77;
    }
    v70 = v71;
    sub_21C379C34();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v61, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
    swift_bridgeObjectRelease();
    if (!v70)
      swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(&v21[*(int *)(v78 + 32)], v15);
  }
}

uint64_t AnalyticsReporter.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FB08);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C379BF0();
  sub_21C3A8748();
  v8[15] = 0;
  sub_21C3A85E0();
  if (!v1)
  {
    v8[14] = 1;
    sub_21C3A85E0();
    v8[13] = 2;
    sub_21C3A85E0();
    type metadata accessor for AnalyticsReporter();
    v8[12] = 3;
    sub_21C3A77B8();
    sub_21C2D1198(&qword_25525FB10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_21C3A8610();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_21C379098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[16] = a1;
  v4[17] = a4;
  v4[18] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C379108()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = **(void ***)(v0 + 136);
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_21C3791A0;
  v2 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v3 = (_QWORD *)(v0 + 80);
  v3[1] = 0x40000000;
  v3[2] = sub_21C37943C;
  v3[3] = &block_descriptor_5;
  v3[4] = v2;
  objc_msgSend(v1, sel_startConfigurationWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_21C3791A0()
{
  return swift_task_switch();
}

uint64_t sub_21C3791EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  os_log_type_t v16;
  uint8_t *v17;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRelease();
  if (v1)
  {
    if (qword_25525AB00 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 160);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 144), (uint64_t)qword_255278FD8);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4);
    v7 = *(_QWORD *)(v0 + 160);
    if (v6 != 1)
    {
      v8 = sub_21C3A79BC();
      v9 = sub_21C3A81B4();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_21C2CD000, v8, v9, "RTC storebag found!", v10, 2u);
        MEMORY[0x22077AF8C](v10, -1, -1);
      }
      v11 = *(_QWORD *)(v0 + 160);
LABEL_15:

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
      v15 = 0;
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_25525AB00 != -1)
      swift_once();
    v12 = *(_QWORD *)(v0 + 152);
    v13 = __swift_project_value_buffer(*(_QWORD *)(v0 + 144), (uint64_t)qword_255278FD8);
    sub_21C2D1D80(v13, v12);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4);
    v7 = *(_QWORD *)(v0 + 152);
    if (v14 != 1)
    {
      v8 = sub_21C3A79BC();
      v16 = sub_21C3A81C0();
      if (os_log_type_enabled(v8, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_21C2CD000, v8, v16, "RTC storebag was NOT found!", v17, 2u);
        MEMORY[0x22077AF8C](v17, -1, -1);
      }
      v11 = *(_QWORD *)(v0 + 152);
      goto LABEL_15;
    }
  }
  sub_21C2D775C(v7, (uint64_t *)&unk_25525B0E0);
  v15 = 1;
LABEL_16:
  **(_BYTE **)(v0 + 128) = v15;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C37943C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 32);
  if (a2)
    v3 = sub_21C3A8070();
  else
    v3 = 0;
  v5 = v3;
  sub_21C37A494((uint64_t)&v5, *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40));
  return swift_continuation_resume();
}

uint64_t sub_21C3794A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AnalyticsReporter.init(from:)(a1, a2);
}

uint64_t sub_21C3794B4(_QWORD *a1)
{
  return AnalyticsReporter.encode(to:)(a1);
}

uint64_t sub_21C3794C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_21C3A78E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FBE8);
    v10 = sub_21C3A83D0();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_21C2D1198(&qword_25525FBF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
      v14 = sub_21C3A7E54();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v5, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_21C2D1198(&qword_25525FBF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v20 = sub_21C3A7EA8();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

id _s15ProximityReader16AnalyticsManagerV15sendSingleEvent11serviceName7messageySS_SDySSypGtF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  unsigned int v18;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  id v36[19];

  v36[17] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FAE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21C3AA490;
  if (!*MEMORY[0x24BE7CB20])
  {
    __break(1u);
LABEL_16:
    __break(1u);
  }
  *(_QWORD *)(inited + 32) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 40) = v10;
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0x6F705F74705F7078;
  *(_QWORD *)(inited + 56) = 0xE900000000000073;
  if (!*MEMORY[0x24BE7CB30])
    goto LABEL_16;
  *(_QWORD *)(inited + 80) = sub_21C3A7ED8();
  *(_QWORD *)(inited + 88) = v12;
  *(_QWORD *)(inited + 120) = v11;
  *(_QWORD *)(inited + 96) = a1;
  *(_QWORD *)(inited + 104) = a2;
  swift_bridgeObjectRetain();
  v13 = sub_21C2F5FE8(inited);
  v14 = (void *)objc_opt_self();
  if (qword_25525AD30 != -1)
    swift_once();
  sub_21C376864(qword_25525FAD8);
  v15 = (void *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  sub_21C376864(v13);
  swift_bridgeObjectRelease();
  v16 = (void *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  sub_21C376864(a3);
  v17 = (void *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  v36[0] = 0;
  v18 = objc_msgSend(v14, sel_sendOneMessageWithSessionInfo_userInfo_category_type_payload_error_, v15, v16, 1, 100, v17, v36);

  if (v18)
    return v36[0];
  v34 = v36[0];
  v20 = v36[0];
  v21 = (void *)sub_21C3A75FC();

  swift_willThrow();
  if (qword_25525AB00 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v6, (uint64_t)qword_255278FD8);
  sub_21C2D1D80(v22, (uint64_t)v8);
  v23 = sub_21C3A79D4();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v8, 1, v23) == 1)
  {

    return (id)sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v25 = v21;
    v26 = v21;
    v27 = sub_21C3A79BC();
    v28 = sub_21C3A81C0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = (void *)swift_slowAlloc();
      v36[0] = v30;
      *(_DWORD *)v29 = 136315138;
      v34 = v29 + 4;
      v35 = (uint64_t)v21;
      v31 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
      v32 = sub_21C3A7F14();
      v35 = sub_21C350398(v32, v33, (uint64_t *)v36);
      sub_21C3A82F8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21C2CD000, v27, v28, "Error sending analytics: [%s]", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v30, -1, -1);
      MEMORY[0x22077AF8C](v29, -1, -1);

    }
    else
    {

    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v23);
  }
}

unint64_t sub_21C379BF0()
{
  unint64_t result;

  result = qword_25525FAF0;
  if (!qword_25525FAF0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4FEC, &type metadata for AnalyticsReporter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FAF0);
  }
  return result;
}

unint64_t sub_21C379C34()
{
  unint64_t result;

  result = qword_25525FB00;
  if (!qword_25525FB00)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for AnalyticsError, &type metadata for AnalyticsError);
    atomic_store(result, (unint64_t *)&qword_25525FB00);
  }
  return result;
}

unint64_t sub_21C379C7C()
{
  unint64_t result;

  result = qword_25525FB18;
  if (!qword_25525FB18)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for AnalyticsError, &type metadata for AnalyticsError);
    atomic_store(result, (unint64_t *)&qword_25525FB18);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnalyticsError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C379D00 + 4 * byte_21C3B4D85[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C379D20 + 4 * byte_21C3B4D8A[v4]))();
}

_BYTE *sub_21C379D00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C379D20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C379D28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C379D30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C379D38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C379D40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsError()
{
  return &type metadata for AnalyticsError;
}

char *initializeBufferWithCopyOfBuffer for AnalyticsReporter(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v6;
    v7 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v7;
    v8 = a2[6];
    v9 = *(int *)(a3 + 32);
    v10 = (uint64_t)a2 + v9;
    v11 = &a1[v9];
    *((_QWORD *)a1 + 5) = a2[5];
    *((_QWORD *)a1 + 6) = v8;
    v12 = sub_21C3A77B8();
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v5;
}

uint64_t destroy for AnalyticsReporter(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 32);
  v5 = sub_21C3A77B8();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for AnalyticsReporter(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;

  v5 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  v7 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v7;
  v8 = *(int *)(a3 + 32);
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  a1[6] = *(_QWORD *)(a2 + 48);
  v11 = sub_21C3A77B8();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for AnalyticsReporter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 32);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_21C3A77B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for AnalyticsReporter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21C3A77B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for AnalyticsReporter(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_21C3A77B8();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsReporter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C37A128(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21C3A77B8();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AnalyticsReporter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21C37A1B0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21C3A77B8();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21C37A224()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C3A77B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnalyticsReporter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21C37A2F4 + 4 * byte_21C3B4D94[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21C37A328 + 4 * byte_21C3B4D8F[v4]))();
}

uint64_t sub_21C37A328(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C37A330(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C37A338);
  return result;
}

uint64_t sub_21C37A344(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C37A34CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21C37A350(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C37A358(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsReporter.CodingKeys()
{
  return &type metadata for AnalyticsReporter.CodingKeys;
}

unint64_t sub_21C37A378()
{
  unint64_t result;

  result = qword_25525FBC0;
  if (!qword_25525FBC0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4FC4, &type metadata for AnalyticsReporter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FBC0);
  }
  return result;
}

unint64_t sub_21C37A3C0()
{
  unint64_t result;

  result = qword_25525FBC8;
  if (!qword_25525FBC8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4EFC, &type metadata for AnalyticsReporter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FBC8);
  }
  return result;
}

unint64_t sub_21C37A408()
{
  unint64_t result;

  result = qword_25525FBD0;
  if (!qword_25525FBD0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B4F24, &type metadata for AnalyticsReporter.CodingKeys);
    atomic_store(result, &qword_25525FBD0);
  }
  return result;
}

uint64_t sub_21C37A44C()
{
  unint64_t v0;

  v0 = sub_21C3A8508();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_21C37A494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FBE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MobileDocumentReaderSession.requestDocument<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37A544()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[8];
  v2 = __swift_project_value_buffer(v0[7], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[8];
  if (v5 == 1)
  {
    sub_21C2D1DC8(v0[8]);
  }
  else
  {
    sub_21C365870(v0[6], 0xD000000000000013, 0x800000021C3BEEF0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AA98 != -1)
    swift_once();
  v7 = v0[6];
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_21C364160;
  return sub_21C3255F4(v0[2], v0[3], v8, v9, v0[4], v0[5]);
}

uint64_t MobileDocumentReaderSession.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MobileDocumentReaderSession.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MobileDocumentReaderSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for MobileDocumentReaderSession()
{
  return swift_lookUpClassMethod();
}

uint64_t static MobileDocumentReader.isSupported.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C32D000();
  if (qword_25525AAD0 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v6, (uint64_t)v4);
  v7 = sub_21C3A79D4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_21C2D1DC8((uint64_t)v4);
  }
  else
  {
    v9 = sub_21C3A79BC();
    v10 = sub_21C3A81B4();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v16 = v1;
      v17 = v12;
      *(_DWORD *)v11 = 136315394;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525FCA8);
      v13 = sub_21C3A7F14();
      v16 = sub_21C350398(v13, v14, &v17);
      sub_21C3A82F8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 1024;
      LODWORD(v16) = v5 & 1;
      sub_21C3A82F8();
      _os_log_impl(&dword_21C2CD000, v9, v10, "%s - isSupported result: %{BOOL}d", (uint8_t *)v11, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v12, -1, -1);
      MEMORY[0x22077AF8C](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  return v5 & 1;
}

uint64_t MobileDocumentReader.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = swift_allocObject();
  if (qword_25525AAD0 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v4, (uint64_t)v2);
  v5 = sub_21C3A79D4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) == 1)
  {
    sub_21C2D1DC8((uint64_t)v2);
  }
  else
  {
    v7 = swift_retain();
    sub_21C365870(v7, 0x292874696E69, 0xE600000000000000, 0, 0xE000000000000000);
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
  }
  return v3;
}

uint64_t MobileDocumentReader.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v5, (uint64_t)v4);
  v6 = sub_21C3A79D4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_21C2D1DC8((uint64_t)v4);
  }
  else
  {
    v8 = swift_retain();
    sub_21C365870(v8, 0x292874696E69, 0xE600000000000000, 0, 0xE000000000000000);
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return v1;
}

uint64_t MobileDocumentReader.configuration.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37ABE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[5];
  v2 = __swift_project_value_buffer(v0[4], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[5];
  if (v5 == 1)
  {
    sub_21C2D1DC8(v0[5]);
  }
  else
  {
    sub_21C365870(v0[3], 0x72756769666E6F63, 0xED00006E6F697461, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AA98 != -1)
    swift_once();
  v0[6] = qword_255278EF8;
  return swift_task_switch();
}

uint64_t sub_21C37AD08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 56) = sub_21C323818();
  *(_QWORD *)(v0 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_21C37AD7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v1 + 32) = sub_21C323D00;
  *(_QWORD *)(v1 + 40) = 0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_21C37AE24;
  return sub_21C3A8664();
}

uint64_t sub_21C37AE24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C37AE98()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C37AEE0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C37AF20()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MobileDocumentReader.prepare(using:)(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v2 + 32) = swift_task_alloc();
  *(_OWORD *)(v2 + 40) = *a1;
  return swift_task_switch();
}

uint64_t sub_21C37AFD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[4];
  v2 = __swift_project_value_buffer(v0[3], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[4];
  if (v5 == 1)
  {
    sub_21C2D1DC8(v0[4]);
  }
  else
  {
    sub_21C365870(v0[2], 0x2865726170657270, 0xEF293A676E697375, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AA98 != -1)
    swift_once();
  if (v0[6])
    v7 = v0[5];
  else
    v7 = 0;
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_21C37B124;
  return sub_21C324758(v7, v0[6]);
}

uint64_t sub_21C37B124(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t MobileDocumentReader.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MobileDocumentReader.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21C37B1A4(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525C8A8, (uint64_t)&unk_24E037218, (uint64_t)&unk_25525FE10);
}

uint64_t sub_21C37B1C0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525C8D0, (uint64_t)&unk_24E037290, (uint64_t)&unk_25525FE20);
}

uint64_t sub_21C37B1DC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525C7F0, (uint64_t)&unk_24E0371A0, (uint64_t)&unk_25525FDF8);
}

uint64_t sub_21C37B1F8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525D7C8, (uint64_t)&unk_24E0370B0, (uint64_t)&unk_25525FDD8);
}

uint64_t sub_21C37B214(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525D7C0, (uint64_t)&unk_24E037038, (uint64_t)&unk_25525FDC8);
}

uint64_t sub_21C37B230(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525D7B8, (uint64_t)&unk_24E036FC0, (uint64_t)&unk_25525FDB8);
}

uint64_t sub_21C37B24C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525D7B0, (uint64_t)&unk_24E036F48, (uint64_t)&unk_25525FDA8);
}

uint64_t sub_21C37B268(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525D7A8, (uint64_t)&unk_24E036ED0, (uint64_t)&unk_25525FD98);
}

uint64_t sub_21C37B284(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525D7A0, (uint64_t)&unk_24E036E58, (uint64_t)&unk_25525FD88);
}

uint64_t sub_21C37B2A0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525D798, (uint64_t)&unk_24E036DE0, (uint64_t)&unk_25525FD78);
}

uint64_t sub_21C37B2BC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21C37B2D8(a1, a2, a3, a4, a5, &qword_25525C7F0, (uint64_t)&unk_24E036D68, (uint64_t)&unk_25525FD60);
}

uint64_t sub_21C37B2D8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  id v24;
  id v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v28 = a4;
  v29 = a8;
  v27[1] = a7;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v20 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0;
  *((_QWORD *)v22 + 4) = a2;
  *((_QWORD *)v22 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v22[v20], v15, v12);
  v23 = &v22[v21];
  *(_QWORD *)v23 = v28;
  *((_QWORD *)v23 + 1) = a5;
  v24 = a2;
  v25 = a3;
  swift_retain();
  sub_21C2DDA54((uint64_t)v18, v29, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_21C37B454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8A8);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37B4EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37ECAC;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_108;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE00);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37B7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8D0);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37B884()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37EEB0;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_118;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE00);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37BB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37BC1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37E328;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_98;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE00);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37BF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7D0);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37BFB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37EAE8;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_88;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FD68);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37C2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7C8);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37C34C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37EA00;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_78;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FD68);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37C64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7C0);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37C6E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37E918;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_68_0;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FD68);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37C9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7B8);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37CA7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37E830;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_58;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FD68);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37CD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7B0);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37CE14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37E748;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_48_0;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FD68);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37D114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7A8);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37D1AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37E660;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_38;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FD68);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37D4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7A0);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37D544()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37E578;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_28;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FD68);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37D844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D798);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37D8DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37E428;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_18;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FD68);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37DBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[18] = a4;
  v8[23] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[24] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v8[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 + 64);
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C37DC74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void (*v14)(uint64_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v5 = (void *)v0[19];
  v6 = (void *)v0[18];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[20], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v9 = v6;
  v9[1] = v5;
  v0[6] = sub_21C37E328;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_21C33AA34;
  v0[5] = &block_descriptor_6;
  v10 = _Block_copy(v0 + 2);
  v11 = v6;
  v12 = v5;
  swift_release();
  v13 = objc_msgSend(v11, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  sub_21C2D77EC((uint64_t)(v0 + 8), (uint64_t)(v0 + 12));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FD68);
  if (swift_dynamicCast() && v0[16])
  {
    v14 = (void (*)(uint64_t *, uint64_t))v0[21];
    v15 = v0[20];
    v27 = v0[16];
    v14(&v27, v15);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = v0[24];
    v17 = __swift_project_value_buffer(v0[23], (uint64_t)qword_255278F30);
    sub_21C2D1D80(v17, v16);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
    {
      sub_21C2D1DC8(v0[24]);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "Service not available to create a session", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    v24 = (void *)v0[19];
    v0[17] = v24;
    v25 = v24;
    sub_21C3A80DC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C37DF74(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  _QWORD v25[2];
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v28 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAC8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)qword_255278F30);
  sub_21C2D1D80(v11, (uint64_t)v10);
  v12 = sub_21C3A79D4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_21C2D1DC8((uint64_t)v10);
  }
  else
  {
    v14 = a1;
    v15 = a1;
    v16 = sub_21C3A79BC();
    v17 = sub_21C3A81C0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v27 = a2;
      v19 = (uint8_t *)v18;
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v25[1] = v19 + 4;
      v20 = a1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v29 = v21;
      sub_21C3A82F8();
      v22 = v26;
      *v26 = v21;

      _os_log_impl(&dword_21C2CD000, v16, v17, "Error using service: [ %@ ]", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v22, -1, -1);
      MEMORY[0x22077AF8C](v19, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  v29 = (uint64_t)a4;
  v23 = a4;
  __swift_instantiateConcreteTypeFromMangledName(v28);
  return sub_21C3A80DC();
}

uint64_t sub_21C37E1E4(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B2D8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), &qword_25525D7D0, (uint64_t)&unk_24E037128, (uint64_t)&unk_25525FDE8);
}

uint64_t type metadata accessor for MobileDocumentReader()
{
  return objc_opt_self();
}

uint64_t method lookup function for MobileDocumentReader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MobileDocumentReader.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_21C37E24C()
{
  return objectdestroyTm_2(&qword_25525C7F0);
}

uint64_t sub_21C37E258(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37DBDC(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37E31C()
{
  return objectdestroy_7Tm(&qword_25525C7F0);
}

uint64_t sub_21C37E328(void *a1)
{
  return sub_21C37E434(a1, &qword_25525C7F0);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_21C37E34C()
{
  return objectdestroyTm_2(&qword_25525D798);
}

uint64_t sub_21C37E358(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525D798) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37D844(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37E41C()
{
  return objectdestroy_7Tm(&qword_25525D798);
}

uint64_t sub_21C37E428(void *a1)
{
  return sub_21C37E434(a1, &qword_25525D798);
}

uint64_t sub_21C37E434(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_21C37DF74(a1, v2 + v6, *(_QWORD *)v7, *(void **)(v7 + 8), a2);
}

uint64_t sub_21C37E49C()
{
  return objectdestroyTm_2(&qword_25525D7A0);
}

uint64_t sub_21C37E4A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525D7A0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37D4AC(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37E56C()
{
  return objectdestroy_7Tm(&qword_25525D7A0);
}

uint64_t sub_21C37E578(void *a1)
{
  return sub_21C37E434(a1, &qword_25525D7A0);
}

uint64_t sub_21C37E584()
{
  return objectdestroyTm_2(&qword_25525D7A8);
}

uint64_t sub_21C37E590(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525D7A8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37D114(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37E654()
{
  return objectdestroy_7Tm(&qword_25525D7A8);
}

uint64_t sub_21C37E660(void *a1)
{
  return sub_21C37E434(a1, &qword_25525D7A8);
}

uint64_t sub_21C37E66C()
{
  return objectdestroyTm_2(&qword_25525D7B0);
}

uint64_t sub_21C37E678(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525D7B0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37CD7C(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37E73C()
{
  return objectdestroy_7Tm(&qword_25525D7B0);
}

uint64_t sub_21C37E748(void *a1)
{
  return sub_21C37E434(a1, &qword_25525D7B0);
}

uint64_t sub_21C37E754()
{
  return objectdestroyTm_2(&qword_25525D7B8);
}

uint64_t sub_21C37E760(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525D7B8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37C9E4(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37E824()
{
  return objectdestroy_7Tm(&qword_25525D7B8);
}

uint64_t sub_21C37E830(void *a1)
{
  return sub_21C37E434(a1, &qword_25525D7B8);
}

uint64_t sub_21C37E83C()
{
  return objectdestroyTm_2(&qword_25525D7C0);
}

uint64_t sub_21C37E848(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525D7C0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37C64C(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37E90C()
{
  return objectdestroy_7Tm(&qword_25525D7C0);
}

uint64_t sub_21C37E918(void *a1)
{
  return sub_21C37E434(a1, &qword_25525D7C0);
}

uint64_t sub_21C37E924()
{
  return objectdestroyTm_2(&qword_25525D7C8);
}

uint64_t sub_21C37E930(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525D7C8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37C2B4(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37E9F4()
{
  return objectdestroy_7Tm(&qword_25525D7C8);
}

uint64_t sub_21C37EA00(void *a1)
{
  return sub_21C37E434(a1, &qword_25525D7C8);
}

uint64_t sub_21C37EA0C()
{
  return objectdestroyTm_2(&qword_25525D7D0);
}

uint64_t sub_21C37EA18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525D7D0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2D8DB8;
  return sub_21C37BF1C(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37EADC()
{
  return objectdestroy_7Tm(&qword_25525D7D0);
}

uint64_t sub_21C37EAE8(void *a1)
{
  return sub_21C37E434(a1, &qword_25525D7D0);
}

uint64_t sub_21C37EAF4()
{
  return objectdestroyTm_2(&qword_25525C7F0);
}

uint64_t sub_21C37EB00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37BB84(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37EBC4()
{
  return objectdestroy_7Tm(&qword_25525C7F0);
}

uint64_t sub_21C37EBD0()
{
  return objectdestroyTm_2(&qword_25525C8A8);
}

uint64_t sub_21C37EBDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C8A8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37B454(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37ECA0()
{
  return objectdestroy_7Tm(&qword_25525C8A8);
}

uint64_t sub_21C37ECAC(void *a1)
{
  return sub_21C37E434(a1, &qword_25525C8A8);
}

uint64_t sub_21C37ECB8()
{
  return objectdestroyTm_2(&qword_25525C8D0);
}

uint64_t objectdestroyTm_2(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C37ED64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C8D0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_21C2DFEDC;
  return sub_21C37B7EC(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_21C37EE28()
{
  return objectdestroy_7Tm(&qword_25525C8D0);
}

uint64_t objectdestroy_7Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id *v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  v6 = (id *)(v1 + v5);

  return swift_deallocObject();
}

uint64_t sub_21C37EEB0(void *a1)
{
  return sub_21C37E434(a1, &qword_25525C8D0);
}

uint64_t static JwtHelper.redactSignature(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_21C30E1A4();
  v2 = sub_21C3A8310();
  if (*(_QWORD *)(v2 + 16) < 3uLL)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  result = sub_21C3A83DC();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = *(_QWORD *)(v2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    result = sub_21C3A7F8C();
    if (*(_QWORD *)(v2 + 16) >= 2uLL)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_21C3A7F8C();
      swift_bridgeObjectRelease();
      sub_21C3A7F8C();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static JwtHelper.generateToken<A, B>(header:payload:privateKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v58 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21C35E3A0();
  if (v13 >> 60 != 15)
  {
    v14 = v12;
    v15 = v13;
    v53 = a3;
    v55 = v9;
    v63 = sub_21C3A7734();
    v64 = v16;
    v56 = a7;
    v61 = 43;
    v62 = 0xE100000000000000;
    v59 = 45;
    v60 = 0xE100000000000000;
    sub_21C30E1A4();
    v17 = sub_21C3A831C();
    v19 = v18;
    swift_bridgeObjectRelease();
    v63 = v17;
    v64 = v19;
    v61 = 47;
    v62 = 0xE100000000000000;
    v59 = 95;
    v60 = 0xE100000000000000;
    v20 = sub_21C3A831C();
    v22 = v21;
    swift_bridgeObjectRelease();
    v63 = v20;
    v64 = v22;
    v61 = 61;
    v62 = 0xE100000000000000;
    v59 = 0;
    v60 = 0xE000000000000000;
    v54 = sub_21C3A831C();
    v57 = v23;
    swift_bridgeObjectRelease();
    sub_21C2D2B34(v14, v15);
    v24 = sub_21C35E3A0();
    if (v25 >> 60 != 15)
    {
      v26 = v24;
      v27 = v25;
      v63 = sub_21C3A7734();
      v64 = v28;
      v61 = 43;
      v62 = 0xE100000000000000;
      v59 = 45;
      v60 = 0xE100000000000000;
      v29 = sub_21C3A831C();
      v31 = v30;
      swift_bridgeObjectRelease();
      v63 = v29;
      v64 = v31;
      v61 = 47;
      v62 = 0xE100000000000000;
      v59 = 95;
      v60 = 0xE100000000000000;
      v32 = sub_21C3A831C();
      v34 = v33;
      swift_bridgeObjectRelease();
      v63 = v32;
      v64 = v34;
      v61 = 61;
      v62 = 0xE100000000000000;
      v59 = 0;
      v60 = 0xE000000000000000;
      v35 = sub_21C3A831C();
      swift_bridgeObjectRelease();
      sub_21C2D2B34(v26, v27);
      v63 = v54;
      v64 = v57;
      swift_bridgeObjectRetain();
      sub_21C3A7F8C();
      sub_21C3A7F8C();
      v36 = sub_21C35F41C(v53);
      v38 = v37;
      swift_bridgeObjectRelease();
      if (v38 >> 60 != 15)
      {
        v63 = sub_21C3A7734();
        v64 = v46;
        v61 = 43;
        v62 = 0xE100000000000000;
        v59 = 45;
        v60 = 0xE100000000000000;
        v47 = sub_21C3A831C();
        v49 = v48;
        swift_bridgeObjectRelease();
        v63 = v47;
        v64 = v49;
        v61 = 47;
        v62 = 0xE100000000000000;
        v59 = 95;
        v60 = 0xE100000000000000;
        v50 = sub_21C3A831C();
        v58 = v35;
        v52 = v51;
        swift_bridgeObjectRelease();
        v63 = v50;
        v64 = v52;
        v61 = 61;
        v62 = 0xE100000000000000;
        v59 = 0;
        v60 = 0xE000000000000000;
        sub_21C3A831C();
        swift_bridgeObjectRelease();
        sub_21C2D2B34(v36, v38);
        v63 = v54;
        v64 = v57;
        sub_21C3A7F8C();
        sub_21C3A7F8C();
        swift_bridgeObjectRelease();
        sub_21C3A7F8C();
        sub_21C3A7F8C();
        swift_bridgeObjectRelease();
        return v63;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v9 = v55;
  }
  if (qword_25525AAE8 != -1)
    swift_once();
  v39 = __swift_project_value_buffer(v9, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v39, (uint64_t)v11, (uint64_t *)&unk_25525B0E0);
  v40 = sub_21C3A79D4();
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v11, 1, v40) == 1)
  {
    sub_21C2D775C((uint64_t)v11, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v42 = sub_21C3A79BC();
    v43 = sub_21C3A81C0();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_21C2CD000, v42, v43, "Could not generate JWT token", v44, 2u);
      MEMORY[0x22077AF8C](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v40);
  }
  return 0;
}

uint64_t static JwtHelper.header(_:)(uint64_t a1, uint64_t a2)
{
  return sub_21C3852A0(a1, a2, 0);
}

uint64_t static JwtHelper.payload(_:)(uint64_t a1, uint64_t a2)
{
  return sub_21C3852A0(a1, a2, 1);
}

uint64_t static JwtHelper.compareStringClaim(token1:token2:claim:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v10 = sub_21C37F7AC(0, a1, a2, a5, a6);
  if (v11)
  {
    v12 = v10;
    v13 = v11;
    v14 = sub_21C37F7AC(0, a3, a4, a5, a6);
    if (v15)
    {
      if (v12 == v14 && v13 == v15)
        v16 = 1;
      else
        v16 = sub_21C3A864C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_21C37F7AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  sub_21C3852A0(a2, a3, ~a1 & 1);
  if (!v7)
    return 0;
  sub_21C30E1A4();
  v8 = sub_21C3A831C();
  v10 = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v19 = v8;
  *((_QWORD *)&v19 + 1) = v10;
  v23 = 95;
  v24 = 0xE100000000000000;
  v21 = 47;
  v22 = 0xE100000000000000;
  sub_21C3A831C();
  swift_bridgeObjectRelease();
  while ((sub_21C3A7F5C() & 3) != 0)
  {
    *(_QWORD *)&v19 = 61;
    *((_QWORD *)&v19 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v23 = sub_21C3A8004();
    v24 = v11;
    sub_21C3A7F80();
    swift_bridgeObjectRelease();
  }
  v12 = sub_21C3A76F8();
  v14 = v13;
  sub_21C2D1E80(v12, v13);
  swift_bridgeObjectRelease();
  result = 0;
  if (v14 >> 60 != 15)
  {
    sub_21C2D2B34(v12, v14);
    v16 = sub_21C35EBD0(1);
    sub_21C2D2B34(v12, v14);
    if (*(_QWORD *)(v16 + 16))
    {
      swift_bridgeObjectRetain();
      v17 = sub_21C2DC178(a4, a5);
      if ((v18 & 1) != 0)
      {
        sub_21C2D77EC(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v19);
      }
      else
      {
        v19 = 0u;
        v20 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525B110);
    if (swift_dynamicCast())
      return v23;
    else
      return 0;
  }
  return result;
}

uint64_t sub_21C37FA58(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  unint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  sub_21C3852A0(a2, a3, ~a1 & 1);
  if (!v7)
    return 0;
  sub_21C30E1A4();
  v8 = sub_21C3A831C();
  v10 = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v19 = v8;
  *((_QWORD *)&v19 + 1) = v10;
  v23 = 95;
  v24 = 0xE100000000000000;
  v21 = 47;
  v22 = 0xE100000000000000;
  sub_21C3A831C();
  swift_bridgeObjectRelease();
  while ((sub_21C3A7F5C() & 3) != 0)
  {
    *(_QWORD *)&v19 = 61;
    *((_QWORD *)&v19 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v23 = sub_21C3A8004();
    v24 = v11;
    sub_21C3A7F80();
    swift_bridgeObjectRelease();
  }
  v12 = sub_21C3A76F8();
  v14 = v13;
  sub_21C2D1E80(v12, v13);
  swift_bridgeObjectRelease();
  if (v14 >> 60 == 15)
    return 0;
  sub_21C2D2B34(v12, v14);
  v16 = sub_21C35EBD0(1);
  sub_21C2D2B34(v12, v14);
  if (*(_QWORD *)(v16 + 16))
  {
    swift_bridgeObjectRetain();
    v17 = sub_21C2DC178(a4, a5);
    if ((v18 & 1) != 0)
    {
      sub_21C2D77EC(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v19);
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B110);
  if (swift_dynamicCast())
    return v23;
  else
    return 0;
}

uint64_t static JwtHelper.claim<A>(fromHeader:_:claim:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;

  sub_21C3852A0(a2, a3, (a1 & 1) == 0);
  if (!v10)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 56))(a7, 1, 1, a6);
  sub_21C30E1A4();
  v11 = sub_21C3A831C();
  v13 = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v24 = v11;
  *((_QWORD *)&v24 + 1) = v13;
  v28 = 95;
  v29 = 0xE100000000000000;
  v26 = 47;
  v27 = 0xE100000000000000;
  sub_21C3A831C();
  swift_bridgeObjectRelease();
  while ((sub_21C3A7F5C() & 3) != 0)
  {
    *(_QWORD *)&v24 = 61;
    *((_QWORD *)&v24 + 1) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v28 = sub_21C3A8004();
    v29 = v14;
    sub_21C3A7F80();
    swift_bridgeObjectRelease();
  }
  v15 = sub_21C3A76F8();
  v17 = v16;
  sub_21C2D1E80(v15, v16);
  swift_bridgeObjectRelease();
  if (v17 >> 60 == 15)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 56))(a7, 1, 1, a6);
  sub_21C2D2B34(v15, v17);
  v19 = sub_21C35EBD0(1);
  sub_21C2D2B34(v15, v17);
  if (*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRetain();
    v20 = sub_21C2DC178(a4, a5);
    if ((v21 & 1) != 0)
    {
      sub_21C2D77EC(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v24);
    }
    else
    {
      v24 = 0u;
      v25 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B110);
  v22 = swift_dynamicCast() ^ 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 56))(a7, v22, 1, a6);
}

uint64_t sub_21C37FFC4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _BYTE v4[32];

  sub_21C2D77EC(a1, (uint64_t)v4);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    sub_21C2D77EC(a2, (uint64_t)v4);
    return (swift_dynamicCast() & 1) != 0;
  }
  return result;
}

uint64_t sub_21C380068(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[32];

  sub_21C2D77EC(a1, (uint64_t)v5);
  if (!swift_dynamicCast())
    goto LABEL_5;
  sub_21C2D77EC(a2, (uint64_t)v5);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v3 = 0;
    return v3 & 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = 1;
  return v3 & 1;
}

uint64_t static JwtHelper.compareClaim<A>(_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[32];

  v29 = a5;
  v30 = a3;
  v7 = sub_21C3A82EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - v12;
  v14 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v27 - v19;
  sub_21C2D77EC(a2, (uint64_t)v31);
  v21 = swift_dynamicCast();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if ((v21 & 1) == 0)
  {
    v22(v13, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_6:
    v24 = 0;
    return v24 & 1;
  }
  v28 = v7;
  v22(v13, 0, 1, a4);
  v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v23(v20, v13, a4);
  sub_21C2D77EC(v30, (uint64_t)v31);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v22(v10, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, a4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v28);
    goto LABEL_6;
  }
  v22(v10, 0, 1, a4);
  v23(v17, v10, a4);
  v24 = sub_21C3A7EA8();
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v17, a4);
  v25(v20, a4);
  return v24 & 1;
}

uint64_t sub_21C3803A0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(_QWORD *))
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[32];
  uint64_t v16;

  sub_21C2D77EC(a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v10 = v16;
    sub_21C2D77EC(a2, (uint64_t)v15);
    swift_bridgeObjectRetain();
    if ((swift_dynamicCast() & 1) != 0
      && (v14 = v13,
          v11 = *(_QWORD *)(v10 + 16),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 = *(_QWORD *)(v13 + 16),
          swift_bridgeObjectRelease(),
          v11 == v12))
    {
      sub_21C382808(&v16, a4, a5);
      swift_bridgeObjectRelease();
      sub_21C382808(&v14, a4, a5);
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t static JwtHelper.compareArrayClaim<A>(_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  sub_21C2D77EC(a1, (uint64_t)v11);
  v5 = sub_21C3A80C4();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v6 = v12;
    sub_21C2D77EC(a2, (uint64_t)v11);
    swift_bridgeObjectRetain();
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v7 = MEMORY[0x22077A29C](v6, a3);
      swift_bridgeObjectRelease();
      v8 = MEMORY[0x22077A29C](v10, a3);
      swift_bridgeObjectRelease();
      if (v7 == v8)
      {
        MEMORY[0x22077AECC](MEMORY[0x24BEE12B8], v5);
        MEMORY[0x22077AECC](MEMORY[0x24BEE12D8], v5);
        sub_21C3A7E90();
        swift_bridgeObjectRelease();
        sub_21C3A7E90();
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t static JwtHelper.compareClaims(token1:token2:claims:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t DynamicType;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v60 - v14;
  v16 = sub_21C3852A0(a1, a2, 1);
  if (!v17)
    return 0;
  v60 = v15;
  v61 = v10;
  v62 = v12;
  *(_QWORD *)&v68 = v16;
  *((_QWORD *)&v68 + 1) = v17;
  *(_QWORD *)&v66 = 45;
  *((_QWORD *)&v66 + 1) = 0xE100000000000000;
  *(_QWORD *)&v64 = 43;
  *((_QWORD *)&v64 + 1) = 0xE100000000000000;
  sub_21C30E1A4();
  v18 = sub_21C3A831C();
  v20 = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v68 = v18;
  *((_QWORD *)&v68 + 1) = v20;
  *(_QWORD *)&v66 = 95;
  *((_QWORD *)&v66 + 1) = 0xE100000000000000;
  *(_QWORD *)&v64 = 47;
  *((_QWORD *)&v64 + 1) = 0xE100000000000000;
  v21 = sub_21C3A831C();
  v23 = v22;
  swift_bridgeObjectRelease();
  for (; (sub_21C3A7F5C() & 3) != 0; v21 = v66)
  {
    *(_QWORD *)&v68 = 61;
    *((_QWORD *)&v68 + 1) = 0xE100000000000000;
    *(_QWORD *)&v66 = v21;
    *((_QWORD *)&v66 + 1) = v23;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v66 = sub_21C3A8004();
    *((_QWORD *)&v66 + 1) = v24;
    sub_21C3A7F80();
    swift_bridgeObjectRelease();
    v23 = *((_QWORD *)&v66 + 1);
  }
  v25 = sub_21C3A76F8();
  v27 = v26;
  sub_21C2D1E80(v25, v26);
  swift_bridgeObjectRelease();
  if (v27 >> 60 == 15)
    return 0;
  sub_21C2D2B34(v25, v27);
  v28 = sub_21C35EBD0(1);
  sub_21C2D2B34(v25, v27);
  *(_QWORD *)&v66 = MEMORY[0x24BEE4B00];
  v29 = *(_QWORD *)(a5 + 16);
  if (v29)
  {
    swift_bridgeObjectRetain();
    v30 = (uint64_t *)(a5 + 40);
    v31 = v29;
    do
    {
      v32 = *v30;
      *(_QWORD *)&v68 = *(v30 - 1);
      *((_QWORD *)&v68 + 1) = v32;
      swift_bridgeObjectRetain();
      sub_21C381B68((uint64_t)&v66, (uint64_t *)&v68, v28);
      v30 += 2;
      swift_bridgeObjectRelease();
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v66;
    v34 = static JwtHelper.claims(_:claimIdentifiers:)(a3, a4, a5);
    if (v34)
    {
      v35 = v34;
      swift_bridgeObjectRetain();
      v36 = (unint64_t *)(a5 + 40);
      while (1)
      {
        v38 = *(v36 - 1);
        v37 = *v36;
        if (!*(_QWORD *)(v33 + 16))
          break;
        swift_bridgeObjectRetain_n();
        v39 = sub_21C2DC178(v38, v37);
        if ((v40 & 1) != 0)
        {
          sub_21C2D77EC(*(_QWORD *)(v33 + 56) + 32 * v39, (uint64_t)&v66);
        }
        else
        {
          v66 = 0u;
          v67 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((_QWORD *)&v67 + 1))
          goto LABEL_29;
        sub_21C2D7828(&v66, &v68);
        if (!*(_QWORD *)(v35 + 16))
        {
          v64 = 0u;
          v65 = 0u;
LABEL_31:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
          swift_bridgeObjectRelease();
          sub_21C2D775C((uint64_t)&v64, &qword_25525B110);
          goto LABEL_33;
        }
        swift_bridgeObjectRetain();
        v41 = sub_21C2DC178(v38, v37);
        if ((v42 & 1) != 0)
        {
          sub_21C2D77EC(*(_QWORD *)(v35 + 56) + 32 * v41, (uint64_t)&v64);
        }
        else
        {
          v64 = 0u;
          v65 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((_QWORD *)&v65 + 1))
          goto LABEL_31;
        sub_21C2D7828(&v64, &v66);
        __swift_project_boxed_opaque_existential_1(&v68, v69);
        DynamicType = swift_getDynamicType();
        __swift_project_boxed_opaque_existential_1(&v66, *((uint64_t *)&v67 + 1));
        if (DynamicType != swift_getDynamicType())
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
        if ((sub_21C3854B4((uint64_t)&v68, (uint64_t)&v66) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_25525AAE8 != -1)
            swift_once();
          v53 = __swift_project_value_buffer(v61, (uint64_t)qword_255278F90);
          v45 = (uint64_t)v60;
          sub_21C2F50EC(v53, (uint64_t)v60, (uint64_t *)&unk_25525B0E0);
          v54 = sub_21C3A79D4();
          v55 = *(_QWORD *)(v54 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v45, 1, v54) == 1)
          {
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
            goto LABEL_37;
          }
          swift_bridgeObjectRetain();
          v56 = sub_21C3A79BC();
          v57 = sub_21C3A81D8();
          if (os_log_type_enabled(v56, v57))
          {
            v58 = (uint8_t *)swift_slowAlloc();
            v59 = swift_slowAlloc();
            *(_QWORD *)&v64 = v59;
            *(_DWORD *)v58 = 136315138;
            swift_bridgeObjectRetain();
            v63 = sub_21C350398(v38, v37, (uint64_t *)&v64);
            v45 = (uint64_t)v60;
            sub_21C3A82F8();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_21C2CD000, v56, v57, "The claim: [ %s ] does not match or could not be compared", v58, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x22077AF8C](v59, -1, -1);
            MEMORY[0x22077AF8C](v58, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
          (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v45, v54);
          return 0;
        }
        v36 += 2;
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
        if (!--v29)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
      }
      v66 = 0u;
      v67 = 0u;
      swift_bridgeObjectRetain();
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21C2D775C((uint64_t)&v66, &qword_25525B110);
LABEL_33:
      v45 = (uint64_t)v62;
      if (qword_25525AAE8 != -1)
        swift_once();
      v46 = __swift_project_value_buffer(v61, (uint64_t)qword_255278F90);
      sub_21C2F50EC(v46, v45, (uint64_t *)&unk_25525B0E0);
      v47 = sub_21C3A79D4();
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v45, 1, v47) == 1)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        sub_21C2D775C(v45, (uint64_t *)&unk_25525B0E0);
        return 0;
      }
      swift_bridgeObjectRetain();
      v49 = sub_21C3A79BC();
      v50 = sub_21C3A81C0();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        v52 = swift_slowAlloc();
        *(_QWORD *)&v68 = v52;
        *(_DWORD *)v51 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v66 = sub_21C350398(v38, v37, (uint64_t *)&v68);
        v45 = (uint64_t)v62;
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v49, v50, "The claim: [ %s ] could not be found or have different value types", v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v52, -1, -1);
        MEMORY[0x22077AF8C](v51, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v45, v47);
      return 0;
    }
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  if (!static JwtHelper.claims(_:claimIdentifiers:)(a3, a4, a5))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
LABEL_26:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t static JwtHelper.claims(_:claimIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  sub_21C3852A0(a1, a2, 1);
  if (!v4)
    return 0;
  sub_21C30E1A4();
  v5 = sub_21C3A831C();
  v7 = v6;
  swift_bridgeObjectRelease();
  v19 = v5;
  v20 = v7;
  v17 = 95;
  v18 = 0xE100000000000000;
  sub_21C3A831C();
  swift_bridgeObjectRelease();
  while ((sub_21C3A7F5C() & 3) != 0)
  {
    v19 = 61;
    v20 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v17 = sub_21C3A8004();
    v18 = v8;
    sub_21C3A7F80();
    swift_bridgeObjectRelease();
  }
  v9 = sub_21C3A76F8();
  v11 = v10;
  sub_21C2D1E80(v9, v10);
  swift_bridgeObjectRelease();
  result = 0;
  if (v11 >> 60 != 15)
  {
    sub_21C2D2B34(v9, v11);
    v13 = sub_21C35EBD0(1);
    sub_21C2D2B34(v9, v11);
    v17 = MEMORY[0x24BEE4B00];
    v14 = *(_QWORD *)(a3 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = (unint64_t *)(a3 + 40);
      do
      {
        v16 = *v15;
        v19 = *(v15 - 1);
        v20 = v16;
        swift_bridgeObjectRetain();
        sub_21C381B68((uint64_t)&v17, &v19, v13);
        v15 += 2;
        swift_bridgeObjectRelease();
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4B00];
    }
  }
  return result;
}

uint64_t static JwtHelper.compare(token1:token2:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_21C3A864C();
}

uint64_t static JwtHelper.createAttestToken()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  unsigned int v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  char v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t inited;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE28);
  MEMORY[0x24BDAC7A8](v0);
  v49 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_21C3A77E8();
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (MCGestaltIsInternalBuild())
  {
    v8 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
    v9 = (void *)sub_21C3A7EB4();
    v10 = objc_msgSend(v8, sel_initWithSuiteName_, v9);

    if (v10)
    {
      v11 = (void *)sub_21C3A7EB4();
      v12 = objc_msgSend(v10, sel_BOOLForKey_, v11);

      if (v12)
      {
        v13 = objc_msgSend((id)objc_opt_self(), sel_shared);
        *(_QWORD *)&v50 = 0;
        v14 = objc_msgSend(v13, sel_makeConfiguratorAndReturnError_, &v50);

        v15 = (void *)v50;
        if (v14
          && (*(_QWORD *)&v50 = 0,
              v16 = v15,
              v17 = objc_msgSend(v14, sel_statusAndReturnError_, &v50),
              v14,
              v15 = (void *)v50,
              v17))
        {
          v18 = sub_21C3A7E48();
          v19 = v15;

          if (*(_QWORD *)(v18 + 16)
            && (v20 = sub_21C2DC178(0x69746E6564496573, 0xEC00000072656966), (v21 & 1) != 0))
          {
            sub_21C2D77EC(*(_QWORD *)(v18 + 56) + 32 * v20, (uint64_t)&v50);
          }
          else
          {
            v50 = 0u;
            v51 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((_QWORD *)&v51 + 1))
          {
            swift_dynamicCast();
            goto LABEL_22;
          }
          v27 = &qword_25525B110;
          v28 = (char *)&v50;
        }
        else
        {
          v22 = v15;
          v23 = (void *)sub_21C3A75FC();

          swift_willThrow();
          if (qword_25525AAE8 != -1)
            swift_once();
          v24 = __swift_project_value_buffer(v5, (uint64_t)qword_255278F90);
          sub_21C2F50EC(v24, (uint64_t)v7, (uint64_t *)&unk_25525B0E0);
          v25 = sub_21C3A79D4();
          v26 = *(_QWORD *)(v25 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v25) != 1)
          {
            v29 = sub_21C3A79BC();
            v30 = sub_21C3A81D8();
            if (os_log_type_enabled(v29, v30))
            {
              v31 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v31 = 0;
              _os_log_impl(&dword_21C2CD000, v29, v30, "Could not get SEID", v31, 2u);
              MEMORY[0x22077AF8C](v31, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
            goto LABEL_22;
          }
          v27 = (uint64_t *)&unk_25525B0E0;
          v28 = v7;
        }
        sub_21C2D775C((uint64_t)v28, v27);
      }
LABEL_22:

    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525FAE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21C3B5040;
  v33 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 32) = 7371124;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = 5527370;
  *(_QWORD *)(inited + 56) = 0xE300000000000000;
  *(_QWORD *)(inited + 72) = v33;
  *(_QWORD *)(inited + 80) = 6580587;
  *(_QWORD *)(inited + 88) = 0xE300000000000000;
  *(_QWORD *)(inited + 96) = 0xD000000000000024;
  *(_QWORD *)(inited + 104) = 0x800000021C3BEF80;
  *(_QWORD *)(inited + 120) = v33;
  *(_QWORD *)(inited + 128) = 6777953;
  *(_QWORD *)(inited + 168) = v33;
  *(_QWORD *)(inited + 136) = 0xE300000000000000;
  *(_QWORD *)(inited + 144) = 0x3635325345;
  *(_QWORD *)(inited + 152) = 0xE500000000000000;
  v34 = sub_21C2F5FE8(inited);
  v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = xmmword_21C3ACA00;
  *(_QWORD *)(v35 + 32) = 7566185;
  *(_QWORD *)(v35 + 40) = 0xE300000000000000;
  *(_QWORD *)(v35 + 48) = 0x7461747365747461;
  *(_QWORD *)(v35 + 56) = 0xEB000000006E6F69;
  *(_QWORD *)(v35 + 72) = v33;
  *(_QWORD *)(v35 + 80) = 6583649;
  *(_QWORD *)(v35 + 88) = 0xE300000000000000;
  strcpy((char *)(v35 + 96), "authorization");
  *(_WORD *)(v35 + 110) = -4864;
  *(_QWORD *)(v35 + 120) = v33;
  *(_QWORD *)(v35 + 128) = 6911082;
  *(_QWORD *)(v35 + 136) = 0xE300000000000000;
  sub_21C3A77DC();
  sub_21C3A77C4();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v48);
  v36 = sub_21C3A7E6C();
  v38 = v37;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 144) = v36;
  *(_QWORD *)(v35 + 152) = v38;
  *(_QWORD *)(v35 + 168) = v33;
  *(_QWORD *)(v35 + 176) = 1684628851;
  *(_QWORD *)(v35 + 184) = 0xE400000000000000;
  v39 = sub_21C3A7E6C();
  v41 = v40;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 216) = v33;
  *(_QWORD *)(v35 + 192) = v39;
  *(_QWORD *)(v35 + 200) = v41;
  v42 = sub_21C2F5FE8(v35);
  v43 = sub_21C3A7E00();
  v44 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v49, 1, 1, v43);
  v45 = _s15ProximityReader9JwtHelperV9makeToken6header6claims6inject6expiry4signSSSDySSypG_AJSbSi9CryptoKit4P256O7SigningO10PrivateKeyVSgtFZ_0(v34, v42, 1, 900, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21C2D775C(v44, &qword_25525FE28);
  return v45;
}

uint64_t static JwtHelper.claims(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  sub_21C3852A0(a1, a2, 1);
  if (!v4)
    return 0;
  sub_21C30E1A4();
  v5 = sub_21C3A831C();
  v7 = v6;
  swift_bridgeObjectRelease();
  v19 = v5;
  v20 = v7;
  v17 = 95;
  v18 = 0xE100000000000000;
  sub_21C3A831C();
  swift_bridgeObjectRelease();
  while ((sub_21C3A7F5C() & 3) != 0)
  {
    v19 = 61;
    v20 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    v17 = sub_21C3A8004();
    v18 = v8;
    sub_21C3A7F80();
    swift_bridgeObjectRelease();
  }
  v9 = sub_21C3A76F8();
  v11 = v10;
  sub_21C2D1E80(v9, v10);
  swift_bridgeObjectRelease();
  result = 0;
  if (v11 >> 60 != 15)
  {
    sub_21C2D2B34(v9, v11);
    v13 = sub_21C35EBD0(1);
    sub_21C2D2B34(v9, v11);
    v17 = MEMORY[0x24BEE4B00];
    v14 = *(_QWORD *)(a3 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = (unint64_t *)(a3 + 40);
      do
      {
        v16 = *v15;
        v19 = *(v15 - 1);
        v20 = v16;
        swift_bridgeObjectRetain();
        sub_21C381B68((uint64_t)&v17, &v19, v13);
        v15 += 2;
        swift_bridgeObjectRelease();
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4B00];
    }
  }
  return result;
}

uint64_t sub_21C381B68(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)&v12 = *a2;
  *((_QWORD *)&v12 + 1) = v5;
  *(_QWORD *)&v10 = 46;
  *((_QWORD *)&v10 + 1) = 0xE100000000000000;
  sub_21C30E1A4();
  if ((sub_21C3A8328() & 1) != 0)
  {
    *(_QWORD *)&v12 = v4;
    *((_QWORD *)&v12 + 1) = v5;
    *(_QWORD *)&v10 = 46;
    *((_QWORD *)&v10 + 1) = 0xE100000000000000;
    v6 = sub_21C3A8310();
    sub_21C381D0C(v6 + 32, 0, (2 * *(_QWORD *)(v6 + 16)) | 1, a3, &v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
      sub_21C2D7828(&v10, &v12);
      sub_21C2D77EC((uint64_t)&v12, (uint64_t)&v10);
      swift_bridgeObjectRetain();
      sub_21C376630((uint64_t)&v10, v4, v5);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    }
    else
    {
      return sub_21C2D775C((uint64_t)&v10, &qword_25525B110);
    }
  }
  else
  {
    if (*(_QWORD *)(a3 + 16))
    {
      swift_bridgeObjectRetain();
      v8 = sub_21C2DC178(v4, v5);
      if ((v9 & 1) != 0)
      {
        sub_21C2D77EC(*(_QWORD *)(a3 + 56) + 32 * v8, (uint64_t)&v12);
      }
      else
      {
        v12 = 0u;
        v13 = 0u;
      }
    }
    else
    {
      v12 = 0u;
      v13 = 0u;
      swift_bridgeObjectRetain();
    }
    return sub_21C376630((uint64_t)&v12, v4, v5);
  }
}

void sub_21C381D0C(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, _OWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD v32[2];
  __int128 v33;
  __int128 v34;

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a3 >> 1;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
    goto LABEL_27;
  }
  if ((uint64_t)((a3 >> 1) - a2) >= 2)
  {
    if (v13 > a2)
    {
      if (*(_QWORD *)(a4 + 16))
      {
        v14 = (uint64_t *)(a1 + 16 * a2);
        v16 = *v14;
        v15 = v14[1];
        swift_bridgeObjectRetain();
        v17 = sub_21C2DC178(v16, v15);
        if ((v18 & 1) != 0)
        {
          sub_21C2D77EC(*(_QWORD *)(a4 + 56) + 32 * v17, (uint64_t)&v33);
          swift_bridgeObjectRelease();
          if (*((_QWORD *)&v34 + 1))
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_25525E368);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v19 = v32[1];
              v20 = swift_unknownObjectRetain();
              sub_21C381D0C(v20, a1, a2 + 1, a3, v19);
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
LABEL_17:
            if (qword_25525AAE8 == -1)
              goto LABEL_18;
            goto LABEL_28;
          }
        }
        else
        {
          v33 = 0u;
          v34 = 0u;
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        v33 = 0u;
        v34 = 0u;
      }
      sub_21C2D775C((uint64_t)&v33, &qword_25525B110);
      goto LABEL_17;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    swift_once();
LABEL_18:
    v26 = __swift_project_value_buffer(v10, (uint64_t)qword_255278F90);
    sub_21C2F50EC(v26, (uint64_t)v12, (uint64_t *)&unk_25525B0E0);
    v27 = sub_21C3A79D4();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v12, 1, v27) == 1)
    {
      sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v29 = sub_21C3A79BC();
      v30 = sub_21C3A81C0();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_21C2CD000, v29, v30, "Invalid key path", v31, 2u);
        MEMORY[0x22077AF8C](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v27);
    }
    goto LABEL_23;
  }
  if (v13 == a2)
    goto LABEL_23;
  if (v13 <= a2)
  {
    __break(1u);
    return;
  }
  if (!*(_QWORD *)(a4 + 16))
  {
LABEL_23:
    *a5 = 0u;
    a5[1] = 0u;
    return;
  }
  v21 = (uint64_t *)(a1 + 16 * a2);
  v23 = *v21;
  v22 = v21[1];
  swift_bridgeObjectRetain();
  v24 = sub_21C2DC178(v23, v22);
  if ((v25 & 1) != 0)
  {
    sub_21C2D77EC(*(_QWORD *)(a4 + 56) + 32 * v24, (uint64_t)a5);
  }
  else
  {
    *a5 = 0u;
    a5[1] = 0u;
  }
  swift_bridgeObjectRelease();
}

uint64_t static JwtHelper.isExpired(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  double v16;
  double v17;
  double v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint8_t *v39;
  uint8_t *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v39 - v8;
  v10 = sub_21C3A77B8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&v14 = COERCE_DOUBLE(sub_21C37FA58(0, a1, a2, 7370853, 0xE300000000000000));
  if ((v15 & 1) != 0)
  {
    if (qword_25525AAE8 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F90);
    sub_21C2F50EC(v21, (uint64_t)v6, (uint64_t *)&unk_25525B0E0);
    v22 = sub_21C3A79D4();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v6, 1, v22) == 1)
    {
      sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v27 = sub_21C3A79BC();
      v28 = sub_21C3A81C0();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_21C2CD000, v27, v28, "Token does not have 'exp' claim", v29, 2u);
        MEMORY[0x22077AF8C](v29, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v22);
    }
    return 2;
  }
  else
  {
    v16 = *(double *)&v14;
    sub_21C3A77A0();
    sub_21C3A7794();
    v18 = v17;
    v19 = *(void (**)(char *, uint64_t))(v11 + 8);
    v19(v13, v10);
    if (v18 >= v16)
    {
      if (qword_25525AAE8 != -1)
        swift_once();
      v24 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F90);
      sub_21C2F50EC(v24, (uint64_t)v9, (uint64_t *)&unk_25525B0E0);
      v25 = sub_21C3A79D4();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v25) == 1)
      {
        sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v30 = sub_21C3A79BC();
        v31 = sub_21C3A81C0();
        v32 = v31;
        if (os_log_type_enabled(v30, v31))
        {
          v42 = v32;
          v33 = (uint8_t *)swift_slowAlloc();
          v41 = swift_slowAlloc();
          v44 = v41;
          *(_DWORD *)v33 = 136315138;
          v39 = v33 + 4;
          v40 = v33;
          sub_21C3A7788();
          sub_21C386174();
          v34 = sub_21C3A8628();
          v36 = v35;
          v19(v13, v10);
          v43 = sub_21C350398(v34, v36, &v44);
          sub_21C3A82F8();
          swift_bridgeObjectRelease();
          v37 = v40;
          _os_log_impl(&dword_21C2CD000, v30, (os_log_type_t)v42, "Token is expired: [%s]", v40, 0xCu);
          v38 = v41;
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v38, -1, -1);
          MEMORY[0x22077AF8C](v37, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
      }
      return 1;
    }
    else
    {
      return 0;
    }
  }
}

uint64_t sub_21C382444()
{
  sub_21C3861BC();
  return sub_21C3A8754();
}

uint64_t sub_21C38246C()
{
  sub_21C3861BC();
  return sub_21C3A8760();
}

uint64_t JwtHelper.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE30);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C3861BC();
  sub_21C3A8748();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_21C382558(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE30);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C3861BC();
  sub_21C3A8748();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ProximityReader::JwtHeader __swiftcall JwtHeader.init(alg:typ:)(Swift::String alg, Swift::String typ)
{
  Swift::String *v2;
  ProximityReader::JwtHeader result;

  *v2 = alg;
  v2[1] = typ;
  result.typ = typ;
  result.alg = alg;
  return result;
}

uint64_t sub_21C382628()
{
  _BYTE *v0;

  if (*v0)
    return 7371124;
  else
    return 6777953;
}

uint64_t sub_21C38264C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C3864A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C382670()
{
  sub_21C386200();
  return sub_21C3A8754();
}

uint64_t sub_21C382698()
{
  sub_21C386200();
  return sub_21C3A8760();
}

uint64_t JwtHeader.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE40);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C386200();
  sub_21C3A8748();
  v12 = 0;
  sub_21C3A85E0();
  if (!v2)
  {
    v11 = 1;
    sub_21C3A85E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t sub_21C3827F4(_QWORD *a1)
{
  return JwtHeader.encode(to:)(a1);
}

uint64_t sub_21C382808(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_21C382884(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_21C3A861C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_21C384314(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_21C3843E0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_21C3850AC((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_21C3A80A0();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_21C3A864C();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_21C3A864C()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_21C384DBC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_21C384DBC((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_21C3843E0((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_21C3A864C() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_21C3A849C();
  __break(1u);
  return result;
}

uint64_t sub_21C382F6C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  uint64_t v26;
  double *v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_21C3A861C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(double *)(v81 + 8 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85)
            break;
          if (!v81)
            goto LABEL_140;
          *(_QWORD *)(v85 + 8) = *(_QWORD *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v97 = result;
  v98 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v96 = v8;
      if (v12 >= 2)
      {
        v86 = *v2;
        do
        {
          v87 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v86)
            goto LABEL_144;
          v88 = v11;
          v89 = v11 + 32;
          v90 = *(_QWORD *)&v11[16 * v87 + 32];
          v91 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_21C384678((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1)
            break;
          if (v91 < v90)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v88 = sub_21C3850AC((uint64_t)v88);
          if (v87 >= *((_QWORD *)v88 + 2))
            goto LABEL_133;
          v92 = &v88[16 * v87 + 32];
          *(_QWORD *)v92 = v90;
          *((_QWORD *)v92 + 1) = v91;
          v93 = *((_QWORD *)v88 + 2);
          if (v12 > v93)
            goto LABEL_134;
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          v11 = v88;
          *((_QWORD *)v88 + 2) = v93 - 1;
          v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_21C3A80A0();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v98;
    v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v94 = v2;
  v95 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v99 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(double *)(v10 + 8 * v9);
      v15 = *(double *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v18 = (uint64_t *)(v95 + 8 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_143;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v97)
      goto LABEL_46;
    v23 = v13 + v97;
    if (__OFADD__(v13, v97))
      goto LABEL_138;
    if (v23 >= v3)
      v23 = v3;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v24 = (double *)(v95 + 8 * v9);
      do
      {
        v25 = *(double *)(v10 + 8 * v9);
        v26 = v13;
        v27 = v24;
        do
        {
          v28 = *v27;
          if (v25 >= *v27)
            break;
          if (!v10)
            goto LABEL_141;
          *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      v9 = v23;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_21C384DBC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_21C384DBC((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v99;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        v33 = v12 - 1;
        if (v12 >= 4)
        {
          v38 = &v31[16 * v12];
          v39 = *((_QWORD *)v38 - 8);
          v40 = *((_QWORD *)v38 - 7);
          v44 = __OFSUB__(v40, v39);
          v41 = v40 - v39;
          if (v44)
            goto LABEL_119;
          v43 = *((_QWORD *)v38 - 6);
          v42 = *((_QWORD *)v38 - 5);
          v44 = __OFSUB__(v42, v43);
          v36 = v42 - v43;
          v37 = v44;
          if (v44)
            goto LABEL_120;
          v45 = v12 - 2;
          v46 = &v31[16 * v12 - 32];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v44 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v44)
            goto LABEL_122;
          v44 = __OFADD__(v36, v49);
          v50 = v36 + v49;
          if (v44)
            goto LABEL_125;
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v44 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v44)
              goto LABEL_129;
            v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v62 = *((_QWORD *)v11 + 4);
            v63 = *((_QWORD *)v11 + 5);
            v44 = __OFSUB__(v63, v62);
            v55 = v63 - v62;
            v56 = v44;
            goto LABEL_77;
          }
          v35 = *((_QWORD *)v11 + 4);
          v34 = *((_QWORD *)v11 + 5);
          v44 = __OFSUB__(v34, v35);
          v36 = v34 - v35;
          v37 = v44;
        }
        if ((v37 & 1) != 0)
          goto LABEL_121;
        v45 = v12 - 2;
        v51 = &v31[16 * v12 - 32];
        v53 = *(_QWORD *)v51;
        v52 = *((_QWORD *)v51 + 1);
        v54 = __OFSUB__(v52, v53);
        v55 = v52 - v53;
        v56 = v54;
        if (v54)
          goto LABEL_124;
        v57 = &v31[16 * v33];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v44 = __OFSUB__(v58, v59);
        v60 = v58 - v59;
        if (v44)
          goto LABEL_127;
        if (__OFADD__(v55, v60))
          goto LABEL_128;
        if (v55 + v60 >= v36)
        {
          v61 = v36 < v60;
LABEL_83:
          if (v61)
            v33 = v45;
          goto LABEL_85;
        }
LABEL_77:
        if ((v56 & 1) != 0)
          goto LABEL_123;
        v64 = &v31[16 * v33];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v44 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v44)
          goto LABEL_126;
        if (v67 < v55)
          goto LABEL_15;
LABEL_85:
        v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v73 = &v31[16 * v72];
        v74 = *(_QWORD *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        v77 = *((_QWORD *)v76 + 1);
        sub_21C384678((double *)(v10 + 8 * *(_QWORD *)v73), (double *)(v10 + 8 * *(_QWORD *)v76), v10 + 8 * v77, __dst);
        if (v1)
          goto LABEL_113;
        if (v77 < v74)
          goto LABEL_116;
        if (v33 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v73 = v74;
        *(_QWORD *)&v75[16 * v72 + 8] = v77;
        v78 = *((_QWORD *)v11 + 2);
        if (v33 >= v78)
          goto LABEL_118;
        v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        v31 = v75;
        *((_QWORD *)v11 + 2) = v78 - 1;
        v10 = v99;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v98;
    if (v9 >= v98)
    {
      v8 = v96;
      v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_21C3A849C();
  __break(1u);
  return result;
}

uint64_t sub_21C3835FC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  float v14;
  float v15;
  float v16;
  float v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  int v22;
  uint64_t v23;
  float *v24;
  float v25;
  uint64_t v26;
  float *v27;
  float v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  float v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  float *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_21C3A861C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(float *)(v81 + 4 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 4 * v84;
          if (v83 >= *(float *)v85)
            break;
          if (!v81)
            goto LABEL_140;
          *(_DWORD *)(v85 + 4) = *(_DWORD *)v85;
          *(float *)(v81 + 4 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v97 = result;
  v98 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (float *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v96 = v8;
      if (v12 >= 2)
      {
        v86 = *v2;
        do
        {
          v87 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v86)
            goto LABEL_144;
          v88 = v11;
          v89 = v11 + 32;
          v90 = *(_QWORD *)&v11[16 * v87 + 32];
          v91 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_21C3848E4((float *)(v86 + 4 * v90), (float *)(v86 + 4 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 4 * v91, __dst);
          if (v1)
            break;
          if (v91 < v90)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v88 = sub_21C3850AC((uint64_t)v88);
          if (v87 >= *((_QWORD *)v88 + 2))
            goto LABEL_133;
          v92 = &v88[16 * v87 + 32];
          *(_QWORD *)v92 = v90;
          *((_QWORD *)v92 + 1) = v91;
          v93 = *((_QWORD *)v88 + 2);
          if (v12 > v93)
            goto LABEL_134;
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          v11 = v88;
          *((_QWORD *)v88 + 2) = v93 - 1;
          v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_21C3A80A0();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v98;
    v96 = v7;
    __dst = (float *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v94 = v2;
  v95 = *v2 - 4;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v99 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(float *)(v10 + 4 * v9);
      v15 = *(float *)(v10 + 4 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(float *)(v10 + 4 * v9);
          if (v14 < v15 == v16 >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v18 = (int *)(v95 + 4 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (int *)(v10 + 4 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_143;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v97)
      goto LABEL_46;
    v23 = v13 + v97;
    if (__OFADD__(v13, v97))
      goto LABEL_138;
    if (v23 >= v3)
      v23 = v3;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v24 = (float *)(v95 + 4 * v9);
      do
      {
        v25 = *(float *)(v10 + 4 * v9);
        v26 = v13;
        v27 = v24;
        do
        {
          v28 = *v27;
          if (v25 >= *v27)
            break;
          if (!v10)
            goto LABEL_141;
          *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      v9 = v23;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_21C384DBC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_21C384DBC((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v99;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        v33 = v12 - 1;
        if (v12 >= 4)
        {
          v38 = &v31[16 * v12];
          v39 = *((_QWORD *)v38 - 8);
          v40 = *((_QWORD *)v38 - 7);
          v44 = __OFSUB__(v40, v39);
          v41 = v40 - v39;
          if (v44)
            goto LABEL_119;
          v43 = *((_QWORD *)v38 - 6);
          v42 = *((_QWORD *)v38 - 5);
          v44 = __OFSUB__(v42, v43);
          v36 = v42 - v43;
          v37 = v44;
          if (v44)
            goto LABEL_120;
          v45 = v12 - 2;
          v46 = &v31[16 * v12 - 32];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v44 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v44)
            goto LABEL_122;
          v44 = __OFADD__(v36, v49);
          v50 = v36 + v49;
          if (v44)
            goto LABEL_125;
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v44 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v44)
              goto LABEL_129;
            v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v62 = *((_QWORD *)v11 + 4);
            v63 = *((_QWORD *)v11 + 5);
            v44 = __OFSUB__(v63, v62);
            v55 = v63 - v62;
            v56 = v44;
            goto LABEL_77;
          }
          v35 = *((_QWORD *)v11 + 4);
          v34 = *((_QWORD *)v11 + 5);
          v44 = __OFSUB__(v34, v35);
          v36 = v34 - v35;
          v37 = v44;
        }
        if ((v37 & 1) != 0)
          goto LABEL_121;
        v45 = v12 - 2;
        v51 = &v31[16 * v12 - 32];
        v53 = *(_QWORD *)v51;
        v52 = *((_QWORD *)v51 + 1);
        v54 = __OFSUB__(v52, v53);
        v55 = v52 - v53;
        v56 = v54;
        if (v54)
          goto LABEL_124;
        v57 = &v31[16 * v33];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v44 = __OFSUB__(v58, v59);
        v60 = v58 - v59;
        if (v44)
          goto LABEL_127;
        if (__OFADD__(v55, v60))
          goto LABEL_128;
        if (v55 + v60 >= v36)
        {
          v61 = v36 < v60;
LABEL_83:
          if (v61)
            v33 = v45;
          goto LABEL_85;
        }
LABEL_77:
        if ((v56 & 1) != 0)
          goto LABEL_123;
        v64 = &v31[16 * v33];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v44 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v44)
          goto LABEL_126;
        if (v67 < v55)
          goto LABEL_15;
LABEL_85:
        v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v73 = &v31[16 * v72];
        v74 = *(_QWORD *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        v77 = *((_QWORD *)v76 + 1);
        sub_21C3848E4((float *)(v10 + 4 * *(_QWORD *)v73), (float *)(v10 + 4 * *(_QWORD *)v76), v10 + 4 * v77, __dst);
        if (v1)
          goto LABEL_113;
        if (v77 < v74)
          goto LABEL_116;
        if (v33 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v73 = v74;
        *(_QWORD *)&v75[16 * v72 + 8] = v77;
        v78 = *((_QWORD *)v11 + 2);
        if (v33 >= v78)
          goto LABEL_118;
        v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        v31 = v75;
        *((_QWORD *)v11 + 2) = v78 - 1;
        v10 = v99;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v98;
    if (v9 >= v98)
    {
      v8 = v96;
      v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_21C3A849C();
  __break(1u);
  return result;
}

uint64_t sub_21C383C8C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_21C3A861C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_21C384B50((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_21C3850AC((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_21C3A80A0();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_21C384DBC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_21C384DBC((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_21C384B50((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_21C3A849C();
  __break(1u);
  return result;
}

uint64_t sub_21C384314(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_21C3A864C(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21C3843E0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_21C3A864C() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_21C3A864C() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_21C384EB4((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C384678(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (double *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_21C384F5C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C3848E4(float *__src, float *a2, unint64_t a3, float *__dst)
{
  float *v4;
  float *v6;
  float *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float *v14;
  float *v15;
  float *v16;
  float *v17;
  float *v18;
  float *v19;
  float v20;
  uint64_t result;
  float *v22;
  float *v23;
  float *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 3;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 2;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 3;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 2;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 4 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        v17 = (float *)(a3 - 4);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 4 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_21C385004((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C384B50(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*((_QWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_21C384F5C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

char *sub_21C384DBC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525FE90);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_21C384EB4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_21C3A84E4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_21C384F5C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_21C3A84E4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_21C385004(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 3;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -4)
  {
    result = (char *)sub_21C3A84E4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
      return (char *)memmove(result, v3, 4 * v7);
  }
  return result;
}

char *sub_21C3850AC(uint64_t a1)
{
  return sub_21C384DBC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t _s15ProximityReader9JwtHelperV17generateSignature22base64UrlEncodedHeader0ghI7Payload10privateKeySSSgSS_SS9CryptoKit4P256O7SigningO07PrivateM0VtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRetain();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  v6 = sub_21C35F41C(a5);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v8 >> 60 == 15)
    return 0;
  sub_21C3A7734();
  sub_21C30E1A4();
  sub_21C3A831C();
  swift_bridgeObjectRelease();
  sub_21C3A831C();
  swift_bridgeObjectRelease();
  v9 = sub_21C3A831C();
  swift_bridgeObjectRelease();
  sub_21C2D2B34(v6, v8);
  return v9;
}

uint64_t sub_21C3852A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD v20[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[2] = a1;
  v20[3] = a2;
  v20[0] = 46;
  v20[1] = 0xE100000000000000;
  sub_21C30E1A4();
  result = sub_21C3A8310();
  if (*(_QWORD *)(result + 16) <= a3)
    goto LABEL_7;
  if ((a3 & 0x8000000000000000) == 0)
  {
    v10 = result + 16 * a3;
    v11 = *(_QWORD *)(v10 + 32);
    v12 = *(_QWORD *)(v10 + 40);
    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = v11 & 0xFFFFFFFFFFFFLL;
    if (v13)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    if (qword_25525AAE8 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F90);
    sub_21C2F50EC(v14, (uint64_t)v8, (uint64_t *)&unk_25525B0E0);
    v15 = sub_21C3A79D4();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
    {
      sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v17 = sub_21C3A79BC();
      v18 = sub_21C3A81D8();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_21C2CD000, v17, v18, "Error extracting JWT payload value", v19, 2u);
        MEMORY[0x22077AF8C](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_21C3854B4(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(_QWORD *);
  uint64_t v9;
  _BYTE v10[32];

  sub_21C2D77EC(a1, (uint64_t)v10);
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      sub_21C2D77EC(a1, (uint64_t)&v9);
      if (swift_dynamicCast())
      {
        sub_21C2D77EC(a2, (uint64_t)&v9);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v4 = 1;
          goto LABEL_23;
        }
      }
LABEL_22:
      v4 = 0;
      goto LABEL_23;
    }
    if (swift_dynamicCast())
    {
      v4 = sub_21C37FFC4(a1, a2);
      goto LABEL_23;
    }
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      v4 = sub_21C380068(a1, a2);
      goto LABEL_23;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE78);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      v5 = &qword_25525FE78;
      v6 = (uint64_t (*)(uint64_t))sub_21C322DD4;
      v7 = sub_21C383C8C;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE80);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        v5 = &qword_25525FE80;
        v6 = (uint64_t (*)(uint64_t))sub_21C322DC0;
        v7 = sub_21C3835FC;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE88);
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          v5 = &qword_25525FE88;
          v6 = (uint64_t (*)(uint64_t))sub_21C322DAC;
          v7 = sub_21C382F6C;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ECD0);
          if (!swift_dynamicCast())
            goto LABEL_22;
          swift_bridgeObjectRelease();
          v5 = (uint64_t *)&unk_25525ECD0;
          v6 = (uint64_t (*)(uint64_t))sub_21C322D98;
          v7 = sub_21C382884;
        }
      }
    }
    v4 = sub_21C3803A0(a1, a2, v5, v6, v7);
    goto LABEL_23;
  }
  sub_21C2D77EC(a1, (uint64_t)&v9);
  if (!swift_dynamicCast())
    goto LABEL_22;
  sub_21C2D77EC(a2, (uint64_t)&v9);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  v4 = 1;
LABEL_23:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v4 & 1;
}

uint64_t _s15ProximityReader9JwtHelperV9makeToken6header6claims6inject6expiry4signSSSDySSypG_AJSbSi9CryptoKit4P256O7SigningO10PrivateKeyVSgtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  char v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _OWORD v84[2];
  __int128 v85;
  uint64_t v86;
  uint64_t v87;

  v87 = *MEMORY[0x24BDAC8D0];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FE28);
  MEMORY[0x24BDAC7A8](v9);
  v78 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21C3A7E00();
  v79 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v81 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21C3A77B8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A77AC();
  sub_21C3A7794();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((a3 & 1) != 0)
  {
    v19 = MEMORY[0x24BEE1768];
    v86 = MEMORY[0x24BEE1768];
    *(_QWORD *)&v85 = (uint64_t)v18;
    sub_21C2D7828(&v85, v84);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v82 = a2;
    sub_21C2F814C(v84, 7627113, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
    v21 = v82;
    swift_bridgeObjectRelease();
    if (!__OFADD__((uint64_t)v18, a4))
    {
      v86 = v19;
      *(_QWORD *)&v85 = (uint64_t)v18 + a4;
      sub_21C2D7828(&v85, v84);
      v22 = swift_isUniquelyReferenced_nonNull_native();
      v82 = v21;
      sub_21C2F814C(v84, 7370853, 0xE300000000000000, v22);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
LABEL_25:
    __break(1u);
  }
  swift_bridgeObjectRetain();
LABEL_8:
  v75 = a5;
  v76 = v11;
  v23 = (void *)objc_opt_self();
  v24 = (void *)sub_21C3A7E30();
  *(_QWORD *)&v85 = 0;
  v25 = objc_msgSend(v23, sel_dataWithJSONObject_options_error_, v24, 0, &v85);

  v26 = (id)v85;
  if (v25)
  {
    v27 = sub_21C3A774C();
    v29 = v28;

    *(_QWORD *)&v85 = sub_21C3A7734();
    *((_QWORD *)&v85 + 1) = v30;
    *(_QWORD *)&v84[0] = 43;
    *((_QWORD *)&v84[0] + 1) = 0xE100000000000000;
    v82 = 45;
    v83 = 0xE100000000000000;
    sub_21C30E1A4();
    v74 = v23;
    v31 = sub_21C3A831C();
    v33 = v32;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v85 = v31;
    *((_QWORD *)&v85 + 1) = v33;
    *(_QWORD *)&v84[0] = 47;
    *((_QWORD *)&v84[0] + 1) = 0xE100000000000000;
    v82 = 95;
    v83 = 0xE100000000000000;
    v34 = sub_21C3A831C();
    v36 = v35;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v85 = v34;
    *((_QWORD *)&v85 + 1) = v36;
    *(_QWORD *)&v84[0] = 61;
    *((_QWORD *)&v84[0] + 1) = 0xE100000000000000;
    v82 = 0;
    v83 = 0xE000000000000000;
    v23 = v74;
    v80 = sub_21C3A831C();
    v77 = v37;
    swift_bridgeObjectRelease();
    sub_21C2D2B48(v27, v29);
  }
  else
  {
    v38 = v26;
    v39 = (void *)sub_21C3A75FC();

    swift_willThrow();
    v80 = 0;
    v77 = 0;
  }
  swift_bridgeObjectRetain();
  v40 = (void *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v85 = 0;
  v41 = objc_msgSend(v23, sel_dataWithJSONObject_options_error_, v40, 0, &v85);

  v42 = (id)v85;
  if (v41)
  {
    v43 = sub_21C3A774C();
    v45 = v44;

    *(_QWORD *)&v85 = sub_21C3A7734();
    *((_QWORD *)&v85 + 1) = v46;
    *(_QWORD *)&v84[0] = 43;
    *((_QWORD *)&v84[0] + 1) = 0xE100000000000000;
    v82 = 45;
    v83 = 0xE100000000000000;
    sub_21C30E1A4();
    v47 = sub_21C3A831C();
    v49 = v48;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v85 = v47;
    *((_QWORD *)&v85 + 1) = v49;
    *(_QWORD *)&v84[0] = 47;
    *((_QWORD *)&v84[0] + 1) = 0xE100000000000000;
    v82 = 95;
    v83 = 0xE100000000000000;
    v50 = sub_21C3A831C();
    v52 = v51;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v85 = v50;
    *((_QWORD *)&v85 + 1) = v52;
    *(_QWORD *)&v84[0] = 61;
    *((_QWORD *)&v84[0] + 1) = 0xE100000000000000;
    v82 = 0;
    v83 = 0xE000000000000000;
    v53 = sub_21C3A831C();
    v55 = v54;
    swift_bridgeObjectRelease();
    sub_21C2D2B48(v43, v45);
  }
  else
  {
    v56 = v42;
    v57 = (void *)sub_21C3A75FC();

    swift_willThrow();
    v53 = 0;
    v55 = 0;
  }
  v58 = v78;
  sub_21C2F50EC(v75, v78, &qword_25525FE28);
  v59 = v79;
  v60 = v76;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v58, 1, v76) == 1)
  {
    swift_bridgeObjectRelease();
    sub_21C2D775C(v58, &qword_25525FE28);
LABEL_21:
    *(_QWORD *)&v85 = 0;
    *((_QWORD *)&v85 + 1) = 0xE000000000000000;
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    sub_21C3A7F8C();
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    sub_21C3A7F8C();
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    return v85;
  }
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v81, v58, v60);
  v62 = v77;
  if (v77)
  {
    if (v55)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v85 = v80;
      *((_QWORD *)&v85 + 1) = v62;
      swift_bridgeObjectRetain();
      sub_21C3A7F8C();
      sub_21C3A7F8C();
      v63 = sub_21C35F41C(v81);
      v65 = v64;
      swift_bridgeObjectRelease();
      if (v65 >> 60 != 15)
      {
        *(_QWORD *)&v85 = sub_21C3A7734();
        *((_QWORD *)&v85 + 1) = v66;
        *(_QWORD *)&v84[0] = 43;
        *((_QWORD *)&v84[0] + 1) = 0xE100000000000000;
        v82 = 45;
        v83 = 0xE100000000000000;
        sub_21C30E1A4();
        v75 = v63;
        v67 = sub_21C3A831C();
        v78 = v53;
        v69 = v68;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v85 = v67;
        *((_QWORD *)&v85 + 1) = v69;
        *(_QWORD *)&v84[0] = 47;
        *((_QWORD *)&v84[0] + 1) = 0xE100000000000000;
        v82 = 95;
        v83 = 0xE100000000000000;
        v70 = sub_21C3A831C();
        v72 = v71;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v85 = v70;
        *((_QWORD *)&v85 + 1) = v72;
        *(_QWORD *)&v84[0] = 61;
        *((_QWORD *)&v84[0] + 1) = 0xE100000000000000;
        v82 = 0;
        v83 = 0xE000000000000000;
        sub_21C3A831C();
        v59 = v79;
        swift_bridgeObjectRelease();
        sub_21C2D2B34(v75, v65);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v81, v60);
      goto LABEL_21;
    }
  }
  else
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_21C386174()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525D4F0;
  if (!qword_25525D4F0)
  {
    v1 = sub_21C3A77B8();
    result = MEMORY[0x22077AECC](MEMORY[0x24BDCE988], v1);
    atomic_store(result, (unint64_t *)&qword_25525D4F0);
  }
  return result;
}

unint64_t sub_21C3861BC()
{
  unint64_t result;

  result = qword_25525FE38;
  if (!qword_25525FE38)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B529C, &type metadata for JwtHelper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FE38);
  }
  return result;
}

unint64_t sub_21C386200()
{
  unint64_t result;

  result = qword_25525FE48;
  if (!qword_25525FE48)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B524C, &type metadata for JwtHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FE48);
  }
  return result;
}

ValueMetadata *type metadata accessor for JwtHelper()
{
  return &type metadata for JwtHelper;
}

ValueMetadata *type metadata accessor for JwtHeader()
{
  return &type metadata for JwtHeader;
}

uint64_t storeEnumTagSinglePayload for JwtHeader.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C3862B0 + 4 * byte_21C3B50CD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C3862E4 + 4 * byte_21C3B50C8[v4]))();
}

uint64_t sub_21C3862E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3862EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C3862F4);
  return result;
}

uint64_t sub_21C386300(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C386308);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C38630C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C386314(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JwtHeader.CodingKeys()
{
  return &type metadata for JwtHeader.CodingKeys;
}

ValueMetadata *type metadata accessor for JwtHelper.CodingKeys()
{
  return &type metadata for JwtHelper.CodingKeys;
}

unint64_t sub_21C386344()
{
  unint64_t result;

  result = qword_25525FE50;
  if (!qword_25525FE50)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B5224, &type metadata for JwtHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FE50);
  }
  return result;
}

unint64_t sub_21C38638C()
{
  unint64_t result;

  result = qword_25525FE58;
  if (!qword_25525FE58)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B5194, &type metadata for JwtHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FE58);
  }
  return result;
}

unint64_t sub_21C3863D4()
{
  unint64_t result;

  result = qword_25525FE60;
  if (!qword_25525FE60)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B51BC, &type metadata for JwtHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FE60);
  }
  return result;
}

unint64_t sub_21C38641C()
{
  unint64_t result;

  result = qword_25525FE68;
  if (!qword_25525FE68)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B5144, &type metadata for JwtHelper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FE68);
  }
  return result;
}

unint64_t sub_21C386464()
{
  unint64_t result;

  result = qword_25525FE70;
  if (!qword_25525FE70)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B516C, &type metadata for JwtHelper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FE70);
  }
  return result;
}

uint64_t sub_21C3864A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6777953 && a2 == 0xE300000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7371124 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

BOOL static MobileDriversLicenseViewResponseInternal.ValidationOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDriversLicenseViewResponseInternal.ValidationOutcome.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t sub_21C3865B4()
{
  sub_21C386A64();
  return sub_21C3A8754();
}

uint64_t sub_21C3865DC()
{
  sub_21C386A64();
  return sub_21C3A8760();
}

uint64_t sub_21C386604()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465766F72707061;
  if (*v0 != 1)
    v1 = 0x64657463656A6572;
  if (*v0)
    return v1;
  else
    return 0x657373696D736964;
}

uint64_t sub_21C386664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C387FBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C386688()
{
  sub_21C3869DC();
  return sub_21C3A8754();
}

uint64_t sub_21C3866B0()
{
  sub_21C3869DC();
  return sub_21C3A8760();
}

uint64_t sub_21C3866D8()
{
  sub_21C386AA8();
  return sub_21C3A8754();
}

uint64_t sub_21C386700()
{
  sub_21C386AA8();
  return sub_21C3A8760();
}

uint64_t sub_21C386728()
{
  sub_21C386A20();
  return sub_21C3A8754();
}

uint64_t sub_21C386750()
{
  sub_21C386A20();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseViewResponseInternal.ValidationOutcome.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FEA0);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FEA8);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FEB0);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FEB8);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C3869DC();
  sub_21C3A8748();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_21C386A64();
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_21C386A20();
      v16 = v21;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_21C386AA8();
    sub_21C3A85A4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_21C3869DC()
{
  unint64_t result;

  result = qword_25525FEC0;
  if (!qword_25525FEC0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B5884, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FEC0);
  }
  return result;
}

unint64_t sub_21C386A20()
{
  unint64_t result;

  result = qword_25525FEC8;
  if (!qword_25525FEC8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B5834, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FEC8);
  }
  return result;
}

unint64_t sub_21C386A64()
{
  unint64_t result;

  result = qword_25525FED0;
  if (!qword_25525FED0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B57E4, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.ApprovedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FED0);
  }
  return result;
}

unint64_t sub_21C386AA8()
{
  unint64_t result;

  result = qword_25525FED8;
  if (!qword_25525FED8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B5794, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.DismissedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FED8);
  }
  return result;
}

uint64_t MobileDriversLicenseViewResponseInternal.ValidationOutcome.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseViewResponseInternal.ValidationOutcome.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FEE0);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FEE8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FEF0);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FEF8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C3869DC();
  v13 = v41;
  sub_21C3A873C();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_21C3A8598();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_21C3A840C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
    *v25 = &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome;
    sub_21C3A8520();
    sub_21C3A8400();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_21C386A64();
      v20 = v9;
      sub_21C3A8514();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_21C386A20();
      v28 = v15;
      sub_21C3A8514();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_21C386AA8();
    sub_21C3A8514();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_21C386F74@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return MobileDriversLicenseViewResponseInternal.ValidationOutcome.init(from:)(a1, a2);
}

uint64_t sub_21C386F88(_QWORD *a1)
{
  return MobileDriversLicenseViewResponseInternal.ValidationOutcome.encode(to:)(a1);
}

void MobileDriversLicenseViewResponseInternal.internalValidationOutcome.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1
                 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome);
}

id MobileDriversLicenseViewResponseInternal.__allocating_init(validationOutcome:)(_BYTE *a1)
{
  objc_class *v1;
  _BYTE *v3;
  objc_super v5;

  v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MobileDriversLicenseViewResponseInternal.init(validationOutcome:)(_BYTE *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome] = *a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MobileDriversLicenseViewResponseInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MobileDriversLicenseViewResponseInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t sub_21C3870C8()
{
  return 0xD000000000000019;
}

uint64_t sub_21C3870E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C38811C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_21C38710C()
{
  sub_21C387294();
  return sub_21C3A8754();
}

uint64_t sub_21C387134()
{
  sub_21C387294();
  return sub_21C3A8760();
}

id MobileDriversLicenseViewResponseInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MobileDriversLicenseViewResponseInternal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF10);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C387294();
  sub_21C3A8748();
  v9[15] = *(_BYTE *)(v2
                    + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome);
  sub_21C3872D8();
  sub_21C3A8610();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_21C387294()
{
  unint64_t result;

  result = qword_25525FF18;
  if (!qword_25525FF18)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B5744, &type metadata for MobileDriversLicenseViewResponseInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FF18);
  }
  return result;
}

unint64_t sub_21C3872D8()
{
  unint64_t result;

  result = qword_25525FF20;
  if (!qword_25525FF20)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseViewResponseInternal.ValidationOutcome, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome);
    atomic_store(result, (unint64_t *)&qword_25525FF20);
  }
  return result;
}

void *MobileDriversLicenseViewResponseInternal.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseViewResponseInternal.init(from:)(a1);
}

void *MobileDriversLicenseViewResponseInternal.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  objc_class *ObjectType;
  objc_super v15;
  char v16;

  v3 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF28);
  v5 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C387294();
  v9 = v3;
  sub_21C3A873C();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v10 = v5;
    sub_21C387504();
    v11 = v13;
    sub_21C3A858C();
    *((_BYTE *)v9 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome) = v16;

    v15.receiver = v9;
    v15.super_class = ObjectType;
    v8 = objc_msgSendSuper2(&v15, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v8;
}

unint64_t sub_21C387504()
{
  unint64_t result;

  result = qword_25525FF30;
  if (!qword_25525FF30)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseViewResponseInternal.ValidationOutcome, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome);
    atomic_store(result, (unint64_t *)&qword_25525FF30);
  }
  return result;
}

void *sub_21C387548@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  void *result;

  v6 = objc_allocWithZone(v2);
  result = MobileDriversLicenseViewResponseInternal.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_21C387594(_QWORD *a1)
{
  return MobileDriversLicenseViewResponseInternal.encode(to:)(a1);
}

uint64_t static MobileDriversLicenseViewResponseInternal.supportsSecureCoding.getter()
{
  return 1;
}

id MobileDriversLicenseViewResponseInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MobileDriversLicenseViewResponseInternal.init(coder:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  void *v12;
  char v13;
  _BYTE *v14;
  id v15;
  id v16;
  objc_super v18;
  void *v19;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_21C2D32C0();
  v4 = v1;
  v5 = sub_21C3A825C();
  if (!v5)
  {

LABEL_10:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v6 = (void *)v5;
  v7 = sub_21C3A774C();
  v9 = v8;

  v10 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  sub_21C2D1E94(v7, v9);
  v11 = sub_21C2D3524();
  sub_21C2D2B48(v7, v9);
  if (!v11)
  {

LABEL_9:
    sub_21C2D2B48(v7, v9);
    goto LABEL_10;
  }
  sub_21C387A00(&qword_25525FF40, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseViewResponseInternal);
  sub_21C3A81F0();
  v12 = v19;

  if (!v19)
  {
    objc_msgSend(v11, sel_finishDecoding);

    goto LABEL_9;
  }
  v13 = *((_BYTE *)v19
        + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome);
  v14 = objc_allocWithZone(ObjectType);
  v14[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome] = v13;
  v18.receiver = v14;
  v18.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v18, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v16 = v15;
  objc_msgSend(v11, sel_finishDecoding);

  sub_21C2D2B48(v7, v9);
  return v16;
}

Swift::Void __swiftcall MobileDriversLicenseViewResponseInternal.encode(with:)(NSCoder with)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  swift_getObjectType();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_21C387A00(&qword_25525FF48, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseViewResponseInternal);
  sub_21C3A81E4();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_21C3A7EB4();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for MobileDriversLicenseViewResponseInternal()
{
  return objc_opt_self();
}

uint64_t sub_21C387A00(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MobileDriversLicenseViewResponseInternal();
    result = MEMORY[0x22077AECC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21C387A40()
{
  unint64_t result;

  result = qword_25525FF50;
  if (!qword_25525FF50)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseViewResponseInternal.ValidationOutcome, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome);
    atomic_store(result, (unint64_t *)&qword_25525FF50);
  }
  return result;
}

uint64_t method lookup function for MobileDriversLicenseViewResponseInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MobileDriversLicenseViewResponseInternal.__allocating_init(validationOutcome:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MobileDriversLicenseViewResponseInternal.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.ValidationOutcome()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome;
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseViewResponseInternal.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C387B04 + 4 * byte_21C3B52F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C387B24 + 4 * byte_21C3B52F5[v4]))();
}

_BYTE *sub_21C387B04(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C387B24(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C387B2C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C387B34(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C387B3C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C387B44(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.CodingKeys()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.CodingKeys;
}

uint64_t _s15ProximityReader40MobileDriversLicenseViewResponseInternalC17ValidationOutcomeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C387BAC + 4 * byte_21C3B52FF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C387BE0 + 4 * byte_21C3B52FA[v4]))();
}

uint64_t sub_21C387BE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C387BE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C387BF0);
  return result;
}

uint64_t sub_21C387BFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C387C04);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C387C08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C387C10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.ValidationOutcome.CodingKeys()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.ValidationOutcome.DismissedCodingKeys()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.DismissedCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.ValidationOutcome.ApprovedCodingKeys()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.ApprovedCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewResponseInternal.ValidationOutcome.RejectedCodingKeys()
{
  return &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.RejectedCodingKeys;
}

unint64_t sub_21C387C60()
{
  unint64_t result;

  result = qword_25525FF80;
  if (!qword_25525FF80)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B5664, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FF80);
  }
  return result;
}

unint64_t sub_21C387CA8()
{
  unint64_t result;

  result = qword_25525FF88;
  if (!qword_25525FF88)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B571C, &type metadata for MobileDriversLicenseViewResponseInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FF88);
  }
  return result;
}

unint64_t sub_21C387CF0()
{
  unint64_t result;

  result = qword_25525FF90;
  if (!qword_25525FF90)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B568C, &type metadata for MobileDriversLicenseViewResponseInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FF90);
  }
  return result;
}

unint64_t sub_21C387D38()
{
  unint64_t result;

  result = qword_25525FF98;
  if (!qword_25525FF98)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B56B4, &type metadata for MobileDriversLicenseViewResponseInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FF98);
  }
  return result;
}

unint64_t sub_21C387D80()
{
  unint64_t result;

  result = qword_25525FFA0;
  if (!qword_25525FFA0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B5584, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.DismissedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FFA0);
  }
  return result;
}

unint64_t sub_21C387DC8()
{
  unint64_t result;

  result = qword_25525FFA8;
  if (!qword_25525FFA8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B55AC, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.DismissedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FFA8);
  }
  return result;
}

unint64_t sub_21C387E10()
{
  unint64_t result;

  result = qword_25525FFB0;
  if (!qword_25525FFB0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B5534, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.ApprovedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FFB0);
  }
  return result;
}

unint64_t sub_21C387E58()
{
  unint64_t result;

  result = qword_25525FFB8;
  if (!qword_25525FFB8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B555C, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.ApprovedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FFB8);
  }
  return result;
}

unint64_t sub_21C387EA0()
{
  unint64_t result;

  result = qword_25525FFC0;
  if (!qword_25525FFC0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B54E4, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FFC0);
  }
  return result;
}

unint64_t sub_21C387EE8()
{
  unint64_t result;

  result = qword_25525FFC8;
  if (!qword_25525FFC8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B550C, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FFC8);
  }
  return result;
}

unint64_t sub_21C387F30()
{
  unint64_t result;

  result = qword_25525FFD0;
  if (!qword_25525FFD0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B55D4, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FFD0);
  }
  return result;
}

unint64_t sub_21C387F78()
{
  unint64_t result;

  result = qword_25525FFD8;
  if (!qword_25525FFD8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B55FC, &type metadata for MobileDriversLicenseViewResponseInternal.ValidationOutcome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525FFD8);
  }
  return result;
}

uint64_t sub_21C387FBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657373696D736964 && a2 == 0xE900000000000064;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766F72707061 && a2 == 0xE800000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657463656A6572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21C38811C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000019 && a2 == 0x800000021C3BF070)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t static TransactionTypeInternal.internalize(_:)(unsigned __int8 *a1)
{
  return *a1;
}

BOOL TransactionTypeInternal.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t TransactionTypeInternal.description.getter(uint64_t a1)
{
  uint64_t result;

  if (!a1)
    return 0x6573616863727570;
  if (a1 == 1)
    return 0x646E75666572;
  result = sub_21C3A8670();
  __break(1u);
  return result;
}

unint64_t sub_21C388238()
{
  unint64_t result;

  result = qword_25525FFE0;
  if (!qword_25525FFE0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for TransactionTypeInternal, &type metadata for TransactionTypeInternal);
    atomic_store(result, (unint64_t *)&qword_25525FFE0);
  }
  return result;
}

uint64_t sub_21C38827C()
{
  _QWORD *v0;
  uint64_t result;

  if (!*v0)
    return 0x6573616863727570;
  if (*v0 == 1)
    return 0x646E75666572;
  result = sub_21C3A8670();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for TransactionTypeInternal()
{
  return &type metadata for TransactionTypeInternal;
}

uint64_t IdentityConfigurationInternal.readerIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader29IdentityConfigurationInternal_readerIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id IdentityConfigurationInternal.__allocating_init(readerIdentifier:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC15ProximityReader29IdentityConfigurationInternal_readerIdentifier];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id IdentityConfigurationInternal.init(readerIdentifier:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[OBJC_IVAR____TtC15ProximityReader29IdentityConfigurationInternal_readerIdentifier];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id IdentityConfigurationInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void IdentityConfigurationInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id IdentityConfigurationInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static IdentityConfigurationInternal.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_25525FFF0;
}

uint64_t static IdentityConfigurationInternal.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_25525FFF0 = a1;
  return result;
}

uint64_t (*static IdentityConfigurationInternal.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall IdentityConfigurationInternal.encode(with:)(NSCoder with)
{
  void *v2;
  id v3;

  v2 = (void *)sub_21C3A7EB4();
  v3 = (id)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v2, v3);

}

id IdentityConfigurationInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t IdentityConfigurationInternal.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  v2 = v1;
  swift_getObjectType();
  sub_21C2D1C1C();
  v4 = v2;
  v5 = sub_21C3A825C();
  if (v5)
  {
    v6 = (void *)v5;
    v8 = 0;
    sub_21C3A7ECC();

  }
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t type metadata accessor for IdentityConfigurationInternal()
{
  return objc_opt_self();
}

uint64_t method lookup function for IdentityConfigurationInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IdentityConfigurationInternal.__allocating_init(readerIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void static MobileDriversLicenseDisplayRequest.Options.ValidationMode.check.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

BOOL static MobileDriversLicenseDisplayRequest.Options.ValidationMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void static MobileDriversLicenseDisplayRequest.Options.ValidationMode.checkMultiple.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static MobileDriversLicenseDisplayRequest.Options.ValidationMode.confirm.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void MobileDriversLicenseDisplayRequest.Options.ValidationMode.internalValidationMode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t MobileDriversLicenseDisplayRequest.Options.ValidationMode.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileDriversLicenseDisplayRequest.Options.ValidationMode.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C38897C()
{
  unint64_t result;

  result = qword_255260030;
  if (!qword_255260030)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDisplayRequest.Options.ValidationMode, &type metadata for MobileDriversLicenseDisplayRequest.Options.ValidationMode);
    atomic_store(result, (unint64_t *)&qword_255260030);
  }
  return result;
}

uint64_t _s14ValidationModeVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C388A0C + 4 * byte_21C3B5A15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C388A40 + 4 * byte_21C3B5A10[v4]))();
}

uint64_t sub_21C388A40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C388A48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C388A50);
  return result;
}

uint64_t sub_21C388A5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C388A64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C388A68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C388A70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest.Options.ValidationMode()
{
  return &type metadata for MobileDriversLicenseDisplayRequest.Options.ValidationMode;
}

unint64_t static ErrorCode.ProdConfigOnCert.getter()
{
  return 0xD000000000000036;
}

unint64_t static ErrorCode.CertConfigOnProd.getter()
{
  return 0xD000000000000048;
}

unint64_t static ErrorCode.PartnerConfigChanged.getter()
{
  return 0xD000000000000059;
}

unint64_t static ErrorCode.PartnerTokenExpClaimMissing.getter()
{
  return 0xD000000000000024;
}

unint64_t static ErrorCode.SAFNotAvailable.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t static ErrorCode.Authorization.ExpiredPSPToken.getter()
{
  return 0x363530342D535A41;
}

uint64_t static ErrorCode.Authorization.DeviceStatusInvalid.getter()
{
  return 0x303031342D535A41;
}

uint64_t static ErrorCode.Authorization.MerchantStatusInvalid.getter()
{
  return 0x303032342D535A41;
}

uint64_t static ErrorCode.Authorization.MerchantStatusBlocked.getter()
{
  return 0x313032342D535A41;
}

uint64_t static ErrorCode.Authorization.MerchantNotRegistered.getter()
{
  return 0x323032342D535A41;
}

uint64_t static ErrorCode.Authorization.MerchantRestricted.getter()
{
  return 0x333032342D535A41;
}

uint64_t static ErrorCode.Authorization.AuthConfigEnvMismatch.getter()
{
  return 0x333033342D535A41;
}

unint64_t sub_21C388BC0()
{
  unint64_t result;

  result = sub_21C2F6360((uint64_t)&unk_24E02E4F8);
  qword_255260038 = result;
  return result;
}

uint64_t static ErrorCode.Authorization.TokenErrorsMapping.getter()
{
  return sub_21C388D64(&qword_25525AD38);
}

unint64_t static ErrorCode.MerchantManager.AlreadyRegistered.getter()
{
  return 0xD000000000000012;
}

uint64_t static ErrorCode.MerchantManager.ExpiredPSPToken.getter()
{
  return 0x343630342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.InvalidGSToken.getter()
{
  return 0x303035342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.GSTokenFailed.getter()
{
  return 0x313035342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantStatusAlreadyExists.getter()
{
  return 0x333530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantStatusInvalid.getter()
{
  return 0x343530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantStatusWrongOrg.getter()
{
  return 0x353530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantStatusDeleted.getter()
{
  return 0x363530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantBlocked.getter()
{
  return 0x383530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantBlockedRelink.getter()
{
  return 0x373030342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.MerchantNotFound.getter()
{
  return 0x393530342D474D4DLL;
}

uint64_t static ErrorCode.MerchantManager.LinkConfigEnvMismatch.getter()
{
  return 0x333033342D474D4DLL;
}

unint64_t sub_21C388D24()
{
  unint64_t result;

  result = sub_21C2F6360((uint64_t)&unk_24E02E6B8);
  qword_255260040 = result;
  return result;
}

uint64_t static ErrorCode.MerchantManager.TokenErrors.getter()
{
  return sub_21C388D64(&qword_25525AD40);
}

uint64_t sub_21C388D64(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for ErrorCode()
{
  return &type metadata for ErrorCode;
}

ValueMetadata *type metadata accessor for ErrorCode.Authorization()
{
  return &type metadata for ErrorCode.Authorization;
}

ValueMetadata *type metadata accessor for ErrorCode.MerchantManager()
{
  return &type metadata for ErrorCode.MerchantManager;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.vehicleCategoryCode.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.issueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1
     + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege()
              + 20);
  return sub_21C388E64(v3, a1);
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege()
{
  uint64_t result;

  result = qword_2552600B0;
  if (!qword_2552600B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C388E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1
     + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege()
              + 24);
  return sub_21C388E64(v3, a1);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.codes.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege();
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v4 = sub_21C3A7518();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - v12;
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  v14 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege();
  sub_21C388E64(v2 + v14[5], (uint64_t)v13);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v15(v13, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_21C388E64(v2 + v14[6], (uint64_t)v10);
  if (v15(v10, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v16 = *(_QWORD *)(v2 + v14[7]);
  swift_bridgeObjectRetain();
  sub_21C2EA7C0(a1, v16);
  return swift_bridgeObjectRelease();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  _BYTE v16[72];

  v1 = v0;
  v2 = sub_21C3A7518();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v16[-v10 - 8];
  sub_21C3A8700();
  sub_21C3A7F50();
  v12 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege();
  sub_21C388E64(v1 + v12[5], (uint64_t)v11);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v13(v11, 1, v2) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_21C388E64(v1 + v12[6], (uint64_t)v8);
  if (v13(v8, 1, v2) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_21C2EA7C0(v16, *(_QWORD *)(v1 + v12[7]));
  return sub_21C3A8724();
}

uint64_t sub_21C389394(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v4 = v2;
  v6 = sub_21C3A7518();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - v14;
  sub_21C3A7F50();
  sub_21C388E64(v4 + a2[5], (uint64_t)v15);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v16(v15, 1, v6) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_21C388E64(v4 + a2[6], (uint64_t)v12);
  if (v16(v12, 1, v6) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_21C2EA7C0(a1, *(_QWORD *)(v4 + a2[7]));
}

uint64_t sub_21C3895B8(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  _BYTE v18[72];

  v4 = v2;
  v5 = sub_21C3A7518();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v18[-v13 - 8];
  sub_21C3A8700();
  sub_21C3A7F50();
  sub_21C388E64(v4 + a2[5], (uint64_t)v14);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_21C388E64(v4 + a2[6], (uint64_t)v11);
  if (v15(v11, 1, v5) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_21C2EA7C0(v18, *(_QWORD *)(v4 + a2[7]));
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code.code.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code.sign.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
    if (v2)
    {
LABEL_3:
      sub_21C3A8718();
      swift_bridgeObjectRetain();
      sub_21C3A7F50();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_21C3A8718();
    if (v2)
      goto LABEL_3;
  }
  return sub_21C3A8718();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  sub_21C3A8700();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_21C3A8718();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_21C3A8718();
    return sub_21C3A8724();
  }
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t _s15ProximityReader31MobileDriversLicenseDataRequestV8ResponseV16DocumentElementsV16DrivingPrivilegeV2eeoiySbAI_AItFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  void (*v37)(_BYTE *, uint64_t);
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _QWORD *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v48;
  _BYTE *v49;
  char v50;
  void (*v51)(_BYTE *, uint64_t);
  _BYTE v52[4];
  int v53;
  _QWORD *v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  _QWORD *v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;

  v4 = sub_21C3A7518();
  v62 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v52[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v52[-v11];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v13);
  v59 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v61 = &v52[-v16];
  MEMORY[0x24BDAC7A8](v17);
  v60 = &v52[-v18];
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v52[-v20];
  MEMORY[0x24BDAC7A8](v22);
  v24 = &v52[-v23];
  MEMORY[0x24BDAC7A8](v25);
  v27 = &v52[-v26];
  if (*a1 == *a2 && a1[1] == a2[1] || (v28 = sub_21C3A864C(), v29 = 0, (v28 & 1) != 0))
  {
    v56 = v6;
    v57 = v9;
    v30 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege();
    sub_21C388E64((uint64_t)a1 + *(int *)(v30 + 20), (uint64_t)v27);
    v31 = *(int *)(v30 + 20);
    v58 = a2;
    sub_21C388E64((uint64_t)a2 + v31, (uint64_t)v24);
    v32 = (uint64_t)&v12[*(int *)(v7 + 48)];
    sub_21C388E64((uint64_t)v27, (uint64_t)v12);
    sub_21C388E64((uint64_t)v24, v32);
    v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
    if (v33((uint64_t)v12, 1, v4) == 1)
    {
      sub_21C2D775C((uint64_t)v24, &qword_25525B8A0);
      sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
      if (v33(v32, 1, v4) == 1)
      {
        sub_21C2D775C((uint64_t)v12, &qword_25525B8A0);
LABEL_11:
        v39 = (uint64_t)a1 + *(int *)(v30 + 24);
        v40 = v30;
        v41 = v60;
        sub_21C388E64(v39, (uint64_t)v60);
        v55 = v40;
        v42 = v58;
        v43 = v61;
        sub_21C388E64((uint64_t)v58 + *(int *)(v40 + 24), (uint64_t)v61);
        v44 = (uint64_t)v57;
        v45 = (uint64_t)&v57[*(int *)(v7 + 48)];
        sub_21C388E64((uint64_t)v41, (uint64_t)v57);
        sub_21C388E64((uint64_t)v43, v45);
        if (v33(v44, 1, v4) == 1)
        {
          sub_21C2D775C((uint64_t)v43, &qword_25525B8A0);
          sub_21C2D775C((uint64_t)v41, &qword_25525B8A0);
          if (v33(v45, 1, v4) == 1)
          {
            sub_21C2D775C(v44, &qword_25525B8A0);
LABEL_21:
            v29 = sub_21C311C24(*(_QWORD *)((char *)a1 + *(int *)(v55 + 28)), *(_QWORD *)((char *)v42 + *(int *)(v55 + 28)));
            return v29 & 1;
          }
        }
        else
        {
          v46 = v59;
          sub_21C388E64(v44, (uint64_t)v59);
          if (v33(v45, 1, v4) != 1)
          {
            v48 = v62;
            v49 = v56;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v62 + 32))(v56, v45, v4);
            sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
            v50 = sub_21C3A7EA8();
            v51 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
            v51(v49, v4);
            sub_21C2D775C((uint64_t)v61, &qword_25525B8A0);
            sub_21C2D775C((uint64_t)v41, &qword_25525B8A0);
            v51(v46, v4);
            sub_21C2D775C(v44, &qword_25525B8A0);
            if ((v50 & 1) != 0)
              goto LABEL_21;
            goto LABEL_18;
          }
          sub_21C2D775C((uint64_t)v61, &qword_25525B8A0);
          sub_21C2D775C((uint64_t)v41, &qword_25525B8A0);
          (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v46, v4);
        }
        v34 = v44;
        goto LABEL_17;
      }
    }
    else
    {
      sub_21C388E64((uint64_t)v12, (uint64_t)v21);
      if (v33(v32, 1, v4) != 1)
      {
        v54 = a1;
        v55 = v30;
        v35 = v62;
        v36 = v56;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v62 + 32))(v56, v32, v4);
        sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
        v53 = sub_21C3A7EA8();
        v37 = *(void (**)(_BYTE *, uint64_t))(v35 + 8);
        v38 = v36;
        a1 = v54;
        v30 = v55;
        v37(v38, v4);
        sub_21C2D775C((uint64_t)v24, &qword_25525B8A0);
        sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
        v37(v21, v4);
        sub_21C2D775C((uint64_t)v12, &qword_25525B8A0);
        if ((v53 & 1) == 0)
        {
LABEL_18:
          v29 = 0;
          return v29 & 1;
        }
        goto LABEL_11;
      }
      sub_21C2D775C((uint64_t)v24, &qword_25525B8A0);
      sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
      (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v21, v4);
    }
    v34 = (uint64_t)v12;
LABEL_17:
    sub_21C2D775C(v34, &qword_25525BFB8);
    goto LABEL_18;
  }
  return v29 & 1;
}

uint64_t sub_21C389FF4()
{
  return sub_21C2D1198(&qword_255260048, (uint64_t (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege);
}

unint64_t sub_21C38A024()
{
  unint64_t result;

  result = qword_255260050;
  if (!qword_255260050)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code, &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code);
    atomic_store(result, (unint64_t *)&qword_255260050);
  }
  return result;
}

uint64_t _s16DrivingPrivilegeVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C38A074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t _s16DrivingPrivilegeVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C38A100(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_21C38A178()
{
  unint64_t v0;

  sub_21C38A1FC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_21C38A1FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25525BBF0)
  {
    sub_21C3A7518();
    v0 = sub_21C3A82EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25525BBF0);
  }
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code()
{
  return &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.Code;
}

uint64_t MobileDriversLicenseDataRequest.retainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.retainedElements.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*MobileDriversLicenseDataRequest.retainedElements.modify())()
{
  return nullsub_1;
}

uint64_t MobileDriversLicenseDataRequest.nonRetainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.nonRetainedElements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MobileDriversLicenseDataRequest.nonRetainedElements.modify())()
{
  return nullsub_1;
}

uint64_t MobileDriversLicenseDataRequest.init(retainedElements:nonRetainedElements:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t MobileDriversLicenseDataRequest.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  _BYTE *v7;

  v1 = *v0;
  v2 = v0[1];
  sub_21C3A870C();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = (_BYTE *)(v1 + 40);
    do
    {
      if ((*v4 & 1) == 0)
        sub_21C3A870C();
      v4 += 16;
      sub_21C3A870C();
      --v3;
    }
    while (v3);
  }
  result = sub_21C3A870C();
  v6 = *(_QWORD *)(v2 + 16);
  if (v6)
  {
    v7 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v7 & 1) == 0)
        sub_21C3A870C();
      v7 += 16;
      result = sub_21C3A870C();
      --v6;
    }
    while (v6);
  }
  return result;
}

uint64_t static MobileDriversLicenseDataRequest.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_21C311C28(*a1, *a2) & 1) != 0)
    return sub_21C311C28(v2, v3);
  else
    return 0;
}

uint64_t MobileDriversLicenseDataRequest.hashValue.getter()
{
  sub_21C3A8700();
  MobileDriversLicenseDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C38A444()
{
  sub_21C3A8700();
  MobileDriversLicenseDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C38A490()
{
  sub_21C3A8700();
  MobileDriversLicenseDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t static MobileDocumentRequest<>.driversLicenseData(retaining:notRetaining:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_21C38A500()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2552600F0;
  if (!qword_2552600F0)
  {
    v1 = type metadata accessor for MobileDriversLicenseDataRequest.Response();
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response, v1);
    atomic_store(result, (unint64_t *)&qword_2552600F0);
  }
  return result;
}

unint64_t sub_21C38A548(uint64_t a1)
{
  unint64_t result;

  result = sub_21C38A56C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C38A56C()
{
  unint64_t result;

  result = qword_255260118;
  if (!qword_255260118)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest, &type metadata for MobileDriversLicenseDataRequest);
    atomic_store(result, (unint64_t *)&qword_255260118);
  }
  return result;
}

unint64_t sub_21C38A5B4()
{
  unint64_t result;

  result = qword_255260120;
  if (!qword_255260120)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest, &type metadata for MobileDriversLicenseDataRequest);
    atomic_store(result, (unint64_t *)&qword_255260120);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest()
{
  return &type metadata for MobileDriversLicenseDataRequest;
}

uint64_t static LocaleHelper.findLocaleInBundle(locale:bundle:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260128);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C3A7890();
  v43 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21C3A78A8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v39 - v19;
  sub_21C2F50EC(a1, (uint64_t)v13, &qword_25525B3C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_21C2D775C((uint64_t)v13, &qword_25525B3C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a3, 1, 1, v14);
  }
  v41 = v8;
  v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v22(v20, v13, v14);
  v23 = objc_msgSend(a2, sel_localizations);
  v24 = sub_21C3A8070();

  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v39 = v20;
    v40 = a3;
    v45 = MEMORY[0x24BEE4AF8];
    sub_21C31E23C(0, v25, 0);
    v26 = v45;
    v27 = v24 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_21C3A77F4();
      v45 = v26;
      v29 = *(_QWORD *)(v26 + 16);
      v28 = *(_QWORD *)(v26 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_21C31E23C(v28 > 1, v29 + 1, 1);
        v26 = v45;
      }
      v27 += 16;
      *(_QWORD *)(v26 + 16) = v29 + 1;
      v22((char *)(v26+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v29), v17, v14);
      --v25;
    }
    while (v25);
    v30 = swift_bridgeObjectRelease();
    v20 = v39;
    a3 = v40;
  }
  else
  {
    v30 = swift_bridgeObjectRelease();
    v26 = MEMORY[0x24BEE4AF8];
  }
  MEMORY[0x24BDAC7A8](v30);
  *(&v39 - 2) = v20;
  sub_21C38ADD8((uint64_t (*)(char *))sub_21C38C3D8, (uint64_t)(&v39 - 4), v26);
  v32 = v31;
  v33 = *(_QWORD *)(v31 + 16);
  v34 = (uint64_t)v41;
  if (v33 <= 1)
  {
    if (v33)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(a3, v31 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
      v38 = 0;
    }
    else
    {
      v38 = 1;
    }
    goto LABEL_19;
  }
  v35 = v42;
  sub_21C3A789C();
  sub_21C3A7878();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v44);
  v36 = sub_21C38C3F4(v32, v34);
  swift_bridgeObjectRelease();
  sub_21C2D775C(v34, &qword_255260128);
  v37 = *(_QWORD *)(v36 + 16);
  if (v37 < 2)
  {
    if (v37)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(a3, v36 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
      v38 = 0;
    }
    else
    {
      v38 = 1;
    }
LABEL_19:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a3, v38, 1, v14);
    goto LABEL_20;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(a3, v36 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v14);
LABEL_20:
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
}

uint64_t sub_21C38AA64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t *v29;
  char v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a2;
  v2 = sub_21C3A780C();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v36 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552601E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552601E8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - v13;
  v15 = sub_21C3A7890();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v35 - v20;
  sub_21C3A789C();
  sub_21C3A786C();
  v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  v22(v21, v15);
  sub_21C3A789C();
  sub_21C3A786C();
  v22(v18, v15);
  v23 = *(int *)(v4 + 48);
  v24 = v39;
  v25 = v40;
  v26 = (uint64_t)&v6[v23];
  sub_21C2F50EC((uint64_t)v14, (uint64_t)v6, &qword_2552601E8);
  sub_21C2F50EC((uint64_t)v11, v26, &qword_2552601E8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v27((uint64_t)v6, 1, v25) == 1)
  {
    sub_21C2D775C((uint64_t)v11, &qword_2552601E8);
    sub_21C2D775C((uint64_t)v14, &qword_2552601E8);
    v28 = v27(v26, 1, v25);
    if (v28 == 1)
      v29 = &qword_2552601E8;
    else
      v29 = &qword_2552601E0;
    if (v28 == 1)
      v30 = -1;
    else
      v30 = 0;
  }
  else
  {
    v31 = v37;
    sub_21C2F50EC((uint64_t)v6, v37, &qword_2552601E8);
    if (v27(v26, 1, v25) == 1)
    {
      sub_21C2D775C((uint64_t)v11, &qword_2552601E8);
      sub_21C2D775C((uint64_t)v14, &qword_2552601E8);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v31, v25);
      v30 = 0;
      v29 = &qword_2552601E0;
    }
    else
    {
      v32 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v36, v26, v25);
      sub_21C2D1198(&qword_2552601F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEB60], MEMORY[0x24BDCEB80]);
      v30 = sub_21C3A7EA8();
      v33 = *(void (**)(char *, uint64_t))(v24 + 8);
      v33(v32, v25);
      v29 = &qword_2552601E8;
      sub_21C2D775C((uint64_t)v11, &qword_2552601E8);
      sub_21C2D775C((uint64_t)v14, &qword_2552601E8);
      v33((char *)v31, v25);
    }
  }
  sub_21C2D775C((uint64_t)v6, v29);
  return v30 & 1;
}

void sub_21C38ADD8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  char v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *);
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v4 = v3;
  v33 = a1;
  v34 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C3A78A8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v35 = (char *)&v26 - v14;
  v36 = MEMORY[0x24BEE4AF8];
  v32 = *(_QWORD *)(a3 + 16);
  if (v32)
  {
    v15 = 0;
    v30 = a3;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v17 = *(_QWORD *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9, v13);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v29)(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        goto LABEL_17;
      v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v19 = v35;
      v18(v35, v8, v9);
      v20 = v33(v19);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if ((v20 & 1) != 0)
      {
        v18(v31, v35, v9);
        v21 = v36;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v28 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_21C31E23C(0, *(_QWORD *)(v21 + 16) + 1, 1);
          v21 = v36;
        }
        v24 = *(_QWORD *)(v21 + 16);
        v23 = *(_QWORD *)(v21 + 24);
        v25 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          v27 = v24 + 1;
          sub_21C31E23C(v23 > 1, v24 + 1, 1);
          v25 = v27;
          v21 = v36;
        }
        *(_QWORD *)(v21 + 16) = v25;
        v18((char *)(v21 + v16 + v24 * v17), v31, v9);
        v36 = v21;
        v4 = v28;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
      }
      a3 = v30;
      if (v32 == ++v15)
      {
        v29(v8, 1, 1, v9, v13);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v13);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_21C2D775C((uint64_t)v8, &qword_25525B3C0);
  }
}

uint64_t static LocaleHelper.resolveCardPreferredLocale(from:preferredRegion:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint8_t *v76;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint8_t *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  _QWORD *v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, unint64_t, uint64_t);
  char *v111;
  char *v112;
  void *v113;
  _QWORD v114[5];

  v102 = a3;
  v96 = a4;
  v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v95);
  v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v90 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
  MEMORY[0x24BDAC7A8](v11);
  v97 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v106 = (char *)&v90 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v112 = (char *)&v90 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v109 = (uint64_t)&v90 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v111 = (char *)&v90 - v20;
  v21 = sub_21C3A78A8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v92 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v93 = (char *)&v90 - v25;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v90 - v27;
  swift_bridgeObjectRetain();
  v29 = sub_21C3A7F5C();
  if (v29)
  {
    v30 = v29;
    v31 = sub_21C38BEA0(v29, 0);
    swift_bridgeObjectRetain();
    v32 = sub_21C38BDE8(v114, v31 + 4, v30, a1, a2);
    swift_bridgeObjectRelease();
    if (v32 != (_QWORD *)v30)
    {
LABEL_56:
      __break(1u);
LABEL_57:
      swift_once();
LABEL_49:
      v82 = __swift_project_value_buffer(v95, (uint64_t)qword_255278F90);
      v83 = (uint64_t)v91;
      sub_21C2F50EC(v82, (uint64_t)v91, (uint64_t *)&unk_25525B0E0);
      v84 = sub_21C3A79D4();
      v85 = *(_QWORD *)(v84 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84) == 1)
      {
        sub_21C2D775C(v83, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v86 = sub_21C3A79BC();
        v87 = sub_21C3A81C0();
        if (os_log_type_enabled(v86, v87))
        {
          v88 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v88 = 0;
          _os_log_impl(&dword_21C2CD000, v86, v87, "error parsing preferred language tag, array out of bounds", v88, 2u);
          v89 = v88;
          v83 = (uint64_t)v91;
          MEMORY[0x22077AF8C](v89, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
      }
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v96, 1, 1, v21);
    }
    swift_bridgeObjectRelease();
    v33 = v31;
    v34 = v31[2];
    if (!v34)
      goto LABEL_43;
LABEL_6:
    v91 = v7;
    v35 = 0;
    v105 = 0;
    v94 = v28;
    v107 = v22;
    v101 = v10;
    v104 = v33;
    v98 = v33 + 4;
    v99 = v34;
    while (1)
    {
      v37 = v35 | 1;
      if ((v35 | 1) >= v34)
        break;
      if (v35 >= v33[2])
      {
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      v103 = v35;
      swift_bridgeObjectRetain();
      v38 = sub_21C3A7E6C();
      v40 = v39;
      swift_bridgeObjectRelease();
      v114[0] = v38;
      v114[1] = v40;
      if (v37 >= v33[2])
        goto LABEL_55;
      swift_bridgeObjectRetain();
      sub_21C3A7E6C();
      swift_bridgeObjectRelease();
      sub_21C3A7F8C();
      v41 = swift_bridgeObjectRelease();
      v42 = MEMORY[0x220779A08](v41);
      v43 = v105;
      v44 = sub_21C38C840(v42);
      v105 = v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = *(_QWORD *)(v44 + 16);
      if (v45)
      {
        v114[0] = MEMORY[0x24BEE4AF8];
        sub_21C31E23C(0, v45, 0);
        v46 = v114[0];
        v47 = v44 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_21C3A77F4();
          v114[0] = v46;
          v49 = *(_QWORD *)(v46 + 16);
          v48 = *(_QWORD *)(v46 + 24);
          if (v49 >= v48 >> 1)
          {
            sub_21C31E23C(v48 > 1, v49 + 1, 1);
            v46 = v114[0];
          }
          v47 += 16;
          *(_QWORD *)(v46 + 16) = v49 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v46+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v49, v28, v21);
          --v45;
        }
        while (v45);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v46 = MEMORY[0x24BEE4AF8];
      }
      v50 = sub_21C38C3F4(v46, v102);
      v51 = _s15ProximityReader12LocaleHelperC12findUIBundleSo8NSBundleCSgyFZ_0();
      v52 = (uint64_t)v101;
      v53 = v111;
      v33 = v104;
      v113 = v51;
      if (v51)
      {
        v54 = *(_QWORD *)(v50 + 16);
        v100 = v50;
        if (v54)
        {
          v55 = v50 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
          v108 = *(_QWORD *)(v22 + 72);
          v110 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
          while (1)
          {
            v110(v53, v55, v21);
            v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
            v56(v53, 0, 1, v21);
            v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
            if (v57(v53, 1, v21) == 1)
              break;
            v58 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
            v59 = (uint64_t)v112;
            v58(v112, v53, v21);
            v56((char *)v59, 0, 1, v21);
            v60 = v109;
            static LocaleHelper.findLocaleInBundle(locale:bundle:)(v59, v113, v109);
            sub_21C2D775C(v59, &qword_25525B3C0);
            if (v57((char *)v60, 1, v21) != 1)
            {
              swift_bridgeObjectRelease();
              swift_release();

              swift_bridgeObjectRelease();
              v78 = v93;
              v79 = v93;
              v80 = v60;
              goto LABEL_47;
            }
            sub_21C2D775C(v60, &qword_25525B3C0);
            v55 += v108;
            --v54;
            v53 = v111;
            if (!v54)
              goto LABEL_31;
          }
        }
        else
        {
          v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
LABEL_31:
          v56(v53, 1, 1, v21);
        }
        swift_bridgeObjectRelease();
        v64 = *(_QWORD *)(v46 + 16);
        v65 = (uint64_t)v97;
        if (v64)
        {
          v66 = v46 + ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80));
          v108 = *(_QWORD *)(v107 + 72);
          v110 = *(void (**)(char *, unint64_t, uint64_t))(v107 + 16);
          while (1)
          {
            v67 = v106;
            v110(v106, v66, v21);
            v56(v67, 0, 1, v21);
            v68 = v107;
            v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
            if (v69(v67, 1, v21) == 1)
            {

              swift_bridgeObjectRelease();
              v28 = v94;
              v36 = v103;
              v33 = v104;
              v34 = v99;
              v22 = v68;
              goto LABEL_8;
            }
            v58 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
            v70 = v21;
            v71 = (uint64_t)v112;
            v58(v112, v67, v70);
            v56((char *)v71, 0, 1, v70);
            static LocaleHelper.findLocaleInBundle(locale:bundle:)(v71, v113, v65);
            v72 = v71;
            v21 = v70;
            sub_21C2D775C(v72, &qword_25525B3C0);
            if (v69((char *)v65, 1, v70) != 1)
              break;
            sub_21C2D775C(v65, &qword_25525B3C0);
            v66 += v108;
            if (!--v64)
              goto LABEL_7;
          }
          swift_release();

          swift_bridgeObjectRelease();
          v78 = v92;
          v79 = v92;
          v80 = v65;
LABEL_47:
          v58(v79, (char *)v80, v21);
          v81 = v96;
          v58(v96, v78, v21);
          return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v56)(v81, 0, 1, v21);
        }
LABEL_7:
        v56(v106, 1, 1, v21);

        swift_bridgeObjectRelease();
        v28 = v94;
        v36 = v103;
        v33 = v104;
        v34 = v99;
        v22 = v107;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_25525AAE8 != -1)
          swift_once();
        v61 = __swift_project_value_buffer(v95, (uint64_t)qword_255278F90);
        sub_21C2F50EC(v61, v52, (uint64_t *)&unk_25525B0E0);
        v62 = sub_21C3A79D4();
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v52, 1, v62) == 1)
        {
          sub_21C2D775C(v52, (uint64_t *)&unk_25525B0E0);
        }
        else
        {
          v73 = sub_21C3A79BC();
          v74 = sub_21C3A81C0();
          if (os_log_type_enabled(v73, v74))
          {
            v75 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v75 = 0;
            _os_log_impl(&dword_21C2CD000, v73, v74, "UI Bundle not found, unable to check Locales", v75, 2u);
            v76 = v75;
            v33 = v104;
            MEMORY[0x22077AF8C](v76, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v52, v62);
        }
        v34 = v99;
        v36 = v103;
      }
LABEL_8:
      v35 = v36 + 2;
      if (v35 >= v34)
        goto LABEL_43;
    }
    swift_release();
    if (qword_25525AAE8 != -1)
      goto LABEL_57;
    goto LABEL_49;
  }
  swift_bridgeObjectRelease();
  v33 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v34 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (v34)
    goto LABEL_6;
LABEL_43:
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v96, 1, 1, v21);
}

uint64_t sub_21C38BAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  uint64_t *v22;
  char v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a2;
  v2 = sub_21C3A7848();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552601D0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260128);
  MEMORY[0x24BDAC7A8](v8);
  v30 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v28 - v11;
  v13 = sub_21C3A7890();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A789C();
  sub_21C3A7878();
  v17 = *(void (**)(char *, uint64_t))(v14 + 8);
  v18 = v3;
  v17(v16, v13);
  v19 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_21C2F50EC((uint64_t)v12, (uint64_t)v7, &qword_255260128);
  sub_21C2F50EC(v31, v19, &qword_255260128);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v20((uint64_t)v7, 1, v2) == 1)
  {
    sub_21C2D775C((uint64_t)v12, &qword_255260128);
    v21 = v20(v19, 1, v2);
    if (v21 == 1)
      v22 = &qword_255260128;
    else
      v22 = &qword_2552601D0;
    if (v21 == 1)
      v23 = -1;
    else
      v23 = 0;
  }
  else
  {
    v24 = v30;
    sub_21C2F50EC((uint64_t)v7, v30, &qword_255260128);
    if (v20(v19, 1, v2) == 1)
    {
      sub_21C2D775C((uint64_t)v12, &qword_255260128);
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v24, v2);
      v23 = 0;
      v22 = &qword_2552601D0;
    }
    else
    {
      v25 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v29, v19, v2);
      sub_21C2D1198(&qword_2552601D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED28]);
      v23 = sub_21C3A7EA8();
      v26 = *(void (**)(char *, uint64_t))(v18 + 8);
      v26(v25, v2);
      v22 = &qword_255260128;
      sub_21C2D775C((uint64_t)v12, &qword_255260128);
      v26((char *)v24, v2);
    }
  }
  sub_21C2D775C((uint64_t)v7, v22);
  return v23 & 1;
}

uint64_t LocaleHelper.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t LocaleHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_QWORD *sub_21C38BDE8(_QWORD *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = result;
  v6 = HIBYTE(a5) & 0xF;
  v12 = a4;
  v13 = a5;
  if ((a5 & 0x2000000000000000) == 0)
    v6 = a4 & 0xFFFFFFFFFFFFLL;
  v14 = v6;
  if (!a2)
  {
    v7 = 0;
LABEL_14:
    *v5 = a4;
    v5[1] = a5;
    v5[2] = 0;
    v5[3] = v6;
    return (_QWORD *)v7;
  }
  v7 = a3;
  if (!a3)
    goto LABEL_14;
  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = a2;
    v9 = 0;
    while (1)
    {
      v10 = sub_21C3A7FA4();
      if (!v11)
        break;
      ++v9;
      *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    v7 = v9;
LABEL_13:
    v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21C38BEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552601C8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t _s15ProximityReader12LocaleHelperC6encode8languageSSSg10Foundation0C0V8LanguageVSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260128);
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552601F8);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552601E8);
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_21C3A78A8();
  v17 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21C3A7890();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2F50EC(a1, (uint64_t)v10, (uint64_t *)&unk_25525D600);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_21C2D775C((uint64_t)v10, (uint64_t *)&unk_25525D600);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_21C3A786C();
    sub_21C3A7884();
    sub_21C3A7878();
    sub_21C3A7818();
    v15 = sub_21C3A7800();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v18);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v15;
}

id _s15ProximityReader12LocaleHelperC12findUIBundleSo8NSBundleCSgyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  void (*v17)(char *, uint64_t);
  id v18;
  void *v19;
  id v20;
  _QWORD v22[2];

  v0 = sub_21C3A762C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21C3A76C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v22 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v22 - v12;
  v14 = (void *)sub_21C3A7EB4();
  v15 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v14);

  if (!v15)
    return 0;
  v16 = objc_msgSend(v15, sel_bundleURL);
  sub_21C3A7698();

  sub_21C3A768C();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v7, v4);
  sub_21C3A768C();
  v17(v10, v4);
  v22[0] = 0xD00000000000002FLL;
  v22[1] = 0x800000021C3BF2D0;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCD7A0], v0);
  sub_21C30E1A4();
  sub_21C3A76BC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  v18 = objc_allocWithZone(MEMORY[0x24BDD1488]);
  v19 = (void *)sub_21C3A7668();
  v20 = objc_msgSend(v18, sel_initWithURL_, v19);

  v17(v10, v4);
  v17(v13, v4);
  return v20;
}

uint64_t sub_21C38C3D8(uint64_t a1)
{
  uint64_t v1;

  return sub_21C38AA64(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_21C38C3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  void (*v54)(char *, unint64_t, uint64_t);
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char v64[16];
  uint64_t v65;
  uint64_t v66;

  v4 = sub_21C3A7890();
  v5 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  v61 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v62 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_21C3A78A8();
  v10 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v48 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260128);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v48 - v20;
  v65 = a2;
  swift_bridgeObjectRetain();
  v22 = a1;
  sub_21C38ADD8((uint64_t (*)(char *))sub_21C38C9FC, (uint64_t)v64, a1);
  v24 = v23;
  v25 = *(_QWORD *)(v23 + 16);
  sub_21C2F50EC(a2, (uint64_t)v21, &qword_255260128);
  if (v25)
  {
    sub_21C2D775C((uint64_t)v21, &qword_255260128);
  }
  else
  {
    v50 = v10;
    v26 = v60;
    v63 = v18;
    v58 = v15;
    v59 = v12;
    v27 = sub_21C3A7848();
    v56 = *(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
    v57 = v27;
    v28 = v56(v21, 1);
    sub_21C2D775C((uint64_t)v21, &qword_255260128);
    if (v28 != 1)
    {
      swift_bridgeObjectRelease();
      v66 = MEMORY[0x24BEE4AF8];
      v29 = *(_QWORD *)(v22 + 16);
      v30 = swift_bridgeObjectRetain();
      v48 = v22;
      if (v29)
      {
        v31 = v50;
        v49 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
        v32 = v30 + v49;
        v33 = *(_QWORD *)(v50 + 72);
        v34 = *(void (**)(char *, unint64_t, uint64_t))(v50 + 16);
        v53 = v9;
        v54 = v34;
        v35 = v62;
        v36 = v55;
        v52 = v33;
        v34(v9, v30 + v49, v55);
        while (1)
        {
          v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
          v51(v9, 0, 1, v36);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v9, 1, v36) == 1)
            break;
          v38 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
          v39 = v58;
          v38(v58, v9, v36);
          v40 = v36;
          sub_21C3A789C();
          sub_21C3A7878();
          v41 = (uint64_t)v63;
          (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v26);
          v42 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v56)(v41, 1, v57);
          sub_21C2D775C(v41, &qword_255260128);
          if (v42 == 1)
          {
            v38(v59, v39, v40);
            v43 = v66;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_21C31E23C(0, *(_QWORD *)(v43 + 16) + 1, 1);
              v43 = v66;
            }
            v37 = v52;
            v9 = v53;
            v45 = *(_QWORD *)(v43 + 16);
            v44 = *(_QWORD *)(v43 + 24);
            if (v45 >= v44 >> 1)
            {
              sub_21C31E23C(v44 > 1, v45 + 1, 1);
              v43 = v66;
            }
            *(_QWORD *)(v43 + 16) = v45 + 1;
            v46 = v43 + v49 + v45 * v37;
            v36 = v55;
            v38((char *)v46, v59, v55);
            v66 = v43;
            v26 = v60;
            v31 = v50;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v31 + 8))(v39, v40);
            v36 = v40;
            v37 = v52;
            v9 = v53;
          }
          v32 += v37;
          --v29;
          v35 = v62;
          if (!v29)
          {
            v51(v9, 1, 1, v36);
            break;
          }
          v54(v9, v32, v36);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v9, 1, 1, v55);
      }
      swift_bridgeObjectRelease();
      sub_21C2D775C((uint64_t)v9, &qword_25525B3C0);
      return v66;
    }
  }
  return v24;
}

uint64_t sub_21C38C840(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = 0;
  v3 = result + 40;
  v4 = -(uint64_t)v1;
  v5 = MEMORY[0x24BEE4AF8];
  v14 = result + 40;
  v15 = *(_QWORD *)(result + 16);
  do
  {
    if (v2 <= v1)
      v6 = v1;
    else
      v6 = v2;
    v7 = -(uint64_t)v6;
    for (i = (uint64_t *)(v3 + 16 * v2++); ; i += 2)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      v10 = *(i - 1);
      v9 = *i;
      sub_21C30E1A4();
      swift_bridgeObjectRetain();
      if ((sub_21C3A8328() & 1) != 0)
        break;
      result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1)
        return v5;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_21C31E1D8(0, *(_QWORD *)(v5 + 16) + 1, 1);
    v12 = *(_QWORD *)(v5 + 16);
    v11 = *(_QWORD *)(v5 + 24);
    if (v12 >= v11 >> 1)
      result = sub_21C31E1D8(v11 > 1, v12 + 1, 1);
    *(_QWORD *)(v5 + 16) = v12 + 1;
    v13 = v5 + 16 * v12;
    *(_QWORD *)(v13 + 32) = v10;
    *(_QWORD *)(v13 + 40) = v9;
    v3 = v14;
    v1 = v15;
  }
  while (v4 + v2);
  return v5;
}

uint64_t type metadata accessor for LocaleHelper()
{
  return objc_opt_self();
}

uint64_t method lookup function for LocaleHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_21C38C9FC(uint64_t a1)
{
  uint64_t v1;

  return sub_21C38BAE0(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_21C38CA1C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552602A8);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_21C2D775C((uint64_t)v14, &qword_2552602B0);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_21C3A8418();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_21C393670(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_21C3A7FB0();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_21C3936D4(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0]);
    sub_21C392430();
    __asm { BR              X12 }
  }
  sub_21C394090(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_21C3A7554();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t static Utilities.analyticsCacheDirectoryPath()()
{
  return sub_21C38E260();
}

uint64_t sub_21C38CF3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v2 = sub_21C3A7DE8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2D1198(&qword_2552602A0, v6, MEMORY[0x24BDC6300]);
  v7 = sub_21C3A8028();
  v38 = MEMORY[0x24BEE4AF8];
  sub_21C31E1D8(0, v7 & ~(v7 >> 63), 0);
  v8 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  result = sub_21C3A801C();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v10 = v37;
    if (v7)
    {
      v11 = *(_QWORD *)(v36 + 16);
      v34 = v36;
      *(_QWORD *)&v35 = v11;
      v33 = v36 + 32;
      v32 = xmmword_21C3ACA90;
      v12 = v37;
      while ((_QWORD)v35 != v12)
      {
        if ((v10 & 0x8000000000000000) != 0)
          goto LABEL_21;
        if (v12 >= *(_QWORD *)(v34 + 16))
          goto LABEL_22;
        v13 = *(_BYTE *)(v33 + v12);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25525C218);
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = v32;
        *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE4260];
        *(_QWORD *)(v14 + 64) = MEMORY[0x24BEE42B0];
        *(_BYTE *)(v14 + 32) = v13;
        result = sub_21C3A7EF0();
        v15 = result;
        v17 = v16;
        v38 = v8;
        v19 = *(_QWORD *)(v8 + 16);
        v18 = *(_QWORD *)(v8 + 24);
        if (v19 >= v18 >> 1)
        {
          result = sub_21C31E1D8(v18 > 1, v19 + 1, 1);
          v8 = v38;
        }
        *(_QWORD *)(v8 + 16) = v19 + 1;
        v20 = v8 + 16 * v19;
        *(_QWORD *)(v20 + 32) = v15;
        *(_QWORD *)(v20 + 40) = v17;
        ++v12;
        if (!--v7)
        {
          v37 = v12;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      v12 = v37;
LABEL_12:
      v21 = v36;
      v22 = *(_QWORD *)(v36 + 16);
      if (v12 == v22)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return v8;
      }
      v35 = xmmword_21C3ACA90;
      while (v12 < v22)
      {
        v23 = *(_BYTE *)(v21 + 32 + v12);
        v37 = v12 + 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25525C218);
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = v35;
        *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE4260];
        *(_QWORD *)(v24 + 64) = MEMORY[0x24BEE42B0];
        *(_BYTE *)(v24 + 32) = v23;
        result = sub_21C3A7EF0();
        v25 = result;
        v27 = v26;
        v38 = v8;
        v29 = *(_QWORD *)(v8 + 16);
        v28 = *(_QWORD *)(v8 + 24);
        if (v29 >= v28 >> 1)
        {
          result = sub_21C31E1D8(v28 > 1, v29 + 1, 1);
          v8 = v38;
        }
        *(_QWORD *)(v8 + 16) = v29 + 1;
        v30 = v8 + 16 * v29;
        *(_QWORD *)(v30 + 32) = v25;
        *(_QWORD *)(v30 + 40) = v27;
        v12 = v37;
        v22 = *(_QWORD *)(v21 + 16);
        if (v37 == v22)
          goto LABEL_13;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_21C38D268()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_callServicesClientCapabilities);
  objc_msgSend(v1, sel_setWantsToScreenCalls_, 1);

  v2 = objc_msgSend(v0, sel_callServicesClientCapabilities);
  objc_msgSend(v2, sel_save);

  qword_255260200 = (uint64_t)v0;
}

uint64_t static Utilities.hasCurrentCalls.getter()
{
  void *v0;
  unsigned __int8 v2;

  sub_21C2D7704(0, (unint64_t *)&qword_25525B308);
  v0 = (void *)sub_21C3A8214();
  sub_21C3A8220();

  return v2;
}

id sub_21C38D384@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char **v4;
  void *v5;
  id result;
  id v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  char v12;
  __int128 v13;
  char v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char **v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unsigned int v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char **)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_25525AD48 != -1)
    goto LABEL_31;
  while (1)
  {
    v5 = (void *)qword_255260200;
    result = objc_msgSend((id)qword_255260200, sel_hasCurrentCalls, v26);
    if (!(_DWORD)result)
    {
      v14 = 0;
      goto LABEL_13;
    }
    v7 = objc_msgSend(v5, sel_currentAudioAndVideoCalls);
    sub_21C2D7704(0, &qword_2552602C8);
    v8 = sub_21C3A8070();

    v28 = a1;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_21C3A84B4();
      if (!v9)
      {
LABEL_9:
        v14 = 0;
        goto LABEL_12;
      }
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9)
        goto LABEL_9;
    }
    v32 = v8 & 0xC000000000000001;
    v29 = v4;
    v10 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x22077A5D8](0, v8) : *(id *)(v8 + 32);
    v11 = v10;
    v12 = sub_21C393798(v10);

    if ((v12 & 1) == 0)
      break;
    if (v9 == 1)
      goto LABEL_9;
    v15 = 5;
    v4 = &selRef_shared;
    *(_QWORD *)&v13 = 67109376;
    v26 = v13;
    a1 = (char *)v29;
    v30 = v9;
    v31 = v8;
    v27 = v2;
    while (1)
    {
      v16 = v32 ? (id)MEMORY[0x22077A5D8](v15 - 4, v8) : *(id *)(v8 + 8 * v15);
      v17 = v16;
      v18 = v15 - 3;
      if (__OFADD__(v15 - 4, 1))
        break;
      v34 = objc_msgSend(v16, v4[16]);
      v33 = objc_msgSend(v17, sel_isScreening);
      if (qword_25525AAE8 != -1)
        swift_once();
      v19 = __swift_project_value_buffer(v2, (uint64_t)qword_255278F90);
      sub_21C2F50EC(v19, (uint64_t)a1, (uint64_t *)&unk_25525B0E0);
      v20 = sub_21C3A79D4();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(a1, 1, v20) == 1)
      {
        sub_21C2D775C((uint64_t)a1, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v22 = sub_21C3A79BC();
        v23 = sub_21C3A81D8();
        if (os_log_type_enabled(v22, v23))
        {
          v24 = v34 == 1;
          v25 = swift_slowAlloc();
          *(_DWORD *)v25 = v26;
          *(_DWORD *)(v25 + 4) = v24;
          *(_WORD *)(v25 + 8) = 1024;
          *(_DWORD *)(v25 + 10) = v33;
          _os_log_impl(&dword_21C2CD000, v22, v23, "Call: isActive [ %{BOOL}d ] isScreening [ %{BOOL}d ]", (uint8_t *)v25, 0xEu);
          MEMORY[0x22077AF8C](v25, -1, -1);
        }

        a1 = (char *)v29;
        (*(void (**)(char **, uint64_t))(v21 + 8))(v29, v20);
        v2 = v27;
        v4 = &selRef_shared;
      }

      v14 = 1;
      v8 = v31;
      if (v34 != 1 || ((v33 ^ 1) & 1) != 0)
        goto LABEL_12;
      ++v15;
      if (v18 == v30)
        goto LABEL_9;
    }
    __break(1u);
LABEL_31:
    swift_once();
  }
  v14 = 1;
LABEL_12:
  result = (id)swift_bridgeObjectRelease_n();
  a1 = v28;
LABEL_13:
  *a1 = v14;
  return result;
}

id static Utilities.isPasscodeEnabled.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA938]), sel_init);
  v1 = objc_msgSend(v0, sel_canEvaluatePolicy_error_, 2, 0);

  return v1;
}

BOOL static Utilities.isPINPrivacyLockEnabled(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  __CFString *v3;
  __CFString *v4;
  int AppBooleanValue;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIBYTE(v13) = 0;
  v14 = 0xD000000000000017;
  v15 = 0x800000021C3BF300;
  sub_21C3A7F8C();
  v3 = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v4 = (__CFString *)sub_21C3A7EB4();
  AppBooleanValue = CFPreferencesGetAppBooleanValue(v3, v4, (Boolean *)&v13 + 7);

  if (qword_25525AAE8 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v0, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v6, (uint64_t)v2, (uint64_t *)&unk_25525B0E0);
  v7 = sub_21C3A79D4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) == 1)
  {
    sub_21C2D775C((uint64_t)v2, (uint64_t *)&unk_25525B0E0);
    if (!AppBooleanValue)
      return 0;
  }
  else
  {
    v10 = sub_21C3A79BC();
    v11 = sub_21C3A81D8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      *(_DWORD *)v12 = 67109376;
      LODWORD(v14) = AppBooleanValue != 0;
      sub_21C3A82F8();
      *(_WORD *)(v12 + 8) = 1024;
      swift_beginAccess();
      LODWORD(v14) = HIBYTE(v13) != 0;
      sub_21C3A82F8();
      _os_log_impl(&dword_21C2CD000, v10, v11, "pref - isPINPrivacyEnabled = %{BOOL}d, exists = %{BOOL}d", (uint8_t *)v12, 0xEu);
      MEMORY[0x22077AF8C](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v2, v7);
    if (!AppBooleanValue)
      return 0;
  }
  swift_beginAccess();
  return HIBYTE(v13) != 0;
}

uint64_t static Utilities.settingsAlwaysPlaySound(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD, _QWORD, _QWORD);
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __CFString *v23;
  __CFString *v24;
  int AppBooleanValue;
  _BOOL8 v26;
  NSObject *v27;
  os_log_type_t v28;
  _DWORD *v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unsigned int (*v42)(_QWORD, _QWORD, _QWORD);
  Boolean keyExistsAndHasValidFormat;
  uint64_t v44;
  uint64_t v45[4];

  v45[3] = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v37 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v37 - v11;
  keyExistsAndHasValidFormat = 0;
  if (qword_25525AAE8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v13, (uint64_t)v12, (uint64_t *)&unk_25525B0E0);
  v14 = sub_21C3A79D4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v15 + 48);
  if (v16(v12, 1, v14) == 1)
  {
    sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v41 = v13;
    v42 = v16;
    swift_bridgeObjectRetain_n();
    v17 = sub_21C3A79BC();
    v18 = sub_21C3A81D8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v40 = v6;
      v20 = v19;
      v38 = swift_slowAlloc();
      v45[0] = v38;
      *(_DWORD *)v20 = 136315394;
      v44 = sub_21C350398(0xD000000000000017, 0x800000021C3BDA80, v45);
      v39 = v15;
      sub_21C3A82F8();
      *(_WORD *)(v20 + 12) = 2080;
      swift_bridgeObjectRetain();
      v44 = sub_21C350398(a1, a2, v45);
      v15 = v39;
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21C2CD000, v17, v18, "pref - %s-%s", (uint8_t *)v20, 0x16u);
      v21 = v38;
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v21, -1, -1);
      v22 = v20;
      v6 = v40;
      MEMORY[0x22077AF8C](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    v13 = v41;
    v16 = v42;
  }
  v45[0] = 0xD000000000000018;
  v45[1] = 0x800000021C3BF320;
  sub_21C3A7F8C();
  v23 = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v24 = (__CFString *)sub_21C3A7EB4();
  AppBooleanValue = CFPreferencesGetAppBooleanValue(v23, v24, &keyExistsAndHasValidFormat);

  v26 = AppBooleanValue != 0;
  sub_21C2F50EC(v13, (uint64_t)v9, (uint64_t *)&unk_25525B0E0);
  if (v16(v9, 1, v14) == 1)
  {
    sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v27 = sub_21C3A79BC();
    v28 = sub_21C3A81D8();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (_DWORD *)swift_slowAlloc();
      v42 = v16;
      v30 = v15;
      v31 = v29;
      *v29 = 67109376;
      LODWORD(v45[0]) = AppBooleanValue != 0;
      sub_21C3A82F8();
      *((_WORD *)v31 + 4) = 1024;
      swift_beginAccess();
      LODWORD(v45[0]) = keyExistsAndHasValidFormat != 0;
      sub_21C3A82F8();
      _os_log_impl(&dword_21C2CD000, v27, v28, "pref - alwaysPlaySound = %{BOOL}d, exists = %{BOOL}d", (uint8_t *)v31, 0xEu);
      v32 = v31;
      v15 = v30;
      v16 = v42;
      MEMORY[0x22077AF8C](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  }
  swift_beginAccess();
  if (!keyExistsAndHasValidFormat)
  {
    sub_21C2F50EC(v13, (uint64_t)v6, (uint64_t *)&unk_25525B0E0);
    if (v16(v6, 1, v14) == 1)
    {
      sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v33 = sub_21C3A79BC();
      v34 = sub_21C3A81D8();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_21C2CD000, v33, v34, "pref - missing, default to true", v35, 2u);
        MEMORY[0x22077AF8C](v35, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
    }
    return 1;
  }
  return v26;
}

uint64_t static Utilities.libraryDirectoryPath()()
{
  uint64_t result;
  void *v1;
  uint64_t v2;

  result = CPSharedResourcesDirectory();
  if (result)
  {
    v1 = (void *)result;
    v2 = sub_21C3A7ED8();

    sub_21C3A7F8C();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Utilities.homeDirectoryPath()()
{
  uint64_t result;
  void *v1;
  uint64_t v2;

  result = CPSharedResourcesDirectory();
  if (result)
  {
    v1 = (void *)result;
    v2 = sub_21C3A7ED8();

    sub_21C3A7F8C();
    sub_21C3A83DC();
    swift_bridgeObjectRelease();
    sub_21C3A7F8C();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Utilities.logoDirectoryPath()()
{
  return sub_21C3939AC();
}

uint64_t static Utilities.sessionsDirectoryPath()()
{
  uint64_t result;
  void *v1;
  uint64_t v2;

  result = CPSharedResourcesDirectory();
  if (result)
  {
    v1 = (void *)result;
    v2 = sub_21C3A7ED8();

    sub_21C3A7F8C();
    sub_21C3A83DC();
    swift_bridgeObjectRelease();
    sub_21C3A7F8C();
    sub_21C3A7F8C();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Utilities.cacheDirectoryPath()()
{
  return sub_21C3939AC();
}

uint64_t static Utilities.transactionDataCacheDirectoryPath()()
{
  return sub_21C38E260();
}

uint64_t sub_21C38E260()
{
  uint64_t v1;

  v1 = sub_21C3939AC();
  sub_21C3A7F8C();
  return v1;
}

uint64_t static Utilities.discoveryCacheDirectoryPath()()
{
  return sub_21C38E260();
}

uint64_t static Utilities.deviceModel()()
{
  utsname v1;
  uint64_t v2;

  v2 = *MEMORY[0x24BDAC8D0];
  bzero(&v1, 0x500uLL);
  uname(&v1);
  return sub_21C3A7F98();
}

uint64_t sub_21C38E344(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  *(_QWORD *)(v9 + 184) = v18;
  *(_OWORD *)(v9 + 168) = v17;
  *(_OWORD *)(v9 + 152) = v16;
  *(_OWORD *)(v9 + 136) = v15;
  *(_OWORD *)(v9 + 120) = v14;
  *(_OWORD *)(v9 + 104) = v13;
  *(_OWORD *)(v9 + 88) = v12;
  *(_OWORD *)(v9 + 72) = v11;
  *(_QWORD *)(v9 + 56) = a8;
  *(_QWORD *)(v9 + 64) = a9;
  *(_QWORD *)(v9 + 40) = a6;
  *(_QWORD *)(v9 + 48) = a7;
  *(_QWORD *)(v9 + 32) = a5;
  *(double *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 192) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v9 + 200) = swift_task_alloc();
  *(_QWORD *)(v9 + 208) = swift_task_alloc();
  *(_QWORD *)(v9 + 216) = swift_task_alloc();
  *(_QWORD *)(v9 + 224) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  *(_QWORD *)(v9 + 232) = swift_task_alloc();
  *(_QWORD *)(v9 + 240) = swift_task_alloc();
  *(_QWORD *)(v9 + 248) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C38E478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  __CFString *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  __CFString *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  __CFString *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  __CFString *otherButtonTitle;
  void (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  os_log_type_t v70;
  uint8_t *v71;
  __CFString *alertHeader;
  const __CFURL *v74;
  const __CFURL *v75;
  const __CFURL *v76;

  *(_QWORD *)(v0 + 16) = 0;
  v1 = *(_QWORD *)(v0 + 248);
  sub_21C2F50EC(*(_QWORD *)(v0 + 40), v1, &qword_25525C138);
  v2 = sub_21C3A76C8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v5 = v4(v1, 1, v2);
  v6 = *(_QWORD *)(v0 + 248);
  if (v5 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 248), &qword_25525C138);
    v76 = 0;
  }
  else
  {
    v76 = (const __CFURL *)sub_21C3A7668();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  }
  v7 = *(_QWORD *)(v0 + 240);
  sub_21C2F50EC(*(_QWORD *)(v0 + 48), v7, &qword_25525C138);
  v8 = v4(v7, 1, v2);
  v9 = *(_QWORD *)(v0 + 240);
  if (v8 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 240), &qword_25525C138);
    v75 = 0;
  }
  else
  {
    v75 = (const __CFURL *)sub_21C3A7668();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9, v2);
  }
  v10 = *(_QWORD *)(v0 + 232);
  sub_21C2F50EC(*(_QWORD *)(v0 + 56), v10, &qword_25525C138);
  v11 = v4(v10, 1, v2);
  v12 = *(_QWORD *)(v0 + 232);
  if (v11 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 232), &qword_25525C138);
    v74 = 0;
  }
  else
  {
    v74 = (const __CFURL *)sub_21C3A7668();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
  }
  if (qword_25525AAC0 != -1)
    swift_once();
  v13 = *(_QWORD *)(v0 + 88);
  v14 = (void *)qword_255278F20;
  v15 = (void *)sub_21C3A7EB4();
  v16 = (void *)sub_21C3A7EB4();
  v17 = (void *)sub_21C3A7EB4();
  v18 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, v16, v17);

  sub_21C3A7ED8();
  alertHeader = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  if (v13)
  {
    v19 = (void *)qword_255278F20;
    v20 = (void *)sub_21C3A7EB4();
    v21 = (void *)sub_21C3A7EB4();
    v22 = (void *)sub_21C3A7EB4();
    v23 = objc_msgSend(v19, sel_localizedStringForKey_value_table_, v20, v21, v22);

    sub_21C3A7ED8();
    v24 = (__CFString *)sub_21C3A7EB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0;
  }
  v25 = *(_QWORD *)(v0 + 120);
  v26 = (void *)qword_255278F20;
  v27 = (void *)sub_21C3A7EB4();
  v28 = (void *)sub_21C3A7EB4();
  v29 = (void *)sub_21C3A7EB4();
  v30 = objc_msgSend(v26, sel_localizedStringForKey_value_table_, v27, v28, v29);

  sub_21C3A7ED8();
  v31 = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  if (!v25)
  {
    v37 = 0;
    if (*(_QWORD *)(v0 + 136))
      goto LABEL_17;
LABEL_19:
    otherButtonTitle = 0;
    goto LABEL_20;
  }
  v32 = (void *)qword_255278F20;
  v33 = (void *)sub_21C3A7EB4();
  v34 = (void *)sub_21C3A7EB4();
  v35 = (void *)sub_21C3A7EB4();
  v36 = objc_msgSend(v32, sel_localizedStringForKey_value_table_, v33, v34, v35);

  sub_21C3A7ED8();
  v37 = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 136))
    goto LABEL_19;
LABEL_17:
  v38 = (void *)qword_255278F20;
  v39 = (void *)sub_21C3A7EB4();
  v40 = (void *)sub_21C3A7EB4();
  v41 = (void *)sub_21C3A7EB4();
  v42 = objc_msgSend(v38, (SEL)&stru_24E03C410.type + 3, v39, v40, v41);

  sub_21C3A7ED8();
  otherButtonTitle = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
LABEL_20:
  CFUserNotificationDisplayAlert(*(CFTimeInterval *)(v0 + 24), *(_QWORD *)(v0 + 32), v76, v75, v74, alertHeader, v24, v31, v37, otherButtonTitle, (CFOptionFlags *)(v0 + 16));

  switch(*(_QWORD *)(v0 + 16))
  {
    case 0:
      v44 = *(void (**)(void))(v0 + 144);
      if (v44)
        v44();
      goto LABEL_53;
    case 1:
      v55 = *(void (**)(uint64_t))(v0 + 160);
      if (v55)
        goto LABEL_32;
      if (qword_25525AAE8 != -1)
        swift_once();
      v62 = *(_QWORD *)(v0 + 224);
      v63 = __swift_project_value_buffer(*(_QWORD *)(v0 + 192), (uint64_t)qword_255278F90);
      sub_21C2F50EC(v63, v62, (uint64_t *)&unk_25525B0E0);
      v47 = sub_21C3A79D4();
      v48 = *(_QWORD *)(v47 - 8);
      v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v62, 1, v47);
      v50 = *(_QWORD *)(v0 + 224);
      if (v64 == 1)
        goto LABEL_48;
      v51 = sub_21C3A79BC();
      v65 = sub_21C3A81B4();
      if (os_log_type_enabled(v51, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v66 = 0;
        _os_log_impl(&dword_21C2CD000, v51, v65, "No Alternate button handler", v66, 2u);
        MEMORY[0x22077AF8C](v66, -1, -1);
      }
      v54 = *(_QWORD *)(v0 + 224);
      goto LABEL_52;
    case 2:
      v55 = *(void (**)(uint64_t))(v0 + 176);
      if (v55)
      {
LABEL_32:
        v56 = swift_retain();
        v55(v56);
        sub_21C2F7984((uint64_t)v55);
      }
      else
      {
        if (qword_25525AAE8 != -1)
          swift_once();
        v67 = *(_QWORD *)(v0 + 216);
        v68 = __swift_project_value_buffer(*(_QWORD *)(v0 + 192), (uint64_t)qword_255278F90);
        sub_21C2F50EC(v68, v67, (uint64_t *)&unk_25525B0E0);
        v47 = sub_21C3A79D4();
        v48 = *(_QWORD *)(v47 - 8);
        v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v67, 1, v47);
        v50 = *(_QWORD *)(v0 + 216);
        if (v69 == 1)
        {
LABEL_48:
          sub_21C2D775C(v50, (uint64_t *)&unk_25525B0E0);
        }
        else
        {
          v51 = sub_21C3A79BC();
          v70 = sub_21C3A81B4();
          if (os_log_type_enabled(v51, v70))
          {
            v71 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v71 = 0;
            _os_log_impl(&dword_21C2CD000, v51, v70, "No Other button handler", v71, 2u);
            MEMORY[0x22077AF8C](v71, -1, -1);
          }
          v54 = *(_QWORD *)(v0 + 216);
LABEL_52:

          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v54, v47);
        }
      }
LABEL_53:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    case 3:
      if (qword_25525AAE8 != -1)
        swift_once();
      v57 = *(_QWORD *)(v0 + 208);
      v58 = __swift_project_value_buffer(*(_QWORD *)(v0 + 192), (uint64_t)qword_255278F90);
      sub_21C2F50EC(v58, v57, (uint64_t *)&unk_25525B0E0);
      v47 = sub_21C3A79D4();
      v48 = *(_QWORD *)(v47 - 8);
      v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v57, 1, v47);
      v50 = *(_QWORD *)(v0 + 208);
      if (v59 == 1)
        goto LABEL_48;
      v51 = sub_21C3A79BC();
      v60 = sub_21C3A81B4();
      if (os_log_type_enabled(v51, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v61 = 0;
        _os_log_impl(&dword_21C2CD000, v51, v60, "The Alert timed out", v61, 2u);
        MEMORY[0x22077AF8C](v61, -1, -1);
      }
      v54 = *(_QWORD *)(v0 + 208);
      goto LABEL_52;
    default:
      if (qword_25525AAE8 != -1)
        swift_once();
      v45 = *(_QWORD *)(v0 + 200);
      v46 = __swift_project_value_buffer(*(_QWORD *)(v0 + 192), (uint64_t)qword_255278F90);
      sub_21C2F50EC(v46, v45, (uint64_t *)&unk_25525B0E0);
      v47 = sub_21C3A79D4();
      v48 = *(_QWORD *)(v47 - 8);
      v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v45, 1, v47);
      v50 = *(_QWORD *)(v0 + 200);
      if (v49 == 1)
        goto LABEL_48;
      v51 = sub_21C3A79BC();
      v52 = sub_21C3A81C0();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        _os_log_impl(&dword_21C2CD000, v51, v52, "Unexpected response received from Alert", v53, 2u);
        MEMORY[0x22077AF8C](v53, -1, -1);
      }
      v54 = *(_QWORD *)(v0 + 200);
      goto LABEL_52;
  }
}

uint64_t static Utilities.showBluetoothDisabledDialog(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAE8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v15, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v18, (uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  v19 = sub_21C3A79D4();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_21C2D775C((uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v3, 0xD000000000000025, 0x800000021C3BF3B0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = v3;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  v23 = sub_21C3A76C8();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v14, 1, 1, v23);
  v24(v11, 1, 1, v23);
  v24(v8, 1, 1, v23);
  swift_retain_n();
  sub_21C393AFC(0xD00000000000001ELL, 0x800000021C3BF360, 0xD000000000000020, 0x800000021C3BF380, 0x53474E4954544553, 0xE800000000000000, (uint64_t)sub_21C393AA0, (uint64_t)v21, 0.0, 0x4C45434E4143, 0xE600000000000000, (uint64_t)sub_21C393ADC, v22, 0, 0, 0, 0, 0, (uint64_t)v14,
    (uint64_t)v11,
    (uint64_t)v8);
  swift_release();
  swift_release();
  sub_21C2D775C((uint64_t)v8, &qword_25525C138);
  sub_21C2D775C((uint64_t)v11, &qword_25525C138);
  return sub_21C2D775C((uint64_t)v14, &qword_25525C138);
}

uint64_t static Utilities.showNFCDisabledDialog(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAE8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v15, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v18, (uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  v19 = sub_21C3A79D4();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_21C2D775C((uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v3, 0xD00000000000001FLL, 0x800000021C3BF420, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = v3;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  v23 = sub_21C3A76C8();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v14, 1, 1, v23);
  v24(v11, 1, 1, v23);
  v24(v8, 1, 1, v23);
  swift_retain_n();
  sub_21C393AFC(0xD000000000000018, 0x800000021C3BF3E0, 0xD00000000000001ALL, 0x800000021C3BF400, 0x53474E4954544553, 0xE800000000000000, (uint64_t)sub_21C393E54, (uint64_t)v21, 0.0, 0x4C45434E4143, 0xE600000000000000, (uint64_t)sub_21C393E90, v22, 0, 0, 0, 0, 0, (uint64_t)v14,
    (uint64_t)v11,
    (uint64_t)v8);
  swift_release();
  swift_release();
  sub_21C2D775C((uint64_t)v8, &qword_25525C138);
  sub_21C2D775C((uint64_t)v11, &qword_25525C138);
  return sub_21C2D775C((uint64_t)v14, &qword_25525C138);
}

id sub_21C38F4D8(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id result;
  void *v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  const char *v28;

  v28 = a6;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21C3A76C8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(1, v15);
  sub_21C3A76B0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_21C2D775C((uint64_t)v12, &qword_25525C138);
    if (qword_25525AAE8 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v7, (uint64_t)qword_255278F90);
    sub_21C2F50EC(v18, (uint64_t)v9, (uint64_t *)&unk_25525B0E0);
    v19 = sub_21C3A79D4();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19) == 1)
    {
      return (id)sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v24 = sub_21C3A79BC();
      v25 = sub_21C3A81C0();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_21C2CD000, v24, v25, v28, v26, 2u);
        MEMORY[0x22077AF8C](v26, -1, -1);
      }

      return (id)(*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v19);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v13);
    result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
    if (result)
    {
      v22 = result;
      v23 = (void *)sub_21C3A7668();
      objc_msgSend(v22, sel_openSensitiveURL_withOptions_, v23, 0);

      return (id)(*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_21C38F798(uint64_t (*a1)(_QWORD), uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAE8 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v5, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v8, (uint64_t)v7, (uint64_t *)&unk_25525B0E0);
  v9 = sub_21C3A79D4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_21C2D775C((uint64_t)v7, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v11 = sub_21C3A79BC();
    v12 = sub_21C3A81B4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21C2CD000, v11, v12, a3, v13, 2u);
      MEMORY[0x22077AF8C](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  return a1(0);
}

uint64_t static Utilities.showTwoFactorAuthDisabledDialog(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAE8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v15, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v18, (uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  v19 = sub_21C3A79D4();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_21C2D775C((uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v3, 0xD000000000000029, 0x800000021C3BF480, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = v3;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  v23 = sub_21C3A76C8();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v14, 1, 1, v23);
  v24(v11, 1, 1, v23);
  v24(v8, 1, 1, v23);
  swift_retain_n();
  sub_21C393AFC(0xD00000000000001BLL, 0x800000021C3BF440, 0xD00000000000001DLL, 0x800000021C3BF460, 0x53474E4954544553, 0xE800000000000000, (uint64_t)sub_21C393EB0, (uint64_t)v21, 0.0, 0x4C45434E4143, 0xE600000000000000, (uint64_t)sub_21C393F10, v22, 0, 0, 0, 0, 0, (uint64_t)v14,
    (uint64_t)v11,
    (uint64_t)v8);
  swift_release();
  swift_release();
  sub_21C2D775C((uint64_t)v8, &qword_25525C138);
  sub_21C2D775C((uint64_t)v11, &qword_25525C138);
  return sub_21C2D775C((uint64_t)v14, &qword_25525C138);
}

uint64_t static Utilities.showPasscodeDisabledDialog(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAE8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v15, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v18, (uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  v19 = sub_21C3A79D4();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_21C2D775C((uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v3, 0xD000000000000024, 0x800000021C3BF4F0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = v3;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  v23 = sub_21C3A76C8();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v14, 1, 1, v23);
  v24(v11, 1, 1, v23);
  v24(v8, 1, 1, v23);
  swift_retain_n();
  sub_21C393AFC(0xD000000000000014, 0x800000021C3BF4B0, 0xD000000000000016, 0x800000021C3BF4D0, 0x53474E4954544553, 0xE800000000000000, (uint64_t)sub_21C393F30, (uint64_t)v21, 0.0, 0x4C45434E4143, 0xE600000000000000, (uint64_t)sub_21C393F6C, v22, 0, 0, 0, 0, 0, (uint64_t)v14,
    (uint64_t)v11,
    (uint64_t)v8);
  swift_release();
  swift_release();
  sub_21C2D775C((uint64_t)v8, &qword_25525C138);
  sub_21C2D775C((uint64_t)v11, &qword_25525C138);
  return sub_21C2D775C((uint64_t)v14, &qword_25525C138);
}

uint64_t static Utilities.showICloudSignedOutDialog(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAE8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v15, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v18, (uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  v19 = sub_21C3A79D4();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
  {
    sub_21C2D775C((uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v3, 0xD000000000000023, 0x800000021C3BF580, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = v3;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  v23 = sub_21C3A76C8();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v14, 1, 1, v23);
  v24(v11, 1, 1, v23);
  v24(v8, 1, 1, v23);
  swift_retain_n();
  sub_21C393AFC(0xD000000000000021, 0x800000021C3BF520, 0xD000000000000023, 0x800000021C3BF550, 0x53474E4954544553, 0xE800000000000000, (uint64_t)sub_21C393F8C, (uint64_t)v21, 0.0, 0x4C45434E4143, 0xE600000000000000, (uint64_t)sub_21C393FD0, v22, 0, 0, 0, 0, 0, (uint64_t)v14,
    (uint64_t)v11,
    (uint64_t)v8);
  swift_release();
  swift_release();
  sub_21C2D775C((uint64_t)v8, &qword_25525C138);
  sub_21C2D775C((uint64_t)v11, &qword_25525C138);
  return sub_21C2D775C((uint64_t)v14, &qword_25525C138);
}

uint64_t static Utilities.showOSVersionNotSupportedDialog(handler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAE8 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v1, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v4, (uint64_t)v3, (uint64_t *)&unk_25525B0E0);
  v5 = sub_21C3A79D4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_21C2D775C((uint64_t)v3, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0, 0xD000000000000029, 0x800000021C3BF5E0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  }
  if (qword_25525AAC0 != -1)
    swift_once();
  v7 = (void *)qword_255278F20;
  v8 = (void *)sub_21C3A7EB4();
  v9 = (void *)sub_21C3A7EB4();
  v10 = (void *)sub_21C3A7EB4();
  v11 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, v9, v10);

  v12 = sub_21C3A7ED8();
  v14 = v13;

  type metadata accessor for BaselineErrorDialog();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = v12;
  v15[4] = v14;
  sub_21C2F66B4();
  return swift_release();
}

uint64_t static Utilities.showContinuityDisplayNotAllowedDialog(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAE8 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v14, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v17, (uint64_t)v16, (uint64_t *)&unk_25525B0E0);
  v18 = sub_21C3A79D4();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
  {
    sub_21C2D775C((uint64_t)v16, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v2, 0xD000000000000029, 0x800000021C3BF610, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  v20 = sub_21C3A76C8();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v13, 1, 1, v20);
  v21(v10, 1, 1, v20);
  v21(v7, 1, 1, v20);
  sub_21C393AFC(a1, a2, 0, 0, 19279, 0xE200000000000000, 0, 0, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (uint64_t)v13,
    (uint64_t)v10,
    (uint64_t)v7);
  sub_21C2D775C((uint64_t)v7, &qword_25525C138);
  sub_21C2D775C((uint64_t)v10, &qword_25525C138);
  return sub_21C2D775C((uint64_t)v13, &qword_25525C138);
}

void static Utilities.showLowMemoryDialog()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  __CFString *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  __CFString *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  __CFString *v24;
  uint64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAE8 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v1, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v4, (uint64_t)v3, (uint64_t *)&unk_25525B0E0);
  v5 = sub_21C3A79D4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_21C2D775C((uint64_t)v3, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0, 0xD000000000000015, 0x800000021C3BF680, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  }
  if (qword_25525AAC0 != -1)
    swift_once();
  v7 = (void *)qword_255278F20;
  v8 = (void *)sub_21C3A7EB4();
  v9 = (void *)sub_21C3A7EB4();
  v10 = (void *)sub_21C3A7EB4();
  v11 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, v9, v10);

  sub_21C3A7ED8();
  v12 = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v13 = (void *)qword_255278F20;
  v14 = (void *)sub_21C3A7EB4();
  v15 = (void *)sub_21C3A7EB4();
  v16 = (void *)sub_21C3A7EB4();
  v17 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, v15, v16);

  sub_21C3A7ED8();
  v18 = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v19 = (void *)qword_255278F20;
  v20 = (void *)sub_21C3A7EB4();
  v21 = (void *)sub_21C3A7EB4();
  v22 = (void *)sub_21C3A7EB4();
  v23 = objc_msgSend(v19, sel_localizedStringForKey_value_table_, v20, v21, v22);

  sub_21C3A7ED8();
  v24 = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  CFUserNotificationDisplayNotice(0.0, 0, 0, 0, 0, v12, v18, v24);

}

void static Utilities.showOSRestoreDialog()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  __CFString *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  __CFString *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  __CFString *v24;
  uint64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAE8 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v1, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v4, (uint64_t)v3, (uint64_t *)&unk_25525B0E0);
  v5 = sub_21C3A79D4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_21C2D775C((uint64_t)v3, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0, 0xD000000000000015, 0x800000021C3BF6E0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  }
  if (qword_25525AAC0 != -1)
    swift_once();
  v7 = (void *)qword_255278F20;
  v8 = (void *)sub_21C3A7EB4();
  v9 = (void *)sub_21C3A7EB4();
  v10 = (void *)sub_21C3A7EB4();
  v11 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, v9, v10);

  sub_21C3A7ED8();
  v12 = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v13 = (void *)qword_255278F20;
  v14 = (void *)sub_21C3A7EB4();
  v15 = (void *)sub_21C3A7EB4();
  v16 = (void *)sub_21C3A7EB4();
  v17 = objc_msgSend(v13, sel_localizedStringForKey_value_table_, v14, v15, v16);

  sub_21C3A7ED8();
  v18 = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v19 = (void *)qword_255278F20;
  v20 = (void *)sub_21C3A7EB4();
  v21 = (void *)sub_21C3A7EB4();
  v22 = (void *)sub_21C3A7EB4();
  v23 = objc_msgSend(v19, sel_localizedStringForKey_value_table_, v20, v21, v22);

  sub_21C3A7ED8();
  v24 = (__CFString *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  CFUserNotificationDisplayNotice(0.0, 0, 0, 0, 0, v12, v18, v24);

}

uint64_t static Utilities.primaryEmailOrUsername()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  id v33;
  void *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v50;
  uint64_t v51;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v50 - v5;
  MEMORY[0x24BDAC7A8](v7);
  v51 = (uint64_t)&v50 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v50 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v50 - v13;
  if (qword_25525AAE8 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v1, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v15, (uint64_t)v14, (uint64_t *)&unk_25525B0E0);
  v16 = sub_21C3A79D4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v14, 1, v16) == 1)
  {
    sub_21C2D775C((uint64_t)v14, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0, 0xD000000000000018, 0x800000021C3BF700, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB4398]), sel_init);
  v20 = objc_msgSend(v19, sel_aa_primaryAppleAccount);
  if (!v20)
  {
    sub_21C2F50EC(v15, (uint64_t)v3, (uint64_t *)&unk_25525B0E0);
    if (v18(v3, 1, v16) != 1)
    {
      v30 = sub_21C3A79BC();
      v31 = sub_21C3A81D8();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_21C2CD000, v30, v31, "No account", v32, 2u);
        MEMORY[0x22077AF8C](v32, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
      return 0;
    }

    v29 = (uint64_t)v3;
    goto LABEL_32;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_aa_primaryEmail);
  v50 = v17;
  if (v22)
  {
    v23 = v22;
    v24 = sub_21C3A7ED8();
    v26 = v25;

    v27 = HIBYTE(v26) & 0xF;
    if ((v26 & 0x2000000000000000) == 0)
      v27 = v24 & 0xFFFFFFFFFFFFLL;
    if (v27)
    {
      sub_21C2F50EC(v15, (uint64_t)v11, (uint64_t *)&unk_25525B0E0);
      if (v18(v11, 1, v16) == 1)
      {

        v28 = (uint64_t)v11;
LABEL_25:
        sub_21C2D775C(v28, (uint64_t *)&unk_25525B0E0);
        return v24;
      }
      v40 = sub_21C3A79BC();
      v41 = sub_21C3A81D8();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_21C2CD000, v40, v41, "Primary email is good", v42, 2u);
        MEMORY[0x22077AF8C](v42, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v16);
      return v24;
    }
    swift_bridgeObjectRelease();
    v17 = v50;
  }
  v33 = objc_msgSend(v21, sel_username, v50);
  if (!v33)
  {
LABEL_30:
    sub_21C2F50EC(v15, (uint64_t)v6, (uint64_t *)&unk_25525B0E0);
    if (v18(v6, 1, v16) != 1)
    {
      v43 = sub_21C3A79BC();
      v44 = sub_21C3A81D8();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        _os_log_impl(&dword_21C2CD000, v43, v44, "both primary email and username are empty", v45, 2u);
        MEMORY[0x22077AF8C](v45, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
      return 0;
    }

    v29 = (uint64_t)v6;
LABEL_32:
    sub_21C2D775C(v29, (uint64_t *)&unk_25525B0E0);
    return 0;
  }
  v34 = v33;
  v24 = sub_21C3A7ED8();
  v36 = v35;

  v37 = HIBYTE(v36) & 0xF;
  if ((v36 & 0x2000000000000000) == 0)
    v37 = v24 & 0xFFFFFFFFFFFFLL;
  if (!v37)
  {
    swift_bridgeObjectRelease();
    v17 = v50;
    goto LABEL_30;
  }
  v38 = v15;
  v39 = v51;
  sub_21C2F50EC(v38, v51, (uint64_t *)&unk_25525B0E0);
  if (v18((char *)v39, 1, v16) == 1)
  {

    v28 = v39;
    goto LABEL_25;
  }
  v46 = sub_21C3A79BC();
  v47 = sub_21C3A81D8();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v48 = 0;
    _os_log_impl(&dword_21C2CD000, v46, v47, "User name is good", v48, 2u);
    MEMORY[0x22077AF8C](v48, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v39, v16);
  return v24;
}

uint64_t static Utilities.dispatchToMainIfNeeded(block:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v4 = sub_21C3A7DA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21C3A7DB8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    return a1();
  sub_21C2D7704(0, (unint64_t *)&qword_25525B308);
  v17 = sub_21C3A8214();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  aBlock[4] = sub_21C30A794;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C3309B4;
  aBlock[3] = &block_descriptor_7;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_21C3A7DAC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_21C2D1198((unint64_t *)&qword_25525D928, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D930);
  sub_21C3105F0(&qword_25525D938, &qword_25525D930, MEMORY[0x24BEE12C8]);
  sub_21C3A834C();
  v15 = (void *)v17;
  MEMORY[0x22077A410](0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static Utilities.toSHA256(payload:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_21C3A7E24();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_21C3A7DE8();
  MEMORY[0x24BDAC7A8](v6);
  swift_bridgeObjectRetain();
  sub_21C38CA1C(a1, a2);
  v8 = v7;
  sub_21C2D1198(&qword_25525EC78, v5, MEMORY[0x24BDC6AE8]);
  sub_21C3A7DDC();
  __asm { BR              X10 }
}

uint64_t sub_21C391738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 - 120) = v3;
  *(_WORD *)(v6 - 112) = v4;
  *(_BYTE *)(v6 - 110) = BYTE2(v4);
  *(_BYTE *)(v6 - 109) = BYTE3(v4);
  *(_BYTE *)(v6 - 108) = BYTE4(v4);
  *(_BYTE *)(v6 - 107) = BYTE5(v4);
  sub_21C3A7DC4();
  sub_21C2D2B48(v3, v4);
  sub_21C3A7DD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 136) + 8))(v2, v1);
  sub_21C2D2B48(v3, v4);
  *(_QWORD *)(v6 - 120) = sub_21C38CF3C(v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ECD0);
  sub_21C3105F0((unint64_t *)&qword_25525C220, (uint64_t *)&unk_25525ECD0, MEMORY[0x24BEE12B0]);
  v7 = sub_21C3A7E84();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 128) + 8))(v0, v5);
  return v7;
}

uint64_t static Utilities.osVersionBuildString()()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_operatingSystemVersionString);

  v2 = sub_21C3A7ED8();
  return v2;
}

uint64_t static Utilities.osVersion()()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_processInfo);
  objc_msgSend(v1, sel_operatingSystemVersion);
  v2 = v9;

  v9 = v2;
  v12 = sub_21C3A8628();
  v13 = v3;
  sub_21C3A7F8C();
  v4 = objc_msgSend(v0, sel_processInfo);
  objc_msgSend(v4, sel_operatingSystemVersion);
  v5 = v10;

  v9 = v5;
  sub_21C3A8628();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  v6 = objc_msgSend(v0, sel_processInfo);
  objc_msgSend(v6, sel_operatingSystemVersion);
  v7 = v11;

  v9 = v7;
  sub_21C3A8628();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t Utilities.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Utilities.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21C391B90(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_21C3A7FEC();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x22077A1AC](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_21C391C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_21C394550();
  swift_bridgeObjectRetain();
  v7 = sub_21C3A8004();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_21C391F74();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_21C3A8418();
  }
LABEL_7:
  v13 = sub_21C391CF8(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_21C391CF8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_21C391F74()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_21C3A8010();
  v4 = sub_21C391FF0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21C391FF0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_21C392134(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_21C350828(v9, 0);
      v12 = sub_21C392220((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x22077A128](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x22077A128);
LABEL_9:
      sub_21C3A8418();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x22077A128]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_21C392134(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_21C391B90(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_21C391B90(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_21C3A7FD4();
  }
  __break(1u);
  return result;
}

unint64_t sub_21C392220(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_21C391B90(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_21C3A7FE0();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_21C3A8418();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_21C391B90(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_21C3A7FBC();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_21C392430()
{
  __asm { BR              X11 }
}

_QWORD *sub_21C392490@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_21C392720@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_21C393408(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_21C3934C8((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_21C393540((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_21C392794(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_21C3927F8(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_21C3A74C4();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_21C3A74E8();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_21C3A74DC();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_21C3928A4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_21C3A8418();
  }
  result = sub_21C392B5C((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_21C392974(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_21C3A74C4();
  if (!result || (result = sub_21C3A74E8(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_21C3A74DC();
      sub_21C3A7E24();
      sub_21C2D1198(&qword_25525EC78, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_21C3A7DC4();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21C392A38@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_21C3A83E8();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_21C392AC0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_21C3A7F74();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_21C3A8010();
  }
  __break(1u);
  return result;
}

uint64_t sub_21C392B5C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_21C391B90(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_95;
  result = sub_21C3A7FD4();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_21C391B90(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_21C391B90(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_91;
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  result = sub_21C3A7FD4();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 48;
        v32 = a6 + 55;
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v31 = 58;
        }
        else
        {
          v33 = 97;
          v32 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                if (v36 < 0x61 || v36 >= v33)
                  return v29;
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
              return 0;
            v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37)))
              return 0;
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v39 = a6 + 48;
      v40 = a6 + 55;
      v41 = a6 + 87;
      if (a6 > 10)
      {
        v39 = 58;
      }
      else
      {
        v41 = 97;
        v40 = 65;
      }
      if (v19)
      {
        v42 = 0;
        do
        {
          v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              v29 = 0;
              if (v43 < 0x61 || v43 >= v41)
                return v29;
              v44 = -87;
            }
            else
            {
              v44 = -55;
            }
          }
          else
          {
            v44 = -48;
          }
          v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63)
            return 0;
          v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44)))
            return 0;
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
            return 0;
          v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28)))
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

BOOL _s15ProximityReader9UtilitiesC17isDeviceSupportedSbyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint8_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __int16 v37;
  uint64_t v38;
  char v39;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  utsname v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  bzero(&v46, 0x500uLL);
  uname(&v46);
  v3 = sub_21C3A7F98();
  v5 = v4;
  if (qword_25525AAE8 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v0, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v6, (uint64_t)v2, (uint64_t *)&unk_25525B0E0);
  v7 = sub_21C3A79D4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) == 1)
  {
    sub_21C2D775C((uint64_t)v2, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v9 = sub_21C3A79BC();
    v10 = sub_21C3A81D8();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v43 = v3;
      v12 = (uint8_t *)v11;
      v13 = swift_slowAlloc();
      *(_QWORD *)v46.sysname = v13;
      *(_DWORD *)v12 = 136315138;
      v42[1] = v12 + 4;
      swift_bridgeObjectRetain();
      v44 = sub_21C350398(v43, v5, (uint64_t *)v46.sysname);
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21C2CD000, v9, v10, "model: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v13, -1, -1);
      v14 = v12;
      v3 = v43;
      MEMORY[0x22077AF8C](v14, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v2, v7);
  }
  *(_QWORD *)v46.sysname = v3;
  *(_QWORD *)&v46.sysname[8] = v5;
  v44 = 0x656E6F685069;
  v45 = 0xE600000000000000;
  sub_21C394484();
  sub_21C3944C8();
  if ((sub_21C3A7E78() & 1) == 0)
    goto LABEL_25;
  if (sub_21C3A7F5C() <= 6)
    goto LABEL_25;
  v15 = sub_21C392AC0(6uLL, v3, v5);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)v46.sysname = v15;
  *(_QWORD *)&v46.sysname[8] = v17;
  *(_QWORD *)&v46.sysname[16] = v19;
  *(_QWORD *)&v46.sysname[24] = v21;
  sub_21C39450C();
  v22 = (_QWORD *)sub_21C3A8334();
  swift_bridgeObjectRelease();
  if (v22[2] != 2)
    goto LABEL_25;
  v23 = v22[4];
  v24 = v22[5];
  if (!((v24 ^ (unint64_t)v23) >> 14))
    goto LABEL_25;
  v26 = v22[6];
  v25 = v22[7];
  v27 = sub_21C3928A4(v22[4], v22[5], v26, v25, 10);
  if ((v28 & 0x100) != 0)
  {
    swift_bridgeObjectRetain();
    v29 = (uint64_t)sub_21C391C08(v23, v24, v26, v25, 10);
    v31 = v30;
    swift_bridgeObjectRelease();
    if ((v31 & 1) != 0)
      goto LABEL_25;
  }
  else
  {
    if ((v28 & 1) != 0)
      goto LABEL_25;
    v29 = v27;
  }
  if (v22[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_25;
  }
  v32 = v22[8];
  v33 = v22[9];
  v35 = v22[10];
  v34 = v22[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!((v33 ^ v32) >> 14))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  v36 = sub_21C3928A4(v32, v33, v35, v34, 10);
  if ((v37 & 0x100) != 0)
    v36 = (uint64_t)sub_21C391C08(v32, v33, v35, v34, 10);
  v38 = v36;
  v39 = v37;
  swift_bridgeObjectRelease();
  if ((v39 & 1) != 0)
    return 0;
  if (v29 > 11)
    return 1;
  return v29 == 11 && v38 > 1;
}

uint64_t sub_21C393408(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_21C3934C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_21C3A74F4();
  swift_allocObject();
  result = sub_21C3A74B8();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_21C3A7704();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_21C393540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_21C3A74F4();
  swift_allocObject();
  result = sub_21C3A74B8();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_21C3935C0(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552602D0);
  v10 = sub_21C3105F0(&qword_2552602D8, &qword_2552602D0, MEMORY[0x24BDCFBE0]);
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_21C392720(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

_BYTE *sub_21C393670(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_21C393408(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_21C3934C8((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_21C393540((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_21C3936D4(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_21C3A74F4();
      swift_allocObject();
      sub_21C3A74D0();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_21C3A7704();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_21C393770()
{
  return sub_21C3939AC();
}

id sub_21C393780@<X0>(char *a1@<X8>)
{
  return sub_21C38D384(a1);
}

uint64_t sub_21C393798(void *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _DWORD v15[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)&v3 = MEMORY[0x24BDAC7A8](v2).n128_u64[0];
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_status, v3);
  v7 = objc_msgSend(a1, sel_isScreening);
  if (qword_25525AAE8 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255278F90);
  sub_21C2F50EC(v8, (uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  v9 = sub_21C3A79D4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v11 = sub_21C3A79BC();
    v12 = sub_21C3A81D8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      *(_DWORD *)v13 = 67109376;
      v15[3] = v6 == 1;
      sub_21C3A82F8();
      *(_WORD *)(v13 + 8) = 1024;
      v15[2] = v7;
      sub_21C3A82F8();
      _os_log_impl(&dword_21C2CD000, v11, v12, "Call: isActive [ %{BOOL}d ] isScreening [ %{BOOL}d ]", (uint8_t *)v13, 0xEu);
      MEMORY[0x22077AF8C](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
  }
  if (v6 == 1)
    return v7;
  else
    return 0;
}

uint64_t sub_21C39399C()
{
  return sub_21C3939AC();
}

uint64_t sub_21C3939AC()
{
  uint64_t result;
  void *v1;
  uint64_t v2;

  result = CPSharedResourcesDirectory();
  if (result)
  {
    v1 = (void *)result;
    v2 = sub_21C3A7ED8();

    sub_21C3A7F8C();
    sub_21C3A83DC();
    swift_bridgeObjectRelease();
    sub_21C3A7F8C();
    sub_21C3A7F8C();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21C393A7C()
{
  swift_release();
  return swift_deallocObject();
}

id sub_21C393AA0()
{
  uint64_t v0;

  return sub_21C38F4D8(*(void (**)(uint64_t, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), 0xD000000000000014, 0x800000021C3BF7F0, "Could not generate URL for BT settings");
}

uint64_t sub_21C393ADC()
{
  uint64_t v0;

  return sub_21C38F798(*(uint64_t (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), "Bluetooth Required Alert was dismissed");
}

uint64_t sub_21C393AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v86 = a7;
  v87 = a8;
  v82 = a5;
  v83 = a6;
  v79 = a3;
  v80 = a4;
  v88 = a17;
  v84 = a13;
  v85 = a16;
  v81 = a12;
  v77 = a14;
  v78 = a15;
  v75 = a2;
  v76 = a11;
  v73 = a1;
  v74 = a10;
  v71 = a18;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  MEMORY[0x24BDAC7A8](v22);
  v70 = (uint64_t)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v66 - v26;
  v69 = (uint64_t)&v66 - v26;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v66 - v29;
  v68 = (uint64_t)&v66 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v33;
  v34 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
  sub_21C2F50EC(a19, (uint64_t)v30, &qword_25525C138);
  sub_21C2F50EC(a20, (uint64_t)v27, &qword_25525C138);
  sub_21C2F50EC(a21, (uint64_t)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_25525C138);
  v35 = *(unsigned __int8 *)(v23 + 80);
  v36 = (v35 + 48) & ~v35;
  v37 = (v24 + v35 + v36) & ~v35;
  v38 = (v24 + v35 + v37) & ~v35;
  v39 = (v24 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v42 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  v43 = (v42 + 23) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v43 + 23) & 0xFFFFFFFFFFFFFFF8;
  v66 = (v44 + 23) & 0xFFFFFFFFFFFFFFF8;
  v67 = (v66 + 23) & 0xFFFFFFFFFFFFFFF8;
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = 0;
  *(_QWORD *)(v45 + 24) = 0;
  *(double *)(v45 + 32) = a9;
  *(_QWORD *)(v45 + 40) = v71;
  sub_21C34BF54(v68, v45 + v36);
  sub_21C34BF54(v69, v45 + v37);
  sub_21C34BF54(v70, v45 + v38);
  v46 = (_QWORD *)(v45 + v39);
  v47 = v75;
  *v46 = v73;
  v46[1] = v47;
  v48 = (_QWORD *)(v45 + v40);
  v49 = v80;
  *v48 = v79;
  v48[1] = v49;
  v50 = (_QWORD *)(v45 + v41);
  v51 = v83;
  *v50 = v82;
  v50[1] = v51;
  v52 = (_QWORD *)(v45 + v42);
  v53 = v76;
  *v52 = v74;
  v52[1] = v53;
  v54 = (_QWORD *)(v45 + v43);
  v55 = v78;
  *v54 = v77;
  v54[1] = v55;
  v56 = (uint64_t *)(v45 + v44);
  v58 = v86;
  v57 = v87;
  *v56 = v86;
  v56[1] = v57;
  v59 = (uint64_t *)(v45 + v66);
  v60 = v81;
  v62 = v84;
  v61 = v85;
  *v59 = v81;
  v59[1] = v62;
  v63 = (uint64_t *)(v45 + v67);
  v64 = v88;
  *v63 = v61;
  v63[1] = v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C34B3E8(v58);
  sub_21C34B3E8(v60);
  sub_21C34B3E8(v61);
  sub_21C2DDA54((uint64_t)v72, (uint64_t)&unk_2552602C0, v45);
  return swift_release();
}

id sub_21C393E54()
{
  uint64_t v0;

  return sub_21C38F4D8(*(void (**)(uint64_t, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), 0xD000000000000020, 0x800000021C3BF7C0, "Could not generate URL for NFC settings");
}

uint64_t sub_21C393E90()
{
  uint64_t v0;

  return sub_21C38F798(*(uint64_t (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), "NFC Required Alert was dismissed");
}

id sub_21C393EB0()
{
  uint64_t v0;

  return sub_21C38F4D8(*(void (**)(uint64_t, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), 0xD000000000000033, 0x800000021C3BF780, "Could not generate URL for iCloud two factor settings");
}

uint64_t sub_21C393EEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C393F10()
{
  uint64_t v0;

  return sub_21C38F798(*(uint64_t (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), "iCloud two factor auth alert was dismissed");
}

id sub_21C393F30()
{
  uint64_t v0;

  return sub_21C38F4D8(*(void (**)(uint64_t, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), 0xD000000000000031, 0x800000021C3BF740, "Could not generate URL for passcode settings");
}

uint64_t sub_21C393F6C()
{
  uint64_t v0;

  return sub_21C38F798(*(uint64_t (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), "Passcode alert was dismissed");
}

id sub_21C393F8C()
{
  uint64_t v0;

  return sub_21C38F4D8(*(void (**)(uint64_t, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), 0x6F723A7366657270, 0xEF544F4F523D746FLL, "Could not generate URL for iCloud sign in settings");
}

uint64_t sub_21C393FD0()
{
  uint64_t v0;

  return sub_21C38F798(*(uint64_t (**)(_QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), "iCloud signed out dialog was dismissed");
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t type metadata accessor for Utilities()
{
  return objc_opt_self();
}

uint64_t method lookup function for Utilities()
{
  return swift_lookUpClassMethod();
}

_QWORD *sub_21C394034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_21C392794((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_21C3940A8, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_21C394090(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_21C3940A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21C392A38(a1, a2);
}

uint64_t sub_21C3940C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C138) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = (v4 + v2 + v3) & ~v2;
  v6 = (v4 + v2 + v5) & ~v2;
  v7 = (((((((((((v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  v8 = v0 + v3;
  v9 = sub_21C3A76C8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v15 = v7;
  v12 = v7 + 23;
  if (!v11(v0 + v5, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v5, v9);
  v13 = v12 & 0xFFFFFFFFFFFFFFF8;
  if (!v11(v0 + v6, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v6, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v15))
    swift_release();
  if (*(_QWORD *)(v0 + v13))
    swift_release();
  if (*(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C3942BC(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C138) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (v4 + v5 + v3) & ~v3;
  v7 = (v6 + v5 + v3) & ~v3;
  v17 = *((_QWORD *)v1 + 2);
  v16 = *((_QWORD *)v1 + 3);
  v8 = v1[4];
  v15 = *((_QWORD *)v1 + 5);
  v12 = (uint64_t)v1 + v4;
  v11 = (uint64_t)v1 + v6;
  v13 = (uint64_t)v1 + v7;
  v14 = *(_QWORD *)((char *)v1 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v18 + 16) = v9;
  *v9 = v18;
  v9[1] = sub_21C2D8DB8;
  return sub_21C38E344(v8, a1, v17, v16, v15, v12, v11, v13, v14);
}

unint64_t sub_21C394484()
{
  unint64_t result;

  result = qword_2552602E0;
  if (!qword_2552602E0)
  {
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2552602E0);
  }
  return result;
}

unint64_t sub_21C3944C8()
{
  unint64_t result;

  result = qword_2552602E8;
  if (!qword_2552602E8)
  {
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE5E60], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2552602E8);
  }
  return result;
}

unint64_t sub_21C39450C()
{
  unint64_t result;

  result = qword_2552602F0;
  if (!qword_2552602F0)
  {
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_2552602F0);
  }
  return result;
}

unint64_t sub_21C394550()
{
  unint64_t result;

  result = qword_2552602F8;
  if (!qword_2552602F8)
  {
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_2552602F8);
  }
  return result;
}

void __swiftcall ReadResult.getPaymentData()(ProximityReader::PaymentCardReadResult_optional *__return_ptr retstr)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  os_log_type_t v18;
  uint8_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  uint8_t *v34;
  _QWORD *v35;
  uint8_t *v36;
  uint64_t v37;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAC8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F30);
  sub_21C2D1D80(v7, (uint64_t)v6);
  v8 = sub_21C3A79D4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_21C2D1DC8((uint64_t)v6);
  }
  else
  {
    v10 = v2;
    v11 = sub_21C3A79BC();
    v12 = sub_21C3A81B4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      v36 = v13;
      *(_DWORD *)v13 = 138412290;
      v34 = v13 + 4;
      v14 = *(_QWORD *)&v10[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome];
      sub_21C395C94();
      swift_allocError();
      *v15 = v14;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      v37 = v16;
      sub_21C3A82F8();
      v17 = v35;
      *v35 = v16;

      v18 = v12;
      v19 = v36;
      _os_log_impl(&dword_21C2CD000, v11, v18, "PaymentCardReadResult - %@", v36, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v17, -1, -1);
      MEMORY[0x22077AF8C](v19, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardReaderBlob];
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardReaderBlob + 8];
  v22 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0)
    v22 = v21 & 0xFFFFFFFFFFFFLL;
  if (!v22)
  {
    v24 = 0;
    v23 = 0;
    v21 = 0;
    v20 = 0;
    v26 = 0;
    v25 = 0;
    v28 = 0;
    v27 = 0;
    v30 = 0;
LABEL_26:
    retstr->value.id._countAndFlagsBits = v24;
    retstr->value.id._object = v23;
    retstr->value.paymentCardData.value._countAndFlagsBits = v21;
    retstr->value.paymentCardData.value._object = (void *)v20;
    retstr->value.generalCardData.value._countAndFlagsBits = v26;
    retstr->value.generalCardData.value._object = v25;
    retstr->value.applicationTypeIdentifier.value._countAndFlagsBits = v28;
    retstr->value.applicationTypeIdentifier.value._object = (void *)v27;
    *(_WORD *)&retstr->value.outcome = v30;
    retstr->value.isPINFallback = BYTE2(v30);
    return;
  }
  v24 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId];
  v23 = *(void **)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId + 8];
  v26 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_generalCardData];
  v25 = *(void **)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_generalCardData + 8];
  v28 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_payAppType];
  v27 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_payAppType + 8];
  v29 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0)
    v29 = v28 & 0xFFFFFFFFFFFFLL;
  if (v29)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = 0;
    v27 = 0;
  }
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome] < 3uLL)
  {
    if (v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_pinBypassed])
      v31 = 256;
    else
      v31 = 0;
    v32 = v31 & 0xFFFFFF00 | *(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome];
    if (v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_isPINFallback])
      v33 = 0x10000;
    else
      v33 = 0;
    v30 = v32 | v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  v37 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C3A8670();
  __break(1u);
}

ProximityReader::VASReadResult __swiftcall ReadResult.getVASData()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t D0VGSayACGFZ_0;
  void *v7;
  void *v8;
  ProximityReader::VASReadResult result;

  v2 = v0;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId + 8);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries);
  swift_bridgeObjectRetain();
  D0VGSayACGFZ_0 = _s15ProximityReader12VASReadEntryC11externalizeySayAA0C6ResultV04ReadD0VGSayACGFZ_0(v5);
  *v2 = v4;
  v2[1] = v3;
  v2[2] = D0VGSayACGFZ_0;
  result.entries._rawValue = v8;
  result.id._object = v7;
  result.id._countAndFlagsBits = D0VGSayACGFZ_0;
  return result;
}

uint64_t ReadResult.dataType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_dataType);
}

uint64_t ReadResult.transactionId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReadResult.cardReaderBlob.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardReaderBlob);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReadResult.generalCardData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_generalCardData);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReadResult.payAppType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_payAppType);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReadResult.vasEntries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ReadResult.readOutcome.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome);
}

uint64_t ReadResult.pinBypassed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_pinBypassed);
}

uint64_t ReadResult.isPINFallback.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_isPINFallback);
}

uint64_t ReadResult.cardEffectiveState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardEffectiveState);
}

uint64_t ReadResult.cardExpirationState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardExpirationState);
}

id ReadResult.__allocating_init(dataType:transactionId:cardReaderBlob:generalCardData:payAppType:vasEntries:readOutcome:pinBypassed:isPINFallback:cardEffectiveState:cardExpirationState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, char a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  objc_class *v16;
  id v19;

  v19 = objc_allocWithZone(v16);
  return ReadResult.init(dataType:transactionId:cardReaderBlob:generalCardData:payAppType:vasEntries:readOutcome:pinBypassed:isPINFallback:cardEffectiveState:cardExpirationState:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10, a11, a12, a13, a14 & 1, a15, a16 & 1);
}

id ReadResult.init(dataType:transactionId:cardReaderBlob:generalCardData:payAppType:vasEntries:readOutcome:pinBypassed:isPINFallback:cardEffectiveState:cardExpirationState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17)
{
  _BYTE *v17;
  objc_class *ObjectType;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  objc_super v39;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_dataType] = a1;
  v26 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId];
  *v26 = a2;
  v26[1] = a3;
  if (a5)
    v27 = a4;
  else
    v27 = 0;
  v28 = 0xE000000000000000;
  if (a5)
    v29 = a5;
  else
    v29 = 0xE000000000000000;
  v30 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardReaderBlob];
  *v30 = v27;
  v30[1] = v29;
  if (a7)
    v31 = a6;
  else
    v31 = 0;
  if (a7)
    v28 = a7;
  v32 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_generalCardData];
  *v32 = v31;
  v32[1] = v28;
  v33 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_payAppType];
  *v33 = a8;
  v33[1] = a9;
  v34 = MEMORY[0x24BEE4AF8];
  if (a10)
    v34 = a10;
  *(_QWORD *)&v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries] = v34;
  *(_QWORD *)&v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome] = a11;
  v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_pinBypassed] = a12;
  v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_isPINFallback] = a13;
  v35 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardEffectiveState];
  *(_QWORD *)v35 = a14;
  v35[8] = a15 & 1;
  v36 = &v17[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardExpirationState];
  *(_QWORD *)v36 = a16;
  v36[8] = a17 & 1;
  v39.receiver = v17;
  v39.super_class = ObjectType;
  return objc_msgSendSuper2(&v39, sel_init, a11);
}

unint64_t ReadOutcomeInternal.externalize.getter@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  if (result >= 3)
  {
    result = sub_21C3A8670();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

uint64_t static ReadResult.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall ReadResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  objc_super v28;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_dataType);
  v4 = (void *)sub_21C3A7EB4();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v3, v4);

  v5 = (void *)sub_21C3A7EB4();
  v6 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);

  v7 = (void *)sub_21C3A7EB4();
  v8 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);

  v9 = (void *)sub_21C3A7EB4();
  v10 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);

  v11 = (void *)sub_21C3A7EB4();
  v12 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v11, v12);

  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries);
  v14 = (objc_class *)type metadata accessor for VASResultArrayWrapper();
  v15 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ProximityReader21VASResultArrayWrapper_vasEntries] = v13;
  v28.receiver = v15;
  v28.super_class = v14;
  swift_bridgeObjectRetain();
  v16 = objc_msgSendSuper2(&v28, sel_init);
  v17 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v16, v17, v28.receiver, v28.super_class);

  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome);
  v19 = (void *)sub_21C3A7EB4();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v18, v19);

  v20 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_pinBypassed);
  v21 = (void *)sub_21C3A7EB4();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v20, v21);

  v22 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_isPINFallback);
  v23 = (void *)sub_21C3A7EB4();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v22, v23);

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardEffectiveState + 8) & 1) == 0)
  {
    v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardEffectiveState);
    v25 = (void *)sub_21C3A7EB4();
    -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v24, v25);

  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardExpirationState + 8) & 1) == 0)
  {
    v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader10ReadResult_cardExpirationState);
    v27 = (void *)sub_21C3A7EB4();
    -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v26, v27);

  }
}

id ReadResult.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ReadResult.init(coder:)(a1);
}

id ReadResult.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  unsigned __int8 v31;
  void *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  unsigned int v51;
  id v52;
  char *v53;
  void *v54;
  id v55;
  void *v56;
  unsigned int v57;
  id v58;
  id v59;
  char *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  char *v69;
  void *v70;
  id v71;
  id v72;
  char *v73;
  objc_class *ObjectType;
  objc_super v75;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v69 - v8;
  v10 = qword_25525AAC8;
  v11 = v2;
  if (v10 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F30);
  sub_21C2D1D80(v12, (uint64_t)v9);
  v13 = sub_21C3A79D4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v9, 1, v13);
  v73 = v11;
  if (v16 == 1)
  {
    sub_21C2D1DC8((uint64_t)v9);
  }
  else
  {
    v17 = sub_21C3A79BC();
    v18 = sub_21C3A81B4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_21C2CD000, v17, v18, "readErrorCode init", v19, 2u);
      MEMORY[0x22077AF8C](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
  }
  v20 = (void *)sub_21C3A7EB4();
  v21 = objc_msgSend(a1, sel_decodeIntegerForKey_, v20);

  if ((unint64_t)v21 <= 2)
  {
    sub_21C2D1C1C();
    v22 = sub_21C3A825C();
    if (v22)
    {
      v23 = (id)v22;
      v24 = (void *)sub_21C3A825C();
      if (v24)
      {
        v72 = v24;
        v25 = (void *)sub_21C3A825C();
        if (v25)
        {
          v71 = v25;
          v26 = sub_21C3A825C();
          if (v26)
          {
            v70 = (void *)v26;
            type metadata accessor for VASResultArrayWrapper();
            v27 = sub_21C3A825C();
            if (v27)
            {
              v69 = (char *)v27;
              v28 = (void *)sub_21C3A7EB4();
              v29 = objc_msgSend(a1, sel_decodeIntegerForKey_, v28);

              if ((unint64_t)v29 < 3)
              {
                v30 = (void *)sub_21C3A7EB4();
                v31 = objc_msgSend(a1, sel_decodeBoolForKey_, v30);

                v32 = (void *)sub_21C3A7EB4();
                LOBYTE(v30) = objc_msgSend(a1, sel_decodeBoolForKey_, v32);

                v33 = v73;
                *(_QWORD *)&v73[OBJC_IVAR____TtC15ProximityReader10ReadResult_dataType] = v21;
                v34 = sub_21C3A7ED8();
                v35 = (uint64_t *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_transactionId];
                *v35 = v34;
                v35[1] = v36;
                v37 = sub_21C3A7ED8();
                v38 = (uint64_t *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardReaderBlob];
                *v38 = v37;
                v38[1] = v39;
                v40 = sub_21C3A7ED8();
                v41 = (uint64_t *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_generalCardData];
                *v41 = v40;
                v41[1] = v42;
                v43 = v70;
                v44 = sub_21C3A7ED8();
                v45 = (uint64_t *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_payAppType];
                *v45 = v44;
                v45[1] = v46;
                v47 = v69;
                *(_QWORD *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_vasEntries] = *(_QWORD *)&v69[OBJC_IVAR____TtC15ProximityReader21VASResultArrayWrapper_vasEntries];
                *(_QWORD *)&v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_readOutcome] = v29;
                v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_pinBypassed] = v31;
                v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_isPINFallback] = (_BYTE)v30;
                swift_bridgeObjectRetain();
                v48 = (void *)sub_21C3A7EB4();
                v49 = objc_msgSend(a1, sel_decodeIntegerForKey_, v48);

                v50 = (void *)sub_21C3A7EB4();
                v51 = objc_msgSend(a1, sel_containsValueForKey_, v50);

                if ((unint64_t)v49 <= 3)
                  v52 = v49;
                else
                  v52 = 0;
                if (!v51)
                  v52 = 0;
                v53 = &v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardEffectiveState];
                *(_QWORD *)v53 = v52;
                v53[8] = (unint64_t)v49 > 3 || (v51 & 1) == 0;
                v54 = (void *)sub_21C3A7EB4();
                v55 = objc_msgSend(a1, sel_decodeIntegerForKey_, v54);

                v56 = (void *)sub_21C3A7EB4();
                v57 = objc_msgSend(a1, sel_containsValueForKey_, v56);

                if ((unint64_t)v55 <= 3)
                  v58 = v55;
                else
                  v58 = 0;
                if (v57)
                  v59 = v58;
                else
                  v59 = 0;

                v60 = &v33[OBJC_IVAR____TtC15ProximityReader10ReadResult_cardExpirationState];
                *(_QWORD *)v60 = v59;
                v60[8] = (unint64_t)v55 > 3 || (v57 & 1) == 0;

                v75.receiver = v33;
                v75.super_class = ObjectType;
                v61 = objc_msgSendSuper2(&v75, sel_init);

                return v61;
              }

              v63 = v71;
              v64 = v72;
              v23 = v69;
              v62 = v70;
            }
            else
            {
              v64 = v23;
              v62 = v71;
              v63 = v72;
              v23 = v70;
            }

          }
          else
          {
            v63 = v23;
            v23 = v71;
            v62 = v72;
          }

        }
        else
        {
          v62 = v23;
          v23 = v72;
        }

      }
    }
  }

  sub_21C2D1D80(v12, (uint64_t)v6);
  if (v15(v6, 1, v13) == 1)
  {

    sub_21C2D1DC8((uint64_t)v6);
  }
  else
  {
    v65 = sub_21C3A79BC();
    v66 = sub_21C3A81C0();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v67 = 0;
      _os_log_impl(&dword_21C2CD000, v65, v66, "ReadResultInternal | Failed to decode object", v67, 2u);
      MEMORY[0x22077AF8C](v67, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

unint64_t ReadOutcomeInternal.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

id ReadResult.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ReadResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ReadResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t static ReadOutcomeInternal._nsErrorDomain.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_21C395B18()
{
  sub_21C395FC8();
  return sub_21C3A756C();
}

uint64_t sub_21C395B50()
{
  sub_21C395FC8();
  return sub_21C3A7584();
}

uint64_t sub_21C395B78()
{
  sub_21C395FC8();
  return sub_21C3A7578();
}

unint64_t sub_21C395BA0()
{
  return 0xD000000000000023;
}

uint64_t sub_21C395BBC()
{
  sub_21C395FC8();
  return sub_21C3A7560();
}

uint64_t CardEffectiveStateInternal.description.getter()
{
  return 0x6E776F6E6B6E75;
}

unint64_t CardEffectiveStateInternal.init(rawValue:)(unint64_t a1)
{
  return sub_21C338BA8(a1);
}

void *static CardEffectiveStateInternal.allCases.getter()
{
  return &unk_24E02E878;
}

uint64_t sub_21C395C38()
{
  return 0x6E776F6E6B6E75;
}

void sub_21C395C50(_QWORD *a1@<X8>)
{
  *a1 = &unk_24E02E8B8;
}

uint64_t CardExpirationStateInternal.description.getter()
{
  return 0x6E776F6E6B6E75;
}

void *static CardExpirationStateInternal.allCases.getter()
{
  return &unk_24E02E8F8;
}

void sub_21C395C84(_QWORD *a1@<X8>)
{
  *a1 = &unk_24E02E938;
}

unint64_t sub_21C395C94()
{
  unint64_t result;

  result = qword_255260340;
  if (!qword_255260340)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadOutcomeInternal, &type metadata for ReadOutcomeInternal);
    atomic_store(result, (unint64_t *)&qword_255260340);
  }
  return result;
}

unint64_t sub_21C395CDC()
{
  unint64_t result;

  result = qword_255260378;
  if (!qword_255260378)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadOutcomeInternal, &type metadata for ReadOutcomeInternal);
    atomic_store(result, (unint64_t *)&qword_255260378);
  }
  return result;
}

unint64_t sub_21C395D24()
{
  unint64_t result;

  result = qword_255260380;
  if (!qword_255260380)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadOutcomeInternal, &type metadata for ReadOutcomeInternal);
    atomic_store(result, (unint64_t *)&qword_255260380);
  }
  return result;
}

unint64_t sub_21C395D6C()
{
  unint64_t result;

  result = qword_255260388;
  if (!qword_255260388)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadOutcomeInternal, &type metadata for ReadOutcomeInternal);
    atomic_store(result, (unint64_t *)&qword_255260388);
  }
  return result;
}

unint64_t sub_21C395DB4()
{
  unint64_t result;

  result = qword_255260390;
  if (!qword_255260390)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadOutcomeInternal, &type metadata for ReadOutcomeInternal);
    atomic_store(result, (unint64_t *)&qword_255260390);
  }
  return result;
}

unint64_t sub_21C395E00()
{
  unint64_t result;

  result = qword_2552603A0;
  if (!qword_2552603A0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for CardEffectiveStateInternal, &type metadata for CardEffectiveStateInternal);
    atomic_store(result, (unint64_t *)&qword_2552603A0);
  }
  return result;
}

uint64_t sub_21C395E44()
{
  return sub_21C395ED4(&qword_2552603A8, &qword_2552603B0);
}

unint64_t sub_21C395E6C()
{
  unint64_t result;

  result = qword_2552603B8;
  if (!qword_2552603B8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for CardExpirationStateInternal, &type metadata for CardExpirationStateInternal);
    atomic_store(result, (unint64_t *)&qword_2552603B8);
  }
  return result;
}

uint64_t sub_21C395EB0()
{
  return sub_21C395ED4(&qword_2552603C0, &qword_2552603C8);
}

uint64_t sub_21C395ED4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ReadResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for ReadResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReadResult.__allocating_init(dataType:transactionId:cardReaderBlob:generalCardData:payAppType:vasEntries:readOutcome:pinBypassed:isPINFallback:cardEffectiveState:cardExpirationState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 168))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of ReadResult.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

ValueMetadata *type metadata accessor for ReadOutcomeInternal()
{
  return &type metadata for ReadOutcomeInternal;
}

ValueMetadata *type metadata accessor for CardEffectiveStateInternal()
{
  return &type metadata for CardEffectiveStateInternal;
}

ValueMetadata *type metadata accessor for CardExpirationStateInternal()
{
  return &type metadata for CardExpirationStateInternal;
}

unint64_t sub_21C395FC8()
{
  unint64_t result;

  result = qword_2552603F8;
  if (!qword_2552603F8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadOutcomeInternal, &type metadata for ReadOutcomeInternal);
    atomic_store(result, (unint64_t *)&qword_2552603F8);
  }
  return result;
}

uint64_t static LogoManager.shared.getter()
{
  type metadata accessor for LogoManager();
  return swift_initStaticObject();
}

uint64_t type metadata accessor for LogoManager()
{
  return objc_opt_self();
}

uint64_t sub_21C396050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21C3A76C8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(sub_21C397760(a1, a2) + 16) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v15[2] = sub_21C39399C();
    v15[3] = v12;
    sub_21C3A7F8C();
    sub_21C3A7650();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      v13 = sub_21C3A76EC();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return v13;
    }
    sub_21C2D775C((uint64_t)v7, &qword_25525C138);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_21C396374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  unsigned int v26;
  id v27;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_21C3A76C8();
  v10 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21C397760(a1, a2);
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
    return swift_bridgeObjectRelease();
  v43 = v4;
  v44 = v6;
  v15 = v13 + 40;
  v45 = v13;
  v46 = 0x800000021C3BF340;
  while (1)
  {
    swift_bridgeObjectRetain();
    v16 = CPSharedResourcesDirectory();
    if (!v16)
      __break(1u);
    v17 = (void *)v16;
    v18 = (void *)sub_21C3A7ED8();
    v20 = v19;

    v49 = v18;
    v50 = v20;
    sub_21C3A7F8C();
    v21 = v49;
    v22 = v50;
    v49 = 0;
    v50 = 0xE000000000000000;
    sub_21C3A83DC();
    swift_bridgeObjectRelease();
    v49 = v21;
    v50 = v22;
    sub_21C3A7F8C();
    sub_21C3A7F8C();
    sub_21C3A7F8C();
    sub_21C3A7650();
    swift_bridgeObjectRelease();
    v23 = v47;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v47);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v23) != 1)
      break;
    sub_21C2D775C((uint64_t)v9, &qword_25525C138);
LABEL_4:
    v15 += 16;
    if (!--v14)
      return swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v23);
  v24 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v25 = (void *)sub_21C3A7668();
  v49 = 0;
  v26 = objc_msgSend(v24, sel_removeItemAtURL_error_, v25, &v49);

  if (v26)
  {
    v27 = v49;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
    goto LABEL_4;
  }
  v29 = v49;
  v30 = (void *)sub_21C3A75FC();

  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
  swift_bridgeObjectRelease();
  if (qword_25525AAF0 != -1)
    swift_once();
  v31 = __swift_project_value_buffer(v43, (uint64_t)qword_255278FA8);
  v32 = (uint64_t)v44;
  sub_21C2D1D80(v31, (uint64_t)v44);
  v33 = sub_21C3A79D4();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
  {

    return sub_21C2D775C(v32, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v35 = v30;
    v36 = v30;
    v37 = sub_21C3A79BC();
    v38 = sub_21C3A81C0();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = (void *)swift_slowAlloc();
      v49 = v40;
      *(_DWORD *)v39 = 136315138;
      swift_getErrorValue();
      v41 = sub_21C3A86B8();
      v48 = sub_21C350398(v41, v42, (uint64_t *)&v49);
      sub_21C3A82F8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21C2CD000, v37, v38, "Error occurred when retrieving logo directories: %s", v39, 0xCu);
      swift_arrayDestroy();
      v32 = (uint64_t)v44;
      MEMORY[0x22077AF8C](v40, -1, -1);
      MEMORY[0x22077AF8C](v39, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
  }
}

void sub_21C3968E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint8_t *v20;
  id v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v4 = v3;
  v32 = a2;
  v33 = a3;
  v6 = sub_21C3A76C8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAF0 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v10, (uint64_t)qword_255278FA8);
  sub_21C2D1D80(v13, (uint64_t)v12);
  v14 = sub_21C3A79D4();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v31 = v4;
    v16 = sub_21C3A79BC();
    v17 = sub_21C3A81B4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v30 = a1;
      v19 = v18;
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_21C2CD000, v16, v17, "Clear logo", v18, 2u);
      v20 = v19;
      a1 = v30;
      MEMORY[0x22077AF8C](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    v4 = v31;
  }
  v21 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v22 = (void *)sub_21C3A7668();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v23 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v24 = (v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v25 + v23, v9, v6);
  v26 = (_QWORD *)(v25 + v24);
  v27 = v33;
  *v26 = v32;
  v26[1] = v27;
  *(_QWORD *)(v25 + ((v24 + 23) & 0xFFFFFFFFFFFFFFF8)) = v4;
  aBlock[4] = sub_21C397CC8;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C397418;
  aBlock[3] = &block_descriptor_8;
  v28 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v29 = objc_msgSend(v21, sel_dataTaskWithURL_completionHandler_, v22, v28);
  _Block_release(v28);

  objc_msgSend(v29, sel_resume);
}

void sub_21C396BF8(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  void (*v63)(char *, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  int v68;
  uint8_t *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84[2];

  v81 = a7;
  v13 = sub_21C3A76C8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = (uint8_t *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v82);
  MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)v73 - v23;
  if (a4)
  {
    v25 = a4;
    if (qword_25525AAF0 != -1)
      swift_once();
    v26 = __swift_project_value_buffer((uint64_t)v82, (uint64_t)qword_255278FA8);
    sub_21C2D1D80(v26, (uint64_t)v24);
    v27 = sub_21C3A79D4();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27) == 1)
    {

      sub_21C2D775C((uint64_t)v24, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v38 = a4;
      v39 = a4;
      v40 = sub_21C3A79BC();
      v41 = sub_21C3A81C0();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v84[0] = v43;
        *(_DWORD *)v42 = 136315138;
        v82 = v42 + 4;
        swift_getErrorValue();
        v44 = sub_21C3A86B8();
        v83 = sub_21C350398(v44, v45, v84);
        sub_21C3A82F8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_21C2CD000, v40, v41, "Error received when fetching merchant logo: %s", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v43, -1, -1);
        MEMORY[0x22077AF8C](v42, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v27);
    }
    return;
  }
  v79 = v22;
  v80 = v20;
  v29 = v21;
  v78 = a6;
  v30 = v81;
  if (!a3)
    goto LABEL_10;
  objc_opt_self();
  v31 = swift_dynamicCastObjCClass();
  if (!v31)
    goto LABEL_10;
  v32 = (void *)v31;
  v33 = a3;
  if ((char *)objc_msgSend(v32, sel_statusCode) - 300 < (char *)0xFFFFFFFFFFFFFF9CLL)
  {

LABEL_10:
    if (qword_25525AAF0 != -1)
      swift_once();
    v34 = __swift_project_value_buffer((uint64_t)v82, (uint64_t)qword_255278FA8);
    v35 = (id)v29;
    sub_21C2D1D80(v34, v29);
    v36 = sub_21C3A79D4();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v29, 1, v36) == 1)
      goto LABEL_13;
    v46 = sub_21C3A79BC();
    v47 = sub_21C3A81C0();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_21C2CD000, v46, v47, "Non 200 response", v48, 2u);
      MEMORY[0x22077AF8C](v48, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v29, v36);
    return;
  }
  if (a2 >> 60 == 15)
  {
    v49 = v33;
    if (qword_25525AAF0 != -1)
      swift_once();
    v50 = __swift_project_value_buffer((uint64_t)v82, (uint64_t)qword_255278FA8);
    v35 = v79;
    sub_21C2D1D80(v50, (uint64_t)v79);
    v51 = sub_21C3A79D4();
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v52 + 48))(v35, 1, v51) == 1)
    {

LABEL_13:
      sub_21C2D775C((uint64_t)v35, (uint64_t *)&unk_25525B0E0);
      return;
    }
    v60 = sub_21C3A79BC();
    v61 = sub_21C3A81C0();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v62 = 0;
      _os_log_impl(&dword_21C2CD000, v60, v61, "Did not receive logo data from provided logoURL", v62, 2u);
      MEMORY[0x22077AF8C](v62, -1, -1);
    }

    (*(void (**)(id, uint64_t))(v52 + 8))(v79, v51);
  }
  else
  {
    v79 = v33;
    v53 = a1;
    sub_21C2D1E94(a1, a2);
    if (qword_25525AAF0 != -1)
      swift_once();
    v54 = __swift_project_value_buffer((uint64_t)v82, (uint64_t)qword_255278FA8);
    v55 = v80;
    sub_21C2D1D80(v54, v80);
    v56 = sub_21C3A79D4();
    v82 = *(uint8_t **)(v56 - 8);
    v57 = (unsigned int (*)(uint64_t, uint64_t))*((_QWORD *)v82 + 6);
    v77 = v56;
    if (v57(v55, 1) == 1)
    {
      sub_21C2D775C(v55, (uint64_t *)&unk_25525B0E0);
      v58 = v30;
      v59 = v78;
    }
    else
    {
      v76 = v14;
      v63 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v64 = v16;
      v65 = v13;
      v63(v16, a5, v13);
      v66 = sub_21C3A79BC();
      v67 = sub_21C3A81B4();
      v68 = v67;
      if (os_log_type_enabled(v66, v67))
      {
        v75 = v68;
        v69 = (uint8_t *)swift_slowAlloc();
        v74 = swift_slowAlloc();
        v84[0] = v74;
        *(_DWORD *)v69 = 136315138;
        v73[1] = v69 + 4;
        sub_21C398480();
        v70 = sub_21C3A8628();
        v83 = sub_21C350398(v70, v71, v84);
        sub_21C3A82F8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v64, v65);
        _os_log_impl(&dword_21C2CD000, v66, (os_log_type_t)v75, "Logo: %s", v69, 0xCu);
        v72 = v74;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v72, -1, -1);
        MEMORY[0x22077AF8C](v69, -1, -1);

      }
      else
      {

        (*(void (**)(char *, uint64_t))(v76 + 8))(v64, v65);
      }
      v58 = v30;
      v59 = v78;
      (*((void (**)(uint64_t, uint64_t))v82 + 1))(v80, v77);
      v53 = a1;
    }
    v84[0] = v59;
    v84[1] = v58;
    swift_bridgeObjectRetain();
    sub_21C3A7F8C();
    sub_21C3A7638();
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    sub_21C397D98(v53, a2);
    swift_bridgeObjectRelease();
    sub_21C2D2B34(v53, a2);

  }
}

uint64_t sub_21C397418(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, void *, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_21C3A774C();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, a3, a4);

  sub_21C2D2B34((uint64_t)v6, v10);
  return swift_release();
}

uint64_t LogoManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t LogoManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21C3974E0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v33;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  v4 = 0;
  v33 = result + 32;
  v5 = MEMORY[0x24BEE4AF8];
  v31 = *(_QWORD *)(result + 16);
  do
  {
    v29 = v5;
    if (v4 <= v3)
      v6 = v3;
    else
      v6 = v4;
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
        return result;
      }
      v8 = (uint64_t *)(v33 + 16 * v4);
      v10 = *v8;
      v9 = v8[1];
      ++v4;
      v11 = HIBYTE(v9) & 0xF;
      if ((v9 & 0x2000000000000000) == 0)
        v11 = v10 & 0xFFFFFFFFFFFFLL;
      if (v11)
        break;
LABEL_8:
      if (v4 == v3)
        return v29;
    }
    swift_bridgeObjectRetain();
    while (1)
    {
      v12 = sub_21C3A7F68();
      if (sub_21C3A7FF8() == 46 && v13 == 0xE100000000000000)
        break;
      v15 = sub_21C3A864C();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        goto LABEL_22;
      if (v12 < 0x4000)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRetain();
    v16 = sub_21C3A8010();
    v18 = v17;
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x22077A11C](v16, v18, v20, v22);
    v25 = v24;
    swift_bridgeObjectRelease();
    if (v23 == a2 && v25 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = sub_21C3A864C();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0)
      {
LABEL_7:
        result = swift_bridgeObjectRelease();
        v3 = v31;
        goto LABEL_8;
      }
    }
    v5 = v29;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_21C31E1D8(0, *(_QWORD *)(v29 + 16) + 1, 1);
      v5 = v29;
    }
    v27 = *(_QWORD *)(v5 + 16);
    v26 = *(_QWORD *)(v5 + 24);
    if (v27 >= v26 >> 1)
    {
      result = sub_21C31E1D8(v26 > 1, v27 + 1, 1);
      v5 = v29;
    }
    *(_QWORD *)(v5 + 16) = v27 + 1;
    v28 = v5 + 16 * v27;
    *(_QWORD *)(v28 + 32) = v10;
    *(_QWORD *)(v28 + 40) = v9;
    v3 = v31;
  }
  while (v4 != v31);
  return v5;
}

uint64_t sub_21C397760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v38 - v8;
  v10._countAndFlagsBits = sub_21C39399C();
  v11 = (unint64_t)SecureStorage.getDirectoryContent(at:)(v10);
  if (v12)
  {
    swift_bridgeObjectRelease();
    if (qword_25525AAF0 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v4, (uint64_t)qword_255278FA8);
    sub_21C2D1D80(v13, (uint64_t)v6);
    v14 = sub_21C3A79D4();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
    {
      sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v18 = v12;
      v19 = v12;
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        v41[0] = v23;
        *(_DWORD *)v22 = 136315138;
        v39 = (uint64_t)(v22 + 4);
        swift_getErrorValue();
        v24 = sub_21C3A86B8();
        v40 = sub_21C350398(v24, v25, v41);
        sub_21C3A82F8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_21C2CD000, v20, v21, "Empty logo directory: %s", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v23, -1, -1);
        MEMORY[0x22077AF8C](v22, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
    }

    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v16 = v11;
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_bridgeObjectRetain();
      v17 = sub_21C3974E0(v16, a1, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v17 + 16))
        return v17;
    }
    else
    {
      v17 = MEMORY[0x24BEE4AF8];
      if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
        return v17;
    }
    if (qword_25525AAF0 != -1)
      swift_once();
    v27 = __swift_project_value_buffer(v4, (uint64_t)qword_255278FA8);
    sub_21C2D1D80(v27, (uint64_t)v9);
    v28 = sub_21C3A79D4();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v9, 1, v28) == 1)
    {
      sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v30 = sub_21C3A79BC();
      v31 = sub_21C3A81B4();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        v39 = swift_slowAlloc();
        v41[0] = v39;
        *(_DWORD *)v32 = 136315138;
        v38[1] = v32 + 4;
        v33 = swift_bridgeObjectRetain();
        v34 = MEMORY[0x22077A260](v33, MEMORY[0x24BEE0D00]);
        v36 = v35;
        swift_bridgeObjectRelease();
        v40 = sub_21C350398(v34, v36, v41);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21C2CD000, v30, v31, "getFilesMatching at: %s", v32, 0xCu);
        v37 = v39;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v37, -1, -1);
        MEMORY[0x22077AF8C](v32, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
    }
  }
  return v17;
}

uint64_t sub_21C397C38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_21C3A76C8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_21C397CC8(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;

  v9 = *(_QWORD *)(sub_21C3A76C8() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (uint64_t *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_21C396BF8(a1, a2, a3, a4, v4 + v10, *v11, v11[1]);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t method lookup function for LogoManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LogoManager.loadLogo(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of LogoManager.clearLogos(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of LogoManager.retrieveAndStoreLogo(url:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_21C397D98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char *v32;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[2];

  v44 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v41 - v5;
  MEMORY[0x24BDAC7A8](v7);
  v42 = (uint64_t)&v41 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21C3A76C8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v41 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v41 - v16;
  v46[0] = sub_21C39399C();
  v46[1] = v18;
  sub_21C3A7F8C();
  sub_21C3A7650();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_21C2D775C((uint64_t)v11, &qword_25525C138);
    if (qword_25525AAF0 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v2, (uint64_t)qword_255278FA8);
    sub_21C2D1D80(v19, (uint64_t)v6);
    v20 = sub_21C3A79D4();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) == 1)
    {
      v22 = (uint64_t)v6;
      return sub_21C2D775C(v22, (uint64_t *)&unk_25525B0E0);
    }
    v23 = sub_21C3A79BC();
    v24 = sub_21C3A81C0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_21C2CD000, v23, v24, "Unable to resolve logo path", v25, 2u);
      MEMORY[0x22077AF8C](v25, -1, -1);
    }

    v26 = *(uint64_t (**)(char *, uint64_t))(v21 + 8);
    v27 = v6;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
    SecureStorage.save(at:data:)();
    if (qword_25525AAF0 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v2, (uint64_t)qword_255278FA8);
    v29 = v42;
    sub_21C2D1D80(v28, v42);
    v20 = sub_21C3A79D4();
    v30 = *(_QWORD *)(v20 - 8);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v29, 1, v20);
    v32 = v41;
    if (v31 == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
      v22 = v29;
      return sub_21C2D775C(v22, (uint64_t *)&unk_25525B0E0);
    }
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v41, v17, v12);
    v34 = sub_21C3A79BC();
    v35 = sub_21C3A81B4();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v46[0] = v44;
      *(_DWORD *)v36 = 136315138;
      v43 = (char *)(v36 + 4);
      sub_21C398480();
      v37 = sub_21C3A8628();
      v45 = sub_21C350398(v37, v38, v46);
      v29 = v42;
      sub_21C3A82F8();
      swift_bridgeObjectRelease();
      v39 = *(void (**)(char *, uint64_t))(v13 + 8);
      v39(v41, v12);
      _os_log_impl(&dword_21C2CD000, v34, v35, "Cached at: %s", v36, 0xCu);
      v40 = v44;
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v40, -1, -1);
      MEMORY[0x22077AF8C](v36, -1, -1);
    }
    else
    {
      v39 = *(void (**)(char *, uint64_t))(v13 + 8);
      v39(v32, v12);
    }

    v39(v17, v12);
    v26 = *(uint64_t (**)(char *, uint64_t))(v30 + 8);
    v27 = (char *)v29;
  }
  return v26(v27, v20);
}

unint64_t sub_21C398480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2552604D0;
  if (!qword_2552604D0)
  {
    v1 = sub_21C3A76C8();
    result = MEMORY[0x22077AECC](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_2552604D0);
  }
  return result;
}

uint64_t ForegroundActiveState.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x756F72676B636162;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000012;
      break;
    case 2:
      result = 0xD000000000000010;
      break;
    case 3:
      result = 0x74616E696D726574;
      break;
    case 4:
      result = 0xD000000000000013;
      break;
    default:
      result = sub_21C3A8670();
      __break(1u);
      break;
  }
  return result;
}

unint64_t ForegroundActiveState.init(rawValue:)(unint64_t a1)
{
  return sub_21C2D9004(a1);
}

uint64_t sub_21C3985C0()
{
  uint64_t *v0;

  return ForegroundActiveState.description.getter(*v0);
}

unint64_t sub_21C3985CC()
{
  unint64_t result;

  result = qword_2552604D8;
  if (!qword_2552604D8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ForegroundActiveState, &type metadata for ForegroundActiveState);
    atomic_store(result, (unint64_t *)&qword_2552604D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ForegroundActiveState()
{
  return &type metadata for ForegroundActiveState;
}

uint64_t sub_21C398624(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_21C31E1D8(0, v1, 0);
    v3 = a1 + 40;
    do
    {
      v4 = sub_21C3A7F14();
      v6 = v5;
      v8 = *(_QWORD *)(v12 + 16);
      v7 = *(_QWORD *)(v12 + 24);
      if (v8 >= v7 >> 1)
        sub_21C31E1D8(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v9 = v12 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
      v3 += 16;
      --v1;
    }
    while (v1);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ECD0);
  sub_21C2FA074();
  v10 = sub_21C3A7E84();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t MobileDocumentElementInternal.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t sub_21C3987A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C3987E0 + 4 * aR[a1]))(0x6D614E6E65766967, 0xE900000000000065);
}

uint64_t sub_21C3987E0()
{
  return 0x614E796C696D6166;
}

uint64_t sub_21C3987FC()
{
  return 0x7469617274726F70;
}

uint64_t sub_21C398814()
{
  return 6645601;
}

uint64_t sub_21C398824()
{
  return 0x61654C7441656761;
}

uint64_t sub_21C398844()
{
  return 0x6942664F65746164;
}

uint64_t sub_21C398864()
{
  return 7890291;
}

uint64_t sub_21C398874()
{
  return 0x73736572646461;
}

unint64_t sub_21C39888C()
{
  return 0xD000000000000010;
}

uint64_t sub_21C39892C()
{
  sub_21C39A9D8();
  return sub_21C3A8754();
}

uint64_t sub_21C398954()
{
  sub_21C39A9D8();
  return sub_21C3A8760();
}

uint64_t sub_21C39897C()
{
  sub_21C39AAA4();
  return sub_21C3A8754();
}

uint64_t sub_21C3989A4()
{
  sub_21C39AAA4();
  return sub_21C3A8760();
}

uint64_t sub_21C3989CC()
{
  sub_21C39AAE8();
  return sub_21C3A8754();
}

uint64_t sub_21C3989F4()
{
  sub_21C39AAE8();
  return sub_21C3A8760();
}

uint64_t sub_21C398A1C()
{
  unsigned __int8 *v0;

  return sub_21C3987A8(*v0);
}

uint64_t sub_21C398A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C39B788(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C398A48()
{
  sub_21C39A7FC();
  return sub_21C3A8754();
}

uint64_t sub_21C398A70()
{
  sub_21C39A7FC();
  return sub_21C3A8760();
}

uint64_t sub_21C398A98()
{
  sub_21C39AA60();
  return sub_21C3A8754();
}

uint64_t sub_21C398AC0()
{
  sub_21C39AA60();
  return sub_21C3A8760();
}

uint64_t sub_21C398AE8()
{
  sub_21C39A840();
  return sub_21C3A8754();
}

uint64_t sub_21C398B10()
{
  sub_21C39A840();
  return sub_21C3A8760();
}

uint64_t sub_21C398B38()
{
  sub_21C39A884();
  return sub_21C3A8754();
}

uint64_t sub_21C398B60()
{
  sub_21C39A884();
  return sub_21C3A8760();
}

uint64_t sub_21C398B88()
{
  sub_21C39A8C8();
  return sub_21C3A8754();
}

uint64_t sub_21C398BB0()
{
  sub_21C39A8C8();
  return sub_21C3A8760();
}

uint64_t sub_21C398BD8()
{
  sub_21C39A90C();
  return sub_21C3A8754();
}

uint64_t sub_21C398C00()
{
  sub_21C39A90C();
  return sub_21C3A8760();
}

uint64_t sub_21C398C28()
{
  sub_21C39A950();
  return sub_21C3A8754();
}

uint64_t sub_21C398C50()
{
  sub_21C39A950();
  return sub_21C3A8760();
}

uint64_t sub_21C398C78()
{
  sub_21C39AB70();
  return sub_21C3A8754();
}

uint64_t sub_21C398CA0()
{
  sub_21C39AB70();
  return sub_21C3A8760();
}

uint64_t sub_21C398CC8()
{
  sub_21C39ABB4();
  return sub_21C3A8754();
}

uint64_t sub_21C398CF0()
{
  sub_21C39ABB4();
  return sub_21C3A8760();
}

uint64_t sub_21C398D18()
{
  sub_21C39A994();
  return sub_21C3A8754();
}

uint64_t sub_21C398D40()
{
  sub_21C39A994();
  return sub_21C3A8760();
}

uint64_t sub_21C398D68()
{
  sub_21C39AB2C();
  return sub_21C3A8754();
}

uint64_t sub_21C398D90()
{
  sub_21C39AB2C();
  return sub_21C3A8760();
}

uint64_t sub_21C398DB8()
{
  sub_21C39AA1C();
  return sub_21C3A8754();
}

uint64_t sub_21C398DE0()
{
  sub_21C39AA1C();
  return sub_21C3A8760();
}

uint64_t MobileDocumentElementInternal.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  _QWORD v33[2];
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552604E0);
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v68 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552604E8);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v65 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552604F0);
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v62 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552604F8);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v59 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260500);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v56 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260508);
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v53 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260510);
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v50 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260518);
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260520);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v44 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260528);
  v71 = *(_QWORD *)(v18 - 8);
  v72 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260530);
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260538);
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v38 = (char *)v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260540);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v35 = (char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260548);
  v33[1] = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33[0] = (char *)v33 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260550);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v33 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *v1;
  v30 = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C39A7FC();
  sub_21C3A8748();
  if (v30 == 1)
    __asm { BR              X9 }
  v73 = 4;
  sub_21C39AAA4();
  sub_21C3A85A4();
  v31 = v72;
  sub_21C3A8604();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v20, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
}

uint64_t MobileDocumentElementInternal.hashValue.getter()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t MobileDocumentElementInternal.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD v34[6];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;

  v67 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552605D0);
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v72 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552605D8);
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v66 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552605E0);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v65 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552605E8);
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v64 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552605F0);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v63 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552605F8);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v62 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260600);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v71 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260608);
  v40 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v70 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260610);
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v61 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260618);
  v34[4] = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v68 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260620);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v60 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260628);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v59 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260630);
  v34[5] = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260638);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260640);
  v23 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v25 = (char *)v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_21C39A7FC();
  v27 = v74;
  sub_21C3A873C();
  if (!v27)
  {
    v34[2] = v22;
    v34[0] = v20;
    v34[1] = v19;
    v34[3] = v18;
    v28 = v69;
    v74 = v23;
    v29 = sub_21C3A8598();
    if (*(_QWORD *)(v29 + 16) == 1)
      __asm { BR              X10 }
    v30 = sub_21C3A840C();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
    *v32 = &type metadata for MobileDocumentElementInternal;
    sub_21C3A8520();
    sub_21C3A8400();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v25, v28);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
}

uint64_t sub_21C39A5E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDocumentElementInternal.init(from:)(a1, a2);
}

uint64_t sub_21C39A5F8(_QWORD *a1)
{
  return MobileDocumentElementInternal.encode(to:)(a1);
}

uint64_t sub_21C39A60C()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C39A660()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t _s15ProximityReader29MobileDocumentElementInternalO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_21C39A6E0 + 4 * byte_21C3B62D8[v2]))();
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return v2 == *(_QWORD *)a2;
}

uint64_t sub_21C39A70C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 1)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A720@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A734@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A748@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A75C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A770@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A784@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A798@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A7AC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A7C0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A7D4@<X0>(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xB)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

uint64_t sub_21C39A7E8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C39A6F8);
  return 1;
}

unint64_t sub_21C39A7FC()
{
  unint64_t result;

  result = qword_255260558;
  if (!qword_255260558)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6FC8, &type metadata for MobileDocumentElementInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260558);
  }
  return result;
}

unint64_t sub_21C39A840()
{
  unint64_t result;

  result = qword_255260560;
  if (!qword_255260560)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6F78, &type metadata for MobileDocumentElementInternal.DocumentDHSComplianceStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260560);
  }
  return result;
}

unint64_t sub_21C39A884()
{
  unint64_t result;

  result = qword_255260568;
  if (!qword_255260568)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6F28, &type metadata for MobileDocumentElementInternal.DocumentExpirationDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260568);
  }
  return result;
}

unint64_t sub_21C39A8C8()
{
  unint64_t result;

  result = qword_255260570;
  if (!qword_255260570)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6ED8, &type metadata for MobileDocumentElementInternal.DocumentIssueDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260570);
  }
  return result;
}

unint64_t sub_21C39A90C()
{
  unint64_t result;

  result = qword_255260578;
  if (!qword_255260578)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6E88, &type metadata for MobileDocumentElementInternal.DocumentNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260578);
  }
  return result;
}

unint64_t sub_21C39A950()
{
  unint64_t result;

  result = qword_255260580;
  if (!qword_255260580)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6E38, &type metadata for MobileDocumentElementInternal.DrivingPrivilegesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260580);
  }
  return result;
}

unint64_t sub_21C39A994()
{
  unint64_t result;

  result = qword_255260588;
  if (!qword_255260588)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6DE8, &type metadata for MobileDocumentElementInternal.IssuingAuthorityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260588);
  }
  return result;
}

unint64_t sub_21C39A9D8()
{
  unint64_t result;

  result = qword_255260590;
  if (!qword_255260590)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6D98, &type metadata for MobileDocumentElementInternal.AddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260590);
  }
  return result;
}

unint64_t sub_21C39AA1C()
{
  unint64_t result;

  result = qword_255260598;
  if (!qword_255260598)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6D48, &type metadata for MobileDocumentElementInternal.SexCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260598);
  }
  return result;
}

unint64_t sub_21C39AA60()
{
  unint64_t result;

  result = qword_2552605A0;
  if (!qword_2552605A0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6CF8, &type metadata for MobileDocumentElementInternal.DateOfBirthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552605A0);
  }
  return result;
}

unint64_t sub_21C39AAA4()
{
  unint64_t result;

  result = qword_2552605A8;
  if (!qword_2552605A8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6CA8, &type metadata for MobileDocumentElementInternal.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552605A8);
  }
  return result;
}

unint64_t sub_21C39AAE8()
{
  unint64_t result;

  result = qword_2552605B0;
  if (!qword_2552605B0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6C58, &type metadata for MobileDocumentElementInternal.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552605B0);
  }
  return result;
}

unint64_t sub_21C39AB2C()
{
  unint64_t result;

  result = qword_2552605B8;
  if (!qword_2552605B8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6C08, &type metadata for MobileDocumentElementInternal.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552605B8);
  }
  return result;
}

unint64_t sub_21C39AB70()
{
  unint64_t result;

  result = qword_2552605C0;
  if (!qword_2552605C0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6BB8, &type metadata for MobileDocumentElementInternal.FamilyNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552605C0);
  }
  return result;
}

unint64_t sub_21C39ABB4()
{
  unint64_t result;

  result = qword_2552605C8;
  if (!qword_2552605C8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6B68, &type metadata for MobileDocumentElementInternal.GivenNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552605C8);
  }
  return result;
}

unint64_t sub_21C39ABFC()
{
  unint64_t result;

  result = qword_255260648;
  if (!qword_255260648)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDocumentElementInternal, &type metadata for MobileDocumentElementInternal);
    atomic_store(result, (unint64_t *)&qword_255260648);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal()
{
  return &type metadata for MobileDocumentElementInternal;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentElementInternal.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_21C39AC9C + 4 * byte_21C3B62EA[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_21C39ACD0 + 4 * byte_21C3B62E5[v4]))();
}

uint64_t sub_21C39ACD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C39ACD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C39ACE0);
  return result;
}

uint64_t sub_21C39ACEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C39ACF4);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_21C39ACF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C39AD00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.CodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.GivenNameCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.GivenNameCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.FamilyNameCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.FamilyNameCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.PortraitCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.PortraitCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.AgeCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.AgeCodingKeys;
}

uint64_t storeEnumTagSinglePayload for MobileDocumentElementInternal.AgeAtLeastCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C39AD9C + 4 * byte_21C3B62EF[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C39ADBC + 4 * byte_21C3B62F4[v4]))();
}

_BYTE *sub_21C39AD9C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C39ADBC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C39ADC4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C39ADCC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C39ADD4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C39ADDC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.AgeAtLeastCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.AgeAtLeastCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DateOfBirthCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DateOfBirthCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.SexCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.SexCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.AddressCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.AddressCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.IssuingAuthorityCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.IssuingAuthorityCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DrivingPrivilegesCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DrivingPrivilegesCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DocumentNumberCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DocumentNumberCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DocumentIssueDateCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DocumentIssueDateCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DocumentExpirationDateCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DocumentExpirationDateCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDocumentElementInternal.DocumentDHSComplianceStatusCodingKeys()
{
  return &type metadata for MobileDocumentElementInternal.DocumentDHSComplianceStatusCodingKeys;
}

unint64_t sub_21C39AE8C()
{
  unint64_t result;

  result = qword_255260650;
  if (!qword_255260650)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6948, &type metadata for MobileDocumentElementInternal.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260650);
  }
  return result;
}

unint64_t sub_21C39AED4()
{
  unint64_t result;

  result = qword_255260658;
  if (!qword_255260658)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6B40, &type metadata for MobileDocumentElementInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260658);
  }
  return result;
}

unint64_t sub_21C39AF1C()
{
  unint64_t result;

  result = qword_255260660;
  if (!qword_255260660)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6A60, &type metadata for MobileDocumentElementInternal.GivenNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260660);
  }
  return result;
}

unint64_t sub_21C39AF64()
{
  unint64_t result;

  result = qword_255260668;
  if (!qword_255260668)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6A88, &type metadata for MobileDocumentElementInternal.GivenNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260668);
  }
  return result;
}

unint64_t sub_21C39AFAC()
{
  unint64_t result;

  result = qword_255260670;
  if (!qword_255260670)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6A10, &type metadata for MobileDocumentElementInternal.FamilyNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260670);
  }
  return result;
}

unint64_t sub_21C39AFF4()
{
  unint64_t result;

  result = qword_255260678;
  if (!qword_255260678)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6A38, &type metadata for MobileDocumentElementInternal.FamilyNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260678);
  }
  return result;
}

unint64_t sub_21C39B03C()
{
  unint64_t result;

  result = qword_255260680;
  if (!qword_255260680)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B69C0, &type metadata for MobileDocumentElementInternal.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260680);
  }
  return result;
}

unint64_t sub_21C39B084()
{
  unint64_t result;

  result = qword_255260688;
  if (!qword_255260688)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B69E8, &type metadata for MobileDocumentElementInternal.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260688);
  }
  return result;
}

unint64_t sub_21C39B0CC()
{
  unint64_t result;

  result = qword_255260690;
  if (!qword_255260690)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6970, &type metadata for MobileDocumentElementInternal.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260690);
  }
  return result;
}

unint64_t sub_21C39B114()
{
  unint64_t result;

  result = qword_255260698;
  if (!qword_255260698)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6998, &type metadata for MobileDocumentElementInternal.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260698);
  }
  return result;
}

unint64_t sub_21C39B15C()
{
  unint64_t result;

  result = qword_2552606A0;
  if (!qword_2552606A0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B68B8, &type metadata for MobileDocumentElementInternal.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606A0);
  }
  return result;
}

unint64_t sub_21C39B1A4()
{
  unint64_t result;

  result = qword_2552606A8;
  if (!qword_2552606A8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B68E0, &type metadata for MobileDocumentElementInternal.AgeAtLeastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606A8);
  }
  return result;
}

unint64_t sub_21C39B1EC()
{
  unint64_t result;

  result = qword_2552606B0;
  if (!qword_2552606B0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6868, &type metadata for MobileDocumentElementInternal.DateOfBirthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606B0);
  }
  return result;
}

unint64_t sub_21C39B234()
{
  unint64_t result;

  result = qword_2552606B8;
  if (!qword_2552606B8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6890, &type metadata for MobileDocumentElementInternal.DateOfBirthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606B8);
  }
  return result;
}

unint64_t sub_21C39B27C()
{
  unint64_t result;

  result = qword_2552606C0;
  if (!qword_2552606C0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6818, &type metadata for MobileDocumentElementInternal.SexCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606C0);
  }
  return result;
}

unint64_t sub_21C39B2C4()
{
  unint64_t result;

  result = qword_2552606C8;
  if (!qword_2552606C8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6840, &type metadata for MobileDocumentElementInternal.SexCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606C8);
  }
  return result;
}

unint64_t sub_21C39B30C()
{
  unint64_t result;

  result = qword_2552606D0;
  if (!qword_2552606D0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B67C8, &type metadata for MobileDocumentElementInternal.AddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606D0);
  }
  return result;
}

unint64_t sub_21C39B354()
{
  unint64_t result;

  result = qword_2552606D8;
  if (!qword_2552606D8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B67F0, &type metadata for MobileDocumentElementInternal.AddressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606D8);
  }
  return result;
}

unint64_t sub_21C39B39C()
{
  unint64_t result;

  result = qword_2552606E0;
  if (!qword_2552606E0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6778, &type metadata for MobileDocumentElementInternal.IssuingAuthorityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606E0);
  }
  return result;
}

unint64_t sub_21C39B3E4()
{
  unint64_t result;

  result = qword_2552606E8;
  if (!qword_2552606E8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B67A0, &type metadata for MobileDocumentElementInternal.IssuingAuthorityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606E8);
  }
  return result;
}

unint64_t sub_21C39B42C()
{
  unint64_t result;

  result = qword_2552606F0;
  if (!qword_2552606F0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6728, &type metadata for MobileDocumentElementInternal.DrivingPrivilegesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606F0);
  }
  return result;
}

unint64_t sub_21C39B474()
{
  unint64_t result;

  result = qword_2552606F8;
  if (!qword_2552606F8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6750, &type metadata for MobileDocumentElementInternal.DrivingPrivilegesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2552606F8);
  }
  return result;
}

unint64_t sub_21C39B4BC()
{
  unint64_t result;

  result = qword_255260700;
  if (!qword_255260700)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B66D8, &type metadata for MobileDocumentElementInternal.DocumentNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260700);
  }
  return result;
}

unint64_t sub_21C39B504()
{
  unint64_t result;

  result = qword_255260708;
  if (!qword_255260708)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6700, &type metadata for MobileDocumentElementInternal.DocumentNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260708);
  }
  return result;
}

unint64_t sub_21C39B54C()
{
  unint64_t result;

  result = qword_255260710;
  if (!qword_255260710)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6688, &type metadata for MobileDocumentElementInternal.DocumentIssueDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260710);
  }
  return result;
}

unint64_t sub_21C39B594()
{
  unint64_t result;

  result = qword_255260718;
  if (!qword_255260718)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B66B0, &type metadata for MobileDocumentElementInternal.DocumentIssueDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260718);
  }
  return result;
}

unint64_t sub_21C39B5DC()
{
  unint64_t result;

  result = qword_255260720;
  if (!qword_255260720)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6638, &type metadata for MobileDocumentElementInternal.DocumentExpirationDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260720);
  }
  return result;
}

unint64_t sub_21C39B624()
{
  unint64_t result;

  result = qword_255260728;
  if (!qword_255260728)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6660, &type metadata for MobileDocumentElementInternal.DocumentExpirationDateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260728);
  }
  return result;
}

unint64_t sub_21C39B66C()
{
  unint64_t result;

  result = qword_255260730;
  if (!qword_255260730)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B65E8, &type metadata for MobileDocumentElementInternal.DocumentDHSComplianceStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260730);
  }
  return result;
}

unint64_t sub_21C39B6B4()
{
  unint64_t result;

  result = qword_255260738;
  if (!qword_255260738)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6610, &type metadata for MobileDocumentElementInternal.DocumentDHSComplianceStatusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260738);
  }
  return result;
}

unint64_t sub_21C39B6FC()
{
  unint64_t result;

  result = qword_255260740;
  if (!qword_255260740)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6AB0, &type metadata for MobileDocumentElementInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260740);
  }
  return result;
}

unint64_t sub_21C39B744()
{
  unint64_t result;

  result = qword_255260748;
  if (!qword_255260748)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B6AD8, &type metadata for MobileDocumentElementInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260748);
  }
  return result;
}

uint64_t sub_21C39B788(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E796C696D6166 && a2 == 0xEA0000000000656DLL || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7469617274726F70 && a2 == 0xE800000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61654C7441656761 && a2 == 0xEA00000000007473 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6942664F65746164 && a2 == 0xEB00000000687472 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 7890291 && a2 == 0xE300000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021C3B9ED0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021C3B9EF0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEE007265626D754ELL || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021C3B9F30 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000021C3B9F50 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000021C3B9F70)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

unint64_t ReadFeedbackInternal.externalize.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result >= 0xA)
  {
    result = sub_21C3A8670();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a2 = result + 1;
    *(_BYTE *)(a2 + 8) = 1;
  }
  return result;
}

unint64_t ReadFeedbackInternal.externalizeToReadEvent.getter@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 7;
  if (result < 7)
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t ReadFeedbackInternal.init(rawValue:)(unint64_t a1)
{
  return sub_21C39BF50(a1);
}

unint64_t sub_21C39BDA8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_21C39BF50(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t ReadFeedbackInternal.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x726F467964616572;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6574654464726163;
      break;
    case 2:
      result = 0x614365766F6D6572;
      break;
    case 3:
      result = 0x706D6F4364616572;
      break;
    case 4:
      result = 0x7274655264616572;
      break;
    case 5:
      result = 0x636E614364616572;
      break;
    case 6:
      result = 0xD000000000000010;
      break;
    case 7:
    case 8:
      result = 0xD000000000000011;
      break;
    case 9:
      result = 0xD000000000000016;
      break;
    default:
      result = sub_21C3A8670();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_21C39BF48()
{
  uint64_t *v0;

  return ReadFeedbackInternal.description.getter(*v0);
}

unint64_t sub_21C39BF50(unint64_t result)
{
  if (result > 9)
    return 0;
  return result;
}

unint64_t sub_21C39BF64()
{
  unint64_t result;

  result = qword_255260750;
  if (!qword_255260750)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ReadFeedbackInternal, &type metadata for ReadFeedbackInternal);
    atomic_store(result, (unint64_t *)&qword_255260750);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadFeedbackInternal()
{
  return &type metadata for ReadFeedbackInternal;
}

void __swiftcall DiscoveryAnalyticsData.init(eventType:appIdPresence:contentId:contentSessionId:contentVersion:contentRegion:contentScrollable:contentScrollQuantile:errorType:)(ProximityReader::DiscoveryAnalyticsData *__return_ptr retstr, ProximityReader::DiscoveryAnalyticsData::EventType eventType, Swift::Bool appIdPresence, Swift::String contentId, Swift::String contentSessionId, Swift::String contentVersion, Swift::String contentRegion, Swift::Bool_optional contentScrollable, Swift::String_optional contentScrollQuantile, Swift::String_optional errorType)
{
  uint64_t countAndFlagsBits;
  ProximityReader::DiscoveryAnalyticsData::EventType *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  ProximityReader::DiscoveryAnalyticsData::EventType v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::Bool v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  _BYTE v33[12];
  _BOOL4 value;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *object;
  void *v41;
  Swift::String v42;
  Swift::Bool v43;

  v42 = contentVersion;
  countAndFlagsBits = contentId._countAndFlagsBits;
  v12 = (ProximityReader::DiscoveryAnalyticsData::EventType *)eventType;
  object = contentSessionId._object;
  v41 = errorType.value._object;
  v38 = contentSessionId._countAndFlagsBits;
  v39 = errorType.value._countAndFlagsBits;
  v36 = contentId._object;
  v37 = contentScrollQuantile.value._object;
  v35 = contentScrollQuantile.value._countAndFlagsBits;
  value = contentScrollable.value;
  v14 = sub_21C3A78A8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v33[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260128);
  MEMORY[0x24BDAC7A8](v18);
  v20 = &v33[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = *v12;
  v43 = appIdPresence;
  sub_21C3A7860();
  sub_21C3A7854();
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
  v22 = sub_21C3A7848();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
  {
    sub_21C2D775C((uint64_t)v20, &qword_255260128);
    v24 = 0;
    v25 = (void *)0xE000000000000000;
  }
  else
  {
    v24 = sub_21C3A7830();
    v25 = v26;
    (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v20, v22);
  }
  v27 = v43;
  retstr->eventType = v21;
  retstr->appIdPresence = v27;
  retstr->locale._countAndFlagsBits = v24;
  retstr->locale._object = v25;
  v28 = v36;
  retstr->contentId._countAndFlagsBits = countAndFlagsBits;
  retstr->contentId._object = v28;
  v29 = object;
  retstr->contentSessionId._countAndFlagsBits = v38;
  retstr->contentSessionId._object = v29;
  v30 = v42._object;
  retstr->contentVersion._countAndFlagsBits = v42._countAndFlagsBits;
  retstr->contentVersion._object = v30;
  retstr->contentRegion = contentRegion;
  retstr->contentScrollable.value = value;
  v31 = v37;
  retstr->contentScrollQuantile.value._countAndFlagsBits = v35;
  retstr->contentScrollQuantile.value._object = v31;
  v32 = v41;
  retstr->errorType.value._countAndFlagsBits = v39;
  retstr->errorType.value._object = v32;
}

uint64_t DiscoveryAnalyticsData.encode()()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _OWORD v16[8];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[5];
  v16[4] = v0[4];
  v16[5] = v4;
  v5 = v0[7];
  v16[6] = v0[6];
  v16[7] = v5;
  v6 = v0[1];
  v16[0] = *v0;
  v16[1] = v6;
  v7 = v0[3];
  v16[2] = v0[2];
  v16[3] = v7;
  result = sub_21C39C334();
  if (v9 >> 60 == 15)
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v1, (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v10, (uint64_t)v3);
    v11 = sub_21C3A79D4();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) == 1)
    {
      sub_21C2D775C((uint64_t)v3, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v13 = sub_21C3A79BC();
      v14 = sub_21C3A81D8();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_21C2CD000, v13, v14, "DiscoveryAnalyticsData - failed to encode object", v15, 2u);
        MEMORY[0x22077AF8C](v15, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v11);
    }
    return 0;
  }
  return result;
}

uint64_t sub_21C39C334()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v12[20];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_21C3A744C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0[5];
  v12[15] = v0[4];
  v12[16] = v6;
  v7 = v0[7];
  v12[17] = v0[6];
  v12[18] = v7;
  v8 = v0[1];
  v12[11] = *v0;
  v12[12] = v8;
  v9 = v0[3];
  v12[13] = v0[2];
  v12[14] = v9;
  sub_21C3A747C();
  swift_allocObject();
  sub_21C3A7470();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCB358], v2);
  sub_21C3A7458();
  sub_21C39FCA8();
  v10 = sub_21C3A7464();
  swift_release();
  return v10;
}

uint64_t sub_21C39C6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE v9[40];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_21C3A744C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 56;
  sub_21C3237A4(v0, (uint64_t)v9);
  sub_21C3A747C();
  swift_allocObject();
  sub_21C3A7470();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCB358], v2);
  sub_21C3A7458();
  sub_21C39FC64();
  v6 = sub_21C3A7464();
  swift_release();
  return v6;
}

uint64_t sub_21C39CA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = type metadata accessor for AnalyticsReporter();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_21C3A744C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A747C();
  swift_allocObject();
  sub_21C3A7470();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCB358], v2);
  sub_21C3A7458();
  sub_21C39FC1C();
  v6 = sub_21C3A7464();
  swift_release();
  return v6;
}

uint64_t DiscoveryAnalyticsData.EventType.toAnalyticsEventType.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)nullsub_2 + 4 * byte_21C3B7190[*v0]))(0xD000000000000010, 0x800000021C3BDDB0);
}

uint64_t sub_21C39CDAC()
{
  return 0x53746E65746E6F63;
}

ProximityReader::DiscoveryAnalyticsData::EventType_optional __swiftcall DiscoveryAnalyticsData.EventType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (ProximityReader::DiscoveryAnalyticsData::EventType_optional)rawValue;
}

uint64_t DiscoveryAnalyticsData.EventType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ProximityReader::DiscoveryAnalyticsData::EventType_optional sub_21C39CE00(Swift::Int *a1)
{
  return DiscoveryAnalyticsData.EventType.init(rawValue:)(*a1);
}

uint64_t sub_21C39CE08()
{
  sub_21C39FBD8();
  return sub_21C3A804C();
}

uint64_t sub_21C39CE64()
{
  sub_21C39FBD8();
  return sub_21C3A8040();
}

void DiscoveryAnalyticsData.eventType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t DiscoveryAnalyticsData.appIdPresence.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t DiscoveryAnalyticsData.locale.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.contentId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.contentSessionId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.contentVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.contentRegion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.contentScrollable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t DiscoveryAnalyticsData.contentScrollQuantile.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryAnalyticsData.errorType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Void __swiftcall DiscoveryAnalyticsData.logEntry()()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  NSObject *v44;
  os_log_type_t v45;
  _DWORD *v46;
  int v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint8_t *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  int v102;
  uint8_t *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t (*v120)(char *, uint64_t, uint64_t);
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v1);
  v111 = (uint64_t)&v111 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v111 - v4;
  MEMORY[0x24BDAC7A8](v6);
  v114 = (uint64_t)&v111 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v111 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v121 = (char *)&v111 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v122 = (char *)&v111 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v115 = (uint64_t)&v111 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v111 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v113 = (char *)&v111 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v111 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v111 - v26;
  v28 = v0[5];
  v129 = v0[4];
  v130 = v28;
  v29 = v0[7];
  v131 = v0[6];
  v132 = v29;
  v30 = v0[1];
  v125 = *v0;
  v126 = v30;
  v31 = v0[3];
  v127 = v0[2];
  v128 = v31;
  if (qword_25525AB08 != -1)
    swift_once();
  v32 = __swift_project_value_buffer(v1, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v32, (uint64_t)v27);
  v33 = sub_21C3A79D4();
  v34 = *(_QWORD *)(v33 - 8);
  v120 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v35 = v120(v27, 1, v33);
  v117 = v5;
  v118 = v32;
  v112 = v19;
  if (v35 == 1)
  {
    sub_21C2D775C((uint64_t)v27, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v36 = sub_21C3A79BC();
    v37 = sub_21C3A81D8();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_21C2CD000, v36, v37, "*-*-*-* proxreader - DiscoveryAnalyticsData", v38, 2u);
      v39 = v38;
      v5 = v117;
      MEMORY[0x22077AF8C](v39, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v33);
    v32 = v118;
  }
  v40 = (uint64_t)v122;
  v41 = (uint64_t)v113;
  sub_21C2D1D80(v32, (uint64_t)v24);
  v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v120;
  v43 = v120(v24, 1, v33);
  v116 = v34;
  v119 = v10;
  if (v43 == 1)
  {
    sub_21C2D775C((uint64_t)v24, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C39EF24((uint64_t)&v125);
    sub_21C39EF24((uint64_t)&v125);
    v44 = sub_21C3A79BC();
    v45 = sub_21C3A81D8();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (_DWORD *)swift_slowAlloc();
      v124 = swift_slowAlloc();
      *v46 = 136315138;
      __asm { BR              X10 }
    }

    sub_21C30E1E8((uint64_t)&v125);
    sub_21C30E1E8((uint64_t)&v125);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v33);
    v5 = v117;
    v40 = (uint64_t)v122;
  }
  sub_21C2D1D80(v32, v41);
  v47 = v42(v41, 1, v33);
  v48 = (uint64_t)v121;
  if (v47 == 1)
  {
    sub_21C2D775C(v41, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C39EF24((uint64_t)&v125);
    sub_21C39EF24((uint64_t)&v125);
    v49 = sub_21C3A79BC();
    v50 = sub_21C3A81D8();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v124 = v52;
      *(_DWORD *)v51 = 136315138;
      v54 = *((_QWORD *)&v125 + 1);
      v53 = v126;
      swift_bridgeObjectRetain();
      v41 = (uint64_t)v113;
      v123 = sub_21C350398(v54, v53, &v124);
      v34 = v116;
      v32 = v118;
      sub_21C3A82F8();
      v10 = v119;
      swift_bridgeObjectRelease();
      sub_21C30E1E8((uint64_t)&v125);
      sub_21C30E1E8((uint64_t)&v125);
      _os_log_impl(&dword_21C2CD000, v49, v50, "               locale = %s", v51, 0xCu);
      swift_arrayDestroy();
      v55 = v52;
      v5 = v117;
      MEMORY[0x22077AF8C](v55, -1, -1);
      v56 = v51;
      v48 = (uint64_t)v121;
      MEMORY[0x22077AF8C](v56, -1, -1);

    }
    else
    {

      sub_21C30E1E8((uint64_t)&v125);
      sub_21C30E1E8((uint64_t)&v125);
    }
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v41, v33);
    v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v120;
    v40 = (uint64_t)v122;
  }
  v57 = (uint64_t)v112;
  sub_21C2D1D80(v32, (uint64_t)v112);
  if (v42(v57, 1, v33) == 1)
  {
    sub_21C2D775C(v57, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C39EF24((uint64_t)&v125);
    v58 = sub_21C3A79BC();
    v59 = sub_21C3A81D8();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v60 = 67109120;
      v32 = v118;
      LODWORD(v124) = BYTE1(v125);
      sub_21C3A82F8();
      sub_21C30E1E8((uint64_t)&v125);
      _os_log_impl(&dword_21C2CD000, v58, v59, "        appIdPresence = %{BOOL}d", v60, 8u);
      v61 = v60;
      v10 = v119;
      MEMORY[0x22077AF8C](v61, -1, -1);

    }
    else
    {

      sub_21C30E1E8((uint64_t)&v125);
    }
    v48 = (uint64_t)v121;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v57, v33);
    v40 = (uint64_t)v122;
  }
  v62 = v115;
  sub_21C2D1D80(v32, v115);
  if (v42(v62, 1, v33) == 1)
  {
    sub_21C2D775C(v62, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C39EF24((uint64_t)&v125);
    sub_21C39EF24((uint64_t)&v125);
    v63 = sub_21C3A79BC();
    v64 = sub_21C3A81D8();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      v66 = swift_slowAlloc();
      v124 = v66;
      *(_DWORD *)v65 = 136315138;
      v67 = *((_QWORD *)&v126 + 1);
      v68 = v127;
      swift_bridgeObjectRetain();
      v69 = v67;
      v5 = v117;
      v123 = sub_21C350398(v69, v68, &v124);
      v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v120;
      v32 = v118;
      sub_21C3A82F8();
      v34 = v116;
      swift_bridgeObjectRelease();
      sub_21C30E1E8((uint64_t)&v125);
      sub_21C30E1E8((uint64_t)&v125);
      _os_log_impl(&dword_21C2CD000, v63, v64, "            contentId = %s", v65, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v66, -1, -1);
      MEMORY[0x22077AF8C](v65, -1, -1);

    }
    else
    {

      sub_21C30E1E8((uint64_t)&v125);
      sub_21C30E1E8((uint64_t)&v125);
    }
    v48 = (uint64_t)v121;
    v40 = (uint64_t)v122;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v115, v33);
    v10 = v119;
  }
  sub_21C2D1D80(v32, v40);
  if (v42(v40, 1, v33) == 1)
  {
    sub_21C2D775C(v40, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C39EF24((uint64_t)&v125);
    sub_21C39EF24((uint64_t)&v125);
    v70 = sub_21C3A79BC();
    v71 = sub_21C3A81D8();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v124 = v73;
      *(_DWORD *)v72 = 136315138;
      v74 = *((_QWORD *)&v127 + 1);
      v75 = v128;
      swift_bridgeObjectRetain();
      v76 = v74;
      v5 = v117;
      v123 = sub_21C350398(v76, v75, &v124);
      v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v120;
      v32 = v118;
      sub_21C3A82F8();
      v34 = v116;
      swift_bridgeObjectRelease();
      sub_21C30E1E8((uint64_t)&v125);
      sub_21C30E1E8((uint64_t)&v125);
      _os_log_impl(&dword_21C2CD000, v70, v71, "     contentSessionId = %s", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v73, -1, -1);
      MEMORY[0x22077AF8C](v72, -1, -1);

    }
    else
    {

      sub_21C30E1E8((uint64_t)&v125);
      sub_21C30E1E8((uint64_t)&v125);
    }
    v48 = (uint64_t)v121;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v122, v33);
    v10 = v119;
  }
  sub_21C2D1D80(v32, v48);
  if (v42(v48, 1, v33) == 1)
  {
    sub_21C2D775C(v48, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C39EF24((uint64_t)&v125);
    sub_21C39EF24((uint64_t)&v125);
    v77 = sub_21C3A79BC();
    v78 = sub_21C3A81D8();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      v80 = swift_slowAlloc();
      v124 = v80;
      *(_DWORD *)v79 = 136315138;
      v81 = *((_QWORD *)&v128 + 1);
      v82 = v129;
      swift_bridgeObjectRetain();
      v83 = v81;
      v5 = v117;
      v123 = sub_21C350398(v83, v82, &v124);
      v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v120;
      v32 = v118;
      sub_21C3A82F8();
      v34 = v116;
      swift_bridgeObjectRelease();
      sub_21C30E1E8((uint64_t)&v125);
      sub_21C30E1E8((uint64_t)&v125);
      _os_log_impl(&dword_21C2CD000, v77, v78, "       contentVersion = %s", v79, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v80, -1, -1);
      MEMORY[0x22077AF8C](v79, -1, -1);

    }
    else
    {

      sub_21C30E1E8((uint64_t)&v125);
      sub_21C30E1E8((uint64_t)&v125);
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v121, v33);
    v10 = v119;
  }
  sub_21C2D1D80(v32, (uint64_t)v10);
  if (v42((uint64_t)v10, 1, v33) == 1)
  {
    sub_21C2D775C((uint64_t)v10, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C39EF24((uint64_t)&v125);
    sub_21C39EF24((uint64_t)&v125);
    v84 = sub_21C3A79BC();
    v85 = sub_21C3A81D8();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc();
      v87 = swift_slowAlloc();
      v124 = v87;
      *(_DWORD *)v86 = 136315138;
      v88 = *((_QWORD *)&v129 + 1);
      v89 = v130;
      swift_bridgeObjectRetain();
      v90 = v88;
      v5 = v117;
      v123 = sub_21C350398(v90, v89, &v124);
      v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v120;
      v32 = v118;
      sub_21C3A82F8();
      v34 = v116;
      swift_bridgeObjectRelease();
      sub_21C30E1E8((uint64_t)&v125);
      sub_21C30E1E8((uint64_t)&v125);
      _os_log_impl(&dword_21C2CD000, v84, v85, "        contentRegion = %s", v86, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v87, -1, -1);
      MEMORY[0x22077AF8C](v86, -1, -1);

    }
    else
    {

      sub_21C30E1E8((uint64_t)&v125);
      sub_21C30E1E8((uint64_t)&v125);
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v119, v33);
  }
  v91 = BYTE8(v130);
  if (BYTE8(v130) == 2)
  {
LABEL_52:
    v93 = *((_QWORD *)&v131 + 1);
    if (!*((_QWORD *)&v131 + 1))
      goto LABEL_63;
    goto LABEL_53;
  }
  v92 = v114;
  sub_21C2D1D80(v32, v114);
  if (v42(v92, 1, v33) == 1)
  {
    sub_21C2D775C(v114, (uint64_t *)&unk_25525B0E0);
    goto LABEL_52;
  }
  v100 = sub_21C3A79BC();
  v101 = sub_21C3A81D8();
  if (os_log_type_enabled(v100, v101))
  {
    v102 = v91 & 1;
    v103 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v103 = 67109120;
    LODWORD(v124) = v102;
    v32 = v118;
    sub_21C3A82F8();
    _os_log_impl(&dword_21C2CD000, v100, v101, "    contentScrollable = %{BOOL}d", v103, 8u);
    MEMORY[0x22077AF8C](v103, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v114, v33);
  v93 = *((_QWORD *)&v131 + 1);
  if (*((_QWORD *)&v131 + 1))
  {
LABEL_53:
    v94 = v131;
    sub_21C2D1D80(v32, (uint64_t)v5);
    if (v42((uint64_t)v5, 1, v33) == 1)
    {
      sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v95 = sub_21C3A79BC();
      v96 = sub_21C3A81D8();
      if (os_log_type_enabled(v95, v96))
      {
        v97 = (uint8_t *)swift_slowAlloc();
        v98 = swift_slowAlloc();
        v124 = v98;
        *(_DWORD *)v97 = 136315138;
        swift_bridgeObjectRetain();
        v123 = sub_21C350398(v94, v93, &v124);
        v34 = v116;
        v5 = v117;
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v95, v96, "contentScrollQuantile = %s", v97, 0xCu);
        swift_arrayDestroy();
        v99 = v98;
        v32 = v118;
        MEMORY[0x22077AF8C](v99, -1, -1);
        MEMORY[0x22077AF8C](v97, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v33);
      v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v120;
    }
  }
LABEL_63:
  v104 = *((_QWORD *)&v132 + 1);
  if (*((_QWORD *)&v132 + 1))
  {
    v105 = v132;
    v106 = v111;
    sub_21C2D1D80(v32, v111);
    if (v42(v106, 1, v33) == 1)
    {
      sub_21C2D775C(v106, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v107 = sub_21C3A79BC();
      v108 = sub_21C3A81D8();
      if (os_log_type_enabled(v107, v108))
      {
        v109 = (uint8_t *)swift_slowAlloc();
        v110 = swift_slowAlloc();
        v124 = v110;
        *(_DWORD *)v109 = 136315138;
        swift_bridgeObjectRetain();
        v123 = sub_21C350398(v105, v104, &v124);
        v34 = v116;
        v106 = v111;
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v107, v108, "         errorType = %s", v109, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v110, -1, -1);
        MEMORY[0x22077AF8C](v109, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v106, v33);
    }
  }
}

uint64_t sub_21C39E2F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C39E330 + 4 * byte_21C3B7198[a1]))(0x707954746E657665, 0xE900000000000065);
}

uint64_t sub_21C39E330()
{
  return 0x6572506449707061;
}

uint64_t sub_21C39E354()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_21C39E368()
{
  return 0x49746E65746E6F63;
}

unint64_t sub_21C39E380()
{
  return 0xD000000000000010;
}

uint64_t sub_21C39E39C()
{
  return 0x56746E65746E6F63;
}

uint64_t sub_21C39E3C0()
{
  return 0x52746E65746E6F63;
}

unint64_t sub_21C39E3E4()
{
  return 0xD000000000000011;
}

uint64_t sub_21C39E420()
{
  return 0x707954726F727265;
}

uint64_t sub_21C39E434()
{
  unsigned __int8 *v0;

  return sub_21C39E2F8(*v0);
}

uint64_t sub_21C39E43C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C39F770(a1, a2);
  *a3 = result;
  return result;
}

void sub_21C39E460(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_21C39E46C()
{
  sub_21C39EFAC();
  return sub_21C3A8754();
}

uint64_t sub_21C39E494()
{
  sub_21C39EFAC();
  return sub_21C3A8760();
}

uint64_t DiscoveryAnalyticsData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260758);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v34 = v1[1];
  v9 = *((_QWORD *)v1 + 1);
  v32 = *((_QWORD *)v1 + 2);
  v33 = v9;
  v10 = *((_QWORD *)v1 + 3);
  v30 = *((_QWORD *)v1 + 4);
  v31 = v10;
  v11 = *((_QWORD *)v1 + 6);
  v27 = *((_QWORD *)v1 + 5);
  v28 = v11;
  v12 = *((_QWORD *)v1 + 8);
  v25 = *((_QWORD *)v1 + 7);
  v26 = v12;
  v13 = *((_QWORD *)v1 + 10);
  v23 = *((_QWORD *)v1 + 9);
  v24 = v13;
  v22 = v1[88];
  v14 = *((_QWORD *)v1 + 13);
  v21[1] = *((_QWORD *)v1 + 12);
  v21[2] = v14;
  v15 = *((_QWORD *)v1 + 15);
  v29 = *((_QWORD *)v1 + 14);
  v16 = a1[3];
  v17 = a1;
  v19 = v18;
  __swift_project_boxed_opaque_existential_1(v17, v16);
  sub_21C39EFAC();
  sub_21C3A8748();
  v45 = v8;
  v44 = 0;
  sub_21C39EFF0();
  sub_21C3A8610();
  if (!v2)
  {
    v21[0] = v15;
    v43 = 1;
    sub_21C3A85EC();
    v42 = 2;
    sub_21C3A85E0();
    v41 = 3;
    sub_21C3A85E0();
    v40 = 4;
    sub_21C3A85E0();
    v39 = 5;
    sub_21C3A85E0();
    v38 = 6;
    sub_21C3A85E0();
    v37 = 7;
    sub_21C3A85BC();
    v36 = 8;
    sub_21C3A85B0();
    v35 = 9;
    sub_21C3A85B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v19);
}

uint64_t DiscoveryAnalyticsData.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _BYTE v61[2];
  int v62;
  __int16 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  _BYTE v75[7];
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  char v79;
  _BYTE v80[11];
  __int16 v81;
  _QWORD *v82;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260770);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v82 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_21C39EFAC();
  sub_21C3A873C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  LOBYTE(v53) = 0;
  sub_21C39F034();
  sub_21C3A858C();
  v10 = v61[0];
  v61[0] = 1;
  v11 = sub_21C3A8568();
  v61[0] = 2;
  v12 = sub_21C3A855C();
  v48 = v11;
  v49 = v12;
  v61[0] = 3;
  v14 = v13;
  swift_bridgeObjectRetain();
  v15 = sub_21C3A855C();
  v52 = v14;
  v47 = v15;
  v61[0] = 4;
  v17 = v16;
  swift_bridgeObjectRetain();
  v18 = sub_21C3A855C();
  v51 = v17;
  v46 = v18;
  v61[0] = 5;
  v50 = v19;
  swift_bridgeObjectRetain();
  v44 = sub_21C3A855C();
  v45 = v20;
  v61[0] = 6;
  swift_bridgeObjectRetain();
  v42 = sub_21C3A855C();
  v43 = v21;
  v22 = v45;
  v61[0] = 7;
  swift_bridgeObjectRetain();
  v40 = sub_21C3A8538();
  v41 = v10;
  v23 = v43;
  v61[0] = 8;
  v39 = sub_21C3A852C();
  v79 = 9;
  v38 = v24;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v37 = sub_21C3A852C();
  *((_QWORD *)&v37 + 1) = v25;
  v48 &= 1u;
  v26 = v48;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v53) = v41;
  BYTE1(v53) = v26;
  v27 = v50;
  v29 = v51;
  v28 = v52;
  *((_QWORD *)&v53 + 1) = v49;
  *(_QWORD *)&v54 = v52;
  *((_QWORD *)&v54 + 1) = v47;
  *(_QWORD *)&v55 = v51;
  *((_QWORD *)&v55 + 1) = v46;
  *(_QWORD *)&v56 = v50;
  *((_QWORD *)&v56 + 1) = v44;
  *(_QWORD *)&v57 = v22;
  *((_QWORD *)&v57 + 1) = v42;
  *(_QWORD *)&v58 = v23;
  BYTE8(v58) = v40;
  v30 = v38;
  *(_QWORD *)&v59 = v39;
  *((_QWORD *)&v59 + 1) = v38;
  v60 = v37;
  sub_21C39EF24((uint64_t)&v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v58;
  a2[4] = v57;
  a2[5] = v31;
  v32 = v60;
  a2[6] = v59;
  a2[7] = v32;
  v33 = v54;
  *a2 = v53;
  a2[1] = v33;
  v34 = v56;
  a2[2] = v55;
  a2[3] = v34;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  v61[0] = v41;
  v61[1] = v48;
  v62 = *(_DWORD *)&v80[7];
  v63 = v81;
  v64 = v49;
  v65 = v28;
  v66 = v47;
  v67 = v29;
  v68 = v46;
  v69 = v27;
  v70 = v44;
  v71 = v22;
  v72 = v42;
  v73 = v23;
  v74 = v40;
  *(_DWORD *)&v75[3] = *(_DWORD *)&v80[3];
  *(_DWORD *)v75 = *(_DWORD *)v80;
  v76 = v39;
  v77 = v30;
  v78 = v37;
  return sub_21C30E1E8((uint64_t)v61);
}

uint64_t sub_21C39EDFC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return DiscoveryAnalyticsData.init(from:)(a1, a2);
}

uint64_t sub_21C39EE10(_QWORD *a1)
{
  return DiscoveryAnalyticsData.encode(to:)(a1);
}

uint64_t DiscoveryAnalyticsData.EventType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21C39EE58 + 4 * byte_21C3B71A2[*v0]))(0xD000000000000010, 0x800000021C3BDDB0);
}

uint64_t sub_21C39EE58()
{
  return 0x53746E65746E6F63;
}

uint64_t sub_21C39EE90()
{
  return 0x726F727265;
}

uint64_t sub_21C39EEA4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21C39EED8 + 4 * byte_21C3B71A6[*v0]))(0xD000000000000010, 0x800000021C3BDDB0);
}

uint64_t sub_21C39EED8()
{
  return 0x53746E65746E6F63;
}

uint64_t sub_21C39EF10()
{
  return 0x726F727265;
}

uint64_t sub_21C39EF24(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_21C39EFAC()
{
  unint64_t result;

  result = qword_255260760;
  if (!qword_255260760)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B7458, &type metadata for DiscoveryAnalyticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260760);
  }
  return result;
}

unint64_t sub_21C39EFF0()
{
  unint64_t result;

  result = qword_255260768;
  if (!qword_255260768)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryAnalyticsData.EventType, &type metadata for DiscoveryAnalyticsData.EventType);
    atomic_store(result, (unint64_t *)&qword_255260768);
  }
  return result;
}

unint64_t sub_21C39F034()
{
  unint64_t result;

  result = qword_255260778;
  if (!qword_255260778)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryAnalyticsData.EventType, &type metadata for DiscoveryAnalyticsData.EventType);
    atomic_store(result, (unint64_t *)&qword_255260778);
  }
  return result;
}

unint64_t sub_21C39F07C()
{
  unint64_t result;

  result = qword_255260780;
  if (!qword_255260780)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryAnalyticsData.EventType, &type metadata for DiscoveryAnalyticsData.EventType);
    atomic_store(result, (unint64_t *)&qword_255260780);
  }
  return result;
}

uint64_t destroy for DiscoveryAnalyticsData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DiscoveryAnalyticsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DiscoveryAnalyticsData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for DiscoveryAnalyticsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryAnalyticsData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryAnalyticsData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryAnalyticsData()
{
  return &type metadata for DiscoveryAnalyticsData;
}

uint64_t storeEnumTagSinglePayload for DiscoveryAnalyticsData.EventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21C39F4BC + 4 * byte_21C3B71AF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21C39F4F0 + 4 * byte_21C3B71AA[v4]))();
}

uint64_t sub_21C39F4F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C39F4F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C39F500);
  return result;
}

uint64_t sub_21C39F50C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C39F514);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21C39F518(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C39F520(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryAnalyticsData.EventType()
{
  return &type metadata for DiscoveryAnalyticsData.EventType;
}

uint64_t getEnumTagSinglePayload for DiscoveryAnalyticsData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryAnalyticsData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_21C39F618 + 4 * byte_21C3B71B9[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_21C39F64C + 4 * byte_21C3B71B4[v4]))();
}

uint64_t sub_21C39F64C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C39F654(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C39F65CLL);
  return result;
}

uint64_t sub_21C39F668(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C39F670);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_21C39F674(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C39F67C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryAnalyticsData.CodingKeys()
{
  return &type metadata for DiscoveryAnalyticsData.CodingKeys;
}

unint64_t sub_21C39F69C()
{
  unint64_t result;

  result = qword_255260788;
  if (!qword_255260788)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B7430, &type metadata for DiscoveryAnalyticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260788);
  }
  return result;
}

unint64_t sub_21C39F6E4()
{
  unint64_t result;

  result = qword_255260790;
  if (!qword_255260790)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B73A0, &type metadata for DiscoveryAnalyticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260790);
  }
  return result;
}

unint64_t sub_21C39F72C()
{
  unint64_t result;

  result = qword_255260798;
  if (!qword_255260798)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B73C8, &type metadata for DiscoveryAnalyticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260798);
  }
  return result;
}

uint64_t sub_21C39F770(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x707954746E657665 && a2 == 0xE900000000000065;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572506449707061 && a2 == 0xED000065636E6573 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x49746E65746E6F63 && a2 == 0xE900000000000064 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021C3BF9C0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x56746E65746E6F63 && a2 == 0xEE006E6F69737265 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED00006E6F696765 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021C3BDC90 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000021C3BDCB0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x707954726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

unint64_t sub_21C39FBD8()
{
  unint64_t result;

  result = qword_2552607A0;
  if (!qword_2552607A0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryAnalyticsData.EventType, &type metadata for DiscoveryAnalyticsData.EventType);
    atomic_store(result, (unint64_t *)&qword_2552607A0);
  }
  return result;
}

unint64_t sub_21C39FC1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2552607A8;
  if (!qword_2552607A8)
  {
    v1 = type metadata accessor for AnalyticsReporter();
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for AnalyticsReporter, v1);
    atomic_store(result, (unint64_t *)&qword_2552607A8);
  }
  return result;
}

unint64_t sub_21C39FC64()
{
  unint64_t result;

  result = qword_2552607B0;
  if (!qword_2552607B0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for TransactionAmountDescriptionInternal, &type metadata for TransactionAmountDescriptionInternal);
    atomic_store(result, (unint64_t *)&qword_2552607B0);
  }
  return result;
}

unint64_t sub_21C39FCA8()
{
  unint64_t result;

  result = qword_2552607B8;
  if (!qword_2552607B8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryAnalyticsData, &type metadata for DiscoveryAnalyticsData);
    atomic_store(result, (unint64_t *)&qword_2552607B8);
  }
  return result;
}

void MobileDriversLicenseDataRequestInternal.__allocating_init(_:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  MobileDriversLicenseDataRequestInternal.init(_:sessionIdentifier:)(a1, a2, a3);
}

{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  MobileDriversLicenseDataRequestInternal.init(_:sessionIdentifier:)(a1, a2, a3);
}

BOOL MobileDriversLicenseDataRequestInternal.isEmpty.getter()
{
  uint64_t v0;

  return !*(_QWORD *)(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements)
                    + 16)
      && *(_QWORD *)(*(_QWORD *)(v0
                               + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements)
                   + 16) == 0;
}

uint64_t static MobileDriversLicenseDataRequestInternal.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t MobileDriversLicenseDataRequestInternal.retainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequestInternal.nonRetainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequestInternal.useSystemTrustedIssuerCertificates.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_useSystemTrustedIssuerCertificates);
}

uint64_t MobileDriversLicenseDataRequestInternal.additionalTrustedIssuerCertificates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequestInternal.documentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C2FEB9C(v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType, a1);
}

uint64_t MobileDriversLicenseDataRequestInternal.hostPreferredLocaleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequestInternal.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequestInternal.description.getter()
{
  uint64_t v0;

  sub_21C3A83DC();
  sub_21C3A7F8C();
  swift_bridgeObjectRetain();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  swift_bridgeObjectRetain();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  sub_21C398624(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements));
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  sub_21C398624(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements));
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  return 0;
}

void MobileDriversLicenseDataRequestInternal.init(_:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  objc_class *ObjectType;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  objc_super v22;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = v4;
  v9 = swift_bridgeObjectRetain();
  v10 = sub_21C31C7DC(v9);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements] = v10;
  v11 = swift_bridgeObjectRetain();
  v12 = sub_21C31C7DC(v11);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements] = v12;
  v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_useSystemTrustedIssuerCertificates] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_additionalTrustedIssuerCertificates] = MEMORY[0x24BEE4AF8];
  v13 = &v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType];
  v14 = sub_21C3A7848();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v16 = objc_msgSend(v15, sel_preferredLocalizations);

  v17 = (_QWORD *)sub_21C3A8070();
  if (v17[2])
  {
    v19 = v17[4];
    v18 = v17[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = &v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier];
    *v20 = v19;
    v20[1] = v18;
    v21 = &v8[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier];
    *v21 = a2;
    v21[1] = a3;

    v22.receiver = v8;
    v22.super_class = ObjectType;
    objc_msgSendSuper2(&v22, sel_init);
  }
  else
  {
    __break(1u);
  }
}

{
  void *v3;
  void *v4;
  objc_class *ObjectType;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  objc_super v24;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for MobileNationalIDCardDataRequest();
  v9 = v4;
  v10 = swift_bridgeObjectRetain();
  v11 = sub_21C31C7DC(v10);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements] = v11;
  v12 = swift_bridgeObjectRetain();
  v13 = sub_21C31C7DC(v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements] = v13;
  v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_useSystemTrustedIssuerCertificates] = 1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_additionalTrustedIssuerCertificates] = MEMORY[0x24BEE4AF8];
  v14 = &v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType];
  v15 = sub_21C3A7848();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v17 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v18 = objc_msgSend(v17, sel_preferredLocalizations);

  v19 = (_QWORD *)sub_21C3A8070();
  if (v19[2])
  {
    v21 = v19[4];
    v20 = v19[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v22 = &v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier];
    *v22 = v21;
    v22[1] = v20;
    v23 = &v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier];
    *v23 = a2;
    v23[1] = a3;

    v24.receiver = v9;
    v24.super_class = ObjectType;
    objc_msgSendSuper2(&v24, sel_init);
    sub_21C2ED424(a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest);
  }
  else
  {
    __break(1u);
  }
}

id MobileDriversLicenseDataRequestInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseDataRequestInternal.init(coder:)(a1);
}

id MobileDriversLicenseDataRequestInternal.init(coder:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v19;
  objc_super v20;
  char *v21;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_21C2D32C0();
  v4 = v1;
  v5 = sub_21C3A825C();
  if (!v5)
  {

LABEL_10:
    swift_deallocPartialClassInstance();
    return 0;
  }
  v6 = (void *)v5;
  v7 = sub_21C3A774C();
  v9 = v8;

  v10 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  sub_21C2D1E94(v7, v9);
  v11 = sub_21C2D3524();
  sub_21C2D2B48(v7, v9);
  if (!v11)
  {

LABEL_9:
    sub_21C2D2B48(v7, v9);
    goto LABEL_10;
  }
  sub_21C2D1198(&qword_2552607E8, (uint64_t (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequestInternal, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataRequestInternal);
  sub_21C3A81F0();
  v12 = v21;
  if (!v21)
  {

    objc_msgSend(v11, sel_finishDecoding);
    goto LABEL_9;
  }
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements] = *(_QWORD *)&v21[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements];
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements] = *(_QWORD *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements];
  v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_useSystemTrustedIssuerCertificates] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_additionalTrustedIssuerCertificates] = MEMORY[0x24BEE4AF8];
  sub_21C2FEB9C((uint64_t)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType], (uint64_t)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType]);
  v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier
                      + 8];
  v14 = &v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier];
  *(_QWORD *)v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier];
  *((_QWORD *)v14 + 1) = v13;
  v15 = *(_QWORD *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier + 8];
  v19 = *(_QWORD *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  v16 = &v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier];
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v15;

  objc_msgSend(v11, sel_finishDecoding);
  sub_21C2D2B48(v7, v9);
  v20.receiver = v4;
  v20.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v20, sel_init);

  return v17;
}

Swift::Void __swiftcall MobileDriversLicenseDataRequestInternal.encode(with:)(NSCoder with)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  swift_getObjectType();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_21C2D1198(&qword_2552607F0, (uint64_t (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequestInternal, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataRequestInternal);
  sub_21C3A81E4();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_21C3A7EB4();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
  }
}

id MobileDriversLicenseDataRequestInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MobileDriversLicenseDataRequestInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21C3A094C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21C3A0984 + 4 * byte_21C3B74B0[a1]))(0xD000000000000010, 0x800000021C3BA9F0);
}

uint64_t sub_21C3A0984(uint64_t a1)
{
  return a1 + 3;
}

uint64_t sub_21C3A09FC()
{
  unsigned __int8 *v0;

  return sub_21C3A094C(*v0);
}

uint64_t sub_21C3A0A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C3A1A88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C3A0A28()
{
  sub_21C3A17C8();
  return sub_21C3A8754();
}

uint64_t sub_21C3A0A50()
{
  sub_21C3A17C8();
  return sub_21C3A8760();
}

id MobileDriversLicenseDataRequestInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MobileDriversLicenseDataRequestInternal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552607F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C3A17C8();
  sub_21C3A8748();
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements);
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D398);
  sub_21C2ED698(&qword_25525D3A0, &qword_25525D398, (uint64_t (*)(void))sub_21C31ED38, MEMORY[0x24BEE12A0]);
  sub_21C3A8610();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements);
    HIBYTE(v10) = 1;
    sub_21C3A8610();
    LOBYTE(v11) = 2;
    sub_21C3A85EC();
    v11 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_additionalTrustedIssuerCertificates);
    HIBYTE(v10) = 3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D5C0);
    sub_21C2ED698(&qword_255260808, (uint64_t *)&unk_25525D5C0, (uint64_t (*)(void))sub_21C2D2684, MEMORY[0x24BEE12A0]);
    sub_21C3A8610();
    LOBYTE(v11) = 4;
    type metadata accessor for IdentityDocumentType();
    sub_21C2D1198(&qword_25525D3B0, (uint64_t (*)(uint64_t))type metadata accessor for IdentityDocumentType, (uint64_t)&protocol conformance descriptor for IdentityDocumentType);
    sub_21C3A8610();
    LOBYTE(v11) = 5;
    sub_21C3A85E0();
    LOBYTE(v11) = 6;
    sub_21C3A85E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id MobileDriversLicenseDataRequestInternal.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseDataRequestInternal.init(from:)(a1);
}

id MobileDriversLicenseDataRequestInternal.init(from:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  objc_class *ObjectType;
  char *v28;
  objc_super v29;
  char v30;
  uint64_t v31;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for IdentityDocumentType();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255260810);
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v10);
  sub_21C3A17C8();
  v11 = v2;
  v24 = v9;
  v12 = v28;
  sub_21C3A873C();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v28 = v6;
    v13 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D398);
    v30 = 0;
    sub_21C2ED698((unint64_t *)&unk_25525D3C0, &qword_25525D398, (uint64_t (*)(void))sub_21C31EDE4, MEMORY[0x24BEE12D0]);
    v14 = v24;
    v15 = v25;
    sub_21C3A858C();
    *(_QWORD *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements] = v31;
    v30 = 1;
    sub_21C3A858C();
    *(_QWORD *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements] = v31;
    LOBYTE(v31) = 2;
    v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_useSystemTrustedIssuerCertificates] = sub_21C3A8568() & 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D5C0);
    v30 = 3;
    sub_21C2ED698(&qword_255260818, (uint64_t *)&unk_25525D5C0, (uint64_t (*)(void))sub_21C2D2AF0, MEMORY[0x24BEE12D0]);
    sub_21C3A858C();
    *(_QWORD *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_additionalTrustedIssuerCertificates] = v31;
    LOBYTE(v31) = 4;
    sub_21C2D1198(&qword_25525D3D0, (uint64_t (*)(uint64_t))type metadata accessor for IdentityDocumentType, (uint64_t)&protocol conformance descriptor for IdentityDocumentType);
    v17 = (uint64_t)v28;
    sub_21C3A858C();
    sub_21C2FF0D8(v17, (uint64_t)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType]);
    LOBYTE(v31) = 5;
    v18 = sub_21C3A855C();
    v19 = (uint64_t *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_hostPreferredLocaleIdentifier];
    *v19 = v18;
    v19[1] = v20;
    LOBYTE(v31) = 6;
    v21 = sub_21C3A855C();
    v22 = (uint64_t *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier];
    *v22 = v21;
    v22[1] = v23;

    v29.receiver = v11;
    v29.super_class = ObjectType;
    v10 = objc_msgSendSuper2(&v29, sel_init);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return v10;
}

id sub_21C3A138C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  id result;

  v6 = objc_allocWithZone(v2);
  result = MobileDriversLicenseDataRequestInternal.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_21C3A13D8(_QWORD *a1)
{
  return MobileDriversLicenseDataRequestInternal.encode(to:)(a1);
}

uint64_t MobileDriversLicenseDataRequestInternal.requestedElements.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v24 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_21C31E1D8(0, v3, 0);
    v4 = v24;
    v5 = v2 + 40;
    do
    {
      v6 = sub_21C3A7F14();
      v8 = v7;
      v10 = *(_QWORD *)(v24 + 16);
      v9 = *(_QWORD *)(v24 + 24);
      if (v10 >= v9 >> 1)
        sub_21C31E1D8(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v24 + 16) = v10 + 1;
      v11 = v24 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
      v5 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v23 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_21C31E1D8(0, v13, 0);
    v14 = v23;
    v15 = v12 + 40;
    do
    {
      v16 = sub_21C3A7F14();
      v18 = v17;
      v20 = *(_QWORD *)(v23 + 16);
      v19 = *(_QWORD *)(v23 + 24);
      if (v20 >= v19 >> 1)
        sub_21C31E1D8(v19 > 1, v20 + 1, 1);
      *(_QWORD *)(v23 + 16) = v20 + 1;
      v21 = v23 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
      v15 += 16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  sub_21C31EB64(v14);
  return v4;
}

uint64_t MobileDriversLicenseDataRequestInternal.storedElements.getter()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v12 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_21C31E1D8(0, v2, 0);
    v3 = v12;
    v4 = v1 + 40;
    do
    {
      v5 = sub_21C3A7F14();
      v7 = v6;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_21C31E1D8(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return v3;
}

void MobileDriversLicenseDataRequestInternal.transferType.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21C3A16F8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_sessionIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21C3A1734()
{
  return MobileDriversLicenseDataRequestInternal.requestedElements.getter();
}

uint64_t sub_21C3A1754()
{
  return MobileDriversLicenseDataRequestInternal.storedElements.getter();
}

uint64_t sub_21C3A1774@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_21C2FEB9C(*v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_documentType, a1);
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequestInternal()
{
  uint64_t result;

  result = qword_255260848;
  if (!qword_255260848)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21C3A17C8()
{
  unint64_t result;

  result = qword_255260800;
  if (!qword_255260800)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B766C, &type metadata for MobileDriversLicenseDataRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260800);
  }
  return result;
}

uint64_t sub_21C3A180C()
{
  return type metadata accessor for MobileDriversLicenseDataRequestInternal();
}

uint64_t sub_21C3A1814()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IdentityDocumentType();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MobileDriversLicenseDataRequestInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MobileDriversLicenseDataRequestInternal.__allocating_init(_:sessionIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of MobileDriversLicenseDataRequestInternal.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of MobileDriversLicenseDataRequestInternal.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDataRequestInternal.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_21C3A1930 + 4 * byte_21C3B74BC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_21C3A1964 + 4 * byte_21C3B74B7[v4]))();
}

uint64_t sub_21C3A1964(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3A196C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C3A1974);
  return result;
}

uint64_t sub_21C3A1980(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C3A1988);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_21C3A198C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3A1994(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequestInternal.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataRequestInternal.CodingKeys;
}

unint64_t sub_21C3A19B4()
{
  unint64_t result;

  result = qword_255260858;
  if (!qword_255260858)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B7644, &type metadata for MobileDriversLicenseDataRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260858);
  }
  return result;
}

unint64_t sub_21C3A19FC()
{
  unint64_t result;

  result = qword_255260860;
  if (!qword_255260860)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B75B4, &type metadata for MobileDriversLicenseDataRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255260860);
  }
  return result;
}

unint64_t sub_21C3A1A44()
{
  unint64_t result;

  result = qword_255260868[0];
  if (!qword_255260868[0])
  {
    result = MEMORY[0x22077AECC](&unk_21C3B75DC, &type metadata for MobileDriversLicenseDataRequestInternal.CodingKeys);
    atomic_store(result, qword_255260868);
  }
  return result;
}

uint64_t sub_21C3A1A88(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000021C3BA9F0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000021C3BAA10 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000021C3BFA60 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000021C3BFA90 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEC00000065707954 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000021C3BAA40 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021C3BAA60)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_21C3A1D4C()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *sub_21C3A1D54(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  v5 = v3;
  v6 = v4;
  a1[1] = v4;
  return a1;
}

void sub_21C3A1D8C(id *a1)
{

}

uint64_t sub_21C3A1DB4(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = v7;
  v9 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;

  return a1;
}

uint64_t sub_21C3A1E0C(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t type metadata accessor for UncheckedSendableXPCConnection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UncheckedSendableXPCConnection);
}

BOOL MobileDriversLicenseTransferType.isDataTransfer.getter()
{
  unsigned __int8 *v0;

  return *v0 - 1 < 2;
}

BOOL static MobileDriversLicenseTransferType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDriversLicenseTransferType.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileDriversLicenseTransferType.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseTransferType.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x61746144776172;
  if (*v0 != 1)
    v1 = 1635017060;
  if (*v0)
    return v1;
  else
    return 0x4F79616C70736964;
}

unint64_t sub_21C3A1F4C()
{
  unint64_t result;

  result = qword_2552608F0;
  if (!qword_2552608F0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseTransferType, &type metadata for MobileDriversLicenseTransferType);
    atomic_store(result, (unint64_t *)&qword_2552608F0);
  }
  return result;
}

uint64_t sub_21C3A1F90()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x61746144776172;
  if (*v0 != 1)
    v1 = 1635017060;
  if (*v0)
    return v1;
  else
    return 0x4F79616C70736964;
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseTransferType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C3A2038 + 4 * byte_21C3B7715[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C3A206C + 4 * byte_21C3B7710[v4]))();
}

uint64_t sub_21C3A206C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3A2074(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C3A207CLL);
  return result;
}

uint64_t sub_21C3A2088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C3A2090);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C3A2094(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3A209C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseTransferType()
{
  return &type metadata for MobileDriversLicenseTransferType;
}

uint64_t MobileDriversLicenseDataRequest.Response.documentElements.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C3A20C4(v1, a1);
}

uint64_t sub_21C3A20C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MobileDriversLicenseDataRequest.Response.hashValue.getter()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileDriversLicenseDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

uint64_t sub_21C3A214C()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileDriversLicenseDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

uint64_t sub_21C3A218C()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileDriversLicenseDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

unint64_t sub_21C3A21CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2552608F8;
  if (!qword_2552608F8)
  {
    v1 = type metadata accessor for MobileDriversLicenseDataRequest.Response();
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response, v1);
    atomic_store(result, (unint64_t *)&qword_2552608F8);
  }
  return result;
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequest.Response()
{
  uint64_t result;

  result = qword_255260958;
  if (!qword_255260958)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *_s8ResponseVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_21C3A75D8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = v6[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *((_QWORD *)v13 + 1);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v15 = *(_QWORD *)v13;
      sub_21C2D1E94(*(_QWORD *)v13, *((_QWORD *)v13 + 1));
      *(_QWORD *)v12 = v15;
      *((_QWORD *)v12 + 1) = v14;
    }
    *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
    v16 = v6[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = v6[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_21C3A7518();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
    v26 = v6[10];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 1);
    if (v29 == 1)
    {
      v30 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v30;
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    }
    else
    {
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *((_QWORD *)v27 + 1) = v29;
      v31 = *((_QWORD *)v28 + 3);
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
      *((_QWORD *)v27 + 3) = v31;
      v32 = *((_QWORD *)v28 + 5);
      *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
      *((_QWORD *)v27 + 5) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(uint64_t *)((char *)a1 + v6[11]) = *(uint64_t *)((char *)a2 + v6[11]);
    *(uint64_t *)((char *)a1 + v6[12]) = *(uint64_t *)((char *)a2 + v6[12]);
    v33 = v6[13];
    v34 = (uint64_t *)((char *)a1 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = v6[14];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v39, 1, v22))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v38, v39, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v38, 0, 1, v22);
    }
    v41 = v6[15];
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    if (v24((char *)a2 + v41, 1, v22))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v42, v43, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v42, 0, 1, v22);
    }
    *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
    v45 = v6[17];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *((_QWORD *)v47 + 1);
    if (v48 == 1)
    {
      v49 = *((_OWORD *)v47 + 3);
      *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
      *((_OWORD *)v46 + 3) = v49;
      *((_OWORD *)v46 + 4) = *((_OWORD *)v47 + 4);
      v50 = *((_OWORD *)v47 + 1);
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v50;
    }
    else
    {
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v48;
      v51 = *((_QWORD *)v47 + 3);
      *((_QWORD *)v46 + 2) = *((_QWORD *)v47 + 2);
      *((_QWORD *)v46 + 3) = v51;
      v52 = *((_QWORD *)v47 + 5);
      *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
      *((_QWORD *)v46 + 5) = v52;
      v53 = *((_QWORD *)v47 + 7);
      *((_QWORD *)v46 + 6) = *((_QWORD *)v47 + 6);
      *((_QWORD *)v46 + 7) = v53;
      v54 = *((_QWORD *)v47 + 9);
      *((_QWORD *)v46 + 8) = *((_QWORD *)v47 + 8);
      *((_QWORD *)v46 + 9) = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t _s8ResponseVwxx_1(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v2 = sub_21C3A75D8();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v4 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  v5 = (uint64_t *)(a1 + v4[5]);
  v6 = v5[1];
  if (v6 >> 60 != 15)
    sub_21C2D2B48(*v5, v6);
  swift_bridgeObjectRelease();
  v7 = a1 + v4[8];
  v8 = sub_21C3A7518();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  if (*(_QWORD *)(a1 + v4[10] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = a1 + v4[14];
  if (!v10(v11, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  v12 = a1 + v4[15];
  if (!v10(v12, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  result = *(_QWORD *)(a1 + v4[17] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *_s8ResponseVwcp_1(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  v8 = v7[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_QWORD *)v10 + 1);
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  else
  {
    v12 = *(_QWORD *)v10;
    sub_21C2D1E94(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
    *(_QWORD *)v9 = v12;
    *((_QWORD *)v9 + 1) = v11;
  }
  *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
  v13 = v7[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = v7[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_21C3A7518();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  a1[v7[9]] = a2[v7[9]];
  v23 = v7[10];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *((_QWORD *)v25 + 1);
  if (v26 == 1)
  {
    v27 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v27;
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  }
  else
  {
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v28 = *((_QWORD *)v25 + 3);
    *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
    *((_QWORD *)v24 + 3) = v28;
    v29 = *((_QWORD *)v25 + 5);
    *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
    *((_QWORD *)v24 + 5) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)&a1[v7[11]] = *(_QWORD *)&a2[v7[11]];
  *(_QWORD *)&a1[v7[12]] = *(_QWORD *)&a2[v7[12]];
  v30 = v7[13];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  v34 = v7[14];
  v35 = &a1[v34];
  v36 = &a2[v34];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v36, 1, v19))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v35, v36, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v35, 0, 1, v19);
  }
  v38 = v7[15];
  v39 = &a1[v38];
  v40 = &a2[v38];
  if (v21(&a2[v38], 1, v19))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v39, v40, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v39, 0, 1, v19);
  }
  a1[v7[16]] = a2[v7[16]];
  v42 = v7[17];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = *((_QWORD *)v44 + 1);
  if (v45 == 1)
  {
    v46 = *((_OWORD *)v44 + 3);
    *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
    *((_OWORD *)v43 + 3) = v46;
    *((_OWORD *)v43 + 4) = *((_OWORD *)v44 + 4);
    v47 = *((_OWORD *)v44 + 1);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v47;
  }
  else
  {
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    v48 = *((_QWORD *)v44 + 3);
    *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
    *((_QWORD *)v43 + 3) = v48;
    v49 = *((_QWORD *)v44 + 5);
    *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
    *((_QWORD *)v43 + 5) = v49;
    v50 = *((_QWORD *)v44 + 7);
    *((_QWORD *)v43 + 6) = *((_QWORD *)v44 + 6);
    *((_QWORD *)v43 + 7) = v50;
    v51 = *((_QWORD *)v44 + 9);
    *((_QWORD *)v43 + 8) = *((_QWORD *)v44 + 8);
    *((_QWORD *)v43 + 9) = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *_s8ResponseVwca_1(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  v11 = v10[5];
  v12 = (uint64_t *)&a1[v11];
  v13 = (uint64_t *)&a2[v11];
  v14 = *(_QWORD *)&a2[v11 + 8];
  if (*(_QWORD *)&a1[v11 + 8] >> 60 == 15)
  {
    if (v14 >> 60 != 15)
    {
      v15 = *v13;
      sub_21C2D1E94(v15, v14);
      *v12 = v15;
      v12[1] = v14;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v14 >> 60 == 15)
  {
    sub_21C2EF04C((uint64_t)v12);
LABEL_12:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    goto LABEL_14;
  }
  v16 = *v13;
  sub_21C2D1E94(v16, v14);
  v17 = *v12;
  v18 = v12[1];
  *v12 = v16;
  v12[1] = v14;
  sub_21C2D2B48(v17, v18);
LABEL_14:
  *(_QWORD *)&a1[v10[6]] = *(_QWORD *)&a2[v10[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v10[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *(_QWORD *)v20 = v22;
  v23 = v10[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_21C3A7518();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
LABEL_19:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
LABEL_20:
  a1[v10[9]] = a2[v10[9]];
  v32 = v10[10];
  v33 = (uint64_t)&a1[v32];
  v34 = &a2[v32];
  v35 = *(_QWORD *)&a1[v32 + 8];
  v36 = *(_QWORD *)&a2[v32 + 8];
  if (v35 == 1)
  {
    if (v36 == 1)
    {
      v37 = *(_OWORD *)v34;
      v38 = *((_OWORD *)v34 + 2);
      *(_OWORD *)(v33 + 16) = *((_OWORD *)v34 + 1);
      *(_OWORD *)(v33 + 32) = v38;
      *(_OWORD *)v33 = v37;
    }
    else
    {
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *(_QWORD *)(v33 + 8) = *((_QWORD *)v34 + 1);
      *(_QWORD *)(v33 + 16) = *((_QWORD *)v34 + 2);
      *(_QWORD *)(v33 + 24) = *((_QWORD *)v34 + 3);
      *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
      *(_QWORD *)(v33 + 40) = *((_QWORD *)v34 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v36 == 1)
  {
    sub_21C3A32C4(v33);
    v40 = *((_OWORD *)v34 + 1);
    v39 = *((_OWORD *)v34 + 2);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v40;
    *(_OWORD *)(v33 + 32) = v39;
  }
  else
  {
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *(_QWORD *)(v33 + 8) = *((_QWORD *)v34 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v33 + 16) = *((_QWORD *)v34 + 2);
    *(_QWORD *)(v33 + 24) = *((_QWORD *)v34 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
    *(_QWORD *)(v33 + 40) = *((_QWORD *)v34 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v10[12]] = *(_QWORD *)&a2[v10[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = v10[13];
  v42 = &a1[v41];
  v43 = &a2[v41];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = v10[14];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = v28(&a1[v44], 1, v26);
  v48 = v28(v46, 1, v26);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v45, v46, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v45, 0, 1, v26);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v45, v26);
LABEL_32:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v45, v46, v26);
LABEL_33:
  v50 = v10[15];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = v28(&a1[v50], 1, v26);
  v54 = v28(v52, 1, v26);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v51, v52, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v51, 0, 1, v26);
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v51, v26);
LABEL_38:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v51, v52, v26);
LABEL_39:
  a1[v10[16]] = a2[v10[16]];
  v56 = v10[17];
  v57 = (uint64_t)&a1[v56];
  v58 = &a2[v56];
  v59 = *(_QWORD *)&a1[v56 + 8];
  v60 = *((_QWORD *)v58 + 1);
  if (v59 == 1)
  {
    if (v60 == 1)
    {
      *(_OWORD *)v57 = *(_OWORD *)v58;
      v61 = *((_OWORD *)v58 + 1);
      v62 = *((_OWORD *)v58 + 2);
      v63 = *((_OWORD *)v58 + 4);
      *(_OWORD *)(v57 + 48) = *((_OWORD *)v58 + 3);
      *(_OWORD *)(v57 + 64) = v63;
      *(_OWORD *)(v57 + 16) = v61;
      *(_OWORD *)(v57 + 32) = v62;
    }
    else
    {
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *(_QWORD *)(v57 + 8) = *((_QWORD *)v58 + 1);
      *(_QWORD *)(v57 + 16) = *((_QWORD *)v58 + 2);
      *(_QWORD *)(v57 + 24) = *((_QWORD *)v58 + 3);
      *(_QWORD *)(v57 + 32) = *((_QWORD *)v58 + 4);
      *(_QWORD *)(v57 + 40) = *((_QWORD *)v58 + 5);
      *(_QWORD *)(v57 + 48) = *((_QWORD *)v58 + 6);
      *(_QWORD *)(v57 + 56) = *((_QWORD *)v58 + 7);
      *(_QWORD *)(v57 + 64) = *((_QWORD *)v58 + 8);
      *(_QWORD *)(v57 + 72) = *((_QWORD *)v58 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v60 == 1)
  {
    sub_21C3A32F8(v57);
    *(_OWORD *)v57 = *(_OWORD *)v58;
    v64 = *((_OWORD *)v58 + 4);
    v66 = *((_OWORD *)v58 + 1);
    v65 = *((_OWORD *)v58 + 2);
    *(_OWORD *)(v57 + 48) = *((_OWORD *)v58 + 3);
    *(_OWORD *)(v57 + 64) = v64;
    *(_OWORD *)(v57 + 16) = v66;
    *(_OWORD *)(v57 + 32) = v65;
  }
  else
  {
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *(_QWORD *)(v57 + 8) = *((_QWORD *)v58 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v57 + 16) = *((_QWORD *)v58 + 2);
    *(_QWORD *)(v57 + 24) = *((_QWORD *)v58 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v57 + 32) = *((_QWORD *)v58 + 4);
    *(_QWORD *)(v57 + 40) = *((_QWORD *)v58 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v57 + 48) = *((_QWORD *)v58 + 6);
    *(_QWORD *)(v57 + 56) = *((_QWORD *)v58 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v57 + 64) = *((_QWORD *)v58 + 8);
    *(_QWORD *)(v57 + 72) = *((_QWORD *)v58 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_21C3A32C4(uint64_t a1)
{
  destroy for ContentInternal();
  return a1;
}

uint64_t sub_21C3A32F8(uint64_t a1)
{
  destroy for MobileDriversLicenseDataResponseInternal.DocumentElements.Address();
  return a1;
}

char *_s8ResponseVwtk_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  __int128 v34;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
  *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
  v8 = v7[7];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v9[8] = v10[8];
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v11 = v7[8];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_21C3A7518();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  a1[v7[9]] = a2[v7[9]];
  v18 = v7[10];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
  *(_QWORD *)&a1[v7[11]] = *(_QWORD *)&a2[v7[11]];
  *(_QWORD *)&a1[v7[12]] = *(_QWORD *)&a2[v7[12]];
  *(_OWORD *)&a1[v7[13]] = *(_OWORD *)&a2[v7[13]];
  v22 = v7[14];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v16(&a2[v22], 1, v14))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v23, v24, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  v26 = v7[15];
  v27 = &a1[v26];
  v28 = &a2[v26];
  if (v16(&a2[v26], 1, v14))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v27, v28, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
  }
  a1[v7[16]] = a2[v7[16]];
  v30 = v7[17];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *((_OWORD *)v32 + 3);
  *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
  *((_OWORD *)v31 + 3) = v33;
  *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
  v34 = *((_OWORD *)v32 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v34;
  return a1;
}

char *_s8ResponseVwta_1(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  v11 = v10[5];
  v12 = (uint64_t)&a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)&a1[v11 + 8];
  if (v14 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    goto LABEL_12;
  }
  v15 = *((_QWORD *)v13 + 1);
  if (v15 >> 60 == 15)
  {
    sub_21C2EF04C(v12);
    goto LABEL_10;
  }
  v16 = *(_QWORD *)v12;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v15;
  sub_21C2D2B48(v16, v14);
LABEL_12:
  *(_QWORD *)&a1[v10[6]] = *(_QWORD *)&a2[v10[6]];
  swift_bridgeObjectRelease();
  v17 = v10[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = v10[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_21C3A7518();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
LABEL_17:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
LABEL_18:
  a1[v10[9]] = a2[v10[9]];
  v29 = v10[10];
  v30 = (uint64_t)&a1[v29];
  v31 = &a2[v29];
  if (*(_QWORD *)&a1[v29 + 8] == 1)
  {
LABEL_21:
    v33 = *((_OWORD *)v31 + 1);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v33;
    *(_OWORD *)(v30 + 32) = *((_OWORD *)v31 + 2);
    goto LABEL_23;
  }
  v32 = *((_QWORD *)v31 + 1);
  if (v32 == 1)
  {
    sub_21C3A32C4(v30);
    goto LABEL_21;
  }
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  v34 = *((_QWORD *)v31 + 3);
  *(_QWORD *)(v30 + 16) = *((_QWORD *)v31 + 2);
  *(_QWORD *)(v30 + 24) = v34;
  swift_bridgeObjectRelease();
  v35 = *((_QWORD *)v31 + 5);
  *(_QWORD *)(v30 + 32) = *((_QWORD *)v31 + 4);
  *(_QWORD *)(v30 + 40) = v35;
  swift_bridgeObjectRelease();
LABEL_23:
  *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v10[12]] = *(_QWORD *)&a2[v10[12]];
  swift_bridgeObjectRelease();
  v36 = v10[13];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v40 = *(_QWORD *)v38;
  v39 = *((_QWORD *)v38 + 1);
  *(_QWORD *)v37 = v40;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v41 = v10[14];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = v25(&a1[v41], 1, v23);
  v45 = v25(v43, 1, v23);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v42, v43, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v42, 0, 1, v23);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v42, v23);
LABEL_28:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v42, v43, v23);
LABEL_29:
  v47 = v10[15];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = v25(&a1[v47], 1, v23);
  v51 = v25(v49, 1, v23);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v48, v49, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v48, 0, 1, v23);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v48, v23);
LABEL_34:
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v48, v49, v23);
LABEL_35:
  a1[v10[16]] = a2[v10[16]];
  v53 = v10[17];
  v54 = &a1[v53];
  v55 = &a2[v53];
  if (*(_QWORD *)&a1[v53 + 8] != 1)
  {
    v56 = *((_QWORD *)v55 + 1);
    if (v56 != 1)
    {
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *((_QWORD *)v54 + 1) = v56;
      swift_bridgeObjectRelease();
      v59 = *((_QWORD *)v55 + 3);
      *((_QWORD *)v54 + 2) = *((_QWORD *)v55 + 2);
      *((_QWORD *)v54 + 3) = v59;
      swift_bridgeObjectRelease();
      v60 = *((_QWORD *)v55 + 5);
      *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
      *((_QWORD *)v54 + 5) = v60;
      swift_bridgeObjectRelease();
      v61 = *((_QWORD *)v55 + 7);
      *((_QWORD *)v54 + 6) = *((_QWORD *)v55 + 6);
      *((_QWORD *)v54 + 7) = v61;
      swift_bridgeObjectRelease();
      v62 = *((_QWORD *)v55 + 9);
      *((_QWORD *)v54 + 8) = *((_QWORD *)v55 + 8);
      *((_QWORD *)v54 + 9) = v62;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_21C3A32F8((uint64_t)v54);
  }
  v57 = *((_OWORD *)v55 + 3);
  *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
  *((_OWORD *)v54 + 3) = v57;
  *((_OWORD *)v54 + 4) = *((_OWORD *)v55 + 4);
  v58 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v58;
  return a1;
}

uint64_t _s8ResponseVwet_1()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C3A3B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s8ResponseVwst_3()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C3A3B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_21C3A3BAC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MobileDriversLicenseRequestInformation.multiCheck.getter()
{
  return 0;
}

uint64_t sub_21C3A3C1C()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t MobileDriversLicenseRequestInformation.storedElements.getter()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.sessionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.requestedElements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.storedElements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.transferType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.multiCheck.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MobileDriversLicenseRequestInformation.documentType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

unint64_t sub_21C3A3C64(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int v15;
  char v16;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v11);
    result = sub_21C2DC140(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11));
    if ((v16 & 1) == 0 || v15 != *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + result))
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.nameComponents.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C2F50EC(v1, a1, &qword_25525BA10);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.portraitData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements() + 20);
  v2 = *(_QWORD *)v1;
  sub_21C2D1E80(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.ageAtLeastElements.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.age.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements() + 28));
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.dateOfBirth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return sub_21C2F50EC(v1 + *(int *)(v3 + 32), a1, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.sex.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.address.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  result = 0;
  if (*(_QWORD *)(v0 + *(int *)(v1 + 68) + 8) != 1)
    return sub_21C3360B4();
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.issuingAuthority.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1
                 + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements() + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_21C2ED86C(v4, v5);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.drivingPrivileges.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.aamvaDrivingPrivileges.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.documentNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + *(int *)(type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.documentIssueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return sub_21C2F50EC(v1 + *(int *)(v3 + 56), a1, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.documentExpirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  return sub_21C2F50EC(v1 + *(int *)(v3 + 60), a1, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.documentDHSComplianceStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v2 = v1;
  v4 = sub_21C3A7518();
  v48 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v7);
  v47 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v49 = (uint64_t)&v46 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v46 - v12;
  v14 = sub_21C3A75D8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2F50EC(v2, (uint64_t)v20, &qword_25525BA10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525BA18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC28]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  v21 = v48;
  v22 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  v23 = (uint64_t *)(v2 + v22[5]);
  v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    sub_21C3A8718();
  }
  else
  {
    v25 = *v23;
    sub_21C3A8718();
    sub_21C2D1E94(v25, v24);
    sub_21C3A7758();
    sub_21C2D2B34(v25, v24);
  }
  v26 = *(_QWORD *)(v2 + v22[6]);
  swift_bridgeObjectRetain();
  sub_21C2EA908(a1, v26);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v2 + v22[7] + 8) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    sub_21C3A8718();
    sub_21C3A870C();
  }
  sub_21C2F50EC(v2 + v22[8], (uint64_t)v13, &qword_25525B8A0);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v27(v13, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v6, v13, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  }
  if (*(_BYTE *)(v2 + v22[9]) == 5)
  {
    sub_21C3A8718();
  }
  else
  {
    sub_21C3A8718();
    sub_21C3A870C();
  }
  v28 = v2 + v22[10];
  v29 = *(_QWORD *)(v28 + 8);
  if (v29 == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    v50 = *(_QWORD *)v28;
    v51 = v29;
    v30 = *(_OWORD *)(v28 + 32);
    v52 = *(_OWORD *)(v28 + 16);
    v53 = v30;
    sub_21C3A8718();
    MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority.hash(into:)();
  }
  v31 = *(_QWORD *)(v2 + v22[11]);
  swift_bridgeObjectRetain();
  sub_21C2EA398(a1, v31);
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v2 + v22[12]);
  swift_bridgeObjectRetain();
  sub_21C2E9D48(a1, v32);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v22[13] + 8))
  {
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21C3A8718();
  }
  v33 = v49;
  sub_21C2F50EC(v2 + v22[14], v49, &qword_25525B8A0);
  if (v27((char *)v33, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v6, v33, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  }
  v34 = v47;
  sub_21C2F50EC(v2 + v22[15], v47, &qword_25525B8A0);
  if (v27((char *)v34, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v6, v34, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  }
  if (*(_BYTE *)(v2 + v22[16]) == 2)
  {
    sub_21C3A8718();
  }
  else
  {
    sub_21C3A8718();
    sub_21C3A870C();
  }
  v35 = (uint64_t *)(v2 + v22[17]);
  v36 = v35[1];
  if (v36 == 1)
    return sub_21C3A8718();
  v39 = v35[8];
  v38 = v35[9];
  v40 = v35[6];
  v41 = v35[7];
  v42 = v35[5];
  v48 = v35[4];
  v49 = v40;
  v44 = v35[2];
  v43 = v35[3];
  v50 = *v35;
  v45 = v50;
  v51 = v36;
  *(_QWORD *)&v52 = v44;
  *((_QWORD *)&v52 + 1) = v43;
  *(_QWORD *)&v53 = v48;
  *((_QWORD *)&v53 + 1) = v42;
  v54 = v40;
  v55 = v41;
  v56 = v39;
  v57 = v38;
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C3362A0();
  return sub_21C2EDAC4(v45, v36);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.hashValue.getter()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileDriversLicenseDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

BOOL _s15ProximityReader31MobileDriversLicenseDataRequestV8ResponseV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  _QWORD *v61;
  char v62;
  _QWORD *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  int v77;
  int v78;
  _BOOL8 result;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  int v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v174 = a2;
  v169 = sub_21C3A7518();
  v168 = *(_QWORD *)(v169 - 8);
  MEMORY[0x24BDAC7A8](v169);
  v165 = (char *)&v156 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB8);
  MEMORY[0x24BDAC7A8](v167);
  v159 = (uint64_t)&v156 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v162 = (uint64_t)&v156 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v170 = (uint64_t)&v156 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v9);
  v157 = (uint64_t)&v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v160 = (uint64_t)&v156 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v161 = (uint64_t)&v156 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v158 = (uint64_t)&v156 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v163 = (uint64_t)&v156 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v164 = (uint64_t)&v156 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v166 = (uint64_t)&v156 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v171 = (uint64_t)&v156 - v24;
  MEMORY[0x24BDAC7A8](v25);
  v172 = (int *)((char *)&v156 - v26);
  v27 = sub_21C3A75D8();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v156 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFC0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v156 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v156 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v156 - v38;
  MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)&v156 - v41;
  v173 = a1;
  sub_21C2F50EC(a1, (uint64_t)&v156 - v41, &qword_25525BA10);
  sub_21C2F50EC(v174, (uint64_t)v39, &qword_25525BA10);
  v43 = (uint64_t)&v33[*(int *)(v31 + 48)];
  sub_21C2F50EC((uint64_t)v42, (uint64_t)v33, &qword_25525BA10);
  sub_21C2F50EC((uint64_t)v39, v43, &qword_25525BA10);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v44((uint64_t)v33, 1, v27) == 1)
  {
    sub_21C2D775C((uint64_t)v39, &qword_25525BA10);
    sub_21C2D775C((uint64_t)v42, &qword_25525BA10);
    if (v44(v43, 1, v27) == 1)
    {
      sub_21C2D775C((uint64_t)v33, &qword_25525BA10);
      goto LABEL_9;
    }
LABEL_6:
    v45 = &qword_25525BFC0;
    v46 = (uint64_t)v33;
    goto LABEL_7;
  }
  sub_21C2F50EC((uint64_t)v33, (uint64_t)v36, &qword_25525BA10);
  if (v44(v43, 1, v27) == 1)
  {
    sub_21C2D775C((uint64_t)v39, &qword_25525BA10);
    sub_21C2D775C((uint64_t)v42, &qword_25525BA10);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v27);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v30, v43, v27);
  sub_21C2D1198(&qword_25525BFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC30]);
  v47 = sub_21C3A7EA8();
  v48 = *(void (**)(char *, uint64_t))(v28 + 8);
  v48(v30, v27);
  sub_21C2D775C((uint64_t)v39, &qword_25525BA10);
  sub_21C2D775C((uint64_t)v42, &qword_25525BA10);
  v48(v36, v27);
  sub_21C2D775C((uint64_t)v33, &qword_25525BA10);
  if ((v47 & 1) == 0)
    return 0;
LABEL_9:
  v49 = (int *)type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  v50 = v49[5];
  v51 = v173;
  v52 = *(_QWORD *)(v173 + v50);
  v53 = *(_QWORD *)(v173 + v50 + 8);
  v54 = v174;
  v55 = (uint64_t *)(v174 + v50);
  v56 = *v55;
  v57 = v55[1];
  if (v53 >> 60 == 15)
  {
    if (v57 >> 60 == 15)
      goto LABEL_15;
LABEL_13:
    sub_21C2D1E80(v52, v53);
    sub_21C2D1E80(v56, v57);
    sub_21C2D2B34(v52, v53);
    sub_21C2D2B34(v56, v57);
    return 0;
  }
  if (v57 >> 60 == 15)
    goto LABEL_13;
  sub_21C2D1E80(v52, v53);
  sub_21C2D1E80(v56, v57);
  sub_21C317958(v52, v53);
  v59 = v58;
  sub_21C2D2B34(v56, v57);
  sub_21C2D2B34(v52, v53);
  if ((v59 & 1) == 0)
    return 0;
LABEL_15:
  if ((sub_21C3A3C64(*(_QWORD *)(v51 + v49[6]), *(_QWORD *)(v54 + v49[6])) & 1) == 0)
    return 0;
  v60 = v49[7];
  v61 = (_QWORD *)(v51 + v60);
  v62 = *(_BYTE *)(v51 + v60 + 8);
  v63 = (_QWORD *)(v54 + v60);
  v64 = *(unsigned __int8 *)(v54 + v60 + 8);
  if ((v62 & 1) != 0)
  {
    v65 = v169;
    v66 = v170;
    v67 = (uint64_t)v172;
    v68 = v171;
    if (!v64)
      return 0;
  }
  else
  {
    if (*v61 != *v63)
      LOBYTE(v64) = 1;
    v65 = v169;
    v66 = v170;
    v67 = (uint64_t)v172;
    v68 = v171;
    if ((v64 & 1) != 0)
      return 0;
  }
  sub_21C2F50EC(v51 + v49[8], v67, &qword_25525B8A0);
  sub_21C2F50EC(v54 + v49[8], v68, &qword_25525B8A0);
  v69 = v66 + *(int *)(v167 + 48);
  sub_21C2F50EC(v67, v66, &qword_25525B8A0);
  sub_21C2F50EC(v68, v69, &qword_25525B8A0);
  v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v168 + 48);
  if (v70(v66, 1, v65) == 1)
  {
    sub_21C2D775C(v68, &qword_25525B8A0);
    sub_21C2D775C(v67, &qword_25525B8A0);
    if (v70(v69, 1, v65) == 1)
    {
      sub_21C2D775C(v66, &qword_25525B8A0);
      goto LABEL_29;
    }
LABEL_27:
    v45 = &qword_25525BFB8;
    v46 = v66;
    goto LABEL_7;
  }
  v71 = v166;
  sub_21C2F50EC(v66, v166, &qword_25525B8A0);
  if (v70(v69, 1, v65) == 1)
  {
    sub_21C2D775C(v171, &qword_25525B8A0);
    sub_21C2D775C((uint64_t)v172, &qword_25525B8A0);
    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v71, v65);
    goto LABEL_27;
  }
  v72 = v168;
  v73 = v165;
  (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v165, v69, v65);
  sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
  v74 = sub_21C3A7EA8();
  v75 = *(void (**)(char *, uint64_t))(v72 + 8);
  v75(v73, v65);
  sub_21C2D775C(v171, &qword_25525B8A0);
  sub_21C2D775C((uint64_t)v172, &qword_25525B8A0);
  v75((char *)v71, v65);
  sub_21C2D775C(v170, &qword_25525B8A0);
  if ((v74 & 1) == 0)
    return 0;
LABEL_29:
  v76 = v49[9];
  v77 = *(unsigned __int8 *)(v51 + v76);
  v78 = *(unsigned __int8 *)(v54 + v76);
  if (v77 == 5)
  {
    if (v78 != 5)
      return 0;
  }
  else
  {
    result = 0;
    if (v78 == 5 || v77 != v78)
      return result;
  }
  v172 = v49;
  v80 = v49[10];
  v81 = *(_QWORD *)(v51 + v80);
  v82 = *(_QWORD *)(v51 + v80 + 8);
  v83 = *(_QWORD *)(v51 + v80 + 16);
  v84 = *(_QWORD *)(v51 + v80 + 24);
  v85 = *(_QWORD *)(v51 + v80 + 32);
  v86 = *(_QWORD *)(v51 + v80 + 40);
  v87 = (uint64_t *)(v54 + v80);
  v89 = *v87;
  v88 = v87[1];
  v91 = v87[2];
  v90 = v87[3];
  v92 = v87[4];
  v93 = v87[5];
  if (v82 == 1)
  {
    v166 = v85;
    v170 = v83;
    v171 = v81;
    if (v88 == 1)
      goto LABEL_41;
LABEL_39:
    sub_21C2ED86C(v89, v88);
    sub_21C2EDA84(v171, v82);
    sub_21C2EDA84(v89, v88);
    return 0;
  }
  v175 = v81;
  v176 = v82;
  v177 = v83;
  v178 = v84;
  v179 = v85;
  v180 = v86;
  v156 = v86;
  if (v88 == 1)
  {
    v166 = v85;
    v170 = v83;
    v171 = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_39;
  }
  v195 = v89;
  v196 = v88;
  v197 = v91;
  v198 = v90;
  v199 = v92;
  v200 = v93;
  v94 = _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV16IssuingAuthorityV2eeoiySbAG_AGtFZ_0(&v175, &v195);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v94 & 1) == 0)
    return 0;
LABEL_41:
  v95 = v172;
  v96 = v173;
  v97 = v174;
  if ((sub_21C311D80(*(_QWORD *)(v173 + v172[11]), *(_QWORD *)(v174 + v172[11])) & 1) == 0
    || (sub_21C311ED0(*(_QWORD *)(v96 + v95[12]), *(_QWORD *)(v97 + v95[12])) & 1) == 0)
  {
    return 0;
  }
  v98 = v95[13];
  v99 = (_QWORD *)(v96 + v98);
  v100 = *(_QWORD *)(v96 + v98 + 8);
  v101 = (_QWORD *)(v97 + v98);
  v102 = v101[1];
  if (!v100)
  {
    v103 = v164;
    v104 = v163;
    if (v102)
      return 0;
    goto LABEL_52;
  }
  v103 = v164;
  v104 = v163;
  if (!v102)
    return 0;
  if (*v99 == *v101 && v100 == v102
    || (v105 = sub_21C3A864C(), v103 = v164, v106 = v105, result = 0, (v106 & 1) != 0))
  {
LABEL_52:
    sub_21C2F50EC(v96 + v95[14], v103, &qword_25525B8A0);
    sub_21C2F50EC(v97 + v95[14], v104, &qword_25525B8A0);
    v107 = v162;
    v108 = v162 + *(int *)(v167 + 48);
    sub_21C2F50EC(v103, v162, &qword_25525B8A0);
    sub_21C2F50EC(v104, v108, &qword_25525B8A0);
    v109 = v169;
    if (v70(v107, 1, v169) == 1)
    {
      sub_21C2D775C(v104, &qword_25525B8A0);
      sub_21C2D775C(v103, &qword_25525B8A0);
      if (v70(v108, 1, v109) == 1)
      {
        sub_21C2D775C(v162, &qword_25525B8A0);
LABEL_59:
        v115 = v161;
        sub_21C2F50EC(v96 + v95[15], v161, &qword_25525B8A0);
        v116 = v160;
        sub_21C2F50EC(v97 + v95[15], v160, &qword_25525B8A0);
        v117 = v159;
        v118 = v159 + *(int *)(v167 + 48);
        sub_21C2F50EC(v115, v159, &qword_25525B8A0);
        sub_21C2F50EC(v116, v118, &qword_25525B8A0);
        v119 = v169;
        if (v70(v117, 1, v169) == 1)
        {
          sub_21C2D775C(v160, &qword_25525B8A0);
          sub_21C2D775C(v161, &qword_25525B8A0);
          if (v70(v118, 1, v119) == 1)
          {
            sub_21C2D775C(v117, &qword_25525B8A0);
LABEL_66:
            v126 = v172[16];
            v127 = *(unsigned __int8 *)(v173 + v126);
            v128 = *(unsigned __int8 *)(v174 + v126);
            if (v127 == 2)
            {
              v129 = v174;
              v130 = v173;
              v131 = (uint64_t)v172;
              if (v128 != 2)
                return 0;
            }
            else
            {
              result = 0;
              if (v128 == 2)
                return result;
              v132 = v128 ^ v127;
              v129 = v174;
              v130 = v173;
              v131 = (uint64_t)v172;
              if ((v132 & 1) != 0)
                return result;
            }
            v133 = *(int *)(v131 + 68);
            v134 = (uint64_t *)(v130 + v133);
            v135 = *v134;
            v136 = v134[1];
            v137 = v134[2];
            v138 = v134[3];
            v139 = v134[4];
            v140 = v134[5];
            v141 = v134[6];
            v142 = v134[7];
            v143 = v134[8];
            v144 = v134[9];
            v145 = (uint64_t *)(v129 + v133);
            v147 = *v145;
            v146 = v145[1];
            v149 = v145[2];
            v148 = v145[3];
            v151 = v145[4];
            v150 = v145[5];
            v153 = v145[6];
            v152 = v145[7];
            v154 = v145[8];
            v155 = v145[9];
            if (v136 == 1)
            {
              if (v146 == 1)
                return 1;
              goto LABEL_75;
            }
            if (v146 == 1)
            {
LABEL_75:
              v175 = v135;
              v176 = v136;
              v177 = v137;
              v178 = v138;
              v179 = v139;
              v180 = v140;
              v181 = v141;
              v182 = v142;
              v183 = v143;
              v184 = v144;
              v185 = v147;
              v186 = v146;
              v187 = v149;
              v188 = v148;
              v189 = v151;
              v190 = v150;
              v191 = v153;
              v192 = v152;
              v193 = v154;
              v194 = v155;
              sub_21C2ED80C(v135, v136);
              sub_21C2ED80C(v147, v146);
              sub_21C2F5130(&v175);
              return 0;
            }
            v195 = v135;
            v196 = v136;
            v197 = v137;
            v198 = v138;
            v199 = v139;
            v200 = v140;
            v201 = v141;
            v202 = v142;
            v203 = v143;
            v204 = v144;
            v175 = v147;
            v176 = v146;
            v177 = v149;
            v178 = v148;
            v179 = v151;
            v180 = v150;
            v181 = v153;
            v182 = v152;
            v183 = v154;
            v184 = v155;
            return (sub_21C336538(&v195, &v175) & 1) != 0;
          }
        }
        else
        {
          sub_21C2F50EC(v117, v157, &qword_25525B8A0);
          if (v70(v118, 1, v119) != 1)
          {
            v120 = v168;
            v121 = v165;
            v122 = v169;
            (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v165, v118, v169);
            sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
            v123 = v157;
            v124 = sub_21C3A7EA8();
            v125 = *(void (**)(char *, uint64_t))(v120 + 8);
            v125(v121, v122);
            sub_21C2D775C(v160, &qword_25525B8A0);
            sub_21C2D775C(v161, &qword_25525B8A0);
            v125((char *)v123, v122);
            sub_21C2D775C(v159, &qword_25525B8A0);
            if ((v124 & 1) == 0)
              return 0;
            goto LABEL_66;
          }
          sub_21C2D775C(v160, &qword_25525B8A0);
          sub_21C2D775C(v161, &qword_25525B8A0);
          (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v157, v169);
          v117 = v159;
        }
        v45 = &qword_25525BFB8;
        v46 = v117;
LABEL_7:
        sub_21C2D775C(v46, v45);
        return 0;
      }
    }
    else
    {
      v110 = v158;
      sub_21C2F50EC(v107, v158, &qword_25525B8A0);
      if (v70(v108, 1, v109) != 1)
      {
        v111 = v168;
        v112 = v165;
        (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v165, v108, v109);
        sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
        v113 = sub_21C3A7EA8();
        v114 = *(void (**)(char *, uint64_t))(v111 + 8);
        v114(v112, v109);
        sub_21C2D775C(v163, &qword_25525B8A0);
        sub_21C2D775C(v164, &qword_25525B8A0);
        v114((char *)v110, v109);
        sub_21C2D775C(v162, &qword_25525B8A0);
        if ((v113 & 1) == 0)
          return 0;
        goto LABEL_59;
      }
      sub_21C2D775C(v163, &qword_25525B8A0);
      sub_21C2D775C(v164, &qword_25525B8A0);
      (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v110, v109);
    }
    v45 = &qword_25525BFB8;
    v46 = v162;
    goto LABEL_7;
  }
  return result;
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements()
{
  uint64_t result;

  result = qword_2552609F0;
  if (!qword_2552609F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C3A596C()
{
  return sub_21C2D1198(&qword_255260990, (uint64_t (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response.DocumentElements);
}

uint64_t *_s16DocumentElementsVwCP_0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C3A75D8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *((_QWORD *)v13 + 1);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v15 = *(_QWORD *)v13;
      sub_21C2D1E94(*(_QWORD *)v13, *((_QWORD *)v13 + 1));
      *(_QWORD *)v12 = v15;
      *((_QWORD *)v12 + 1) = v14;
    }
    v16 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = a3[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_21C3A7518();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v26 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 1);
    if (v29 == 1)
    {
      v30 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v30;
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    }
    else
    {
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *((_QWORD *)v27 + 1) = v29;
      v31 = *((_QWORD *)v28 + 3);
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
      *((_QWORD *)v27 + 3) = v31;
      v32 = *((_QWORD *)v28 + 5);
      *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
      *((_QWORD *)v27 + 5) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v33 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)a1 + v33) = *(uint64_t *)((char *)a2 + v33);
    v34 = a3[13];
    v35 = a3[14];
    v36 = (uint64_t *)((char *)a1 + v34);
    v37 = (uint64_t *)((char *)a2 + v34);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = (char *)a1 + v35;
    v40 = (char *)a2 + v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v40, 1, v22))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v39, v40, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v39, 0, 1, v22);
    }
    v42 = a3[15];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    if (v24((char *)a2 + v42, 1, v22))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v43, v44, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v43, 0, 1, v22);
    }
    v46 = a3[17];
    *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    v47 = (char *)a1 + v46;
    v48 = (char *)a2 + v46;
    v49 = *((_QWORD *)v48 + 1);
    if (v49 == 1)
    {
      v50 = *((_OWORD *)v48 + 3);
      *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
      *((_OWORD *)v47 + 3) = v50;
      *((_OWORD *)v47 + 4) = *((_OWORD *)v48 + 4);
      v51 = *((_OWORD *)v48 + 1);
      *(_OWORD *)v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v51;
    }
    else
    {
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = v49;
      v52 = *((_QWORD *)v48 + 3);
      *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
      *((_QWORD *)v47 + 3) = v52;
      v53 = *((_QWORD *)v48 + 5);
      *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
      *((_QWORD *)v47 + 5) = v53;
      v54 = *((_QWORD *)v48 + 7);
      *((_QWORD *)v47 + 6) = *((_QWORD *)v48 + 6);
      *((_QWORD *)v47 + 7) = v54;
      v55 = *((_QWORD *)v48 + 9);
      *((_QWORD *)v47 + 8) = *((_QWORD *)v48 + 8);
      *((_QWORD *)v47 + 9) = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t _s16DocumentElementsVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = (uint64_t *)(a1 + a2[5]);
  v7 = v6[1];
  if (v7 >> 60 != 15)
    sub_21C2D2B48(*v6, v7);
  swift_bridgeObjectRelease();
  v8 = a1 + a2[8];
  v9 = sub_21C3A7518();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  if (*(_QWORD *)(a1 + a2[10] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a1 + a2[14];
  if (!v11(v12, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  v13 = a1 + a2[15];
  if (!v11(v13, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  result = *(_QWORD *)(a1 + a2[17] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *_s16DocumentElementsVwcp_0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)v10 = *(_OWORD *)v11;
  }
  else
  {
    v13 = *(_QWORD *)v11;
    sub_21C2D1E94(*(_QWORD *)v11, *((_QWORD *)v11 + 1));
    *(_QWORD *)v10 = v13;
    *((_QWORD *)v10 + 1) = v12;
  }
  v14 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_21C3A7518();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v24 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = *((_QWORD *)v26 + 1);
  if (v27 == 1)
  {
    v28 = *((_OWORD *)v26 + 1);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v28;
    *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
  }
  else
  {
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v29 = *((_QWORD *)v26 + 3);
    *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
    *((_QWORD *)v25 + 3) = v29;
    v30 = *((_QWORD *)v26 + 5);
    *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
    *((_QWORD *)v25 + 5) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v31 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  *(_QWORD *)&a1[v31] = *(_QWORD *)&a2[v31];
  v32 = a3[13];
  v33 = a3[14];
  v34 = &a1[v32];
  v35 = &a2[v32];
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = v36;
  v37 = &a1[v33];
  v38 = &a2[v33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v38, 1, v20))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v37, v38, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v37, 0, 1, v20);
  }
  v40 = a3[15];
  v41 = &a1[v40];
  v42 = &a2[v40];
  if (v22(&a2[v40], 1, v20))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v41, v42, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v41, 0, 1, v20);
  }
  v44 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = *((_QWORD *)v46 + 1);
  if (v47 == 1)
  {
    v48 = *((_OWORD *)v46 + 3);
    *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
    *((_OWORD *)v45 + 3) = v48;
    *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
    v49 = *((_OWORD *)v46 + 1);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *((_OWORD *)v45 + 1) = v49;
  }
  else
  {
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    v50 = *((_QWORD *)v46 + 3);
    *((_QWORD *)v45 + 2) = *((_QWORD *)v46 + 2);
    *((_QWORD *)v45 + 3) = v50;
    v51 = *((_QWORD *)v46 + 5);
    *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
    *((_QWORD *)v45 + 5) = v51;
    v52 = *((_QWORD *)v46 + 7);
    *((_QWORD *)v45 + 6) = *((_QWORD *)v46 + 6);
    *((_QWORD *)v45 + 7) = v52;
    v53 = *((_QWORD *)v46 + 9);
    *((_QWORD *)v45 + 8) = *((_QWORD *)v46 + 8);
    *((_QWORD *)v45 + 9) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *_s16DocumentElementsVwca_0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = (uint64_t *)&a1[v12];
  v14 = (uint64_t *)&a2[v12];
  v15 = *(_QWORD *)&a2[v12 + 8];
  if (*(_QWORD *)&a1[v12 + 8] >> 60 == 15)
  {
    if (v15 >> 60 != 15)
    {
      v16 = *v14;
      sub_21C2D1E94(v16, v15);
      *v13 = v16;
      v13[1] = v15;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v15 >> 60 == 15)
  {
    sub_21C2EF04C((uint64_t)v13);
LABEL_12:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    goto LABEL_14;
  }
  v17 = *v14;
  sub_21C2D1E94(v17, v15);
  v18 = *v13;
  v19 = v13[1];
  *v13 = v17;
  v13[1] = v15;
  sub_21C2D2B48(v18, v19);
LABEL_14:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *(_QWORD *)v21 = v23;
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_21C3A7518();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_19:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_20:
  a1[a3[9]] = a2[a3[9]];
  v33 = a3[10];
  v34 = (uint64_t)&a1[v33];
  v35 = &a2[v33];
  v36 = *(_QWORD *)&a1[v33 + 8];
  v37 = *(_QWORD *)&a2[v33 + 8];
  if (v36 == 1)
  {
    if (v37 == 1)
    {
      v38 = *(_OWORD *)v35;
      v39 = *((_OWORD *)v35 + 2);
      *(_OWORD *)(v34 + 16) = *((_OWORD *)v35 + 1);
      *(_OWORD *)(v34 + 32) = v39;
      *(_OWORD *)v34 = v38;
    }
    else
    {
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
      *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
      *(_QWORD *)(v34 + 24) = *((_QWORD *)v35 + 3);
      *(_QWORD *)(v34 + 32) = *((_QWORD *)v35 + 4);
      *(_QWORD *)(v34 + 40) = *((_QWORD *)v35 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v37 == 1)
  {
    sub_21C3A32C4(v34);
    v41 = *((_OWORD *)v35 + 1);
    v40 = *((_OWORD *)v35 + 2);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v41;
    *(_OWORD *)(v34 + 32) = v40;
  }
  else
  {
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
    *(_QWORD *)(v34 + 24) = *((_QWORD *)v35 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 32) = *((_QWORD *)v35 + 4);
    *(_QWORD *)(v34 + 40) = *((_QWORD *)v35 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[13];
  v43 = &a1[v42];
  v44 = &a2[v42];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = a3[14];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = v29(&a1[v45], 1, v27);
  v49 = v29(v47, 1, v27);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v46, v47, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v46, 0, 1, v27);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v46, v27);
LABEL_32:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v46, v47, v27);
LABEL_33:
  v51 = a3[15];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = v29(&a1[v51], 1, v27);
  v55 = v29(v53, 1, v27);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v52, v53, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v52, 0, 1, v27);
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v52, v27);
LABEL_38:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v52, v53, v27);
LABEL_39:
  a1[a3[16]] = a2[a3[16]];
  v57 = a3[17];
  v58 = (uint64_t)&a1[v57];
  v59 = &a2[v57];
  v60 = *(_QWORD *)&a1[v57 + 8];
  v61 = *((_QWORD *)v59 + 1);
  if (v60 == 1)
  {
    if (v61 == 1)
    {
      *(_OWORD *)v58 = *(_OWORD *)v59;
      v62 = *((_OWORD *)v59 + 1);
      v63 = *((_OWORD *)v59 + 2);
      v64 = *((_OWORD *)v59 + 4);
      *(_OWORD *)(v58 + 48) = *((_OWORD *)v59 + 3);
      *(_OWORD *)(v58 + 64) = v64;
      *(_OWORD *)(v58 + 16) = v62;
      *(_OWORD *)(v58 + 32) = v63;
    }
    else
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *(_QWORD *)(v58 + 8) = *((_QWORD *)v59 + 1);
      *(_QWORD *)(v58 + 16) = *((_QWORD *)v59 + 2);
      *(_QWORD *)(v58 + 24) = *((_QWORD *)v59 + 3);
      *(_QWORD *)(v58 + 32) = *((_QWORD *)v59 + 4);
      *(_QWORD *)(v58 + 40) = *((_QWORD *)v59 + 5);
      *(_QWORD *)(v58 + 48) = *((_QWORD *)v59 + 6);
      *(_QWORD *)(v58 + 56) = *((_QWORD *)v59 + 7);
      *(_QWORD *)(v58 + 64) = *((_QWORD *)v59 + 8);
      *(_QWORD *)(v58 + 72) = *((_QWORD *)v59 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v61 == 1)
  {
    sub_21C3A32F8(v58);
    *(_OWORD *)v58 = *(_OWORD *)v59;
    v65 = *((_OWORD *)v59 + 4);
    v67 = *((_OWORD *)v59 + 1);
    v66 = *((_OWORD *)v59 + 2);
    *(_OWORD *)(v58 + 48) = *((_OWORD *)v59 + 3);
    *(_OWORD *)(v58 + 64) = v65;
    *(_OWORD *)(v58 + 16) = v67;
    *(_OWORD *)(v58 + 32) = v66;
  }
  else
  {
    *(_QWORD *)v58 = *(_QWORD *)v59;
    *(_QWORD *)(v58 + 8) = *((_QWORD *)v59 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v58 + 16) = *((_QWORD *)v59 + 2);
    *(_QWORD *)(v58 + 24) = *((_QWORD *)v59 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v58 + 32) = *((_QWORD *)v59 + 4);
    *(_QWORD *)(v58 + 40) = *((_QWORD *)v59 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v58 + 48) = *((_QWORD *)v59 + 6);
    *(_QWORD *)(v58 + 56) = *((_QWORD *)v59 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v58 + 64) = *((_QWORD *)v59 + 8);
    *(_QWORD *)(v58 + 72) = *((_QWORD *)v59 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

char *_s16DocumentElementsVwtk_0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[7];
  v11 = a3[8];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  v16 = sub_21C3A7518();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v20 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  v24 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
  v25 = a3[14];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v18(&a2[v25], 1, v16))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v26, v27, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
  }
  v29 = a3[15];
  v30 = &a1[v29];
  v31 = &a2[v29];
  if (v18(&a2[v29], 1, v16))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v30, v31, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v30, 0, 1, v16);
  }
  v33 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = *((_OWORD *)v35 + 3);
  *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
  *((_OWORD *)v34 + 3) = v36;
  *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
  v37 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v37;
  return a1;
}

char *_s16DocumentElementsVwta_0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = (uint64_t)&a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)&a1[v12 + 8];
  if (v15 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    goto LABEL_12;
  }
  v16 = *((_QWORD *)v14 + 1);
  if (v16 >> 60 == 15)
  {
    sub_21C2EF04C(v13);
    goto LABEL_10;
  }
  v17 = *(_QWORD *)v13;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v16;
  sub_21C2D2B48(v17, v15);
LABEL_12:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = a3[8];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = &a1[v19];
  v23 = &a2[v19];
  v24 = sub_21C3A7518();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_17:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_18:
  v30 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (*(_QWORD *)&a1[v30 + 8] == 1)
  {
LABEL_21:
    v34 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v34;
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    goto LABEL_23;
  }
  v33 = *((_QWORD *)v32 + 1);
  if (v33 == 1)
  {
    sub_21C3A32C4((uint64_t)&a1[v30]);
    goto LABEL_21;
  }
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v35 = *((_QWORD *)v32 + 3);
  *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
  *((_QWORD *)v31 + 3) = v35;
  swift_bridgeObjectRelease();
  v36 = *((_QWORD *)v32 + 5);
  *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
  *((_QWORD *)v31 + 5) = v36;
  swift_bridgeObjectRelease();
LABEL_23:
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  v37 = a3[13];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v41 = *(_QWORD *)v39;
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = v41;
  *((_QWORD *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  v42 = a3[14];
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = v26(&a1[v42], 1, v24);
  v46 = v26(v44, 1, v24);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v43, v44, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v43, 0, 1, v24);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v43, v24);
LABEL_28:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v43, v44, v24);
LABEL_29:
  v48 = a3[15];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = v26(&a1[v48], 1, v24);
  v52 = v26(v50, 1, v24);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v49, v50, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v49, 0, 1, v24);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v49, v24);
LABEL_34:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v49, v50, v24);
LABEL_35:
  v54 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  v55 = &a1[v54];
  v56 = &a2[v54];
  if (*(_QWORD *)&a1[v54 + 8] != 1)
  {
    v57 = *((_QWORD *)v56 + 1);
    if (v57 != 1)
    {
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v57;
      swift_bridgeObjectRelease();
      v60 = *((_QWORD *)v56 + 3);
      *((_QWORD *)v55 + 2) = *((_QWORD *)v56 + 2);
      *((_QWORD *)v55 + 3) = v60;
      swift_bridgeObjectRelease();
      v61 = *((_QWORD *)v56 + 5);
      *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
      *((_QWORD *)v55 + 5) = v61;
      swift_bridgeObjectRelease();
      v62 = *((_QWORD *)v56 + 7);
      *((_QWORD *)v55 + 6) = *((_QWORD *)v56 + 6);
      *((_QWORD *)v55 + 7) = v62;
      swift_bridgeObjectRelease();
      v63 = *((_QWORD *)v56 + 9);
      *((_QWORD *)v55 + 8) = *((_QWORD *)v56 + 8);
      *((_QWORD *)v55 + 9) = v63;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_21C3A32F8((uint64_t)&a1[v54]);
  }
  v58 = *((_OWORD *)v56 + 3);
  *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
  *((_OWORD *)v55 + 3) = v58;
  *((_OWORD *)v55 + 4) = *((_OWORD *)v56 + 4);
  v59 = *((_OWORD *)v56 + 1);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *((_OWORD *)v55 + 1) = v59;
  return a1;
}

uint64_t _s16DocumentElementsVwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C3A7188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t _s16DocumentElementsVwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C3A7244(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_21C3A72F0()
{
  unint64_t v0;
  unint64_t v1;

  sub_21C2EFB08(319, &qword_25525BBE8, (void (*)(uint64_t))MEMORY[0x24BDCCC10]);
  if (v0 <= 0x3F)
  {
    sub_21C2EFB08(319, (unint64_t *)&qword_25525BBF0, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_21C3A73EC()
{
  return MEMORY[0x24BDCB070]();
}

uint64_t sub_21C3A73F8()
{
  return MEMORY[0x24BDCB088]();
}

uint64_t sub_21C3A7404()
{
  return MEMORY[0x24BDCB0C0]();
}

uint64_t sub_21C3A7410()
{
  return MEMORY[0x24BDCB1E0]();
}

uint64_t sub_21C3A741C()
{
  return MEMORY[0x24BDCB1F0]();
}

uint64_t sub_21C3A7428()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_21C3A7434()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_21C3A7440()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_21C3A744C()
{
  return MEMORY[0x24BDCB360]();
}

uint64_t sub_21C3A7458()
{
  return MEMORY[0x24BDCB378]();
}

uint64_t sub_21C3A7464()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_21C3A7470()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_21C3A747C()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_21C3A7488()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_21C3A7494()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_21C3A74A0()
{
  return MEMORY[0x24BDCB9D8]();
}

uint64_t sub_21C3A74AC()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_21C3A74B8()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_21C3A74C4()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_21C3A74D0()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_21C3A74DC()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_21C3A74E8()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_21C3A74F4()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_21C3A7500()
{
  return MEMORY[0x24BDCBD70]();
}

uint64_t sub_21C3A750C()
{
  return MEMORY[0x24BDCBDD8]();
}

uint64_t sub_21C3A7518()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_21C3A7524()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_21C3A7530()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_21C3A753C()
{
  return MEMORY[0x24BDCBE78]();
}

uint64_t sub_21C3A7548()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_21C3A7554()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_21C3A7560()
{
  return MEMORY[0x24BDCC240]();
}

uint64_t sub_21C3A756C()
{
  return MEMORY[0x24BDCC248]();
}

uint64_t sub_21C3A7578()
{
  return MEMORY[0x24BDCC250]();
}

uint64_t sub_21C3A7584()
{
  return MEMORY[0x24BDCC258]();
}

uint64_t sub_21C3A7590()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_21C3A759C()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_21C3A75A8()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_21C3A75B4()
{
  return MEMORY[0x24BDCCA60]();
}

uint64_t sub_21C3A75C0()
{
  return MEMORY[0x24BDCCA88]();
}

uint64_t sub_21C3A75CC()
{
  return MEMORY[0x24BDCCA90]();
}

uint64_t sub_21C3A75D8()
{
  return MEMORY[0x24BDCCC10]();
}

uint64_t sub_21C3A75E4()
{
  return MEMORY[0x24BDCD2A0]();
}

uint64_t sub_21C3A75F0()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_21C3A75FC()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_21C3A7608()
{
  return MEMORY[0x24BDCD508]();
}

uint64_t sub_21C3A7614()
{
  return MEMORY[0x24BDCD520]();
}

uint64_t sub_21C3A7620()
{
  return MEMORY[0x24BDCD748]();
}

uint64_t sub_21C3A762C()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_21C3A7638()
{
  return MEMORY[0x24BDCD810]();
}

uint64_t sub_21C3A7644()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_21C3A7650()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_21C3A765C()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_21C3A7668()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_21C3A7674()
{
  return MEMORY[0x24BDCD908]();
}

uint64_t sub_21C3A7680()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_21C3A768C()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_21C3A7698()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_21C3A76A4()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_21C3A76B0()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_21C3A76BC()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_21C3A76C8()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_21C3A76D4()
{
  return MEMORY[0x24BDCDB38]();
}

uint64_t sub_21C3A76E0()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_21C3A76EC()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_21C3A76F8()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_21C3A7704()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_21C3A7710()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_21C3A771C()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_21C3A7728()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_21C3A7734()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_21C3A7740()
{
  return MEMORY[0x24BDCDCD8]();
}

uint64_t sub_21C3A774C()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_21C3A7758()
{
  return MEMORY[0x24BDCDCF8]();
}

uint64_t sub_21C3A7764()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_21C3A7770()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_21C3A777C()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_21C3A7788()
{
  return MEMORY[0x24BDCE778]();
}

uint64_t sub_21C3A7794()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_21C3A77A0()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_21C3A77AC()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_21C3A77B8()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_21C3A77C4()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_21C3A77D0()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_21C3A77DC()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_21C3A77E8()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_21C3A77F4()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t sub_21C3A7800()
{
  return MEMORY[0x24BDCEB20]();
}

uint64_t sub_21C3A780C()
{
  return MEMORY[0x24BDCEB60]();
}

uint64_t sub_21C3A7818()
{
  return MEMORY[0x24BDCEB98]();
}

uint64_t sub_21C3A7824()
{
  return MEMORY[0x24BDCECB0]();
}

uint64_t sub_21C3A7830()
{
  return MEMORY[0x24BDCECF0]();
}

uint64_t sub_21C3A783C()
{
  return MEMORY[0x24BDCED00]();
}

uint64_t sub_21C3A7848()
{
  return MEMORY[0x24BDCED08]();
}

uint64_t sub_21C3A7854()
{
  return MEMORY[0x24BDCED50]();
}

uint64_t sub_21C3A7860()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_21C3A786C()
{
  return MEMORY[0x24BDCEDE0]();
}

uint64_t sub_21C3A7878()
{
  return MEMORY[0x24BDCEE18]();
}

uint64_t sub_21C3A7884()
{
  return MEMORY[0x24BDCEE20]();
}

uint64_t sub_21C3A7890()
{
  return MEMORY[0x24BDCEE28]();
}

uint64_t sub_21C3A789C()
{
  return MEMORY[0x24BDCEE60]();
}

uint64_t sub_21C3A78A8()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_21C3A78B4()
{
  return MEMORY[0x24BDCF040]();
}

uint64_t sub_21C3A78C0()
{
  return MEMORY[0x24BDCF050]();
}

uint64_t sub_21C3A78CC()
{
  return MEMORY[0x24BDCF140]();
}

uint64_t sub_21C3A78D8()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_21C3A78E4()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_21C3A78F0()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_21C3A78FC()
{
  return MEMORY[0x24BDCF490]();
}

uint64_t sub_21C3A7908()
{
  return MEMORY[0x24BDCF4D8]();
}

uint64_t sub_21C3A7914()
{
  return MEMORY[0x24BDCF500]();
}

uint64_t sub_21C3A7920()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_21C3A792C()
{
  return MEMORY[0x24BDCF5D8]();
}

uint64_t sub_21C3A7938()
{
  return MEMORY[0x24BDCF600]();
}

uint64_t sub_21C3A7944()
{
  return MEMORY[0x24BDCF610]();
}

uint64_t sub_21C3A7950()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_21C3A795C()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_21C3A7968()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_21C3A7974()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_21C3A7980()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_21C3A798C()
{
  return MEMORY[0x24BEE76F8]();
}

uint64_t sub_21C3A7998()
{
  return MEMORY[0x24BEE7700]();
}

uint64_t sub_21C3A79A4()
{
  return MEMORY[0x24BEE7748]();
}

uint64_t sub_21C3A79B0()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_21C3A79BC()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_21C3A79C8()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_21C3A79D4()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_21C3A79E0()
{
  return MEMORY[0x24BE1BE28]();
}

uint64_t sub_21C3A79EC()
{
  return MEMORY[0x24BE1BF50]();
}

uint64_t sub_21C3A79F8()
{
  return MEMORY[0x24BE1BF60]();
}

uint64_t sub_21C3A7A04()
{
  return MEMORY[0x24BE1C018]();
}

uint64_t sub_21C3A7A10()
{
  return MEMORY[0x24BE1C028]();
}

uint64_t sub_21C3A7A1C()
{
  return MEMORY[0x24BE1C030]();
}

uint64_t sub_21C3A7A28()
{
  return MEMORY[0x24BE1C080]();
}

uint64_t sub_21C3A7A34()
{
  return MEMORY[0x24BE1C250]();
}

uint64_t sub_21C3A7A40()
{
  return MEMORY[0x24BE1C278]();
}

uint64_t sub_21C3A7A4C()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t sub_21C3A7A58()
{
  return MEMORY[0x24BDEB560]();
}

uint64_t sub_21C3A7A64()
{
  return MEMORY[0x24BDEBED0]();
}

uint64_t sub_21C3A7A70()
{
  return MEMORY[0x24BDEC030]();
}

uint64_t sub_21C3A7A7C()
{
  return MEMORY[0x24BDEC038]();
}

uint64_t sub_21C3A7A88()
{
  return MEMORY[0x24BDED248]();
}

uint64_t sub_21C3A7A94()
{
  return MEMORY[0x24BDED298]();
}

uint64_t sub_21C3A7AA0()
{
  return MEMORY[0x24BDED3B0]();
}

uint64_t sub_21C3A7AAC()
{
  return MEMORY[0x24BDEDBA8]();
}

uint64_t sub_21C3A7AB8()
{
  return MEMORY[0x24BDEE038]();
}

uint64_t sub_21C3A7AC4()
{
  return MEMORY[0x24BDEE048]();
}

uint64_t sub_21C3A7AD0()
{
  return MEMORY[0x24BDEE190]();
}

uint64_t sub_21C3A7ADC()
{
  return MEMORY[0x24BDEE198]();
}

uint64_t sub_21C3A7AE8()
{
  return MEMORY[0x24BDEE288]();
}

uint64_t sub_21C3A7AF4()
{
  return MEMORY[0x24BDEE290]();
}

uint64_t sub_21C3A7B00()
{
  return MEMORY[0x24BDEE3F0]();
}

uint64_t sub_21C3A7B0C()
{
  return MEMORY[0x24BDEE4E0]();
}

uint64_t sub_21C3A7B18()
{
  return MEMORY[0x24BDEE4F8]();
}

uint64_t sub_21C3A7B24()
{
  return MEMORY[0x24BDEE730]();
}

uint64_t sub_21C3A7B30()
{
  return MEMORY[0x24BDEED60]();
}

uint64_t sub_21C3A7B3C()
{
  return MEMORY[0x24BDEED88]();
}

uint64_t sub_21C3A7B48()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t sub_21C3A7B54()
{
  return MEMORY[0x24BDEF1D0]();
}

uint64_t sub_21C3A7B60()
{
  return MEMORY[0x24BDEF228]();
}

uint64_t sub_21C3A7B6C()
{
  return MEMORY[0x24BDEF238]();
}

uint64_t sub_21C3A7B78()
{
  return MEMORY[0x24BDEF248]();
}

uint64_t sub_21C3A7B84()
{
  return MEMORY[0x24BDEF260]();
}

uint64_t sub_21C3A7B90()
{
  return MEMORY[0x24BDEF270]();
}

uint64_t sub_21C3A7B9C()
{
  return MEMORY[0x24BDEF278]();
}

uint64_t sub_21C3A7BA8()
{
  return MEMORY[0x24BDEF288]();
}

uint64_t sub_21C3A7BB4()
{
  return MEMORY[0x24BDEF298]();
}

uint64_t sub_21C3A7BC0()
{
  return MEMORY[0x24BDEF2A8]();
}

uint64_t sub_21C3A7BCC()
{
  return MEMORY[0x24BDEF2C0]();
}

uint64_t sub_21C3A7BD8()
{
  return MEMORY[0x24BDEF2C8]();
}

uint64_t sub_21C3A7BE4()
{
  return MEMORY[0x24BDEF2D8]();
}

uint64_t sub_21C3A7BF0()
{
  return MEMORY[0x24BDF09F8]();
}

uint64_t sub_21C3A7BFC()
{
  return MEMORY[0x24BDF0A18]();
}

uint64_t sub_21C3A7C08()
{
  return MEMORY[0x24BDF0A20]();
}

uint64_t sub_21C3A7C14()
{
  return MEMORY[0x24BDF1430]();
}

uint64_t sub_21C3A7C20()
{
  return MEMORY[0x24BDF14A0]();
}

uint64_t sub_21C3A7C2C()
{
  return MEMORY[0x24BDF14A8]();
}

uint64_t sub_21C3A7C38()
{
  return MEMORY[0x24BDF14C0]();
}

uint64_t sub_21C3A7C44()
{
  return MEMORY[0x24BDF14C8]();
}

uint64_t sub_21C3A7C50()
{
  return MEMORY[0x24BDF1640]();
}

uint64_t sub_21C3A7C5C()
{
  return MEMORY[0x24BDF16A8]();
}

uint64_t sub_21C3A7C68()
{
  return MEMORY[0x24BDF1700]();
}

uint64_t sub_21C3A7C74()
{
  return MEMORY[0x24BDF1778]();
}

uint64_t sub_21C3A7C80()
{
  return MEMORY[0x24BDF1840]();
}

uint64_t sub_21C3A7C8C()
{
  return MEMORY[0x24BDF1BE8]();
}

uint64_t sub_21C3A7C98()
{
  return MEMORY[0x24BDF1D08]();
}

uint64_t sub_21C3A7CA4()
{
  return MEMORY[0x24BDF1DC8]();
}

uint64_t sub_21C3A7CB0()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t sub_21C3A7CBC()
{
  return MEMORY[0x24BDF1FF8]();
}

uint64_t sub_21C3A7CC8()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t sub_21C3A7CD4()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t sub_21C3A7CE0()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t sub_21C3A7CEC()
{
  return MEMORY[0x24BDF2B50]();
}

uint64_t sub_21C3A7CF8()
{
  return MEMORY[0x24BDF2F08]();
}

uint64_t sub_21C3A7D04()
{
  return MEMORY[0x24BDF3CA8]();
}

uint64_t sub_21C3A7D10()
{
  return MEMORY[0x24BDF3D88]();
}

uint64_t sub_21C3A7D1C()
{
  return MEMORY[0x24BDF3E08]();
}

uint64_t sub_21C3A7D28()
{
  return MEMORY[0x24BDF3EB0]();
}

uint64_t sub_21C3A7D34()
{
  return MEMORY[0x24BDF3F80]();
}

uint64_t sub_21C3A7D40()
{
  return MEMORY[0x24BDF3FE8]();
}

uint64_t sub_21C3A7D4C()
{
  return MEMORY[0x24BDF40D8]();
}

uint64_t sub_21C3A7D58()
{
  return MEMORY[0x24BDF4340]();
}

uint64_t sub_21C3A7D64()
{
  return MEMORY[0x24BDF4790]();
}

uint64_t sub_21C3A7D70()
{
  return MEMORY[0x24BDF4E20]();
}

uint64_t sub_21C3A7D7C()
{
  return MEMORY[0x24BDF4E58]();
}

uint64_t sub_21C3A7D88()
{
  return MEMORY[0x24BDF4EF0]();
}

uint64_t sub_21C3A7D94()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t sub_21C3A7DA0()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_21C3A7DAC()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_21C3A7DB8()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_21C3A7DC4()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_21C3A7DD0()
{
  return MEMORY[0x24BDC62B0]();
}

uint64_t sub_21C3A7DDC()
{
  return MEMORY[0x24BDC62C8]();
}

uint64_t sub_21C3A7DE8()
{
  return MEMORY[0x24BDC62F0]();
}

uint64_t sub_21C3A7DF4()
{
  return MEMORY[0x24BDC69C8]();
}

uint64_t sub_21C3A7E00()
{
  return MEMORY[0x24BDC69D0]();
}

uint64_t sub_21C3A7E0C()
{
  return MEMORY[0x24BDC69F0]();
}

uint64_t sub_21C3A7E18()
{
  return MEMORY[0x24BDC6A00]();
}

uint64_t sub_21C3A7E24()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_21C3A7E30()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_21C3A7E3C()
{
  return MEMORY[0x24BDCF828]();
}

uint64_t sub_21C3A7E48()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_21C3A7E54()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_21C3A7E60()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_21C3A7E6C()
{
  return MEMORY[0x24BEE0680]();
}

uint64_t sub_21C3A7E78()
{
  return MEMORY[0x24BEE75F0]();
}

uint64_t sub_21C3A7E84()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_21C3A7E90()
{
  return MEMORY[0x24BEE0870]();
}

uint64_t sub_21C3A7E9C()
{
  return MEMORY[0x24BEE0920]();
}

uint64_t sub_21C3A7EA8()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_21C3A7EB4()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_21C3A7EC0()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_21C3A7ECC()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_21C3A7ED8()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_21C3A7EE4()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_21C3A7EF0()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_21C3A7EFC()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_21C3A7F08()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_21C3A7F14()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_21C3A7F20()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_21C3A7F2C()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_21C3A7F38()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_21C3A7F44()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_21C3A7F50()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_21C3A7F5C()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_21C3A7F68()
{
  return MEMORY[0x24BEE0B78]();
}

uint64_t sub_21C3A7F74()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_21C3A7F80()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_21C3A7F8C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_21C3A7F98()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_21C3A7FA4()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_21C3A7FB0()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_21C3A7FBC()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_21C3A7FC8()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_21C3A7FD4()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_21C3A7FE0()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_21C3A7FEC()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_21C3A7FF8()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_21C3A8004()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_21C3A8010()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_21C3A801C()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_21C3A8028()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_21C3A8034()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_21C3A8040()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_21C3A804C()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_21C3A8058()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_21C3A8064()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_21C3A8070()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_21C3A807C()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_21C3A8088()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_21C3A8094()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_21C3A80A0()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_21C3A80AC()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_21C3A80B8()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_21C3A80C4()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_21C3A80D0()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_21C3A80DC()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_21C3A80E8()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_21C3A80F4()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_21C3A8100()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_21C3A810C()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_21C3A8118()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_21C3A8124()
{
  return MEMORY[0x24BEE69F8]();
}

uint64_t sub_21C3A8130()
{
  return MEMORY[0x24BEE6A30]();
}

uint64_t sub_21C3A813C()
{
  return MEMORY[0x24BEE6A38]();
}

uint64_t sub_21C3A8148()
{
  return MEMORY[0x24BEE6A98]();
}

uint64_t sub_21C3A8154()
{
  return MEMORY[0x24BEE6AA0]();
}

uint64_t sub_21C3A8160()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_21C3A816C()
{
  return MEMORY[0x24BEE6AD8]();
}

uint64_t sub_21C3A8178()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_21C3A8184()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_21C3A8190()
{
  return MEMORY[0x24BDCFE18]();
}

uint64_t sub_21C3A819C()
{
  return MEMORY[0x24BDCFED8]();
}

uint64_t sub_21C3A81A8()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_21C3A81B4()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_21C3A81C0()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_21C3A81CC()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_21C3A81D8()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_21C3A81E4()
{
  return MEMORY[0x24BDCFF70]();
}

uint64_t sub_21C3A81F0()
{
  return MEMORY[0x24BDCFFA0]();
}

uint64_t sub_21C3A81FC()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_21C3A8208()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_21C3A8214()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_21C3A8220()
{
  return MEMORY[0x24BEE5780]();
}

uint64_t sub_21C3A822C()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_21C3A8238()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_21C3A8244()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_21C3A8250()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_21C3A825C()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_21C3A8268()
{
  return MEMORY[0x24BDD0178]();
}

uint64_t sub_21C3A8274()
{
  return MEMORY[0x24BDD0188]();
}

uint64_t sub_21C3A8280()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_21C3A828C()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_21C3A8298()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_21C3A82A4()
{
  return MEMORY[0x24BDD02C0]();
}

uint64_t sub_21C3A82B0()
{
  return MEMORY[0x24BDD02E0]();
}

uint64_t sub_21C3A82BC()
{
  return MEMORY[0x24BDD02F8]();
}

uint64_t sub_21C3A82C8()
{
  return MEMORY[0x24BDD0300]();
}

uint64_t sub_21C3A82D4()
{
  return MEMORY[0x24BDD0370]();
}

uint64_t sub_21C3A82E0()
{
  return MEMORY[0x24BEE79A0]();
}

uint64_t sub_21C3A82EC()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_21C3A82F8()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_21C3A8304()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_21C3A8310()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_21C3A831C()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_21C3A8328()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_21C3A8334()
{
  return MEMORY[0x24BEE5E68]();
}

uint64_t sub_21C3A8340()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_21C3A834C()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_21C3A8358()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_21C3A8364()
{
  return MEMORY[0x24BEE22F8]();
}

uint64_t sub_21C3A8370()
{
  return MEMORY[0x24BEE2318]();
}

uint64_t sub_21C3A837C()
{
  return MEMORY[0x24BEE2320]();
}

uint64_t sub_21C3A8388()
{
  return MEMORY[0x24BEE2328]();
}

uint64_t sub_21C3A8394()
{
  return MEMORY[0x24BEE2348]();
}

uint64_t sub_21C3A83A0()
{
  return MEMORY[0x24BEE2368]();
}

uint64_t sub_21C3A83AC()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_21C3A83B8()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_21C3A83C4()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_21C3A83D0()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_21C3A83DC()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_21C3A83E8()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_21C3A83F4()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_21C3A8400()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_21C3A840C()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_21C3A8418()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_21C3A8424()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_21C3A8430()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_21C3A843C()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_21C3A8448()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_21C3A8454()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_21C3A8460()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_21C3A846C()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_21C3A8478()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_21C3A8484()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_21C3A8490()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_21C3A849C()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_21C3A84A8()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_21C3A84B4()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_21C3A84C0()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_21C3A84CC()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_21C3A84D8()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_21C3A84E4()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_21C3A84F0()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_21C3A84FC()
{
  return MEMORY[0x24BEE3278]();
}

uint64_t sub_21C3A8508()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_21C3A8514()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_21C3A8520()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_21C3A852C()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_21C3A8538()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_21C3A8544()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_21C3A8550()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_21C3A855C()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_21C3A8568()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_21C3A8574()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_21C3A8580()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_21C3A858C()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_21C3A8598()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_21C3A85A4()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_21C3A85B0()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_21C3A85BC()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_21C3A85C8()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_21C3A85D4()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_21C3A85E0()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_21C3A85EC()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_21C3A85F8()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_21C3A8604()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_21C3A8610()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_21C3A861C()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_21C3A8628()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_21C3A8634()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_21C3A8640()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_21C3A864C()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_21C3A8658()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_21C3A8664()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_21C3A8670()
{
  return MEMORY[0x24BEE3D98]();
}

uint64_t sub_21C3A867C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_21C3A8688()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_21C3A8694()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_21C3A86A0()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_21C3A86AC()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_21C3A86B8()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_21C3A86C4()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_21C3A86D0()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_21C3A86DC()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_21C3A86E8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_21C3A86F4()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_21C3A8700()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_21C3A870C()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_21C3A8718()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_21C3A8724()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_21C3A8730()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_21C3A873C()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_21C3A8748()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_21C3A8754()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_21C3A8760()
{
  return MEMORY[0x24BEE4A10]();
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x24BDBC160](key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x24BDBC188](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  MEMORY[0x24BDBC1A8](key, value, applicationID, userName, hostName);
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return MEMORY[0x24BDBC1B0](applicationID, userName, hostName);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x24BDBC2C8](rl, source, mode);
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x24BDBC300]();
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x24BDBC920](allocator, flags, error, dictionary, timeout);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return (CFRunLoopSourceRef)MEMORY[0x24BDBC928](allocator, userNotification, callout, order);
}

SInt32 CFUserNotificationDisplayAlert(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle, CFStringRef alternateButtonTitle, CFStringRef otherButtonTitle, CFOptionFlags *responseFlags)
{
  return MEMORY[0x24BDBC930](flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle, alternateButtonTitle, timeout);
}

SInt32 CFUserNotificationDisplayNotice(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle)
{
  return MEMORY[0x24BDBC938](flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle, timeout);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t CPSharedResourcesDirectory()
{
  return MEMORY[0x24BE04728]();
}

uint64_t MCGestaltGetDeviceUUID()
{
  return MEMORY[0x24BE63B30]();
}

uint64_t MCGestaltIsInternalBuild()
{
  return MEMORY[0x24BE63B38]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x24BED8448]();
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x24BDD1000](format);
}

uint64_t PKUIGetMinScreenType()
{
  return MEMORY[0x24BE6FAD8]();
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x24BDE8D48](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x24BDE8D70](allocator);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t PKUnarchiverZip(NSURL *a1, NSURL *a2)
{
  return MEMORY[0x24BE6FA08](a1, a2);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x24BEE4BF0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x24BEE4E50]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

int uname(utsname *a1)
{
  return MEMORY[0x24BDB02A8](a1);
}

