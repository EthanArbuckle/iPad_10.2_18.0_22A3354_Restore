void type metadata accessor for CFUserNotification(uint64_t a1)
{
  sub_21C2D1544(a1, &qword_25525AD68);
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
  sub_21C2D1544(a1, &qword_25525AD70);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_21C2D1544(a1, &qword_25525AD78);
}

__n128 __swift_memcpy20_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t sub_21C2D0D78(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_21C2D0D98(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 20) = v3;
  return result;
}

void type metadata accessor for Decimal(uint64_t a1)
{
  sub_21C2D1544(a1, &qword_25525AD80);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_21C2D1544(a1, &qword_25525AD88);
}

_QWORD *sub_21C2D0DEC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_21C2D0DFC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_21C2D0E08(uint64_t a1)
{
  MEMORY[0x22077AECC](&unk_21C3A9818, a1);
  return sub_21C3A7974();
}

uint64_t sub_21C2D0E44()
{
  MEMORY[0x22077AECC](&unk_21C3A9818);
  return sub_21C3A7968();
}

uint64_t sub_21C2D0E8C(uint64_t a1, uint64_t a2)
{
  sub_21C3A8700();
  MEMORY[0x22077AECC](&unk_21C3A9818, a2);
  sub_21C3A7968();
  return sub_21C3A8724();
}

uint64_t sub_21C2D0EE4(uint64_t a1, uint64_t a2)
{
  return sub_21C2D1324(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_21C2D0EFC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_21C3A7EC0();
  *a2 = 0;
  return result;
}

uint64_t sub_21C2D0F70(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_21C3A7ECC();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_21C2D0FEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_21C3A7ED8();
  v2 = sub_21C3A7EB4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_21C2D102C(uint64_t a1, uint64_t a2)
{
  return sub_21C2D1324(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_21C2D1040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22077AECC](&unk_21C3A9818, a3);
  return sub_21C3A795C();
}

uint64_t sub_21C2D108C()
{
  return sub_21C2D1198((unint64_t *)&qword_25525AD90, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_21C3A9B00);
}

uint64_t sub_21C2D10C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21C3A7ED8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21C2D10E8()
{
  sub_21C2D1198((unint64_t *)&qword_25525ADE0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_21C3A9ABC);
  sub_21C2D1198(&qword_25525ADE8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_21C3A98B8);
  return sub_21C3A84F0();
}

uint64_t sub_21C2D116C()
{
  return sub_21C2D1198(&qword_25525AD98, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_21C3A987C);
}

uint64_t sub_21C2D1198(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22077AECC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C2D11D8()
{
  return sub_21C2D1198(&qword_25525ADA0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_21C3A9850);
}

uint64_t sub_21C2D1204@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21C3A7EB4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_21C2D1248()
{
  sub_21C2D1198(&qword_25525ADD0, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_21C3A9A2C);
  sub_21C2D1198(&qword_25525ADD8, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_21C3A99CC);
  return sub_21C3A84F0();
}

uint64_t sub_21C2D12CC()
{
  return sub_21C2D1198(&qword_25525ADA8, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_21C3A9990);
}

uint64_t sub_21C2D12F8()
{
  return sub_21C2D1198(&qword_25525ADB0, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_21C3A9964);
}

uint64_t sub_21C2D1324(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_21C3A7ED8();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_21C2D1360()
{
  sub_21C3A7ED8();
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C2D13A0()
{
  uint64_t v0;

  sub_21C3A7ED8();
  sub_21C3A8700();
  sub_21C3A7F50();
  v0 = sub_21C3A8724();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21C2D1410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_21C3A7ED8();
  v2 = v1;
  if (v0 == sub_21C3A7ED8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_21C3A864C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_21C2D1498()
{
  return sub_21C2D1198(&qword_25525ADB8, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_21C3A9A00);
}

uint64_t sub_21C2D14C4()
{
  return sub_21C2D1198(&qword_25525ADC0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_21C3A98EC);
}

uint64_t sub_21C2D14F0()
{
  return sub_21C2D1198(&qword_25525ADC8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_21C3A97EC);
}

void type metadata accessor for State(uint64_t a1)
{
  sub_21C2D1544(a1, &qword_25525ADF0);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_21C2D1544(a1, &qword_25525ADF8);
}

void sub_21C2D1544(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t static StoreAndForwardValidationDataInternal.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_25525AE00;
}

uint64_t static StoreAndForwardValidationDataInternal.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_25525AE00 = a1;
  return result;
}

uint64_t (*static StoreAndForwardValidationDataInternal.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id StoreAndForwardValidationDataInternal.__allocating_init(activationID:digest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  objc_super v13;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR____TtC15ProximityReader37StoreAndForwardValidationDataInternal_activationID];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v11 = &v9[OBJC_IVAR____TtC15ProximityReader37StoreAndForwardValidationDataInternal_digest];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, sel_init);
}

id StoreAndForwardValidationDataInternal.init(activationID:digest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC15ProximityReader37StoreAndForwardValidationDataInternal_activationID];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v11 = &v4[OBJC_IVAR____TtC15ProximityReader37StoreAndForwardValidationDataInternal_digest];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v13.receiver = v4;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

Swift::Void __swiftcall StoreAndForwardValidationDataInternal.encode(with:)(NSCoder with)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)sub_21C3A7EB4();
  v3 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v2, v3);

  v4 = (void *)sub_21C3A7EB4();
  v5 = (id)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v4, v5);

}

id StoreAndForwardValidationDataInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return StoreAndForwardValidationDataInternal.init(coder:)(a1);
}

id StoreAndForwardValidationDataInternal.init(coder:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  objc_super v26;
  uint64_t v27;
  uint64_t v28;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2D1C1C();
  v7 = v1;
  v8 = sub_21C3A825C();
  if (v8 && (v9 = (void *)v8, v27 = 0, v28 = 0, sub_21C3A7ECC(), v9, (v10 = v28) != 0))
  {
    v11 = v27;
    v12 = sub_21C3A825C();
    if (v12)
    {
      v13 = (void *)v12;
      v27 = 0;
      v28 = 0;
      sub_21C3A7ECC();

      v14 = v28;
      if (v28)
      {
        v15 = v27;
        v16 = &v7[OBJC_IVAR____TtC15ProximityReader37StoreAndForwardValidationDataInternal_activationID];
        *(_QWORD *)v16 = v11;
        *((_QWORD *)v16 + 1) = v10;
        v17 = &v7[OBJC_IVAR____TtC15ProximityReader37StoreAndForwardValidationDataInternal_digest];
        *(_QWORD *)v17 = v15;
        *((_QWORD *)v17 + 1) = v14;

        v26.receiver = v7;
        v26.super_class = ObjectType;
        v18 = objc_msgSendSuper2(&v26, sel_init);

        return v18;
      }
    }

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  if (qword_25525AAC8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F30);
  sub_21C2D1D80(v19, (uint64_t)v6);
  v20 = sub_21C3A79D4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) == 1)
  {

    sub_21C2D1DC8((uint64_t)v6);
  }
  else
  {
    v22 = sub_21C3A79BC();
    v23 = sub_21C3A81C0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_21C2CD000, v22, v23, "StoreAndForwardValidationDataInternal | Failed to decode object", v24, 2u);
      MEMORY[0x22077AF8C](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v20);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22077AEB4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_21C2D1C1C()
{
  unint64_t result;

  result = qword_25525AE20;
  if (!qword_25525AE20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25525AE20);
  }
  return result;
}

id StoreAndForwardValidationDataInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StoreAndForwardValidationDataInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StoreAndForwardValidationDataInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_21C2D1D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2D1DC8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StoreAndForwardValidationDataInternal()
{
  return objc_opt_self();
}

uint64_t method lookup function for StoreAndForwardValidationDataInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StoreAndForwardValidationDataInternal.__allocating_init(activationID:digest:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of StoreAndForwardValidationDataInternal.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t IdentityInformation.portraitData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19IdentityInformation_portraitData);
  sub_21C2D1E80(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19IdentityInformation_portraitData + 8));
  return v1;
}

uint64_t sub_21C2D1E80(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_21C2D1E94(a1, a2);
  return a1;
}

uint64_t sub_21C2D1E94(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t IdentityInformation.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19IdentityInformation_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityInformation.age.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19IdentityInformation_age);
}

uint64_t IdentityInformation.ageAtLeastElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityInformation.issuer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19IdentityInformation_issuer);
  swift_bridgeObjectRetain();
  return v1;
}

id IdentityInformation.__allocating_init(portraitData:name:age:ageAtLeastElements:issuer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_class *v9;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  objc_super v24;

  v18 = (char *)objc_allocWithZone(v9);
  v19 = &v18[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_portraitData];
  *(_QWORD *)v19 = a1;
  *((_QWORD *)v19 + 1) = a2;
  v20 = &v18[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_name];
  *(_QWORD *)v20 = a3;
  *((_QWORD *)v20 + 1) = a4;
  v21 = &v18[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_age];
  *(_QWORD *)v21 = a5;
  v21[8] = a6 & 1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_ageAtLeastElements] = a7;
  v22 = &v18[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_issuer];
  *(_QWORD *)v22 = a8;
  *((_QWORD *)v22 + 1) = a9;
  v24.receiver = v18;
  v24.super_class = v9;
  return objc_msgSendSuper2(&v24, sel_init);
}

id IdentityInformation.init(portraitData:name:age:ageAtLeastElements:issuer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char *v9;
  objc_class *ObjectType;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType();
  v19 = &v9[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_portraitData];
  *(_QWORD *)v19 = a1;
  *((_QWORD *)v19 + 1) = a2;
  v20 = &v9[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_name];
  *(_QWORD *)v20 = a3;
  *((_QWORD *)v20 + 1) = a4;
  v21 = &v9[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_age];
  *(_QWORD *)v21 = a5;
  v21[8] = a6 & 1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_ageAtLeastElements] = a7;
  v22 = &v9[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_issuer];
  *(_QWORD *)v22 = a8;
  *((_QWORD *)v22 + 1) = a9;
  v24.receiver = v9;
  v24.super_class = ObjectType;
  return objc_msgSendSuper2(&v24, sel_init);
}

id IdentityInformation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void IdentityInformation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

BOOL sub_21C2D2190(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21C2D21A4()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t sub_21C2D21E8()
{
  return sub_21C3A870C();
}

uint64_t sub_21C2D2210()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t sub_21C2D2250()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C2D2288 + 4 * byte_21C3A9C20[*v0]))(0x7469617274726F70, 0xEC00000061746144);
}

uint64_t sub_21C2D2288()
{
  return 1701667182;
}

uint64_t sub_21C2D2298()
{
  return 6645601;
}

unint64_t sub_21C2D22A8()
{
  return 0xD000000000000012;
}

uint64_t sub_21C2D22C4()
{
  return 0x726575737369;
}

uint64_t sub_21C2D22D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2D3320(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2D22FC()
{
  return 0;
}

void sub_21C2D2308(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_21C2D2314()
{
  sub_21C2D2640();
  return sub_21C3A8754();
}

uint64_t sub_21C2D233C()
{
  sub_21C2D2640();
  return sub_21C3A8760();
}

id IdentityInformation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t IdentityInformation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525AF40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2D2640();
  sub_21C3A8748();
  v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC15ProximityReader19IdentityInformation_portraitData);
  v11 = 0;
  sub_21C2D2684();
  sub_21C3A85D4();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_21C3A85B0();
    LOBYTE(v12) = 2;
    sub_21C3A85C8();
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ProximityReader19IdentityInformation_ageAtLeastElements);
    v11 = 3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525BA40);
    sub_21C2D2B8C(&qword_25525AF60, MEMORY[0x24BEE1770], MEMORY[0x24BEE1330], MEMORY[0x24BEE04C0]);
    sub_21C3A8610();
    LOBYTE(v12) = 4;
    sub_21C3A85E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_21C2D2640()
{
  unint64_t result;

  result = qword_25525AF48;
  if (!qword_25525AF48)
  {
    result = MEMORY[0x22077AECC](&unk_21C3A9D7C, &type metadata for IdentityInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525AF48);
  }
  return result;
}

unint64_t sub_21C2D2684()
{
  unint64_t result;

  result = qword_25525AF50;
  if (!qword_25525AF50)
  {
    result = MEMORY[0x22077AECC](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25525AF50);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22077AEC0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t IdentityInformation.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return IdentityInformation.init(from:)(a1);
}

unint64_t IdentityInformation.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  objc_class *ObjectType;
  objc_super v25;
  __int128 v26;
  char v27;

  ObjectType = (objc_class *)swift_getObjectType();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525AF68);
  v4 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = sub_21C2D2640();
  v8 = v1;
  sub_21C3A873C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v9 = v4;
    v27 = 0;
    sub_21C2D2AF0();
    sub_21C3A8550();
    *(_OWORD *)&v8[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_portraitData] = v26;
    LOBYTE(v26) = 1;
    v11 = sub_21C3A852C();
    v12 = (uint64_t *)&v8[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_name];
    *v12 = v11;
    v12[1] = v13;
    LOBYTE(v26) = 2;
    v14 = sub_21C3A8544();
    v15 = &v8[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_age];
    *(_QWORD *)v15 = v14;
    v15[8] = v16 & 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525BA40);
    v27 = 3;
    sub_21C2D2B8C(&qword_25525AF78, MEMORY[0x24BEE1798], MEMORY[0x24BEE1348], MEMORY[0x24BEE04E0]);
    v17 = v23;
    sub_21C3A858C();
    *(_QWORD *)&v8[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_ageAtLeastElements] = v26;
    LOBYTE(v26) = 4;
    v18 = sub_21C3A855C();
    v19 = (uint64_t *)&v8[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_issuer];
    *v19 = v18;
    v19[1] = v20;

    v25.receiver = v8;
    v25.super_class = ObjectType;
    v21 = objc_msgSendSuper2(&v25, sel_init);
    v22 = v9;
    v7 = (unint64_t)v21;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_21C2D2AF0()
{
  unint64_t result;

  result = qword_25525AF70;
  if (!qword_25525AF70)
  {
    result = MEMORY[0x22077AECC](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25525AF70);
  }
  return result;
}

uint64_t sub_21C2D2B34(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_21C2D2B48(a1, a2);
  return a1;
}

uint64_t sub_21C2D2B48(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_21C2D2B8C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25525BA40);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x22077AECC](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21C2D2BF0@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  unint64_t result;

  v6 = objc_allocWithZone(v2);
  result = IdentityInformation.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_21C2D2C3C(_QWORD *a1)
{
  return IdentityInformation.encode(to:)(a1);
}

uint64_t static IdentityInformation.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_25525AF10;
}

uint64_t static IdentityInformation.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_25525AF10 = a1;
  return result;
}

uint64_t (*static IdentityInformation.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall IdentityInformation.encode(with:)(NSCoder with)
{
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;

  swift_getObjectType();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_21C2D35E0((unint64_t *)&unk_25525AF80, (uint64_t)&protocol conformance descriptor for IdentityInformation);
  sub_21C3A81E4();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  v4 = sub_21C3A774C();
  v6 = v5;

  v7 = (void *)sub_21C3A7728();
  sub_21C2D2B48(v4, v6);
  v8 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);

}

uint64_t type metadata accessor for IdentityInformation()
{
  return objc_opt_self();
}

id IdentityInformation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id IdentityInformation.init(coder:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  char *v17;
  char *v18;
  char *v19;
  id v20;
  id v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  objc_super v30;
  char *v31;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_21C2D32C0();
  v4 = v1;
  v5 = sub_21C3A825C();
  if (!v5)
  {

LABEL_10:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v6 = (void *)v5;
  v7 = sub_21C3A774C();
  v9 = v8;

  v10 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  sub_21C2D1E94(v7, v9);
  v11 = sub_21C2D3524();
  sub_21C2D2B48(v7, v9);
  if (!v11)
  {

LABEL_9:
    sub_21C2D2B48(v7, v9);
    goto LABEL_10;
  }
  sub_21C2D35E0(&qword_25525AF90, (uint64_t)&protocol conformance descriptor for IdentityInformation);
  sub_21C3A81F0();
  v12 = v31;

  if (!v31)
  {
    objc_msgSend(v11, sel_finishDecoding);

    goto LABEL_9;
  }
  v28 = *(_QWORD *)&v31[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_portraitData + 8];
  v29 = *(_QWORD *)&v31[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_portraitData];
  v13 = *(_QWORD *)&v31[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_name + 8];
  v26 = *(_QWORD *)&v31[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_age];
  v27 = *(_QWORD *)&v31[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_name];
  v23 = v31[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_age + 8];
  v14 = *(_QWORD *)&v31[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_issuer + 8];
  v24 = *(_QWORD *)&v31[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_issuer];
  v25 = *(_QWORD *)&v31[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_ageAtLeastElements];
  v15 = (char *)objc_allocWithZone(ObjectType);
  v16 = (uint64_t *)&v15[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_portraitData];
  *v16 = v29;
  v16[1] = v28;
  v17 = &v15[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_name];
  *(_QWORD *)v17 = v27;
  *((_QWORD *)v17 + 1) = v13;
  v18 = &v15[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_age];
  *(_QWORD *)v18 = v26;
  v18[8] = v23;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_ageAtLeastElements] = v25;
  v19 = &v15[OBJC_IVAR____TtC15ProximityReader19IdentityInformation_issuer];
  *(_QWORD *)v19 = v24;
  *((_QWORD *)v19 + 1) = v14;
  sub_21C2D1E80(v29, v28);
  v30.receiver = v15;
  v30.super_class = ObjectType;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = objc_msgSendSuper2(&v30, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v21 = v20;
  objc_msgSend(v11, sel_finishDecoding);

  sub_21C2D2B48(v7, v9);
  return v21;
}

unint64_t sub_21C2D32C0()
{
  unint64_t result;

  result = qword_25525B0F0;
  if (!qword_25525B0F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25525B0F0);
  }
  return result;
}

uint64_t sub_21C2D3320(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7469617274726F70 && a2 == 0xEC00000061746144;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000021C3B8EC0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726575737369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

id sub_21C2D3524()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (void *)sub_21C3A7728();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_21C3A75FC();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_21C2D35E0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IdentityInformation();
    result = MEMORY[0x22077AECC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for IdentityInformation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IdentityInformation.__allocating_init(portraitData:name:age:ageAtLeastElements:issuer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v6 + 120))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of IdentityInformation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for IdentityInformation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21C2D373C + 4 * byte_21C3A9C2A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21C2D3770 + 4 * byte_21C3A9C25[v4]))();
}

uint64_t sub_21C2D3770(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D3778(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2D3780);
  return result;
}

uint64_t sub_21C2D378C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2D3794);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21C2D3798(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D37A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D37AC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_21C2D37B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for IdentityInformation.CodingKeys()
{
  return &type metadata for IdentityInformation.CodingKeys;
}

unint64_t sub_21C2D37D4()
{
  unint64_t result;

  result = qword_25525AFC0;
  if (!qword_25525AFC0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3A9D54, &type metadata for IdentityInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525AFC0);
  }
  return result;
}

unint64_t sub_21C2D381C()
{
  unint64_t result;

  result = qword_25525AFC8;
  if (!qword_25525AFC8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3A9CC4, &type metadata for IdentityInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525AFC8);
  }
  return result;
}

unint64_t sub_21C2D3864()
{
  unint64_t result;

  result = qword_25525AFD0;
  if (!qword_25525AFD0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3A9CEC, &type metadata for IdentityInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525AFD0);
  }
  return result;
}

uint64_t IdentityEntitlementVerifier.hasIdentityServiceEntitlement.getter()
{
  uint64_t v0;

  return *(_BYTE *)v0 & 1 | (*(_QWORD *)(v0 + 8) != 0);
}

uint64_t IdentityEntitlementVerifier.hasIdentityDisplayEntitlement.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t IdentityEntitlementVerifier.identityReadEntitlement.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityEntitlementVerifier.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  char v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[24];
  uint64_t v15;

  v4 = (void *)sub_21C3A7EB4();
  v5 = objc_msgSend(a1, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_21C3A8340();
    swift_unknownObjectRelease();
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  sub_21C2D3A98((uint64_t)&v12, (uint64_t)v14);
  if (v15)
  {
    if (swift_dynamicCast())
    {
      v6 = v11;
      goto LABEL_9;
    }
  }
  else
  {
    sub_21C2D3AE0((uint64_t)v14);
  }
  v6 = 0;
LABEL_9:
  v7 = (void *)sub_21C3A7EB4();
  v8 = objc_msgSend(a1, sel_valueForEntitlement_, v7);

  if (v8)
  {
    sub_21C3A8340();
    swift_unknownObjectRelease();

  }
  else
  {

    v12 = 0u;
    v13 = 0u;
  }
  sub_21C2D3A98((uint64_t)&v12, (uint64_t)v14);
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525AFE0);
    result = swift_dynamicCast();
    v10 = v11;
    if (!(_DWORD)result)
      v10 = 0;
  }
  else
  {
    result = sub_21C2D3AE0((uint64_t)v14);
    v10 = 0;
  }
  *(_BYTE *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_21C2D3A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2D3AE0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B110);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void IdentityEntitlementVerifier.init()(uint64_t a1@<X8>)
{
  __SecTask *v2;
  __CFString *v3;
  CFTypeRef v4;
  char v5;
  __CFString *v6;
  CFTypeRef v7;
  char v8;
  CFTypeRef v9;

  v2 = SecTaskCreateFromSelf(0);
  if (!v2)
  {
    v5 = 0;
    goto LABEL_9;
  }
  v3 = (__CFString *)sub_21C3A7EB4();
  v4 = SecTaskCopyValueForEntitlement(v2, v3, 0);

  if (v4)
  {
    v9 = v4;
    v5 = swift_dynamicCast() & v8;
  }
  else
  {
    v5 = 0;
  }
  v6 = (__CFString *)sub_21C3A7EB4();
  v7 = SecTaskCopyValueForEntitlement(v2, v6, 0);

  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525AFE0);
    if (swift_dynamicCast())
    {
      v7 = v9;
      goto LABEL_10;
    }
LABEL_9:
    v7 = 0;
  }
LABEL_10:

  *(_BYTE *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
}

uint64_t initializeBufferWithCopyOfBuffer for IdentityEntitlementVerifier(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for IdentityEntitlementVerifier()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for IdentityEntitlementVerifier(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for IdentityEntitlementVerifier(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityEntitlementVerifier(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityEntitlementVerifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityEntitlementVerifier()
{
  return &type metadata for IdentityEntitlementVerifier;
}

BOOL sub_21C2D3DE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_21C2D3E00()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0x7461446567616D69;
}

uint64_t sub_21C2D3E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2D49D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_21C2D3E68(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21C2D3E74()
{
  sub_21C2D4308();
  return sub_21C3A8754();
}

uint64_t sub_21C2D3E9C()
{
  sub_21C2D4308();
  return sub_21C3A8760();
}

uint64_t sub_21C2D3EC4()
{
  return 1;
}

uint64_t sub_21C2D3ED4()
{
  return 12383;
}

void sub_21C2D3EE4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21C2D3EF0()
{
  sub_21C2D4390();
  return sub_21C3A8754();
}

uint64_t sub_21C2D3F18()
{
  sub_21C2D4390();
  return sub_21C3A8760();
}

uint64_t sub_21C2D3F40()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t sub_21C2D3F80()
{
  return sub_21C3A870C();
}

uint64_t sub_21C2D3FA4()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t sub_21C2D3FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_21C3A864C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_21C2D405C()
{
  sub_21C2D434C();
  return sub_21C3A8754();
}

uint64_t sub_21C2D4084()
{
  sub_21C2D434C();
  return sub_21C3A8760();
}

uint64_t IdentityMerchantDetails.MerchantImage.encode(to:)(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v20 = a2;
  v23 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525AFE8);
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525AFF0);
  v17 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525AFF8);
  v19 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2D4308();
  v13 = v23;
  sub_21C3A8748();
  if ((v13 & 0x2000000000000000) != 0)
  {
    LOBYTE(v21) = 1;
    sub_21C2D434C();
    sub_21C3A85A4();
    sub_21C3A8604();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v12, v10);
  }
  else
  {
    LOBYTE(v21) = 0;
    v14 = v20;
    sub_21C2D1E94(v20, v13);
    sub_21C2D4390();
    sub_21C3A85A4();
    v21 = v14;
    v22 = v13;
    sub_21C2D2684();
    sub_21C3A8610();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
    return sub_21C2D43D4(v14, v13);
  }
}

unint64_t sub_21C2D4308()
{
  unint64_t result;

  result = qword_25525B000;
  if (!qword_25525B000)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA330, &type metadata for IdentityMerchantDetails.MerchantImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B000);
  }
  return result;
}

unint64_t sub_21C2D434C()
{
  unint64_t result;

  result = qword_25525B008;
  if (!qword_25525B008)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA2E0, &type metadata for IdentityMerchantDetails.MerchantImage.MerchantCategoryCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B008);
  }
  return result;
}

unint64_t sub_21C2D4390()
{
  unint64_t result;

  result = qword_25525B010;
  if (!qword_25525B010)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA290, &type metadata for IdentityMerchantDetails.MerchantImage.ImageDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B010);
  }
  return result;
}

uint64_t sub_21C2D43D4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) == 0)
    return sub_21C2D2B48(a1, a2);
  return a1;
}

uint64_t IdentityMerchantDetails.MerchantImage.init(from:)(_QWORD *a1)
{
  return sub_21C2D4AD0(a1);
}

uint64_t sub_21C2D43F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_21C2D4AD0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_21C2D441C(_QWORD *a1)
{
  uint64_t v1;

  return IdentityMerchantDetails.MerchantImage.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t IdentityMerchantDetails.image.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_21C2D4E74(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t IdentityMerchantDetails.mbn.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityMerchantDetails.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityMerchantDetails.init(image:mbn:identifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

double static IdentityMerchantDetails.empty.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_21C3A9E00;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  return result;
}

uint64_t sub_21C2D44E8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7234157;
  if (*v0 != 1)
    v1 = 0x696669746E656469;
  if (*v0)
    return v1;
  else
    return 0x6567616D69;
}

uint64_t sub_21C2D453C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2D5A7C(a1, a2);
  *a3 = result;
  return result;
}

void sub_21C2D4560(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_21C2D456C()
{
  sub_21C2D4E80();
  return sub_21C3A8754();
}

uint64_t sub_21C2D4594()
{
  sub_21C2D4E80();
  return sub_21C3A8760();
}

uint64_t IdentityMerchantDetails.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B018);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v13[3] = v1[3];
  v13[4] = v9;
  v10 = v1[4];
  v13[1] = v1[5];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2D4E80();
  sub_21C3A8748();
  v14 = v8;
  v15 = v7;
  v16 = 0;
  sub_21C2D4EC4();
  v11 = v13[5];
  sub_21C3A8610();
  if (!v11)
  {
    LOBYTE(v14) = 1;
    sub_21C3A85E0();
    LOBYTE(v14) = 2;
    sub_21C3A85E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IdentityMerchantDetails.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B030);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2D4E80();
  sub_21C3A873C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  sub_21C2D4F08();
  sub_21C3A858C();
  v10 = v26;
  v9 = v27;
  LOBYTE(v26) = 1;
  sub_21C2D4E74(v10, v27);
  v11 = sub_21C3A855C();
  v13 = v12;
  v23 = v11;
  v25 = v9;
  LOBYTE(v26) = 2;
  swift_bridgeObjectRetain();
  v14 = v13;
  v24 = 0;
  v15 = sub_21C3A855C();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19 = v15;
  v18(v8, v5);
  v20 = v25;
  sub_21C2D4E74(v10, v25);
  swift_bridgeObjectRetain();
  sub_21C2D43D4(v10, v20);
  *a2 = v10;
  a2[1] = v20;
  a2[2] = v23;
  a2[3] = v14;
  a2[4] = v19;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_21C2D43D4(v10, v20);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C2D49B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IdentityMerchantDetails.init(from:)(a1, a2);
}

uint64_t sub_21C2D49C4(_QWORD *a1)
{
  return IdentityMerchantDetails.encode(to:)(a1);
}

uint64_t sub_21C2D49D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461446567616D69 && a2 == 0xE900000000000061;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000021C3B8F70)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21C2D4AD0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B0A0);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8]();
  v26 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B0A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B0B0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v29 = a1;
  v13 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v12);
  sub_21C2D4308();
  v14 = v31;
  sub_21C3A873C();
  if (v14)
    goto LABEL_7;
  v24 = v4;
  v25 = v5;
  v15 = v26;
  v16 = v27;
  v17 = v28;
  v31 = v9;
  v18 = sub_21C3A8598();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v19 = sub_21C3A840C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
    v13 = (uint64_t)v11;
    *v21 = &type metadata for IdentityMerchantDetails.MerchantImage;
    sub_21C3A8520();
    sub_21C3A8400();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
    goto LABEL_7;
  }
  if ((*(_BYTE *)(v18 + 32) & 1) != 0)
  {
    LOBYTE(v30) = 1;
    sub_21C2D434C();
    sub_21C3A8514();
    v13 = sub_21C3A8580();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v17);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    return v13;
  }
  LOBYTE(v30) = 0;
  sub_21C2D4390();
  sub_21C3A8514();
  sub_21C2D2AF0();
  v23 = v24;
  sub_21C3A858C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v23);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
  v13 = v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v13;
}

uint64_t sub_21C2D4E74(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) == 0)
    return sub_21C2D1E94(a1, a2);
  return a1;
}

unint64_t sub_21C2D4E80()
{
  unint64_t result;

  result = qword_25525B020;
  if (!qword_25525B020)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA240, &type metadata for IdentityMerchantDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B020);
  }
  return result;
}

unint64_t sub_21C2D4EC4()
{
  unint64_t result;

  result = qword_25525B028;
  if (!qword_25525B028)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityMerchantDetails.MerchantImage, &type metadata for IdentityMerchantDetails.MerchantImage);
    atomic_store(result, (unint64_t *)&qword_25525B028);
  }
  return result;
}

unint64_t sub_21C2D4F08()
{
  unint64_t result;

  result = qword_25525B038;
  if (!qword_25525B038)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityMerchantDetails.MerchantImage, &type metadata for IdentityMerchantDetails.MerchantImage);
    atomic_store(result, (unint64_t *)&qword_25525B038);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for IdentityMerchantDetails(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for IdentityMerchantDetails(uint64_t a1)
{
  sub_21C2D43D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for IdentityMerchantDetails(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  sub_21C2D4E74(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[4];
  v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for IdentityMerchantDetails(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_21C2D4E74(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_21C2D43D4(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for IdentityMerchantDetails(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_21C2D43D4(v4, v5);
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityMerchantDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityMerchantDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityMerchantDetails()
{
  return &type metadata for IdentityMerchantDetails;
}

uint64_t *initializeBufferWithCopyOfBuffer for IdentityMerchantDetails.MerchantImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_21C2D4E74(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for IdentityMerchantDetails.MerchantImage(uint64_t a1)
{
  return sub_21C2D43D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for IdentityMerchantDetails.MerchantImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_21C2D4E74(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_21C2D43D4(v5, v6);
  return a1;
}

uint64_t *assignWithTake for IdentityMerchantDetails.MerchantImage(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_21C2D43D4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityMerchantDetails.MerchantImage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 3 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 3);
  v3 = ((2 * ((*(_QWORD *)(a1 + 8) & 0x1000000000000000) != 0)) | ((*(_QWORD *)(a1 + 8) >> 60) >> 1) & 1) ^ 3;
  if (v3 >= 2)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for IdentityMerchantDetails.MerchantImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 2)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 3)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 3)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((2 * (a2 & 1)) | 1) << 60;
    }
  }
  return result;
}

uint64_t sub_21C2D5304(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 8) >> 61) & 1;
}

uint64_t sub_21C2D5310(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x2000000000000000uLL;
  return result;
}

uint64_t sub_21C2D5320(uint64_t result, char a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 1) << 61);
  return result;
}

ValueMetadata *type metadata accessor for IdentityMerchantDetails.MerchantImage()
{
  return &type metadata for IdentityMerchantDetails.MerchantImage;
}

uint64_t getEnumTagSinglePayload for IdentityMerchantDetails.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityMerchantDetails.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C2D5424 + 4 * byte_21C3A9E15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C2D5458 + 4 * byte_21C3A9E10[v4]))();
}

uint64_t sub_21C2D5458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D5460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2D5468);
  return result;
}

uint64_t sub_21C2D5474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2D547CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C2D5480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D5488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityMerchantDetails.CodingKeys()
{
  return &type metadata for IdentityMerchantDetails.CodingKeys;
}

uint64_t getEnumTagSinglePayload for IdentityMerchantDetails.MerchantImage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityMerchantDetails.MerchantImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C2D5580 + 4 * byte_21C3A9E1F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C2D55B4 + 4 * byte_21C3A9E1A[v4]))();
}

uint64_t sub_21C2D55B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D55BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2D55C4);
  return result;
}

uint64_t sub_21C2D55D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2D55D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C2D55DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D55E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_21C2D55F0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityMerchantDetails.MerchantImage.CodingKeys()
{
  return &type metadata for IdentityMerchantDetails.MerchantImage.CodingKeys;
}

uint64_t sub_21C2D5618()
{
  return 0;
}

ValueMetadata *type metadata accessor for IdentityMerchantDetails.MerchantImage.ImageDataCodingKeys()
{
  return &type metadata for IdentityMerchantDetails.MerchantImage.ImageDataCodingKeys;
}

uint64_t getEnumTagSinglePayload for IdentityDocumentType.NationalIDCardCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s15ProximityReader23IdentityMerchantDetailsV13MerchantImageO19ImageDataCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C2D56C0 + 4 * byte_21C3A9E24[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C2D56E0 + 4 * byte_21C3A9E29[v4]))();
}

_BYTE *sub_21C2D56C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C2D56E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C2D56E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C2D56F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C2D56F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C2D5700(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IdentityMerchantDetails.MerchantImage.MerchantCategoryCodeCodingKeys()
{
  return &type metadata for IdentityMerchantDetails.MerchantImage.MerchantCategoryCodeCodingKeys;
}

unint64_t sub_21C2D5720()
{
  unint64_t result;

  result = qword_25525B040;
  if (!qword_25525B040)
  {
    result = MEMORY[0x22077AECC](&unk_21C3A9FF0, &type metadata for IdentityMerchantDetails.MerchantImage.MerchantCategoryCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B040);
  }
  return result;
}

unint64_t sub_21C2D5768()
{
  unint64_t result;

  result = qword_25525B048;
  if (!qword_25525B048)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA0A8, &type metadata for IdentityMerchantDetails.MerchantImage.ImageDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B048);
  }
  return result;
}

unint64_t sub_21C2D57B0()
{
  unint64_t result;

  result = qword_25525B050;
  if (!qword_25525B050)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA160, &type metadata for IdentityMerchantDetails.MerchantImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B050);
  }
  return result;
}

unint64_t sub_21C2D57F8()
{
  unint64_t result;

  result = qword_25525B058;
  if (!qword_25525B058)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA218, &type metadata for IdentityMerchantDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B058);
  }
  return result;
}

unint64_t sub_21C2D5840()
{
  unint64_t result;

  result = qword_25525B060;
  if (!qword_25525B060)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA188, &type metadata for IdentityMerchantDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B060);
  }
  return result;
}

unint64_t sub_21C2D5888()
{
  unint64_t result;

  result = qword_25525B068;
  if (!qword_25525B068)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA1B0, &type metadata for IdentityMerchantDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B068);
  }
  return result;
}

unint64_t sub_21C2D58D0()
{
  unint64_t result;

  result = qword_25525B070;
  if (!qword_25525B070)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA018, &type metadata for IdentityMerchantDetails.MerchantImage.ImageDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B070);
  }
  return result;
}

unint64_t sub_21C2D5918()
{
  unint64_t result;

  result = qword_25525B078;
  if (!qword_25525B078)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA040, &type metadata for IdentityMerchantDetails.MerchantImage.ImageDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B078);
  }
  return result;
}

unint64_t sub_21C2D5960()
{
  unint64_t result;

  result = qword_25525B080;
  if (!qword_25525B080)
  {
    result = MEMORY[0x22077AECC](&unk_21C3A9F60, &type metadata for IdentityMerchantDetails.MerchantImage.MerchantCategoryCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B080);
  }
  return result;
}

unint64_t sub_21C2D59A8()
{
  unint64_t result;

  result = qword_25525B088;
  if (!qword_25525B088)
  {
    result = MEMORY[0x22077AECC](&unk_21C3A9F88, &type metadata for IdentityMerchantDetails.MerchantImage.MerchantCategoryCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B088);
  }
  return result;
}

unint64_t sub_21C2D59F0()
{
  unint64_t result;

  result = qword_25525B090;
  if (!qword_25525B090)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA0D0, &type metadata for IdentityMerchantDetails.MerchantImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B090);
  }
  return result;
}

unint64_t sub_21C2D5A38()
{
  unint64_t result;

  result = qword_25525B098;
  if (!qword_25525B098)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA0F8, &type metadata for IdentityMerchantDetails.MerchantImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B098);
  }
  return result;
}

uint64_t sub_21C2D5A7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7234157 && a2 == 0xE300000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

BOOL static PaymentCardReadResult.ReadOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PaymentCardReadResult.ReadOutcome.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t PaymentCardReadResult.ReadOutcome.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t PaymentCardReadResult.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaymentCardReadResult.paymentCardData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaymentCardReadResult.generalCardData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaymentCardReadResult.applicationTypeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void PaymentCardReadResult.outcome.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

uint64_t PaymentCardReadResult.pinBypassed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t PaymentCardReadResult.isPINFallback.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 66);
}

unint64_t sub_21C2D5D1C()
{
  unint64_t result;

  result = qword_25525B0B8;
  if (!qword_25525B0B8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCardReadResult.ReadOutcome, &type metadata for PaymentCardReadResult.ReadOutcome);
    atomic_store(result, (unint64_t *)&qword_25525B0B8);
  }
  return result;
}

uint64_t sub_21C2D5D60()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_21C2D5D6C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for PaymentCardReadResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaymentCardReadResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaymentCardReadResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  return a1;
}

__n128 __swift_memcpy67_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 63) = *(_DWORD *)(a2 + 63);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for PaymentCardReadResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaymentCardReadResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 67))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaymentCardReadResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 66) = 0;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 67) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 67) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardReadResult()
{
  return &type metadata for PaymentCardReadResult;
}

uint64_t storeEnumTagSinglePayload for PaymentCardReadResult.ReadOutcome(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C2D608C + 4 * byte_21C3AA395[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C2D60C0 + 4 * byte_21C3AA390[v4]))();
}

uint64_t sub_21C2D60C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D60C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2D60D0);
  return result;
}

uint64_t sub_21C2D60DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2D60E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C2D60E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D60F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardReadResult.ReadOutcome()
{
  return &type metadata for PaymentCardReadResult.ReadOutcome;
}

uint64_t static VASReadEntry.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t VASReadEntry.mobileToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_mobileToken);
  sub_21C2D1E80(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_mobileToken + 8));
  return v1;
}

uint64_t VASReadEntry.customerVASData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_customerVASData);
  sub_21C2D1E80(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_customerVASData + 8));
  return v1;
}

uint64_t VASReadEntry.merchantIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_merchantIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VASReadEntry.resultCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_resultCode);
}

id VASReadEntry.__allocating_init(customerVASData:mobileToken:merchantIdentifier:resultCode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  objc_super v20;

  v15 = (char *)objc_allocWithZone(v7);
  v16 = &v15[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_customerVASData];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a2;
  v17 = &v15[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_mobileToken];
  *(_QWORD *)v17 = a3;
  *((_QWORD *)v17 + 1) = a4;
  v18 = &v15[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_merchantIdentifier];
  *(_QWORD *)v18 = a5;
  *((_QWORD *)v18 + 1) = a6;
  *(_QWORD *)&v15[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_resultCode] = a7;
  v20.receiver = v15;
  v20.super_class = v7;
  return objc_msgSendSuper2(&v20, sel_init);
}

id VASReadEntry.init(customerVASData:mobileToken:merchantIdentifier:resultCode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  objc_class *ObjectType;
  char *v16;
  char *v17;
  char *v18;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v16 = &v7[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_customerVASData];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a2;
  v17 = &v7[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_mobileToken];
  *(_QWORD *)v17 = a3;
  *((_QWORD *)v17 + 1) = a4;
  v18 = &v7[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_merchantIdentifier];
  *(_QWORD *)v18 = a5;
  *((_QWORD *)v18 + 1) = a6;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_resultCode] = a7;
  v20.receiver = v7;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_init);
}

Swift::Void __swiftcall VASReadEntry.encode(with:)(NSCoder with)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_customerVASData + 8);
  if (v3 >> 60 != 15)
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_customerVASData);
    v5 = objc_allocWithZone(MEMORY[0x24BDBCE50]);
    sub_21C2D1E94(v4, v3);
    v6 = (void *)sub_21C3A7728();
    v7 = objc_msgSend(v5, sel_initWithData_, v6);

    v8 = v7;
    v9 = (void *)sub_21C3A7EB4();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v8, v9);

    sub_21C2D2B34(v4, v3);
  }
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_mobileToken + 8);
  if (v10 >> 60 != 15)
  {
    v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_mobileToken);
    v12 = objc_allocWithZone(MEMORY[0x24BDBCE50]);
    sub_21C2D1E94(v11, v10);
    v13 = (void *)sub_21C3A7728();
    v14 = objc_msgSend(v12, sel_initWithData_, v13);

    v15 = v14;
    v16 = (void *)sub_21C3A7EB4();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v15, v16);

    sub_21C2D2B34(v11, v10);
  }
  v17 = (void *)sub_21C3A7EB4();
  v18 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v17, v18);

  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader12VASReadEntry_resultCode);
  v20 = (id)sub_21C3A7EB4();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v19, v20);

}

id VASReadEntry.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return VASReadEntry.init(coder:)(a1);
}

id VASReadEntry.init(coder:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  void *v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  objc_super v36;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2D7704(0, (unint64_t *)&qword_25525AE20);
  v7 = v1;
  v8 = sub_21C3A825C();
  if (v8)
  {
    v9 = (void *)v8;
    v10 = sub_21C3A7ED8();
    v12 = v11;

    sub_21C2D7704(0, (unint64_t *)&qword_25525B0F0);
    v13 = sub_21C3A825C();
    if (v13)
    {
      v14 = (void *)v13;
      v15 = sub_21C3A774C();
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0xF000000000000000;
    }
    v21 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_customerVASData];
    *v21 = v15;
    v21[1] = v17;
    v22 = sub_21C3A825C();
    if (v22)
    {
      v23 = (void *)v22;
      v24 = sub_21C3A774C();
      v26 = v25;

    }
    else
    {
      v24 = 0;
      v26 = 0xF000000000000000;
    }
    v27 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_mobileToken];
    *v27 = v24;
    v27[1] = v26;
    v28 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_merchantIdentifier];
    *v28 = v10;
    v28[1] = v12;
    v29 = (void *)sub_21C3A7EB4();
    v30 = objc_msgSend(a1, sel_decodeIntegerForKey_, v29);

    *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_resultCode] = v30;
    v36.receiver = v7;
    v36.super_class = ObjectType;
    v31 = objc_msgSendSuper2(&v36, sel_init);

  }
  else
  {

    if (qword_25525AAC8 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F30);
    sub_21C2D1D80(v18, (uint64_t)v6);
    v19 = sub_21C3A79D4();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v19) == 1)
    {

      sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v32 = sub_21C3A79BC();
      v33 = sub_21C3A81C0();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_21C2CD000, v32, v33, "VASReadEntry | Failed to decode merchantIdentifier", v34, 2u);
        MEMORY[0x22077AF8C](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v19);
    }
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v31;
}

id VASReadEntry.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void VASReadEntry.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VASReadEntry.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static VASResultArrayWrapper.supportsSecureCoding.getter()
{
  return 1;
}

id VASResultArrayWrapper.__allocating_init(vasEntries:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ProximityReader21VASResultArrayWrapper_vasEntries] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id VASResultArrayWrapper.init(vasEntries:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ProximityReader21VASResultArrayWrapper_vasEntries] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for VASResultArrayWrapper();
  return objc_msgSendSuper2(&v3, sel_init);
}

void sub_21C2D6B48(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  id v7;

  sub_21C2D6C30(*(_QWORD *)(v2 + OBJC_IVAR____TtC15ProximityReader21VASResultArrayWrapper_vasEntries), a2, (void (*)(uint64_t))type metadata accessor for VASReadEntry);
  v4 = objc_allocWithZone(MEMORY[0x24BDBCF00]);
  v5 = (void *)sub_21C3A8064();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithArray_, v5);

  v7 = (id)sub_21C3A7EB4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

}

uint64_t sub_21C2D6C20(unint64_t a1)
{
  return sub_21C2D6C30(a1, 0, (void (*)(uint64_t))type metadata accessor for VASMerchantInternal);
}

uint64_t sub_21C2D6C30(unint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;
  unint64_t v10;
  unint64_t v11;
  id *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_21C3A84B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x24BEE4AF8];
  if (!v6)
    return v7;
  v17 = MEMORY[0x24BEE4AF8];
  result = sub_21C31E0F0(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v6; ++i)
      {
        MEMORY[0x22077A5D8](i, a1);
        a3(a2);
        swift_dynamicCast();
        v7 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21C31E0F0(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v17;
        }
        v11 = *(_QWORD *)(v7 + 16);
        v10 = *(_QWORD *)(v7 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_21C31E0F0(v10 > 1, v11 + 1, 1);
          v7 = v17;
        }
        *(_QWORD *)(v7 + 16) = v11 + 1;
        sub_21C2D7828(v16, (_OWORD *)(v7 + 32 * v11 + 32));
      }
    }
    else
    {
      v12 = (id *)(a1 + 32);
      a3(a2);
      do
      {
        v13 = *v12;
        swift_dynamicCast();
        v7 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21C31E0F0(0, *(_QWORD *)(v7 + 16) + 1, 1);
          v7 = v17;
        }
        v15 = *(_QWORD *)(v7 + 16);
        v14 = *(_QWORD *)(v7 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_21C31E0F0(v14 > 1, v15 + 1, 1);
          v7 = v17;
        }
        *(_QWORD *)(v7 + 16) = v15 + 1;
        sub_21C2D7828(v16, (_OWORD *)(v7 + 32 * v15 + 32));
        ++v12;
        --v6;
      }
      while (v6);
    }
    return v7;
  }
  __break(1u);
  return result;
}

id VASResultArrayWrapper.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return VASResultArrayWrapper.init(coder:)(a1);
}

id VASResultArrayWrapper.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v22;
  objc_super v23;
  id v24;
  _BYTE v25[24];
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B100);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21C3AA490;
  *(_QWORD *)(v6 + 32) = sub_21C2D7704(0, &qword_25525B108);
  *(_QWORD *)(v6 + 40) = type metadata accessor for VASReadEntry();
  v7 = v1;
  sub_21C3A8268();
  swift_bridgeObjectRelease();
  if (v26)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v8 = v24;
      v9 = objc_msgSend(v24, sel_array);
      v10 = sub_21C3A8070();

      v12 = sub_21C2D72AC(v10, v11, (void (*)(uint64_t))type metadata accessor for VASReadEntry);
      swift_bridgeObjectRelease();
      if (v12)
      {
        *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader21VASResultArrayWrapper_vasEntries] = v12;

        v13 = (objc_class *)type metadata accessor for VASResultArrayWrapper();
        v23.receiver = v7;
        v23.super_class = v13;
        v14 = objc_msgSendSuper2(&v23, sel_init);

        return v14;
      }
    }

  }
  else
  {

    sub_21C2D775C((uint64_t)v25, &qword_25525B110);
  }
  if (qword_25525AAC8 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F30);
  sub_21C2D1D80(v15, (uint64_t)v5);
  v16 = sub_21C3A79D4();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
  {

    sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v18 = sub_21C3A79BC();
    v19 = sub_21C3A81C0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_21C2CD000, v18, v19, "VASResultArrayWrapper | Failed to decode object", v20, 2u);
      MEMORY[0x22077AF8C](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
  }
  type metadata accessor for VASResultArrayWrapper();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_21C2D729C(uint64_t a1)
{
  return sub_21C2D72AC(a1, 0, (void (*)(uint64_t))type metadata accessor for VASMerchantInternal);
}

uint64_t sub_21C2D72AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t i;
  _BYTE v9[32];
  uint64_t v10;

  v10 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a1 + 16);
  sub_21C3A843C();
  if (!v6)
    return v10;
  for (i = a1 + 32; ; i += 32)
  {
    sub_21C2D77EC(i, (uint64_t)v9);
    a3(a2);
    if (!swift_dynamicCast())
      break;
    sub_21C3A8424();
    sub_21C3A8448();
    sub_21C3A8454();
    sub_21C3A8430();
    if (!--v6)
      return v10;
  }
  swift_release();

  return 0;
}

void VASResultArrayWrapper.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VASResultArrayWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VASResultArrayWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s15ProximityReader12VASReadEntryC11externalizeySayAA0C6ResultV04ReadD0VGSayACGFZ_0(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v1 = a1;
  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_34:
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_35:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain();
  result = sub_21C3A84B4();
  v2 = result;
  if (!result)
    goto LABEL_34;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v19 = v1 & 0xC000000000000001;
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v20 = v2;
    v21 = v1;
    do
    {
      if (v19)
        v6 = (char *)MEMORY[0x22077A5D8](v4, v1);
      else
        v6 = (char *)*(id *)(v1 + 8 * v4 + 32);
      v7 = v6;
      v9 = *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_merchantIdentifier];
      v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_merchantIdentifier + 8];
      v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_customerVASData];
      v11 = *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_customerVASData + 8];
      v12 = *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader12VASReadEntry_resultCode];
      if (v12 <= 27011)
      {
        if (v12 == 26368)
          v15 = 4;
        else
          v15 = 0;
        if (v12 == 25408)
          v15 = 7;
        if (v12 == 25223)
          v14 = 2;
        else
          v14 = v15;
      }
      else if (v12 > 27266)
      {
        if (v12 == 27392)
          v14 = 3;
        else
          v14 = v12 == 27267;
      }
      else
      {
        if (v12 == 27264)
          v13 = 6;
        else
          v13 = 0;
        if (v12 == 27012)
          v14 = 5;
        else
          v14 = v13;
      }
      swift_bridgeObjectRetain();
      sub_21C2D1E80(v10, v11);
      swift_bridgeObjectRetain();
      sub_21C2D1E80(v10, v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_21C333EAC(0, v5[2] + 1, 1, v5);
      v17 = v5[2];
      v16 = v5[3];
      if (v17 >= v16 >> 1)
        v5 = sub_21C333EAC((_QWORD *)(v16 > 1), v17 + 1, 1, v5);
      ++v4;
      v5[2] = v17 + 1;
      v18 = &v5[5 * v17];
      v18[4] = v9;
      v18[5] = v8;
      v18[6] = v10;
      v18[7] = v11;
      *((_BYTE *)v18 + 64) = v14;
      swift_bridgeObjectRelease();
      sub_21C2D2B34(v10, v11);

      v1 = v21;
    }
    while (v20 != v4);
    goto LABEL_35;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VASResultArrayWrapper()
{
  return objc_opt_self();
}

uint64_t sub_21C2D7704(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for VASReadEntry()
{
  return objc_opt_self();
}

uint64_t sub_21C2D775C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t method lookup function for VASReadEntry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VASReadEntry.__allocating_init(customerVASData:mobileToken:merchantIdentifier:resultCode:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of VASReadEntry.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for VASResultArrayWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VASResultArrayWrapper.__allocating_init(vasEntries:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of VASResultArrayWrapper.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of VASResultArrayWrapper.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_21C2D77EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_21C2D7828(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t MobileDocumentReader.Configuration.readerInstanceIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReader.Configuration.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

uint64_t static MobileDocumentReader.Configuration.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_21C3A864C();
}

uint64_t MobileDocumentReader.Configuration.hashValue.getter()
{
  sub_21C3A8700();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t sub_21C2D7934()
{
  sub_21C3A8700();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t sub_21C2D798C()
{
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C2D79D0()
{
  sub_21C3A8700();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

unint64_t sub_21C2D7A28()
{
  unint64_t result;

  result = qword_25525B170;
  if (!qword_25525B170)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDocumentReader.Configuration, &type metadata for MobileDocumentReader.Configuration);
    atomic_store(result, (unint64_t *)&qword_25525B170);
  }
  return result;
}

uint64_t sub_21C2D7A6C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_21C3A864C();
}

_QWORD *_s13ConfigurationVwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s13ConfigurationVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s13ConfigurationVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReader.Configuration()
{
  return &type metadata for MobileDocumentReader.Configuration;
}

uint64_t sub_21C2D7BD0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;

  v1 = v0;
  v0[2] = MEMORY[0x24BEE4AF8];
  v0[3] = objc_msgSend((id)objc_opt_self(), sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B300);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  v0[6] = v2;
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v4 = (unint64_t)objc_msgSend(v3, sel_applicationState);

  }
  else
  {
    sub_21C2D7704(0, (unint64_t *)&qword_25525B308);
    v5 = (void *)sub_21C3A8214();
    type metadata accessor for State(0);
    sub_21C3A8220();

    v4 = v15;
  }
  if (v4 >= 3)
  {
    result = sub_21C3A84A8();
    __break(1u);
  }
  else
  {
    *((_BYTE *)v1 + 40) = 1u >> (8 * v4);
    v1[4] = 2 - v4;
    v6 = *MEMORY[0x24BEBDF88];
    v7 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_21C2D80F4(v6, (uint64_t)sub_21C2D8ED0, v7);
    swift_release_n();
    v8 = *MEMORY[0x24BEBE010];
    v9 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_21C2D80F4(v8, (uint64_t)sub_21C2D8ED8, v9);
    swift_release_n();
    v10 = *MEMORY[0x24BEBDF98];
    v11 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_21C2D80F4(v10, (uint64_t)sub_21C2D8EE0, v11);
    swift_release_n();
    v12 = *MEMORY[0x24BEBE018];
    v13 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_21C2D80F4(v12, (uint64_t)sub_21C2D8EE8, v13);
    swift_release_n();
    return (uint64_t)v1;
  }
  return result;
}

void sub_21C2D7EDC(_QWORD *a1@<X8>)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v3 = objc_msgSend(v2, sel_applicationState);

  *a1 = v3;
}

uint64_t sub_21C2D7F44()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if ((*(_BYTE *)(result + 40) & 1) == 0)
    {
      *(_BYTE *)(result + 40) = 1;
      *(_QWORD *)(result + 32) = 2;
      sub_21C2D84A8(2);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_21C2D7FB4()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (*(_BYTE *)(result + 40) == 1)
    {
      *(_BYTE *)(result + 40) = 0;
      *(_QWORD *)(result + 32) = 1;
      sub_21C2D84A8(1);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_21C2D8024()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (*(_QWORD *)(result + 32))
    {
      *(_QWORD *)(result + 32) = 0;
      sub_21C2D84A8(0);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_21C2D8088()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (*(_QWORD *)(result + 32) != 3)
    {
      *(_QWORD *)(result + 32) = 3;
      sub_21C2D84A8(3);
    }
    return swift_release();
  }
  return result;
}

void sub_21C2D80F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  __int128 aBlock;
  uint64_t (*v16)(uint64_t);
  void *ObjectType;
  uint64_t v18;
  uint64_t v19;

  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v18 = a2;
  v19 = a3;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v16 = sub_21C2D829C;
  ObjectType = &block_descriptor;
  v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v7, sel_addObserverForName_object_queue_usingBlock_, a1, 0, 0, v8);
  _Block_release(v8);
  ObjectType = (void *)swift_getObjectType();
  *(_QWORD *)&aBlock = v9;
  v10 = (_QWORD *)(v3 + 16);
  swift_beginAccess();
  v11 = *(_QWORD **)(v3 + 16);
  swift_unknownObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = sub_21C333FC8(0, v11[2] + 1, 1, v11);
    *v10 = v11;
  }
  v14 = v11[2];
  v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    v11 = sub_21C333FC8((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
    *v10 = v11;
  }
  v11[2] = v14 + 1;
  sub_21C2D7828(&aBlock, &v11[4 * v14 + 4]);
  swift_endAccess();
  swift_unknownObjectRelease();

}

uint64_t sub_21C2D829C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_21C3A7494();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_21C3A7488();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_21C2D8340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD v7[4];

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (void *)objc_opt_self();
    v4 = v1 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_21C2D77EC(v4, (uint64_t)v7);
      v5 = objc_msgSend(v3, sel_defaultCenter);
      __swift_project_boxed_opaque_existential_1(v7, v7[3]);
      objc_msgSend(v5, sel_removeObserver_, sub_21C3A8640());

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t sub_21C2D8468()
{
  sub_21C2D8340();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIForegroundActiveArbiter()
{
  return objc_opt_self();
}

uint64_t sub_21C2D84A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  _QWORD *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  uint64_t v36;
  os_unfair_lock_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  v39 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8]();
  v40 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21C3A7614();
  v38 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (os_unfair_lock_t)(*(_QWORD *)(v1 + 48) + 16);
  os_unfair_lock_lock(v37);
  v42 = v1;
  v6 = objc_msgSend(*(id *)(v1 + 24), sel_keyEnumerator);
  sub_21C3A8190();

  sub_21C3A7608();
  if (!v50)
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_24;
  }
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v41 = v7;
    while (1)
    {
      sub_21C2D7828(&v49, &v44);
      sub_21C2D7704(0, (unint64_t *)&qword_25525AE20);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_5;
      v8 = v43;
      v9 = objc_msgSend(*(id *)(v42 + 24), sel_objectForKey_, v43);
      if (v9)
        break;
LABEL_4:

LABEL_5:
      sub_21C3A7608();
      if (!v50)
      {
        v7 = v41;
        goto LABEL_24;
      }
    }
    v10 = v9;
    swift_getObjectType();
    v11 = swift_conformsToProtocol2();
    if (v11)
      v12 = v11;
    else
      v12 = 0;
    if (v11)
      v13 = v10;
    else
      v13 = 0;
    if (!v13)
    {
      swift_unknownObjectRelease();
      goto LABEL_4;
    }
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_21C3340D4(0, v41[2] + 1, 1, v41);
    v15 = v41[2];
    v14 = v41[3];
    v16 = v15 + 1;
    v36 = v3;
    if (v15 >= v14 >> 1)
    {
      v19 = v15 + 1;
      v35 = v15;
      v20 = sub_21C3340D4((_QWORD *)(v14 > 1), v15 + 1, 1, v41);
      v16 = v19;
      v15 = v35;
      v41 = v20;
    }
    v17 = v41;
    v41[2] = v16;
    v18 = &v17[2 * v15];
    v18[4] = v13;
    v18[5] = v12;
    swift_unknownObjectRelease();

    sub_21C3A7608();
    v7 = v17;
    v3 = v36;
  }
  while (v50);
LABEL_24:
  (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v3);
  os_unfair_lock_unlock(v37);
  v21 = v7[2];
  if (v21)
  {
    v22 = sub_21C3A8118();
    v38 = *(_QWORD *)(v22 - 8);
    v37 = *(os_unfair_lock_t *)(v38 + 56);
    swift_bridgeObjectRetain();
    v23 = 32;
    v36 = MEMORY[0x24BEE4AE0] + 8;
    v24 = (uint64_t)v40;
    v41 = v7;
    v25 = v38;
    while (1)
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v37)(v24, 1, 1, v22);
      v26 = (_QWORD *)swift_allocObject();
      v26[2] = 0;
      v27 = v26 + 2;
      v28 = v39;
      v26[3] = 0;
      v26[4] = v28;
      v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v24, 1, v22);
      swift_unknownObjectRetain();
      swift_retain();
      if (v29 == 1)
      {
        sub_21C2D775C(v24, &qword_25525B2E0);
        if (!*v27)
          goto LABEL_32;
      }
      else
      {
        sub_21C3A810C();
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v22);
        if (!*v27)
        {
LABEL_32:
          v30 = 0;
          v32 = 0;
          goto LABEL_33;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v30 = sub_21C3A80D0();
      v32 = v31;
      swift_unknownObjectRelease();
LABEL_33:
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = &unk_25525B2F0;
      *(_QWORD *)(v33 + 24) = v26;
      if (v32 | v30)
      {
        v45 = 0;
        v46 = 0;
        v47 = v30;
        v48 = v32;
      }
      v24 = (uint64_t)v40;
      swift_task_create();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      v23 += 16;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_21C2D894C(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint8_t *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  BOOL *v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_sharedApplication);
  v11 = objc_msgSend(v10, sel_applicationState);

  if ((unint64_t)v11 >= 2)
  {
    v29 = a1;
    if (qword_25525AAD0 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v13, (uint64_t)v8);
    v14 = sub_21C3A79D4();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v8, 1, v14) == 1)
    {
      sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v27 = v1;
      v28 = v15;
      v17 = sub_21C3A79BC();
      v18 = sub_21C3A81D8();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_21C2CD000, v17, v18, "isForegroundAfterTransition, still in background", v19, 2u);
        MEMORY[0x22077AF8C](v19, -1, -1);
      }

      v15 = v28;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v14);
    }
    objc_msgSend((id)objc_opt_self(), sel_sleepForTimeInterval_, 0.05);
    sub_21C2D1D80(v13, (uint64_t)v6);
    if (v16(v6, 1, v14) == 1)
    {
      sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
      a1 = v29;
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81D8();
      v22 = os_log_type_enabled(v20, v21);
      a1 = v29;
      if (v22)
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v28 = v15;
        v24 = v23;
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "isForegroundAfterTransition, check again", v23, 2u);
        v15 = v28;
        MEMORY[0x22077AF8C](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
    }
    v25 = objc_msgSend(v9, sel_sharedApplication);
    v26 = objc_msgSend(v25, sel_applicationState);

    v12 = (unint64_t)v26 < 2;
  }
  else
  {
    v12 = 1;
  }
  *a1 = v12;
}

uint64_t sub_21C2D8C78(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21C2D8CDC;
  return v6(a1);
}

uint64_t sub_21C2D8CDC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C2D8D28()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C2D8D4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21C2D8DB8;
  return sub_21C34839C(a1, v4, v5, v6);
}

uint64_t sub_21C2D8DB8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C2D8E00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C2D8E24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21C2D8DB8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25525B2E8 + dword_25525B2E8))(a1, v4);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_21C2D8EAC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21C2D8ED0()
{
  return sub_21C2D7F44();
}

uint64_t sub_21C2D8ED8()
{
  return sub_21C2D7FB4();
}

uint64_t sub_21C2D8EE0()
{
  return sub_21C2D8024();
}

uint64_t sub_21C2D8EE8()
{
  return sub_21C2D8088();
}

uint64_t static VerificationReason.internalize(_:)(unsigned __int8 *a1)
{
  return *a1;
}

unint64_t VerificationReason.init(rawValue:)(unint64_t a1)
{
  return sub_21C2D9004(a1);
}

BOOL sub_21C2D8F14(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21C2D8F28()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t sub_21C2D8F6C()
{
  return sub_21C3A870C();
}

uint64_t sub_21C2D8F94()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C2D8FD4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_21C2D9004(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_21C2D9004(unint64_t result)
{
  if (result > 4)
    return 0;
  return result;
}

unint64_t sub_21C2D9018()
{
  unint64_t result;

  result = qword_25525B310;
  if (!qword_25525B310)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for VerificationReason, &type metadata for VerificationReason);
    atomic_store(result, (unint64_t *)&qword_25525B310);
  }
  return result;
}

ValueMetadata *type metadata accessor for VerificationReason()
{
  return &type metadata for VerificationReason;
}

uint64_t PaymentCardVerificationRequest.currencyCode.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void PaymentCardVerificationRequest.verificationReason.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t PaymentCardVerificationRequest.userInterfaceLanguage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PaymentCardVerificationRequest() + 24);
  return sub_21C2D9110(v3, a1);
}

uint64_t type metadata accessor for PaymentCardVerificationRequest()
{
  uint64_t result;

  result = qword_25525B378;
  if (!qword_25525B378)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C2D9110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PaymentCardVerificationRequest.userInterfaceLanguage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PaymentCardVerificationRequest() + 24);
  return sub_21C2D9188(a1, v3);
}

uint64_t sub_21C2D9188(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*PaymentCardVerificationRequest.userInterfaceLanguage.modify())()
{
  type metadata accessor for PaymentCardVerificationRequest();
  return nullsub_1;
}

BOOL static PaymentCardVerificationRequest.Reason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PaymentCardVerificationRequest.Reason.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t PaymentCardVerificationRequest.Reason.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t PaymentCardVerificationRequest.init(currencyCode:for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v7 = *a3;
  v8 = a4 + *(int *)(type metadata accessor for PaymentCardVerificationRequest() + 24);
  v9 = sub_21C3A7890();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = v7;
  return result;
}

unint64_t sub_21C2D92F0()
{
  unint64_t result;

  result = qword_25525B318;
  if (!qword_25525B318)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCardVerificationRequest.Reason, &type metadata for PaymentCardVerificationRequest.Reason);
    atomic_store(result, (unint64_t *)&qword_25525B318);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PaymentCardVerificationRequest(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = sub_21C3A7890();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for PaymentCardVerificationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21C3A7890();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for PaymentCardVerificationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_21C3A7890();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for PaymentCardVerificationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_21C3A7890();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for PaymentCardVerificationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_21C3A7890();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for PaymentCardVerificationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_21C3A7890();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaymentCardVerificationRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2D98A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PaymentCardVerificationRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2D9930(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_21C2D99A8()
{
  unint64_t v0;

  sub_21C2D9A24();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_21C2D9A24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25525B388[0])
  {
    sub_21C3A7890();
    v0 = sub_21C3A82EC();
    if (!v1)
      atomic_store(v0, qword_25525B388);
  }
}

uint64_t getEnumTagSinglePayload for PaymentCardVerificationRequest.Reason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PaymentCardVerificationRequest.Reason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21C2D9B54 + 4 * byte_21C3AA6E5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21C2D9B88 + 4 * asc_21C3AA6E0[v4]))();
}

uint64_t sub_21C2D9B88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D9B90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2D9B98);
  return result;
}

uint64_t sub_21C2D9BA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2D9BACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21C2D9BB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2D9BB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardVerificationRequest.Reason()
{
  return &type metadata for PaymentCardVerificationRequest.Reason;
}

uint64_t MerchantDetails.hostBundleId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MerchantDetails.mcc.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t MerchantDetails.mbn.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MerchantDetails.mbnSubtext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MerchantDetails.customerLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MerchantDetails() + 32);
  return sub_21C2D9CCC(v3, a1);
}

uint64_t type metadata accessor for MerchantDetails()
{
  uint64_t result;

  result = qword_25525B448;
  if (!qword_25525B448)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C2D9CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MerchantDetails.init(bundleId:mcc:mbn:mbnSubtext:customerLocale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v10;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  v10 = (uint64_t)a9 + *(int *)(type metadata accessor for MerchantDetails() + 32);
  return sub_21C2D9D58(a8, v10);
}

uint64_t sub_21C2D9D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2D9DA0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C2D9DD8 + 4 * byte_21C3AA7D8[*v0]))(0x646E754274736F68, 0xEC0000006449656CLL);
}

uint64_t sub_21C2D9DD8()
{
  return 6513517;
}

uint64_t sub_21C2D9DE8()
{
  return 7234157;
}

uint64_t sub_21C2D9DF8()
{
  return 0x65746275536E626DLL;
}

uint64_t sub_21C2D9E14()
{
  return 0x72656D6F74737563;
}

uint64_t sub_21C2D9E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2DAE74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2D9E5C()
{
  sub_21C2DA070();
  return sub_21C3A8754();
}

uint64_t sub_21C2D9E84()
{
  sub_21C2DA070();
  return sub_21C3A8760();
}

uint64_t MerchantDetails.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2DA070();
  sub_21C3A8748();
  v8[15] = 0;
  sub_21C3A85E0();
  if (!v1)
  {
    v8[14] = 1;
    sub_21C3A8604();
    v8[13] = 2;
    sub_21C3A85E0();
    v8[12] = 3;
    sub_21C3A85B0();
    type metadata accessor for MerchantDetails();
    v8[11] = 4;
    sub_21C3A78A8();
    sub_21C2DA3C4(&qword_25525B3D8, MEMORY[0x24BDCEEC8]);
    sub_21C3A85D4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_21C2DA070()
{
  unint64_t result;

  result = qword_25525B3D0;
  if (!qword_25525B3D0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA954, &type metadata for MerchantDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B3D0);
  }
  return result;
}

uint64_t MerchantDetails.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
  MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3E0);
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MerchantDetails();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2DA070();
  v11 = (uint64_t)v22;
  sub_21C3A873C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = a1;
  v12 = v5;
  v27 = 0;
  v13 = v21;
  *v10 = sub_21C3A855C();
  v10[1] = v14;
  v26 = 1;
  v10[2] = sub_21C3A8580();
  v25 = 2;
  v10[3] = sub_21C3A855C();
  v10[4] = v15;
  v24 = 3;
  v10[5] = sub_21C3A852C();
  v10[6] = v16;
  sub_21C3A78A8();
  v23 = 4;
  sub_21C2DA3C4(&qword_25525B3E8, MEMORY[0x24BDCEEE8]);
  v17 = (uint64_t)v20;
  sub_21C3A8550();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v13);
  sub_21C2D9D58(v17, (uint64_t)v10 + *(int *)(v8 + 32));
  sub_21C2DA404((uint64_t)v10, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_21C2DA448((uint64_t)v10);
}

uint64_t sub_21C2DA3C4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_21C3A78A8();
    result = MEMORY[0x22077AECC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C2DA404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MerchantDetails();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2DA448(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MerchantDetails();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C2DA484@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MerchantDetails.init(from:)(a1, a2);
}

uint64_t sub_21C2DA498(_QWORD *a1)
{
  return MerchantDetails.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for MerchantDetails(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v6 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v6;
    v7 = *(int *)(a3 + 32);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    *(_QWORD *)(a1 + 48) = a2[6];
    v10 = sub_21C3A78A8();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for MerchantDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_21C3A78A8();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for MerchantDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = sub_21C3A78A8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithCopy for MerchantDetails(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C3A78A8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for MerchantDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_21C3A78A8();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for MerchantDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 32);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_21C3A78A8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MerchantDetails()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2DAAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MerchantDetails()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2DAB78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B3C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_21C2DABF0()
{
  unint64_t v0;

  sub_21C2DAC7C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_21C2DAC7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25525B458[0])
  {
    sub_21C3A78A8();
    v0 = sub_21C3A82EC();
    if (!v1)
      atomic_store(v0, qword_25525B458);
  }
}

uint64_t storeEnumTagSinglePayload for MerchantDetails.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21C2DAD1C + 4 * byte_21C3AA7E2[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21C2DAD50 + 4 * byte_21C3AA7DD[v4]))();
}

uint64_t sub_21C2DAD50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2DAD58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2DAD60);
  return result;
}

uint64_t sub_21C2DAD6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2DAD74);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21C2DAD78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2DAD80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MerchantDetails.CodingKeys()
{
  return &type metadata for MerchantDetails.CodingKeys;
}

unint64_t sub_21C2DADA0()
{
  unint64_t result;

  result = qword_25525B498;
  if (!qword_25525B498)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA92C, &type metadata for MerchantDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B498);
  }
  return result;
}

unint64_t sub_21C2DADE8()
{
  unint64_t result;

  result = qword_25525B4A0;
  if (!qword_25525B4A0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA89C, &type metadata for MerchantDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B4A0);
  }
  return result;
}

unint64_t sub_21C2DAE30()
{
  unint64_t result;

  result = qword_25525B4A8;
  if (!qword_25525B4A8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AA8C4, &type metadata for MerchantDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B4A8);
  }
  return result;
}

uint64_t sub_21C2DAE74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646E754274736F68 && a2 == 0xEC0000006449656CLL;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6513517 && a2 == 0xE300000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7234157 && a2 == 0xE300000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65746275536E626DLL && a2 == 0xEA00000000007478 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72656D6F74737563 && a2 == 0xEE00656C61636F4CLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t PaymentCardReaderError.init(_:)@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;

  v4 = type metadata accessor for PaymentCardReaderError();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v31 - v8);
  switch(*(_QWORD *)&a1[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_code])
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 0xALL:
    case 0xBLL:
    case 0xCLL:
    case 0xELL:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x18:
    case 0x19:

      return swift_storeEnumTagMultiPayload();
    case 7:
      v10 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo];
      if (v10)
      {
        if (*(_QWORD *)(v10 + 16) && (v11 = sub_21C2DC178(0x746544726F727265, 0xEC000000736C6961), (v12 & 1) != 0))
        {
          sub_21C2D77EC(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&v33);

          if (*((_QWORD *)&v34 + 1))
          {
            v13 = swift_dynamicCast();
            v14 = v31;
            v15 = v32;
            if (!v13)
            {
              v14 = 0;
              v15 = 0;
            }
LABEL_36:
            *v9 = v14;
            v9[1] = v15;
            swift_storeEnumTagMultiPayload();
            v29 = (uint64_t)v9;
            return sub_21C2DB768(v29, (uint64_t)a2);
          }
        }
        else
        {
          v33 = 0u;
          v34 = 0u;

        }
      }
      else
      {

        v33 = 0u;
        v34 = 0u;
      }
      sub_21C2D775C((uint64_t)&v33, &qword_25525B110);
      v14 = 0;
      v15 = 0;
      goto LABEL_36;
    case 9:
      v16 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo];
      if (!v16)
      {

        v33 = 0u;
        v34 = 0u;
        goto LABEL_38;
      }
      if (!*(_QWORD *)(v16 + 16) || (v17 = sub_21C2DC178(0xD000000000000019, 0x800000021C3B9250), (v18 & 1) == 0))
      {
        v33 = 0u;
        v34 = 0u;

        goto LABEL_38;
      }
      sub_21C2D77EC(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v33);

      if (!*((_QWORD *)&v34 + 1))
      {
LABEL_38:
        sub_21C2D775C((uint64_t)&v33, &qword_25525B110);
        goto LABEL_39;
      }
      if ((swift_dynamicCast() & 1) != 0)
      {
        v19 = v32;
        *a2 = v31;
        a2[1] = v19;
        return swift_storeEnumTagMultiPayload();
      }
LABEL_39:
      *a2 = 0;
      a2[1] = 0;
      return swift_storeEnumTagMultiPayload();
    case 0xDLL:

      *a2 = 0xD00000000000001CLL;
      a2[1] = 0x800000021C3B9210;
      return swift_storeEnumTagMultiPayload();
    case 0xFLL:
      v20 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo];
      if (v20
        && *(_QWORD *)(v20 + 16)
        && (v21 = sub_21C2DC178(0xD000000000000011, 0x800000021C3B9230), (v22 & 1) != 0)
        && (sub_21C2D77EC(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&v33), (swift_dynamicCast() & 1) != 0))
      {
        sub_21C3A7788();

        v23 = sub_21C3A77B8();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 0, 1, v23);
      }
      else
      {

        v28 = sub_21C3A77B8();
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a2, 1, 1, v28);
      }
      return swift_storeEnumTagMultiPayload();
    case 0x17:

      return swift_storeEnumTagMultiPayload();
    case 0x1ALL:
    case 0x1BLL:
    case 0x1CLL:
    case 0x1DLL:
    case 0x1ELL:
    case 0x1FLL:

      *a2 = 1;
      return swift_storeEnumTagMultiPayload();
    case 0x20:
      v24 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo];
      if (v24)
      {
        if (*(_QWORD *)(v24 + 16) && (v25 = sub_21C2DC178(0xD000000000000010, 0x800000021C3B91F0), (v26 & 1) != 0))
        {
          sub_21C2D77EC(*(_QWORD *)(v24 + 56) + 32 * v25, (uint64_t)&v33);

          if (*((_QWORD *)&v34 + 1))
          {
            if (swift_dynamicCast())
            {
              v27 = v31;
              goto LABEL_44;
            }
LABEL_43:
            v27 = 1;
LABEL_44:
            *v7 = v27;
            swift_storeEnumTagMultiPayload();
            v29 = (uint64_t)v7;
            return sub_21C2DB768(v29, (uint64_t)a2);
          }
        }
        else
        {
          v33 = 0u;
          v34 = 0u;

        }
      }
      else
      {

        v33 = 0u;
        v34 = 0u;
      }
      sub_21C2D775C((uint64_t)&v33, &qword_25525B110);
      goto LABEL_43;
    default:
      *(_QWORD *)&v33 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_code];
      result = sub_21C3A8670();
      __break(1u);
      return result;
  }
}

uint64_t type metadata accessor for PaymentCardReaderError()
{
  uint64_t result;

  result = qword_25525B520;
  if (!qword_25525B520)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C2DB768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PaymentCardReaderError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void PaymentCardReaderError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[6];

  v1 = sub_21C3A7920();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_21C3A77B8();
  MEMORY[0x24BDAC7A8](v2);
  v9[2] = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for PaymentCardReaderError();
  MEMORY[0x24BDAC7A8](v6);
  sub_21C2DC1DC(v0, (uint64_t)v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (char *)&loc_21C2DB910 + *((int *)qword_21C2DBD28 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

unint64_t sub_21C2DB920()
{
  _QWORD *v0;

  if (v0[1])
    return *v0;
  else
    return 0xD000000000000038;
}

void PaymentCardReaderError.errorName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for PaymentCardReaderError();
  MEMORY[0x24BDAC7A8](v1);
  sub_21C2DC1DC(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_21C2DBE30 + 4 * byte_21C3AA9F2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_21C2DBE30()
{
  uint64_t v0;

  sub_21C2DC2B0(v0);
  return 0xD000000000000012;
}

void sub_21C2DC10C()
{
  JUMPOUT(0x21C2DC0F8);
}

unint64_t sub_21C2DC140(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C3A86F4();
  return sub_21C2DCBD4(a1, v2);
}

unint64_t sub_21C2DC178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21C3A8700();
  sub_21C3A7F50();
  v4 = sub_21C3A8724();
  return sub_21C2DCAF4(a1, a2, v4);
}

uint64_t sub_21C2DC1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PaymentCardReaderError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2DC220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2DC268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2DC2B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PaymentCardReaderError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PaymentCardReaderError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  unsigned int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = sub_21C3A77B8();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for PaymentCardReaderError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = sub_21C3A77B8();
    v4 = *(_QWORD *)(v3 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  else if (result <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for PaymentCardReaderError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = sub_21C3A77B8();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload <= 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for PaymentCardReaderError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_21C2DC2B0((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v7 = sub_21C3A77B8();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    }
    if (EnumCaseMultiPayload <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *initializeWithTake for PaymentCardReaderError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_21C3A77B8();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PaymentCardReaderError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_21C2DC2B0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_21C3A77B8();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PaymentCardReaderError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PaymentCardReaderError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_21C2DC964()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_21C2DC974()
{
  unint64_t v0;

  sub_21C2DC9F0();
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

void sub_21C2DC9F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25525B530)
  {
    sub_21C3A77B8();
    v0 = sub_21C3A82EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25525B530);
  }
}

unint64_t sub_21C2DCA44(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C3A83AC();
  return sub_21C2DCC70(a1, v2);
}

unint64_t sub_21C2DCA74(uint64_t a1)
{
  uint64_t v2;

  sub_21C3A7ED8();
  sub_21C3A8700();
  sub_21C3A7F50();
  v2 = sub_21C3A8724();
  swift_bridgeObjectRelease();
  return sub_21C2DCD34(a1, v2);
}

unint64_t sub_21C2DCAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_21C3A864C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_21C3A864C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_21C2DCBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_21C2DCC70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_21C2DCEA8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x22077A59C](v9, a1);
      sub_21C2DCEE4((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_21C2DCD34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_21C3A7ED8();
    v8 = v7;
    if (v6 == sub_21C3A7ED8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_21C3A7ED8();
          v15 = v14;
          if (v13 == sub_21C3A7ED8() && v15 == v16)
            break;
          v18 = sub_21C3A864C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_21C2DCEA8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_21C2DCEE4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

BOOL sub_21C2DCF18()
{
  _BOOL8 result;

  result = sub_21C2DCF38();
  byte_25525B560 = result;
  return result;
}

BOOL sub_21C2DCF38()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = _s15ProximityReader9UtilitiesC17isDeviceSupportedSbyFZ_0();
  if (qword_25525AAD0 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v4, (uint64_t)v2);
  v5 = sub_21C3A79D4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) == 1)
  {
    sub_21C2D775C((uint64_t)v2, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v7 = sub_21C3A79BC();
    v8 = sub_21C3A81D8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v15 = v10;
      *(_DWORD *)v9 = 136315394;
      v14 = type metadata accessor for PaymentCardReader();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525B778);
      v11 = sub_21C3A7F14();
      v14 = sub_21C350398(v11, v12, &v15);
      sub_21C3A82F8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 1024;
      LODWORD(v14) = v3;
      sub_21C3A82F8();
      _os_log_impl(&dword_21C2CD000, v7, v8, "%s - isSupported result: %{BOOL}d", (uint8_t *)v9, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v10, -1, -1);
      MEMORY[0x22077AF8C](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
  }
  return v3;
}

uint64_t static PaymentCardReader.isSupported.getter()
{
  if (qword_25525AA70 != -1)
    swift_once();
  return byte_25525B560;
}

uint64_t PaymentCardReader.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaymentCardReader.events.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_events;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PaymentCardReader.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_options + 8);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_options + 9);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_options);
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t PaymentCardReader.Event.name.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C2DD298 + 4
                                                                                      * byte_21C3AAB10[*(_QWORD *)v0]))(0x7964616552746F6ELL, 0xE800000000000000);
  else
    return 0x7250657461647075;
}

uint64_t sub_21C2DD298()
{
  return 0x726F467964616572;
}

uint64_t sub_21C2DD2DC()
{
  return 0x6574654464726163;
}

uint64_t sub_21C2DD2FC()
{
  return 0x614365766F6D6572;
}

uint64_t sub_21C2DD318()
{
  return 0x706D6F4364616572;
}

uint64_t sub_21C2DD33C()
{
  return 0x7274655264616572;
}

uint64_t sub_21C2DD358()
{
  return 0x636E614364616572;
}

unint64_t sub_21C2DD37C()
{
  return 0xD000000000000010;
}

uint64_t PaymentCardReader.UpdateEvent.name.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8))
    return 0x7964616552746F6ELL;
  else
    return 0x73736572676F7270;
}

uint64_t PaymentCardReader.Options.vasMerchants.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PaymentCardReader.Options.vasMerchants.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PaymentCardReader.Options.vasMerchants.modify())()
{
  return nullsub_1;
}

uint64_t PaymentCardReader.Options.returnReadResultImmediately.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t PaymentCardReader.Options.returnReadResultImmediately.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*PaymentCardReader.Options.returnReadResultImmediately.modify())()
{
  return nullsub_1;
}

uint64_t PaymentCardReader.Options.includeErrorInReadResult.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t PaymentCardReader.Options.includeErrorInReadResult.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*PaymentCardReader.Options.includeErrorInReadResult.modify())()
{
  return nullsub_1;
}

ProximityReader::PaymentCardReader::Options __swiftcall PaymentCardReader.Options.init()()
{
  uint64_t v0;
  ProximityReader::PaymentCardReader::Options result;

  *(_QWORD *)v0 = MEMORY[0x24BEE4AF8];
  *(_WORD *)(v0 + 8) = 0;
  return result;
}

ProximityReader::PaymentCardReader::Options __swiftcall PaymentCardReader.Options.init(vasMerchants:)(Swift::OpaquePointer vasMerchants)
{
  uint64_t v1;
  ProximityReader::PaymentCardReader::Options result;

  *(Swift::OpaquePointer *)v1 = vasMerchants;
  *(_WORD *)(v1 + 8) = 0;
  result.vasMerchants = vasMerchants;
  return result;
}

uint64_t PaymentCardReader.Token.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ProximityReader::PaymentCardReader::Token __swiftcall PaymentCardReader.Token.init(rawValue:)(ProximityReader::PaymentCardReader::Token rawValue)
{
  ProximityReader::PaymentCardReader::Token *v1;

  *v1 = rawValue;
  return rawValue;
}

_QWORD *sub_21C2DD4E4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t PaymentCardReader.__allocating_init(options:)(uint64_t *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PaymentCardReader.init(options:)(a1);
  return v2;
}

uint64_t PaymentCardReader.init(options:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v36);
  v37 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B570);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B568);
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21C3A77E8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = *((_BYTE *)a1 + 8);
  v14 = *((_BYTE *)a1 + 9);
  sub_21C3A77DC();
  v15 = sub_21C3A77C4();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v11, v8);
  *(_QWORD *)(v2 + 16) = v15;
  *(_QWORD *)(v2 + 24) = v17;
  v19 = v2 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_options;
  *(_QWORD *)v19 = v12;
  *(_BYTE *)(v19 + 8) = v13;
  *(_BYTE *)(v19 + 9) = v14;
  sub_21C3A77DC();
  v20 = sub_21C3A77C4();
  v22 = v21;
  v18(v11, v8);
  v38 = v20;
  v39 = v22;
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v31, *MEMORY[0x24BEE6A10], v34);
  sub_21C3A8154();
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v2 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_events, v7, v35);
  v23 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_uuid);
  *v23 = v20;
  v23[1] = v22;
  if (qword_25525AAD0 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v36, (uint64_t)qword_255278F48);
  v25 = v37;
  sub_21C2D1D80(v24, v37);
  v26 = sub_21C3A79D4();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_21C2D775C(v25, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v28 = swift_retain();
    sub_21C365870(v28, 0x74706F2874696E69, 0xEE00293A736E6F69, 0, 0xE000000000000000);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  return v2;
}

uint64_t sub_21C2DD830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = (char *)swift_allocObject();
  *((_QWORD *)v15 + 2) = 0;
  *((_QWORD *)v15 + 3) = 0;
  *((_QWORD *)v15 + 4) = a2;
  *((_QWORD *)v15 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v15[v14], v9, v6);
  swift_bridgeObjectRetain();
  sub_21C2DDA54((uint64_t)v12, (uint64_t)&unk_25525B768, (uint64_t)v15);
  swift_release();
  return sub_21C3A8124();
}

uint64_t sub_21C2DD998(uint64_t a1)
{
  uint64_t v1;

  return sub_21C2DD830(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_21C2DD9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_21C2DD9BC()
{
  uint64_t v0;

  if (qword_25525AAB0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = qword_255278F10;
  return swift_task_switch();
}

uint64_t sub_21C2DDA20()
{
  uint64_t v0;

  sub_21C338F30(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2DDA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_21C3A8118();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21C3A810C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_21C2D775C(a1, &qword_25525B2E0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21C3A80D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_21C2DDBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_21C3A8118();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21C3A810C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_21C2D775C(a1, &qword_25525B2E0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21C3A80D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B750);
  return swift_task_create();
}

uint64_t sub_21C2DDCF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B770);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  v9 = *MEMORY[0x24BEE69B8];
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((_DWORD)a1 == v9)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v11 = __swift_project_value_buffer(v2, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v11, (uint64_t)v4);
    v12 = sub_21C3A79D4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) == 1)
    {
      return sub_21C2D775C((uint64_t)v4, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v14 = sub_21C3A79BC();
      v15 = sub_21C3A81C0();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_21C2CD000, v14, v15, "User cancelled", v16, 2u);
        MEMORY[0x22077AF8C](v16, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v4, v12);
    }
  }
  return result;
}

uint64_t PaymentCardReader.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  if (qword_25525AAD0 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v5, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v11, (uint64_t)v10);
  v12 = sub_21C3A79D4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_21C2D775C((uint64_t)v10, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v1, 0x74696E696564, 0xE600000000000000, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  sub_21C2D1D80(v11, (uint64_t)v8);
  if (v14(v8, 1, v12) == 1)
  {
    sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v15 = sub_21C3A79BC();
    v16 = sub_21C3A81D8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_21C2CD000, v15, v16, "PaymentCardReader destroyed", v17, 2u);
      MEMORY[0x22077AF8C](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_uuid);
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_uuid + 8);
  v20 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = 0;
  v21[3] = 0;
  v21[4] = v19;
  v21[5] = v18;
  swift_bridgeObjectRetain();
  sub_21C2DDA54((uint64_t)v4, (uint64_t)&unk_25525B588, (uint64_t)v21);
  swift_release();
  swift_bridgeObjectRelease();
  v22 = v1 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_events;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B568);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21C2DE1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_21C2DE1FC()
{
  uint64_t *v0;
  _QWORD *v1;

  if (qword_25525AAB0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21C2DE278;
  return sub_21C339134(v0[2], v0[3]);
}

uint64_t sub_21C2DE278()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t PaymentCardReader.__deallocating_deinit()
{
  PaymentCardReader.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21C2DE2E4(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[4] = v1;
  v2[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v4 = swift_task_alloc();
  v5 = *a1;
  v6 = a1[1];
  v2[6] = v4;
  v2[7] = v5;
  v2[8] = v6;
  return swift_task_switch();
}

uint64_t sub_21C2DE350()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[6];
  v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[6];
  if (v5 == 1)
  {
    sub_21C2D775C(v0[6], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[4], 0xD000000000000017, 0x800000021C3B9D10, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AAB0 != -1)
    swift_once();
  v7 = v0[8];
  v0[2] = v0[7];
  v0[3] = v7;
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_21C2DE49C;
  return sub_21C33BB08(v0 + 2);
}

uint64_t sub_21C2DE49C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v4 + 8))(a1 & 1);
}

uint64_t sub_21C2DE524()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21C2DE55C(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[4] = v1;
  v2[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v4 = swift_task_alloc();
  v5 = *a1;
  v6 = a1[1];
  v2[6] = v4;
  v2[7] = v5;
  v2[8] = v6;
  return swift_task_switch();
}

uint64_t sub_21C2DE5C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[6];
  v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[6];
  if (v5 == 1)
  {
    sub_21C2D775C(v0[6], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[4], 0xD000000000000013, 0x800000021C3B9D30, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AAB0 != -1)
    swift_once();
  v7 = v0[8];
  v0[2] = v0[7];
  v0[3] = v7;
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_21C2DE718;
  return sub_21C33C430(v0 + 2, 0);
}

uint64_t sub_21C2DE718()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C2DE78C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2DE7C0(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[4] = v1;
  v2[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v4 = swift_task_alloc();
  v5 = *a1;
  v6 = a1[1];
  v2[6] = v4;
  v2[7] = v5;
  v2[8] = v6;
  return swift_task_switch();
}

uint64_t sub_21C2DE82C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[6];
  v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[6];
  if (v5 == 1)
  {
    sub_21C2D775C(v0[6], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[4], 0xD000000000000015, 0x800000021C3B9D50, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AAB0 != -1)
    swift_once();
  v7 = v0[8];
  v0[2] = v0[7];
  v0[3] = v7;
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_21C2DE97C;
  return sub_21C33C430(v0 + 2, 1);
}

uint64_t sub_21C2DE97C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C2DE9F0(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = v1;
  *(_QWORD *)(v2 + 40) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_OWORD *)(v2 + 56) = *a1;
  return swift_task_switch();
}

uint64_t sub_21C2DEA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 48);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 40), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 48);
  if (v5 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 48), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 32), 0x6628737574617473, 0xEC000000293A726FLL, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AAB0 != -1)
    swift_once();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  *v7 = v0;
  v7[1] = sub_21C2DEBA8;
  return sub_21C340A94((_OWORD *)(v0 + 16));
}

uint64_t sub_21C2DEBA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_21C2DEC30()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C2DEC90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[4];
  v2 = __swift_project_value_buffer(v0[3], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[4];
  if (v5 == 1)
  {
    sub_21C2D775C(v0[4], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[2], 0x29287465736572, 0xE700000000000000, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AAB0 != -1)
    swift_once();
  v0[5] = qword_255278F10;
  return swift_task_switch();
}

uint64_t sub_21C2DEDB4()
{
  uint64_t v0;

  sub_21C33A440(1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2DEDF0()
{
  return swift_task_switch();
}

uint64_t sub_21C2DEE04()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_25525AAB0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21C2DEE78;
  return sub_21C33AA84();
}

uint64_t sub_21C2DEE78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_21C2DEEDC(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[6] = v1;
  v2[7] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v4 = swift_task_alloc();
  v5 = *a1;
  v6 = a1[1];
  v2[8] = v4;
  v2[9] = v5;
  v2[10] = v6;
  return swift_task_switch();
}

uint64_t sub_21C2DEF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 56), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 64);
  if (v5 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 64), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 48), 0x2865726170657270, 0xEF293A676E697375, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AAB0 != -1)
    swift_once();
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 24) = v7;
  v9 = v8 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_options;
  v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_options);
  *(_QWORD *)(v0 + 88) = v10;
  v11 = *(_BYTE *)(v9 + 8);
  LOBYTE(v9) = *(_BYTE *)(v9 + 9);
  *(_QWORD *)(v0 + 32) = v10;
  *(_BYTE *)(v0 + 40) = v11;
  *(_BYTE *)(v0 + 41) = v9;
  swift_bridgeObjectRetain();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v12;
  *v12 = v0;
  v12[1] = sub_21C2DF0D8;
  return sub_21C33D660((uint64_t *)(v0 + 16), (uint64_t *)(v0 + 32));
}

uint64_t sub_21C2DF0D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 104) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_21C2DF168()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2DF19C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[7] = a3;
  v4[8] = v3;
  v4[6] = a2;
  v4[9] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v6 = swift_task_alloc();
  v7 = *a1;
  v8 = a1[1];
  v4[10] = v6;
  v4[11] = v7;
  v4[12] = v8;
  return swift_task_switch();
}

uint64_t sub_21C2DF20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 72), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 80);
  if (v5 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 80), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 64), 0xD00000000000001DLL, 0x800000021C3B9D70, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if (qword_25525AAB0 != -1)
    swift_once();
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 24) = v7;
  v9 = v8 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_options;
  v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtC15ProximityReader17PaymentCardReader_options);
  *(_QWORD *)(v0 + 104) = v10;
  v11 = *(_BYTE *)(v9 + 8);
  LOBYTE(v9) = *(_BYTE *)(v9 + 9);
  *(_QWORD *)(v0 + 32) = v10;
  *(_BYTE *)(v0 + 40) = v11;
  *(_BYTE *)(v0 + 41) = v9;
  swift_bridgeObjectRetain();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v12;
  *v12 = v0;
  v12[1] = sub_21C2DF398;
  return sub_21C33CEC0((uint64_t *)(v0 + 16), (uint64_t *)(v0 + 32), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_21C2DF398(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 120) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_21C2DF428()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2DF45C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_21C2DF4C4;
  return v5(v2 + 32);
}

uint64_t sub_21C2DF4C4()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_21C2DF514()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C2DF540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_21C2DFEDC;
  v4[2] = v2;
  v4[3] = v3;
  return swift_task_switch();
}

unint64_t sub_21C2DF5A4()
{
  unint64_t result;

  result = qword_25525B5D0;
  if (!qword_25525B5D0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCardReader.Token, &type metadata for PaymentCardReader.Token);
    atomic_store(result, (unint64_t *)&qword_25525B5D0);
  }
  return result;
}

uint64_t sub_21C2DF5E8()
{
  return type metadata accessor for PaymentCardReader();
}

uint64_t type metadata accessor for PaymentCardReader()
{
  uint64_t result;

  result = qword_25525B600;
  if (!qword_25525B600)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21C2DF62C()
{
  unint64_t v0;

  sub_21C2DFA94();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for PaymentCardReader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PaymentCardReader.__allocating_init(options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of PaymentCardReader.isAccountLinked(using:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 144) + *(_QWORD *)(*(_QWORD *)v1 + 144));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21C2DF728;
  return v6(a1);
}

uint64_t sub_21C2DF728(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of PaymentCardReader.linkAccount(using:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 152) + *(_QWORD *)(*(_QWORD *)v1 + 152));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21C2D8DB8;
  return v6(a1);
}

uint64_t dispatch thunk of PaymentCardReader.relinkAccount(using:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 160) + *(_QWORD *)(*(_QWORD *)v1 + 160));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21C2DFEDC;
  return v6(a1);
}

uint64_t dispatch thunk of PaymentCardReader.status(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 168) + *(_QWORD *)(*(_QWORD *)v1 + 168));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21C2DF728;
  return v6(a1);
}

uint64_t dispatch thunk of PaymentCardReader.reset()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 176) + *(_QWORD *)(*(_QWORD *)v0 + 176));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21C2D8DB8;
  return v4();
}

uint64_t dispatch thunk of PaymentCardReader.readerIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 184) + *(_QWORD *)(*(_QWORD *)v0 + 184));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21C2DF954;
  return v4();
}

uint64_t sub_21C2DF954(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of PaymentCardReader.prepare(using:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 192) + *(_QWORD *)(*(_QWORD *)v1 + 192));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21C2DFEF8;
  return v6(a1);
}

uint64_t dispatch thunk of PaymentCardReader.prepare(using:updateHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 200)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 200));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_21C2DFEF8;
  return v10(a1, a2, a3);
}

void sub_21C2DFA94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25525B650)
  {
    v0 = sub_21C3A8148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25525B650);
  }
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardReader.Event()
{
  return &type metadata for PaymentCardReader.Event;
}

uint64_t getEnumTagSinglePayload for PaymentCardReader.UpdateEvent(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PaymentCardReader.UpdateEvent(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_21C2DFB5C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_21C2DFB78(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardReader.UpdateEvent()
{
  return &type metadata for PaymentCardReader.UpdateEvent;
}

uint64_t destroy for PaymentCardReader.Options()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s15ProximityReader17PaymentCardReaderC7OptionsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaymentCardReader.Options(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for PaymentCardReader.Options(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaymentCardReader.Options(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 10))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaymentCardReader.Options(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 10) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardReader.Options()
{
  return &type metadata for PaymentCardReader.Options;
}

ValueMetadata *type metadata accessor for PaymentCardReader.Token()
{
  return &type metadata for PaymentCardReader.Token;
}

uint64_t sub_21C2DFD3C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C2DFD60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21C2DFEDC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25525B740 + dword_25525B740))(a1, v4);
}

uint64_t sub_21C2DFDD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21C2DFE50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525B758) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = v0 + ((v2 + 48) & ~v2);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_21C2DFEDC;
  v6[3] = v4;
  v6[4] = v5;
  v6[2] = v3;
  return swift_task_switch();
}

uint64_t MobileDriversLicenseDataResponseInternal.documentElements.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C2ED3E0(v1 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_documentElements, a1, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
}

uint64_t type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(uint64_t a1)
{
  return sub_21C2ED554(a1, (uint64_t *)&unk_25525BBD8);
}

uint64_t MobileDriversLicenseDataResponseInternal.issuer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_issuer);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21C2DFF74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  char isUniquelyReferenced_nonNull_native;
  int64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  int64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  int64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  int64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  int *v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  char v139;
  uint64_t v140;
  int *v141;
  _QWORD *v142;
  unint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  int *v188;
  uint64_t v189;
  uint64_t *v190;
  int64_t v191;
  _QWORD *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;

  v177 = a1;
  v2 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v202 = *(_QWORD *)(v2 - 8);
  v203 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v190 = (uint64_t *)((char *)&v157 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B948);
  MEMORY[0x24BDAC7A8](v4);
  v204 = (char *)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB0);
  MEMORY[0x24BDAC7A8](v6);
  v212 = (uint64_t *)((char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v211 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(0);
  v158 = *(_QWORD *)(v211 - 8);
  MEMORY[0x24BDAC7A8](v211);
  v213 = (char *)&v157 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);
  v200 = *(_QWORD *)(v9 - 8);
  v201 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v210 = (uint64_t)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(0);
  v11 = *(_QWORD *)(v199 - 8);
  MEMORY[0x24BDAC7A8](v199);
  v13 = (uint64_t *)((char *)&v157 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege();
  v197 = *(_QWORD *)(v14 - 8);
  v198 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v209 = (uint64_t *)((char *)&v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v16);
  v176 = (uint64_t)&v157 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v175 = (uint64_t)&v157 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v194 = (char *)&v157 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v193 = (char *)&v157 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v157 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v157 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements();
  MEMORY[0x24BDAC7A8](v174);
  v173 = (uint64_t)&v157 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v1 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_documentElements;
  v171 = v29;
  sub_21C2F50EC(v1 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_documentElements, (uint64_t)v29, &qword_25525BA10);
  v32 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  v33 = v32[6];
  v34 = (uint64_t *)(v31 + v32[5]);
  v36 = *v34;
  v35 = v34[1];
  v185 = v36;
  v186 = v35;
  v187 = *(_QWORD *)(v31 + v33);
  v37 = v32[8];
  v38 = (uint64_t *)(v31 + v32[7]);
  v166 = *v38;
  v167 = *((unsigned __int8 *)v38 + 8);
  v172 = v26;
  sub_21C2F50EC(v31 + v37, (uint64_t)v26, &qword_25525B8A0);
  v178 = 0;
  v179 = 0;
  v180 = 0;
  v181 = 0;
  v182 = 0;
  v184 = 0;
  v39 = 0;
  v40 = 0;
  v41 = 0;
  v188 = v32;
  v42 = v32[10];
  v165 = *(unsigned __int8 *)(v31 + v32[9]);
  v189 = v31;
  v43 = (uint64_t *)(v31 + v42);
  v183 = *(_QWORD *)(v31 + v42 + 8);
  if (v183 != 1)
  {
    v40 = v43[8];
    v41 = v43[9];
    v39 = v43[7];
    v184 = v43[6];
    v44 = v43[5];
    v181 = v43[4];
    v45 = v43[3];
    v179 = v43[2];
    v178 = *v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v180 = v45;
    swift_bridgeObjectRetain();
    v182 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v168 = v39;
  v169 = v40;
  v46 = (uint64_t *)(v189 + v188[11]);
  v164 = v46[1];
  if (v164 == 1)
  {
    v159 = 0;
    v160 = 0;
    v161 = 0;
    v162 = 0;
    v163 = 0;
  }
  else
  {
    v47 = v46[5];
    v162 = v46[4];
    v48 = v46[3];
    v160 = v46[2];
    v159 = *v46;
    v163 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v161 = v48;
    swift_bridgeObjectRetain();
  }
  v49 = (uint64_t)v213;
  v50 = (uint64_t)v194;
  v51 = (uint64_t)v193;
  v52 = *(_QWORD *)(v189 + v188[12]);
  v53 = *(_QWORD *)(v52 + 16);
  v170 = v41;
  if (v53)
  {
    v54 = MEMORY[0x24BEE4AF8];
    sub_21C2D1E80(v185, v186);
    v217 = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21C31E138(0, v53, 0);
    v55 = 0;
    v56 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v157 = v52;
    v196 = v52 + v56;
    v195 = *(_QWORD *)(v11 + 72);
    v192 = v13;
    v191 = v53;
    do
    {
      v208 = v55;
      sub_21C2ED3E0(v196 + v195 * v55, (uint64_t)v13, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege);
      v57 = *v13;
      v58 = v13[1];
      v59 = v199;
      sub_21C2F50EC((uint64_t)v13 + *(int *)(v199 + 20), v51, &qword_25525B8A0);
      sub_21C2F50EC((uint64_t)v13 + *(int *)(v59 + 24), v50, &qword_25525B8A0);
      v60 = *(_QWORD *)((char *)v13 + *(int *)(v59 + 28));
      v61 = *(_QWORD *)(v60 + 16);
      if (v61)
      {
        v207 = v57;
        v216 = MEMORY[0x24BEE4AF8];
        v206 = v58;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21C31E1BC(0, v61, 0);
        v62 = v216;
        v205 = v60;
        v63 = (uint64_t *)(v60 + 72);
        do
        {
          v64 = *(v63 - 5);
          v65 = *(v63 - 4);
          v66 = *(v63 - 2);
          v214 = *(v63 - 3);
          v215 = v64;
          v68 = *(v63 - 1);
          v67 = *v63;
          v216 = v62;
          v69 = *(_QWORD *)(v62 + 16);
          v70 = *(_QWORD *)(v62 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v69 >= v70 >> 1)
          {
            sub_21C31E1BC(v70 > 1, v69 + 1, 1);
            v62 = v216;
          }
          v63 += 6;
          *(_QWORD *)(v62 + 16) = v69 + 1;
          v71 = (_QWORD *)(v62 + 48 * v69);
          v71[4] = v215;
          v71[5] = v65;
          v71[6] = v214;
          v71[7] = v66;
          v71[8] = v68;
          v71[9] = v67;
          --v61;
        }
        while (v61);
        swift_bridgeObjectRelease();
        v49 = (uint64_t)v213;
        v13 = v192;
        v72 = v209;
        v73 = (uint64_t)v194;
        v74 = (uint64_t)v193;
        v53 = v191;
        v58 = v206;
        v57 = v207;
      }
      else
      {
        swift_bridgeObjectRetain();
        v62 = MEMORY[0x24BEE4AF8];
        v73 = v50;
        v74 = v51;
        v72 = v209;
      }
      *v72 = v57;
      v72[1] = v58;
      v75 = v198;
      v76 = v72;
      v51 = v74;
      sub_21C2F50A8(v74, (uint64_t)v72 + *(int *)(v198 + 20), &qword_25525B8A0);
      v50 = v73;
      sub_21C2F50A8(v73, (uint64_t)v76 + *(int *)(v75 + 24), &qword_25525B8A0);
      *(uint64_t *)((char *)v76 + *(int *)(v75 + 28)) = v62;
      sub_21C2ED424((uint64_t)v13, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege);
      v77 = v217;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v79 = v208;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21C31E138(0, *(_QWORD *)(v77 + 16) + 1, 1);
        v77 = v217;
      }
      v81 = *(_QWORD *)(v77 + 16);
      v80 = *(_QWORD *)(v77 + 24);
      if (v81 >= v80 >> 1)
      {
        sub_21C31E138(v80 > 1, v81 + 1, 1);
        v77 = v217;
      }
      v55 = v79 + 1;
      *(_QWORD *)(v77 + 16) = v81 + 1;
      sub_21C2F5064((uint64_t)v209, v77+ ((*(unsigned __int8 *)(v197 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v197 + 80))+ *(_QWORD *)(v197 + 72) * v81, (uint64_t (*)(_QWORD))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege);
    }
    while (v55 != v53);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21C2D1E80(v185, v186);
    swift_bridgeObjectRetain();
    v77 = MEMORY[0x24BEE4AF8];
  }
  v82 = (uint64_t)v204;
  v205 = v77;
  v83 = *(_QWORD *)(v189 + v188[13]);
  v84 = *(_QWORD *)(v83 + 16);
  v85 = MEMORY[0x24BEE4AF8];
  if (v84)
  {
    v217 = MEMORY[0x24BEE4AF8];
    v86 = v83;
    swift_bridgeObjectRetain();
    sub_21C31E10C(0, v84, 0);
    v87 = 0;
    v88 = *(unsigned __int8 *)(v158 + 80);
    v199 = v86;
    v207 = v86 + ((v88 + 32) & ~v88);
    v208 = v84;
    v206 = *(_QWORD *)(v158 + 72);
    do
    {
      sub_21C2ED3E0(v207 + v206 * v87, v49, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
      sub_21C2F50EC(v49, v82, &qword_25525B948);
      v89 = v203;
      v90 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v202 + 48))(v82, 1, v203);
      v215 = v87;
      if (v90 == 1)
      {
        v91 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v212, 1, 1, v91);
      }
      else
      {
        v92 = v190;
        sub_21C2F5064(v82, (uint64_t)v190, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
        v94 = *v92;
        v93 = v92[1];
        v95 = v89;
        v97 = v92[2];
        v96 = v92[3];
        v98 = (uint64_t)v92 + *(int *)(v95 + 24);
        v99 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
        v100 = v212;
        sub_21C2F50EC(v98, (uint64_t)v212 + *(int *)(v99 + 24), &qword_25525B8A0);
        sub_21C2F50EC((uint64_t)v92 + *(int *)(v95 + 28), (uint64_t)v100 + *(int *)(v99 + 28), &qword_25525B8A0);
        *v100 = v94;
        v100[1] = v93;
        v100[2] = v97;
        v100[3] = v96;
        v49 = (uint64_t)v213;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21C2ED424((uint64_t)v92, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v100, 0, 1, v99);
      }
      v101 = *(_QWORD *)(v49 + *(int *)(v211 + 20));
      v102 = *(_QWORD *)(v101 + 16);
      if (v102)
      {
        v216 = v85;
        swift_bridgeObjectRetain();
        sub_21C31E190(0, v102, 0);
        v103 = v216;
        v209 = (uint64_t *)v101;
        v104 = (uint64_t *)(v101 + 56);
        do
        {
          v105 = *(v104 - 3);
          v106 = *(v104 - 2);
          v107 = *(v104 - 1);
          v108 = *v104;
          v216 = v103;
          v110 = *(_QWORD *)(v103 + 16);
          v109 = *(_QWORD *)(v103 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v110 >= v109 >> 1)
          {
            sub_21C31E190(v109 > 1, v110 + 1, 1);
            v103 = v216;
          }
          v104 += 4;
          *(_QWORD *)(v103 + 16) = v110 + 1;
          v111 = (_QWORD *)(v103 + 32 * v110);
          v111[4] = v105;
          v111[5] = v106;
          v111[6] = v107;
          v111[7] = v108;
          --v102;
        }
        while (v102);
        v214 = v103;
        swift_bridgeObjectRelease();
        v85 = MEMORY[0x24BEE4AF8];
        v49 = (uint64_t)v213;
      }
      else
      {
        v214 = v85;
      }
      v112 = *(_QWORD *)(v49 + *(int *)(v211 + 24));
      v113 = *(_QWORD *)(v112 + 16);
      if (v113)
      {
        v216 = v85;
        swift_bridgeObjectRetain();
        sub_21C31E164(0, v113, 0);
        v114 = v216;
        v209 = (uint64_t *)v112;
        v115 = (uint64_t *)(v112 + 56);
        do
        {
          v116 = *(v115 - 3);
          v117 = *(v115 - 2);
          v118 = *(v115 - 1);
          v119 = *v115;
          v216 = v114;
          v121 = *(_QWORD *)(v114 + 16);
          v120 = *(_QWORD *)(v114 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v121 >= v120 >> 1)
          {
            sub_21C31E164(v120 > 1, v121 + 1, 1);
            v114 = v216;
          }
          v115 += 4;
          *(_QWORD *)(v114 + 16) = v121 + 1;
          v122 = (_QWORD *)(v114 + 32 * v121);
          v122[4] = v116;
          v122[5] = v117;
          v122[6] = v118;
          v122[7] = v119;
          --v113;
        }
        while (v113);
        swift_bridgeObjectRelease();
        v49 = (uint64_t)v213;
        v85 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        v114 = v85;
      }
      v123 = v210;
      sub_21C2F50A8((uint64_t)v212, v210, &qword_25525BFB0);
      v124 = v201;
      *(_QWORD *)(v123 + *(int *)(v201 + 20)) = v214;
      *(_QWORD *)(v123 + *(int *)(v124 + 24)) = v114;
      sub_21C2ED424(v49, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
      v125 = v217;
      v126 = swift_isUniquelyReferenced_nonNull_native();
      v127 = v208;
      v128 = v215;
      if ((v126 & 1) == 0)
      {
        sub_21C31E10C(0, *(_QWORD *)(v125 + 16) + 1, 1);
        v125 = v217;
      }
      v130 = *(_QWORD *)(v125 + 16);
      v129 = *(_QWORD *)(v125 + 24);
      if (v130 >= v129 >> 1)
      {
        sub_21C31E10C(v129 > 1, v130 + 1, 1);
        v125 = v217;
      }
      v87 = v128 + 1;
      *(_QWORD *)(v125 + 16) = v130 + 1;
      sub_21C2F5064(v210, v125+ ((*(unsigned __int8 *)(v200 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v200 + 80))+ *(_QWORD *)(v200 + 72) * v130, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
      v82 = (uint64_t)v204;
    }
    while (v87 != v127);
    swift_bridgeObjectRelease();
  }
  else
  {
    v125 = MEMORY[0x24BEE4AF8];
  }
  v131 = v188;
  v132 = v189;
  v133 = (uint64_t *)(v189 + v188[14]);
  v135 = *v133;
  v134 = v133[1];
  v136 = v175;
  sub_21C2F50EC(v189 + v188[15], v175, &qword_25525B8A0);
  v137 = v176;
  sub_21C2F50EC(v132 + v131[16], v176, &qword_25525B8A0);
  v138 = *(unsigned __int8 *)(v132 + v131[17]);
  if (v138 == 2)
    v139 = 2;
  else
    v139 = v138 & 1;
  v140 = v173;
  sub_21C2F50A8((uint64_t)v171, v173, &qword_25525BA10);
  v141 = (int *)v174;
  v142 = (_QWORD *)(v140 + *(int *)(v174 + 20));
  v143 = v186;
  *v142 = v185;
  v142[1] = v143;
  *(_QWORD *)(v140 + v141[6]) = v187;
  v144 = v140 + v141[7];
  *(_QWORD *)v144 = v166;
  *(_BYTE *)(v144 + 8) = v167;
  sub_21C2F50A8((uint64_t)v172, v140 + v141[8], &qword_25525B8A0);
  *(_BYTE *)(v140 + v141[9]) = v165;
  v145 = (_QWORD *)(v140 + v141[17]);
  v146 = v183;
  *v145 = v178;
  v145[1] = v146;
  v147 = v180;
  v145[2] = v179;
  v145[3] = v147;
  v148 = v182;
  v145[4] = v181;
  v145[5] = v148;
  v149 = v168;
  v145[6] = v184;
  v145[7] = v149;
  v150 = v170;
  v145[8] = v169;
  v145[9] = v150;
  v151 = (_QWORD *)(v140 + v141[10]);
  v152 = v164;
  *v151 = v159;
  v151[1] = v152;
  v153 = v161;
  v151[2] = v160;
  v151[3] = v153;
  v154 = v163;
  v151[4] = v162;
  v151[5] = v154;
  *(_QWORD *)(v140 + v141[11]) = v205;
  *(_QWORD *)(v140 + v141[12]) = v125;
  v155 = (_QWORD *)(v140 + v141[13]);
  *v155 = v135;
  v155[1] = v134;
  sub_21C2F50A8(v136, v140 + v141[14], &qword_25525B8A0);
  sub_21C2F50A8(v137, v140 + v141[15], &qword_25525B8A0);
  *(_BYTE *)(v140 + v141[16]) = v139;
  sub_21C2F5064(v140, v177, (uint64_t (*)(_QWORD))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C2E0EC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_documentElements;
  sub_21C2F50EC(v11, (uint64_t)v7, &qword_25525BA10);
  v12 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  v13 = (uint64_t *)(v11 + v12[5]);
  v15 = *v13;
  v14 = v13[1];
  v23 = *(_QWORD *)(v11 + v12[6]);
  v16 = v11 + v12[7];
  v17 = *(_QWORD *)v16;
  v18 = *(_BYTE *)(v16 + 8);
  sub_21C2F50EC(v11 + v12[8], (uint64_t)v4, &qword_25525B8A0);
  v19 = 0x40303020100uLL >> (8 * *(_BYTE *)(v11 + v12[9]));
  sub_21C2F50A8((uint64_t)v7, (uint64_t)v10, &qword_25525BA10);
  v20 = (uint64_t *)&v10[v8[5]];
  *v20 = v15;
  v20[1] = v14;
  *(_QWORD *)&v10[v8[6]] = v23;
  v21 = &v10[v8[7]];
  *(_QWORD *)v21 = v17;
  v21[8] = v18;
  sub_21C2F50A8((uint64_t)v4, (uint64_t)&v10[v8[8]], &qword_25525B8A0);
  v10[v8[9]] = v19;
  sub_21C2F5064((uint64_t)v10, v24, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements);
  sub_21C2D1E80(v15, v14);
  return swift_bridgeObjectRetain();
}

id MobileDriversLicenseDataResponseInternal.__allocating_init(_:issuer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  v7 = (char *)objc_allocWithZone(v3);
  sub_21C2ED3E0(a1, (uint64_t)&v7[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_documentElements], type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
  v8 = &v7[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_issuer];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v11.receiver = v7;
  v11.super_class = v3;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  sub_21C2ED424(a1, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
  return v9;
}

id MobileDriversLicenseDataResponseInternal.init(_:issuer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_21C2ED3E0(a1, (uint64_t)&v3[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_documentElements], type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
  v8 = &v3[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_issuer];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v11.receiver = v3;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  sub_21C2ED424(a1, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
  return v9;
}

id MobileDriversLicenseDataResponseInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MobileDriversLicenseDataResponseInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21C2E1274()
{
  _BYTE *v0;

  if (*v0)
    return 0x726575737369;
  else
    return 0xD000000000000010;
}

uint64_t sub_21C2E12B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F3B88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2E12D4()
{
  sub_21C2E14F8();
  return sub_21C3A8754();
}

uint64_t sub_21C2E12FC()
{
  sub_21C2E14F8();
  return sub_21C3A8760();
}

id MobileDriversLicenseDataResponseInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MobileDriversLicenseDataResponseInternal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B780);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2E14F8();
  sub_21C3A8748();
  v8[15] = 0;
  type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  sub_21C2D1198(&qword_25525B790, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements);
  sub_21C3A8610();
  if (!v1)
  {
    v8[14] = 1;
    sub_21C3A85E0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_21C2E14F8()
{
  unint64_t result;

  result = qword_25525B788;
  if (!qword_25525B788)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC984, &type metadata for MobileDriversLicenseDataResponseInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B788);
  }
  return result;
}

id MobileDriversLicenseDataResponseInternal.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseDataResponseInternal.init(from:)(a1);
}

id MobileDriversLicenseDataResponseInternal.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  objc_class *ObjectType;
  objc_super v22;
  char v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v18 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B798);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (id)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v8);
  sub_21C2E14F8();
  v9 = v1;
  sub_21C3A873C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v10 = v5;
    v23 = 0;
    sub_21C2D1198((unint64_t *)&unk_25525B7A0, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements);
    v11 = (uint64_t)v19;
    v12 = v20;
    sub_21C3A858C();
    sub_21C2F5064(v11, (uint64_t)&v9[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_documentElements], type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
    v23 = 1;
    v14 = sub_21C3A855C();
    v15 = v10;
    v16 = (uint64_t *)&v9[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_issuer];
    *v16 = v14;
    v16[1] = v17;

    v22.receiver = v9;
    v22.super_class = ObjectType;
    v8 = objc_msgSendSuper2(&v22, sel_init, v18);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v8;
}

id sub_21C2E1804@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  id result;

  v6 = objc_allocWithZone(v2);
  result = MobileDriversLicenseDataResponseInternal.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_21C2E1850(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.encode(to:)(a1);
}

uint64_t static MobileDriversLicenseDataResponseInternal.supportsSecureCoding.getter()
{
  return 1;
}

id MobileDriversLicenseDataResponseInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MobileDriversLicenseDataResponseInternal.init(coder:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;
  char *v25;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2D32C0();
  v7 = v1;
  v8 = sub_21C3A825C();
  if (!v8)
  {

LABEL_10:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v9 = (void *)v8;
  v10 = sub_21C3A774C();
  v12 = v11;

  v13 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  sub_21C2D1E94(v10, v12);
  v14 = sub_21C2D3524();
  sub_21C2D2B48(v10, v12);
  if (!v14)
  {

LABEL_9:
    sub_21C2D2B48(v10, v12);
    goto LABEL_10;
  }
  sub_21C2D1198(&qword_25525B7B0, type metadata accessor for MobileDriversLicenseDataResponseInternal, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal);
  sub_21C3A81F0();
  v15 = v25;

  if (!v15)
  {
    objc_msgSend(v14, sel_finishDecoding);

    goto LABEL_9;
  }
  sub_21C2ED3E0((uint64_t)&v15[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_documentElements], (uint64_t)v6, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
  v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_issuer + 8];
  v23 = *(_QWORD *)&v15[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_issuer];
  v17 = (char *)objc_allocWithZone(ObjectType);
  sub_21C2ED3E0((uint64_t)v6, (uint64_t)&v17[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_documentElements], type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
  v18 = &v17[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseDataResponseInternal_issuer];
  *(_QWORD *)v18 = v23;
  *((_QWORD *)v18 + 1) = v16;
  v24.receiver = v17;
  v24.super_class = ObjectType;
  swift_bridgeObjectRetain();
  v19 = objc_msgSendSuper2(&v24, sel_init);
  sub_21C2ED424((uint64_t)v6, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v20 = v19;
  objc_msgSend(v14, sel_finishDecoding);

  sub_21C2D2B48(v10, v12);
  return v20;
}

Swift::Void __swiftcall MobileDriversLicenseDataResponseInternal.encode(with:)(NSCoder with)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  swift_getObjectType();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_21C2D1198(&qword_25525B7B8, type metadata accessor for MobileDriversLicenseDataResponseInternal, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal);
  sub_21C3A81E4();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_21C3A7EB4();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
  }
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Address.street.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Address.city.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Address.state.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Address.postalCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Address.isoCountryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall MobileDriversLicenseDataResponseInternal.DocumentElements.Address.init(street:city:state:postalCode:isoCountryCode:)(ProximityReader::MobileDriversLicenseDataResponseInternal::DocumentElements::Address *__return_ptr retstr, Swift::String_optional street, Swift::String_optional city, Swift::String_optional state, Swift::String_optional postalCode, Swift::String_optional isoCountryCode)
{
  retstr->street = street;
  retstr->city = city;
  retstr->state = state;
  retstr->postalCode = postalCode;
  retstr->isoCountryCode = isoCountryCode;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Address.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[3];
  v2 = v0[5];
  v3 = v0[7];
  v4 = v0[9];
  if (v0[1])
  {
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_3;
  }
  else
  {
    sub_21C3A8718();
    if (v1)
    {
LABEL_3:
      sub_21C3A8718();
      swift_bridgeObjectRetain();
      sub_21C3A7F50();
      swift_bridgeObjectRelease();
      if (v2)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  sub_21C3A8718();
  if (v2)
  {
LABEL_4:
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_5;
LABEL_10:
    sub_21C3A8718();
    if (v4)
      goto LABEL_6;
    return sub_21C3A8718();
  }
LABEL_9:
  sub_21C3A8718();
  if (!v3)
    goto LABEL_10;
LABEL_5:
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_6:
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    return swift_bridgeObjectRelease();
  }
  return sub_21C3A8718();
}

uint64_t sub_21C2E2004()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C2E2030 + 4 * byte_21C3AACA0[*v0]))(0x746565727473, 0xE600000000000000);
}

uint64_t sub_21C2E2030()
{
  return 2037672291;
}

uint64_t sub_21C2E2040()
{
  return 0x6574617473;
}

uint64_t sub_21C2E2054()
{
  return 0x6F436C6174736F70;
}

uint64_t sub_21C2E2070()
{
  return 0x746E756F436F7369;
}

uint64_t sub_21C2E2094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F3C6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2E20B8()
{
  sub_21C2ED09C();
  return sub_21C3A8754();
}

uint64_t sub_21C2E20E0()
{
  sub_21C2ED09C();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Address.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[10];
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B7C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v13[7] = v1[3];
  v13[8] = v7;
  v8 = v1[4];
  v13[5] = v1[5];
  v13[6] = v8;
  v9 = v1[6];
  v13[3] = v1[7];
  v13[4] = v9;
  v10 = v1[8];
  v13[1] = v1[9];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED09C();
  sub_21C3A8748();
  v18 = 0;
  v11 = v13[9];
  sub_21C3A85B0();
  if (!v11)
  {
    v17 = 1;
    sub_21C3A85B0();
    v16 = 2;
    sub_21C3A85B0();
    v15 = 3;
    sub_21C3A85B0();
    v14 = 4;
    sub_21C3A85B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Address.hashValue.getter()
{
  sub_21C3A8700();
  MobileDriversLicenseDataResponseInternal.DocumentElements.Address.hash(into:)();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Address.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B7D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED09C();
  sub_21C3A873C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v38 = 0;
  v9 = sub_21C3A852C();
  v11 = v10;
  v37 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_21C3A852C();
  v33 = v13;
  v29 = v12;
  v30 = v9;
  v36 = 2;
  swift_bridgeObjectRetain();
  v32 = 0;
  v28 = sub_21C3A852C();
  v35 = 3;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_21C3A852C();
  v31 = v15;
  v27 = v16;
  v34 = 4;
  v19 = v18;
  swift_bridgeObjectRetain();
  v20 = sub_21C3A852C();
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v32 = v20;
  v23(v8, v5);
  swift_bridgeObjectRetain();
  v24 = v31;
  *a2 = v30;
  a2[1] = v11;
  v25 = v33;
  a2[2] = v29;
  a2[3] = v25;
  a2[4] = v28;
  a2[5] = v24;
  a2[6] = v27;
  a2[7] = v19;
  a2[8] = v32;
  a2[9] = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C2E26A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.Address.init(from:)(a1, a2);
}

uint64_t sub_21C2E26B8(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.Address.encode(to:)(a1);
}

uint64_t sub_21C2E26CC()
{
  sub_21C3A8700();
  MobileDriversLicenseDataResponseInternal.DocumentElements.Address.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C2E2728()
{
  sub_21C3A8700();
  MobileDriversLicenseDataResponseInternal.DocumentElements.Address.hash(into:)();
  return sub_21C3A8724();
}

BOOL static MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t sub_21C2E27BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C2E27E8 + 4 * byte_21C3AACA5[*v0]))(0x656C616D6566, 0xE600000000000000);
}

uint64_t sub_21C2E27E8()
{
  return 1701601645;
}

uint64_t sub_21C2E27F8()
{
  return 0x696C707041746F6ELL;
}

uint64_t sub_21C2E281C()
{
  return 0x6963657053746F6ELL;
}

uint64_t sub_21C2E283C()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_21C2E2854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F3E98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2E2878()
{
  sub_21C2ED0E0();
  return sub_21C3A8754();
}

uint64_t sub_21C2E28A0()
{
  sub_21C2ED0E0();
  return sub_21C3A8760();
}

uint64_t sub_21C2E28C8()
{
  return 0;
}

uint64_t sub_21C2E28D4()
{
  sub_21C2ED234();
  return sub_21C3A8754();
}

uint64_t sub_21C2E28FC()
{
  sub_21C2ED234();
  return sub_21C3A8760();
}

uint64_t sub_21C2E2924()
{
  sub_21C2ED1F0();
  return sub_21C3A8754();
}

uint64_t sub_21C2E294C()
{
  sub_21C2ED1F0();
  return sub_21C3A8760();
}

uint64_t sub_21C2E2974()
{
  sub_21C2ED1AC();
  return sub_21C3A8754();
}

uint64_t sub_21C2E299C()
{
  sub_21C2ED1AC();
  return sub_21C3A8760();
}

uint64_t sub_21C2E29C4()
{
  sub_21C2ED168();
  return sub_21C3A8754();
}

uint64_t sub_21C2E29EC()
{
  sub_21C2ED168();
  return sub_21C3A8760();
}

uint64_t sub_21C2E2A14()
{
  sub_21C2ED124();
  return sub_21C3A8754();
}

uint64_t sub_21C2E2A3C()
{
  sub_21C2ED124();
  return sub_21C3A8760();
}

void MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B7D8);
  v14[11] = *(_QWORD *)(v3 - 8);
  v14[12] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v14[10] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B7E0);
  v14[8] = *(_QWORD *)(v5 - 8);
  v14[9] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v14[7] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B7E8);
  v14[5] = *(_QWORD *)(v7 - 8);
  v14[6] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v14[4] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B7F0);
  v14[2] = *(_QWORD *)(v9 - 8);
  v14[3] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v14[1] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B7F8);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B800);
  v14[14] = *(_QWORD *)(v12 - 8);
  v14[15] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED0E0();
  sub_21C3A8748();
  __asm { BR              X9 }
}

uint64_t sub_21C2E2C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 69) = 0;
  sub_21C2ED234();
  v5 = *(_QWORD *)(v4 - 88);
  sub_21C3A85A4();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v5);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD v27[4];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v42 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B838);
  v34 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B840);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B848);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B850);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B858);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B860);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_21C2ED0E0();
  v19 = v44;
  sub_21C3A873C();
  if (!v19)
  {
    v27[2] = v10;
    v27[3] = v13;
    v27[1] = v11;
    v44 = v15;
    v28 = v17;
    v29 = v14;
    v20 = sub_21C3A8598();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v21 = sub_21C3A840C();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
    *v23 = &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex;
    v24 = v28;
    v25 = v29;
    sub_21C3A8520();
    sub_21C3A8400();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_21C2E3328@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.init(from:)(a1, a2);
}

void sub_21C2E333C(_QWORD *a1)
{
  MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.encode(to:)(a1);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.init(name:jurisdiction:isoCountryCode:)(ProximityReader::MobileDriversLicenseDataResponseInternal::DocumentElements::IssuingAuthority *__return_ptr retstr, Swift::String_optional name, Swift::String_optional jurisdiction, Swift::String_optional isoCountryCode)
{
  retstr->name = name;
  retstr->jurisdiction = jurisdiction;
  retstr->isoCountryCode = isoCountryCode;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[5];
  if (v0[1])
  {
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_3;
LABEL_6:
    sub_21C3A8718();
    if (v2)
      goto LABEL_4;
    return sub_21C3A8718();
  }
  sub_21C3A8718();
  if (!v1)
    goto LABEL_6;
LABEL_3:
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_4:
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    return swift_bridgeObjectRelease();
  }
  return sub_21C3A8718();
}

uint64_t sub_21C2E3490()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x636964736972756ALL;
  if (*v0 != 1)
    v1 = 0x746E756F436F7369;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_21C2E34F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F40D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2E351C()
{
  sub_21C2ED278();
  return sub_21C3A8754();
}

uint64_t sub_21C2E3544()
{
  sub_21C2ED278();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.encode(to:)(_QWORD *a1)
{
  return sub_21C2E3B60(a1, &qword_25525B870, (void (*)(void))sub_21C2ED278, (uint64_t)&type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.CodingKeys, (void (*)(uint64_t, uint64_t, char *, uint64_t))MEMORY[0x24BEE3428]);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.hashValue.getter()
{
  sub_21C3A8700();
  MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.hash(into:)();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B880);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED278();
  sub_21C3A873C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_21C3A852C();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_21C3A852C();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_21C3A852C();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C2E381C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.init(from:)(a1, a2);
}

uint64_t sub_21C2E3830(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.encode(to:)(a1);
}

uint64_t sub_21C2E3844()
{
  sub_21C3A8700();
  MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C2E3898()
{
  sub_21C3A8700();
  MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.hash(into:)();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.code.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.sign.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.init(code:sign:value:)(ProximityReader::MobileDriversLicenseDataResponseInternal::DocumentElements::DrivingPrivilege::Code *__return_ptr retstr, Swift::String code, Swift::String_optional sign, Swift::String_optional value)
{
  retstr->code = code;
  retstr->sign = sign;
  retstr->value = value;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
    if (v2)
    {
LABEL_3:
      sub_21C3A8718();
      swift_bridgeObjectRetain();
      sub_21C3A7F50();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_21C3A8718();
    if (v2)
      goto LABEL_3;
  }
  return sub_21C3A8718();
}

uint64_t sub_21C2E3A70()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1852270963;
  if (*v0 != 1)
    v1 = 0x65756C6176;
  if (*v0)
    return v1;
  else
    return 1701080931;
}

uint64_t sub_21C2E3AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F4258(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2E3ADC()
{
  sub_21C2ED2BC();
  return sub_21C3A8754();
}

uint64_t sub_21C2E3B04()
{
  sub_21C2ED2BC();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.encode(to:)(_QWORD *a1)
{
  return sub_21C2E3B60(a1, &qword_25525B888, (void (*)(void))sub_21C2ED2BC, (uint64_t)&type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.CodingKeys, (void (*)(uint64_t, uint64_t, char *, uint64_t))MEMORY[0x24BEE34A0]);
}

uint64_t sub_21C2E3B60(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, char *, uint64_t);
  char v21;
  char v22;
  char v23;

  v20 = a5;
  v18 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v5;
  v12 = v5[1];
  v16[3] = v5[2];
  v17 = v11;
  v13 = v5[3];
  v16[1] = v5[4];
  v16[2] = v13;
  v16[0] = v5[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v18();
  sub_21C3A8748();
  v23 = 0;
  v14 = v19;
  v20(v17, v12, &v23, v7);
  if (!v14)
  {
    v22 = 1;
    sub_21C3A85B0();
    v21 = 2;
    sub_21C3A85B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  sub_21C3A8700();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_21C3A8718();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_21C3A8718();
    return sub_21C3A8724();
  }
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B898);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED2BC();
  sub_21C3A873C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_21C3A855C();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_21C3A852C();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_21C3A852C();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C2E3FF0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.init(from:)(a1, a2);
}

uint64_t sub_21C2E4004(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.encode(to:)(a1);
}

uint64_t sub_21C2E4020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  sub_21C3A8700();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_21C3A8718();
    if (v2)
      goto LABEL_3;
LABEL_5:
    sub_21C3A8718();
    return sub_21C3A8724();
  }
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_5;
LABEL_3:
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.vehicleCategoryCode.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.issueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(0);
  return sub_21C2F50EC(v1 + *(int *)(v3 + 20), a1, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C2E5284(type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege, a1);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.codes.getter()
{
  type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.init(vehicleCategoryCode:issueDate:expirationDate:codes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  int *v10;
  uint64_t result;

  *a6 = a1;
  a6[1] = a2;
  v10 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(0);
  sub_21C2F50A8(a3, (uint64_t)a6 + v10[5], &qword_25525B8A0);
  result = sub_21C2F50A8(a4, (uint64_t)a6 + v10[6], &qword_25525B8A0);
  *(_QWORD *)((char *)a6 + v10[7]) = a5;
  return result;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v4 = sub_21C3A7518();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - v12;
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  v14 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(0);
  sub_21C2F50EC(v2 + v14[5], (uint64_t)v13, &qword_25525B8A0);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v15(v13, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_21C2F50EC(v2 + v14[6], (uint64_t)v11, &qword_25525B8A0);
  if (v15(v11, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v16 = *(_QWORD *)(v2 + v14[7]);
  swift_bridgeObjectRetain();
  sub_21C2EA7C4(a1, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C2E4494()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21C2E44C8 + 4 * byte_21C3AACB4[*v0]))(0xD000000000000013, 0x800000021C3B9E70);
}

uint64_t sub_21C2E44C8()
{
  return 0x7461446575737369;
}

uint64_t sub_21C2E44E4()
{
  return 0x6974617269707865;
}

uint64_t sub_21C2E4508()
{
  return 0x7365646F63;
}

uint64_t sub_21C2E451C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F4384(a1, a2);
  *a3 = result;
  return result;
}

void sub_21C2E4540(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_21C2E454C()
{
  sub_21C2ED314();
  return sub_21C3A8754();
}

uint64_t sub_21C2E4574()
{
  sub_21C2ED314();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED314();
  sub_21C3A8748();
  v15 = 0;
  sub_21C3A85E0();
  if (!v2)
  {
    v9 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(0);
    v14 = 1;
    sub_21C3A7518();
    sub_21C2D1198(&qword_25525B8C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE00]);
    sub_21C3A85D4();
    v13 = 2;
    sub_21C3A85D4();
    v11[1] = *(_QWORD *)(v3 + *(int *)(v9 + 28));
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8C8);
    sub_21C2ED698(&qword_25525B8D0, &qword_25525B8C8, (uint64_t (*)(void))sub_21C2ED358, MEMORY[0x24BEE12A0]);
    sub_21C3A8610();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int *v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  _BYTE v16[72];

  v1 = v0;
  v2 = sub_21C3A7518();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v16[-v10 - 8];
  sub_21C3A8700();
  sub_21C3A7F50();
  v12 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(0);
  sub_21C2F50EC(v1 + v12[5], (uint64_t)v11, &qword_25525B8A0);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v13(v11, 1, v2) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_21C2F50EC(v1 + v12[6], (uint64_t)v9, &qword_25525B8A0);
  if (v13(v9, 1, v2) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_21C2EA7C4((uint64_t)v16, *(_QWORD *)(v1 + v12[7]));
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v21 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v20 = (char *)v18 - v6;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8E0);
  v7 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (_QWORD *)((char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED314();
  v13 = (uint64_t)v23;
  sub_21C3A873C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = a1;
  v14 = (uint64_t)v20;
  v15 = (uint64_t)v21;
  v28 = 0;
  *v12 = sub_21C3A855C();
  v12[1] = v16;
  sub_21C3A7518();
  v27 = 1;
  v18[1] = sub_21C2D1198(&qword_25525B8E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE20]);
  sub_21C3A8550();
  sub_21C2F50A8(v14, (uint64_t)v12 + v10[5], &qword_25525B8A0);
  v26 = 2;
  sub_21C3A8550();
  sub_21C2F50A8(v15, (uint64_t)v12 + v10[6], &qword_25525B8A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8C8);
  v25 = 3;
  sub_21C2ED698(&qword_25525B8F0, &qword_25525B8C8, (uint64_t (*)(void))sub_21C2ED39C, MEMORY[0x24BEE12D0]);
  sub_21C3A858C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  *(uint64_t *)((char *)v12 + v10[7]) = v24;
  sub_21C2ED3E0((uint64_t)v12, v19, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_21C2ED424((uint64_t)v12, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege);
}

uint64_t sub_21C2E4D9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.init(from:)(a1, a2);
}

uint64_t sub_21C2E4DB0(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.encode(to:)(a1);
}

uint64_t sub_21C2E4DC8(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v4 = v2;
  v6 = sub_21C3A7518();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v18 - v14;
  sub_21C3A7F50();
  sub_21C2F50EC(v4 + a2[5], (uint64_t)v15, &qword_25525B8A0);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v16(v15, 1, v6) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_21C2F50EC(v4 + a2[6], (uint64_t)v13, &qword_25525B8A0);
  if (v16(v13, 1, v6) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_21C2EA7C4(a1, *(_QWORD *)(v4 + a2[7]));
}

uint64_t sub_21C2E4FFC(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  _BYTE v18[72];

  v4 = v2;
  v5 = sub_21C3A7518();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v18[-v13 - 8];
  sub_21C3A8700();
  sub_21C3A7F50();
  sub_21C2F50EC(v4 + a2[5], (uint64_t)v14, &qword_25525B8A0);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_21C2F50EC(v4 + a2[6], (uint64_t)v12, &qword_25525B8A0);
  if (v15(v12, 1, v5) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_21C2EA7C4((uint64_t)v18, *(_QWORD *)(v4 + a2[7]));
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.issueDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C2E5284(type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass, a1);
}

uint64_t sub_21C2E5284@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_21C2F50EC(v2 + *(int *)(v4 + 24), a2, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  return sub_21C2F50EC(v1 + *(int *)(v3 + 28), a1, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.init(code:description:issueDate:expirationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v10;

  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  v10 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_21C2F50A8(a5, (uint64_t)a7 + *(int *)(v10 + 24), &qword_25525B8A0);
  return sub_21C2F50A8(a6, (uint64_t)a7 + *(int *)(v10 + 28), &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v1 = sub_21C3A7518();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v14 - v9;
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_21C2F50EC(v0 + *(int *)(v11 + 24), (uint64_t)v10, &qword_25525B8A0);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  if (v12(v10, 1, v1) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v10, v1);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_21C2F50EC(v0 + *(int *)(v11 + 28), (uint64_t)v8, &qword_25525B8A0);
  if (v12(v8, 1, v1) == 1)
    return sub_21C3A8718();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  sub_21C3A8718();
  sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
  sub_21C3A7E60();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_21C2E55E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C2E560C + 4 * byte_21C3AACB8[*v0]))(1701080931, 0xE400000000000000);
}

uint64_t sub_21C2E560C()
{
  return 0x7470697263736564;
}

uint64_t sub_21C2E562C()
{
  return 0x7461446575737369;
}

uint64_t sub_21C2E5648()
{
  return 0x6974617269707865;
}

uint64_t sub_21C2E566C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F4560(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2E5690()
{
  sub_21C2ED474();
  return sub_21C3A8754();
}

uint64_t sub_21C2E56B8()
{
  sub_21C2ED474();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B900);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED474();
  sub_21C3A8748();
  v12 = 0;
  sub_21C3A85E0();
  if (!v1)
  {
    v11 = 1;
    sub_21C3A85E0();
    type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
    v10 = 2;
    sub_21C3A7518();
    sub_21C2D1198(&qword_25525B8C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE00]);
    sub_21C3A85D4();
    v9 = 3;
    sub_21C3A85D4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v1 = v0;
  v2 = sub_21C3A7518();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  sub_21C3A8700();
  sub_21C3A7F50();
  sub_21C3A7F50();
  v12 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_21C2F50EC(v1 + *(int *)(v12 + 24), (uint64_t)v11, &qword_25525B8A0);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v13(v11, 1, v2) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_21C2F50EC(v1 + *(int *)(v12 + 28), (uint64_t)v9, &qword_25525B8A0);
  if (v13(v9, 1, v2) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v22 - v6;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B910);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED474();
  v13 = (uint64_t)v27;
  sub_21C3A873C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = a1;
  v14 = v7;
  v31 = 0;
  v16 = (uint64_t)v25;
  v15 = v26;
  v17 = (uint64_t)v12;
  *v12 = sub_21C3A855C();
  v12[1] = v18;
  v30 = 1;
  v12[2] = sub_21C3A855C();
  v12[3] = v19;
  sub_21C3A7518();
  v29 = 2;
  v22 = sub_21C2D1198(&qword_25525B8E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE20]);
  sub_21C3A8550();
  sub_21C2F50A8(v16, (uint64_t)v12 + *(int *)(v10 + 24), &qword_25525B8A0);
  v28 = 3;
  v20 = (uint64_t)v24;
  sub_21C3A8550();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  sub_21C2F50A8(v20, v17 + *(int *)(v10 + 28), &qword_25525B8A0);
  sub_21C2ED3E0(v17, v23, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_21C2ED424(v17, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
}

uint64_t sub_21C2E5E44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.init(from:)(a1, a2);
}

uint64_t sub_21C2E5E58(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.encode(to:)(a1);
}

uint64_t sub_21C2E5E70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v17;

  v4 = v2;
  v5 = sub_21C3A7518();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v17 - v13;
  sub_21C3A7F50();
  sub_21C3A7F50();
  sub_21C2F50EC(v4 + *(int *)(a2 + 24), (uint64_t)v14, &qword_25525B8A0);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_21C2F50EC(v4 + *(int *)(a2 + 28), (uint64_t)v12, &qword_25525B8A0);
  if (v15(v12, 1, v5) == 1)
    return sub_21C3A8718();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  sub_21C3A8718();
  sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
  sub_21C3A7E60();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_21C2E60A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v17;

  v4 = v2;
  v5 = sub_21C3A7518();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v17 - v13;
  sub_21C3A8700();
  sub_21C3A7F50();
  sub_21C3A7F50();
  sub_21C2F50EC(v4 + *(int *)(a2 + 24), (uint64_t)v14, &qword_25525B8A0);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v15(v14, 1, v5) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_21C2F50EC(v4 + *(int *)(a2 + 28), (uint64_t)v12, &qword_25525B8A0);
  if (v15(v12, 1, v5) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return sub_21C3A8724();
}

uint64_t static MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_21C2EAC8C(a1, a2) & 1;
}

uint64_t sub_21C2E6308()
{
  sub_21C2ED4B8();
  return sub_21C3A8754();
}

uint64_t sub_21C2E6330()
{
  sub_21C2ED4B8();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.encode(to:)(_QWORD *a1)
{
  return sub_21C2E65F0(a1, &qword_25525B918, (void (*)(void))sub_21C2ED4B8);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21C2E67EC(a1, &qword_25525B928, (void (*)(void))sub_21C2ED4B8, a2);
}

uint64_t sub_21C2E63B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.init(from:)(a1, a2);
}

uint64_t sub_21C2E63C8(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.encode(to:)(a1);
}

uint64_t sub_21C2E63E8(_QWORD *a1, _QWORD *a2)
{
  return sub_21C2EAC8C(a1, a2) & 1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.code.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

ProximityReader::MobileDriversLicenseDataResponseInternal::DocumentElements::AAMVADrivingPrivilege::VehicleEndorsement __swiftcall MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.init(code:description:)(Swift::String_optional code, Swift::String description)
{
  Swift::String_optional *v2;
  ProximityReader::MobileDriversLicenseDataResponseInternal::DocumentElements::AAMVADrivingPrivilege::VehicleEndorsement result;

  *v2 = code;
  v2[1].value = description;
  result.description = description;
  result.code = code;
  return result;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV21AAMVADrivingPrivilegeV18VehicleRestrictionV4hash4intoys6HasherVz_tF_0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21C3A8718();
  }
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

uint64_t static MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_21C2EAC8C(a1, a2) & 1;
}

uint64_t sub_21C2E6514()
{
  _BYTE *v0;

  if (*v0)
    return 0x7470697263736564;
  else
    return 1701080931;
}

uint64_t sub_21C2E6550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F4750(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2E6574()
{
  sub_21C2ED4FC();
  return sub_21C3A8754();
}

uint64_t sub_21C2E659C()
{
  sub_21C2ED4FC();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.encode(to:)(_QWORD *a1)
{
  return sub_21C2E65F0(a1, &qword_25525B930, (void (*)(void))sub_21C2ED4FC);
}

uint64_t sub_21C2E65F0(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v12 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v3 + 16);
  v11[1] = *(_QWORD *)(v3 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12();
  sub_21C3A8748();
  v16 = 0;
  v9 = v13;
  sub_21C3A85B0();
  if (!v9)
  {
    v15 = 1;
    sub_21C3A85E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v7, v5);
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV21AAMVADrivingPrivilegeV18VehicleRestrictionV9hashValueSivg_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_21C3A8700();
  sub_21C3A8718();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
  }
  sub_21C3A7F50();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21C2E67EC(a1, &qword_25525B940, (void (*)(void))sub_21C2ED4FC, a2);
}

uint64_t sub_21C2E67EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  char v25;

  v22 = a4;
  v23 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_21C3A873C();
  if (v4)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v10 = v7;
  v11 = v22;
  v12 = v23;
  v25 = 0;
  v13 = sub_21C3A852C();
  v15 = v14;
  v24 = 1;
  swift_bridgeObjectRetain();
  v16 = sub_21C3A855C();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20 = v16;
  v19(v9, v12);
  *v11 = v13;
  v11[1] = v15;
  v11[2] = v20;
  v11[3] = v18;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C2E6998@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.init(from:)(a1, a2);
}

uint64_t sub_21C2E69AC(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.encode(to:)(a1);
}

uint64_t sub_21C2E69C0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21C3A8718();
  }
  return sub_21C3A7F50();
}

uint64_t sub_21C2E6A44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_21C3A8700();
  sub_21C3A8718();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
  }
  sub_21C3A7F50();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.vehicleClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C2F50EC(v1, a1, &qword_25525B948);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.vehicleRestrictions.getter()
{
  type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.vehicleEndorsements.getter()
{
  return sub_21C2E7D3C((void (*)(_QWORD))type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.init(vehicleClass:vehicleRestrictions:vehicleEndorsements:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  sub_21C2F50A8(a1, a4, &qword_25525B948);
  result = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(0);
  *(_QWORD *)(a4 + *(int *)(result + 20)) = a2;
  *(_QWORD *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_21C2E9A2C(a1, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass, &qword_25525B948);
  v3 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(0);
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  swift_bridgeObjectRetain();
  sub_21C2EA2C4(a1, v4);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_21C2EA2C4(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C2E6C08()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x43656C6369686576;
}

uint64_t sub_21C2E6C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F4848(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2E6C98()
{
  sub_21C2ED588();
  return sub_21C3A8754();
}

uint64_t sub_21C2E6CC0()
{
  sub_21C2ED588();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B950);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED588();
  sub_21C3A8748();
  LOBYTE(v12) = 0;
  type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_21C2D1198(&qword_25525B960, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
  sub_21C3A85D4();
  if (!v2)
  {
    v9 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(0);
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 20));
    HIBYTE(v11) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525B968);
    sub_21C2ED698(&qword_25525B970, &qword_25525B968, (uint64_t (*)(void))sub_21C2ED5CC, MEMORY[0x24BEE12A0]);
    sub_21C3A8610();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525B980);
    sub_21C2ED698(&qword_25525B988, &qword_25525B980, (uint64_t (*)(void))sub_21C2ED610, MEMORY[0x24BEE12A0]);
    sub_21C3A8610();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_21C3A8700();
  sub_21C2E9A2C((uint64_t)v3, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass, &qword_25525B948);
  v1 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(0);
  sub_21C2EA2C4((uint64_t)v3, *(_QWORD *)(v0 + *(int *)(v1 + 20)));
  sub_21C2EA2C4((uint64_t)v3, *(_QWORD *)(v0 + *(int *)(v1 + 24)));
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;

  v15 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B948);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B998);
  v7 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v17 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_21C2ED588();
  sub_21C3A873C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  LOBYTE(v19) = 0;
  sub_21C2D1198(&qword_25525B9A0, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
  sub_21C3A8550();
  sub_21C2F50A8((uint64_t)v6, (uint64_t)v12, &qword_25525B948);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B968);
  v18 = 1;
  sub_21C2ED698(&qword_25525B9A8, &qword_25525B968, (uint64_t (*)(void))sub_21C2ED654, MEMORY[0x24BEE12D0]);
  sub_21C3A858C();
  *(_QWORD *)&v12[*(int *)(v10 + 20)] = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B980);
  v18 = 2;
  sub_21C2ED698(&qword_25525B9B8, &qword_25525B980, (uint64_t (*)(void))sub_21C2ED6FC, MEMORY[0x24BEE12D0]);
  sub_21C3A858C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  *(_QWORD *)&v12[*(int *)(v10 + 24)] = v19;
  sub_21C2ED3E0((uint64_t)v12, v15, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_21C2ED424((uint64_t)v12, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
}

uint64_t sub_21C2E72AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.init(from:)(a1, a2);
}

uint64_t sub_21C2E72C0(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.encode(to:)(a1);
}

uint64_t sub_21C2E72D4(uint64_t a1)
{
  uint64_t v1;
  _BYTE v4[72];

  sub_21C3A8700();
  sub_21C2E9A2C((uint64_t)v4, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass, &qword_25525B948);
  sub_21C2EA2C4((uint64_t)v4, *(_QWORD *)(v1 + *(int *)(a1 + 20)));
  sub_21C2EA2C4((uint64_t)v4, *(_QWORD *)(v1 + *(int *)(a1 + 24)));
  return sub_21C3A8724();
}

uint64_t sub_21C2E7344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_21C2E9A2C(a1, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass, &qword_25525B948);
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 20));
  v5 = *(_QWORD *)(v4 + 16);
  sub_21C3A870C();
  if (v5)
  {
    v6 = v4 + 56;
    do
    {
      if (*(_QWORD *)(v6 - 16))
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain();
      }
      v6 += 32;
      sub_21C3A7F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v5;
    }
    while (v5);
  }
  v7 = *(_QWORD *)(v2 + *(int *)(a2 + 24));
  v8 = *(_QWORD *)(v7 + 16);
  result = sub_21C3A870C();
  if (v8)
  {
    v10 = v7 + 56;
    do
    {
      if (*(_QWORD *)(v10 - 16))
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain();
      }
      v10 += 32;
      sub_21C3A7F50();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_21C2E74FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v5[72];

  sub_21C3A8700();
  sub_21C2E9A2C((uint64_t)v5, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass, &qword_25525B948);
  sub_21C2EA2C4((uint64_t)v5, *(_QWORD *)(v2 + *(int *)(a2 + 20)));
  sub_21C2EA2C4((uint64_t)v5, *(_QWORD *)(v2 + *(int *)(a2 + 24)));
  return sub_21C3A8724();
}

BOOL static MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t sub_21C2E75AC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C706D6F636E6F6ELL;
  else
    return 0x6E61696C706D6F63;
}

uint64_t sub_21C2E75F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F49A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2E7618()
{
  sub_21C2ED740();
  return sub_21C3A8754();
}

uint64_t sub_21C2E7640()
{
  sub_21C2ED740();
  return sub_21C3A8760();
}

uint64_t sub_21C2E7668@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_21C2E7694()
{
  sub_21C2ED7C8();
  return sub_21C3A8754();
}

uint64_t sub_21C2E76BC()
{
  sub_21C2ED7C8();
  return sub_21C3A8760();
}

uint64_t sub_21C2E76E4()
{
  sub_21C2ED784();
  return sub_21C3A8754();
}

uint64_t sub_21C2E770C()
{
  sub_21C2ED784();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B9C8);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B9D0);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B9D8);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED740();
  sub_21C3A8748();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_21C2ED784();
    sub_21C3A85A4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_21C2ED7C8();
    sub_21C3A85A4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B9F8);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA00);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA08);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED740();
  v11 = v33;
  sub_21C3A873C();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_21C3A8598();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_21C3A840C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
    *v21 = &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus;
    sub_21C3A8520();
    sub_21C3A8400();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_21C2ED784();
    sub_21C3A8514();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_21C2ED7C8();
    v22 = v6;
    sub_21C3A8514();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_21C2E7CA4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.init(from:)(a1, a2);
}

uint64_t sub_21C2E7CB8(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.encode(to:)(a1);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.nameComponents.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C2F50EC(v1, a1, &qword_25525BA10);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.portraitData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0) + 20);
  v2 = *(_QWORD *)v1;
  sub_21C2D1E80(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.ageAtLeastElements.getter()
{
  return sub_21C2E7D3C((void (*)(_QWORD))type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
}

uint64_t sub_21C2E7D3C(void (*a1)(_QWORD))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.age.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + *(int *)(type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0)
                            + 28));
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.dateOfBirth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  return sub_21C2F50EC(v1 + *(int *)(v3 + 32), a1, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.sex.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.address.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (uint64_t *)(v1
                 + *(int *)(type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0)
                          + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v13 = v3[8];
  v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_21C2ED80C(v4, v5);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.issuingAuthority.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1
                 + *(int *)(type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0)
                          + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_21C2ED86C(v4, v5);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.drivingPrivileges.getter()
{
  type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.aamvaDrivingPrivileges.getter()
{
  type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.documentNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + *(int *)(type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0)
                          + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.documentIssueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  return sub_21C2F50EC(v1 + *(int *)(v3 + 60), a1, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.documentExpirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  return sub_21C2F50EC(v1 + *(int *)(v3 + 64), a1, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.documentDHSComplianceStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 68));
  return result;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.init(nameComponents:portraitData:ageAtLeastElements:age:dateOfBirth:sex:address:issuingAuthority:drivingPrivileges:aamvaDrivingPrivileges:documentNumber:documentIssueDate:documentExpirationDate:documentDHSComplianceStatus:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, __int128 *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char *a18)
{
  char v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t result;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  char v43;

  v24 = *a8;
  v36 = a10[1];
  v37 = *a10;
  v34 = a10[3];
  v35 = a10[2];
  v25 = *((_QWORD *)a10 + 8);
  v26 = *((_QWORD *)a10 + 9);
  v40 = a11[1];
  v41 = *a11;
  v38 = *((_QWORD *)a11 + 5);
  v39 = *((_QWORD *)a11 + 4);
  v43 = *a18;
  sub_21C2F50A8(a1, a9, &qword_25525BA10);
  v27 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  v28 = (_QWORD *)(a9 + v27[5]);
  *v28 = a2;
  v28[1] = a3;
  *(_QWORD *)(a9 + v27[6]) = a4;
  v29 = a9 + v27[7];
  *(_QWORD *)v29 = a5;
  *(_BYTE *)(v29 + 8) = a6 & 1;
  sub_21C2F50A8(a7, a9 + v27[8], &qword_25525B8A0);
  *(_BYTE *)(a9 + v27[9]) = v24;
  v30 = a9 + v27[10];
  *(_OWORD *)v30 = v37;
  *(_OWORD *)(v30 + 16) = v36;
  *(_OWORD *)(v30 + 32) = v35;
  *(_OWORD *)(v30 + 48) = v34;
  *(_QWORD *)(v30 + 64) = v25;
  *(_QWORD *)(v30 + 72) = v26;
  v31 = a9 + v27[11];
  *(_OWORD *)v31 = v41;
  *(_OWORD *)(v31 + 16) = v40;
  *(_QWORD *)(v31 + 32) = v39;
  *(_QWORD *)(v31 + 40) = v38;
  *(_QWORD *)(a9 + v27[12]) = a12;
  *(_QWORD *)(a9 + v27[13]) = a13;
  v32 = (_QWORD *)(a9 + v27[14]);
  *v32 = a14;
  v32[1] = a15;
  sub_21C2F50A8(a16, a9 + v27[15], &qword_25525B8A0);
  result = sub_21C2F50A8(a17, a9 + v27[16], &qword_25525B8A0);
  *(_BYTE *)(a9 + v27[17]) = v43;
  return result;
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;

  v2 = v1;
  v4 = sub_21C3A7518();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v41 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v43 = (uint64_t)&v40 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v40 - v12;
  v14 = sub_21C3A75D8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2F50EC(v2, (uint64_t)v20, &qword_25525BA10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525BA18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC28]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  v21 = v42;
  v22 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  v23 = (uint64_t *)(v2 + v22[5]);
  v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    sub_21C3A8718();
  }
  else
  {
    v25 = *v23;
    sub_21C3A8718();
    sub_21C2D1E94(v25, v24);
    sub_21C3A7758();
    sub_21C2D2B34(v25, v24);
  }
  v26 = *(_QWORD *)(v2 + v22[6]);
  swift_bridgeObjectRetain();
  sub_21C2EA908(a1, v26);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v2 + v22[7] + 8) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    sub_21C3A8718();
    sub_21C3A870C();
  }
  sub_21C2F50EC(v2 + v22[8], (uint64_t)v13, &qword_25525B8A0);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v27(v13, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v6, v13, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  }
  if (*(_BYTE *)(v2 + v22[9]) == 5)
  {
    sub_21C3A8718();
  }
  else
  {
    sub_21C3A8718();
    sub_21C3A870C();
  }
  v28 = v2 + v22[10];
  v29 = *(_QWORD *)(v28 + 8);
  if (v29 == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    v44 = *(_QWORD *)v28;
    v45 = v29;
    v30 = *(_OWORD *)(v28 + 32);
    v46 = *(_OWORD *)(v28 + 16);
    v47 = v30;
    v31 = *(_OWORD *)(v28 + 64);
    v48 = *(_OWORD *)(v28 + 48);
    v49 = v31;
    sub_21C3A8718();
    MobileDriversLicenseDataResponseInternal.DocumentElements.Address.hash(into:)();
  }
  v32 = v2 + v22[11];
  v33 = *(_QWORD *)(v32 + 8);
  if (v33 == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    v44 = *(_QWORD *)v32;
    v45 = v33;
    v34 = *(_OWORD *)(v32 + 32);
    v46 = *(_OWORD *)(v32 + 16);
    v47 = v34;
    sub_21C3A8718();
    MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.hash(into:)();
  }
  v35 = *(_QWORD *)(v2 + v22[12]);
  swift_bridgeObjectRetain();
  sub_21C2EA3A4(a1, v35, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege);
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v2 + v22[13]);
  swift_bridgeObjectRetain();
  sub_21C2E9D64(a1, v36, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass, &qword_25525B948, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v22[14] + 8))
  {
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21C3A8718();
  }
  v37 = v43;
  sub_21C2F50EC(v2 + v22[15], v43, &qword_25525B8A0);
  if (v27((char *)v37, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v6, v37, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  }
  v38 = v41;
  sub_21C2F50EC(v2 + v22[16], v41, &qword_25525B8A0);
  if (v27((char *)v38, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v6, v38, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  }
  if (*(_BYTE *)(v2 + v22[17]) == 2)
    return sub_21C3A8718();
  sub_21C3A8718();
  return sub_21C3A870C();
}

uint64_t sub_21C2E8828(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C2E8868 + 4 * byte_21C3AACBC[a1]))(0x706D6F43656D616ELL, 0xEE0073746E656E6FLL);
}

uint64_t sub_21C2E8868()
{
  return 0x7469617274726F70;
}

unint64_t sub_21C2E8888()
{
  return 0xD000000000000012;
}

uint64_t sub_21C2E89B0()
{
  unsigned __int8 *v0;

  return sub_21C2E8828(*v0);
}

uint64_t sub_21C2E89B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C2F4ABC(a1, a2);
  *a3 = result;
  return result;
}

void sub_21C2E89DC(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_21C2E89E8()
{
  sub_21C2ED8AC();
  return sub_21C3A8754();
}

uint64_t sub_21C2E8A10()
{
  sub_21C2ED8AC();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 *v13;
  __int128 v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2ED8AC();
  sub_21C3A8748();
  LOBYTE(v16) = 0;
  sub_21C3A75D8();
  sub_21C2D1198((unint64_t *)&unk_25525BA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC20]);
  sub_21C3A85D4();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
    v16 = *(_OWORD *)(v3 + v9[5]);
    v21 = 1;
    sub_21C2D2684();
    sub_21C3A85D4();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + v9[6]);
    v21 = 2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525BA40);
    sub_21C2D2B8C(&qword_25525AF60, MEMORY[0x24BEE1770], MEMORY[0x24BEE1330], MEMORY[0x24BEE04C0]);
    sub_21C3A8610();
    LOBYTE(v16) = 3;
    sub_21C3A85C8();
    LOBYTE(v16) = 4;
    sub_21C3A7518();
    sub_21C2D1198(&qword_25525B8C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE00]);
    sub_21C3A85D4();
    LOBYTE(v16) = *(_BYTE *)(v3 + v9[9]);
    v21 = 5;
    sub_21C2ED8F0();
    sub_21C3A85D4();
    v10 = (__int128 *)(v3 + v9[10]);
    v11 = v10[1];
    v16 = *v10;
    v17 = v11;
    v12 = v10[3];
    v18 = v10[2];
    v19 = v12;
    v20 = v10[4];
    v21 = 6;
    sub_21C2ED934();
    sub_21C3A85D4();
    v13 = (__int128 *)(v3 + v9[11]);
    v14 = v13[1];
    v16 = *v13;
    v17 = v14;
    v18 = v13[2];
    v21 = 7;
    sub_21C2ED978();
    sub_21C3A85D4();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + v9[12]);
    v21 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA68);
    sub_21C2EDBF0(&qword_25525BA70, &qword_25525BA78, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege, MEMORY[0x24BEE12A0]);
    sub_21C3A8610();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + v9[13]);
    v21 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA80);
    sub_21C2ED9BC(&qword_25525BA88, &qword_25525BA90, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege, MEMORY[0x24BEE12A0]);
    sub_21C3A8610();
    LOBYTE(v16) = 10;
    sub_21C3A85B0();
    LOBYTE(v16) = 11;
    sub_21C3A85D4();
    LOBYTE(v16) = 12;
    sub_21C3A85D4();
    LOBYTE(v16) = *(_BYTE *)(v3 + v9[17]);
    v21 = 13;
    sub_21C2EDA40();
    sub_21C3A85D4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.hashValue.getter()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileDriversLicenseDataResponseInternal.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataResponseInternal.DocumentElements.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  int *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  int *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  int v61;
  char v62;

  v49 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v47 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v47 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  MEMORY[0x24BDAC7A8](v13);
  v53 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BAA0);
  v15 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v17 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  MEMORY[0x24BDAC7A8](v55);
  v54 = (uint64_t)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_21C2ED8AC();
  v50 = v17;
  sub_21C3A873C();
  if (v2)
  {
    v53 = v2;
    LODWORD(v50) = 0;
    v23 = v54;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    v25 = v55;
    v26 = 0;
    v61 = 0;
    v27 = 0;
    LODWORD(v51) = 0;
    if ((_DWORD)v50)
      goto LABEL_11;
LABEL_5:
    if (!v26)
      goto LABEL_12;
LABEL_6:
    result = swift_bridgeObjectRelease();
    if ((v61 & 1) != 0)
      goto LABEL_13;
LABEL_7:
    if (!v27)
      goto LABEL_14;
    goto LABEL_8;
  }
  v20 = (uint64_t)v12;
  v48 = v7;
  v21 = v15;
  sub_21C3A75D8();
  LOBYTE(v56) = 0;
  sub_21C2D1198(&qword_25525BAA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC38]);
  v22 = v53;
  sub_21C3A8550();
  v28 = (uint64_t)v22;
  v29 = v54;
  sub_21C2F50A8(v28, v54, &qword_25525BA10);
  v62 = 1;
  sub_21C2D2AF0();
  sub_21C3A8550();
  v30 = v55;
  *(_OWORD *)(v29 + v55[5]) = v56;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525BA40);
  v62 = 2;
  sub_21C2D2B8C(&qword_25525AF78, MEMORY[0x24BEE1798], MEMORY[0x24BEE1348], MEMORY[0x24BEE04E0]);
  sub_21C3A858C();
  *(_QWORD *)(v29 + v30[6]) = v56;
  LOBYTE(v56) = 3;
  v31 = sub_21C3A8544();
  v32 = v29 + v30[7];
  *(_QWORD *)v32 = v31;
  *(_BYTE *)(v32 + 8) = v33 & 1;
  v47[1] = sub_21C3A7518();
  LOBYTE(v56) = 4;
  v34 = sub_21C2D1198(&qword_25525B8E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE20]);
  sub_21C3A8550();
  v47[0] = v34;
  sub_21C2F50A8(v20, v29 + v30[8], &qword_25525B8A0);
  v62 = 5;
  sub_21C2EDB24();
  sub_21C3A8550();
  *(_BYTE *)(v29 + v30[9]) = v56;
  v62 = 6;
  sub_21C2EDB68();
  sub_21C3A8550();
  v35 = (_OWORD *)(v29 + v30[10]);
  v36 = v57;
  *v35 = v56;
  v35[1] = v36;
  v37 = v59;
  v35[2] = v58;
  v35[3] = v37;
  v35[4] = v60;
  v62 = 7;
  sub_21C2EDBAC();
  sub_21C3A8550();
  v38 = (_OWORD *)(v29 + v30[11]);
  v39 = v57;
  *v38 = v56;
  v38[1] = v39;
  v38[2] = v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA68);
  v62 = 8;
  sub_21C2EDBF0(&qword_25525BAC8, &qword_25525BAD0, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege, MEMORY[0x24BEE12D0]);
  sub_21C3A858C();
  *(_QWORD *)(v29 + v55[12]) = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA80);
  v62 = 9;
  sub_21C2ED9BC(&qword_25525BAD8, &qword_25525BAE0, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege, MEMORY[0x24BEE12D0]);
  sub_21C3A858C();
  v53 = 0;
  *(_QWORD *)(v54 + v55[13]) = v56;
  LOBYTE(v56) = 10;
  v40 = sub_21C3A852C();
  v61 = 1;
  v53 = 0;
  v42 = (uint64_t *)(v54 + v55[14]);
  *v42 = v40;
  v42[1] = v41;
  LOBYTE(v56) = 11;
  v43 = v53;
  sub_21C3A8550();
  v53 = v43;
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v50, v51);
    v27 = 0;
    LODWORD(v51) = 0;
  }
  else
  {
    sub_21C2F50A8((uint64_t)v10, v54 + v55[15], &qword_25525B8A0);
    LOBYTE(v56) = 12;
    v44 = v53;
    sub_21C3A8550();
    v53 = v44;
    if (v44)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v50, v51);
      LODWORD(v51) = 0;
      v27 = 1;
    }
    else
    {
      sub_21C2F50A8((uint64_t)v48, v54 + v55[16], &qword_25525B8A0);
      v62 = 13;
      sub_21C2EDC74();
      v45 = v53;
      sub_21C3A8550();
      v53 = v45;
      if (!v45)
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v50, v51);
        v46 = v54;
        *(_BYTE *)(v54 + v55[17]) = v56;
        sub_21C2ED3E0(v46, v49, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
        return sub_21C2ED424(v46, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements);
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v50, v51);
      v27 = 1;
      LODWORD(v51) = 1;
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  v23 = v54;
  sub_21C2D775C(v54, &qword_25525BA10);
  v26 = 1;
  LODWORD(v50) = 1;
  v25 = v55;
  sub_21C2D2B34(*(_QWORD *)(v23 + v55[5]), *(_QWORD *)(v23 + v55[5] + 8));
  swift_bridgeObjectRelease();
  sub_21C2D775C(v23 + v25[8], &qword_25525B8A0);
  sub_21C2EDAC4(*(_QWORD *)(v23 + v25[10]), *(_QWORD *)(v23 + v25[10] + 8));
  result = sub_21C2EDA84(*(_QWORD *)(v23 + v25[11]), *(_QWORD *)(v23 + v25[11] + 8));
  if ((v50 & 1) == 0)
    goto LABEL_5;
LABEL_11:
  result = swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    goto LABEL_6;
LABEL_12:
  if (!v61)
    goto LABEL_7;
LABEL_13:
  result = swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
LABEL_14:
    if (!(_DWORD)v51)
      return result;
    return sub_21C2D775C(v23 + v25[16], &qword_25525B8A0);
  }
LABEL_8:
  result = sub_21C2D775C(v23 + v25[15], &qword_25525B8A0);
  if ((v51 & 1) == 0)
    return result;
  return sub_21C2D775C(v23 + v25[16], &qword_25525B8A0);
}

uint64_t sub_21C2E9974@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.init(from:)(a1, a2);
}

uint64_t sub_21C2E9988(_QWORD *a1)
{
  return MobileDriversLicenseDataResponseInternal.DocumentElements.encode(to:)(a1);
}

uint64_t sub_21C2E999C()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileDriversLicenseDataResponseInternal.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

uint64_t sub_21C2E99DC()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileDriversLicenseDataResponseInternal.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

uint64_t sub_21C2E9A18(uint64_t a1)
{
  return sub_21C2E9A2C(a1, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass, &qword_25525BFB0);
}

uint64_t sub_21C2E9A2C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v22)(_QWORD);
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  char *v30;

  v6 = sub_21C3A7518();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v30 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v29 = (uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - v12;
  v28 = a2;
  v14 = a2(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v27 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2F50EC(v3, (uint64_t)v20, a3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
    return sub_21C3A8718();
  v22 = v28;
  sub_21C2F5064((uint64_t)v20, (uint64_t)v17, v28);
  sub_21C3A8718();
  sub_21C3A7F50();
  sub_21C3A7F50();
  sub_21C2F50EC((uint64_t)&v17[*(int *)(v14 + 24)], (uint64_t)v13, &qword_25525B8A0);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v23(v13, 1, v6) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v30, v13, v6);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v24, v6);
  }
  v25 = v29;
  sub_21C2F50EC((uint64_t)&v17[*(int *)(v14 + 28)], v29, &qword_25525B8A0);
  if (v23((char *)v25, 1, v6) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    v26 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v30, v25, v6);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v6);
  }
  return sub_21C2ED424((uint64_t)v17, v22);
}

uint64_t sub_21C2E9D48(uint64_t a1, uint64_t a2)
{
  return sub_21C2E9D64(a1, a2, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass, &qword_25525BFB0, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
}

uint64_t sub_21C2E9D64(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD);
  uint64_t (*v49)(_QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;

  v42 = sub_21C3A7518();
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v40 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v39 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v41 = (uint64_t)&v39 - v14;
  v49 = a3;
  v15 = a3(0);
  v51 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v52 = a4;
  v53 = (uint64_t)&v39 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a5(0);
  v20 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v22 = (char *)&v39 - v21;
  v23 = *(_QWORD *)(a2 + 16);
  result = sub_21C3A870C();
  v50 = v23;
  if (v23)
  {
    v25 = 0;
    v44 = a2 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v45 = v19;
    v43 = *(_QWORD *)(v20 + 72);
    v47 = v9;
    v48 = a5;
    v46 = v15;
    do
    {
      sub_21C2ED3E0(v44 + v43 * v25, (uint64_t)v22, a5);
      sub_21C2F50EC((uint64_t)v22, (uint64_t)v19, v52);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v19, 1, v15) == 1)
      {
        sub_21C3A8718();
      }
      else
      {
        v26 = v53;
        sub_21C2F5064((uint64_t)v19, v53, v49);
        sub_21C3A8718();
        sub_21C3A7F50();
        sub_21C3A7F50();
        v27 = v41;
        sub_21C2F50EC(v26 + *(int *)(v15 + 24), v41, &qword_25525B8A0);
        v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
        v29 = v42;
        if (v28(v27, 1, v42) == 1)
        {
          sub_21C3A8718();
        }
        else
        {
          v30 = v40;
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v40, v27, v29);
          sub_21C3A8718();
          sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
          sub_21C3A7E60();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v30, v29);
        }
        v31 = v39;
        sub_21C2F50EC(v53 + *(int *)(v15 + 28), v39, &qword_25525B8A0);
        if (v28(v31, 1, v29) == 1)
        {
          sub_21C3A8718();
        }
        else
        {
          v32 = v40;
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v40, v31, v29);
          sub_21C3A8718();
          sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
          sub_21C3A7E60();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v32, v29);
        }
        sub_21C2ED424(v53, v49);
      }
      v33 = *(_QWORD *)&v22[*(int *)(v54 + 20)];
      sub_21C3A870C();
      v34 = *(_QWORD *)(v33 + 16);
      if (v34)
      {
        v35 = v33 + 56;
        do
        {
          if (*(_QWORD *)(v35 - 16))
          {
            sub_21C3A8718();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_21C3A7F50();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_21C3A8718();
            swift_bridgeObjectRetain();
          }
          v35 += 32;
          sub_21C3A7F50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v34;
        }
        while (v34);
      }
      v36 = *(_QWORD *)&v22[*(int *)(v54 + 24)];
      sub_21C3A870C();
      v37 = *(_QWORD *)(v36 + 16);
      if (v37)
      {
        v38 = v36 + 56;
        do
        {
          if (*(_QWORD *)(v38 - 16))
          {
            sub_21C3A8718();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_21C3A7F50();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_21C3A8718();
            swift_bridgeObjectRetain();
          }
          v38 += 32;
          sub_21C3A7F50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v37;
        }
        while (v37);
      }
      ++v25;
      a5 = v48;
      result = sub_21C2ED424((uint64_t)v22, v48);
      v15 = v46;
      v9 = v47;
      v19 = v45;
    }
    while (v25 != v50);
  }
  return result;
}

uint64_t sub_21C2EA2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_21C3A870C();
  if (v3)
  {
    v5 = a2 + 56;
    do
    {
      if (*(_QWORD *)(v5 - 16))
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain();
      }
      v5 += 32;
      sub_21C3A7F50();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_21C2EA398(uint64_t a1, uint64_t a2)
{
  return sub_21C2EA3A4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege);
}

uint64_t sub_21C2EA3A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v5 = sub_21C3A7518();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v39 = (uint64_t)&v29 - v12;
  v38 = a3(0);
  v13 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v15 = (char *)&v29 - v14;
  v16 = *(_QWORD *)(a2 + 16);
  result = sub_21C3A870C();
  v37 = v16;
  if (v16)
  {
    v18 = 0;
    v31 = a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v32 = v11;
    v30 = *(_QWORD *)(v13 + 72);
    v34 = v5;
    v35 = a3;
    v33 = v6;
    v40 = v15;
    while (1)
    {
      sub_21C2ED3E0(v31 + v30 * v18, (uint64_t)v15, a3);
      sub_21C3A7F50();
      v20 = v38;
      v19 = v39;
      sub_21C2F50EC((uint64_t)&v15[*(int *)(v38 + 20)], v39, &qword_25525B8A0);
      v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      if (v21(v19, 1, v5) == 1)
      {
        sub_21C3A8718();
      }
      else
      {
        v22 = v36;
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v36, v19, v5);
        sub_21C3A8718();
        sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
        sub_21C3A7E60();
        v15 = v40;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v22, v5);
      }
      sub_21C2F50EC((uint64_t)&v15[*(int *)(v20 + 24)], (uint64_t)v11, &qword_25525B8A0);
      if (v21((uint64_t)v11, 1, v5) == 1)
      {
        sub_21C3A8718();
      }
      else
      {
        v23 = v36;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v36, v11, v5);
        sub_21C3A8718();
        sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
        sub_21C3A7E60();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v23, v5);
      }
      v24 = *(_QWORD *)&v15[*(int *)(v20 + 28)];
      sub_21C3A870C();
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
        break;
LABEL_3:
      ++v18;
      v15 = v40;
      a3 = v35;
      result = sub_21C2ED424((uint64_t)v40, v35);
      v6 = v33;
      v5 = v34;
      v11 = v32;
      if (v18 == v37)
        return result;
    }
    v26 = v24 + 40;
    while (1)
    {
      v27 = *(_QWORD *)(v26 + 16);
      v28 = *(_QWORD *)(v26 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_21C3A7F50();
      swift_bridgeObjectRelease();
      if (v27)
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        swift_bridgeObjectRelease();
        if (!v28)
          goto LABEL_18;
      }
      else
      {
        sub_21C3A8718();
        if (!v28)
        {
LABEL_18:
          sub_21C3A8718();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
      }
      sub_21C3A8718();
      swift_bridgeObjectRetain();
      sub_21C3A7F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_13:
      v26 += 48;
      if (!--v25)
        goto LABEL_3;
    }
  }
  return result;
}

uint64_t sub_21C2EA7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_21C3A870C();
  if (v3)
  {
    v5 = a2 + 40;
    do
    {
      v6 = *(_QWORD *)(v5 + 16);
      v7 = *(_QWORD *)(v5 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_21C3A7F50();
      swift_bridgeObjectRelease();
      if (v6)
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        swift_bridgeObjectRelease();
        if (v7)
          goto LABEL_9;
      }
      else
      {
        sub_21C3A8718();
        if (v7)
        {
LABEL_9:
          sub_21C3A8718();
          swift_bridgeObjectRetain();
          sub_21C3A7F50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease_n();
          goto LABEL_4;
        }
      }
      sub_21C3A8718();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
LABEL_4:
      v5 += 48;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_21C2EA908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v2 = 0;
  v3 = 0;
  v4 = a2 + 64;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v8)
      return sub_21C3A870C();
    v11 = *(_QWORD *)(v4 + 8 * v10);
    ++v3;
    if (!v11)
    {
      v3 = v10 + 1;
      if (v10 + 1 >= v8)
        return sub_21C3A870C();
      v11 = *(_QWORD *)(v4 + 8 * v3);
      if (!v11)
        break;
    }
LABEL_18:
    v7 = (v11 - 1) & v11;
LABEL_5:
    sub_21C3A870C();
    sub_21C3A8718();
    result = sub_21C3A8724();
    v2 ^= result;
  }
  v12 = v10 + 2;
  if (v12 >= v8)
    return sub_21C3A870C();
  v11 = *(_QWORD *)(v4 + 8 * v12);
  if (v11)
  {
    v3 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v3 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v3 >= v8)
      return sub_21C3A870C();
    v11 = *(_QWORD *)(v4 + 8 * v3);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV16DrivingPrivilegeV4CodeV2eeoiySbAI_AItFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v7 = a2[2];
  v6 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_21C3A864C(), result = 0, (v10 & 1) != 0))
  {
    if (v4)
    {
      if (!v6)
        return 0;
      if (v2 != v7 || v4 != v6)
      {
        v12 = sub_21C3A864C();
        result = 0;
        if ((v12 & 1) == 0)
          return result;
      }
    }
    else if (v6)
    {
      return 0;
    }
    if (v5)
    {
      if (v8 && (v3 == v9 && v5 == v8 || (sub_21C3A864C() & 1) != 0))
        return 1;
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV16IssuingAuthorityV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v10 = a2[4];
  v12 = a2[5];
  if (!v3)
  {
    if (v8)
      return 0;
    goto LABEL_8;
  }
  if (!v8)
    return 0;
  if (*a1 == *a2 && v3 == v8 || (v13 = sub_21C3A864C(), result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (!v11)
        return 0;
      if (v4 != v9 || v6 != v11)
      {
        v15 = sub_21C3A864C();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v7)
    {
      if (v12 && (v5 == v10 && v7 == v12 || (sub_21C3A864C() & 1) != 0))
        return 1;
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_21C2EAC8C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (!v6)
    {
LABEL_11:
      if (v4 == v7 && v5 == v8)
        return 1;
      else
        return sub_21C3A864C();
    }
    return 0;
  }
  if (!v6)
    return 0;
  if (*a1 == *a2 && v3 == v6)
    goto LABEL_11;
  v10 = sub_21C3A864C();
  result = 0;
  if ((v10 & 1) != 0)
    goto LABEL_11;
  return result;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV7AddressV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v10 = a1[7];
  v9 = a1[8];
  v11 = a1[9];
  v12 = a2[1];
  v13 = a2[2];
  v15 = a2[3];
  v14 = a2[4];
  v17 = a2[5];
  v16 = a2[6];
  v18 = a2[7];
  v19 = a2[8];
  v20 = a2[9];
  if (!v3)
  {
    if (v12)
      return 0;
    goto LABEL_8;
  }
  if (!v12)
    return 0;
  if (*a1 == *a2 && v3 == v12)
    goto LABEL_8;
  v49 = a1[7];
  v51 = a2[7];
  v47 = a2[8];
  v48 = a1[6];
  v45 = a1[9];
  v46 = a2[9];
  v21 = a1[8];
  v22 = a2[6];
  v23 = a1[4];
  v24 = a1[5];
  v25 = a2[5];
  v26 = a2[4];
  v27 = a2[2];
  v28 = sub_21C3A864C();
  v13 = v27;
  v14 = v26;
  v17 = v25;
  v7 = v24;
  v5 = v23;
  v16 = v22;
  v9 = v21;
  v11 = v45;
  v20 = v46;
  v19 = v47;
  v8 = v48;
  v10 = v49;
  v18 = v51;
  v29 = v28;
  result = 0;
  if ((v29 & 1) != 0)
  {
LABEL_8:
    if (v6)
    {
      if (!v15)
        return 0;
      if (v4 != v13 || v6 != v15)
      {
        v50 = v9;
        v52 = v17;
        v31 = v16;
        v32 = v5;
        v33 = v7;
        v34 = v14;
        v35 = sub_21C3A864C();
        v14 = v34;
        v9 = v50;
        v17 = v52;
        v7 = v33;
        v5 = v32;
        v16 = v31;
        v36 = v35;
        result = 0;
        if ((v36 & 1) == 0)
          return result;
      }
    }
    else if (v15)
    {
      return 0;
    }
    if (v7)
    {
      if (!v17)
        return 0;
      if (v5 != v14 || v7 != v17)
      {
        v37 = v18;
        v38 = v9;
        v39 = v16;
        v40 = sub_21C3A864C();
        v16 = v39;
        v9 = v38;
        v18 = v37;
        v41 = v40;
        result = 0;
        if ((v41 & 1) == 0)
          return result;
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v10)
    {
      if (!v18)
        return 0;
      if (v8 != v16 || v10 != v18)
      {
        v42 = v9;
        v43 = sub_21C3A864C();
        v9 = v42;
        v44 = v43;
        result = 0;
        if ((v44 & 1) == 0)
          return result;
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v11)
    {
      if (v20 && (v9 == v19 && v11 == v20 || (sub_21C3A864C() & 1) != 0))
        return 1;
    }
    else if (!v20)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  _QWORD *v61;
  char v62;
  _QWORD *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  int v78;
  int v79;
  _BOOL8 result;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int (*v135)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  void (*v142)(char *, uint64_t);
  int *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  void (*v153)(char *, uint64_t);
  uint64_t v154;
  int v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  int *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  v175 = a2;
  v171 = sub_21C3A7518();
  v169 = *(_QWORD *)(v171 - 8);
  MEMORY[0x24BDAC7A8](v171);
  v166 = (char *)&v157 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB8);
  v4 = MEMORY[0x24BDAC7A8](v168);
  v161 = (uint64_t)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v163 = (uint64_t)&v157 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v170 = (char *)&v157 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v158 = (uint64_t)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v159 = (uint64_t)&v157 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v160 = (uint64_t)&v157 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v162 = (uint64_t)&v157 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v164 = (uint64_t)&v157 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v165 = (uint64_t)&v157 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v167 = (uint64_t)&v157 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v172 = (uint64_t)&v157 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v173 = (int *)((char *)&v157 - v26);
  v27 = sub_21C3A75D8();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v157 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFC0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v157 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v157 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v35);
  v40 = (char *)&v157 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v157 - v41;
  v174 = a1;
  sub_21C2F50EC(a1, (uint64_t)&v157 - v41, &qword_25525BA10);
  sub_21C2F50EC(v175, (uint64_t)v40, &qword_25525BA10);
  v43 = (uint64_t)&v33[*(int *)(v31 + 48)];
  sub_21C2F50EC((uint64_t)v42, (uint64_t)v33, &qword_25525BA10);
  sub_21C2F50EC((uint64_t)v40, v43, &qword_25525BA10);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v44((uint64_t)v33, 1, v27) == 1)
  {
    sub_21C2D775C((uint64_t)v40, &qword_25525BA10);
    sub_21C2D775C((uint64_t)v42, &qword_25525BA10);
    if (v44(v43, 1, v27) == 1)
    {
      sub_21C2D775C((uint64_t)v33, &qword_25525BA10);
      goto LABEL_9;
    }
LABEL_6:
    v45 = &qword_25525BFC0;
    v46 = (uint64_t)v33;
    goto LABEL_7;
  }
  sub_21C2F50EC((uint64_t)v33, (uint64_t)v37, &qword_25525BA10);
  if (v44(v43, 1, v27) == 1)
  {
    sub_21C2D775C((uint64_t)v40, &qword_25525BA10);
    sub_21C2D775C((uint64_t)v42, &qword_25525BA10);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v37, v27);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v30, v43, v27);
  sub_21C2D1198(&qword_25525BFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC30]);
  v47 = sub_21C3A7EA8();
  v48 = *(void (**)(char *, uint64_t))(v28 + 8);
  v48(v30, v27);
  sub_21C2D775C((uint64_t)v40, &qword_25525BA10);
  sub_21C2D775C((uint64_t)v42, &qword_25525BA10);
  v48(v37, v27);
  sub_21C2D775C((uint64_t)v33, &qword_25525BA10);
  if ((v47 & 1) == 0)
    return 0;
LABEL_9:
  v49 = (int *)type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(0);
  v50 = v49[5];
  v51 = v174;
  v52 = *(_QWORD *)(v174 + v50);
  v53 = *(_QWORD *)(v174 + v50 + 8);
  v54 = v175;
  v55 = (uint64_t *)(v175 + v50);
  v56 = *v55;
  v57 = v55[1];
  if (v53 >> 60 == 15)
  {
    if (v57 >> 60 == 15)
      goto LABEL_15;
LABEL_13:
    sub_21C2D1E80(v52, v53);
    sub_21C2D1E80(v56, v57);
    sub_21C2D2B34(v52, v53);
    sub_21C2D2B34(v56, v57);
    return 0;
  }
  if (v57 >> 60 == 15)
    goto LABEL_13;
  sub_21C2D1E80(v52, v53);
  sub_21C2D1E80(v56, v57);
  sub_21C317958(v52, v53);
  v59 = v58;
  sub_21C2D2B34(v56, v57);
  sub_21C2D2B34(v52, v53);
  if ((v59 & 1) == 0)
    return 0;
LABEL_15:
  if ((sub_21C3A3C64(*(_QWORD *)(v51 + v49[6]), *(_QWORD *)(v54 + v49[6])) & 1) == 0)
    return 0;
  v60 = v49[7];
  v61 = (_QWORD *)(v51 + v60);
  v62 = *(_BYTE *)(v51 + v60 + 8);
  v63 = (_QWORD *)(v54 + v60);
  v64 = *(unsigned __int8 *)(v54 + v60 + 8);
  if ((v62 & 1) != 0)
  {
    v65 = v171;
    v66 = (uint64_t)v170;
    v67 = v173;
    v68 = v172;
    if (!v64)
      return 0;
  }
  else
  {
    if (*v61 != *v63)
      LOBYTE(v64) = 1;
    v65 = v171;
    v66 = (uint64_t)v170;
    v67 = v173;
    v68 = v172;
    if ((v64 & 1) != 0)
      return 0;
  }
  sub_21C2F50EC(v51 + v49[8], (uint64_t)v67, &qword_25525B8A0);
  sub_21C2F50EC(v54 + v49[8], v68, &qword_25525B8A0);
  v69 = v66 + *(int *)(v168 + 48);
  sub_21C2F50EC((uint64_t)v67, v66, &qword_25525B8A0);
  sub_21C2F50EC(v68, v69, &qword_25525B8A0);
  v70 = *(char **)(v169 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v70)(v66, 1, v65) == 1)
  {
    sub_21C2D775C(v68, &qword_25525B8A0);
    sub_21C2D775C((uint64_t)v67, &qword_25525B8A0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v70)(v69, 1, v65) == 1)
    {
      v170 = v70;
      sub_21C2D775C(v66, &qword_25525B8A0);
      goto LABEL_29;
    }
LABEL_27:
    v45 = &qword_25525BFB8;
    v46 = v66;
    goto LABEL_7;
  }
  v71 = v167;
  sub_21C2F50EC(v66, v167, &qword_25525B8A0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v70)(v69, 1, v65) == 1)
  {
    sub_21C2D775C(v172, &qword_25525B8A0);
    sub_21C2D775C((uint64_t)v173, &qword_25525B8A0);
    (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v71, v65);
    goto LABEL_27;
  }
  v170 = v70;
  v72 = v66;
  v73 = v169;
  v74 = v166;
  (*(void (**)(char *, uint64_t, uint64_t))(v169 + 32))(v166, v69, v65);
  sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
  v75 = sub_21C3A7EA8();
  v76 = *(void (**)(char *, uint64_t))(v73 + 8);
  v76(v74, v65);
  sub_21C2D775C(v172, &qword_25525B8A0);
  sub_21C2D775C((uint64_t)v173, &qword_25525B8A0);
  v76((char *)v71, v65);
  sub_21C2D775C(v72, &qword_25525B8A0);
  if ((v75 & 1) == 0)
    return 0;
LABEL_29:
  v77 = v49[9];
  v78 = *(unsigned __int8 *)(v51 + v77);
  v79 = *(unsigned __int8 *)(v54 + v77);
  if (v78 == 5)
  {
    if (v79 != 5)
      return 0;
  }
  else
  {
    result = 0;
    if (v79 == 5 || v78 != v79)
      return result;
  }
  v173 = v49;
  v81 = v49[10];
  v82 = (_QWORD *)(v51 + v81);
  v83 = *(_QWORD *)(v51 + v81);
  v84 = *(_QWORD *)(v51 + v81 + 8);
  v86 = v82[2];
  v85 = v82[3];
  v88 = v82[4];
  v87 = v82[5];
  v90 = v82[6];
  v89 = v82[7];
  v91 = v82[8];
  v92 = v82[9];
  v93 = (uint64_t *)(v54 + v81);
  v94 = *v93;
  v95 = v93[1];
  v96 = v93[2];
  v97 = v93[3];
  v98 = (char *)v93[4];
  v99 = v93[5];
  v100 = (int *)v93[6];
  v101 = v93[7];
  v102 = v93[8];
  v103 = v93[9];
  if (v84 == 1)
  {
    if (v95 == 1)
      goto LABEL_41;
LABEL_39:
    v186 = v83;
    v187 = v84;
    v188 = v86;
    v189 = v85;
    v190 = v88;
    v191 = v87;
    v192 = v90;
    v193 = v89;
    v194 = v91;
    v195 = v92;
    v196 = v94;
    v197 = v95;
    v198 = v96;
    v199 = v97;
    v200 = v98;
    v201 = v99;
    v202 = v100;
    v203 = v101;
    v204 = v102;
    v205 = v103;
    sub_21C2ED80C(v94, v95);
    sub_21C2F5130(&v186);
    return 0;
  }
  v186 = v83;
  v187 = v84;
  v188 = v86;
  v189 = v85;
  v190 = v88;
  v191 = v87;
  v192 = v90;
  v193 = v89;
  v194 = v91;
  v195 = v92;
  v157 = v89;
  v172 = v87;
  v167 = v85;
  if (v95 == 1)
  {
    v166 = (char *)v94;
    v174 = v101;
    v173 = v100;
    v171 = v99;
    v170 = v98;
    v169 = v97;
    v168 = v96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v175 = v92;
    v104 = v157;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v94 = (uint64_t)v166;
    v96 = v168;
    v97 = v169;
    v98 = v170;
    v99 = v171;
    v100 = v173;
    v101 = v174;
    v89 = v104;
    v92 = v175;
    v87 = v172;
    v85 = v167;
    goto LABEL_39;
  }
  v176 = v94;
  v177 = v95;
  v178 = v96;
  v179 = v97;
  v180 = v98;
  v181 = v99;
  v182 = v100;
  v183 = v101;
  v184 = v102;
  v185 = v103;
  v105 = _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV7AddressV2eeoiySbAG_AGtFZ_0(&v186, &v176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v105 & 1) == 0)
    return 0;
LABEL_41:
  v106 = v173[11];
  v107 = *(_QWORD *)(v174 + v106);
  v108 = *(_QWORD *)(v174 + v106 + 8);
  v109 = *(_QWORD *)(v174 + v106 + 16);
  v110 = *(_QWORD *)(v174 + v106 + 24);
  v111 = *(_QWORD *)(v174 + v106 + 32);
  v112 = *(_QWORD *)(v174 + v106 + 40);
  v113 = (uint64_t *)(v175 + v106);
  v115 = *v113;
  v114 = v113[1];
  v116 = v113[2];
  v117 = v113[3];
  v119 = v113[4];
  v118 = v113[5];
  if (v108 == 1)
  {
    v157 = v111;
    v167 = v109;
    v172 = v107;
    if (v114 == 1)
      goto LABEL_48;
LABEL_46:
    sub_21C2ED86C(v115, v114);
    sub_21C2EDA84(v172, v108);
    sub_21C2EDA84(v115, v114);
    return 0;
  }
  v186 = v107;
  v187 = v108;
  v188 = v109;
  v189 = v110;
  v190 = v111;
  v191 = v112;
  if (v114 == 1)
  {
    v157 = v111;
    v167 = v109;
    v172 = v107;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_46;
  }
  v176 = v115;
  v177 = v114;
  v178 = v116;
  v179 = v117;
  v180 = (char *)v119;
  v181 = v118;
  v120 = _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV16IssuingAuthorityV2eeoiySbAG_AGtFZ_0(&v186, &v176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v120 & 1) == 0)
    return 0;
LABEL_48:
  v121 = v173;
  v122 = v174;
  v123 = v175;
  if ((sub_21C311738(*(_QWORD *)(v174 + v173[12]), *(_QWORD *)(v175 + v173[12])) & 1) == 0
    || (sub_21C31174C(*(_QWORD *)(v122 + v121[13]), *(_QWORD *)(v123 + v121[13])) & 1) == 0)
  {
    return 0;
  }
  v124 = v121[14];
  v125 = (_QWORD *)(v122 + v124);
  v126 = *(_QWORD *)(v122 + v124 + 8);
  v127 = (_QWORD *)(v123 + v124);
  v128 = v127[1];
  if (!v126)
  {
    v129 = v171;
    if (v128)
      return 0;
    goto LABEL_59;
  }
  if (!v128)
    return 0;
  v129 = v171;
  if (*v125 == *v127 && v126 == v128 || (v130 = sub_21C3A864C(), result = 0, (v130 & 1) != 0))
  {
LABEL_59:
    v131 = v165;
    sub_21C2F50EC(v122 + v121[15], v165, &qword_25525B8A0);
    v132 = v164;
    sub_21C2F50EC(v123 + v121[15], v164, &qword_25525B8A0);
    v133 = v163;
    v134 = v163 + *(int *)(v168 + 48);
    sub_21C2F50EC(v131, v163, &qword_25525B8A0);
    sub_21C2F50EC(v132, v134, &qword_25525B8A0);
    v135 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v170;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v170)(v133, 1, v129) == 1)
    {
      sub_21C2D775C(v164, &qword_25525B8A0);
      sub_21C2D775C(v165, &qword_25525B8A0);
      v136 = v135;
      if (v135(v134, 1, v129) == 1)
      {
        sub_21C2D775C(v133, &qword_25525B8A0);
LABEL_66:
        v143 = v173;
        v144 = v160;
        sub_21C2F50EC(v174 + v173[16], v160, &qword_25525B8A0);
        v145 = v159;
        sub_21C2F50EC(v175 + v143[16], v159, &qword_25525B8A0);
        v146 = v161;
        v147 = v161 + *(int *)(v168 + 48);
        sub_21C2F50EC(v144, v161, &qword_25525B8A0);
        sub_21C2F50EC(v145, v147, &qword_25525B8A0);
        if (v136(v146, 1, v171) == 1)
        {
          sub_21C2D775C(v159, &qword_25525B8A0);
          sub_21C2D775C(v160, &qword_25525B8A0);
          if (v136(v147, 1, v171) == 1)
          {
            sub_21C2D775C(v161, &qword_25525B8A0);
LABEL_73:
            v154 = v173[17];
            v155 = *(unsigned __int8 *)(v174 + v154);
            v156 = *(unsigned __int8 *)(v175 + v154);
            if (v155 != 2)
              return v156 != 2 && ((v156 ^ v155) & 1) == 0;
            return v156 == 2;
          }
        }
        else
        {
          sub_21C2F50EC(v161, v158, &qword_25525B8A0);
          if (v136(v147, 1, v171) != 1)
          {
            v148 = v169;
            v149 = v166;
            v150 = v171;
            (*(void (**)(char *, uint64_t, uint64_t))(v169 + 32))(v166, v147, v171);
            sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
            v151 = v158;
            v152 = sub_21C3A7EA8();
            v153 = *(void (**)(char *, uint64_t))(v148 + 8);
            v153(v149, v150);
            sub_21C2D775C(v159, &qword_25525B8A0);
            sub_21C2D775C(v160, &qword_25525B8A0);
            v153((char *)v151, v150);
            sub_21C2D775C(v161, &qword_25525B8A0);
            if ((v152 & 1) == 0)
              return 0;
            goto LABEL_73;
          }
          sub_21C2D775C(v159, &qword_25525B8A0);
          sub_21C2D775C(v160, &qword_25525B8A0);
          (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v158, v171);
        }
        v45 = &qword_25525BFB8;
        v46 = v161;
LABEL_7:
        sub_21C2D775C(v46, v45);
        return 0;
      }
    }
    else
    {
      sub_21C2F50EC(v133, v162, &qword_25525B8A0);
      v136 = v135;
      if (v135(v134, 1, v129) != 1)
      {
        v137 = v169;
        v138 = v166;
        v139 = v171;
        (*(void (**)(char *, uint64_t, uint64_t))(v169 + 32))(v166, v134, v171);
        sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
        v140 = v162;
        v141 = sub_21C3A7EA8();
        v142 = *(void (**)(char *, uint64_t))(v137 + 8);
        v142(v138, v139);
        sub_21C2D775C(v164, &qword_25525B8A0);
        sub_21C2D775C(v165, &qword_25525B8A0);
        v142((char *)v140, v139);
        sub_21C2D775C(v163, &qword_25525B8A0);
        if ((v141 & 1) == 0)
          return 0;
        goto LABEL_66;
      }
      sub_21C2D775C(v164, &qword_25525B8A0);
      sub_21C2D775C(v165, &qword_25525B8A0);
      (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v162, v171);
      v133 = v163;
    }
    v45 = &qword_25525BFB8;
    v46 = v133;
    goto LABEL_7;
  }
  return result;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV21AAMVADrivingPrivilegeV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFD8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B948);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v28 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v28 - v17;
  v30 = a1;
  sub_21C2F50EC(a1, (uint64_t)&v28 - v17, &qword_25525B948);
  v31 = a2;
  sub_21C2F50EC(a2, (uint64_t)v16, &qword_25525B948);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_21C2F50EC((uint64_t)v18, (uint64_t)v9, &qword_25525B948);
  sub_21C2F50EC((uint64_t)v16, v19, &qword_25525B948);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_21C2D775C((uint64_t)v16, &qword_25525B948);
    sub_21C2D775C((uint64_t)v18, &qword_25525B948);
    if (v20(v19, 1, v4) == 1)
    {
      sub_21C2D775C((uint64_t)v9, &qword_25525B948);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_21C2F50EC((uint64_t)v9, (uint64_t)v13, &qword_25525B948);
  if (v20(v19, 1, v4) == 1)
  {
    sub_21C2D775C((uint64_t)v16, &qword_25525B948);
    sub_21C2D775C((uint64_t)v18, &qword_25525B948);
    sub_21C2ED424((uint64_t)v13, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
LABEL_6:
    sub_21C2D775C((uint64_t)v9, &qword_25525BFD8);
LABEL_10:
    v26 = 0;
    return v26 & 1;
  }
  v21 = v29;
  sub_21C2F5064(v19, (uint64_t)v29, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
  v22 = _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV21AAMVADrivingPrivilegeV12VehicleClassV2eeoiySbAI_AItFZ_0(v13, v21);
  sub_21C2ED424((uint64_t)v21, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
  sub_21C2D775C((uint64_t)v16, &qword_25525B948);
  sub_21C2D775C((uint64_t)v18, &qword_25525B948);
  sub_21C2ED424((uint64_t)v13, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
  sub_21C2D775C((uint64_t)v9, &qword_25525B948);
  if (!v22)
    goto LABEL_10;
LABEL_8:
  v23 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(0);
  v25 = v30;
  v24 = v31;
  if ((sub_21C311C20(*(_QWORD *)(v30 + *(int *)(v23 + 20)), *(_QWORD *)(v31 + *(int *)(v23 + 20))) & 1) == 0)
    goto LABEL_10;
  v26 = sub_21C311C20(*(_QWORD *)(v25 + *(int *)(v23 + 24)), *(_QWORD *)(v24 + *(int *)(v23 + 24)));
  return v26 & 1;
}

BOOL _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV21AAMVADrivingPrivilegeV12VehicleClassV2eeoiySbAI_AItFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  char v28;
  _BOOL8 result;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  _BYTE *v35;
  void (*v36)(_BYTE *, uint64_t);
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  char v46;
  void (*v47)(_BYTE *, uint64_t);
  _BYTE v48[12];
  int v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;

  v4 = sub_21C3A7518();
  v57 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB8);
  v7 = MEMORY[0x24BDAC7A8](v56);
  v9 = &v48[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v48[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v54 = &v48[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v55 = &v48[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = &v48[-v21];
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = &v48[-v24];
  MEMORY[0x24BDAC7A8](v23);
  v27 = &v48[-v26];
  if (*a1 == *a2 && a1[1] == a2[1] || (v28 = sub_21C3A864C(), result = 0, (v28 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v30 = sub_21C3A864C(), result = 0, (v30 & 1) != 0))
    {
      v51 = v15;
      v52 = v6;
      v53 = v9;
      v31 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
      sub_21C2F50EC((uint64_t)a1 + *(int *)(v31 + 24), (uint64_t)v27, &qword_25525B8A0);
      sub_21C2F50EC((uint64_t)a2 + *(int *)(v31 + 24), (uint64_t)v25, &qword_25525B8A0);
      v32 = (uint64_t)&v11[*(int *)(v56 + 48)];
      sub_21C2F50EC((uint64_t)v27, (uint64_t)v11, &qword_25525B8A0);
      sub_21C2F50EC((uint64_t)v25, v32, &qword_25525B8A0);
      v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
      if (v33((uint64_t)v11, 1, v4) == 1)
      {
        sub_21C2D775C((uint64_t)v25, &qword_25525B8A0);
        sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
        if (v33(v32, 1, v4) == 1)
        {
          v50 = v33;
          sub_21C2D775C((uint64_t)v11, &qword_25525B8A0);
LABEL_14:
          v37 = (uint64_t)a1 + *(int *)(v31 + 28);
          v38 = v55;
          sub_21C2F50EC(v37, (uint64_t)v55, &qword_25525B8A0);
          v39 = v54;
          sub_21C2F50EC((uint64_t)a2 + *(int *)(v31 + 28), (uint64_t)v54, &qword_25525B8A0);
          v40 = (uint64_t)v53;
          v41 = (uint64_t)&v53[*(int *)(v56 + 48)];
          sub_21C2F50EC((uint64_t)v38, (uint64_t)v53, &qword_25525B8A0);
          sub_21C2F50EC((uint64_t)v39, v41, &qword_25525B8A0);
          v42 = v50;
          if (v50(v40, 1, v4) == 1)
          {
            sub_21C2D775C((uint64_t)v39, &qword_25525B8A0);
            sub_21C2D775C((uint64_t)v38, &qword_25525B8A0);
            if (v42(v41, 1, v4) == 1)
            {
              sub_21C2D775C(v40, &qword_25525B8A0);
              return 1;
            }
          }
          else
          {
            v43 = (uint64_t)v51;
            sub_21C2F50EC(v40, (uint64_t)v51, &qword_25525B8A0);
            if (v42(v41, 1, v4) != 1)
            {
              v44 = v57;
              v45 = v52;
              (*(void (**)(_BYTE *, uint64_t, uint64_t))(v57 + 32))(v52, v41, v4);
              sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
              v46 = sub_21C3A7EA8();
              v47 = *(void (**)(_BYTE *, uint64_t))(v44 + 8);
              v47(v45, v4);
              sub_21C2D775C((uint64_t)v39, &qword_25525B8A0);
              sub_21C2D775C((uint64_t)v38, &qword_25525B8A0);
              v47((_BYTE *)v43, v4);
              sub_21C2D775C(v40, &qword_25525B8A0);
              return (v46 & 1) != 0;
            }
            sub_21C2D775C((uint64_t)v39, &qword_25525B8A0);
            sub_21C2D775C((uint64_t)v38, &qword_25525B8A0);
            (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v43, v4);
          }
          v34 = v40;
          goto LABEL_20;
        }
      }
      else
      {
        sub_21C2F50EC((uint64_t)v11, (uint64_t)v22, &qword_25525B8A0);
        if (v33(v32, 1, v4) != 1)
        {
          v50 = v33;
          v35 = v52;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v57 + 32))(v52, v32, v4);
          sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
          v49 = sub_21C3A7EA8();
          v36 = *(void (**)(_BYTE *, uint64_t))(v57 + 8);
          v36(v35, v4);
          sub_21C2D775C((uint64_t)v25, &qword_25525B8A0);
          sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
          v36(v22, v4);
          sub_21C2D775C((uint64_t)v11, &qword_25525B8A0);
          if ((v49 & 1) == 0)
            return 0;
          goto LABEL_14;
        }
        sub_21C2D775C((uint64_t)v25, &qword_25525B8A0);
        sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
        (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v22, v4);
      }
      v34 = (uint64_t)v11;
LABEL_20:
      sub_21C2D775C(v34, &qword_25525BFB8);
      return 0;
    }
  }
  return result;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV16DrivingPrivilegeV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  void (*v41)(_BYTE *, uint64_t);
  uint64_t v42;
  _BYTE *v43;
  _QWORD *v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  void (*v54)(_BYTE *, uint64_t);
  _BYTE v55[4];
  int v56;
  _BYTE *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _QWORD *v65;

  v4 = sub_21C3A7518();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v61 = &v55[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v63 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v55[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v62 = &v55[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v64 = &v55[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = &v55[-v21];
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = &v55[-v24];
  MEMORY[0x24BDAC7A8](v23);
  v27 = &v55[-v26];
  v28 = *a1;
  v29 = a1[1];
  v65 = a1;
  if (v28 == *a2 && v29 == a2[1] || (v30 = sub_21C3A864C(), v31 = 0, (v30 & 1) != 0))
  {
    v57 = v15;
    v32 = v7;
    v33 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(0);
    sub_21C2F50EC((uint64_t)v65 + *(int *)(v33 + 20), (uint64_t)v27, &qword_25525B8A0);
    v58 = a2;
    v59 = v33;
    v34 = *(int *)(v33 + 20);
    v35 = v32;
    sub_21C2F50EC((uint64_t)a2 + v34, (uint64_t)v25, &qword_25525B8A0);
    v36 = (uint64_t)&v11[*(int *)(v32 + 48)];
    sub_21C2F50EC((uint64_t)v27, (uint64_t)v11, &qword_25525B8A0);
    sub_21C2F50EC((uint64_t)v25, v36, &qword_25525B8A0);
    v60 = v5;
    v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v37((uint64_t)v11, 1, v4) == 1)
    {
      sub_21C2D775C((uint64_t)v25, &qword_25525B8A0);
      sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
      if (v37(v36, 1, v4) == 1)
      {
        sub_21C2D775C((uint64_t)v11, &qword_25525B8A0);
LABEL_11:
        v42 = v59;
        v43 = v64;
        sub_21C2F50EC((uint64_t)v65 + *(int *)(v59 + 24), (uint64_t)v64, &qword_25525B8A0);
        v44 = v58;
        v45 = v62;
        sub_21C2F50EC((uint64_t)v58 + *(int *)(v42 + 24), (uint64_t)v62, &qword_25525B8A0);
        v46 = v63;
        v47 = (uint64_t)&v63[*(int *)(v35 + 48)];
        sub_21C2F50EC((uint64_t)v43, (uint64_t)v63, &qword_25525B8A0);
        sub_21C2F50EC((uint64_t)v45, v47, &qword_25525B8A0);
        if (v37((uint64_t)v46, 1, v4) == 1)
        {
          sub_21C2D775C((uint64_t)v45, &qword_25525B8A0);
          sub_21C2D775C((uint64_t)v43, &qword_25525B8A0);
          if (v37(v47, 1, v4) == 1)
          {
            sub_21C2D775C((uint64_t)v46, &qword_25525B8A0);
LABEL_21:
            v31 = sub_21C311C24(*(_QWORD *)((char *)v65 + *(int *)(v59 + 28)), *(_QWORD *)((char *)v44 + *(int *)(v59 + 28)));
            return v31 & 1;
          }
        }
        else
        {
          v48 = (uint64_t)v57;
          sub_21C2F50EC((uint64_t)v46, (uint64_t)v57, &qword_25525B8A0);
          if (v37(v47, 1, v4) != 1)
          {
            v51 = v60;
            v50 = v61;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v60 + 32))(v61, v47, v4);
            sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
            v52 = v48;
            v53 = sub_21C3A7EA8();
            v54 = *(void (**)(_BYTE *, uint64_t))(v51 + 8);
            v54(v50, v4);
            sub_21C2D775C((uint64_t)v45, &qword_25525B8A0);
            sub_21C2D775C((uint64_t)v64, &qword_25525B8A0);
            v54((_BYTE *)v52, v4);
            sub_21C2D775C((uint64_t)v46, &qword_25525B8A0);
            if ((v53 & 1) != 0)
              goto LABEL_21;
            goto LABEL_18;
          }
          sub_21C2D775C((uint64_t)v45, &qword_25525B8A0);
          sub_21C2D775C((uint64_t)v43, &qword_25525B8A0);
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v48, v4);
        }
        v38 = (uint64_t)v46;
        goto LABEL_17;
      }
    }
    else
    {
      sub_21C2F50EC((uint64_t)v11, (uint64_t)v22, &qword_25525B8A0);
      if (v37(v36, 1, v4) != 1)
      {
        v39 = v60;
        v40 = v61;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v60 + 32))(v61, v36, v4);
        sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
        v56 = sub_21C3A7EA8();
        v41 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
        v41(v40, v4);
        sub_21C2D775C((uint64_t)v25, &qword_25525B8A0);
        sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
        v41(v22, v4);
        sub_21C2D775C((uint64_t)v11, &qword_25525B8A0);
        if ((v56 & 1) == 0)
        {
LABEL_18:
          v31 = 0;
          return v31 & 1;
        }
        goto LABEL_11;
      }
      sub_21C2D775C((uint64_t)v25, &qword_25525B8A0);
      sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
      (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v22, v4);
    }
    v38 = (uint64_t)v11;
LABEL_17:
    sub_21C2D775C(v38, &qword_25525BFB8);
    goto LABEL_18;
  }
  return v31 & 1;
}

uint64_t type metadata accessor for MobileDriversLicenseDataResponseInternal(uint64_t a1)
{
  return sub_21C2ED554(a1, (uint64_t *)&unk_25525BB70);
}

unint64_t sub_21C2ED09C()
{
  unint64_t result;

  result = qword_25525B7C8;
  if (!qword_25525B7C8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC934, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B7C8);
  }
  return result;
}

unint64_t sub_21C2ED0E0()
{
  unint64_t result;

  result = qword_25525B808;
  if (!qword_25525B808)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC8E4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B808);
  }
  return result;
}

unint64_t sub_21C2ED124()
{
  unint64_t result;

  result = qword_25525B810;
  if (!qword_25525B810)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC894, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B810);
  }
  return result;
}

unint64_t sub_21C2ED168()
{
  unint64_t result;

  result = qword_25525B818;
  if (!qword_25525B818)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC844, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.NotSpecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B818);
  }
  return result;
}

unint64_t sub_21C2ED1AC()
{
  unint64_t result;

  result = qword_25525B820;
  if (!qword_25525B820)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC7F4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.NotApplicableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B820);
  }
  return result;
}

unint64_t sub_21C2ED1F0()
{
  unint64_t result;

  result = qword_25525B828;
  if (!qword_25525B828)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC7A4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.MaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B828);
  }
  return result;
}

unint64_t sub_21C2ED234()
{
  unint64_t result;

  result = qword_25525B830;
  if (!qword_25525B830)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC754, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.FemaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B830);
  }
  return result;
}

unint64_t sub_21C2ED278()
{
  unint64_t result;

  result = qword_25525B878;
  if (!qword_25525B878)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC704, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B878);
  }
  return result;
}

unint64_t sub_21C2ED2BC()
{
  unint64_t result;

  result = qword_25525B890;
  if (!qword_25525B890)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC6B4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B890);
  }
  return result;
}

uint64_t type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(uint64_t a1)
{
  return sub_21C2ED554(a1, qword_25525BCA8);
}

unint64_t sub_21C2ED314()
{
  unint64_t result;

  result = qword_25525B8B8;
  if (!qword_25525B8B8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC664, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B8B8);
  }
  return result;
}

unint64_t sub_21C2ED358()
{
  unint64_t result;

  result = qword_25525B8D8;
  if (!qword_25525B8D8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code);
    atomic_store(result, (unint64_t *)&qword_25525B8D8);
  }
  return result;
}

unint64_t sub_21C2ED39C()
{
  unint64_t result;

  result = qword_25525B8F8;
  if (!qword_25525B8F8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code);
    atomic_store(result, (unint64_t *)&qword_25525B8F8);
  }
  return result;
}

uint64_t sub_21C2ED3E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21C2ED424(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(uint64_t a1)
{
  return sub_21C2ED554(a1, qword_25525BDE0);
}

unint64_t sub_21C2ED474()
{
  unint64_t result;

  result = qword_25525B908;
  if (!qword_25525B908)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC614, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B908);
  }
  return result;
}

unint64_t sub_21C2ED4B8()
{
  unint64_t result;

  result = qword_25525B920;
  if (!qword_25525B920)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC5C4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B920);
  }
  return result;
}

unint64_t sub_21C2ED4FC()
{
  unint64_t result;

  result = qword_25525B938;
  if (!qword_25525B938)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC574, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B938);
  }
  return result;
}

uint64_t type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(uint64_t a1)
{
  return sub_21C2ED554(a1, (uint64_t *)&unk_25525BD40);
}

uint64_t sub_21C2ED554(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21C2ED588()
{
  unint64_t result;

  result = qword_25525B958;
  if (!qword_25525B958)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC524, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B958);
  }
  return result;
}

unint64_t sub_21C2ED5CC()
{
  unint64_t result;

  result = qword_25525B978;
  if (!qword_25525B978)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction);
    atomic_store(result, (unint64_t *)&qword_25525B978);
  }
  return result;
}

unint64_t sub_21C2ED610()
{
  unint64_t result;

  result = qword_25525B990;
  if (!qword_25525B990)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement);
    atomic_store(result, (unint64_t *)&qword_25525B990);
  }
  return result;
}

unint64_t sub_21C2ED654()
{
  unint64_t result;

  result = qword_25525B9B0;
  if (!qword_25525B9B0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction);
    atomic_store(result, (unint64_t *)&qword_25525B9B0);
  }
  return result;
}

uint64_t sub_21C2ED698(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x22077AECC](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21C2ED6FC()
{
  unint64_t result;

  result = qword_25525B9C0;
  if (!qword_25525B9C0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement);
    atomic_store(result, (unint64_t *)&qword_25525B9C0);
  }
  return result;
}

unint64_t sub_21C2ED740()
{
  unint64_t result;

  result = qword_25525B9E0;
  if (!qword_25525B9E0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC4D4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B9E0);
  }
  return result;
}

unint64_t sub_21C2ED784()
{
  unint64_t result;

  result = qword_25525B9E8;
  if (!qword_25525B9E8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC484, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.NoncompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B9E8);
  }
  return result;
}

unint64_t sub_21C2ED7C8()
{
  unint64_t result;

  result = qword_25525B9F0;
  if (!qword_25525B9F0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC434, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525B9F0);
  }
  return result;
}

uint64_t sub_21C2ED80C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21C2ED86C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_21C2ED8AC()
{
  unint64_t result;

  result = qword_25525BA28;
  if (!qword_25525BA28)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC3E4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BA28);
  }
  return result;
}

unint64_t sub_21C2ED8F0()
{
  unint64_t result;

  result = qword_25525BA50;
  if (!qword_25525BA50)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex);
    atomic_store(result, (unint64_t *)&qword_25525BA50);
  }
  return result;
}

unint64_t sub_21C2ED934()
{
  unint64_t result;

  result = qword_25525BA58;
  if (!qword_25525BA58)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.Address, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Address);
    atomic_store(result, (unint64_t *)&qword_25525BA58);
  }
  return result;
}

unint64_t sub_21C2ED978()
{
  unint64_t result;

  result = qword_25525BA60;
  if (!qword_25525BA60)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority);
    atomic_store(result, (unint64_t *)&qword_25525BA60);
  }
  return result;
}

uint64_t sub_21C2ED9BC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525BA80);
    v10 = sub_21C2D1198(a2, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege, a3);
    result = MEMORY[0x22077AECC](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21C2EDA40()
{
  unint64_t result;

  result = qword_25525BA98;
  if (!qword_25525BA98)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus);
    atomic_store(result, (unint64_t *)&qword_25525BA98);
  }
  return result;
}

uint64_t sub_21C2EDA84(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21C2EDAC4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_21C2EDB24()
{
  unint64_t result;

  result = qword_25525BAB0;
  if (!qword_25525BAB0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex);
    atomic_store(result, (unint64_t *)&qword_25525BAB0);
  }
  return result;
}

unint64_t sub_21C2EDB68()
{
  unint64_t result;

  result = qword_25525BAB8;
  if (!qword_25525BAB8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.Address, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Address);
    atomic_store(result, (unint64_t *)&qword_25525BAB8);
  }
  return result;
}

unint64_t sub_21C2EDBAC()
{
  unint64_t result;

  result = qword_25525BAC0;
  if (!qword_25525BAC0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority);
    atomic_store(result, (unint64_t *)&qword_25525BAC0);
  }
  return result;
}

uint64_t sub_21C2EDBF0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525BA68);
    v10 = sub_21C2D1198(a2, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege, a3);
    result = MEMORY[0x22077AECC](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21C2EDC74()
{
  unint64_t result;

  result = qword_25525BAE8;
  if (!qword_25525BAE8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus);
    atomic_store(result, (unint64_t *)&qword_25525BAE8);
  }
  return result;
}

unint64_t sub_21C2EDCBC()
{
  unint64_t result;

  result = qword_25525BAF0;
  if (!qword_25525BAF0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.Address, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Address);
    atomic_store(result, (unint64_t *)&qword_25525BAF0);
  }
  return result;
}

unint64_t sub_21C2EDD04()
{
  unint64_t result;

  result = qword_25525BAF8;
  if (!qword_25525BAF8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex);
    atomic_store(result, (unint64_t *)&qword_25525BAF8);
  }
  return result;
}

unint64_t sub_21C2EDD4C()
{
  unint64_t result;

  result = qword_25525BB00;
  if (!qword_25525BB00)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority);
    atomic_store(result, (unint64_t *)&qword_25525BB00);
  }
  return result;
}

unint64_t sub_21C2EDD94()
{
  unint64_t result;

  result = qword_25525BB08;
  if (!qword_25525BB08)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code);
    atomic_store(result, (unint64_t *)&qword_25525BB08);
  }
  return result;
}

uint64_t sub_21C2EDDD8()
{
  return sub_21C2D1198(&qword_25525BB10, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege);
}

uint64_t sub_21C2EDE04()
{
  return sub_21C2D1198(&qword_25525BB18, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
}

unint64_t sub_21C2EDE34()
{
  unint64_t result;

  result = qword_25525BB20;
  if (!qword_25525BB20)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction);
    atomic_store(result, (unint64_t *)&qword_25525BB20);
  }
  return result;
}

unint64_t sub_21C2EDE7C()
{
  unint64_t result;

  result = qword_25525BB28;
  if (!qword_25525BB28)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement);
    atomic_store(result, (unint64_t *)&qword_25525BB28);
  }
  return result;
}

uint64_t sub_21C2EDEC0()
{
  return sub_21C2D1198(&qword_25525BB30, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
}

unint64_t sub_21C2EDEF0()
{
  unint64_t result;

  result = qword_25525BB38;
  if (!qword_25525BB38)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus);
    atomic_store(result, (unint64_t *)&qword_25525BB38);
  }
  return result;
}

uint64_t sub_21C2EDF34()
{
  return sub_21C2D1198(&qword_25525BB40, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataResponseInternal.DocumentElements);
}

uint64_t sub_21C2EDF60()
{
  return type metadata accessor for MobileDriversLicenseDataResponseInternal(0);
}

uint64_t sub_21C2EDF68()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MobileDriversLicenseDataResponseInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MobileDriversLicenseDataResponseInternal.__allocating_init(_:issuer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MobileDriversLicenseDataResponseInternal.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDriversLicenseDataResponseInternal.DocumentElements(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C3A75D8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *((_QWORD *)v13 + 1);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v15 = *(_QWORD *)v13;
      sub_21C2D1E94(*(_QWORD *)v13, *((_QWORD *)v13 + 1));
      *(_QWORD *)v12 = v15;
      *((_QWORD *)v12 + 1) = v14;
    }
    v16 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = a3[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_21C3A7518();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v26 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *((_QWORD *)v28 + 1);
    if (v29 == 1)
    {
      v30 = *((_OWORD *)v28 + 3);
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
      *((_OWORD *)v27 + 3) = v30;
      *((_OWORD *)v27 + 4) = *((_OWORD *)v28 + 4);
      v31 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v31;
    }
    else
    {
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *((_QWORD *)v27 + 1) = v29;
      v32 = *((_QWORD *)v28 + 3);
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
      *((_QWORD *)v27 + 3) = v32;
      v33 = *((_QWORD *)v28 + 5);
      *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
      *((_QWORD *)v27 + 5) = v33;
      v34 = *((_QWORD *)v28 + 7);
      *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
      *((_QWORD *)v27 + 7) = v34;
      v35 = *((_QWORD *)v28 + 9);
      *((_QWORD *)v27 + 8) = *((_QWORD *)v28 + 8);
      *((_QWORD *)v27 + 9) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v36 = a3[11];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = *((_QWORD *)v38 + 1);
    if (v39 == 1)
    {
      v40 = *((_OWORD *)v38 + 1);
      *(_OWORD *)v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v40;
      *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    }
    else
    {
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      v41 = *((_QWORD *)v38 + 3);
      *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
      *((_QWORD *)v37 + 3) = v41;
      v42 = *((_QWORD *)v38 + 5);
      *((_QWORD *)v37 + 4) = *((_QWORD *)v38 + 4);
      *((_QWORD *)v37 + 5) = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v43 = a3[13];
    *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(uint64_t *)((char *)a1 + v43) = *(uint64_t *)((char *)a2 + v43);
    v44 = a3[14];
    v45 = a3[15];
    v46 = (uint64_t *)((char *)a1 + v44);
    v47 = (uint64_t *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = (char *)a1 + v45;
    v50 = (char *)a2 + v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v50, 1, v22))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v49, v50, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v49, 0, 1, v22);
    }
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    if (v24((char *)a2 + v52, 1, v22))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v53, v54, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v53, 0, 1, v22);
    }
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  }
  return a1;
}

uint64_t destroy for MobileDriversLicenseDataResponseInternal.DocumentElements(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = (uint64_t *)(a1 + a2[5]);
  v7 = v6[1];
  if (v7 >> 60 != 15)
    sub_21C2D2B48(*v6, v7);
  swift_bridgeObjectRelease();
  v8 = a1 + a2[8];
  v9 = sub_21C3A7518();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  if (*(_QWORD *)(a1 + a2[10] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[11] + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a1 + a2[15];
  if (!v11(v12, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  v13 = a1 + a2[16];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v13, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  return result;
}

char *initializeWithCopy for MobileDriversLicenseDataResponseInternal.DocumentElements(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)v10 = *(_OWORD *)v11;
  }
  else
  {
    v13 = *(_QWORD *)v11;
    sub_21C2D1E94(*(_QWORD *)v11, *((_QWORD *)v11 + 1));
    *(_QWORD *)v10 = v13;
    *((_QWORD *)v10 + 1) = v12;
  }
  v14 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_21C3A7518();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v24 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = *((_QWORD *)v26 + 1);
  if (v27 == 1)
  {
    v28 = *((_OWORD *)v26 + 3);
    *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
    *((_OWORD *)v25 + 3) = v28;
    *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
    v29 = *((_OWORD *)v26 + 1);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v29;
  }
  else
  {
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v30 = *((_QWORD *)v26 + 3);
    *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
    *((_QWORD *)v25 + 3) = v30;
    v31 = *((_QWORD *)v26 + 5);
    *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
    *((_QWORD *)v25 + 5) = v31;
    v32 = *((_QWORD *)v26 + 7);
    *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
    *((_QWORD *)v25 + 7) = v32;
    v33 = *((_QWORD *)v26 + 9);
    *((_QWORD *)v25 + 8) = *((_QWORD *)v26 + 8);
    *((_QWORD *)v25 + 9) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v34 = a3[11];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = *((_QWORD *)v36 + 1);
  if (v37 == 1)
  {
    v38 = *((_OWORD *)v36 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v38;
    *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
  }
  else
  {
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    v39 = *((_QWORD *)v36 + 3);
    *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
    *((_QWORD *)v35 + 3) = v39;
    v40 = *((_QWORD *)v36 + 5);
    *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
    *((_QWORD *)v35 + 5) = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v41 = a3[13];
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  *(_QWORD *)&a1[v41] = *(_QWORD *)&a2[v41];
  v42 = a3[14];
  v43 = a3[15];
  v44 = &a1[v42];
  v45 = &a2[v42];
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *((_QWORD *)v44 + 1) = v46;
  v47 = &a1[v43];
  v48 = &a2[v43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v48, 1, v20))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v47, v48, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v47, 0, 1, v20);
  }
  v50 = a3[16];
  v51 = &a1[v50];
  v52 = &a2[v50];
  if (v22(&a2[v50], 1, v20))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v51, v52, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v51, 0, 1, v20);
  }
  a1[a3[17]] = a2[a3[17]];
  return a1;
}

char *assignWithCopy for MobileDriversLicenseDataResponseInternal.DocumentElements(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  int v66;
  uint64_t v67;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = (uint64_t *)&a1[v12];
  v14 = (uint64_t *)&a2[v12];
  v15 = *(_QWORD *)&a2[v12 + 8];
  if (*(_QWORD *)&a1[v12 + 8] >> 60 == 15)
  {
    if (v15 >> 60 != 15)
    {
      v16 = *v14;
      sub_21C2D1E94(v16, v15);
      *v13 = v16;
      v13[1] = v15;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v15 >> 60 == 15)
  {
    sub_21C2EF04C((uint64_t)v13);
LABEL_12:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    goto LABEL_14;
  }
  v17 = *v14;
  sub_21C2D1E94(v17, v15);
  v18 = *v13;
  v19 = v13[1];
  *v13 = v17;
  v13[1] = v15;
  sub_21C2D2B48(v18, v19);
LABEL_14:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *(_QWORD *)v21 = v23;
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_21C3A7518();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_19:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_20:
  a1[a3[9]] = a2[a3[9]];
  v33 = a3[10];
  v34 = (uint64_t)&a1[v33];
  v35 = &a2[v33];
  v36 = *(_QWORD *)&a1[v33 + 8];
  v37 = *(_QWORD *)&a2[v33 + 8];
  if (v36 == 1)
  {
    if (v37 == 1)
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v38 = *((_OWORD *)v35 + 1);
      v39 = *((_OWORD *)v35 + 2);
      v40 = *((_OWORD *)v35 + 4);
      *(_OWORD *)(v34 + 48) = *((_OWORD *)v35 + 3);
      *(_OWORD *)(v34 + 64) = v40;
      *(_OWORD *)(v34 + 16) = v38;
      *(_OWORD *)(v34 + 32) = v39;
    }
    else
    {
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
      *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
      *(_QWORD *)(v34 + 24) = *((_QWORD *)v35 + 3);
      *(_QWORD *)(v34 + 32) = *((_QWORD *)v35 + 4);
      *(_QWORD *)(v34 + 40) = *((_QWORD *)v35 + 5);
      *(_QWORD *)(v34 + 48) = *((_QWORD *)v35 + 6);
      *(_QWORD *)(v34 + 56) = *((_QWORD *)v35 + 7);
      *(_QWORD *)(v34 + 64) = *((_QWORD *)v35 + 8);
      *(_QWORD *)(v34 + 72) = *((_QWORD *)v35 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v37 == 1)
  {
    sub_21C2EF080(v34);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    v41 = *((_OWORD *)v35 + 4);
    v43 = *((_OWORD *)v35 + 1);
    v42 = *((_OWORD *)v35 + 2);
    *(_OWORD *)(v34 + 48) = *((_OWORD *)v35 + 3);
    *(_OWORD *)(v34 + 64) = v41;
    *(_OWORD *)(v34 + 16) = v43;
    *(_OWORD *)(v34 + 32) = v42;
  }
  else
  {
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
    *(_QWORD *)(v34 + 24) = *((_QWORD *)v35 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 32) = *((_QWORD *)v35 + 4);
    *(_QWORD *)(v34 + 40) = *((_QWORD *)v35 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 48) = *((_QWORD *)v35 + 6);
    *(_QWORD *)(v34 + 56) = *((_QWORD *)v35 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 64) = *((_QWORD *)v35 + 8);
    *(_QWORD *)(v34 + 72) = *((_QWORD *)v35 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v44 = a3[11];
  v45 = (uint64_t)&a1[v44];
  v46 = &a2[v44];
  v47 = *(_QWORD *)&a1[v44 + 8];
  v48 = *(_QWORD *)&a2[v44 + 8];
  if (v47 == 1)
  {
    if (v48 == 1)
    {
      v49 = *(_OWORD *)v46;
      v50 = *((_OWORD *)v46 + 2);
      *(_OWORD *)(v45 + 16) = *((_OWORD *)v46 + 1);
      *(_OWORD *)(v45 + 32) = v50;
      *(_OWORD *)v45 = v49;
    }
    else
    {
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *(_QWORD *)(v45 + 8) = *((_QWORD *)v46 + 1);
      *(_QWORD *)(v45 + 16) = *((_QWORD *)v46 + 2);
      *(_QWORD *)(v45 + 24) = *((_QWORD *)v46 + 3);
      *(_QWORD *)(v45 + 32) = *((_QWORD *)v46 + 4);
      *(_QWORD *)(v45 + 40) = *((_QWORD *)v46 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v48 == 1)
  {
    sub_21C2EF0AC(v45);
    v52 = *((_OWORD *)v46 + 1);
    v51 = *((_OWORD *)v46 + 2);
    *(_OWORD *)v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v52;
    *(_OWORD *)(v45 + 32) = v51;
  }
  else
  {
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *(_QWORD *)(v45 + 8) = *((_QWORD *)v46 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v45 + 16) = *((_QWORD *)v46 + 2);
    *(_QWORD *)(v45 + 24) = *((_QWORD *)v46 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v45 + 32) = *((_QWORD *)v46 + 4);
    *(_QWORD *)(v45 + 40) = *((_QWORD *)v46 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = a3[14];
  v54 = &a1[v53];
  v55 = &a2[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = a3[15];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = v29(&a1[v56], 1, v27);
  v60 = v29(v58, 1, v27);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v57, v58, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v57, 0, 1, v27);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v57, v27);
LABEL_39:
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v57, v58, v27);
LABEL_40:
  v62 = a3[16];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = v29(&a1[v62], 1, v27);
  v66 = v29(v64, 1, v27);
  if (!v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v63, v64, v27);
      goto LABEL_46;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v63, v27);
    goto LABEL_45;
  }
  if (v66)
  {
LABEL_45:
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v63, v64, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v63, 0, 1, v27);
LABEL_46:
  a1[a3[17]] = a2[a3[17]];
  return a1;
}

uint64_t sub_21C2EF04C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t sub_21C2EF080(uint64_t a1)
{
  destroy for MobileDriversLicenseDataResponseInternal.DocumentElements.Address();
  return a1;
}

uint64_t sub_21C2EF0AC(uint64_t a1)
{
  destroy for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority(a1, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority);
  return a1;
}

char *initializeWithTake for MobileDriversLicenseDataResponseInternal.DocumentElements(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[7];
  v11 = a3[8];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  v16 = sub_21C3A7518();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v20 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *((_OWORD *)v22 + 4);
  v24 = *((_OWORD *)v22 + 2);
  *((_OWORD *)v21 + 3) = *((_OWORD *)v22 + 3);
  *((_OWORD *)v21 + 4) = v23;
  v25 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v25;
  *((_OWORD *)v21 + 2) = v24;
  v26 = a3[11];
  v27 = a3[12];
  v28 = &a1[v26];
  v29 = &a2[v26];
  v30 = *((_OWORD *)v29 + 1);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v30;
  *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
  *(_QWORD *)&a1[v27] = *(_QWORD *)&a2[v27];
  v31 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  *(_OWORD *)&a1[v31] = *(_OWORD *)&a2[v31];
  v32 = a3[15];
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (v18(&a2[v32], 1, v16))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v33, v34, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v33, 0, 1, v16);
  }
  v36 = a3[16];
  v37 = &a1[v36];
  v38 = &a2[v36];
  if (v18(&a2[v36], 1, v16))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v37, v38, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v37, 0, 1, v16);
  }
  a1[a3[17]] = a2[a3[17]];
  return a1;
}

char *assignWithTake for MobileDriversLicenseDataResponseInternal.DocumentElements(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  int v62;
  uint64_t v63;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = (uint64_t)&a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)&a1[v12 + 8];
  if (v15 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    goto LABEL_12;
  }
  v16 = *((_QWORD *)v14 + 1);
  if (v16 >> 60 == 15)
  {
    sub_21C2EF04C(v13);
    goto LABEL_10;
  }
  v17 = *(_QWORD *)v13;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v16;
  sub_21C2D2B48(v17, v15);
LABEL_12:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = a3[8];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = &a1[v19];
  v23 = &a2[v19];
  v24 = sub_21C3A7518();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_17:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_18:
  v30 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (*(_QWORD *)&a1[v30 + 8] == 1)
  {
LABEL_21:
    v34 = *((_OWORD *)v32 + 3);
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 3) = v34;
    *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
    v35 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v35;
    goto LABEL_23;
  }
  v33 = *((_QWORD *)v32 + 1);
  if (v33 == 1)
  {
    sub_21C2EF080((uint64_t)&a1[v30]);
    goto LABEL_21;
  }
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v36 = *((_QWORD *)v32 + 3);
  *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
  *((_QWORD *)v31 + 3) = v36;
  swift_bridgeObjectRelease();
  v37 = *((_QWORD *)v32 + 5);
  *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
  *((_QWORD *)v31 + 5) = v37;
  swift_bridgeObjectRelease();
  v38 = *((_QWORD *)v32 + 7);
  *((_QWORD *)v31 + 6) = *((_QWORD *)v32 + 6);
  *((_QWORD *)v31 + 7) = v38;
  swift_bridgeObjectRelease();
  v39 = *((_QWORD *)v32 + 9);
  *((_QWORD *)v31 + 8) = *((_QWORD *)v32 + 8);
  *((_QWORD *)v31 + 9) = v39;
  swift_bridgeObjectRelease();
LABEL_23:
  v40 = a3[11];
  v41 = (uint64_t)&a1[v40];
  v42 = &a2[v40];
  if (*(_QWORD *)&a1[v40 + 8] == 1)
  {
LABEL_26:
    v44 = *((_OWORD *)v42 + 1);
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v44;
    *(_OWORD *)(v41 + 32) = *((_OWORD *)v42 + 2);
    goto LABEL_28;
  }
  v43 = *((_QWORD *)v42 + 1);
  if (v43 == 1)
  {
    sub_21C2EF0AC(v41);
    goto LABEL_26;
  }
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_QWORD *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  v45 = *((_QWORD *)v42 + 3);
  *(_QWORD *)(v41 + 16) = *((_QWORD *)v42 + 2);
  *(_QWORD *)(v41 + 24) = v45;
  swift_bridgeObjectRelease();
  v46 = *((_QWORD *)v42 + 5);
  *(_QWORD *)(v41 + 32) = *((_QWORD *)v42 + 4);
  *(_QWORD *)(v41 + 40) = v46;
  swift_bridgeObjectRelease();
LABEL_28:
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_bridgeObjectRelease();
  v47 = a3[14];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v51 = *(_QWORD *)v49;
  v50 = *((_QWORD *)v49 + 1);
  *(_QWORD *)v48 = v51;
  *((_QWORD *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  v52 = a3[15];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = v26(&a1[v52], 1, v24);
  v56 = v26(v54, 1, v24);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v53, v54, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v53, 0, 1, v24);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v53, v24);
LABEL_33:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v53, v54, v24);
LABEL_34:
  v58 = a3[16];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v61 = v26(&a1[v58], 1, v24);
  v62 = v26(v60, 1, v24);
  if (!v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v59, v60, v24);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v59, v24);
    goto LABEL_39;
  }
  if (v62)
  {
LABEL_39:
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v59, v60, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v59, 0, 1, v24);
LABEL_40:
  a1[a3[17]] = a2[a3[17]];
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2EF8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2EF960(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_21C2EFA0C()
{
  unint64_t v0;
  unint64_t v1;

  sub_21C2EFB08(319, &qword_25525BBE8, (void (*)(uint64_t))MEMORY[0x24BDCCC10]);
  if (v0 <= 0x3F)
  {
    sub_21C2EFB08(319, (unint64_t *)&qword_25525BBF0, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_21C2EFB08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_21C3A82EC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t destroy for MobileDriversLicenseDataResponseInternal.DocumentElements.Address()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MobileDriversLicenseDataResponseInternal.DocumentElements.Address(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MobileDriversLicenseDataResponseInternal.DocumentElements.Address(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_QWORD *assignWithTake for MobileDriversLicenseDataResponseInternal.DocumentElements.Address(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.Address(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.Address(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.Address()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Address;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority;
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21C3A7518();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21C3A7518();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 24);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_21C3A7518();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_21C3A7518();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(_OWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_21C3A7518();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = sub_21C3A7518();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = (char *)a2 + v16;
  v19 = v12(&a1[v16], 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2F0800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2F088C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_21C2F0904()
{
  unint64_t v0;

  sub_21C2EFB08(319, (unint64_t *)&qword_25525BBF0, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for ContentInternal()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ContentInternal(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ContentInternal(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ContentInternal(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code;
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *__dst;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B948);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = *(int *)(v7 + 24);
      __dst = (char *)a1 + v13;
      v27 = v8;
      v14 = (char *)a2 + v13;
      v15 = sub_21C3A7518();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      v19 = v16;
      v20 = *(int *)(v7 + 28);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v17((char *)a2 + v20, 1, v15))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v22, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v7);
    }
    v24 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v24) = *(uint64_t *)((char *)a2 + v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v2 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(v2 + 24);
    v4 = sub_21C3A7518();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v7 = a1 + *(int *)(v2 + 28);
    if (!v6(v7, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *__dst;
  uint64_t v25;

  v6 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B948);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = *(int *)(v6 + 24);
    __dst = (char *)a1 + v11;
    v25 = v7;
    v12 = (char *)a2 + v11;
    v13 = sub_21C3A7518();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v17 = v14;
    v18 = *(int *)(v6 + 28);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    if (v15((char *)a2 + v18, 1, v13))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v20, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v13);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v6);
  }
  v22 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;
  char *__dst;
  uint64_t v41;

  v6 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_21C2ED424((uint64_t)a1, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
      goto LABEL_7;
    }
    v18 = a3;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = *(int *)(v6 + 24);
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = sub_21C3A7518();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
    v25 = v24(v20, 1, v22);
    v26 = v24(v21, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
LABEL_19:
        v33 = *(int *)(v6 + 28);
        v34 = &a1[v33];
        v35 = &a2[v33];
        v36 = v24(&a1[v33], 1, v22);
        v37 = v24(v35, 1, v22);
        if (v36)
        {
          if (!v37)
          {
            (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v34, v35, v22);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v34, 0, 1, v22);
LABEL_25:
            a3 = v18;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v37)
          {
            (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v34, v35, v22);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v23 + 8))(v34, v22);
        }
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    }
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B948);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_26;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  v11 = *(int *)(v6 + 24);
  __dst = &a1[v11];
  v41 = a3;
  v12 = &a2[v11];
  v13 = sub_21C3A7518();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  v27 = v14;
  v28 = *(int *)(v6 + 28);
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v15(&a2[v28], 1, v13))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v29, v30, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v13);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  a3 = v41;
LABEL_26:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B948);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_21C3A7518();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v17 = *(int *)(v6 + 28);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    if (v15((char *)a2 + v17, 1, v13))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v19, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v21 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  return a1;
}

char *assignWithTake for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  size_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;

  v6 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_21C2ED424((uint64_t)a1, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
      goto LABEL_7;
    }
    v22 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v22;
    swift_bridgeObjectRelease();
    v23 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v23;
    swift_bridgeObjectRelease();
    v24 = *(int *)(v6 + 24);
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = sub_21C3A7518();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
    v30 = v29(v25, 1, v27);
    v31 = v29(v26, 1, v27);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_21:
        v38 = *(int *)(v6 + 28);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = v29(&a1[v38], 1, v27);
        v42 = v29(v40, 1, v27);
        if (v41)
        {
          if (!v42)
          {
            (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v39, v40, v27);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v39, 0, 1, v27);
            goto LABEL_17;
          }
        }
        else
        {
          if (!v42)
          {
            (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v39, v40, v27);
            goto LABEL_17;
          }
          (*(void (**)(char *, uint64_t))(v28 + 8))(v39, v27);
        }
        v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0) - 8) + 64);
        v20 = v39;
        v21 = v40;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525B948) - 8) + 64);
    v20 = a1;
    v21 = a2;
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_17;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  v12 = *(int *)(v6 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_21C3A7518();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v32 = *(int *)(v6 + 28);
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (v17(&a2[v32], 1, v15))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v33, v34, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v15);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2F1A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B948);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2F1AA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B948);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_21C2F1B24()
{
  unint64_t v0;

  sub_21C2EFB08(319, qword_25525BD50, (void (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_21C3A7518();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 28);
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    if (v14(v19, 1, v12))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t destroy for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21C3A7518();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 28);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

_QWORD *initializeWithCopy for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_21C3A7518();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 28);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  if (v13(v17, 1, v11))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

char *assignWithCopy for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_21C3A7518();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21C3A7518();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 28);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  if (v12(v16, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

char *assignWithTake for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  int v21;
  uint64_t v22;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = &a1[v8];
  v10 = (char *)a2 + v8;
  v11 = sub_21C3A7518();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = *(int *)(a3 + 28);
  v18 = &a1[v17];
  v19 = (char *)a2 + v17;
  v20 = v13(&a1[v17], 1, v11);
  v21 = v13(v19, 1, v11);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v18, v19, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v19, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2F247C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2F2508(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_21C2F2580()
{
  unint64_t v0;

  sub_21C2EFB08(319, (unint64_t *)&qword_25525BBF0, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction;
}

uint64_t destroy for ProximityReaderDiscovery.Content()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ProximityReaderDiscovery.Content(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ProximityReaderDiscovery.Content(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ProximityReaderDiscovery.Content(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV21AAMVADrivingPrivilegeV18VehicleRestrictionVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_21C2F2794(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseDataResponseInternal.DocumentElements.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_21C2F28D8 + 4 * byte_21C3AACCF[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_21C2F290C + 4 * byte_21C3AACCA[v4]))();
}

uint64_t sub_21C2F290C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2F2914(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2F291CLL);
  return result;
}

uint64_t sub_21C2F2928(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2F2930);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_21C2F2934(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2F293C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CompliantCodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CompliantCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.NoncompliantCodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.NoncompliantCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV21AAMVADrivingPrivilegeV12VehicleClassV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21C2F2A24 + 4 * byte_21C3AACD9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21C2F2A58 + 4 * byte_21C3AACD4[v4]))();
}

uint64_t sub_21C2F2A58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2F2A60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2F2A68);
  return result;
}

uint64_t sub_21C2F2A74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2F2A7CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21C2F2A80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2F2A88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.CodingKeys;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV21AAMVADrivingPrivilegeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C2F2B00 + 4 * byte_21C3AACE3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C2F2B34 + 4 * byte_21C3AACDE[v4]))();
}

uint64_t sub_21C2F2B34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2F2B3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2F2B44);
  return result;
}

uint64_t sub_21C2F2B50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2F2B58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C2F2B5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2F2B64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.CodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.FemaleCodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.FemaleCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.MaleCodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.MaleCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.NotApplicableCodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.NotApplicableCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.NotSpecifiedCodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.NotSpecifiedCodingKeys;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.UnknownCodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.UnknownCodingKeys;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV3SexOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21C2F2C2C + 4 * byte_21C3AACED[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21C2F2C60 + 4 * byte_21C3AACE8[v4]))();
}

uint64_t sub_21C2F2C60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2F2C68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2F2C70);
  return result;
}

uint64_t sub_21C2F2C7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2F2C84);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21C2F2C88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2F2C90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.Address.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Address.CodingKeys;
}

uint64_t _s15ProximityReader40MobileDriversLicenseDataResponseInternalC16DocumentElementsV19DHSComplianceStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C2F2CF8 + 4 * byte_21C3AACF7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C2F2D2C + 4 * byte_21C3AACF2[v4]))();
}

uint64_t sub_21C2F2D2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2F2D34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2F2D3CLL);
  return result;
}

uint64_t sub_21C2F2D48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2F2D50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C2F2D54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2F2D5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataResponseInternal.CodingKeys()
{
  return &type metadata for MobileDriversLicenseDataResponseInternal.CodingKeys;
}

unint64_t sub_21C2F2D7C()
{
  unint64_t result;

  result = qword_25525BE20;
  if (!qword_25525BE20)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AB9A4, &type metadata for MobileDriversLicenseDataResponseInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE20);
  }
  return result;
}

unint64_t sub_21C2F2DC4()
{
  unint64_t result;

  result = qword_25525BE28;
  if (!qword_25525BE28)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABA5C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE28);
  }
  return result;
}

unint64_t sub_21C2F2E0C()
{
  unint64_t result;

  result = qword_25525BE30;
  if (!qword_25525BE30)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABCA4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE30);
  }
  return result;
}

unint64_t sub_21C2F2E54()
{
  unint64_t result;

  result = qword_25525BE38;
  if (!qword_25525BE38)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABD5C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE38);
  }
  return result;
}

unint64_t sub_21C2F2E9C()
{
  unint64_t result;

  result = qword_25525BE40;
  if (!qword_25525BE40)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABE14, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE40);
  }
  return result;
}

unint64_t sub_21C2F2EE4()
{
  unint64_t result;

  result = qword_25525BE48;
  if (!qword_25525BE48)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABECC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE48);
  }
  return result;
}

unint64_t sub_21C2F2F2C()
{
  unint64_t result;

  result = qword_25525BE50;
  if (!qword_25525BE50)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABF84, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE50);
  }
  return result;
}

unint64_t sub_21C2F2F74()
{
  unint64_t result;

  result = qword_25525BE58;
  if (!qword_25525BE58)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC03C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE58);
  }
  return result;
}

unint64_t sub_21C2F2FBC()
{
  unint64_t result;

  result = qword_25525BE60;
  if (!qword_25525BE60)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC0F4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE60);
  }
  return result;
}

unint64_t sub_21C2F3004()
{
  unint64_t result;

  result = qword_25525BE68;
  if (!qword_25525BE68)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC1AC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE68);
  }
  return result;
}

unint64_t sub_21C2F304C()
{
  unint64_t result;

  result = qword_25525BE70;
  if (!qword_25525BE70)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC304, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE70);
  }
  return result;
}

unint64_t sub_21C2F3094()
{
  unint64_t result;

  result = qword_25525BE78;
  if (!qword_25525BE78)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC3BC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE78);
  }
  return result;
}

unint64_t sub_21C2F30DC()
{
  unint64_t result;

  result = qword_25525BE80;
  if (!qword_25525BE80)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC32C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE80);
  }
  return result;
}

unint64_t sub_21C2F3124()
{
  unint64_t result;

  result = qword_25525BE88;
  if (!qword_25525BE88)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC354, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE88);
  }
  return result;
}

unint64_t sub_21C2F316C()
{
  unint64_t result;

  result = qword_25525BE90;
  if (!qword_25525BE90)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC224, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE90);
  }
  return result;
}

unint64_t sub_21C2F31B4()
{
  unint64_t result;

  result = qword_25525BE98;
  if (!qword_25525BE98)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC24C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BE98);
  }
  return result;
}

unint64_t sub_21C2F31FC()
{
  unint64_t result;

  result = qword_25525BEA0;
  if (!qword_25525BEA0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC1D4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.NoncompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BEA0);
  }
  return result;
}

unint64_t sub_21C2F3244()
{
  unint64_t result;

  result = qword_25525BEA8;
  if (!qword_25525BEA8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC1FC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.NoncompliantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BEA8);
  }
  return result;
}

unint64_t sub_21C2F328C()
{
  unint64_t result;

  result = qword_25525BEB0;
  if (!qword_25525BEB0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC274, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BEB0);
  }
  return result;
}

unint64_t sub_21C2F32D4()
{
  unint64_t result;

  result = qword_25525BEB8;
  if (!qword_25525BEB8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC29C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DHSComplianceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BEB8);
  }
  return result;
}

unint64_t sub_21C2F331C()
{
  unint64_t result;

  result = qword_25525BEC0;
  if (!qword_25525BEC0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC11C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BEC0);
  }
  return result;
}

unint64_t sub_21C2F3364()
{
  unint64_t result;

  result = qword_25525BEC8;
  if (!qword_25525BEC8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC144, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BEC8);
  }
  return result;
}

unint64_t sub_21C2F33AC()
{
  unint64_t result;

  result = qword_25525BED0;
  if (!qword_25525BED0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC064, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BED0);
  }
  return result;
}

unint64_t sub_21C2F33F4()
{
  unint64_t result;

  result = qword_25525BED8;
  if (!qword_25525BED8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AC08C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BED8);
  }
  return result;
}

unint64_t sub_21C2F343C()
{
  unint64_t result;

  result = qword_25525BEE0;
  if (!qword_25525BEE0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABFAC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BEE0);
  }
  return result;
}

unint64_t sub_21C2F3484()
{
  unint64_t result;

  result = qword_25525BEE8;
  if (!qword_25525BEE8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABFD4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BEE8);
  }
  return result;
}

unint64_t sub_21C2F34CC()
{
  unint64_t result;

  result = qword_25525BEF0;
  if (!qword_25525BEF0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABEF4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BEF0);
  }
  return result;
}

unint64_t sub_21C2F3514()
{
  unint64_t result;

  result = qword_25525BEF8;
  if (!qword_25525BEF8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABF1C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BEF8);
  }
  return result;
}

unint64_t sub_21C2F355C()
{
  unint64_t result;

  result = qword_25525BF00;
  if (!qword_25525BF00)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABE3C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF00);
  }
  return result;
}

unint64_t sub_21C2F35A4()
{
  unint64_t result;

  result = qword_25525BF08;
  if (!qword_25525BF08)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABE64, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF08);
  }
  return result;
}

unint64_t sub_21C2F35EC()
{
  unint64_t result;

  result = qword_25525BF10;
  if (!qword_25525BF10)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABD84, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF10);
  }
  return result;
}

unint64_t sub_21C2F3634()
{
  unint64_t result;

  result = qword_25525BF18;
  if (!qword_25525BF18)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABDAC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF18);
  }
  return result;
}

unint64_t sub_21C2F367C()
{
  unint64_t result;

  result = qword_25525BF20;
  if (!qword_25525BF20)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABCCC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF20);
  }
  return result;
}

unint64_t sub_21C2F36C4()
{
  unint64_t result;

  result = qword_25525BF28;
  if (!qword_25525BF28)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABCF4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.IssuingAuthority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF28);
  }
  return result;
}

unint64_t sub_21C2F370C()
{
  unint64_t result;

  result = qword_25525BF30;
  if (!qword_25525BF30)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABBC4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.FemaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF30);
  }
  return result;
}

unint64_t sub_21C2F3754()
{
  unint64_t result;

  result = qword_25525BF38;
  if (!qword_25525BF38)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABBEC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.FemaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF38);
  }
  return result;
}

unint64_t sub_21C2F379C()
{
  unint64_t result;

  result = qword_25525BF40;
  if (!qword_25525BF40)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABB74, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.MaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF40);
  }
  return result;
}

unint64_t sub_21C2F37E4()
{
  unint64_t result;

  result = qword_25525BF48;
  if (!qword_25525BF48)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABB9C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.MaleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF48);
  }
  return result;
}

unint64_t sub_21C2F382C()
{
  unint64_t result;

  result = qword_25525BF50;
  if (!qword_25525BF50)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABB24, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.NotApplicableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF50);
  }
  return result;
}

unint64_t sub_21C2F3874()
{
  unint64_t result;

  result = qword_25525BF58;
  if (!qword_25525BF58)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABB4C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.NotApplicableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF58);
  }
  return result;
}

unint64_t sub_21C2F38BC()
{
  unint64_t result;

  result = qword_25525BF60;
  if (!qword_25525BF60)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABAD4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.NotSpecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF60);
  }
  return result;
}

unint64_t sub_21C2F3904()
{
  unint64_t result;

  result = qword_25525BF68;
  if (!qword_25525BF68)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABAFC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.NotSpecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF68);
  }
  return result;
}

unint64_t sub_21C2F394C()
{
  unint64_t result;

  result = qword_25525BF70;
  if (!qword_25525BF70)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABA84, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF70);
  }
  return result;
}

unint64_t sub_21C2F3994()
{
  unint64_t result;

  result = qword_25525BF78;
  if (!qword_25525BF78)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABAAC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF78);
  }
  return result;
}

unint64_t sub_21C2F39DC()
{
  unint64_t result;

  result = qword_25525BF80;
  if (!qword_25525BF80)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABC14, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF80);
  }
  return result;
}

unint64_t sub_21C2F3A24()
{
  unint64_t result;

  result = qword_25525BF88;
  if (!qword_25525BF88)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ABC3C, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Sex.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF88);
  }
  return result;
}

unint64_t sub_21C2F3A6C()
{
  unint64_t result;

  result = qword_25525BF90;
  if (!qword_25525BF90)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AB9CC, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF90);
  }
  return result;
}

unint64_t sub_21C2F3AB4()
{
  unint64_t result;

  result = qword_25525BF98;
  if (!qword_25525BF98)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AB9F4, &type metadata for MobileDriversLicenseDataResponseInternal.DocumentElements.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BF98);
  }
  return result;
}

unint64_t sub_21C2F3AFC()
{
  unint64_t result;

  result = qword_25525BFA0;
  if (!qword_25525BFA0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AB914, &type metadata for MobileDriversLicenseDataResponseInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BFA0);
  }
  return result;
}

unint64_t sub_21C2F3B44()
{
  unint64_t result;

  result = qword_25525BFA8;
  if (!qword_25525BFA8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AB93C, &type metadata for MobileDriversLicenseDataResponseInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525BFA8);
  }
  return result;
}

uint64_t sub_21C2F3B88(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000021C3B9E50 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726575737369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21C2F3C6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746565727473 && a2 == 0xE600000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F436C6174736F70 && a2 == 0xEA00000000006564 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F436F7369 && a2 == 0xEE0065646F437972)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_21C2F3E98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C616D6566 && a2 == 0xE600000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701601645 && a2 == 0xE400000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696C707041746F6ELL && a2 == 0xED0000656C626163 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6963657053746F6ELL && a2 == 0xEC00000064656966 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_21C2F40D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636964736972756ALL && a2 == 0xEC0000006E6F6974 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E756F436F7369 && a2 == 0xEE0065646F437972)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21C2F4258(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1852270963 && a2 == 0xE400000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21C2F4384(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x800000021C3B9E70 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000065 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365646F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_21C2F4560(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000065 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_21C2F4750(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21C2F4848(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x43656C6369686576 && a2 == 0xEC0000007373616CLL;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000021C3B9E90 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000021C3B9EB0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21C2F49A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E61696C706D6F63 && a2 == 0xE900000000000074;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C706D6F636E6F6ELL && a2 == 0xEC000000746E6169)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21C2F4ABC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x706D6F43656D616ELL && a2 == 0xEE0073746E656E6FLL;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469617274726F70 && a2 == 0xEC00000061746144 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000021C3B8EC0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6942664F65746164 && a2 == 0xEB00000000687472 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 7890291 && a2 == 0xE300000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021C3B9ED0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021C3B9EF0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000021C3B9F10 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEE007265626D754ELL || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021C3B9F30 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000021C3B9F50 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000021C3B9F70)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_21C2F5064(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21C2F50A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21C2F50EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_21C2F5130(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1[10];
  v2 = a1[11];
  sub_21C2EDAC4(*a1, a1[1]);
  sub_21C2EDAC4(v4, v2);
  return a1;
}

uint64_t static InternalOptions.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t InternalOptions.returnReadResultImmediately.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader15InternalOptions_returnReadResultImmediately);
}

uint64_t InternalOptions.includeErrorInReadResult.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader15InternalOptions_includeErrorInReadResult);
}

Swift::Void __swiftcall InternalOptions.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader15InternalOptions_returnReadResultImmediately);
  v4 = (void *)sub_21C3A7EB4();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v3, v4);

  v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader15InternalOptions_includeErrorInReadResult);
  v6 = (id)sub_21C3A7EB4();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v5, v6);

}

id InternalOptions.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_21C2F5530(a1);

  return v4;
}

id InternalOptions.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_21C2F5530(a1);

  return v2;
}

id InternalOptions.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void InternalOptions.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InternalOptions.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_21C2F5530(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  _BYTE *v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = v1;
  v5 = (void *)sub_21C3A7EB4();
  v6 = objc_msgSend(a1, sel_decodeBoolForKey_, v5);

  v7 = (void *)sub_21C3A7EB4();
  LOBYTE(a1) = objc_msgSend(a1, sel_decodeBoolForKey_, v7);

  v4[OBJC_IVAR____TtC15ProximityReader15InternalOptions_returnReadResultImmediately] = v6;
  v4[OBJC_IVAR____TtC15ProximityReader15InternalOptions_includeErrorInReadResult] = (_BYTE)a1;

  v9.receiver = v4;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t type metadata accessor for InternalOptions()
{
  return objc_opt_self();
}

uint64_t method lookup function for InternalOptions()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InternalOptions.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

Swift::Void __swiftcall notificationCallback(notification:responseCode:)(CFUserNotificationRef_optional notification, Swift::UInt responseCode)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  __CFUserNotification *v18;
  void (*v19)(Swift::UInt *);
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  Swift::UInt v34;
  Swift::UInt v35[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - v11;
  if (qword_25525AAD8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F60);
  sub_21C2F50EC(v13, (uint64_t)v12, (uint64_t *)&unk_25525B0E0);
  v14 = sub_21C3A79D4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v12, 1, v14) == 1)
  {
    sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
    if (notification.value)
    {
LABEL_5:
      v17 = qword_25525AA78;
      v18 = notification.value;
      if (v17 != -1)
        swift_once();
      swift_beginAccess();
      v19 = (void (*)(Swift::UInt *))sub_21C2F78DC((uint64_t)v18);
      swift_endAccess();
      if (v19)
      {
        v35[0] = responseCode & 3;
        v19(v35);
        sub_21C2F7984((uint64_t)v19);

        return;
      }
      sub_21C2F50EC(v13, (uint64_t)v9, (uint64_t *)&unk_25525B0E0);
      if (v16(v9, 1, v14) == 1)
      {

        v25 = (uint64_t)v9;
        goto LABEL_16;
      }
      v29 = sub_21C3A79BC();
      v30 = sub_21C3A81C0();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_21C2CD000, v29, v30, "BaselineErrorDialog callback object not found", v31, 2u);
        MEMORY[0x22077AF8C](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
      return;
    }
  }
  else
  {
    v34 = responseCode;
    responseCode = sub_21C3A79BC();
    v20 = sub_21C3A81D8();
    if (os_log_type_enabled((os_log_t)responseCode, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v33 = v9;
      v22 = v15;
      v23 = v21;
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_21C2CD000, (os_log_t)responseCode, v20, "notificationCallback(notification:responseCode:)", v21, 2u);
      v24 = v23;
      v15 = v22;
      v9 = v33;
      MEMORY[0x22077AF8C](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    LOBYTE(responseCode) = v34;
    if (notification.value)
      goto LABEL_5;
  }
  sub_21C2F50EC(v13, (uint64_t)v6, (uint64_t *)&unk_25525B0E0);
  if (v16(v6, 1, v14) == 1)
  {
    v25 = (uint64_t)v6;
LABEL_16:
    sub_21C2D775C(v25, (uint64_t *)&unk_25525B0E0);
    return;
  }
  v26 = sub_21C3A79BC();
  v27 = sub_21C3A81C0();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_21C2CD000, v26, v27, "BaselineErrorDialog callback notification is nil", v28, 2u);
    MEMORY[0x22077AF8C](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
}

unint64_t sub_21C2F5A40()
{
  unint64_t result;

  result = sub_21C2F8478(MEMORY[0x24BEE4AF8]);
  qword_25525C018 = result;
  return result;
}

unint64_t sub_21C2F5A64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C168);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C170);
  v6 = sub_21C3A84D8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21C2F50EC(v12, (uint64_t)v5, &qword_25525C168);
    v14 = *v5;
    v15 = v5[1];
    result = sub_21C2DC178(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, v9, v21);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C2F5C08(uint64_t a1)
{
  return sub_21C2F5C20(a1, &qword_25525C160);
}

unint64_t sub_21C2F5C14(uint64_t a1)
{
  return sub_21C2F5C20(a1, &qword_25525C158);
}

unint64_t sub_21C2F5C20(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_21C3A84D8();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v6 = *((_QWORD *)v5 - 2);
    v7 = *((_QWORD *)v5 - 1);
    v14 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_21C2DC178(v6, v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v3[6] + 16 * result);
    *v10 = v6;
    v10[1] = v7;
    *(_OWORD *)(v3[7] + 16 * result) = v14;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C2F5D44(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C140);
  v2 = sub_21C3A84D8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21C2F50EC(v6, (uint64_t)v15, &qword_25525C148);
    result = sub_21C2DCA44((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_21C2D7828(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C2F5E84(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C130);
  v2 = sub_21C3A84D8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v22 = v4;
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    v9 = v5[1];
    v11 = v5[2];
    v10 = v5[3];
    v12 = v5[4];
    v13 = v5[5];
    swift_bridgeObjectRetain();
    sub_21C2D1E94(v8, v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21C2DC178(v6, v7);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = (uint64_t *)(v3[7] + 48 * result);
    *v17 = v8;
    v17[1] = v9;
    v17[2] = v11;
    v17[3] = v10;
    v17[4] = v12;
    v17[5] = v13;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v3[2] = v20;
    v5 += 8;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C2F5FE8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D500);
  v2 = sub_21C3A84D8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21C2F50EC(v6, (uint64_t)&v15, &qword_25525C120);
    v7 = v15;
    v8 = v16;
    result = sub_21C2DC178(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_21C2D7828(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C2F611C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C110);
  v2 = sub_21C3A84D8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21C2F50EC(v6, (uint64_t)&v13, &qword_25525C118);
    v7 = v13;
    result = sub_21C2DCA74(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_21C2D7828(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C2F6248(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C108);
  v2 = (_QWORD *)sub_21C3A84D8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_21C2DC178(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C2F6360(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C100);
  v2 = (_QWORD *)sub_21C3A84D8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21C2DC178(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_QWORD *BaselineErrorDialog.__allocating_init(localizedMessage:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  v4 = (_QWORD *)swift_allocObject();
  v4[2] = 0;
  if (!a2)
  {
    if (qword_25525AAC0 != -1)
      swift_once();
    v5 = (void *)qword_255278F20;
    v6 = (void *)sub_21C3A7EB4();
    v7 = (void *)sub_21C3A7EB4();
    v8 = (void *)sub_21C3A7EB4();
    v9 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, v7, v8);

    a1 = sub_21C3A7ED8();
    a2 = v10;

  }
  v4[3] = a1;
  v4[4] = a2;
  return v4;
}

_QWORD *BaselineErrorDialog.init(localizedMessage:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2[2] = 0;
  if (a2)
  {
    v3 = a2;
  }
  else
  {
    if (qword_25525AAC0 != -1)
      swift_once();
    v5 = (void *)qword_255278F20;
    v6 = (void *)sub_21C3A7EB4();
    v7 = (void *)sub_21C3A7EB4();
    v8 = (void *)sub_21C3A7EB4();
    v9 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, v7, v8);

    a1 = sub_21C3A7ED8();
    v3 = v10;

  }
  v2[3] = a1;
  v2[4] = v3;
  return v2;
}

void sub_21C2F66B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t inited;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  const __CFDictionary *v55;
  CFUserNotificationRef v56;
  void *v57;
  void *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  __CFUserNotification *v63;
  __CFRunLoopSource *RunLoopSource;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  char isUniquelyReferenced_nonNull_native;
  __CFRunLoop *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  SInt32 v80;
  id v81;
  uint64_t v82;

  v1 = v0;
  v82 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v72 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v72 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v72 - v12;
  if (qword_25525AAD8 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v2, (uint64_t)qword_255278F60);
  sub_21C2F50EC(v14, (uint64_t)v13, (uint64_t *)&unk_25525B0E0);
  v15 = sub_21C3A79D4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v13, 1, v15) == 1)
  {
    sub_21C2D775C((uint64_t)v13, (uint64_t *)&unk_25525B0E0);
    if (*(_QWORD *)(v1 + 16))
      goto LABEL_5;
  }
  else
  {
    sub_21C365870(v1, 0x2928776F6873, 0xE600000000000000, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    if (*(_QWORD *)(v1 + 16))
    {
LABEL_5:
      sub_21C2F50EC(v14, (uint64_t)v4, (uint64_t *)&unk_25525B0E0);
      if (v17(v4, 1, v15) != 1)
      {
        v18 = sub_21C3A79BC();
        v19 = sub_21C3A81D8();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_21C2CD000, v18, v19, "Already showing, don't show another one", v20, 2u);
          MEMORY[0x22077AF8C](v20, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v15);
        return;
      }
LABEL_15:
      sub_21C2D775C((uint64_t)v4, (uint64_t *)&unk_25525B0E0);
      return;
    }
  }
  v75 = v14;
  v76 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v17;
  v72 = v10;
  v73 = v16;
  v74 = v7;
  v77 = v15;
  v78 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C020);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21C3ACA00;
  v81 = (id)*MEMORY[0x24BDBD6D8];
  v22 = v81;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C028);
  sub_21C2F7994();
  sub_21C3A83C4();
  if (qword_25525AAC0 != -1)
    swift_once();
  v23 = (void *)qword_255278F20;
  v24 = (void *)sub_21C3A7EB4();
  v25 = (void *)sub_21C3A7EB4();
  v26 = (void *)sub_21C3A7EB4();
  v27 = objc_msgSend(v23, sel_localizedStringForKey_value_table_, v24, v25, v26);

  v28 = sub_21C3A7ED8();
  v30 = v29;

  v31 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 96) = MEMORY[0x24BEE0D00];
  v32 = v31;
  *(_QWORD *)(inited + 72) = v28;
  *(_QWORD *)(inited + 80) = v30;
  v81 = (id)*MEMORY[0x24BDBD6E0];
  v33 = v81;
  sub_21C3A83C4();
  v34 = v78;
  v35 = *(_QWORD *)(v78 + 24);
  v36 = *(_QWORD *)(v78 + 32);
  *(_QWORD *)(inited + 168) = v32;
  *(_QWORD *)(inited + 144) = v35;
  *(_QWORD *)(inited + 152) = v36;
  v81 = (id)*MEMORY[0x24BDBD6F8];
  v37 = v81;
  swift_bridgeObjectRetain();
  sub_21C3A83C4();
  v38 = (void *)qword_255278F20;
  v39 = (void *)sub_21C3A7EB4();
  v40 = (void *)sub_21C3A7EB4();
  v41 = (void *)sub_21C3A7EB4();
  v42 = objc_msgSend(v38, sel_localizedStringForKey_value_table_, v39, v40, v41);

  v43 = sub_21C3A7ED8();
  v45 = v44;

  *(_QWORD *)(inited + 240) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 216) = v43;
  *(_QWORD *)(inited + 224) = v45;
  v81 = (id)*MEMORY[0x24BDBD6F0];
  v46 = v81;
  sub_21C3A83C4();
  v47 = (void *)qword_255278F20;
  v48 = (void *)sub_21C3A7EB4();
  v49 = (void *)sub_21C3A7EB4();
  v50 = (void *)sub_21C3A7EB4();
  v51 = objc_msgSend(v47, sel_localizedStringForKey_value_table_, v48, v49, v50);

  v52 = sub_21C3A7ED8();
  v54 = v53;

  *(_QWORD *)(inited + 312) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 288) = v52;
  *(_QWORD *)(inited + 296) = v54;
  sub_21C2F5D44(inited);
  v80 = 0;
  v55 = (const __CFDictionary *)sub_21C3A7E30();
  swift_bridgeObjectRelease();
  v56 = CFUserNotificationCreate(0, 0.0, 3uLL, &v80, v55);

  v57 = *(void **)(v34 + 16);
  *(_QWORD *)(v34 + 16) = v56;

  v58 = *(void **)(v34 + 16);
  if (v58 && !v80)
  {
    v63 = v58;
    RunLoopSource = CFUserNotificationCreateRunLoopSource(0, v63, (CFUserNotificationCallBack)sub_21C2F6FB8, 0);
    v65 = (uint64_t)v72;
    sub_21C2F50EC(v75, (uint64_t)v72, (uint64_t *)&unk_25525B0E0);
    v66 = v77;
    if (v76(v65, 1, v77) == 1)
    {
      sub_21C2D775C(v65, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v67 = sub_21C3A79BC();
      v68 = sub_21C3A81D8();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v69 = 0;
        _os_log_impl(&dword_21C2CD000, v67, v68, "blockForNotification", v69, 2u);
        MEMORY[0x22077AF8C](v69, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v65, v66);
    }
    if (qword_25525AA78 != -1)
      swift_once();
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v79 = qword_25525C018;
    qword_25525C018 = 0x8000000000000000;
    sub_21C2F7EBC((uint64_t)sub_21C2F7A40, v34, (uint64_t)v63, isUniquelyReferenced_nonNull_native);
    qword_25525C018 = v79;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v71 = CFRunLoopGetMain();
    CFRunLoopAddSource(v71, RunLoopSource, (CFRunLoopMode)*MEMORY[0x24BDBD598]);

  }
  else
  {
    v4 = v74;
    sub_21C2F50EC(v75, (uint64_t)v74, (uint64_t *)&unk_25525B0E0);
    v59 = v77;
    if (v76((uint64_t)v4, 1, v77) == 1)
      goto LABEL_15;
    v60 = sub_21C3A79BC();
    v61 = sub_21C3A81C0();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v62 = 67109120;
      swift_beginAccess();
      LODWORD(v79) = v80;
      sub_21C3A82F8();
      _os_log_impl(&dword_21C2CD000, v60, v61, "Could not create baselineErrorDialog: %d", v62, 8u);
      MEMORY[0x22077AF8C](v62, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v73 + 8))(v4, v59);
  }
}

void sub_21C2F6FB8(void *a1, Swift::UInt a2)
{
  id v4;

  v4 = a1;
  notificationCallback(notification:responseCode:)((CFUserNotificationRef_optional)a1, a2);

}

void sub_21C2F6FF8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint8_t *v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint8_t *v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint8_t *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint8_t *v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint8_t *v60;
  uint8_t *v61;
  uint64_t v62;
  id v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v4);
  v73 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21C3A76C8();
  v75 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v74 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v8);
  v72 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v67 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v67 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v71 = (uint64_t)&v67 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v67 - v18;
  v20 = *a1;
  if (qword_25525AAD8 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v8, (uint64_t)qword_255278F60);
  sub_21C2F50EC(v21, (uint64_t)v19, (uint64_t *)&unk_25525B0E0);
  v22 = sub_21C3A79D4();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v24((uint64_t)v19, 1, v22) == 1)
  {
    sub_21C2D775C((uint64_t)v19, (uint64_t *)&unk_25525B0E0);
    if (v20 != 3)
      goto LABEL_5;
LABEL_14:
    v33 = v21;
    v34 = v70;
    sub_21C2F50EC(v33, v70, (uint64_t *)&unk_25525B0E0);
    if (v24(v34, 1, v22) != 1)
    {
      v36 = sub_21C3A79BC();
      v37 = sub_21C3A81D8();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = v23;
        v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v39 = 0;
        _os_log_impl(&dword_21C2CD000, v36, v37, "Cancelled", v39, 2u);
        v40 = v39;
        v23 = v38;
        MEMORY[0x22077AF8C](v40, -1, -1);
      }

      v41 = *(void (**)(char *, uint64_t))(v23 + 8);
      v42 = (char *)v34;
      goto LABEL_34;
    }
    sub_21C2D775C(v34, (uint64_t *)&unk_25525B0E0);
    goto LABEL_38;
  }
  v68 = v6;
  v69 = v22;
  v27 = v23;
  v28 = sub_21C3A79BC();
  v29 = sub_21C3A81D8();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v67 = a2;
    v31 = v30;
    *(_DWORD *)v30 = 134217984;
    v76 = v20;
    sub_21C3A82F8();
    _os_log_impl(&dword_21C2CD000, v28, v29, "blockForNotification response = %lu", v31, 0xCu);
    v32 = v31;
    a2 = v67;
    MEMORY[0x22077AF8C](v32, -1, -1);
  }

  v23 = v27;
  v22 = v69;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v69);
  v6 = v68;
  if (v20 == 3)
    goto LABEL_14;
LABEL_5:
  if (v20 == 1)
  {
    sub_21C2F50EC(v21, (uint64_t)v14, (uint64_t *)&unk_25525B0E0);
    if (v24((uint64_t)v14, 1, v22) != 1)
    {
      v43 = sub_21C3A79BC();
      v44 = sub_21C3A81D8();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = v23;
        v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_21C2CD000, v43, v44, "Not Now", v46, 2u);
        v47 = v46;
        v23 = v45;
        MEMORY[0x22077AF8C](v47, -1, -1);
      }

      v41 = *(void (**)(char *, uint64_t))(v23 + 8);
      v42 = v14;
      goto LABEL_34;
    }
    sub_21C2D775C((uint64_t)v14, (uint64_t *)&unk_25525B0E0);
LABEL_38:
    v66 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = 0;

    return;
  }
  if (v20)
  {
    v35 = v72;
    sub_21C2F50EC(v21, v72, (uint64_t *)&unk_25525B0E0);
    if (v24(v35, 1, v22) == 1)
    {
      sub_21C2D775C(v35, (uint64_t *)&unk_25525B0E0);
      goto LABEL_38;
    }
    v57 = sub_21C3A79BC();
    v58 = sub_21C3A81C0();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = v23;
      v60 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v60 = 134217984;
      v76 = v20;
      sub_21C3A82F8();
      _os_log_impl(&dword_21C2CD000, v57, v58, "Unexpected baselineErrorDialog responseCode: %lu", v60, 0xCu);
      v61 = v60;
      v23 = v59;
      MEMORY[0x22077AF8C](v61, -1, -1);
    }

    v41 = *(void (**)(char *, uint64_t))(v23 + 8);
    v42 = (char *)v35;
LABEL_34:
    v62 = v22;
LABEL_37:
    v41(v42, v62);
    goto LABEL_38;
  }
  if (qword_25525AAE8 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v8, (uint64_t)qword_255278F90);
  v26 = v71;
  sub_21C2F50EC(v25, v71, (uint64_t *)&unk_25525B0E0);
  if (v24(v26, 1, v22) == 1)
  {
    sub_21C2D775C(v26, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v48 = sub_21C3A79BC();
    v49 = sub_21C3A81D8();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = v23;
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_21C2CD000, v48, v49, "Install", v51, 2u);
      v52 = v51;
      v23 = v50;
      MEMORY[0x22077AF8C](v52, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v26, v22);
  }
  v53 = v75;
  v54 = (uint64_t)v73;
  sub_21C3A76B0();
  v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v54, 1, v6);
  v56 = v74;
  if (v55 == 1)
  {
    sub_21C2D775C(v54, &qword_25525C138);
    goto LABEL_38;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v74, v54, v6);
  v63 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v63)
  {
    v64 = v63;
    v65 = (void *)sub_21C3A7668();
    objc_msgSend(v64, sel_openSensitiveURL_withOptions_, v65, 0);

    v41 = *(void (**)(char *, uint64_t))(v53 + 8);
    v42 = v56;
    v62 = v6;
    goto LABEL_37;
  }
  __break(1u);
}

uint64_t BaselineErrorDialog.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BaselineErrorDialog.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21C2F7790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_21C2DC178(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21C3522BC();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a3, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_21C351974(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_21C2F78C8(uint64_t a1, uint64_t a2)
{
  return sub_21C2F7A5C(a1, a2, (void (*)(unint64_t, uint64_t))sub_21C351B80, (void (*)(void))sub_21C352520);
}

uint64_t sub_21C2F78DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_21C2DC140(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21C35252C();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v5);
  sub_21C351B84(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_21C2F7984(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

unint64_t sub_21C2F7994()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25525C030;
  if (!qword_25525C030)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525C028);
    v2 = sub_21C2F79F8();
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25525C030);
  }
  return result;
}

unint64_t sub_21C2F79F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525AD90;
  if (!qword_25525AD90)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x22077AECC](&unk_21C3A9B00, v1);
    atomic_store(result, (unint64_t *)&qword_25525AD90);
  }
  return result;
}

void sub_21C2F7A40(uint64_t *a1)
{
  uint64_t v1;

  sub_21C2F6FF8(a1, v1);
}

uint64_t sub_21C2F7A48(uint64_t a1, uint64_t a2)
{
  return sub_21C2F7A5C(a1, a2, (void (*)(unint64_t, uint64_t))sub_21C351B80, (void (*)(void))sub_21C3526D4);
}

uint64_t sub_21C2F7A5C(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, uint64_t), void (*a4)(void))
{
  uint64_t *v4;
  uint64_t *v7;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v7 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_21C2DC178(a1, a2);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v7;
  v16 = *v7;
  *v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    v13 = v16;
  }
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 16 * v10);
  a3(v10, v13);
  *v7 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

double sub_21C2F7B48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_21C2DC178(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21C352898();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_21C2D7828((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_21C351EEC(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_21C2F7C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_21C2DC178(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21C352A7C();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for AnalyticsReporter();
    v14 = *(_QWORD *)(v13 - 8);
    sub_21C2F83F0(v12 + *(_QWORD *)(v14 + 72) * v8, a3);
    sub_21C3520C0(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for AnalyticsReporter();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_21C2F7D60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21C2DC178(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21C3522BC();
      goto LABEL_7;
    }
    sub_21C3509D8(v15, a4 & 1);
    v22 = sub_21C2DC178(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21C352CA8(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_21C3A867C();
  __break(1u);
  return result;
}

uint64_t sub_21C2F7EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_21C2F7FF4(a1, a2, a3, a4, a5, (void (*)(void))sub_21C352520, (void (*)(void))sub_21C350D44, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21C352D3C);
}

uint64_t sub_21C2F7EBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21C2DC140(a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(v18[7] + 16 * v12);
        result = swift_release();
        *v19 = a1;
        v19[1] = a2;
        return result;
      }
      return sub_21C352D40(v12, a3, a1, a2, v18);
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21C35252C();
      goto LABEL_7;
    }
    sub_21C350D50(v15, a4 & 1);
    v21 = sub_21C2DC140(a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      return sub_21C352D40(v12, a3, a1, a2, v18);
    }
  }
  result = sub_21C3A867C();
  __break(1u);
  return result;
}

uint64_t sub_21C2F7FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_21C2F7FF4(a1, a2, a3, a4, a5, (void (*)(void))sub_21C3526D4, (void (*)(void))sub_21C351000, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21C352D3C);
}

uint64_t sub_21C2F7FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(void), void (*a7)(void), void (*a8)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v8;
  uint64_t *v11;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v11 = v8;
  v16 = *v8;
  v18 = sub_21C2DC178(a3, a4);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
  }
  else
  {
    v22 = v17;
    v23 = *(_QWORD *)(v16 + 24);
    if (v23 >= v21 && (a5 & 1) != 0)
    {
LABEL_7:
      v24 = *v11;
      if ((v22 & 1) != 0)
      {
LABEL_8:
        v25 = (_QWORD *)(*(_QWORD *)(v24 + 56) + 16 * v18);
        result = swift_release();
        *v25 = a1;
        v25[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v23 >= v21 && (a5 & 1) == 0)
    {
      a6();
      goto LABEL_7;
    }
    a7();
    v27 = sub_21C2DC178(a3, a4);
    if ((v22 & 1) == (v28 & 1))
    {
      v18 = v27;
      v24 = *v11;
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a8(v18, a3, a4, a1, a2, v24);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_21C3A867C();
  __break(1u);
  return result;
}

_OWORD *sub_21C2F814C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21C2DC178(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_21C2D7828(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21C352898();
      goto LABEL_7;
    }
    sub_21C351310(v15, a4 & 1);
    v21 = sub_21C2DC178(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21C352DD8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_21C3A867C();
  __break(1u);
  return result;
}

uint64_t sub_21C2F827C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21C2DC178(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for AnalyticsReporter() - 8) + 72) * v12;
        return sub_21C2F8434(a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21C352A7C();
      goto LABEL_7;
    }
    sub_21C35160C(v15, a4 & 1);
    v22 = sub_21C2DC178(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21C352E40(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_21C3A867C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BaselineErrorDialog()
{
  return objc_opt_self();
}

uint64_t method lookup function for BaselineErrorDialog()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BaselineErrorDialog.__allocating_init(localizedMessage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of BaselineErrorDialog.show()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_21C2F83F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnalyticsReporter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2F8434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnalyticsReporter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_21C2F8478(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  _OWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  _OWORD *v11;
  char v12;
  __int128 v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C150);
  v3 = (_QWORD *)sub_21C3A84D8();
  v4 = *(_QWORD *)(a1 + 32);
  v13 = *(_OWORD *)(a1 + 40);
  result = sub_21C2DC140(v4);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v7 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v13;
    v8 = v3[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      break;
    v3[2] = v10;
    if (!--v1)
      goto LABEL_8;
    v11 = (_OWORD *)((char *)v7 + 24);
    v4 = *((_QWORD *)v7 - 1);
    v13 = *v7;
    swift_retain();
    result = sub_21C2DC140(v4);
    v7 = v11;
    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_21C2F857C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C128);
  v3 = (_QWORD *)sub_21C3A84D8();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_21C2DC140(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain();
    result = sub_21C2DC140(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_21C2F8678()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TransactionValidator()
{
  return objc_opt_self();
}

uint64_t sub_21C2F86A8(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t result;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  unint64_t v50;
  __int16 v51;
  unsigned int v52;
  __int16 v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unsigned int v57;
  id v58;
  id v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[2];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t)v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v79 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v79 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v79 - v13;
  type metadata accessor for CurrencyDefinitions();
  static CurrencyDefinitions.find(isoCurrencyCode:countryCode:)(*((_QWORD *)a1 + 3), *((_QWORD *)a1 + 4), -1, (uint64_t)&v95);
  if (!v98)
  {
    if (qword_25525AAD0 == -1)
    {
LABEL_7:
      v25 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F48);
      sub_21C2F50EC(v25, v5, (uint64_t *)&unk_25525B0E0);
      v26 = sub_21C3A79D4();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v5, 1, v26) == 1)
      {
        sub_21C2D775C(v5, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v36 = sub_21C3A79BC();
        v37 = sub_21C3A81C0();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v38 = 0;
          _os_log_impl(&dword_21C2CD000, v36, v37, "PaymentCardTransactionRequest - invalidCurrencyCode", v38, 2u);
          MEMORY[0x22077AF8C](v38, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v5, v26);
      }
      sub_21C2FA030();
      swift_allocError();
      *(_OWORD *)v39 = xmmword_21C3ACA80;
      *(_BYTE *)(v39 + 16) = 2;
      return swift_willThrow();
    }
LABEL_37:
    swift_once();
    goto LABEL_7;
  }
  v79[0] = (uint64_t)v11;
  v79[1] = v1;
  v101 = v98;
  v92 = v95;
  v93 = v96;
  v94 = v99;
  v90 = v97;
  v91 = v100;
  v15 = *a1;
  v16 = *((unsigned __int16 *)a1 + 2);
  v89 = *((unsigned __int16 *)a1 + 3);
  v17 = *((unsigned __int16 *)a1 + 4);
  v18 = *((unsigned __int16 *)a1 + 5);
  v88 = *((unsigned __int16 *)a1 + 6);
  v87 = *((unsigned __int16 *)a1 + 7);
  v19 = *((unsigned __int16 *)a1 + 8);
  v20 = *((unsigned __int16 *)a1 + 9);
  if (qword_25525AAD0 != -1)
    swift_once();
  v82 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F48);
  sub_21C2F50EC(v82, (uint64_t)v14, (uint64_t *)&unk_25525B0E0);
  v3 = sub_21C3A79D4();
  v84 = *(_QWORD *)(v3 - 8);
  v83 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
  v21 = v83(v14, 1, v3);
  v22 = v15 | (v16 << 32);
  v5 = v17 | (v18 << 16);
  v23 = v19 | (v20 << 16);
  v85 = v3;
  v86 = v19 | (v20 << 16);
  if (v21 == 1)
  {
    sub_21C2D775C((uint64_t)v14, (uint64_t *)&unk_25525B0E0);
    v24 = v91;
  }
  else
  {
    v80 = v5;
    v81 = v22;
    v28 = v92;
    v29 = v93;
    sub_21C2D1E94(v92, v93);
    swift_bridgeObjectRetain();
    v30 = v101;
    swift_bridgeObjectRetain();
    v31 = sub_21C3A79BC();
    v32 = sub_21C3A81B4();
    v33 = os_log_type_enabled(v31, v32);
    v24 = v91;
    if (v33)
    {
      v34 = swift_slowAlloc();
      *(_DWORD *)v34 = 134218240;
      v23 = v86;
      v95 = sub_21C3A82D4();
      result = sub_21C3A82F8();
      *(_WORD *)(v34 + 12) = 2048;
      if (__OFSUB__(0, v24))
      {
        __break(1u);
        return result;
      }
      v95 = -v24;
      sub_21C3A82F8();
      sub_21C2FA0C0(v92, v93, v90, v101);
      _os_log_impl(&dword_21C2CD000, v31, v32, "validateAmount - requested: %ld, expected: %ld", (uint8_t *)v34, 0x16u);
      MEMORY[0x22077AF8C](v34, -1, -1);

    }
    else
    {

      sub_21C2FA0C0(v28, v29, v90, v30);
      v23 = v86;
    }
    v5 = v80;
    v3 = v85;
    (*(void (**)(char *, uint64_t))(v84 + 8))(v14, v85);
    v22 = v81;
  }
  v40 = v22 | (v89 << 48);
  v41 = v5 | (v88 << 32) | (v87 << 48);
  v42 = sub_21C3A82D4();
  if (__OFSUB__(0, v24))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v42 >= -v24)
  {
    sub_21C3A82B0();
    v45 = sub_21C3A76D4();
    v48 = MEMORY[0x22077A4AC](v40, v41, v23, v45, v46, v47);
    v49 = v48;
    v51 = v50;
    v53 = v52;
    v54 = HIDWORD(v48);
    v55 = HIWORD(v48);
    v56 = v50 >> 16;
    v88 = HIDWORD(v50);
    v89 = HIWORD(v50);
    v57 = HIWORD(v52);
    v58 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    LODWORD(v95) = v49;
    WORD2(v95) = v54;
    HIWORD(v95) = v55;
    LOWORD(v96) = v51;
    WORD1(v96) = v56;
    WORD2(v96) = v88;
    HIWORD(v96) = v89;
    LOWORD(v97) = v53;
    WORD1(v97) = v57;
    v59 = objc_msgSend(v58, sel_initWithDecimal_, &v95);
    v60 = (uint64_t)objc_msgSend(v59, sel_integerValue);

    sub_21C3A82B0();
    if ((sub_21C3A82BC() & 1) != 0 && v60 < 1000000000000)
      return sub_21C2FA0C0(v92, v93, v90, v101);
    v70 = v79[0];
    sub_21C2F50EC(v82, v79[0], (uint64_t *)&unk_25525B0E0);
    v71 = v83((char *)v70, 1, v85);
    v72 = v101;
    v73 = v93;
    if (v71 == 1)
    {
      sub_21C2D775C(v70, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v74 = sub_21C3A79BC();
      v75 = sub_21C3A81C0();
      if (os_log_type_enabled(v74, v75))
      {
        v76 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v76 = 0;
        _os_log_impl(&dword_21C2CD000, v74, v75, "PaymentCardTransactionRequest - invalidAmount", v76, 2u);
        MEMORY[0x22077AF8C](v76, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v70, v85);
    }
    v77 = v92;
    sub_21C2FA030();
    swift_allocError();
    *(_OWORD *)v78 = xmmword_21C3ACA70;
    *(_BYTE *)(v78 + 16) = 2;
    swift_willThrow();
    v66 = v77;
    v67 = v73;
    v68 = v90;
    v69 = v72;
  }
  else
  {
    sub_21C2F50EC(v82, (uint64_t)v8, (uint64_t *)&unk_25525B0E0);
    if (v83(v8, 1, v3) == 1)
    {
      sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
      v43 = v101;
      v44 = v93;
    }
    else
    {
      v61 = sub_21C3A79BC();
      v62 = sub_21C3A81C0();
      v63 = os_log_type_enabled(v61, v62);
      v43 = v101;
      v44 = v93;
      if (v63)
      {
        v64 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v64 = 0;
        _os_log_impl(&dword_21C2CD000, v61, v62, "validateAmount - too many decimal places", v64, 2u);
        MEMORY[0x22077AF8C](v64, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v84 + 8))(v8, v3);
    }
    sub_21C2FA030();
    swift_allocError();
    *(_OWORD *)v65 = xmmword_21C3ACA70;
    *(_BYTE *)(v65 + 16) = 2;
    swift_willThrow();
    v66 = v92;
    v67 = v44;
    v68 = v90;
    v69 = v43;
  }
  return sub_21C2FA0C0(v66, v67, v68, v69);
}

uint64_t sub_21C2F8F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD v25[8];
  __int128 v26;
  unint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  unint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v25 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v25 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x24BEE4AF8];
  if (v12 <= 4)
  {
    v27 = (unint64_t *)(a1 + 32);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v16 = 136380675;
    v26 = v16;
    v25[5] = MEMORY[0x24BEE4AD8] + 8;
    v31 = xmmword_21C3ACA90;
    v25[6] = v12;
    v25[4] = v8;
    v25[3] = v1;
    v25[2] = v3;
    v25[1] = a1;
    v25[7] = v11;
    v17 = *v27;
    v18 = v27[1];
    v28 = 1;
    v19 = (char *)&loc_21C2F9120 + dword_21C2F9974[v18 >> 62];
    v29 = HIDWORD(v17);
    v30 = v17;
    v32 = v18 >> 62;
    __asm { BR              X8 }
  }
  if (qword_25525AAD0 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F48);
  sub_21C2F50EC(v13, (uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  v14 = sub_21C3A79D4();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14) == 1)
  {
    sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v20 = sub_21C3A79BC();
    v21 = sub_21C3A81C0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_21C2CD000, v20, v21, "too many preferred AIDs", v22, 2u);
      MEMORY[0x22077AF8C](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v14);
  }
  sub_21C2FA030();
  swift_allocError();
  *(_OWORD *)v23 = xmmword_21C3ACAA0;
  *(_BYTE *)(v23 + 16) = 2;
  swift_willThrow();
  return a1;
}

NSObject *sub_21C2F9984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *v32;
  uint64_t v33;
  objc_class *v34;
  objc_class *v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46[2];
  objc_class *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v8);
  v10 = ((char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = type metadata accessor for VASRequest.Merchant(0);
  v11 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = a1;
  v17 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  if (v17)
  {
    a2 = swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    if (!v17)
    {
      swift_bridgeObjectRelease();
      sub_21C2FA030();
      swift_allocError();
      *(_QWORD *)v39 = 0xD000000000000018;
      *(_QWORD *)(v39 + 8) = 0x800000021C3BA1D0;
LABEL_27:
      *(_BYTE *)(v39 + 16) = 0;
      goto LABEL_28;
    }
  }
  if (v17 >= 0x33)
  {
    swift_bridgeObjectRelease();
    if (qword_25525AAD0 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v14, (uint64_t)qword_255278F48);
    sub_21C2F50EC(v18, (uint64_t)v16, (uint64_t *)&unk_25525B0E0);
    v19 = sub_21C3A79D4();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19) == 1)
    {
      sub_21C2D775C((uint64_t)v16, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v10 = sub_21C3A79BC();
      v37 = sub_21C3A81D8();
      if (os_log_type_enabled(v10, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_21C2CD000, v10, v37, "Too many VAS merchants provided", v38, 2u);
        MEMORY[0x22077AF8C](v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v19);
    }
    sub_21C2FA030();
    swift_allocError();
    *(_QWORD *)v39 = 0xD00000000000001FLL;
    *(_QWORD *)(v39 + 8) = 0x800000021C3BA1B0;
    goto LABEL_27;
  }
  v46[0] = (uint64_t)v7;
  v46[1] = v2;
  v21 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v22 = a2;
  v23 = *(_QWORD *)(v11 + 72);
  v47 = (objc_class *)v22;
  swift_bridgeObjectRetain();
  do
  {
    sub_21C2F9FB0(v21, (uint64_t)v13);
    sub_21C2F50EC((uint64_t)&v13[*(int *)(v51 + 20)], (uint64_t)v10, &qword_25525C138);
    v24 = sub_21C3A76C8();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v24) == 1)
    {
      sub_21C2D775C((uint64_t)v10, &qword_25525C138);
    }
    else
    {
      v26 = sub_21C3A76A4();
      v28 = v27;
      (*(void (**)(NSObject *, uint64_t))(v25 + 8))(v10, v24);
      if ((v28 & 0x1000000000000000) != 0)
      {
        v29 = sub_21C3A7FB0();
        swift_bridgeObjectRelease();
        if (v29 >= 65)
          goto LABEL_18;
      }
      else
      {
        swift_bridgeObjectRelease();
        if ((v28 & 0x2000000000000000) == 0 && (v26 & 0xFFFFFFFFFFFFuLL) >= 0x41)
        {
LABEL_18:
          swift_bridgeObjectRelease_n();
          v49 = 0;
          v50 = 0xE000000000000000;
          sub_21C3A83DC();
          swift_bridgeObjectRelease();
          v49 = 0x746E61686372654DLL;
          v50 = 0xE900000000000020;
          swift_bridgeObjectRetain();
          sub_21C3A7F8C();
          swift_bridgeObjectRelease();
          sub_21C3A7F8C();
          v30 = v49;
          v10 = v50;
          sub_21C2FA030();
          swift_allocError();
          *(_QWORD *)v31 = v30;
          *(_QWORD *)(v31 + 8) = v10;
          *(_BYTE *)(v31 + 16) = 1;
          swift_willThrow();
          sub_21C2F9FF4((uint64_t)v13);
          return v10;
        }
      }
    }
    sub_21C2F9FF4((uint64_t)v13);
    v21 += v23;
    --v17;
  }
  while (v17);
  v32 = v47;
  swift_bridgeObjectRelease();
  v33 = v48;
  v35 = *(objc_class **)(v48 + 24);
  v34 = *(objc_class **)(v48 + 32);
  swift_bridgeObjectRetain();
  if (sub_21C3A7F5C() >= 23)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21C2FA030();
    swift_allocError();
    *(_QWORD *)v36 = 0xD000000000000029;
    *(_QWORD *)(v36 + 8) = 0x800000021C3BA160;
    *(_BYTE *)(v36 + 16) = 1;
LABEL_28:
    swift_willThrow();
    return v10;
  }
  type metadata accessor for VASRequest(0);
  v10 = swift_allocObject();
  v40 = (char *)v10 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage;
  v41 = sub_21C3A7890();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
  v10[2].isa = v32;
  v10[3].isa = v35;
  v10[4].isa = v34;
  v42 = v33 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage;
  swift_beginAccess();
  v43 = v46[0];
  sub_21C2F50EC(v42, v46[0], (uint64_t *)&unk_25525D600);
  v44 = (uint64_t)v10 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage;
  swift_beginAccess();
  sub_21C2D9188(v43, v44);
  swift_endAccess();
  return v10;
}

uint64_t sub_21C2F9FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VASRequest.Merchant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2F9FF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VASRequest.Merchant(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21C2FA030()
{
  unint64_t result;

  result = qword_25525C210;
  if (!qword_25525C210)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCardReaderSession.ReadError, &type metadata for PaymentCardReaderSession.ReadError);
    atomic_store(result, (unint64_t *)&qword_25525C210);
  }
  return result;
}

unint64_t sub_21C2FA074()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525C220;
  if (!qword_25525C220)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25525ECD0);
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_25525C220);
  }
  return result;
}

uint64_t sub_21C2FA0C0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_21C2D2B48(result, a2);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t SessionStatus.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

unint64_t sub_21C2FA110()
{
  unint64_t result;

  result = qword_25525C228;
  if (!qword_25525C228)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for SessionStatus, &type metadata for SessionStatus);
    atomic_store(result, (unint64_t *)&qword_25525C228);
  }
  return result;
}

uint64_t *sub_21C2FA154@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SessionStatus()
{
  return &type metadata for SessionStatus;
}

uint64_t static CurrencyDefinitions.find(isoCurrencyCode:countryCode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v6 = result;
  if (qword_25525AA88 != -1)
    result = swift_once();
  v8 = off_25525C230;
  if (!*((_QWORD *)off_25525C230 + 2))
    goto LABEL_15;
  swift_bridgeObjectRetain();
  v9 = sub_21C2DC178(v6, a2);
  if ((v10 & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
LABEL_15:
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
    return result;
  }
  v11 = (uint64_t *)(v8[7] + 48 * v9);
  v12 = *v11;
  v13 = v11[1];
  v14 = v11[3];
  v23 = v11[2];
  v16 = v11[4];
  v15 = v11[5];
  sub_21C2D1E94(*v11, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v6 == 5395781 && a2 == 0xE300000000000000 || (result = sub_21C3A864C(), (result & 1) != 0))
  {
    v17 = v15;
    sub_21C2D1E94(v12, v13);
    v18 = qword_25525AA80;
    swift_bridgeObjectRetain();
    if (v18 != -1)
      swift_once();
    v19 = qword_255278ED0;
    if (*(_QWORD *)(qword_255278ED0 + 16))
    {
      v20 = sub_21C2DC140(a3);
      if ((v21 & 1) != 0)
      {
        v22 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v16 = v22;
      }
    }
    sub_21C2D1E94(v12, v13);
    swift_bridgeObjectRetain();
    sub_21C2D2B48(v12, v13);
    sub_21C2D2B48(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a4 = v12;
    *(_QWORD *)(a4 + 8) = v13;
    *(_QWORD *)(a4 + 16) = v23;
    *(_QWORD *)(a4 + 24) = v14;
    *(_QWORD *)(a4 + 32) = v16;
    *(_QWORD *)(a4 + 40) = v17;
  }
  else
  {
    *(_QWORD *)a4 = v12;
    *(_QWORD *)(a4 + 8) = v13;
    *(_QWORD *)(a4 + 16) = v23;
    *(_QWORD *)(a4 + 24) = v14;
    *(_QWORD *)(a4 + 32) = v16;
    *(_QWORD *)(a4 + 40) = v15;
  }
  return result;
}

uint64_t sub_21C2FA38C()
{
  uint64_t inited;
  unint64_t v1;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C2D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21C3ACBB0;
  *(_QWORD *)(inited + 32) = 40;
  *(_QWORD *)(inited + 40) = &unk_24E02DCC0;
  *(_QWORD *)(inited + 48) = 56;
  *(_QWORD *)(inited + 56) = &unk_24E02DCF0;
  *(_QWORD *)(inited + 64) = 250;
  *(_QWORD *)(inited + 72) = &unk_24E02DD30;
  *(_QWORD *)(inited + 80) = 276;
  *(_QWORD *)(inited + 88) = &unk_24E02DD60;
  *(_QWORD *)(inited + 96) = 280;
  *(_QWORD *)(inited + 104) = &unk_24E02DD90;
  *(_QWORD *)(inited + 112) = 372;
  *(_QWORD *)(inited + 120) = &unk_24E02DDC0;
  *(_QWORD *)(inited + 128) = 380;
  *(_QWORD *)(inited + 136) = &unk_24E02DDF0;
  *(_QWORD *)(inited + 144) = 528;
  *(_QWORD *)(inited + 152) = &unk_24E02DE20;
  *(_QWORD *)(inited + 160) = 724;
  *(_QWORD *)(inited + 168) = &unk_24E02DE50;
  *(_QWORD *)(inited + 176) = 191;
  *(_QWORD *)(inited + 184) = &unk_24E02DE80;
  *(_QWORD *)(inited + 192) = 196;
  *(_QWORD *)(inited + 200) = &unk_24E02DEB0;
  *(_QWORD *)(inited + 208) = 233;
  *(_QWORD *)(inited + 216) = &unk_24E02DEE0;
  *(_QWORD *)(inited + 224) = 246;
  *(_QWORD *)(inited + 232) = &unk_24E02DF10;
  *(_QWORD *)(inited + 240) = 300;
  *(_QWORD *)(inited + 248) = &unk_24E02DF40;
  *(_QWORD *)(inited + 256) = 428;
  *(_QWORD *)(inited + 264) = &unk_24E02DF70;
  *(_QWORD *)(inited + 272) = 442;
  *(_QWORD *)(inited + 280) = &unk_24E02DFA0;
  *(_QWORD *)(inited + 288) = 470;
  *(_QWORD *)(inited + 296) = &unk_24E02DFD0;
  *(_QWORD *)(inited + 304) = 620;
  *(_QWORD *)(inited + 312) = &unk_24E02E000;
  *(_QWORD *)(inited + 320) = 703;
  *(_QWORD *)(inited + 328) = &unk_24E02E030;
  *(_QWORD *)(inited + 336) = 705;
  *(_QWORD *)(inited + 344) = &unk_24E02E060;
  v1 = sub_21C2F857C((_QWORD *)inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C2D8);
  result = swift_arrayDestroy();
  qword_255278ED0 = v1;
  return result;
}

uint64_t CurrencyDef.bcdData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_21C2D1E94(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t CurrencyDef.symbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CurrencyDef.supportedLocales.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CurrencyDef.supportedLocales.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*CurrencyDef.supportedLocales.modify())()
{
  return nullsub_1;
}

uint64_t CurrencyDef.exponent.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t CurrencyDef.init(_:_:_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t CurrencyDef.init(_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v15;
  uint64_t result;

  v15 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x2000000000000000) == 0)
    v15 = a5 & 0xFFFFFFFFFFFFLL;
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525DB10);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_21C3ACA90;
    *(_QWORD *)(result + 32) = a5;
    *(_QWORD *)(result + 40) = a6;
  }
  else
  {
    swift_bridgeObjectRelease();
    result = 0;
  }
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = result;
  a8[5] = a7;
  return result;
}

void *sub_21C2FA6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C2E0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21C3ACBC0;
  *(_QWORD *)(v0 + 32) = 4477781;
  *(_QWORD *)(v0 + 40) = 0xE300000000000000;
  v1 = sub_21C3935C0((uint64_t)&unk_24E02C470);
  CurrencyDef.init(_:_:_:_:)(v1, v2, 36, 0xE100000000000000, 0x53555F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 48));
  *(_QWORD *)(v0 + 96) = 4473155;
  *(_QWORD *)(v0 + 104) = 0xE300000000000000;
  *(_QWORD *)(v0 + 112) = sub_21C3935C0((uint64_t)&unk_24E02C498);
  *(_QWORD *)(v0 + 120) = v3;
  *(_QWORD *)(v0 + 128) = 36;
  *(_QWORD *)(v0 + 136) = 0xE100000000000000;
  *(_QWORD *)(v0 + 144) = &unk_24E02C4C0;
  *(_OWORD *)(v0 + 152) = xmmword_21C3ACBD0;
  *(_QWORD *)(v0 + 168) = 0xE300000000000000;
  v4 = sub_21C3935C0((uint64_t)&unk_24E02C500);
  CurrencyDef.init(_:_:_:_:)(v4, v5, 36, 0xE100000000000000, 0x55415F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 176));
  *(_QWORD *)(v0 + 224) = 5259847;
  *(_QWORD *)(v0 + 232) = 0xE300000000000000;
  v6 = sub_21C3935C0((uint64_t)&unk_24E02C528);
  CurrencyDef.init(_:_:_:_:)(v6, v7, 41922, 0xA200000000000000, 0x42475F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 240));
  *(_QWORD *)(v0 + 288) = 5395781;
  *(_QWORD *)(v0 + 296) = 0xE300000000000000;
  v8 = sub_21C3935C0((uint64_t)&unk_24E02C550);
  CurrencyDef.init(_:_:_:_:)(v8, v9, 11305698, 0xA300000000000000, 0x52465F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 304));
  *(_QWORD *)(v0 + 352) = 4478804;
  *(_QWORD *)(v0 + 360) = 0xE300000000000000;
  v10 = sub_21C3935C0((uint64_t)&unk_24E02C578);
  CurrencyDef.init(_:_:_:_:)(v10, v11, 2380878, 0xE300000000000000, 0x57545F687ALL, 0xE500000000000000, 2, (_QWORD *)(v0 + 368));
  *(_QWORD *)(v0 + 416) = 4474177;
  *(_QWORD *)(v0 + 424) = 0xE300000000000000;
  v12 = sub_21C3935C0((uint64_t)&unk_24E02C5A0);
  CurrencyDef.init(_:_:_:_:)(v12, v13, 4474177, 0xE300000000000000, 0x45415F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 432));
  *(_QWORD *)(v0 + 480) = 5390675;
  *(_QWORD *)(v0 + 488) = 0xE300000000000000;
  v14 = sub_21C3935C0((uint64_t)&unk_24E02C5C8);
  CurrencyDef.init(_:_:_:_:)(v14, v15, 5390675, 0xE300000000000000, 0x41535F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 496));
  *(_QWORD *)(v0 + 544) = 844251475;
  *(_QWORD *)(v0 + 552) = 0xE400000000000000;
  v16 = sub_21C3935C0((uint64_t)&unk_24E02C5F0);
  CurrencyDef.init(_:_:_:_:)(v16, v17, 0xB3D82EB1D8, 0xA500000000000000, 0x41535F7261, 0xE500000000000000, 2, (_QWORD *)(v0 + 560));
  *(_QWORD *)(v0 + 608) = 5853258;
  *(_QWORD *)(v0 + 616) = 0xE300000000000000;
  v18 = sub_21C3935C0((uint64_t)&unk_24E02C618);
  CurrencyDef.init(_:_:_:_:)(v18, v19, 42434, 0xA200000000000000, 0x504A5F616ALL, 0xE500000000000000, 0, (_QWORD *)(v0 + 624));
  *(_QWORD *)(v0 + 672) = 5001794;
  *(_QWORD *)(v0 + 680) = 0xE300000000000000;
  v20 = sub_21C3935C0((uint64_t)&unk_24E02C640);
  CurrencyDef.init(_:_:_:_:)(v20, v21, 9298, 0xE200000000000000, 0x52425F7470, 0xE500000000000000, 2, (_QWORD *)(v0 + 688));
  *(_QWORD *)(v0 + 736) = 4735317;
  *(_QWORD *)(v0 + 744) = 0xE300000000000000;
  v22 = sub_21C3935C0((uint64_t)&unk_24E02C668);
  CurrencyDef.init(_:_:_:_:)(v22, v23, 11829986, 0xA300000000000000, 0x41555F6B75, 0xE500000000000000, 2, (_QWORD *)(v0 + 752));
  *(_QWORD *)(v0 + 800) = 4932947;
  *(_QWORD *)(v0 + 808) = 0xE300000000000000;
  v24 = sub_21C3935C0((uint64_t)&unk_24E02C690);
  CurrencyDef.init(_:_:_:_:)(v24, v25, 29291, 0xE200000000000000, 0x45535F7673, 0xE500000000000000, 2, (_QWORD *)(v0 + 816));
  *(_QWORD *)(v0 + 864) = 4606019;
  *(_QWORD *)(v0 + 872) = 0xE300000000000000;
  *(_QWORD *)(v0 + 880) = sub_21C3935C0((uint64_t)&unk_24E02C6B8);
  *(_QWORD *)(v0 + 888) = v26;
  *(_QWORD *)(v0 + 896) = 4606019;
  *(_QWORD *)(v0 + 904) = 0xE300000000000000;
  *(_QWORD *)(v0 + 912) = &unk_24E02C6E0;
  *(_QWORD *)(v0 + 920) = 2;
  *(_QWORD *)(v0 + 928) = 4473165;
  *(_QWORD *)(v0 + 936) = 0xE300000000000000;
  v27 = sub_21C3935C0((uint64_t)&unk_24E02C730);
  CurrencyDef.init(_:_:_:_:)(v27, v28, 18500, 0xE200000000000000, 0x414D5F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 944));
  *(_QWORD *)(v0 + 992) = 5390682;
  *(_QWORD *)(v0 + 1000) = 0xE300000000000000;
  v29 = sub_21C3935C0((uint64_t)&unk_24E02C758);
  CurrencyDef.init(_:_:_:_:)(v29, v30, 82, 0xE100000000000000, 0x415A5F6661, 0xE500000000000000, 2, (_QWORD *)(v0 + 1008));
  *(_QWORD *)(v0 + 1056) = 4479566;
  *(_QWORD *)(v0 + 1064) = 0xE300000000000000;
  v31 = sub_21C3935C0((uint64_t)&unk_24E02C780);
  CurrencyDef.init(_:_:_:_:)(v31, v32, 36, 0xE100000000000000, 0x5A4E5F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 1072));
  *(_QWORD *)(v0 + 1120) = 5131344;
  *(_QWORD *)(v0 + 1128) = 0xE300000000000000;
  v33 = sub_21C3935C0((uint64_t)&unk_24E02C7A8);
  CurrencyDef.init(_:_:_:_:)(v33, v34, 8570234, 0xA300000000000000, 0x4C505F6C70, 0xE500000000000000, 2, (_QWORD *)(v0 + 1136));
  *(_QWORD *)(v0 + 1184) = 5132114;
  *(_QWORD *)(v0 + 1192) = 0xE300000000000000;
  v35 = sub_21C3935C0((uint64_t)&unk_24E02C7D0);
  CurrencyDef.init(_:_:_:_:)(v35, v36, 5132114, 0xE300000000000000, 0x4F525F6F72, 0xE500000000000000, 2, (_QWORD *)(v0 + 1200));
  *(_QWORD *)(v0 + 1248) = 5262403;
  *(_QWORD *)(v0 + 1256) = 0xE300000000000000;
  v37 = sub_21C3935C0((uint64_t)&unk_24E02C7F8);
  CurrencyDef.init(_:_:_:_:)(v37, v38, 36, 0xE100000000000000, 0x4C435F7365, 0xE500000000000000, 0, (_QWORD *)(v0 + 1264));
  *(_QWORD *)(v0 + 1312) = 4934468;
  *(_QWORD *)(v0 + 1320) = 0xE300000000000000;
  v39 = sub_21C3935C0((uint64_t)&unk_24E02C820);
  CurrencyDef.init(_:_:_:_:)(v39, v40, 29291, 0xE200000000000000, 0x4B445F6164, 0xE500000000000000, 2, (_QWORD *)(v0 + 1328));
  *(_QWORD *)(v0 + 1376) = 4475720;
  *(_QWORD *)(v0 + 1384) = 0xE300000000000000;
  v41 = sub_21C3935C0((uint64_t)&unk_24E02C848);
  CurrencyDef.init(_:_:_:_:)(v41, v42, 36, 0xE100000000000000, 0x4B485F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 1392));
  *(_QWORD *)(v0 + 1440) = 5722699;
  *(_QWORD *)(v0 + 1448) = 0xE300000000000000;
  v43 = sub_21C3935C0((uint64_t)&unk_24E02C870);
  CurrencyDef.init(_:_:_:_:)(v43, v44, 11109090, 0xA300000000000000, 0x524B5F6F6BLL, 0xE500000000000000, 0, (_QWORD *)(v0 + 1456));
  *(_QWORD *)(v0 + 1504) = 4476502;
  *(_QWORD *)(v0 + 1512) = 0xE300000000000000;
  v45 = sub_21C3935C0((uint64_t)&unk_24E02C898);
  CurrencyDef.init(_:_:_:_:)(v45, v46, 11240162, 0xA300000000000000, 0x4E565F6976, 0xE500000000000000, 0, (_QWORD *)(v0 + 1520));
  *(_QWORD *)(v0 + 1568) = 5396813;
  *(_QWORD *)(v0 + 1576) = 0xE300000000000000;
  v47 = sub_21C3935C0((uint64_t)&unk_24E02C8C0);
  CurrencyDef.init(_:_:_:_:)(v47, v48, 5396813, 0xE300000000000000, 0x594D5F736DLL, 0xE500000000000000, 2, (_QWORD *)(v0 + 1584));
  *(_QWORD *)(v0 + 1632) = 5130050;
  *(_QWORD *)(v0 + 1640) = 0xE300000000000000;
  v49 = sub_21C3935C0((uint64_t)&unk_24E02C8E8);
  CurrencyDef.init(_:_:_:_:)(v49, v50, 7759180, 0xE300000000000000, 0x47425F6762, 0xE500000000000000, 2, (_QWORD *)(v0 + 1648));
  *(_QWORD *)(v0 + 1696) = 4476225;
  *(_QWORD *)(v0 + 1704) = 0xE300000000000000;
  v51 = sub_21C3935C0((uint64_t)&unk_24E02C910);
  CurrencyDef.init(_:_:_:_:)(v51, v52, 36822, 0xA200000000000000, 0x4D415F7968, 0xE500000000000000, 2, (_QWORD *)(v0 + 1712));
  *(_QWORD *)(v0 + 1760) = 5134913;
  *(_QWORD *)(v0 + 1768) = 0xE300000000000000;
  v53 = sub_21C3935C0((uint64_t)&unk_24E02C938);
  CurrencyDef.init(_:_:_:_:)(v53, v54, 12354274, 0xA300000000000000, 0x59425F7572, 0xE500000000000000, 2, (_QWORD *)(v0 + 1776));
  *(_QWORD *)(v0 + 1824) = 5134658;
  *(_QWORD *)(v0 + 1832) = 0xE300000000000000;
  v55 = sub_21C3935C0((uint64_t)&unk_24E02C960);
  CurrencyDef.init(_:_:_:_:)(v55, v56, 29250, 0xE200000000000000, 0x4F4E5F626ELL, 0xE500000000000000, 2, (_QWORD *)(v0 + 1840));
  *(_QWORD *)(v0 + 1888) = 4998221;
  *(_QWORD *)(v0 + 1896) = 0xE300000000000000;
  v57 = sub_21C3935C0((uint64_t)&unk_24E02C988);
  CurrencyDef.init(_:_:_:_:)(v57, v58, 76, 0xE100000000000000, 0x444D5F6F72, 0xE500000000000000, 2, (_QWORD *)(v0 + 1904));
  *(_QWORD *)(v0 + 1952) = 4938307;
  *(_QWORD *)(v0 + 1960) = 0xE300000000000000;
  v59 = sub_21C3935C0((uint64_t)&unk_24E02C9B0);
  CurrencyDef.init(_:_:_:_:)(v59, v60, 9290827, 0xA300000000000000, 0x5A435F7363, 0xE500000000000000, 2, (_QWORD *)(v0 + 1968));
  *(_QWORD *)(v0 + 2016) = 4935502;
  *(_QWORD *)(v0 + 2024) = 0xE300000000000000;
  v61 = sub_21C3935C0((uint64_t)&unk_24E02C9D8);
  CurrencyDef.init(_:_:_:_:)(v61, v62, 29291, 0xE200000000000000, 0x4F4E5F626ELL, 0xE500000000000000, 2, (_QWORD *)(v0 + 2032));
  *(_QWORD *)(v0 + 2080) = 4998471;
  *(_QWORD *)(v0 + 2088) = 0xE300000000000000;
  v63 = sub_21C3935C0((uint64_t)&unk_24E02CA00);
  CurrencyDef.init(_:_:_:_:)(v63, v64, 12485346, 0xA300000000000000, 0x45475F616BLL, 0xE500000000000000, 2, (_QWORD *)(v0 + 2096));
  *(_QWORD *)(v0 + 2144) = 5528139;
  *(_QWORD *)(v0 + 2152) = 0xE300000000000000;
  v65 = sub_21C3935C0((uint64_t)&unk_24E02CA28);
  CurrencyDef.init(_:_:_:_:)(v65, v66, 12092130, 0xA300000000000000, 0x5A4B5F6B6BLL, 0xE500000000000000, 2, (_QWORD *)(v0 + 2160));
  *(_QWORD *)(v0 + 2208) = 5263181;
  *(_QWORD *)(v0 + 2216) = 0xE300000000000000;
  v67 = sub_21C3935C0((uint64_t)&unk_24E02CA50);
  CurrencyDef.init(_:_:_:_:)(v67, v68, 609242957, 0xE400000000000000, 0x4F4D5F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 2224));
  *(_QWORD *)(v0 + 2272) = 5460545;
  *(_QWORD *)(v0 + 2280) = 0xE300000000000000;
  v69 = sub_21C3935C0((uint64_t)&unk_24E02CA78);
  CurrencyDef.init(_:_:_:_:)(v69, v70, 36, 0xE100000000000000, 0x52415F7365, 0xE500000000000000, 2, (_QWORD *)(v0 + 2288));
  *(_QWORD *)(v0 + 2336) = 5329991;
  *(_QWORD *)(v0 + 2344) = 0xE300000000000000;
  v71 = sub_21C3935C0((uint64_t)&unk_24E02CAA0);
  CurrencyDef.init(_:_:_:_:)(v71, v72, 81, 0xE100000000000000, 0x54475F7365, 0xE500000000000000, 2, (_QWORD *)(v0 + 2352));
  *(_QWORD *)(v0 + 2400) = 5000776;
  *(_QWORD *)(v0 + 2408) = 0xE300000000000000;
  v73 = sub_21C3935C0((uint64_t)&unk_24E02CAC8);
  CurrencyDef.init(_:_:_:_:)(v73, v74, 76, 0xE100000000000000, 0x4E485F7365, 0xE500000000000000, 2, (_QWORD *)(v0 + 2416));
  *(_QWORD *)(v0 + 2464) = 5134413;
  *(_QWORD *)(v0 + 2472) = 0xE300000000000000;
  v75 = sub_21C3935C0((uint64_t)&unk_24E02CAF0);
  CurrencyDef.init(_:_:_:_:)(v75, v76, 36, 0xE100000000000000, 0x584D5F7365, 0xE500000000000000, 2, (_QWORD *)(v0 + 2480));
  *(_QWORD *)(v0 + 2528) = 5263171;
  *(_QWORD *)(v0 + 2536) = 0xE300000000000000;
  v77 = sub_21C3935C0((uint64_t)&unk_24E02CB18);
  CurrencyDef.init(_:_:_:_:)(v77, v78, 36, 0xE100000000000000, 0x4F435F7365, 0xE500000000000000, 2, (_QWORD *)(v0 + 2544));
  *(_QWORD *)(v0 + 2592) = 4342096;
  *(_QWORD *)(v0 + 2600) = 0xE300000000000000;
  v79 = sub_21C3935C0((uint64_t)&unk_24E02CB40);
  CurrencyDef.init(_:_:_:_:)(v79, v80, 4342096, 0xE300000000000000, 0x41505F7365, 0xE500000000000000, 2, (_QWORD *)(v0 + 2608));
  *(_QWORD *)(v0 + 2656) = 4411971;
  *(_QWORD *)(v0 + 2664) = 0xE300000000000000;
  v81 = sub_21C3935C0((uint64_t)&unk_24E02CB68);
  CurrencyDef.init(_:_:_:_:)(v81, v82, 10584802, 0xA300000000000000, 0x52435F7365, 0xE500000000000000, 2, (_QWORD *)(v0 + 2672));
  *(_QWORD *)(v0 + 2720) = 5129552;
  *(_QWORD *)(v0 + 2728) = 0xE300000000000000;
  v83 = sub_21C3935C0((uint64_t)&unk_24E02CB90);
  CurrencyDef.init(_:_:_:_:)(v83, v84, 5129552, 0xE300000000000000, 0x45505F7365, 0xE500000000000000, 2, (_QWORD *)(v0 + 2736));
  *(_QWORD *)(v0 + 2784) = 4474946;
  *(_QWORD *)(v0 + 2792) = 0xE300000000000000;
  v85 = sub_21C3935C0((uint64_t)&unk_24E02CBB8);
  CurrencyDef.init(_:_:_:_:)(v85, v86, 17474, 0xE200000000000000, 0x48425F6E65, 0xE500000000000000, 3, (_QWORD *)(v0 + 2800));
  *(_QWORD *)(v0 + 2848) = 5459017;
  *(_QWORD *)(v0 + 2856) = 0xE300000000000000;
  v87 = sub_21C3935C0((uint64_t)&unk_24E02CBE0);
  CurrencyDef.init(_:_:_:_:)(v87, v88, 11174626, 0xA300000000000000, 0x4C495F6568, 0xE500000000000000, 2, (_QWORD *)(v0 + 2864));
  *(_QWORD *)(v0 + 2912) = 4476746;
  *(_QWORD *)(v0 + 2920) = 0xE300000000000000;
  v89 = sub_21C3935C0((uint64_t)&unk_24E02CC08);
  CurrencyDef.init(_:_:_:_:)(v89, v90, 17482, 0xE200000000000000, 0x4F4A5F6E65, 0xE500000000000000, 3, (_QWORD *)(v0 + 2928));
  *(_QWORD *)(v0 + 2976) = 4478795;
  *(_QWORD *)(v0 + 2984) = 0xE300000000000000;
  v91 = sub_21C3935C0((uint64_t)&unk_24E02CC30);
  CurrencyDef.init(_:_:_:_:)(v91, v92, 17483, 0xE200000000000000, 0x574B5F6E65, 0xE500000000000000, 3, (_QWORD *)(v0 + 2992));
  *(_QWORD *)(v0 + 3040) = 5390673;
  *(_QWORD *)(v0 + 3048) = 0xE300000000000000;
  v93 = sub_21C3935C0((uint64_t)&unk_24E02CC58);
  CurrencyDef.init(_:_:_:_:)(v93, v94, 21073, 0xE200000000000000, 0x41515F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 3056));
  *(_QWORD *)(v0 + 3104) = 5393993;
  *(_QWORD *)(v0 + 3112) = 0xE300000000000000;
  v95 = sub_21C3935C0((uint64_t)&unk_24E02CC80);
  CurrencyDef.init(_:_:_:_:)(v95, v96, 12157666, 0xA300000000000000, 0x4E495F6968, 0xE500000000000000, 2, (_QWORD *)(v0 + 3120));
  *(_QWORD *)(v0 + 3168) = 4936521;
  *(_QWORD *)(v0 + 3176) = 0xE300000000000000;
  v97 = sub_21C3935C0((uint64_t)&unk_24E02CCA8);
  CurrencyDef.init(_:_:_:_:)(v97, v98, 29259, 0xE200000000000000, 0x53495F7369, 0xE500000000000000, 2, (_QWORD *)(v0 + 3184));
  *(_QWORD *)(v0 + 3232) = 5391433;
  *(_QWORD *)(v0 + 3240) = 0xE300000000000000;
  v99 = sub_21C3935C0((uint64_t)&unk_24E02CCD0);
  CurrencyDef.init(_:_:_:_:)(v99, v100, 28754, 0xE200000000000000, 0x44495F6469, 0xE500000000000000, 0, (_QWORD *)(v0 + 3248));
  *(_QWORD *)(v0 + 3296) = 5852739;
  *(_QWORD *)(v0 + 3304) = 0xE300000000000000;
  v101 = sub_21C3935C0((uint64_t)&unk_24E02CCF8);
  CurrencyDef.init(_:_:_:_:)(v101, v102, 42434, 0xA200000000000000, 0x4E435F687ALL, 0xE500000000000000, 2, (_QWORD *)(v0 + 3312));
  *(_QWORD *)(v0 + 3360) = 5264707;
  *(_QWORD *)(v0 + 3368) = 0xE300000000000000;
  v103 = sub_21C3935C0((uint64_t)&unk_24E02CD20);
  CurrencyDef.init(_:_:_:_:)(v103, v104, 36, 0xE100000000000000, 0x55435F7365, 0xE500000000000000, 2, (_QWORD *)(v0 + 3376));
  *(_QWORD *)(v0 + 3424) = 5263172;
  *(_QWORD *)(v0 + 3432) = 0xE300000000000000;
  v105 = sub_21C3935C0((uint64_t)&unk_24E02CD48);
  CurrencyDef.init(_:_:_:_:)(v105, v106, 36, 0xE100000000000000, 0x4F445F7365, 0xE500000000000000, 2, (_QWORD *)(v0 + 3440));
  *(_QWORD *)(v0 + 3488) = 4475462;
  *(_QWORD *)(v0 + 3496) = 0xE300000000000000;
  v107 = sub_21C3935C0((uint64_t)&unk_24E02CD70);
  CurrencyDef.init(_:_:_:_:)(v107, v108, 36, 0xE100000000000000, 0x4A465F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 3504));
  *(_QWORD *)(v0 + 3552) = 4476234;
  *(_QWORD *)(v0 + 3560) = 0xE300000000000000;
  v109 = sub_21C3935C0((uint64_t)&unk_24E02CD98);
  CurrencyDef.init(_:_:_:_:)(v109, v110, 36, 0xE100000000000000, 0x4D4A5F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 3568));
  *(_QWORD *)(v0 + 3616) = 4544067;
  *(_QWORD *)(v0 + 3624) = 0xE300000000000000;
  v111 = sub_21C3935C0((uint64_t)&unk_24E02CDC0);
  CurrencyDef.init(_:_:_:_:)(v111, v112, 36, 0xE100000000000000, 0x56435F7470, 0xE500000000000000, 0, (_QWORD *)(v0 + 3632));
  *(_QWORD *)(v0 + 3680) = 4479307;
  *(_QWORD *)(v0 + 3688) = 0xE300000000000000;
  v113 = sub_21C3935C0((uint64_t)&unk_24E02CDE8);
  CurrencyDef.init(_:_:_:_:)(v113, v114, 36, 0xE100000000000000, 0x594B5F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 3696));
  *(_QWORD *)(v0 + 3744) = 4479554;
  *(_QWORD *)(v0 + 3752) = 0xE300000000000000;
  v115 = sub_21C3935C0((uint64_t)&unk_24E02CE10);
  CurrencyDef.init(_:_:_:_:)(v115, v116, 36, 0xE100000000000000, 0x5A425F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 3760));
  *(_QWORD *)(v0 + 3808) = 4473427;
  *(_QWORD *)(v0 + 3816) = 0xE300000000000000;
  v117 = sub_21C3935C0((uint64_t)&unk_24E02CE38);
  CurrencyDef.init(_:_:_:_:)(v117, v118, 36, 0xE100000000000000, 0x42535F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 3824));
  *(_QWORD *)(v0 + 3872) = 4479303;
  *(_QWORD *)(v0 + 3880) = 0xE300000000000000;
  v119 = sub_21C3935C0((uint64_t)&unk_24E02CE60);
  CurrencyDef.init(_:_:_:_:)(v119, v120, 36, 0xE100000000000000, 0x59475F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 3888));
  *(_QWORD *)(v0 + 3936) = 4479556;
  *(_QWORD *)(v0 + 3944) = 0xE300000000000000;
  v121 = sub_21C3935C0((uint64_t)&unk_24E02CE88);
  CurrencyDef.init(_:_:_:_:)(v121, v122, 16708, 0xE200000000000000, 0x5A445F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 3952));
  *(_QWORD *)(v0 + 4000) = 4674632;
  *(_QWORD *)(v0 + 4008) = 0xE300000000000000;
  v123 = sub_21C3935C0((uint64_t)&unk_24E02CEB0);
  CurrencyDef.init(_:_:_:_:)(v123, v124, 71, 0xE100000000000000, 0x54485F7468, 0xE500000000000000, 2, (_QWORD *)(v0 + 4016));
  *(_QWORD *)(v0 + 4064) = 4609352;
  *(_QWORD *)(v0 + 4072) = 0xE300000000000000;
  v125 = sub_21C3935C0((uint64_t)&unk_24E02CED8);
  CurrencyDef.init(_:_:_:_:)(v125, v126, 29766, 0xE200000000000000, 0x55485F7568, 0xE500000000000000, 2, (_QWORD *)(v0 + 4080));
  *(_QWORD *)(v0 + 4128) = 5395017;
  *(_QWORD *)(v0 + 4136) = 0xE300000000000000;
  v127 = sub_21C3935C0((uint64_t)&unk_24E02CF00);
  CurrencyDef.init(_:_:_:_:)(v127, v128, 7564370, 0xE300000000000000, 0x52495F6166, 0xE500000000000000, 2, (_QWORD *)(v0 + 4144));
  *(_QWORD *)(v0 + 4192) = 4477257;
  *(_QWORD *)(v0 + 4200) = 0xE300000000000000;
  v129 = sub_21C3935C0((uint64_t)&unk_24E02CF28);
  CurrencyDef.init(_:_:_:_:)(v129, v130, 17481, 0xE200000000000000, 0x51495F6E65, 0xE500000000000000, 3, (_QWORD *)(v0 + 4208));
  *(_QWORD *)(v0 + 4256) = 5522498;
  *(_QWORD *)(v0 + 4264) = 0xE300000000000000;
  v131 = sub_21C3935C0((uint64_t)&unk_24E02CF50);
  CurrencyDef.init(_:_:_:_:)(v131, v132, 11773920, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4272));
  *(_QWORD *)(v0 + 4320) = 5000257;
  *(_QWORD *)(v0 + 4328) = 0xE300000000000000;
  v133 = sub_21C3935C0((uint64_t)&unk_24E02CF78);
  CurrencyDef.init(_:_:_:_:)(v133, v134, 7038284, 0xE300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4336));
  *(_QWORD *)(v0 + 4384) = 4477762;
  *(_QWORD *)(v0 + 4392) = 0xE300000000000000;
  v135 = sub_21C3935C0((uint64_t)&unk_24E02CFA0);
  CurrencyDef.init(_:_:_:_:)(v135, v136, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4400));
  *(_QWORD *)(v0 + 4448) = 4473410;
  *(_QWORD *)(v0 + 4456) = 0xE300000000000000;
  v137 = sub_21C3935C0((uint64_t)&unk_24E02CFC8);
  CurrencyDef.init(_:_:_:_:)(v137, v138, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4464));
  *(_QWORD *)(v0 + 4512) = 4476226;
  *(_QWORD *)(v0 + 4520) = 0xE300000000000000;
  v139 = sub_21C3935C0((uint64_t)&unk_24E02CFF0);
  CurrencyDef.init(_:_:_:_:)(v139, v140, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4528));
  *(_QWORD *)(v0 + 4576) = 5133378;
  *(_QWORD *)(v0 + 4584) = 0xE300000000000000;
  v141 = sub_21C3935C0((uint64_t)&unk_24E02D018);
  CurrencyDef.init(_:_:_:_:)(v141, v142, 30030, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4592));
  *(_QWORD *)(v0 + 4640) = 4345666;
  *(_QWORD *)(v0 + 4648) = 0xE300000000000000;
  v143 = sub_21C3935C0((uint64_t)&unk_24E02D040);
  CurrencyDef.init(_:_:_:_:)(v143, v144, 29506, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4656));
  *(_QWORD *)(v0 + 4704) = 5265218;
  *(_QWORD *)(v0 + 4712) = 0xE300000000000000;
  v145 = sub_21C3935C0((uint64_t)&unk_24E02D068);
  CurrencyDef.init(_:_:_:_:)(v145, v146, 80, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4720));
  *(_QWORD *)(v0 + 4768) = 4474707;
  *(_QWORD *)(v0 + 4776) = 0xE300000000000000;
  v147 = sub_21C3935C0((uint64_t)&unk_24E02D090);
  CurrencyDef.init(_:_:_:_:)(v147, v148, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4784));
  *(_QWORD *)(v0 + 4832) = 4476482;
  *(_QWORD *)(v0 + 4840) = 0xE300000000000000;
  v149 = sub_21C3935C0((uint64_t)&unk_24E02D0B8);
  CurrencyDef.init(_:_:_:_:)(v149, v150, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4848));
  *(_QWORD *)(v0 + 4896) = 4934989;
  *(_QWORD *)(v0 + 4904) = 0xE300000000000000;
  v151 = sub_21C3935C0((uint64_t)&unk_24E02D0E0);
  CurrencyDef.init(_:_:_:_:)(v151, v152, 75, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 4912));
  *(_QWORD *)(v0 + 4960) = 4606274;
  *(_QWORD *)(v0 + 4968) = 0xE300000000000000;
  v153 = sub_21C3935C0((uint64_t)&unk_24E02D108);
  CurrencyDef.init(_:_:_:_:)(v153, v154, 10715874, 0xA300000000000000, 0, 0xE000000000000000, 0, (_QWORD *)(v0 + 4976));
  *(_QWORD *)(v0 + 5024) = 5392459;
  *(_QWORD *)(v0 + 5032) = 0xE300000000000000;
  v155 = sub_21C3935C0((uint64_t)&unk_24E02D130);
  CurrencyDef.init(_:_:_:_:)(v155, v156, 10199009, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 5040));
  *(_QWORD *)(v0 + 5088) = 5393228;
  *(_QWORD *)(v0 + 5096) = 0xE300000000000000;
  v157 = sub_21C3935C0((uint64_t)&unk_24E02D158);
  CurrencyDef.init(_:_:_:_:)(v157, v158, 29522, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 5104));
  *(_QWORD *)(v0 + 5152) = 4607307;
  *(_QWORD *)(v0 + 5160) = 0xE300000000000000;
  v159 = sub_21C3935C0((uint64_t)&unk_24E02D180);
  CurrencyDef.init(_:_:_:_:)(v159, v160, 29254, 0xE200000000000000, 0, 0xE000000000000000, 0, (_QWORD *)(v0 + 5168));
  *(_QWORD *)(v0 + 5216) = 4346949;
  *(_QWORD *)(v0 + 5224) = 0xE300000000000000;
  v161 = sub_21C3935C0((uint64_t)&unk_24E02D1A8);
  CurrencyDef.init(_:_:_:_:)(v161, v162, 29250, 0xE200000000000000, 0x54455F6161, 0xE500000000000000, 2, (_QWORD *)(v0 + 5232));
  *(_QWORD *)(v0 + 5280) = 5132869;
  *(_QWORD *)(v0 + 5288) = 0xE300000000000000;
  v163 = sub_21C3935C0((uint64_t)&unk_24E02D1D0);
  CurrencyDef.init(_:_:_:_:)(v163, v164, 6712142, 0xE300000000000000, 0x52455F6161, 0xE500000000000000, 2, (_QWORD *)(v0 + 5296));
  *(_QWORD *)(v0 + 5344) = 5262150;
  *(_QWORD *)(v0 + 5352) = 0xE300000000000000;
  v165 = sub_21C3935C0((uint64_t)&unk_24E02D1F8);
  CurrencyDef.init(_:_:_:_:)(v165, v166, 41922, 0xA200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 5360));
  *(_QWORD *)(v0 + 5408) = 4606532;
  *(_QWORD *)(v0 + 5416) = 0xE300000000000000;
  v167 = sub_21C3935C0((uint64_t)&unk_24E02D220);
  CurrencyDef.init(_:_:_:_:)(v167, v168, 29254, 0xE200000000000000, 0x4A445F6161, 0xE500000000000000, 0, (_QWORD *)(v0 + 5424));
  *(_QWORD *)(v0 + 5472) = 4476231;
  *(_QWORD *)(v0 + 5480) = 0xE300000000000000;
  v169 = sub_21C3935C0((uint64_t)&unk_24E02D248);
  CurrencyDef.init(_:_:_:_:)(v169, v170, 68, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 5488));
  *(_QWORD *)(v0 + 5536) = 5261639;
  *(_QWORD *)(v0 + 5544) = 0xE300000000000000;
  v171 = sub_21C3935C0((uint64_t)&unk_24E02D270);
  CurrencyDef.init(_:_:_:_:)(v171, v172, 41922, 0xA200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 5552));
  *(_QWORD *)(v0 + 5600) = 4607559;
  *(_QWORD *)(v0 + 5608) = 0xE300000000000000;
  v173 = sub_21C3935C0((uint64_t)&unk_24E02D298);
  CurrencyDef.init(_:_:_:_:)(v173, v174, 29254, 0xE200000000000000, 0, 0xE000000000000000, 0, (_QWORD *)(v0 + 5616));
  *(_QWORD *)(v0 + 5664) = 5457227;
  *(_QWORD *)(v0 + 5672) = 0xE300000000000000;
  v175 = sub_21C3935C0((uint64_t)&unk_24E02D2C0);
  CurrencyDef.init(_:_:_:_:)(v175, v176, 7563347, 0xE300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 5680));
  *(_QWORD *)(v0 + 5728) = 5722187;
  *(_QWORD *)(v0 + 5736) = 0xE300000000000000;
  v177 = sub_21C3935C0((uint64_t)&unk_24E02D2E8);
  CurrencyDef.init(_:_:_:_:)(v177, v178, 11109090, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 5744));
  *(_QWORD *)(v0 + 5792) = 5457739;
  *(_QWORD *)(v0 + 5800) = 0xE300000000000000;
  v179 = sub_21C3935C0((uint64_t)&unk_24E02D310);
  CurrencyDef.init(_:_:_:_:)(v179, v180, 7171955, 0xE300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 5808));
  *(_QWORD *)(v0 + 5856) = 4931916;
  *(_QWORD *)(v0 + 5864) = 0xE300000000000000;
  v181 = sub_21C3935C0((uint64_t)&unk_24E02D338);
  CurrencyDef.init(_:_:_:_:)(v181, v182, 11371234, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 5872));
  *(_QWORD *)(v0 + 5920) = 5259852;
  *(_QWORD *)(v0 + 5928) = 0xE300000000000000;
  v183 = sub_21C3935C0((uint64_t)&unk_24E02D360);
  CurrencyDef.init(_:_:_:_:)(v183, v184, 19532, 0xE200000000000000, 0x424C5F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 5936));
  *(_QWORD *)(v0 + 5984) = 5002060;
  *(_QWORD *)(v0 + 5992) = 0xE300000000000000;
  v185 = sub_21C3935C0((uint64_t)&unk_24E02D388);
  CurrencyDef.init(_:_:_:_:)(v185, v186, 77, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6000));
  *(_QWORD *)(v0 + 6048) = 4477516;
  *(_QWORD *)(v0 + 6056) = 0xE300000000000000;
  v187 = sub_21C3935C0((uint64_t)&unk_24E02D3B0);
  CurrencyDef.init(_:_:_:_:)(v187, v188, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6064));
  *(_QWORD *)(v0 + 6112) = 4479308;
  *(_QWORD *)(v0 + 6120) = 0xE300000000000000;
  v189 = sub_21C3935C0((uint64_t)&unk_24E02D3D8);
  CurrencyDef.init(_:_:_:_:)(v189, v190, 17484, 0xE200000000000000, 0x594C5F6E65, 0xE500000000000000, 3, (_QWORD *)(v0 + 6128));
  *(_QWORD *)(v0 + 6176) = 4937549;
  *(_QWORD *)(v0 + 6184) = 0xE300000000000000;
  v191 = sub_21C3935C0((uint64_t)&unk_24E02D400);
  CurrencyDef.init(_:_:_:_:)(v191, v192, 75, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6192));
  *(_QWORD *)(v0 + 6240) = 5396045;
  *(_QWORD *)(v0 + 6248) = 0xE300000000000000;
  v193 = sub_21C3935C0((uint64_t)&unk_24E02D428);
  CurrencyDef.init(_:_:_:_:)(v193, v194, 26194, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6256));
  *(_QWORD *)(v0 + 6304) = 5395789;
  *(_QWORD *)(v0 + 6312) = 0xE300000000000000;
  v195 = sub_21C3935C0((uint64_t)&unk_24E02D450);
  CurrencyDef.init(_:_:_:_:)(v195, v196, 29522, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6320));
  *(_QWORD *)(v0 + 6368) = 5525069;
  *(_QWORD *)(v0 + 6376) = 0xE300000000000000;
  v197 = sub_21C3935C0((uint64_t)&unk_24E02D478);
  CurrencyDef.init(_:_:_:_:)(v197, v198, 11436770, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6384));
  *(_QWORD *)(v0 + 6432) = 5393743;
  *(_QWORD *)(v0 + 6440) = 0xE300000000000000;
  v199 = sub_21C3935C0((uint64_t)&unk_24E02D4A0);
  CurrencyDef.init(_:_:_:_:)(v199, v200, 20306, 0xE200000000000000, 0x4D4F5F6E65, 0xE500000000000000, 3, (_QWORD *)(v0 + 6448));
  *(_QWORD *)(v0 + 6496) = 4473166;
  *(_QWORD *)(v0 + 6504) = 0xE300000000000000;
  v201 = sub_21C3935C0((uint64_t)&unk_24E02D4C8);
  CurrencyDef.init(_:_:_:_:)(v201, v202, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6512));
  *(_QWORD *)(v0 + 6560) = 5394510;
  *(_QWORD *)(v0 + 6568) = 0xE300000000000000;
  v203 = sub_21C3935C0((uint64_t)&unk_24E02D4F0);
  CurrencyDef.init(_:_:_:_:)(v203, v204, 29522, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6576));
  *(_QWORD *)(v0 + 6624) = 4673089;
  *(_QWORD *)(v0 + 6632) = 0xE300000000000000;
  v205 = sub_21C3935C0((uint64_t)&unk_24E02D518);
  CurrencyDef.init(_:_:_:_:)(v205, v206, 37574, 0xA200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6640));
  *(_QWORD *)(v0 + 6688) = 4675393;
  *(_QWORD *)(v0 + 6696) = 0xE300000000000000;
  v207 = sub_21C3935C0((uint64_t)&unk_24E02D540);
  CurrencyDef.init(_:_:_:_:)(v207, v208, 37574, 0xA200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6704));
  *(_QWORD *)(v0 + 6752) = 5657942;
  *(_QWORD *)(v0 + 6760) = 0xE300000000000000;
  v209 = sub_21C3935C0((uint64_t)&unk_24E02D568);
  CurrencyDef.init(_:_:_:_:)(v209, v210, 21590, 0xE200000000000000, 0, 0xE000000000000000, 0, (_QWORD *)(v0 + 6768));
  *(_QWORD *)(v0 + 6816) = 5196110;
  *(_QWORD *)(v0 + 6824) = 0xE300000000000000;
  v211 = sub_21C3935C0((uint64_t)&unk_24E02D590);
  CurrencyDef.init(_:_:_:_:)(v211, v212, 9283, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6832));
  *(_QWORD *)(v0 + 6880) = 5130062;
  *(_QWORD *)(v0 + 6888) = 0xE300000000000000;
  v213 = sub_21C3935C0((uint64_t)&unk_24E02D5B8);
  CurrencyDef.init(_:_:_:_:)(v213, v214, 10912482, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6896));
  *(_QWORD *)(v0 + 6944) = 5393232;
  *(_QWORD *)(v0 + 6952) = 0xE300000000000000;
  v215 = sub_21C3935C0((uint64_t)&unk_24E02D5E0);
  CurrencyDef.init(_:_:_:_:)(v215, v216, 29522, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 6960));
  *(_QWORD *)(v0 + 7008) = 4933456;
  *(_QWORD *)(v0 + 7016) = 0xE300000000000000;
  v217 = sub_21C3935C0((uint64_t)&unk_24E02D608);
  CurrencyDef.init(_:_:_:_:)(v217, v218, 75, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7024));
  *(_QWORD *)(v0 + 7072) = 4675920;
  *(_QWORD *)(v0 + 7080) = 0xE300000000000000;
  v219 = sub_21C3935C0((uint64_t)&unk_24E02D630);
  CurrencyDef.init(_:_:_:_:)(v219, v220, 11698914, 0xA300000000000000, 0, 0xE000000000000000, 0, (_QWORD *)(v0 + 7088));
  *(_QWORD *)(v0 + 7136) = 5261392;
  *(_QWORD *)(v0 + 7144) = 0xE300000000000000;
  v221 = sub_21C3935C0((uint64_t)&unk_24E02D658);
  CurrencyDef.init(_:_:_:_:)(v221, v222, 11633378, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7152));
  *(_QWORD *)(v0 + 7200) = 4347218;
  *(_QWORD *)(v0 + 7208) = 0xE300000000000000;
  v223 = sub_21C3935C0((uint64_t)&unk_24E02D680);
  CurrencyDef.init(_:_:_:_:)(v223, v224, 12419810, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7216));
  *(_QWORD *)(v0 + 7264) = 4609874;
  *(_QWORD *)(v0 + 7272) = 0xE300000000000000;
  v225 = sub_21C3935C0((uint64_t)&unk_24E02D6A8);
  CurrencyDef.init(_:_:_:_:)(v225, v226, 29254, 0xE200000000000000, 0, 0xE000000000000000, 0, (_QWORD *)(v0 + 7280));
  *(_QWORD *)(v0 + 7328) = 5261395;
  *(_QWORD *)(v0 + 7336) = 0xE300000000000000;
  v227 = sub_21C3935C0((uint64_t)&unk_24E02D6D0);
  CurrencyDef.init(_:_:_:_:)(v227, v228, 41922, 0xA200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7344));
  *(_QWORD *)(v0 + 7392) = 5391187;
  *(_QWORD *)(v0 + 7400) = 0xE300000000000000;
  v229 = sub_21C3935C0((uint64_t)&unk_24E02D6F8);
  CurrencyDef.init(_:_:_:_:)(v229, v230, 29522, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7408));
  *(_QWORD *)(v0 + 7456) = 5459795;
  *(_QWORD *)(v0 + 7464) = 0xE300000000000000;
  v231 = sub_21C3935C0((uint64_t)&unk_24E02D720);
  CurrencyDef.init(_:_:_:_:)(v231, v232, 7563347, 0xE300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7472));
  *(_QWORD *)(v0 + 7520) = 5003859;
  *(_QWORD *)(v0 + 7528) = 0xE300000000000000;
  v233 = sub_21C3935C0((uint64_t)&unk_24E02D748);
  CurrencyDef.init(_:_:_:_:)(v233, v234, 76, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7536));
  *(_QWORD *)(v0 + 7584) = 5265747;
  *(_QWORD *)(v0 + 7592) = 0xE300000000000000;
  v235 = sub_21C3935C0((uint64_t)&unk_24E02D770);
  CurrencyDef.init(_:_:_:_:)(v235, v236, 21324, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7600));
  *(_QWORD *)(v0 + 7648) = 4343892;
  *(_QWORD *)(v0 + 7656) = 0xE300000000000000;
  v237 = sub_21C3935C0((uint64_t)&unk_24E02D798);
  CurrencyDef.init(_:_:_:_:)(v237, v238, 12564704, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7664));
  *(_QWORD *)(v0 + 7712) = 5263188;
  *(_QWORD *)(v0 + 7720) = 0xE300000000000000;
  v239 = sub_21C3935C0((uint64_t)&unk_24E02D7C0);
  CurrencyDef.init(_:_:_:_:)(v239, v240, 9300, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7728));
  *(_QWORD *)(v0 + 7776) = 4478036;
  *(_QWORD *)(v0 + 7784) = 0xE300000000000000;
  v241 = sub_21C3935C0((uint64_t)&unk_24E02D7E8);
  CurrencyDef.init(_:_:_:_:)(v241, v242, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7792));
  *(_QWORD *)(v0 + 7840) = 4476500;
  *(_QWORD *)(v0 + 7848) = 0xE300000000000000;
  v243 = sub_21C3935C0((uint64_t)&unk_24E02D810);
  CurrencyDef.init(_:_:_:_:)(v243, v244, 21572, 0xE200000000000000, 0x4E545F6E65, 0xE500000000000000, 3, (_QWORD *)(v0 + 7856));
  *(_QWORD *)(v0 + 7904) = 5785429;
  *(_QWORD *)(v0 + 7912) = 0xE300000000000000;
  v245 = sub_21C3935C0((uint64_t)&unk_24E02D838);
  CurrencyDef.init(_:_:_:_:)(v245, v246, 7563347, 0xE300000000000000, 0, 0xE000000000000000, 0, (_QWORD *)(v0 + 7920));
  *(_QWORD *)(v0 + 7968) = 4475725;
  *(_QWORD *)(v0 + 7976) = 0xE300000000000000;
  v247 = sub_21C3935C0((uint64_t)&unk_24E02D860);
  CurrencyDef.init(_:_:_:_:)(v247, v248, 5129540, 0xE300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 7984));
  *(_QWORD *)(v0 + 8032) = 5261125;
  *(_QWORD *)(v0 + 8040) = 0xE300000000000000;
  v249 = sub_21C3935C0((uint64_t)&unk_24E02D888);
  CurrencyDef.init(_:_:_:_:)(v249, v250, 17740, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8048));
  *(_QWORD *)(v0 + 8096) = 5462612;
  *(_QWORD *)(v0 + 8104) = 0xE300000000000000;
  v251 = sub_21C3935C0((uint64_t)&unk_24E02D8B0);
  CurrencyDef.init(_:_:_:_:)(v251, v252, 7563347, 0xE300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8112));
  *(_QWORD *)(v0 + 8160) = 5593429;
  *(_QWORD *)(v0 + 8168) = 0xE300000000000000;
  v253 = sub_21C3935C0((uint64_t)&unk_24E02D8D8);
  CurrencyDef.init(_:_:_:_:)(v253, v254, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8176));
  *(_QWORD *)(v0 + 8224) = 5462613;
  *(_QWORD *)(v0 + 8232) = 0xE300000000000000;
  v255 = sub_21C3935C0((uint64_t)&unk_24E02D900);
  CurrencyDef.init(_:_:_:_:)(v255, v256, 1836412787, 0xE400000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8240));
  *(_QWORD *)(v0 + 8288) = 5526359;
  *(_QWORD *)(v0 + 8296) = 0xE300000000000000;
  v257 = sub_21C3935C0((uint64_t)&unk_24E02D928);
  CurrencyDef.init(_:_:_:_:)(v257, v258, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8304));
  *(_QWORD *)(v0 + 8352) = 5391705;
  *(_QWORD *)(v0 + 8360) = 0xE300000000000000;
  v259 = sub_21C3935C0((uint64_t)&unk_24E02D950);
  CurrencyDef.init(_:_:_:_:)(v259, v260, 7564370, 0xE300000000000000, 0x45595F6E65, 0xE500000000000000, 2, (_QWORD *)(v0 + 8368));
  *(_QWORD *)(v0 + 8416) = 5457238;
  *(_QWORD *)(v0 + 8424) = 0xE300000000000000;
  v261 = sub_21C3935C0((uint64_t)&unk_24E02D978);
  CurrencyDef.init(_:_:_:_:)(v261, v262, 1395553090, 0xE400000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8432));
  *(_QWORD *)(v0 + 8480) = 5591629;
  *(_QWORD *)(v0 + 8488) = 0xE300000000000000;
  v263 = sub_21C3935C0((uint64_t)&unk_24E02D9A0);
  CurrencyDef.init(_:_:_:_:)(v263, v264, 19797, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8496));
  *(_QWORD *)(v0 + 8544) = 5133395;
  *(_QWORD *)(v0 + 8552) = 0xE300000000000000;
  v265 = sub_21C3935C0((uint64_t)&unk_24E02D9C8);
  CurrencyDef.init(_:_:_:_:)(v265, v266, 25156, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8560));
  *(_QWORD *)(v0 + 8608) = 5524820;
  *(_QWORD *)(v0 + 8616) = 0xE300000000000000;
  v267 = sub_21C3935C0((uint64_t)&unk_24E02D9F0);
  CurrencyDef.init(_:_:_:_:)(v267, v268, 109, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8624));
  *(_QWORD *)(v0 + 8672) = 5457991;
  *(_QWORD *)(v0 + 8680) = 0xE300000000000000;
  v269 = sub_21C3935C0((uint64_t)&unk_24E02DA18);
  CurrencyDef.init(_:_:_:_:)(v269, v270, 11895522, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8688));
  *(_QWORD *)(v0 + 8736) = 4670547;
  *(_QWORD *)(v0 + 8744) = 0xE300000000000000;
  v271 = sub_21C3935C0((uint64_t)&unk_24E02DA40);
  CurrencyDef.init(_:_:_:_:)(v271, v272, 21324, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8752));
  *(_QWORD *)(v0 + 8800) = 4477778;
  *(_QWORD *)(v0 + 8808) = 0xE300000000000000;
  v273 = sub_21C3935C0((uint64_t)&unk_24E02DA68);
  CurrencyDef.init(_:_:_:_:)(v273, v274, 5130564, 0xE300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8816));
  *(_QWORD *)(v0 + 8864) = 5134925;
  *(_QWORD *)(v0 + 8872) = 0xE300000000000000;
  v275 = sub_21C3935C0((uint64_t)&unk_24E02DA90);
  CurrencyDef.init(_:_:_:_:)(v275, v276, 29773, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8880));
  *(_QWORD *)(v0 + 8928) = 5853780;
  *(_QWORD *)(v0 + 8936) = 0xE300000000000000;
  v277 = sub_21C3935C0((uint64_t)&unk_24E02DAB8);
  CurrencyDef.init(_:_:_:_:)(v277, v278, 12223202, 0xA300000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 8944));
  *(_QWORD *)(v0 + 8992) = 4604248;
  *(_QWORD *)(v0 + 9000) = 0xE300000000000000;
  v279 = sub_21C3935C0((uint64_t)&unk_24E02DAE0);
  CurrencyDef.init(_:_:_:_:)(v279, v280, 29254, 0xE200000000000000, 0, 0xE000000000000000, 0, (_QWORD *)(v0 + 9008));
  *(_QWORD *)(v0 + 9056) = 4604995;
  *(_QWORD *)(v0 + 9064) = 0xE300000000000000;
  v281 = sub_21C3935C0((uint64_t)&unk_24E02DB08);
  CurrencyDef.init(_:_:_:_:)(v281, v282, 29254, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 9072));
  *(_QWORD *)(v0 + 9120) = 4473688;
  *(_QWORD *)(v0 + 9128) = 0xE300000000000000;
  v283 = sub_21C3935C0((uint64_t)&unk_24E02DB30);
  CurrencyDef.init(_:_:_:_:)(v283, v284, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 9136));
  *(_QWORD *)(v0 + 9184) = 4607832;
  *(_QWORD *)(v0 + 9192) = 0xE300000000000000;
  v285 = sub_21C3935C0((uint64_t)&unk_24E02DB58);
  CurrencyDef.init(_:_:_:_:)(v285, v286, 29254, 0xE200000000000000, 0, 0xE000000000000000, 0, (_QWORD *)(v0 + 9200));
  *(_QWORD *)(v0 + 9248) = 4608088;
  *(_QWORD *)(v0 + 9256) = 0xE300000000000000;
  v287 = sub_21C3935C0((uint64_t)&unk_24E02DB80);
  CurrencyDef.init(_:_:_:_:)(v287, v288, 29254, 0xE200000000000000, 0, 0xE000000000000000, 0, (_QWORD *)(v0 + 9264));
  *(_QWORD *)(v0 + 9312) = 5721434;
  *(_QWORD *)(v0 + 9320) = 0xE300000000000000;
  v289 = sub_21C3935C0((uint64_t)&unk_24E02DBA8);
  CurrencyDef.init(_:_:_:_:)(v289, v290, 75, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 9328));
  *(_QWORD *)(v0 + 9376) = 4477523;
  *(_QWORD *)(v0 + 9384) = 0xE300000000000000;
  v291 = sub_21C3935C0((uint64_t)&unk_24E02DBD0);
  CurrencyDef.init(_:_:_:_:)(v291, v292, 36, 0xE100000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 9392));
  *(_QWORD *)(v0 + 9440) = 4278093;
  *(_QWORD *)(v0 + 9448) = 0xE300000000000000;
  v293 = sub_21C3935C0((uint64_t)&unk_24E02DBF8);
  CurrencyDef.init(_:_:_:_:)(v293, v294, 29249, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 9456));
  *(_QWORD *)(v0 + 9504) = 5129793;
  *(_QWORD *)(v0 + 9512) = 0xE300000000000000;
  v295 = sub_21C3935C0((uint64_t)&unk_24E02DC20);
  CurrencyDef.init(_:_:_:_:)(v295, v296, 0x8E80E28BD8, 0xA500000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 9520));
  *(_QWORD *)(v0 + 9568) = 5458516;
  *(_QWORD *)(v0 + 9576) = 0xE300000000000000;
  v297 = sub_21C3935C0((uint64_t)&unk_24E02DC48);
  CurrencyDef.init(_:_:_:_:)(v297, v298, 2630911440, 0xA400000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 9584));
  *(_QWORD *)(v0 + 9632) = 4280129;
  *(_QWORD *)(v0 + 9640) = 0xE300000000000000;
  v299 = sub_21C3935C0((uint64_t)&unk_24E02DC70);
  CurrencyDef.init(_:_:_:_:)(v299, v300, 31307, 0xE200000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 9648));
  *(_QWORD *)(v0 + 9696) = 5062978;
  *(_QWORD *)(v0 + 9704) = 0xE300000000000000;
  v301 = sub_21C3935C0((uint64_t)&unk_24E02DC98);
  CurrencyDef.init(_:_:_:_:)(v301, v302, 2630916816, 0xA400000000000000, 0, 0xE000000000000000, 2, (_QWORD *)(v0 + 9712));
  result = (void *)sub_21C2F5E84(v0);
  off_25525C230 = result;
  return result;
}

uint64_t static CurrencyDefinitions.list.getter()
{
  if (qword_25525AA88 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t CurrencyDefinitions.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CurrencyDefinitions.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t destroy for CurrencyDef(uint64_t a1)
{
  sub_21C2D2B48(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for CurrencyDef(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_21C2D1E94(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for CurrencyDef(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_21C2D1E94(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_21C2D2B48(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for CurrencyDef(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_21C2D2B48(v4, v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for CurrencyDef()
{
  return &type metadata for CurrencyDef;
}

uint64_t type metadata accessor for CurrencyDefinitions()
{
  return objc_opt_self();
}

uint64_t method lookup function for CurrencyDefinitions()
{
  return swift_lookUpClassMethod();
}

uint64_t IdentityInternalRequest.merchantDetails.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v2 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  v6 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v5;
  sub_21C2D4E74(v2, v6);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void IdentityInternalRequest.requestType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

void IdentityInternalRequest.validationMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 49);
}

__n128 IdentityInternalRequest.init(merchantDetails:requestType:validationMode:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  __n128 result;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *a2;
  v7 = *a3;
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(__n128 *)(a4 + 16) = result;
  *(_QWORD *)(a4 + 32) = v4;
  *(_QWORD *)(a4 + 40) = v5;
  *(_BYTE *)(a4 + 48) = v6;
  *(_BYTE *)(a4 + 49) = v7;
  return result;
}

uint64_t sub_21C2FD244()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x5474736575716572;
  if (*v0 != 1)
    v1 = 0x69746164696C6176;
  if (*v0)
    return v1;
  else
    return 0x746E61686372656DLL;
}

uint64_t sub_21C2FD2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C3003B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2FD2E4()
{
  sub_21C2FD4E8();
  return sub_21C3A8754();
}

uint64_t sub_21C2FD30C()
{
  sub_21C2FD4E8();
  return sub_21C3A8760();
}

uint64_t IdentityInternalRequest.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  int v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C2E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v19 = v1[1];
  v20 = v8;
  v10 = *((_QWORD *)v1 + 4);
  v9 = *((_QWORD *)v1 + 5);
  v25 = *((unsigned __int8 *)v1 + 48);
  v18 = *((unsigned __int8 *)v1 + 49);
  v11 = a1[3];
  v12 = a1;
  v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_21C2FD4E8();
  sub_21C3A8748();
  v21 = v20;
  v22 = v19;
  v23 = v10;
  v24 = v9;
  v26 = 0;
  sub_21C2FD52C();
  sub_21C3A8610();
  if (!v2)
  {
    v15 = v18;
    LOBYTE(v21) = v25;
    v26 = 1;
    sub_21C2FD570();
    sub_21C3A8610();
    LOBYTE(v21) = v15;
    v26 = 2;
    sub_21C2FD5B4();
    sub_21C3A85D4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

unint64_t sub_21C2FD4E8()
{
  unint64_t result;

  result = qword_25525C2F0;
  if (!qword_25525C2F0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD658, &type metadata for IdentityInternalRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C2F0);
  }
  return result;
}

unint64_t sub_21C2FD52C()
{
  unint64_t result;

  result = qword_25525C2F8;
  if (!qword_25525C2F8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityMerchantDetails, &type metadata for IdentityMerchantDetails);
    atomic_store(result, (unint64_t *)&qword_25525C2F8);
  }
  return result;
}

unint64_t sub_21C2FD570()
{
  unint64_t result;

  result = qword_25525C300;
  if (!qword_25525C300)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityDocumentRequestType, &type metadata for IdentityDocumentRequestType);
    atomic_store(result, (unint64_t *)&qword_25525C300);
  }
  return result;
}

unint64_t sub_21C2FD5B4()
{
  unint64_t result;

  result = qword_25525C308;
  if (!qword_25525C308)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseViewOptionsInternal.ValidationMode, &type metadata for MobileDriversLicenseViewOptionsInternal.ValidationMode);
    atomic_store(result, (unint64_t *)&qword_25525C308);
  }
  return result;
}

uint64_t IdentityInternalRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C310);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2FD4E8();
  sub_21C3A873C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v26 = 0;
  sub_21C2FD86C();
  sub_21C3A858C();
  v9 = v22;
  v10 = v24;
  v15 = v23;
  v16 = v21;
  v26 = 1;
  v17 = v20;
  v18 = v19;
  sub_21C2D4E74(v19, v20);
  sub_21C2FD8B0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C3A858C();
  v25 = v19;
  v26 = 2;
  sub_21C2FD8F4();
  sub_21C3A8550();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v19;
  v14 = v17;
  v13 = v18;
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v14;
  *(_QWORD *)(a2 + 16) = v16;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v10;
  *(_BYTE *)(a2 + 48) = v25;
  *(_BYTE *)(a2 + 49) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_21C2D43D4(v13, v14);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_21C2FD86C()
{
  unint64_t result;

  result = qword_25525C318;
  if (!qword_25525C318)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityMerchantDetails, &type metadata for IdentityMerchantDetails);
    atomic_store(result, (unint64_t *)&qword_25525C318);
  }
  return result;
}

unint64_t sub_21C2FD8B0()
{
  unint64_t result;

  result = qword_25525C320;
  if (!qword_25525C320)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityDocumentRequestType, &type metadata for IdentityDocumentRequestType);
    atomic_store(result, (unint64_t *)&qword_25525C320);
  }
  return result;
}

unint64_t sub_21C2FD8F4()
{
  unint64_t result;

  result = qword_25525C328;
  if (!qword_25525C328)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseViewOptionsInternal.ValidationMode, &type metadata for MobileDriversLicenseViewOptionsInternal.ValidationMode);
    atomic_store(result, (unint64_t *)&qword_25525C328);
  }
  return result;
}

uint64_t sub_21C2FD938@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IdentityInternalRequest.init(from:)(a1, a2);
}

uint64_t sub_21C2FD94C(_QWORD *a1)
{
  return IdentityInternalRequest.encode(to:)(a1);
}

BOOL static IdentityDocumentRequestType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t IdentityDocumentRequestType.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t sub_21C2FD99C()
{
  sub_21C2FE090();
  return sub_21C3A8754();
}

uint64_t sub_21C2FD9C4()
{
  sub_21C2FE090();
  return sub_21C3A8760();
}

uint64_t sub_21C2FD9EC()
{
  sub_21C2FE118();
  return sub_21C3A8754();
}

uint64_t sub_21C2FDA14()
{
  sub_21C2FE118();
  return sub_21C3A8760();
}

uint64_t sub_21C2FDA3C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C2FDA64 + 4 * byte_21C3ACC30[*v0]))(6645601, 0xE300000000000000);
}

uint64_t sub_21C2FDA64()
{
  return 1701667182;
}

uint64_t sub_21C2FDA74()
{
  return 0x614E646E41656761;
}

uint64_t sub_21C2FDA90()
{
  return 0x4C73726576697264;
}

uint64_t sub_21C2FDAB4()
{
  return 0x6C616E6F6974616ELL;
}

uint64_t sub_21C2FDAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C30056C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2FDAFC()
{
  sub_21C2FDFC4();
  return sub_21C3A8754();
}

uint64_t sub_21C2FDB24()
{
  sub_21C2FDFC4();
  return sub_21C3A8760();
}

uint64_t sub_21C2FDB4C()
{
  sub_21C2FE04C();
  return sub_21C3A8754();
}

uint64_t sub_21C2FDB74()
{
  sub_21C2FE04C();
  return sub_21C3A8760();
}

uint64_t sub_21C2FDB9C()
{
  sub_21C2FE0D4();
  return sub_21C3A8754();
}

uint64_t sub_21C2FDBC4()
{
  sub_21C2FE0D4();
  return sub_21C3A8760();
}

uint64_t sub_21C2FDBEC()
{
  sub_21C2FE008();
  return sub_21C3A8754();
}

uint64_t sub_21C2FDC14()
{
  sub_21C2FE008();
  return sub_21C3A8760();
}

void IdentityDocumentRequestType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C330);
  v14[11] = *(_QWORD *)(v3 - 8);
  v14[12] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v14[10] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C338);
  v14[8] = *(_QWORD *)(v5 - 8);
  v14[9] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v14[7] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C340);
  v14[5] = *(_QWORD *)(v7 - 8);
  v14[6] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v14[4] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C348);
  v14[2] = *(_QWORD *)(v9 - 8);
  v14[3] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v14[1] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C350);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C358);
  v14[14] = *(_QWORD *)(v12 - 8);
  v14[15] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2FDFC4();
  sub_21C3A8748();
  __asm { BR              X9 }
}

uint64_t sub_21C2FDE30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 69) = 0;
  sub_21C2FE118();
  v5 = *(_QWORD *)(v4 - 88);
  sub_21C3A85A4();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v5);
}

unint64_t sub_21C2FDFC4()
{
  unint64_t result;

  result = qword_25525C360;
  if (!qword_25525C360)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD608, &type metadata for IdentityDocumentRequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C360);
  }
  return result;
}

unint64_t sub_21C2FE008()
{
  unint64_t result;

  result = qword_25525C368;
  if (!qword_25525C368)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD5B8, &type metadata for IdentityDocumentRequestType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C368);
  }
  return result;
}

unint64_t sub_21C2FE04C()
{
  unint64_t result;

  result = qword_25525C370;
  if (!qword_25525C370)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD568, &type metadata for IdentityDocumentRequestType.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C370);
  }
  return result;
}

unint64_t sub_21C2FE090()
{
  unint64_t result;

  result = qword_25525C378;
  if (!qword_25525C378)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD518, &type metadata for IdentityDocumentRequestType.AgeAndNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C378);
  }
  return result;
}

unint64_t sub_21C2FE0D4()
{
  unint64_t result;

  result = qword_25525C380;
  if (!qword_25525C380)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD4C8, &type metadata for IdentityDocumentRequestType.NameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C380);
  }
  return result;
}

unint64_t sub_21C2FE118()
{
  unint64_t result;

  result = qword_25525C388;
  if (!qword_25525C388)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD478, &type metadata for IdentityDocumentRequestType.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C388);
  }
  return result;
}

uint64_t IdentityDocumentRequestType.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t IdentityDocumentRequestType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD v27[4];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v42 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C390);
  v34 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C398);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C3A0);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C3A8);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C3B0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C3B8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_21C2FDFC4();
  v19 = v44;
  sub_21C3A873C();
  if (!v19)
  {
    v27[2] = v10;
    v27[3] = v13;
    v27[1] = v11;
    v44 = v15;
    v28 = v17;
    v29 = v14;
    v20 = sub_21C3A8598();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v21 = sub_21C3A840C();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
    *v23 = &type metadata for IdentityDocumentRequestType;
    v24 = v28;
    v25 = v29;
    sub_21C3A8520();
    sub_21C3A8400();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_21C2FE698@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IdentityDocumentRequestType.init(from:)(a1, a2);
}

void sub_21C2FE6AC(_QWORD *a1)
{
  IdentityDocumentRequestType.encode(to:)(a1);
}

uint64_t sub_21C2FE6C0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C616E6F6974616ELL;
  else
    return 0x4C73726576697264;
}

uint64_t sub_21C2FE714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C3007BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C2FE738()
{
  sub_21C2FEB58();
  return sub_21C3A8754();
}

uint64_t sub_21C2FE760()
{
  sub_21C2FEB58();
  return sub_21C3A8760();
}

uint64_t sub_21C2FE788()
{
  sub_21C2FEC24();
  return sub_21C3A8754();
}

uint64_t sub_21C2FE7B0()
{
  sub_21C2FEC24();
  return sub_21C3A8760();
}

uint64_t sub_21C2FE7D8()
{
  sub_21C2FEBE0();
  return sub_21C3A8754();
}

uint64_t sub_21C2FE800()
{
  sub_21C2FEBE0();
  return sub_21C3A8760();
}

uint64_t IdentityDocumentType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C3C0);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21C3A7848();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C3C8);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IdentityDocumentType();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C3D0);
  v13 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2FEB58();
  sub_21C3A8748();
  sub_21C2FEB9C(v30, (uint64_t)v12);
  v30 = v5;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v31 = 0;
    sub_21C2FEC24();
    v16 = v29;
    sub_21C3A85A4();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v16);
  }
  else
  {
    v18 = v25;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v25, v12, v4);
    v32 = 1;
    sub_21C2FEBE0();
    v19 = v26;
    v20 = v29;
    sub_21C3A85A4();
    sub_21C2FF098(&qword_25525C3E8, MEMORY[0x24BDCED18]);
    v21 = v28;
    sub_21C3A8610();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v21);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v20);
  }
}

uint64_t type metadata accessor for IdentityDocumentType()
{
  uint64_t result;

  result = qword_25525C490;
  if (!qword_25525C490)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21C2FEB58()
{
  unint64_t result;

  result = qword_25525C3D8;
  if (!qword_25525C3D8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD428, &type metadata for IdentityDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C3D8);
  }
  return result;
}

uint64_t sub_21C2FEB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IdentityDocumentType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_21C2FEBE0()
{
  unint64_t result;

  result = qword_25525C3E0;
  if (!qword_25525C3E0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD3D8, &type metadata for IdentityDocumentType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C3E0);
  }
  return result;
}

unint64_t sub_21C2FEC24()
{
  unint64_t result;

  result = qword_25525C3F0;
  if (!qword_25525C3F0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD388, &type metadata for IdentityDocumentType.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C3F0);
  }
  return result;
}

uint64_t IdentityDocumentType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  char v43;

  v41 = a1;
  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C3F8);
  v4 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  v36 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C400);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C408);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IdentityDocumentType();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C2FEB58();
  v18 = v40;
  sub_21C3A873C();
  if (!v18)
  {
    v32 = v12;
    v19 = v37;
    v20 = v38;
    v40 = v9;
    v21 = v39;
    v22 = sub_21C3A8598();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v37 = (char *)v22;
        v43 = 1;
        sub_21C2FEBE0();
        sub_21C3A8514();
        v27 = sub_21C3A7848();
        sub_21C2FF098(&qword_25525C410, MEMORY[0x24BDCED30]);
        v28 = v20;
        v29 = v27;
        v30 = v35;
        sub_21C3A858C();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 0, 1, v29);
        sub_21C2FF0D8((uint64_t)v15, (uint64_t)v17);
      }
      else
      {
        v42 = 0;
        sub_21C2FEC24();
        sub_21C3A8514();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v34);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v8);
        v31 = sub_21C3A7848();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v17, 1, 1, v31);
      }
      sub_21C2FF0D8((uint64_t)v17, v21);
    }
    else
    {
      v23 = sub_21C3A840C();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
      *v25 = v32;
      sub_21C3A8520();
      sub_21C3A8400();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

uint64_t sub_21C2FF098(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_21C3A7848();
    result = MEMORY[0x22077AECC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C2FF0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IdentityDocumentType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21C2FF120()
{
  unint64_t result;

  result = qword_25525C418;
  if (!qword_25525C418)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityDocumentRequestType, &type metadata for IdentityDocumentRequestType);
    atomic_store(result, (unint64_t *)&qword_25525C418);
  }
  return result;
}

uint64_t sub_21C2FF164@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IdentityDocumentType.init(from:)(a1, a2);
}

uint64_t sub_21C2FF178(_QWORD *a1)
{
  return IdentityDocumentType.encode(to:)(a1);
}

uint64_t initializeWithCopy for IdentityInternalRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_21C2D4E74(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IdentityInternalRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_21C2D4E74(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_21C2D43D4(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for IdentityInternalRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_21C2D43D4(v4, v5);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityInternalRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 50))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityInternalRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 50) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityInternalRequest()
{
  return &type metadata for IdentityInternalRequest;
}

ValueMetadata *type metadata accessor for IdentityDocumentRequestType()
{
  return &type metadata for IdentityDocumentRequestType;
}

uint64_t *initializeBufferWithCopyOfBuffer for IdentityDocumentType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_21C3A7848();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for IdentityDocumentType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_21C3A7848();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for IdentityDocumentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_21C3A7848();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for IdentityDocumentType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_21C3A7848();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for IdentityDocumentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_21C3A7848();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for IdentityDocumentType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_21C3A7848();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityDocumentType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2FF824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_21C3A7848();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2FF87C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_21C3A7848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_21C2FF8CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C3A7848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_21C2FF904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C3A7848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_21C2FF944()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C3A7848();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C2FF9E4 + 4 * byte_21C3ACC44[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C2FFA18 + 4 * byte_21C3ACC3F[v4]))();
}

uint64_t sub_21C2FFA18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2FFA20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2FFA28);
  return result;
}

uint64_t sub_21C2FFA34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2FFA3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C2FFA40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2FFA48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentType.CodingKeys()
{
  return &type metadata for IdentityDocumentType.CodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentType.DriversLicenseCodingKeys()
{
  return &type metadata for IdentityDocumentType.DriversLicenseCodingKeys;
}

uint64_t storeEnumTagSinglePayload for IdentityDocumentType.NationalIDCardCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C2FFAB4 + 4 * byte_21C3ACC49[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C2FFAD4 + 4 * byte_21C3ACC4E[v4]))();
}

_BYTE *sub_21C2FFAB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C2FFAD4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C2FFADC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C2FFAE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C2FFAEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C2FFAF4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentType.NationalIDCardCodingKeys()
{
  return &type metadata for IdentityDocumentType.NationalIDCardCodingKeys;
}

uint64_t _s15ProximityReader27IdentityDocumentRequestTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21C2FFB5C + 4 * byte_21C3ACC58[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21C2FFB90 + 4 * byte_21C3ACC53[v4]))();
}

uint64_t sub_21C2FFB90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2FFB98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2FFBA0);
  return result;
}

uint64_t sub_21C2FFBAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2FFBB4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21C2FFBB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2FFBC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityDocumentRequestType.CodingKeys()
{
  return &type metadata for IdentityDocumentRequestType.CodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentRequestType.AgeCodingKeys()
{
  return &type metadata for IdentityDocumentRequestType.AgeCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentRequestType.NameCodingKeys()
{
  return &type metadata for IdentityDocumentRequestType.NameCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentRequestType.AgeAndNameCodingKeys()
{
  return &type metadata for IdentityDocumentRequestType.AgeAndNameCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentRequestType.DriversLicenseCodingKeys()
{
  return &type metadata for IdentityDocumentRequestType.DriversLicenseCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityDocumentRequestType.NationalIDCardCodingKeys()
{
  return &type metadata for IdentityDocumentRequestType.NationalIDCardCodingKeys;
}

uint64_t storeEnumTagSinglePayload for IdentityInternalRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C2FFC78 + 4 * byte_21C3ACC62[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C2FFCAC + 4 * byte_21C3ACC5D[v4]))();
}

uint64_t sub_21C2FFCAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2FFCB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C2FFCBCLL);
  return result;
}

uint64_t sub_21C2FFCC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C2FFCD0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C2FFCD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C2FFCDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityInternalRequest.CodingKeys()
{
  return &type metadata for IdentityInternalRequest.CodingKeys;
}

unint64_t sub_21C2FFCFC()
{
  unint64_t result;

  result = qword_25525C4A0;
  if (!qword_25525C4A0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ACF58, &type metadata for IdentityInternalRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4A0);
  }
  return result;
}

unint64_t sub_21C2FFD44()
{
  unint64_t result;

  result = qword_25525C4A8;
  if (!qword_25525C4A8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD1A0, &type metadata for IdentityDocumentRequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4A8);
  }
  return result;
}

unint64_t sub_21C2FFD8C()
{
  unint64_t result;

  result = qword_25525C4B0;
  if (!qword_25525C4B0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD258, &type metadata for IdentityDocumentType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4B0);
  }
  return result;
}

unint64_t sub_21C2FFDD4()
{
  unint64_t result;

  result = qword_25525C4B8;
  if (!qword_25525C4B8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD360, &type metadata for IdentityDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4B8);
  }
  return result;
}

unint64_t sub_21C2FFE1C()
{
  unint64_t result;

  result = qword_25525C4C0;
  if (!qword_25525C4C0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD280, &type metadata for IdentityDocumentType.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4C0);
  }
  return result;
}

unint64_t sub_21C2FFE64()
{
  unint64_t result;

  result = qword_25525C4C8;
  if (!qword_25525C4C8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD2A8, &type metadata for IdentityDocumentType.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4C8);
  }
  return result;
}

unint64_t sub_21C2FFEAC()
{
  unint64_t result;

  result = qword_25525C4D0;
  if (!qword_25525C4D0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD1C8, &type metadata for IdentityDocumentType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4D0);
  }
  return result;
}

unint64_t sub_21C2FFEF4()
{
  unint64_t result;

  result = qword_25525C4D8;
  if (!qword_25525C4D8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD1F0, &type metadata for IdentityDocumentType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4D8);
  }
  return result;
}

unint64_t sub_21C2FFF3C()
{
  unint64_t result;

  result = qword_25525C4E0;
  if (!qword_25525C4E0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD2D0, &type metadata for IdentityDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4E0);
  }
  return result;
}

unint64_t sub_21C2FFF84()
{
  unint64_t result;

  result = qword_25525C4E8;
  if (!qword_25525C4E8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD2F8, &type metadata for IdentityDocumentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4E8);
  }
  return result;
}

unint64_t sub_21C2FFFCC()
{
  unint64_t result;

  result = qword_25525C4F0;
  if (!qword_25525C4F0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD0C0, &type metadata for IdentityDocumentRequestType.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4F0);
  }
  return result;
}

unint64_t sub_21C300014()
{
  unint64_t result;

  result = qword_25525C4F8;
  if (!qword_25525C4F8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD0E8, &type metadata for IdentityDocumentRequestType.AgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C4F8);
  }
  return result;
}

unint64_t sub_21C30005C()
{
  unint64_t result;

  result = qword_25525C500;
  if (!qword_25525C500)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD070, &type metadata for IdentityDocumentRequestType.NameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C500);
  }
  return result;
}

unint64_t sub_21C3000A4()
{
  unint64_t result;

  result = qword_25525C508;
  if (!qword_25525C508)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD098, &type metadata for IdentityDocumentRequestType.NameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C508);
  }
  return result;
}

unint64_t sub_21C3000EC()
{
  unint64_t result;

  result = qword_25525C510;
  if (!qword_25525C510)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD020, &type metadata for IdentityDocumentRequestType.AgeAndNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C510);
  }
  return result;
}

unint64_t sub_21C300134()
{
  unint64_t result;

  result = qword_25525C518;
  if (!qword_25525C518)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD048, &type metadata for IdentityDocumentRequestType.AgeAndNameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C518);
  }
  return result;
}

unint64_t sub_21C30017C()
{
  unint64_t result;

  result = qword_25525C520;
  if (!qword_25525C520)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ACFD0, &type metadata for IdentityDocumentRequestType.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C520);
  }
  return result;
}

unint64_t sub_21C3001C4()
{
  unint64_t result;

  result = qword_25525C528;
  if (!qword_25525C528)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ACFF8, &type metadata for IdentityDocumentRequestType.DriversLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C528);
  }
  return result;
}

unint64_t sub_21C30020C()
{
  unint64_t result;

  result = qword_25525C530;
  if (!qword_25525C530)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ACF80, &type metadata for IdentityDocumentRequestType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C530);
  }
  return result;
}

unint64_t sub_21C300254()
{
  unint64_t result;

  result = qword_25525C538;
  if (!qword_25525C538)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ACFA8, &type metadata for IdentityDocumentRequestType.NationalIDCardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C538);
  }
  return result;
}

unint64_t sub_21C30029C()
{
  unint64_t result;

  result = qword_25525C540;
  if (!qword_25525C540)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD110, &type metadata for IdentityDocumentRequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C540);
  }
  return result;
}

unint64_t sub_21C3002E4()
{
  unint64_t result;

  result = qword_25525C548;
  if (!qword_25525C548)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AD138, &type metadata for IdentityDocumentRequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C548);
  }
  return result;
}

unint64_t sub_21C30032C()
{
  unint64_t result;

  result = qword_25525C550;
  if (!qword_25525C550)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ACEC8, &type metadata for IdentityInternalRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C550);
  }
  return result;
}

unint64_t sub_21C300374()
{
  unint64_t result;

  result = qword_25525C558;
  if (!qword_25525C558)
  {
    result = MEMORY[0x22077AECC](&unk_21C3ACEF0, &type metadata for IdentityInternalRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525C558);
  }
  return result;
}

uint64_t sub_21C3003B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E61686372656DLL && a2 == 0xEF736C6961746544;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5474736575716572 && a2 == 0xEB00000000657079 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746164696C6176 && a2 == 0xEE0065646F4D6E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21C30056C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6645601 && a2 == 0xE300000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E646E41656761 && a2 == 0xEA0000000000656DLL || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C73726576697264 && a2 == 0xEE0065736E656369 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C616E6F6974616ELL && a2 == 0xEE00647261434449)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_21C3007BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4C73726576697264 && a2 == 0xEE0065736E656369;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E6F6974616ELL && a2 == 0xEE00647261434449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21C3008F4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ProximityReaderDiscoveryActor();
  v0 = swift_allocObject();
  result = sub_21C30092C();
  qword_255278ED8 = v0;
  return result;
}

uint64_t sub_21C30092C()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  id v9;
  id v10;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 128) = 0;
  *(_BYTE *)(v0 + 136) = 0;
  type metadata accessor for LayoutBundleManager();
  v1 = (_QWORD *)swift_allocObject();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1[3] = 0;
  v1[4] = 0;
  v1[2] = v2;
  *(_QWORD *)(v0 + 144) = v1;
  *(_QWORD *)(v0 + 152) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProximityReaderDiscoveryAnalyticsManager()), sel_init);
  *(_QWORD *)(v0 + 160) = 1819047278;
  *(_QWORD *)(v0 + 168) = 0xE400000000000000;
  v3 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v4 = (void *)sub_21C3A7EB4();
  v5 = objc_msgSend(v3, sel_initWithMachServiceName_options_, v4, 4096);

  sub_21C30A72C();
  v6 = swift_allocError();
  *v7 = 5;
  *(_QWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 120) = v6;
  v8 = (void *)objc_opt_self();
  v9 = v5;
  v10 = objc_msgSend(v8, sel_interfaceWithProtocol_, &unk_255289550);
  objc_msgSend(v9, sel_setRemoteObjectInterface_, v10);

  objc_msgSend(*(id *)(v0 + 112), sel_activate);
  return v0;
}

uint64_t sub_21C300ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v17 - v6;
  if (qword_25525AB08 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v8, (uint64_t)v7);
  v9 = sub_21C3A79D4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_21C2D775C((uint64_t)v7, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v1, 0x74696E696564, 0xE600000000000000, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  objc_msgSend(*(id *)(v1 + 112), sel_invalidate);
  v12 = *(_QWORD *)(v1 + 144);
  sub_21C2D1D80(v8, (uint64_t)v5);
  if (v11(v5, 1, v9) == 1)
  {
    sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v12, 0x292865766F6D6572, 0xE800000000000000, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
  }
  v13 = *(void **)(v12 + 24);
  v14 = *(void **)(v12 + 32);
  swift_bridgeObjectRetain();
  sub_21C366958(v13, v14);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  swift_bridgeObjectRelease();
  v15 = *(void **)(v1 + 120);

  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_21C300CF0()
{
  sub_21C300ABC();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ProximityReaderDiscoveryActor()
{
  return objc_opt_self();
}

uint64_t sub_21C300D28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C300D88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  id v11;
  _QWORD *v12;

  if (qword_25525AB08 != -1)
    swift_once();
  v1 = v0[5];
  v2 = __swift_project_value_buffer(v0[4], (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[5];
  if (v5 == 1)
  {
    sub_21C2D775C(v0[5], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[3], 0x28746E65746E6F63, 0xEF293A6369706F74, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = sub_21C30830C();
  v0[6] = (uint64_t)v7;
  v0[7] = (uint64_t)v8;
  v9 = v8;
  v10 = v7;
  v11 = v9;
  v12 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v12;
  *v12 = v0;
  v12[1] = sub_21C300F14;
  return sub_21C307914(v0[2], 0x28746E65746E6F63, 0xEF293A6369706F74, v0[3], (uint64_t)v10, (uint64_t)v9);
}

uint64_t sub_21C300F14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C300F78()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C300FC0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C301004(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8A8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = 0;
  *((_QWORD *)v13 + 3) = 0;
  *((_QWORD *)v13 + 4) = v10;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v13[v12], (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_unknownObjectRetain();
  sub_21C2DDA54((uint64_t)v9, (uint64_t)&unk_25525C8B8, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_21C301150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[28] = a4;
  v5[29] = a5;
  v5[30] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  v5[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C3011CC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void *)v0[28];
  v2 = sub_21C3A7EB4();
  v0[34] = v2;
  v3 = sub_21C3A7EB4();
  v0[35] = v3;
  v0[7] = v0 + 19;
  v0[2] = v0;
  v0[3] = sub_21C3012B8;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_21C301AE4;
  v5[3] = &block_descriptor_83;
  v5[4] = v4;
  objc_msgSend(v1, sel_contentWithTopic_subtopic_completionHandler_, v2, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_21C3012B8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 288) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21C301318()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);

  sub_21C34D078();
  if (v18)
  {
    swift_bridgeObjectRetain();
    sub_21C3A7F8C();
    swift_bridgeObjectRetain();
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21C30C710(v17, v18);
    *(_QWORD *)(v0 + 120) = v17;
    *(_QWORD *)(v0 + 128) = v18;
    *(_QWORD *)(v0 + 136) = v19;
    *(_QWORD *)(v0 + 144) = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8A8);
    sub_21C3A80E8();
    v5 = v3;
    v4 = v2;
  }
  else
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v6 = *(_QWORD *)(v0 + 264);
    v7 = __swift_project_value_buffer(*(_QWORD *)(v0 + 240), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v7, v6);
    v8 = sub_21C3A79D4();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 264), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v10 = sub_21C3A79BC();
      v11 = sub_21C3A81C0();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_21C2CD000, v10, v11, "content - content is nil", v12, 2u);
        MEMORY[0x22077AF8C](v12, -1, -1);
      }
      v13 = *(_QWORD *)(v0 + 264);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
    }
    sub_21C30A72C();
    v14 = swift_allocError();
    *v15 = 5;
    *(_QWORD *)(v0 + 208) = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8A8);
    sub_21C3A80DC();
    v4 = v2;
    v5 = v3;
  }
  sub_21C2D2B48(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3015B8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _BYTE *v26;
  void *v27;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(void **)(v0 + 280);
  v2 = *(void **)(v0 + 288);
  v3 = *(void **)(v0 + 272);
  swift_willThrow();

  *(_QWORD *)(v0 + 176) = v2;
  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
  if ((swift_dynamicCast() & 1) != 0)
  {

    v5 = *(_QWORD *)(v0 + 168);
    if (qword_25525AB08 != -1)
      swift_once();
    v6 = *(_QWORD *)(v0 + 256);
    v7 = __swift_project_value_buffer(*(_QWORD *)(v0 + 240), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v7, v6);
    v8 = sub_21C3A79D4();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 256), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v14 = sub_21C3A79BC();
      v15 = sub_21C3A81C0();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        v32 = v17;
        *(_DWORD *)v16 = 136315138;
        v31 = v17;
        v18 = 0xE700000000000000;
        v19 = 0x6E776F6E6B6E75;
        switch(v5)
        {
          case 0uLL:
            v18 = 0xEF646E756F46746FLL;
            v19 = 0x4E746E65746E6F63;
            goto LABEL_23;
          case 1uLL:
            v19 = 0xD000000000000014;
            v18 = 0x800000021C3BA570;
            goto LABEL_23;
          case 2uLL:
            v18 = 0xEC00000064657472;
            v19 = 0x6F70707553746F6ELL;
            goto LABEL_23;
          case 3uLL:
            v18 = 0x800000021C3BA550;
            v19 = 0xD000000000000012;
            goto LABEL_23;
          case 4uLL:
            v18 = 0xEA00000000007973;
            v19 = 0x75426D6574737973;
            goto LABEL_23;
          case 5uLL:
            v18 = 0xE900000000000064;
            v19 = 0x656C6C65636E6163;
            goto LABEL_23;
          case 6uLL:
LABEL_23:
            *(_QWORD *)(v0 + 200) = sub_21C350398(v19, v18, &v32);
            sub_21C3A82F8();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_21C2CD000, v14, v15, "content - error: %s", v16, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x22077AF8C](v31, -1, -1);
            MEMORY[0x22077AF8C](v16, -1, -1);
            break;
          default:
            *(_QWORD *)(v0 + 192) = v5;
            return sub_21C3A8670();
        }
      }

      (*(void (**)(_QWORD, uint64_t))(v9 + 8))(*(_QWORD *)(v0 + 256), v8);
    }
    sub_21C30A72C();
    v29 = swift_allocError();
    DiscoveryErrorInternal.externalize.getter(v5, v30);
    *(_QWORD *)(v0 + 184) = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8A8);
    sub_21C3A80DC();
    v27 = *(void **)(v0 + 176);
  }
  else
  {

    if (qword_25525AB08 != -1)
      swift_once();
    v10 = *(_QWORD *)(v0 + 248);
    v11 = __swift_project_value_buffer(*(_QWORD *)(v0 + 240), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v11, v10);
    v12 = sub_21C3A79D4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21C2CD000, v20, v21, "content - unknown error", v22, 2u);
        MEMORY[0x22077AF8C](v22, -1, -1);
      }
      v23 = *(_QWORD *)(v0 + 248);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v23, v12);
    }
    v24 = *(void **)(v0 + 288);
    sub_21C30A72C();
    v25 = swift_allocError();
    *v26 = 5;
    *(_QWORD *)(v0 + 216) = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8A8);
    sub_21C3A80DC();
    v27 = v24;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C301AE4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = a2;
    v9 = sub_21C3A774C();
    v11 = v10;

    v12 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v12 = v9;
    v12[1] = v11;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_21C301B84()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C301BE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  id v11;
  _QWORD *v12;

  if (qword_25525AB08 != -1)
    swift_once();
  v1 = v0[4];
  v2 = __swift_project_value_buffer(v0[3], (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[4];
  if (v5 == 1)
  {
    sub_21C2D775C(v0[4], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[2], 0x4C746E65746E6F63, 0xED00002928747369, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = sub_21C30830C();
  v0[5] = (uint64_t)v7;
  v0[6] = (uint64_t)v8;
  v9 = v8;
  v10 = v7;
  v11 = v9;
  v12 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v12;
  *v12 = v0;
  v12[1] = sub_21C301D6C;
  return sub_21C30A8DC(0x4C746E65746E6F63, 0xED00002928747369, v0[2], (uint64_t)v10, (uint64_t)v9);
}

uint64_t sub_21C301D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  void *v6;

  v4 = *v2;
  v5 = *(void **)(*v2 + 40);
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc();

  v6 = *(void **)(v4 + 48);
  if (!v1)
    *(_QWORD *)(v4 + 72) = a1;

  return swift_task_switch();
}

uint64_t sub_21C301DF8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

uint64_t sub_21C301E44()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C301E88(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8D0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = 0;
  *((_QWORD *)v13 + 3) = 0;
  *((_QWORD *)v13 + 4) = v10;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v13[v12], (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_unknownObjectRetain();
  sub_21C2DDA54((uint64_t)v9, (uint64_t)&unk_25525C8E0, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_21C301FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[25] = a4;
  v5[26] = a5;
  v5[27] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C302050()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[25];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_21C3020E4;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_21C301AE4;
  v3[3] = &block_descriptor_92;
  v3[4] = v2;
  objc_msgSend(v1, sel_contentListWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_21C3020E4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 248) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21C302144()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = sub_21C34D404();
  if (v3)
  {
    v23 = v1;
    v24 = v0;
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v5 = v3 + 72;
      v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v7 = *(_QWORD *)(v5 - 40);
        v8 = *(_QWORD *)(v5 - 32);
        v25 = *(_QWORD *)(v5 - 24);
        v26 = *(_QWORD *)(v5 - 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_21C3A7F8C();
        swift_bridgeObjectRetain();
        sub_21C3A7F8C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_21C3341E0(0, v6[2] + 1, 1, v6);
        v10 = v6[2];
        v9 = v6[3];
        if (v10 >= v9 >> 1)
          v6 = sub_21C3341E0((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
        v5 += 48;
        v6[2] = v10 + 1;
        v11 = &v6[4 * v10];
        v11[4] = v7;
        v11[5] = v8;
        v11[6] = v25;
        v11[7] = v26;
        --v4;
      }
      while (v4);
    }
    else
    {
      v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v0 = v24;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v24 + 192) = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8D0);
    sub_21C3A80E8();
    v1 = v23;
  }
  else
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v12 = *(_QWORD *)(v0 + 240);
    v13 = __swift_project_value_buffer(*(_QWORD *)(v0 + 216), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v13, v12);
    v14 = sub_21C3A79D4();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 240), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v16 = sub_21C3A79BC();
      v17 = sub_21C3A81C0();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_21C2CD000, v16, v17, "contentList - content list is nil", v18, 2u);
        MEMORY[0x22077AF8C](v18, -1, -1);
      }
      v19 = *(_QWORD *)(v0 + 240);

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v14);
    }
    sub_21C30A72C();
    v20 = swift_allocError();
    *v21 = 5;
    *(_QWORD *)(v0 + 184) = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8D0);
    sub_21C3A80DC();
  }
  sub_21C2D2B48(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C302470()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _BYTE *v24;
  void *v25;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 248);
  swift_willThrow();
  *(_QWORD *)(v0 + 136) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
  if ((swift_dynamicCast() & 1) != 0)
  {

    v3 = *(_QWORD *)(v0 + 144);
    if (qword_25525AB08 != -1)
      swift_once();
    v4 = *(_QWORD *)(v0 + 232);
    v5 = __swift_project_value_buffer(*(_QWORD *)(v0 + 216), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v5, v4);
    v6 = sub_21C3A79D4();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 232), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v12 = sub_21C3A79BC();
      v13 = sub_21C3A81C0();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v30 = v15;
        *(_DWORD *)v14 = 136315138;
        v29 = v15;
        v16 = 0xEF646E756F46746FLL;
        v17 = 0x4E746E65746E6F63;
        switch(v3)
        {
          case 0uLL:
            goto LABEL_23;
          case 1uLL:
            v17 = 0xD000000000000014;
            v16 = 0x800000021C3BA570;
            goto LABEL_23;
          case 2uLL:
            v16 = 0xEC00000064657472;
            v17 = 0x6F70707553746F6ELL;
            goto LABEL_23;
          case 3uLL:
            v16 = 0x800000021C3BA550;
            v17 = 0xD000000000000012;
            goto LABEL_23;
          case 4uLL:
            v16 = 0xEA00000000007973;
            v17 = 0x75426D6574737973;
            goto LABEL_23;
          case 5uLL:
            v16 = 0xE900000000000064;
            v17 = 0x656C6C65636E6163;
            goto LABEL_23;
          case 6uLL:
            v16 = 0xE700000000000000;
            v17 = 0x6E776F6E6B6E75;
LABEL_23:
            *(_QWORD *)(v0 + 176) = sub_21C350398(v17, v16, &v30);
            sub_21C3A82F8();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_21C2CD000, v12, v13, "contentList - error: %s", v14, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x22077AF8C](v29, -1, -1);
            MEMORY[0x22077AF8C](v14, -1, -1);
            break;
          default:
            *(_QWORD *)(v0 + 168) = v3;
            return sub_21C3A8670();
        }
      }

      (*(void (**)(_QWORD, uint64_t))(v7 + 8))(*(_QWORD *)(v0 + 232), v6);
    }
    sub_21C30A72C();
    v27 = swift_allocError();
    DiscoveryErrorInternal.externalize.getter(v3, v28);
    *(_QWORD *)(v0 + 160) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8D0);
    sub_21C3A80DC();
    v25 = *(void **)(v0 + 136);
  }
  else
  {

    if (qword_25525AB08 != -1)
      swift_once();
    v8 = *(_QWORD *)(v0 + 224);
    v9 = __swift_project_value_buffer(*(_QWORD *)(v0 + 216), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v9, v8);
    v10 = sub_21C3A79D4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 224), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v18 = sub_21C3A79BC();
      v19 = sub_21C3A81C0();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_21C2CD000, v18, v19, "contentList - unknown error", v20, 2u);
        MEMORY[0x22077AF8C](v20, -1, -1);
      }
      v21 = *(_QWORD *)(v0 + 224);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
    }
    v22 = *(void **)(v0 + 248);
    sub_21C30A72C();
    v23 = swift_allocError();
    *v24 = 5;
    *(_QWORD *)(v0 + 152) = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8D0);
    sub_21C3A80DC();
    v25 = v22;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C302990(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5 = swift_task_alloc();
  v6 = *a1;
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = v6;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v3 + 72) = a1[3];
  return swift_task_switch();
}

uint64_t sub_21C302A08()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  id v13;
  id v14;
  _QWORD *v15;

  if (qword_25525AB08 != -1)
    swift_once();
  v1 = v0[5];
  v2 = __swift_project_value_buffer(v0[4], (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[5];
  if (v5 == 1)
  {
    sub_21C2D775C(v0[5], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[3], 0xD000000000000017, 0x800000021C3BA4C0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = sub_21C30830C();
  v0[10] = (uint64_t)v7;
  v0[11] = (uint64_t)v8;
  v9 = v7;
  v10 = v8;
  v11 = (void *)v0[2];
  swift_retain();
  v12 = v9;
  v13 = v10;
  v14 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v15;
  *v15 = v0;
  v15[1] = sub_21C302BD8;
  return sub_21C307E1C((uint64_t)v15, 0xD000000000000017, 0x800000021C3BA4C0, v0[3], v0[3], (uint64_t)v12, (uint64_t)v10, v0[2]);
}

uint64_t sub_21C302BD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C302C3C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C302C84()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C302CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[8] = a8;
  v8[9] = v10;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  v8[5] = a5;
  v8[2] = a2;
  v8[3] = a3;
  return swift_task_switch();
}

uint64_t sub_21C302CF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v2 = v0[8];
  v1 = v0[9];
  v4 = v0[6];
  v3 = v0[7];
  v5 = (void *)v0[5];
  v6 = v0[2];
  *(_QWORD *)(v6 + 160) = 1819047278;
  *(_QWORD *)(v6 + 168) = 0xE400000000000000;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)swift_allocObject();
  v0[10] = v7;
  v7[2] = v6;
  v7[3] = v5;
  v7[4] = v4;
  v7[5] = v3;
  v7[6] = v2;
  v7[7] = v1;
  swift_retain();
  v8 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C302D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = sub_21C30BD0C;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v3;
  *v3 = v0;
  v3[1] = sub_21C302E44;
  return sub_21C3A8664();
}

uint64_t sub_21C302E44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C302EC0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C302ECC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C302F0C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C302F40(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a7;
  v32 = a8;
  v29 = a5;
  v30 = a6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v13 = *(_QWORD *)(v12 - 8);
  v28 = v12;
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  v20 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v18, 1, 1, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0;
  *((_QWORD *)v22 + 4) = a3;
  *((_QWORD *)v22 + 5) = a4;
  v23 = v30;
  *((_QWORD *)v22 + 6) = v29;
  *((_QWORD *)v22 + 7) = v23;
  v24 = v32;
  *((_QWORD *)v22 + 8) = v31;
  *((_QWORD *)v22 + 9) = v24;
  *((_QWORD *)v22 + 10) = v19;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v22[v21], v15, v28);
  swift_retain();
  v25 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_21C2DDA54((uint64_t)v18, (uint64_t)&unk_25525C800, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_21C3030DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;

  *(_QWORD *)(v8 + 72) = v13;
  *(_OWORD *)(v8 + 56) = v12;
  *(_QWORD *)(v8 + 40) = a7;
  *(_QWORD *)(v8 + 48) = a8;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  *(_QWORD *)(v8 + 80) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 88) = v10;
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 104) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  *(_QWORD *)(v8 + 112) = swift_task_alloc();
  *(_QWORD *)(v8 + 120) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v8 + 128) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C3031AC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[2] + 152);
  v2 = (_QWORD *)swift_task_alloc();
  v0[17] = v2;
  *v2 = v0;
  v2[1] = sub_21C303208;
  return sub_21C3066C8(v0[3], v0[4], v0[5], v1);
}

uint64_t sub_21C303208(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C303264()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = (void *)v0[18];
  if (v1)
  {
    v3 = v0[13];
    v2 = v0[14];
    v4 = v0[11];
    v6 = v0[9];
    v5 = v0[10];
    v7 = v0[8];
    v37 = v0[7];
    v39 = v2;
    v8 = v0[5];
    v35 = v0[4];
    v36 = v0[6];
    v9 = v0[2];
    v10 = sub_21C3A8118();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v2, 1, 1, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
    v11 = (*(unsigned __int8 *)(v4 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v12 = (char *)swift_allocObject();
    *((_QWORD *)v12 + 2) = 0;
    *((_QWORD *)v12 + 3) = 0;
    *((_QWORD *)v12 + 4) = v7;
    *((_QWORD *)v12 + 5) = v35;
    *((_QWORD *)v12 + 6) = v8;
    *((_QWORD *)v12 + 7) = v36;
    *((_QWORD *)v12 + 8) = v37;
    *((_QWORD *)v12 + 9) = v9;
    *((_QWORD *)v12 + 10) = v1;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v12[v11], v3, v5);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v13 = v1;
    v14 = sub_21C2DDA54(v39, (uint64_t)&unk_25525C810, (uint64_t)v12);
    v0[19] = v14;
    v15 = swift_allocObject();
    v0[20] = v15;
    *(_QWORD *)(v15 + 16) = v7;
    *(_QWORD *)(v15 + 24) = v14;
    sub_21C3A8100();
    swift_unknownObjectRetain();
    swift_retain();
    v0[21] = sub_21C3A80F4();
    sub_21C3A80D0();
    return swift_task_switch();
  }
  else
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v17 = v0[16];
    v18 = __swift_project_value_buffer(v0[15], (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v18, v17);
    v19 = sub_21C3A79D4();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19) == 1)
    {
      sub_21C2D775C(v0[16], (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v21 = sub_21C3A79BC();
      v22 = sub_21C3A81C0();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_21C2CD000, v21, v22, "presentContent - unable to create Discovery view controller", v23, 2u);
        MEMORY[0x22077AF8C](v23, -1, -1);
      }
      v24 = v0[16];

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v24, v19);
    }
    v25 = v0[13];
    v26 = v0[10];
    v27 = v0[11];
    v28 = v0[8];
    v29 = v0[7];
    v30 = v0[5];
    v38 = v0[4];
    v40 = v0[6];
    v31 = v0[2];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 16))(v25, v0[9], v26);
    v32 = (*(unsigned __int8 *)(v27 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v33 = (char *)swift_allocObject();
    v0[22] = v33;
    *((_QWORD *)v33 + 2) = v31;
    *((_QWORD *)v33 + 3) = v28;
    *((_QWORD *)v33 + 4) = v38;
    *((_QWORD *)v33 + 5) = v30;
    *((_QWORD *)v33 + 6) = v40;
    *((_QWORD *)v33 + 7) = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(&v33[v32], v25, v26);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v34 = (_QWORD *)swift_task_alloc();
    v0[23] = v34;
    *v34 = v0;
    v34[1] = sub_21C3036C8;
    return sub_21C307498(v0[3], (uint64_t)sub_21C30BF24, (uint64_t)v33);
  }
}

uint64_t sub_21C303618()
{
  uint64_t v0;
  uint64_t (*v1)();
  uint64_t v2;
  uint64_t (**v3)();
  uint64_t v4;

  v1 = *(uint64_t (**)())(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  swift_release();
  v3 = (uint64_t (**)())(v2 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler);
  *v3 = sub_21C30C0F8;
  v3[1] = v1;
  sub_21C2F7984(v4);
  return swift_task_switch();
}

uint64_t sub_21C303678()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3036C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C303730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 272) = v11;
  *(_OWORD *)(v8 + 256) = v10;
  *(_QWORD *)(v8 + 240) = a7;
  *(_QWORD *)(v8 + 248) = a8;
  *(_QWORD *)(v8 + 224) = a5;
  *(_QWORD *)(v8 + 232) = a6;
  *(_QWORD *)(v8 + 216) = a4;
  *(_QWORD *)(v8 + 280) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v8 + 288) = swift_task_alloc();
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  *(_QWORD *)(v8 + 304) = swift_task_alloc();
  *(_QWORD *)(v8 + 312) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  *(_QWORD *)(v8 + 320) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C3037F4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)v0[27];
  v2 = sub_21C3A7EB4();
  v0[41] = v2;
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_21C3038A4;
  v3 = swift_continuation_init();
  v0[16] = MEMORY[0x24BDAC760];
  v4 = v0 + 16;
  v4[1] = 0x40000000;
  v4[2] = sub_21C305A48;
  v4[3] = &block_descriptor_44;
  v4[4] = v3;
  objc_msgSend(v1, sel_layoutBundleWithContentId_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_21C3038A4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 336) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21C303904()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 328);
  *(_OWORD *)(v0 + 344) = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 360) = *(_QWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 384) = *(_QWORD *)(v0 + 120);

  return swift_task_switch();
}

uint64_t sub_21C303968()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[44];
  v2 = (_QWORD *)v0[32];
  v2[20] = v0[43];
  v2[21] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[49] = v2[18];
  v3 = (_QWORD *)swift_task_alloc();
  v0[50] = v3;
  *v3 = v0;
  v3[1] = sub_21C3039D8;
  return sub_21C365CA4(v0[45], v0[46]);
}

uint64_t sub_21C3039D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  v5 = (_QWORD *)*v3;
  v5[51] = a2;
  v5[52] = v2;
  swift_task_dealloc();
  if (!v2)
    v5[53] = a1;
  return swift_task_switch();
}

uint64_t sub_21C303A50()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[52];
  v0[54] = (uint64_t)sub_21C30ADC8(v0[53], v0[51], v0[28], v0[29]);
  v0[55] = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21C303AE4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 448) = sub_21C3A8100();
  *(_QWORD *)(v0 + 456) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C303B50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 432);
  swift_release();
  sub_21C305B0C(v1, 1);
  return swift_task_switch();
}

uint64_t sub_21C303BA0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 464) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C303C00()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 264);
  swift_release();
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler);
  *v2 = 0;
  v2[1] = 0;
  sub_21C2F7984(v3);
  return swift_task_switch();
}

uint64_t sub_21C303C58()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 472) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C303CB8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 264);
  swift_release();
  *(_QWORD *)(v0 + 480) = objc_msgSend(v1, sel_view);
  return swift_task_switch();
}

void sub_21C303D14()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 480))
  {
    *(_QWORD *)(v0 + 488) = sub_21C3A80F4();
    sub_21C3A80D0();
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21C303D80()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 480);
  swift_release();
  objc_msgSend(v1, sel_layoutIfNeeded);

  return swift_task_switch();
}

uint64_t sub_21C303DD0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 496) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C303E30()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 264);
  swift_release();
  *(_QWORD *)(v0 + 504) = objc_msgSend(v1, sel_collectionView);
  return swift_task_switch();
}

void sub_21C303E8C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 504))
  {
    *(_QWORD *)(v0 + 512) = sub_21C3A80F4();
    sub_21C3A80D0();
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21C303EF8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = *(void **)(v0 + 440);
  *(_QWORD *)(v0 + 168) = v1;
  *(_QWORD *)(v0 + 624) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
  if (swift_dynamicCast())
  {

    *(_QWORD *)(v0 + 632) = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 640) = sub_21C3A8100();
    *(_QWORD *)(v0 + 648) = sub_21C3A80F4();
    sub_21C3A80D0();
  }
  else
  {

    if (qword_25525AB08 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 288);
    v4 = __swift_project_value_buffer(*(_QWORD *)(v0 + 280), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v4, v3);
    v5 = sub_21C3A79D4();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 288), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v7 = sub_21C3A79BC();
      v8 = sub_21C3A81C0();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_21C2CD000, v7, v8, "presentContent - unable to display content", v9, 2u);
        MEMORY[0x22077AF8C](v9, -1, -1);
      }
      v10 = *(_QWORD *)(v0 + 288);

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
    }
    v11 = *(_QWORD *)(v0 + 320);
    v13 = *(_QWORD *)(v0 + 248);
    v12 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 224);
    v18 = sub_21C3A8118();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = 0;
    v19[3] = 0;
    v19[4] = v12;
    v19[5] = v16;
    v19[6] = v17;
    v19[7] = v14;
    v19[8] = v15;
    v19[9] = v13;
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21C2DDA54(v11, (uint64_t)&unk_25525C838, (uint64_t)v19);
    swift_release();
    *(_QWORD *)(v0 + 704) = sub_21C3A8100();
    *(_QWORD *)(v0 + 712) = sub_21C3A80F4();
    sub_21C3A80D0();
  }
  return swift_task_switch();
}

uint64_t sub_21C3041BC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 504);
  swift_release();
  *(_QWORD *)(v0 + 520) = objc_msgSend(v1, sel_collectionViewLayout);

  return swift_task_switch();
}

uint64_t sub_21C304218()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 528) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C304278()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 520);
  swift_release();
  objc_msgSend(v1, sel_collectionViewContentSize);
  v3 = v2;

  *(_QWORD *)(v0 + 536) = v3;
  return swift_task_switch();
}

uint64_t sub_21C3042D4()
{
  uint64_t v0;
  unint64_t v1;

  v1 = PKUIGetMinScreenType();
  *(double *)(v0 + 544) = PKUIScreenTypeGetSize(v1);
  *(_QWORD *)(v0 + 552) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C304340()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 264);
  swift_release();
  *(_BYTE *)(v0 + 768) = objc_msgSend(v1, sel_isScrollable);
  return swift_task_switch();
}

uint64_t sub_21C304394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;

  v19 = *(_BYTE *)(v0 + 768);
  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 536);
  v3 = *(_QWORD *)(v0 + 376);
  v18 = *(_QWORD *)(v0 + 384);
  v16 = *(_OWORD *)(v0 + 344);
  v17 = *(_OWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 224);
  v11 = sub_21C3A8118();
  *(_QWORD *)(v0 + 560) = v11;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  *(_QWORD *)(v0 + 568) = v12;
  v12(v4, 1, 1, v11);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = v6;
  *(_QWORD *)(v13 + 40) = v9;
  *(_QWORD *)(v13 + 48) = v10;
  *(_QWORD *)(v13 + 56) = v8;
  *(_QWORD *)(v13 + 64) = v7;
  *(_QWORD *)(v13 + 72) = v5;
  *(_OWORD *)(v13 + 80) = v16;
  *(_OWORD *)(v13 + 96) = v17;
  *(_QWORD *)(v13 + 112) = v3;
  *(_QWORD *)(v13 + 120) = v18;
  *(_QWORD *)(v13 + 128) = v2;
  *(_QWORD *)(v13 + 136) = v1;
  *(_BYTE *)(v13 + 144) = v19;
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C2DDA54(v4, (uint64_t)&unk_25525C868, v13);
  swift_release();
  *(_QWORD *)(v0 + 576) = sub_21C3A80F4();
  *(_QWORD *)(v0 + 584) = sub_21C3A80D0();
  *(_QWORD *)(v0 + 592) = v14;
  return swift_task_switch();
}

uint64_t sub_21C304510()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[33];
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_didDisappear) == 1)
  {
    swift_release();
    return swift_task_switch();
  }
  else
  {
    v0[75] = sub_21C3A80F4();
    v3 = swift_task_alloc();
    v0[76] = v3;
    *(_QWORD *)(v3 + 16) = v1;
    v4 = (_QWORD *)swift_task_alloc();
    v0[77] = v4;
    *v4 = v0;
    v4[1] = sub_21C30460C;
    return sub_21C3A8634();
  }
}

uint64_t sub_21C30460C()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C30467C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21C3046B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD *v14;

  if (qword_25525AB08 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 312);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 280), (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 312);
    sub_21C365870(*(_QWORD *)(v0 + 392), 0x292865766F6D6572, 0xE800000000000000, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  }
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 568);
  v7 = *(_QWORD *)(v0 + 560);
  v8 = *(void **)(v0 + 432);
  v9 = *(_QWORD *)(v0 + 392);
  v10 = *(_QWORD *)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 256);
  v12 = *(void **)(v9 + 24);
  v13 = *(void **)(v9 + 32);
  swift_bridgeObjectRetain();
  sub_21C366958(v12, v13);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = 0;
  swift_bridgeObjectRelease();
  v6(v10, 1, 1, v7);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v11;
  swift_retain();
  sub_21C2DDA54(v10, (uint64_t)&unk_25525C878, (uint64_t)v14);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  sub_21C3A80E8();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3048A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 264);
  swift_release();
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler);
  *v2 = 0;
  v2[1] = 0;
  sub_21C2F7984(v3);
  return swift_task_switch();
}

uint64_t sub_21C3048FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;

  if (*(_QWORD *)(v0 + 632) == 5)
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v1 = *(_QWORD *)(v0 + 304);
    v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 280), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v2, v1);
    v3 = sub_21C3A79D4();
    v4 = *(_QWORD *)(v3 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 304), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v9 = sub_21C3A79BC();
      v10 = sub_21C3A81C0();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_21C2CD000, v9, v10, "presentContent - display cancelled", v11, 2u);
        MEMORY[0x22077AF8C](v11, -1, -1);
      }
      v12 = *(_QWORD *)(v0 + 304);

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v3);
    }
    v13 = *(_QWORD *)(v0 + 320);
    v15 = *(_QWORD *)(v0 + 248);
    v14 = *(_QWORD *)(v0 + 256);
    v16 = *(_QWORD *)(v0 + 232);
    v17 = *(_QWORD *)(v0 + 240);
    v18 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 224);
    v20 = sub_21C3A8118();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = 0;
    v21[3] = 0;
    v21[4] = v14;
    v21[5] = v18;
    v21[6] = v19;
    v21[7] = v16;
    v21[8] = v17;
    v21[9] = v15;
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21C2DDA54(v13, (uint64_t)&unk_25525C858, (uint64_t)v21);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
    sub_21C3A80E8();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v5 = *(_QWORD *)(v0 + 296);
    v6 = __swift_project_value_buffer(*(_QWORD *)(v0 + 280), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v6, v5);
    v7 = sub_21C3A79D4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v23 = sub_21C3A79BC();
      v24 = sub_21C3A81C0();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = *(_QWORD *)(v0 + 632);
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        v41 = v27;
        *(_DWORD *)v26 = 136315138;
        v28 = v27;
        v29 = 0xEF646E756F46746FLL;
        v30 = 0x4E746E65746E6F63;
        switch(v25)
        {
          case 0:
            goto LABEL_22;
          case 1:
            v30 = 0xD000000000000014;
            v29 = 0x800000021C3BA570;
            goto LABEL_22;
          case 2:
            v29 = 0xEC00000064657472;
            v30 = 0x6F70707553746F6ELL;
            goto LABEL_22;
          case 3:
            v29 = 0x800000021C3BA550;
            v30 = 0xD000000000000012;
            goto LABEL_22;
          case 4:
            v29 = 0xEA00000000007973;
            v30 = 0x75426D6574737973;
            goto LABEL_22;
          case 6:
            v29 = 0xE700000000000000;
            v30 = 0x6E776F6E6B6E75;
LABEL_22:
            *(_QWORD *)(v0 + 208) = sub_21C350398(v30, v29, &v41);
            sub_21C3A82F8();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_21C2CD000, v23, v24, "presentContent - unable to display content: %s", v26, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x22077AF8C](v28, -1, -1);
            MEMORY[0x22077AF8C](v26, -1, -1);
            break;
          default:
            *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 632);
            return sub_21C3A8670();
        }
      }

      (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v0 + 296), v7);
    }
    v31 = *(_QWORD *)(v0 + 632);
    v32 = *(_QWORD *)(v0 + 320);
    v34 = *(_QWORD *)(v0 + 248);
    v33 = *(_QWORD *)(v0 + 256);
    v35 = *(_QWORD *)(v0 + 232);
    v36 = *(_QWORD *)(v0 + 240);
    v37 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 224);
    v39 = sub_21C3A8118();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v32, 1, 1, v39);
    v40 = (_QWORD *)swift_allocObject();
    v40[2] = 0;
    v40[3] = 0;
    v40[4] = v33;
    v40[5] = v37;
    v40[6] = v38;
    v40[7] = v35;
    v40[8] = v36;
    v40[9] = v34;
    v40[10] = v31;
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21C2DDA54(v32, (uint64_t)&unk_25525C848, (uint64_t)v40);
    swift_release();
    return swift_task_switch();
  }
}

uint64_t sub_21C304E94()
{
  uint64_t v0;
  uint64_t v1;

  sub_21C306CB8(*(_QWORD *)(v0 + 632), *(void **)(v0 + 264));
  *(_QWORD *)(v0 + 656) = sub_21C3A80F4();
  *(_QWORD *)(v0 + 664) = sub_21C3A80D0();
  *(_QWORD *)(v0 + 672) = v1;
  return swift_task_switch();
}

uint64_t sub_21C304F04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[33];
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_didDisappear) == 1)
  {
    swift_release();
    return swift_task_switch();
  }
  else
  {
    v0[85] = sub_21C3A80F4();
    v3 = swift_task_alloc();
    v0[86] = v3;
    *(_QWORD *)(v3 + 16) = v1;
    v4 = (_QWORD *)swift_task_alloc();
    v0[87] = v4;
    *v4 = v0;
    v4[1] = sub_21C305000;
    return sub_21C3A8634();
  }
}

uint64_t sub_21C305000()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C305070()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21C3050AC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  v1 = *(_QWORD *)(v0 + 632);
  sub_21C30A72C();
  v2 = swift_allocError();
  DiscoveryErrorInternal.externalize.getter(v1, v3);
  *(_QWORD *)(v0 + 192) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  sub_21C3A80DC();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C305168()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 264);
  swift_release();
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler);
  *v2 = 0;
  v2[1] = 0;
  sub_21C2F7984(v3);
  return swift_task_switch();
}

uint64_t sub_21C3051C0()
{
  uint64_t v0;
  uint64_t v1;

  sub_21C306CB8(6, *(void **)(v0 + 264));
  *(_QWORD *)(v0 + 720) = sub_21C3A80F4();
  *(_QWORD *)(v0 + 728) = sub_21C3A80D0();
  *(_QWORD *)(v0 + 736) = v1;
  return swift_task_switch();
}

uint64_t sub_21C305230()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[33];
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_didDisappear) == 1)
  {
    swift_release();
    return swift_task_switch();
  }
  else
  {
    v0[93] = sub_21C3A80F4();
    v3 = swift_task_alloc();
    v0[94] = v3;
    *(_QWORD *)(v3 + 16) = v1;
    v4 = (_QWORD *)swift_task_alloc();
    v0[95] = v4;
    *v4 = v0;
    v4[1] = sub_21C30532C;
    return sub_21C3A8634();
  }
}

uint64_t sub_21C30532C()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C30539C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21C3053D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _BYTE *v3;

  v1 = *(void **)(v0 + 624);
  sub_21C30A72C();
  v2 = swift_allocError();
  *v3 = 5;
  *(_QWORD *)(v0 + 184) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  sub_21C3A80DC();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C30548C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(void **)(v0 + 328);
  swift_willThrow();

  v2 = *(void **)(v0 + 336);
  *(_QWORD *)(v0 + 168) = v2;
  *(_QWORD *)(v0 + 624) = v2;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
  if (swift_dynamicCast())
  {

    *(_QWORD *)(v0 + 632) = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 640) = sub_21C3A8100();
    *(_QWORD *)(v0 + 648) = sub_21C3A80F4();
    sub_21C3A80D0();
  }
  else
  {

    if (qword_25525AB08 != -1)
      swift_once();
    v4 = *(_QWORD *)(v0 + 288);
    v5 = __swift_project_value_buffer(*(_QWORD *)(v0 + 280), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v5, v4);
    v6 = sub_21C3A79D4();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 288), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v8 = sub_21C3A79BC();
      v9 = sub_21C3A81C0();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_21C2CD000, v8, v9, "presentContent - unable to display content", v10, 2u);
        MEMORY[0x22077AF8C](v10, -1, -1);
      }
      v11 = *(_QWORD *)(v0 + 288);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
    }
    v12 = *(_QWORD *)(v0 + 320);
    v14 = *(_QWORD *)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 256);
    v15 = *(_QWORD *)(v0 + 232);
    v16 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 216);
    v18 = *(_QWORD *)(v0 + 224);
    v19 = sub_21C3A8118();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v13;
    v20[5] = v17;
    v20[6] = v18;
    v20[7] = v15;
    v20[8] = v16;
    v20[9] = v14;
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21C2DDA54(v12, (uint64_t)&unk_25525C838, (uint64_t)v20);
    swift_release();
    *(_QWORD *)(v0 + 704) = sub_21C3A8100();
    *(_QWORD *)(v0 + 712) = sub_21C3A80F4();
    sub_21C3A80D0();
  }
  return swift_task_switch();
}

uint64_t sub_21C305764()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 416);
  *(_QWORD *)(v0 + 168) = v1;
  *(_QWORD *)(v0 + 624) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
  if (swift_dynamicCast())
  {

    *(_QWORD *)(v0 + 632) = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 640) = sub_21C3A8100();
    *(_QWORD *)(v0 + 648) = sub_21C3A80F4();
    sub_21C3A80D0();
  }
  else
  {

    if (qword_25525AB08 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 288);
    v4 = __swift_project_value_buffer(*(_QWORD *)(v0 + 280), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v4, v3);
    v5 = sub_21C3A79D4();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 288), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v7 = sub_21C3A79BC();
      v8 = sub_21C3A81C0();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_21C2CD000, v7, v8, "presentContent - unable to display content", v9, 2u);
        MEMORY[0x22077AF8C](v9, -1, -1);
      }
      v10 = *(_QWORD *)(v0 + 288);

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
    }
    v11 = *(_QWORD *)(v0 + 320);
    v13 = *(_QWORD *)(v0 + 248);
    v12 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 224);
    v18 = sub_21C3A8118();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = 0;
    v19[3] = 0;
    v19[4] = v12;
    v19[5] = v16;
    v19[6] = v17;
    v19[7] = v14;
    v19[8] = v15;
    v19[9] = v13;
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21C2DDA54(v11, (uint64_t)&unk_25525C838, (uint64_t)v19);
    swift_release();
    *(_QWORD *)(v0 + 704) = sub_21C3A8100();
    *(_QWORD *)(v0 + 712) = sub_21C3A80F4();
    sub_21C3A80D0();
  }
  return swift_task_switch();
}

uint64_t sub_21C305A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a1 + 32);
  if (a5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
    swift_allocError();
    *v7 = a5;
    v8 = a5;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = sub_21C3A7ED8();
    v12 = v11;
    v13 = sub_21C3A7ED8();
    v15 = v14;
    v16 = sub_21C3A7ED8();
    v17 = *(uint64_t **)(*(_QWORD *)(v5 + 64) + 40);
    *v17 = v10;
    v17[1] = v12;
    v17[2] = v13;
    v17[3] = v15;
    v17[4] = v16;
    v17[5] = v18;
    return swift_continuation_throwingResume();
  }
}

void sub_21C305B0C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  objc_super v36;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = MEMORY[0x24BDAC7A8](v10).n128_u64[0];
  v13 = (char *)&v36 - v12;
  v36.receiver = v3;
  v36.super_class = ObjectType;
  objc_msgSendSuper2(&v36, sel_setArticleLayout_animated_, a1, a2 & 1, v11);
  *((_BYTE *)v3 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_layoutSet) = 1;
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_currentDevice);
  v16 = objc_msgSend(v15, sel_orientation);

  if (UIDeviceOrientationIsLandscape((uint64_t)v16))
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v17 = __swift_project_value_buffer(v7, (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v17, (uint64_t)v13);
    v18 = sub_21C3A79D4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
    {
      sub_21C2D775C((uint64_t)v13, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v30 = sub_21C3A79BC();
      v31 = sub_21C3A81D8();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_21C2CD000, v30, v31, "DiscoveryArticleViewController: initial orientation is landscape", v32, 2u);
        MEMORY[0x22077AF8C](v32, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v18);
    }
    sub_21C308EC0();
  }
  else
  {
    v20 = objc_msgSend(v14, sel_currentDevice);
    v21 = (char *)objc_msgSend(v20, sel_orientation);

    if ((unint64_t)(v21 - 5) <= 1)
    {
      v22 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v23 = objc_msgSend(v22, sel_connectedScenes);

      sub_21C2D7704(0, &qword_25525C770);
      sub_21C30A36C();
      v24 = sub_21C3A8184();

      v25 = (void *)sub_21C309694(v24);
      swift_bridgeObjectRelease();
      if (v25)
      {
        objc_opt_self();
        v26 = (void *)swift_dynamicCastObjCClass();
        if (v26 && UIDeviceOrientationIsLandscape((uint64_t)objc_msgSend(v26, sel_interfaceOrientation)))
        {
          if (qword_25525AB08 != -1)
            swift_once();
          v27 = __swift_project_value_buffer(v7, (uint64_t)qword_255278FF0);
          sub_21C2D1D80(v27, (uint64_t)v9);
          v28 = sub_21C3A79D4();
          v29 = *(_QWORD *)(v28 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v9, 1, v28) == 1)
          {
            sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
          }
          else
          {
            v33 = sub_21C3A79BC();
            v34 = sub_21C3A81D8();
            if (os_log_type_enabled(v33, v34))
            {
              v35 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v35 = 0;
              _os_log_impl(&dword_21C2CD000, v33, v34, "DiscoveryArticleViewController: initial orientation is flat, but scene orientation is landscape", v35, 2u);
              MEMORY[0x22077AF8C](v35, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
          }
          sub_21C308EC0();
        }

      }
    }
  }
}

uint64_t sub_21C305F38(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;

  *(_BYTE *)(v9 + 104) = v13;
  *(double *)(v9 + 48) = a1;
  *(double *)(v9 + 56) = a2;
  *(_QWORD *)(v9 + 32) = a8;
  *(_QWORD *)(v9 + 40) = a9;
  *(_QWORD *)(v9 + 16) = a6;
  *(_QWORD *)(v9 + 24) = a7;
  v10 = *(_QWORD *)(v12 + 40);
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v9 + 72) = v10;
  return swift_task_switch();
}

uint64_t sub_21C305F70()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[2];
  v0[10] = v1[19];
  v0[11] = v1[20];
  v0[12] = v1[21];
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C305FC4()
{
  uint64_t v0;

  sub_21C30C888(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(_QWORD *)(v0 + 88), *(void **)(v0 + 96), *(unsigned __int8 *)(v0 + 104), *(double *)(v0 + 48), *(double *)(v0 + 56));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C306018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_21C306030()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 152);
  return swift_task_switch();
}

uint64_t sub_21C306050()
{
  uint64_t v0;

  sub_21C30D37C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C306080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_21C3060A0()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[2];
  v0[6] = v1[19];
  v0[7] = v1[20];
  v0[8] = v1[21];
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C3060F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char v7;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  v3 = *(void **)(v0 + 40);
  v4 = *(void **)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v7 = 3;
  sub_21C30D7D4(v4, v1, v2, v5, v3, (ProximityReader::DiscoveryAnalyticsData::EventType *)&v7);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C30614C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;

  v7[5] = a7;
  v7[6] = v9;
  v7[3] = a5;
  v7[4] = a6;
  v7[2] = a4;
  return swift_task_switch();
}

uint64_t sub_21C306174()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[2];
  v0[7] = v1[19];
  v0[8] = v1[20];
  v0[9] = v1[21];
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C3061C8()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v9;

  v1 = *(void **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  if (v2 >= 7)
    v3 = 5;
  else
    v3 = 0x5050403020100uLL >> (8 * v2);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(void **)(v0 + 72);
  v6 = *(void **)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v9 = v3;
  sub_21C30D7D4(v6, v4, v5, v7, v1, (ProximityReader::DiscoveryAnalyticsData::EventType *)&v9);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C306244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_21C306264()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[2];
  v0[6] = v1[19];
  v0[7] = v1[20];
  v0[8] = v1[21];
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C3062B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char v7;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  v3 = *(void **)(v0 + 40);
  v4 = *(void **)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v7 = 5;
  sub_21C30D7D4(v4, v1, v2, v5, v3, (ProximityReader::DiscoveryAnalyticsData::EventType *)&v7);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C306310(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = a1;
  swift_unknownObjectRetain();
  sub_21C2DDA54((uint64_t)v4, (uint64_t)&unk_25525C820, (uint64_t)v6);
  swift_release();
  return sub_21C3A8160();
}

uint64_t sub_21C3063FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 120) = a4;
  return swift_task_switch();
}

uint64_t sub_21C306414()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_21C3064A0;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_21C3064F4;
  v3[3] = &block_descriptor_43;
  v3[4] = v2;
  objc_msgSend(v1, sel_cancelRequestWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_21C3064A0()
{
  return swift_task_switch();
}

uint64_t sub_21C3064EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3064F4()
{
  return swift_continuation_resume();
}

uint64_t sub_21C3064FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE *v18;
  _QWORD v20[2];

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = a3;
  v16[7] = a4;
  v16[8] = a5;
  v16[9] = a6;
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C2DDA54((uint64_t)v14, (uint64_t)&unk_25525C898, (uint64_t)v16);
  swift_release();
  sub_21C30A72C();
  v17 = swift_allocError();
  *v18 = 5;
  v20[1] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  return sub_21C3A80DC();
}

uint64_t sub_21C306654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_21C306674()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[2];
  v0[6] = v1[19];
  v0[7] = v1[20];
  v0[8] = v1[21];
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C3066C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C306730()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = sub_21C3A8100();
  *(_QWORD *)(v0 + 128) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C30679C()
{
  uint64_t v0;
  id v1;
  void *v2;

  swift_release();
  v1 = objc_allocWithZone((Class)type metadata accessor for DiscoveryArticleViewController());
  swift_bridgeObjectRetain();
  v2 = (void *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 136) = objc_msgSend(v1, sel_initWithItemIdentifier_referrerIdentifier_, v2, 0);

  return swift_task_switch();
}

uint64_t sub_21C306838()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;

  if (*(_QWORD *)(v0 + 136))
  {
    *(_QWORD *)(v0 + 144) = sub_21C3A80F4();
    sub_21C3A80D0();
    return swift_task_switch();
  }
  else
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 112);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 104), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 112), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v6 = sub_21C3A79BC();
      v7 = sub_21C3A81C0();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_21C2CD000, v6, v7, "presentDiscoveryView - discovery view controller is not available", v8, 2u);
        MEMORY[0x22077AF8C](v8, -1, -1);
      }
      v9 = *(_QWORD *)(v0 + 112);

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21C3069E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 88);
  swift_release();
  objc_msgSend(v1, sel_setProximityReaderDelegate_, v2);
  return swift_task_switch();
}

uint64_t sub_21C306A3C()
{
  _QWORD *v0;

  v0[6] = sub_21C306B54;
  v0[7] = 0;
  v0[2] = MEMORY[0x24BDAC760];
  v0[3] = 1107296256;
  v0[4] = sub_21C3309B4;
  v0[5] = &block_descriptor_13;
  v0[19] = _Block_copy(v0 + 2);
  v0[20] = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C306AE0()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v1 = *(const void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(void **)(v0 + 64);
  swift_release();
  objc_msgSend(v3, sel_presentViewController_animated_completion_, v2, 1, v1);
  _Block_release(v1);
  v4 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_21C306B54()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AB08 != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v3, (uint64_t)v2);
  v4 = sub_21C3A79D4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    return sub_21C2D775C((uint64_t)v2, (uint64_t *)&unk_25525B0E0);
  v7 = sub_21C3A79BC();
  v8 = sub_21C3A81D8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_21C2CD000, v7, v8, "presentDiscoveryView - discovery view controller is presented", v9, 2u);
    MEMORY[0x22077AF8C](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_21C306CB8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 3)
    v8 = 0xD000000000000021;
  else
    v8 = 0xD000000000000035;
  if (a1 == 3)
    v9 = 0x800000021C3BA490;
  else
    v9 = 0x800000021C3BA430;
  if (a1 == 3)
    v10 = 0xD00000000000001FLL;
  else
    v10 = 0xD00000000000002DLL;
  if (a1 == 3)
    v11 = 0x800000021C3BA470;
  else
    v11 = 0x800000021C3BA400;
  v12 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  v13 = sub_21C30A7B4();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v2;
  v14[3] = v13;
  v14[4] = a2;
  v14[5] = v10;
  v14[6] = v11;
  v14[7] = v8;
  v14[8] = v9;
  v14[9] = v2;
  swift_retain_n();
  v15 = a2;
  sub_21C2DDA54((uint64_t)v7, (uint64_t)&unk_25525C7D0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_21C306E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[11] = a8;
  v8[12] = v10;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  v8[13] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C306E84()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = sub_21C3A8100();
  *(_QWORD *)(v0 + 128) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C306EF0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  swift_release();
  objc_msgSend(v1, sel_setIsDownloading_, 0);
  return swift_task_switch();
}

uint64_t sub_21C306F48()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_25525AAC0 != -1)
    swift_once();
  v1 = (void *)qword_255278F20;
  v2 = (void *)sub_21C3A7EB4();
  v3 = (void *)sub_21C3A7EB4();
  v4 = (void *)sub_21C3A7EB4();
  v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

  v6 = sub_21C3A7ED8();
  v8 = v7;

  v0[17] = v6;
  v0[18] = v8;
  v9 = (void *)qword_255278F20;
  v10 = (void *)sub_21C3A7EB4();
  v11 = (void *)sub_21C3A7EB4();
  v12 = (void *)sub_21C3A7EB4();
  v13 = objc_msgSend(v9, sel_localizedStringForKey_value_table_, v10, v11, v12);

  v14 = sub_21C3A7ED8();
  v16 = v15;

  v0[19] = v14;
  v0[20] = v16;
  v0[21] = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C30710C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_OWORD *)(v0 + 136);
  swift_release();
  *(_OWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v1;
  *(_BYTE *)(v0 + 48) = 1;
  objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_25525C7D8));
  *(_QWORD *)(v0 + 176) = sub_21C3A7B54();
  return swift_task_switch();
}

uint64_t sub_21C3071A4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C307204()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 176);
  swift_release();
  *(_QWORD *)(v0 + 192) = objc_msgSend(v1, sel_view);

  return swift_task_switch();
}

uint64_t sub_21C307264()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;

  if (*(_QWORD *)(v0 + 192))
  {
    *(_QWORD *)(v0 + 200) = sub_21C3A80F4();
    sub_21C3A80D0();
    return swift_task_switch();
  }
  else
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 112);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 104), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 112), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v6 = sub_21C3A79BC();
      v7 = sub_21C3A81D8();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_21C2CD000, v6, v7, "presentErrorView - unable to present the error view", v8, 2u);
        MEMORY[0x22077AF8C](v8, -1, -1);
      }
      v9 = *(_QWORD *)(v0 + 112);

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21C307408()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 192);
  v2 = *(void **)(v0 + 56);
  swift_release();
  sub_21C30B874(v1, v2);
  return swift_task_switch();
}

uint64_t sub_21C307460()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C307498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = type metadata accessor for DiscoveryErrorSheet();
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C307508()
{
  _QWORD *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (qword_25525AAC0 != -1)
    swift_once();
  v1 = (uint64_t *)v0[8];
  v22 = v0[6];
  v23 = v0[7];
  v20 = v0[3];
  v21 = v0[4];
  v2 = (void *)qword_255278F20;
  v3 = (void *)sub_21C3A7EB4();
  v4 = (void *)sub_21C3A7EB4();
  v5 = (void *)sub_21C3A7EB4();
  v6 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v3, v4, v5);

  v7 = sub_21C3A7ED8();
  v9 = v8;

  v10 = (void *)qword_255278F20;
  v11 = (void *)sub_21C3A7EB4();
  v12 = (void *)sub_21C3A7EB4();
  v13 = (void *)sub_21C3A7EB4();
  v14 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v11, v12, v13);

  v15 = sub_21C3A7ED8();
  v17 = v16;

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v20;
  *(_QWORD *)(v18 + 24) = v21;
  *(uint64_t *)((char *)v1 + *(int *)(v22 + 28)) = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  swift_storeEnumTagMultiPayload();
  *v1 = v7;
  v1[1] = v9;
  v1[2] = v15;
  v1[3] = v17;
  v1[4] = (uint64_t)sub_21C30A794;
  v1[5] = v18;
  sub_21C2ED3E0((uint64_t)v1, v23, (uint64_t (*)(_QWORD))type metadata accessor for DiscoveryErrorSheet);
  v0[9] = sub_21C3A8100();
  swift_retain();
  v0[10] = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C307790()
{
  uint64_t v0;

  swift_release();
  objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_25525C7B8));
  *(_QWORD *)(v0 + 88) = sub_21C3A7B54();
  return swift_task_switch();
}

uint64_t sub_21C3077F8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C307858()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void **)(v0 + 16);
  swift_release();
  objc_msgSend(v2, sel_presentViewController_animated_completion_, v1, 1, 0);
  return swift_task_switch();
}

uint64_t sub_21C3078C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);

  sub_21C2ED424(v1, (uint64_t (*)(_QWORD))type metadata accessor for DiscoveryErrorSheet);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C307914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v6[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C307980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  _BYTE *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_BYTE *)(v1 + 136) == 1)
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 80);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 72), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 80), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v7 = sub_21C3A79BC();
      v8 = sub_21C3A81C0();
      v9 = os_log_type_enabled(v7, v8);
      v10 = *(_QWORD *)(v0 + 40);
      if (v9)
      {
        v15 = *(_QWORD *)(v0 + 32);
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v16 = v12;
        *(_DWORD *)v11 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_21C350398(v15, v10, &v16);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v7, v8, "%s - a previous discovery request is running, returning busy", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v12, -1, -1);
        MEMORY[0x22077AF8C](v11, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 80), v4);
    }
    sub_21C30A72C();
    swift_allocError();
    *v13 = 4;
    swift_willThrow();
    v14 = *(void **)(v0 + 64);

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v1 + 136) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_21C307C18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v1 + 32) = sub_21C30C65C;
  *(_QWORD *)(v1 + 40) = 0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v2;
  *v2 = v0;
  v2[1] = sub_21C307CC0;
  return sub_21C3A8664();
}

uint64_t sub_21C307CC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C307D34()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 64);
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 136) = 0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C307D84()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C307DC4()
{
  uint64_t v0;
  void *v1;

  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 136) = 0;
  v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C307E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 104) = v11;
  *(_QWORD *)(v8 + 112) = v12;
  *(_OWORD *)(v8 + 88) = v10;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 40) = a3;
  *(_QWORD *)(v8 + 48) = a4;
  *(_QWORD *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 32) = a2;
  *(_QWORD *)(v8 + 120) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v8 + 128) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C307E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  unint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  _BYTE *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_BYTE *)(v1 + 136) == 1)
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 128);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 120), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 128), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v12 = sub_21C3A79BC();
      v13 = sub_21C3A81C0();
      v14 = os_log_type_enabled(v12, v13);
      v15 = *(_QWORD *)(v0 + 40);
      if (v14)
      {
        v21 = *(_QWORD *)(v0 + 32);
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        v22 = v17;
        *(_DWORD *)v16 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_21C350398(v21, v15, &v22);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v12, v13, "%s - a previous discovery request is running, returning busy", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v17, -1, -1);
        MEMORY[0x22077AF8C](v16, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 128), v4);
    }
    sub_21C30A72C();
    swift_allocError();
    *v18 = 4;
    swift_willThrow();
    swift_release();
    v19 = *(void **)(v0 + 72);
    v20 = *(void **)(v0 + 80);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v1 + 136) = 1;
    v6 = swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v6;
    *(_QWORD *)v6 = v0;
    *(_QWORD *)(v6 + 8) = sub_21C3081A0;
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_OWORD *)(v0 + 88);
    v9 = *(_OWORD *)(v0 + 56);
    v10 = *(_OWORD *)(v0 + 72);
    *(_QWORD *)(v6 + 64) = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v6 + 72) = v7;
    *(_OWORD *)(v6 + 32) = v10;
    *(_OWORD *)(v6 + 48) = v8;
    *(_OWORD *)(v6 + 16) = v9;
    return swift_task_switch();
  }
}

uint64_t sub_21C3081A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C308204()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 72);
  v2 = *(void **)(v0 + 80);
  v3 = *(void **)(v0 + 64);
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 136) = 0;
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C308288()
{
  uint64_t v0;
  void *v1;
  void *v2;

  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 136) = 0;
  swift_release();
  v1 = *(void **)(v0 + 72);
  v2 = *(void **)(v0 + 80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

NSObject *sub_21C30830C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(NSObject *, uint64_t, uint64_t);
  void *v12;
  id v13;
  os_log_type_t v14;
  uint8_t *v15;
  _BYTE *v16;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = ((char *)&v18 - v6);
  if (qword_25525AB08 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v8, (uint64_t)v7);
  v9 = sub_21C3A79D4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) != 1)
  {
    sub_21C365870(v1, 0xD000000000000014, 0x800000021C3BA3E0, 0, 0xE000000000000000);
    (*(void (**)(NSObject *, uint64_t))(v10 + 8))(v7, v9);
    if (!_s15ProximityReader9UtilitiesC17isDeviceSupportedSbyFZ_0())
      goto LABEL_5;
LABEL_8:
    v12 = *(void **)(v1 + 120);
    v7 = *(id *)(v1 + 112);
    v13 = v12;
    return v7;
  }
  sub_21C2D775C((uint64_t)v7, (uint64_t *)&unk_25525B0E0);
  if (_s15ProximityReader9UtilitiesC17isDeviceSupportedSbyFZ_0())
    goto LABEL_8;
LABEL_5:
  sub_21C2D1D80(v8, (uint64_t)v4);
  if (v11(v4, 1, v9) == 1)
  {
    sub_21C2D775C((uint64_t)v4, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v7 = sub_21C3A79BC();
    v14 = sub_21C3A81C0();
    if (os_log_type_enabled(v7, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_21C2CD000, v7, v14, "This device is not supported", v15, 2u);
      MEMORY[0x22077AF8C](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  }
  sub_21C30A72C();
  swift_allocError();
  *v16 = 2;
  swift_willThrow();
  return v7;
}

uint64_t sub_21C308574()
{
  uint64_t v0;

  return v0;
}

id sub_21C308580()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  objc_super v13;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, sel_setProximityReaderDelegate_, 0);
  if (qword_25525AB08 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v3, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v6, (uint64_t)v5);
  v7 = sub_21C3A79D4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v9 = sub_21C3A79BC();
    v10 = sub_21C3A81D8();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_21C2CD000, v9, v10, "DiscoveryArticleViewController deinit", v11, 2u);
      MEMORY[0x22077AF8C](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  v13.receiver = v1;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_dealloc);
}

uint64_t sub_21C308790()
{
  return type metadata accessor for DiscoveryArticleViewController();
}

uint64_t type metadata accessor for DiscoveryArticleViewController()
{
  uint64_t result;

  result = qword_25525C750;
  if (!qword_25525C750)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C3087D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7A8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C768);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = a2 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_isDismissed;
  swift_beginAccess();
  sub_21C30C54C((uint64_t)v6, v9);
  return swift_endAccess();
}

id sub_21C3088B8(int a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint8_t *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint8_t *v18;
  char *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  _BYTE v23[12];
  int v24;
  objc_class *v25;
  objc_super v26;

  v2 = v1;
  LODWORD(v3) = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C768);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_25525AB08 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v9, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v12, (uint64_t)v11);
  v13 = sub_21C3A79D4();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    sub_21C2D775C((uint64_t)v11, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v25 = ObjectType;
    v15 = sub_21C3A79BC();
    v16 = sub_21C3A81D8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v24 = (int)v3;
      v3 = v17;
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_21C2CD000, v15, v16, "DiscoveryArticleViewController: view did disappear", v17, 2u);
      v18 = v3;
      LOBYTE(v3) = v24;
      MEMORY[0x22077AF8C](v18, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v11, v13);
    ObjectType = v25;
  }
  v19 = &v2[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_isDismissed];
  swift_beginAccess();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v19, 1, v5))
  {
    (*(void (**)(_BYTE *, char *, uint64_t))(v6 + 16))(v8, v19, v5);
    sub_21C3A80E8();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
  v2[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_didDisappear] = 1;
  v20 = *(void (**)(uint64_t))&v2[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler];
  if (v20)
  {
    v21 = swift_retain();
    v20(v21);
    sub_21C2F7984((uint64_t)v20);
  }
  v26.receiver = v2;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, sel_viewDidDisappear_, v3 & 1);
}

void sub_21C308B90(uint64_t a1, double a2, double a3)
{
  void *v3;
  void *v4;
  objc_class *ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  objc_super v29;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v10 = ((uint64_t (*)(uint64_t))MEMORY[0x24BDAC7A8])(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - v13;
  v29.receiver = v4;
  v29.super_class = ObjectType;
  objc_msgSendSuper2(&v29, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  if (*((_BYTE *)v4 + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_layoutSet) == 1)
  {
    v15 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v16 = objc_msgSend(v15, sel_orientation);

    if (UIDeviceOrientationIsLandscape((uint64_t)v16))
    {
      if (qword_25525AB08 != -1)
        swift_once();
      v17 = __swift_project_value_buffer(v9, (uint64_t)qword_255278FF0);
      sub_21C2D1D80(v17, (uint64_t)v14);
      v18 = sub_21C3A79D4();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18) == 1)
      {
        sub_21C2D775C((uint64_t)v14, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v23 = sub_21C3A79BC();
        v24 = sub_21C3A81D8();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v25 = 0;
          _os_log_impl(&dword_21C2CD000, v23, v24, "DiscoveryArticleViewController: rotated to landscape", v25, 2u);
          MEMORY[0x22077AF8C](v25, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v18);
      }
      sub_21C308EC0();
    }
    else
    {
      if (qword_25525AB08 != -1)
        swift_once();
      v20 = __swift_project_value_buffer(v9, (uint64_t)qword_255278FF0);
      sub_21C2D1D80(v20, (uint64_t)v12);
      v21 = sub_21C3A79D4();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21) == 1)
      {
        sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v26 = sub_21C3A79BC();
        v27 = sub_21C3A81D8();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v28 = 0;
          _os_log_impl(&dword_21C2CD000, v26, v27, "DiscoveryArticleViewController: rotated to portrait", v28, 2u);
          MEMORY[0x22077AF8C](v28, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
      }
      sub_21C3094C4();
    }
  }
}

id sub_21C308EC0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id result;
  void *v14;
  id v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;

  v1 = type metadata accessor for DiscoveryRotatedView();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (uint64_t *)((char *)&v44 - v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v44 - v11;
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v14 = result;
  v15 = objc_msgSend(result, sel_subviews);

  sub_21C2D7704(0, &qword_25525C780);
  v16 = sub_21C3A8070();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = (char *)sub_21C3A84B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = *(char **)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v18 = v17 - 1;
  if (__OFSUB__(v17, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_33:
    v19 = (char *)MEMORY[0x22077A5D8](v18, v16);
    goto LABEL_10;
  }
  if (((unint64_t)v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if ((unint64_t)v18 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v19 = (char *)*(id *)(v16 + 8 * (_QWORD)v18 + 32);
LABEL_10:
  v17 = v19;
  swift_bridgeObjectRelease();
  if (objc_msgSend(v17, sel_tag) == (id)123456)
  {
    if (qword_25525AB08 == -1)
    {
LABEL_12:
      v20 = __swift_project_value_buffer(v7, (uint64_t)qword_255278FF0);
      sub_21C2D1D80(v20, (uint64_t)v12);
      v21 = sub_21C3A79D4();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21) == 1)
      {

        v23 = (uint64_t)v12;
        return (id)sub_21C2D775C(v23, (uint64_t *)&unk_25525B0E0);
      }
      v38 = sub_21C3A79BC();
      v39 = sub_21C3A81B4();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v40 = 0;
        _os_log_impl(&dword_21C2CD000, v38, v39, "presentRotatedView - view is already being presented", v40, 2u);
        MEMORY[0x22077AF8C](v40, -1, -1);
      }

      return (id)(*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v12, v21);
    }
LABEL_36:
    swift_once();
    goto LABEL_12;
  }

LABEL_16:
  if (qword_25525AAC0 != -1)
    swift_once();
  v24 = (void *)qword_255278F20;
  v25 = (void *)sub_21C3A7EB4();
  v26 = (void *)sub_21C3A7EB4();
  v27 = (void *)sub_21C3A7EB4();
  v28 = objc_msgSend(v24, sel_localizedStringForKey_value_table_, v25, v26, v27);

  v29 = sub_21C3A7ED8();
  v31 = v30;

  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v0;
  *(uint64_t *)((char *)v6 + *(int *)(v1 + 24)) = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  swift_storeEnumTagMultiPayload();
  *v6 = v29;
  v6[1] = v31;
  v6[2] = (uint64_t)sub_21C30A3E8;
  v6[3] = v32;
  sub_21C2ED3E0((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for DiscoveryRotatedView);
  objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_25525C790));
  v0;
  v33 = (void *)sub_21C3A7B54();
  v34 = objc_msgSend(v33, sel_view);

  if (v34)
  {
    objc_msgSend(v34, sel_setTag_, 123456);
    sub_21C309908(v34);

    return (id)sub_21C2ED424((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DiscoveryRotatedView);
  }
  if (qword_25525AB08 != -1)
    swift_once();
  v35 = __swift_project_value_buffer(v7, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v35, (uint64_t)v10);
  v36 = sub_21C3A79D4();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v10, 1, v36) == 1)
  {
    sub_21C2ED424((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DiscoveryRotatedView);
    v23 = (uint64_t)v10;
    return (id)sub_21C2D775C(v23, (uint64_t *)&unk_25525B0E0);
  }
  v41 = sub_21C3A79BC();
  v42 = sub_21C3A81D8();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_21C2CD000, v41, v42, "presentRotatedView - unable to present the view", v43, 2u);
    MEMORY[0x22077AF8C](v43, -1, -1);
  }

  sub_21C2ED424((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DiscoveryRotatedView);
  return (id)(*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v10, v36);
}

void sub_21C3094C4()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  id v8;

  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
    goto LABEL_18;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_subviews);

  sub_21C2D7704(0, &qword_25525C780);
  v4 = sub_21C3A8070();

  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v5 = sub_21C3A84B4();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_13;
LABEL_4:
  v6 = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v7 = (id)MEMORY[0x22077A5D8](v6, v4);
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v6 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  v7 = *(id *)(v4 + 8 * v6 + 32);
LABEL_9:
  v8 = v7;
  swift_bridgeObjectRelease();
  if (objc_msgSend(v8, sel_tag) == (id)123456)
    objc_msgSend(v8, sel_removeFromSuperview);

}

uint64_t sub_21C309694(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_21C3A8364();
    v5 = v4;
    v6 = sub_21C3A83A0();
    v8 = MEMORY[0x22077A554](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_21C30A698(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_21C30A430(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_21C30A698(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_21C30A6A4(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_21C3097FC(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v5[6];

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  v5[4] = sub_21C30A410;
  v5[5] = v2;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_21C3309B4;
  v5[3] = &block_descriptor_0;
  v3 = _Block_copy(v5);
  v4 = a1;
  swift_release();
  objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, v3);
  _Block_release(v3);
}

uint64_t sub_21C3098B8(uint64_t result)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(result
                                      + OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler);
  if (v1)
  {
    v2 = swift_retain();
    v1(v2);
    return sub_21C2F7984((uint64_t)v1);
  }
  return result;
}

void sub_21C309908(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;

  v2 = v1;
  objc_msgSend(a1, sel_setAccessibilityViewIsModal_, 1);
  v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = v4;
  objc_msgSend(v4, sel_addSubview_, a1);

  objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C798);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21C3AD880;
  v7 = objc_msgSend(a1, sel_centerXAnchor);
  v8 = objc_msgSend(v2, sel_view);
  if (!v8)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_centerXAnchor);

  v11 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v10);
  *(_QWORD *)(v6 + 32) = v11;
  v12 = objc_msgSend(a1, sel_centerYAnchor);
  v13 = objc_msgSend(v2, sel_view);
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, sel_centerYAnchor);

  v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);
  *(_QWORD *)(v6 + 40) = v16;
  v17 = objc_msgSend(a1, sel_widthAnchor);
  v18 = objc_msgSend(v2, sel_view);
  if (!v18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, sel_widthAnchor);

  v21 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v20);
  *(_QWORD *)(v6 + 48) = v21;
  v22 = objc_msgSend(a1, sel_heightAnchor);
  v23 = objc_msgSend(v2, sel_view);
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v24 = v23;
  v25 = (void *)objc_opt_self();
  v26 = objc_msgSend(v24, sel_heightAnchor);

  v27 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v26);
  *(_QWORD *)(v6 + 56) = v27;
  sub_21C3A8088();
  sub_21C2D7704(0, &qword_25525C7A0);
  v28 = (void *)sub_21C3A8064();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_activateConstraints_, v28);

  v29 = objc_msgSend(v2, sel_view);
  if (!v29)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v30 = v29;
  v31 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v30, sel__setBackgroundColor_, v31);

  v32 = objc_msgSend(v2, sel_view);
  if (v32)
  {
    v33 = v32;
    objc_msgSend(v32, sel_layoutIfNeeded);

    return;
  }
LABEL_15:
  __break(1u);
}

id sub_21C309CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  id v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  v4[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_didDisappear] = 0;
  v4[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_layoutSet] = 0;
  v8 = &v4[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_isDismissed];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C768);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = &v4[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler];
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_rotatedViewTag] = 123456;
  if (a2)
  {
    v11 = (void *)sub_21C3A7EB4();
    swift_bridgeObjectRelease();
    if (a4)
    {
LABEL_3:
      v12 = (void *)sub_21C3A7EB4();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    v11 = 0;
    if (a4)
      goto LABEL_3;
  }
  v12 = 0;
LABEL_6:
  v15.receiver = v4;
  v15.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v15, sel_initWithItemIdentifier_referrerIdentifier_, v11, v12);

  if (v13)
  return v13;
}

id sub_21C309E80(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  _BYTE *v4;
  _BYTE *v5;
  objc_class *ObjectType;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  objc_super v17;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v5[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_didDisappear] = 0;
  v5[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_layoutSet] = 0;
  v10 = &v5[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_isDismissed];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C768);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = &v5[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler];
  *v12 = 0;
  v12[1] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_rotatedViewTag] = 123456;
  if (a3)
  {
    v13 = (void *)sub_21C3A7EB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v17.receiver = v5;
  v17.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v17, sel_initWithArticleLayout_referrerIdentifier_cardTemplateInformation_, a1, v13, a4);

  v15 = v14;
  if (v15)

  return v15;
}

id sub_21C30A020(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  objc_class *ObjectType;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v3[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_didDisappear] = 0;
  v3[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_layoutSet] = 0;
  v7 = &v3[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_isDismissed];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C768);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = &v3[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler];
  *v9 = 0;
  v9[1] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_rotatedViewTag] = 123456;
  if (a2)
  {
    v10 = (void *)sub_21C3A7EB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v3;
  v13.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, v10, a3);

  return v11;
}

id sub_21C30A184(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_didDisappear] = 0;
  v1[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_layoutSet] = 0;
  v4 = &v1[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_isDismissed];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C768);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &v1[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_disappearHandler];
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ProximityReader30DiscoveryArticleViewController_rotatedViewTag] = 123456;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  return v7;
}

void sub_21C30A274()
{
  unint64_t v0;

  sub_21C30A304();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_21C30A304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25525C760)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525C768);
    v0 = sub_21C3A82EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25525C760);
  }
}

BOOL UIDeviceOrientationIsLandscape(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

unint64_t sub_21C30A36C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525C778;
  if (!qword_25525C778)
  {
    v1 = sub_21C2D7704(255, &qword_25525C770);
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25525C778);
  }
  return result;
}

uint64_t sub_21C30A3C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21C30A3E8()
{
  uint64_t v0;

  sub_21C3097FC(*(void **)(v0 + 16));
}

uint64_t sub_21C30A3F0()
{
  return sub_21C3A7B00();
}

uint64_t sub_21C30A410()
{
  uint64_t v0;

  return sub_21C3098B8(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void sub_21C30A430(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_21C3A837C() == *(_DWORD *)(a4 + 36))
      {
        sub_21C3A8388();
        sub_21C2D7704(0, &qword_25525C770);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_21C3A828C();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_21C3A8298();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_21C3A8298();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x22077A578](a1, a2, v7);
  sub_21C2D7704(0, &qword_25525C770);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_21C30A698(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_21C30A6A4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_21C30A72C()
{
  unint64_t result;

  result = qword_25525C7B0;
  if (!qword_25525C7B0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ProximityReaderDiscovery.ContentError, &type metadata for ProximityReaderDiscovery.ContentError);
    atomic_store(result, (unint64_t *)&qword_25525C7B0);
  }
  return result;
}

uint64_t sub_21C30A770()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C30A794()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_21C30A7B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525C7C8;
  if (!qword_25525C7C8)
  {
    v1 = type metadata accessor for ProximityReaderDiscoveryActor();
    result = MEMORY[0x22077AECC](&unk_21C3AD790, v1);
    atomic_store(result, (unint64_t *)&qword_25525C7C8);
  }
  return result;
}

uint64_t sub_21C30A7F8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C30A83C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_21C2DFEDC;
  return sub_21C306E18(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_21C30A8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v5[9] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C30A948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_BYTE *)(v1 + 136) == 1)
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 80);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 72), (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 80), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v7 = sub_21C3A79BC();
      v8 = sub_21C3A81C0();
      v9 = os_log_type_enabled(v7, v8);
      v10 = *(_QWORD *)(v0 + 40);
      if (v9)
      {
        v14 = *(_QWORD *)(v0 + 32);
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v15 = v12;
        *(_DWORD *)v11 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 24) = sub_21C350398(v14, v10, &v15);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v7, v8, "%s - a previous discovery request is running, returning busy", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v12, -1, -1);
        MEMORY[0x22077AF8C](v11, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 80), v4);
    }
    sub_21C30A72C();
    swift_allocError();
    *v13 = 4;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v1 + 136) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_21C30ABD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v1 + 32) = sub_21C301E88;
  *(_QWORD *)(v1 + 40) = 0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C8C8);
  *v2 = v0;
  v2[1] = sub_21C30AC90;
  return sub_21C3A8664();
}

uint64_t sub_21C30AC90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    *(_QWORD *)(v2 + 112) = *(_QWORD *)(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_21C30AD0C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 136) = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 112));
}

uint64_t sub_21C30AD4C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C30AD8C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 136) = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_21C30ADC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  _QWORD *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  unint64_t v72;
  void *v73;
  uint8_t *v74;
  _QWORD *v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  _QWORD *v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint8_t *v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98[5];

  v89 = a3;
  v90 = a4;
  v98[4] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v87 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v92 = (uint64_t)&v87 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v91 = (uint8_t *)&v87 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_21C3A76C8();
  v18 = *(_QWORD *)(v17 - 8);
  v95 = v17;
  v96 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v87 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v94 = (char *)&v87 - v25;
  v26 = objc_allocWithZone(MEMORY[0x24BDD1488]);
  swift_bridgeObjectRetain();
  v27 = (void *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v26, sel_initWithPath_, v27);

  if (v28)
  {
    v29 = (void *)sub_21C3A7EB4();
    v30 = (void *)sub_21C3A7EB4();
    v31 = objc_msgSend(v28, sel_URLForResource_withExtension_, v29, v30);

    if (v31)
    {
      sub_21C3A7698();

      v33 = v95;
      v32 = v96;
      v34 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
      v34(v16, v23, v95);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v16, 0, 1, v33);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v16, 1, v33) != 1)
      {
        v34(v94, v16, v33);
        v35 = v93;
        v36 = sub_21C3A76EC();
        if (v35)
        {

          if (qword_25525AB08 != -1)
            swift_once();
          v38 = __swift_project_value_buffer(v4, (uint64_t)qword_255278FF0);
          v39 = v92;
          sub_21C2D1D80(v38, v92);
          v40 = (_QWORD *)sub_21C3A79D4();
          v41 = *(v40 - 1);
          if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v41 + 48))(v39, 1, v40) == 1)
          {
            sub_21C2D775C(v39, (uint64_t *)&unk_25525B0E0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v20, v94, v33);
            v66 = sub_21C3A79BC();
            v67 = sub_21C3A81C0();
            if (os_log_type_enabled(v66, v67))
            {
              v68 = (uint8_t *)swift_slowAlloc();
              v69 = (void *)swift_slowAlloc();
              v93 = v28;
              v70 = v69;
              v98[0] = v69;
              *(_DWORD *)v68 = 136315138;
              v91 = v68 + 4;
              v71 = sub_21C3A7644();
              v97 = sub_21C350398(v71, v72, (uint64_t *)v98);
              v33 = v95;
              sub_21C3A82F8();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v96 + 8))(v20, v33);
              _os_log_impl(&dword_21C2CD000, v66, v67, "articleLayout - no layout content in %s", v68, 0xCu);
              swift_arrayDestroy();
              v73 = v70;
              v28 = v93;
              MEMORY[0x22077AF8C](v73, -1, -1);
              v74 = v68;
              v32 = v96;
              MEMORY[0x22077AF8C](v74, -1, -1);

            }
            else
            {

              (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v33);
            }
            (*(void (**)(uint64_t, _QWORD *))(v41 + 8))(v92, v40);
          }
          sub_21C30C508();
          swift_allocError();
          *v75 = 1;
          swift_willThrow();
LABEL_44:

          (*(void (**)(char *, uint64_t))(v32 + 8))(v94, v33);
          return v40;
        }
        v54 = v36;
        v55 = v37;
        v56 = (void *)objc_opt_self();
        v93 = (id)v55;
        v57 = (void *)sub_21C3A7728();
        v98[0] = 0;
        v58 = objc_msgSend(v56, sel_JSONObjectWithData_options_error_, v57, 0, v98);

        if (v58)
        {
          v59 = v98[0];
          sub_21C3A8340();
          swift_unknownObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_25525C888);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v60 = objc_allocWithZone(MEMORY[0x24BE6EAD0]);
            v61 = v54;
            v62 = (void *)sub_21C3A7E30();
            swift_bridgeObjectRelease();
            v63 = v60;
            v32 = v96;
            v40 = objc_msgSend(v63, sel_initWithDictionary_, v62);

            v54 = v61;
            if (v40)
            {
              v64 = (void *)sub_21C3A7EB4();
              objc_msgSend(v40, sel_setItemIdentifier_, v64);

              v65 = v28;
              objc_msgSend(v40, sel_localizeWithBundle_, v65);
              sub_21C2D2B48(v61, (unint64_t)v93);

              (*(void (**)(char *, uint64_t))(v32 + 8))(v94, v33);
              return v40;
            }
          }
        }
        else
        {
          v76 = v98[0];
          v77 = (void *)sub_21C3A75FC();

          swift_willThrow();
        }
        v88 = v54;
        if (qword_25525AB08 != -1)
          swift_once();
        v78 = __swift_project_value_buffer(v4, (uint64_t)qword_255278FF0);
        v79 = (uint64_t)v91;
        sub_21C2D1D80(v78, (uint64_t)v91);
        v80 = sub_21C3A79D4();
        v81 = *(_QWORD *)(v80 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80) == 1)
        {
          sub_21C2D775C(v79, (uint64_t *)&unk_25525B0E0);
        }
        else
        {
          v82 = sub_21C3A79BC();
          v83 = sub_21C3A81C0();
          if (os_log_type_enabled(v82, v83))
          {
            v84 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v84 = 0;
            _os_log_impl(&dword_21C2CD000, v82, v83, "articleLayout - invalid layout content", v84, 2u);
            MEMORY[0x22077AF8C](v84, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v80);
          v32 = v96;
        }
        v40 = v93;
        sub_21C30C508();
        swift_allocError();
        *v85 = 1;
        swift_willThrow();
        sub_21C2D2B48(v88, (unint64_t)v40);
        goto LABEL_44;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v16, 1, 1, v95);
    }
    sub_21C2D775C((uint64_t)v16, &qword_25525C138);
    if (qword_25525AB08 != -1)
      swift_once();
    v44 = __swift_project_value_buffer(v4, (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v44, (uint64_t)v9);
    v40 = (_QWORD *)sub_21C3A79D4();
    v45 = *(v40 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v45 + 48))(v9, 1, v40) == 1)
    {
      sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v46 = sub_21C3A79BC();
      v47 = sub_21C3A81C0();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_21C2CD000, v46, v47, "articleLayout - no layout present", v48, 2u);
        MEMORY[0x22077AF8C](v48, -1, -1);
      }

      (*(void (**)(char *, _QWORD *))(v45 + 8))(v9, v40);
    }
    sub_21C30C508();
    swift_allocError();
    *v49 = 1;
    swift_willThrow();

  }
  else
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v42 = __swift_project_value_buffer(v4, (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v42, (uint64_t)v6);
    v40 = (_QWORD *)sub_21C3A79D4();
    v43 = *(v40 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v43 + 48))(v6, 1, v40) == 1)
    {
      sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v50 = sub_21C3A79BC();
      v51 = sub_21C3A81C0();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v52 = 0;
        _os_log_impl(&dword_21C2CD000, v50, v51, "articleLayout - invalid path", v52, 2u);
        MEMORY[0x22077AF8C](v52, -1, -1);
      }

      (*(void (**)(char *, _QWORD *))(v43 + 8))(v6, v40);
    }
    sub_21C30C508();
    swift_allocError();
    *v53 = 1;
    swift_willThrow();
  }
  return v40;
}

void sub_21C30B874(void *a1, id a2)
{
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;

  v4 = objc_msgSend(a2, sel_view);
  if (!v4)
    goto LABEL_21;
  v5 = v4;
  v6 = objc_msgSend(v4, sel_subviews);

  sub_21C2D7704(0, &qword_25525C780);
  v7 = sub_21C3A8070();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_21C3A84B4();
    swift_bridgeObjectRelease();
    if (!v8)
      goto LABEL_13;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
      goto LABEL_13;
  }
  if (v8 < 1)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v10 = (id)MEMORY[0x22077A5D8](i, v7);
    else
      v10 = *(id *)(v7 + 8 * i + 32);
    v11 = v10;
    objc_opt_self();
    if (!swift_dynamicCastObjCClass())
      objc_msgSend(v11, sel_removeFromSuperview);

  }
LABEL_13:
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(a2, sel_view);
  if (!v12)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v13 = v12;
  objc_msgSend(v12, sel_addSubview_, a1);

  objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C798);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_21C3AD890;
  v15 = objc_msgSend(a1, sel_centerXAnchor);
  v16 = objc_msgSend(a2, sel_view);
  if (!v16)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_centerXAnchor);

  v19 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v18);
  *(_QWORD *)(v14 + 32) = v19;
  v20 = objc_msgSend(a1, sel_centerYAnchor);
  v21 = objc_msgSend(a2, sel_view);
  if (!v21)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, sel_centerYAnchor);

  v24 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v23);
  *(_QWORD *)(v14 + 40) = v24;
  v25 = objc_msgSend(a1, sel_widthAnchor);
  v26 = objc_msgSend(a2, sel_view);
  if (!v26)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v27 = v26;
  v28 = (void *)objc_opt_self();
  v29 = objc_msgSend(v27, sel_widthAnchor);

  v30 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v29);
  *(_QWORD *)(v14 + 48) = v30;
  sub_21C3A8088();
  sub_21C2D7704(0, &qword_25525C7A0);
  v31 = (void *)sub_21C3A8064();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_activateConstraints_, v31);

  v32 = objc_msgSend(a2, sel_view);
  if (!v32)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v33 = v32;
  v34 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v33, sel__setBackgroundColor_, v34);

  v35 = objc_msgSend(a2, sel_view);
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, sel_layoutIfNeeded);

    return;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_21C30BCD0()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C30BD0C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21C302F40(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_21C30BD1C(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B1DC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C30BD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21C30BDC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v3 = v1[3];
  v11 = v1[2];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_21C2DFEDC;
  return sub_21C3030DC(a1, v11, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_21C30BE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21C30BF24()
{
  uint64_t *v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  return sub_21C3064FC(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_21C30BF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21C30C000(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v3 = v1[3];
  v11 = v1[2];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_21C2DFEDC;
  return sub_21C303730(a1, v11, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_21C30C0CC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C30C0F8()
{
  uint64_t v0;

  return sub_21C306310(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21C30C100()
{
  return objectdestroy_40Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_21C30C10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21C2DFEDC;
  v3[15] = v2;
  return swift_task_switch();
}

uint64_t sub_21C30C16C()
{
  return objectdestroy_46Tm();
}

uint64_t sub_21C30C174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_21C2DFEDC;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v5;
  return swift_task_switch();
}

uint64_t sub_21C30C1E4(uint64_t a1)
{
  uint64_t v1;

  return sub_21C3087D4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_21C30C1EC()
{
  return objectdestroy_46Tm();
}

uint64_t sub_21C30C1F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_21C2DFEDC;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v6;
  return swift_task_switch();
}

uint64_t sub_21C30C270()
{
  return objectdestroy_46Tm();
}

uint64_t sub_21C30C278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_21C2DFEDC;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v5;
  return swift_task_switch();
}

double PKUIScreenTypeGetSize(unint64_t a1)
{
  char *v1;

  v1 = (char *)&unk_21C3AD7E8 + 8 * a1;
  if (a1 >= 0x12)
    v1 = (char *)(MEMORY[0x24BDBF148] + 8);
  return *(double *)v1;
}

uint64_t sub_21C30C310()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C30C36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v12 = *(_OWORD *)(v0 + 96);
  v13 = *(_OWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 16) = v13;
  *(_OWORD *)(v1 + 32) = v12;
  *(_QWORD *)(v1 + 48) = v4;
  *(_QWORD *)(v1 + 56) = v5;
  v8 = *(_BYTE *)(v0 + 144);
  v9 = *(_OWORD *)(v0 + 128);
  *(_QWORD *)(v1 + 64) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_21C30C41C;
  *(_BYTE *)(v6 + 104) = v8;
  *(_OWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v3;
  *(_OWORD *)(v6 + 16) = v7;
  v10 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v6 + 64) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v6 + 72) = v10;
  return swift_task_switch();
}

uint64_t sub_21C30C41C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C30C464()
{
  return objectdestroy_40Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_40Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_unknownObjectRelease();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_21C30C4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21C2DFEDC;
  v3[2] = v2;
  return swift_task_switch();
}

unint64_t sub_21C30C508()
{
  unint64_t result;

  result = qword_25525C880;
  if (!qword_25525C880)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for DiscoveryErrorInternal, &type metadata for DiscoveryErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525C880);
  }
  return result;
}

uint64_t sub_21C30C54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C30C594()
{
  return objectdestroy_46Tm();
}

uint64_t objectdestroy_46Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C30C5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_21C2DFEDC;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v5;
  return swift_task_switch();
}

uint64_t sub_21C30C660(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B1A4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C30C66C()
{
  return objectdestroy_80Tm(&qword_25525C8A8);
}

uint64_t sub_21C30C678(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C8A8) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_21C2DFEDC;
  return sub_21C301150(a1, v5, v6, v7, v8);
}

uint64_t sub_21C30C710(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21C30C74C(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B1C0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C30C758()
{
  return objectdestroy_80Tm(&qword_25525C8D0);
}

uint64_t objectdestroy_80Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_21C30C7DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C8D0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_21C2D8DB8;
  return sub_21C301FD4(a1, v5, v6, v7, v8);
}

uint64_t sub_21C30C888(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, double a9, double a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  Swift::String contentRegion;
  Swift::String_optional contentScrollQuantile;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  ProximityReader::DiscoveryAnalyticsData v77;
  ProximityReader::DiscoveryAnalyticsData v78;
  char v79;
  ProximityReader::DiscoveryAnalyticsData v80;

  v11 = v10;
  v72 = a5;
  v73 = a8;
  v71 = a7;
  v75 = a6;
  v76 = a4;
  v74 = a2;
  v16 = sub_21C3A77E8();
  v69 = *(_QWORD *)(v16 - 8);
  v70 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v57 - v23;
  if (qword_25525AB08 != -1)
    swift_once();
  v59 = __swift_project_value_buffer(v19, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v59, (uint64_t)v24);
  v25 = sub_21C3A79D4();
  v26 = *(_QWORD *)(v25 - 8);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v27 = v58(v24, 1, v25);
  v62 = v22;
  v60 = v25;
  v57 = v26;
  if (v27 == 1)
  {
    sub_21C2D1DC8((uint64_t)v24);
  }
  else
  {
    sub_21C365870(v11, 0xD000000000000071, 0x800000021C3BA6D0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
  }
  *(_QWORD *)(v11 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_discoveryService) = a1;
  v61 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A77DC();
  v28 = sub_21C3A77C4();
  v29 = v11;
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v18, v70);
  v32 = v73;
  v33 = v29 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData;
  v34 = *(_QWORD *)(v29 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData);
  v68 = *(_QWORD *)(v29 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData + 8);
  v69 = v34;
  v35 = *(_QWORD *)(v29 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData + 16);
  v66 = *(_QWORD *)(v29 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData + 24);
  v67 = v35;
  v36 = *(_QWORD *)(v29 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData + 32);
  v64 = *(_QWORD *)(v29 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData + 40);
  v65 = v36;
  v63 = *(_QWORD *)(v29 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData + 48);
  *(_QWORD *)v33 = v74;
  *(_QWORD *)(v33 + 8) = a3;
  v70 = v28;
  *(_QWORD *)(v33 + 16) = v28;
  *(_QWORD *)(v33 + 24) = v31;
  v38 = v71;
  v37 = v72;
  *(_QWORD *)(v33 + 32) = v76;
  *(_QWORD *)(v33 + 40) = v37;
  *(_QWORD *)(v33 + 48) = v75;
  *(_QWORD *)(v33 + 56) = v38;
  *(_QWORD *)(v33 + 64) = v32 & 1;
  *(double *)(v33 + 72) = a9;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C30E154(v69, v68);
  v39 = sub_21C30E270(a10, a9);
  *(_QWORD *)(v29 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_lastQuantile) = v39;
  v79 = 0;
  if ((v32 & 1) != 0)
  {
    *(_QWORD *)&v80.eventType = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = sub_21C3A8628();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = (void *)0xE400000000000000;
    v41 = 1819047278;
  }
  contentScrollQuantile.value._countAndFlagsBits = v41;
  contentScrollQuantile.value._object = v40;
  contentRegion._object = v38;
  contentRegion._countAndFlagsBits = v75;
  v42._countAndFlagsBits = v74;
  v42._object = a3;
  v43._countAndFlagsBits = v70;
  v43._object = v31;
  v44._countAndFlagsBits = v76;
  v44._object = v37;
  DiscoveryAnalyticsData.init(eventType:appIdPresence:contentId:contentSessionId:contentVersion:contentRegion:contentScrollable:contentScrollQuantile:errorType:)(&v80, (ProximityReader::DiscoveryAnalyticsData::EventType)&v79, 1, v42, v43, v44, contentRegion, (Swift::Bool_optional)(v73 & 1), contentScrollQuantile, (Swift::String_optional)0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v78 = v80;
  v77 = v80;
  v45 = DiscoveryAnalyticsData.encode()();
  v47 = v46;
  sub_21C30E1E8((uint64_t)&v78);
  if (v47 >> 60 == 15)
  {
    v48 = (uint64_t)v62;
    sub_21C2D1D80(v59, (uint64_t)v62);
    v49 = v60;
    if (v58((char *)v48, 1, v60) == 1)
    {
      return sub_21C2D1DC8(v48);
    }
    else
    {
      v52 = sub_21C3A79BC();
      v53 = sub_21C3A81C0();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v54 = 0;
        _os_log_impl(&dword_21C2CD000, v52, v53, "Discovery analytics present event could not be encoded", v54, 2u);
        MEMORY[0x22077AF8C](v54, -1, -1);
      }

      return (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))(v48, v49);
    }
  }
  else
  {
    v51 = (void *)sub_21C3A7728();
    objc_msgSend(v61, sel_sendAnalyticsWithAnalyticsData_, v51);

    return sub_21C2D2B34(v45, v47);
  }
}

uint64_t sub_21C30CDB8(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double *v11;
  void *v12;
  double v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  Swift::String contentRegion;
  Swift::String_optional contentScrollQuantile;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char *v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  ProximityReader::DiscoveryAnalyticsData v69;
  ProximityReader::DiscoveryAnalyticsData v70;
  ProximityReader::DiscoveryAnalyticsData v71;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v55 - v9;
  v11 = (double *)(v1 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData + 8);
  if (v12)
  {
    v13 = *v11;
    v14 = *((_QWORD *)v11 + 2);
    v15 = (void *)*((_QWORD *)v11 + 3);
    v16 = (void *)*((_QWORD *)v11 + 5);
    v66 = *((_QWORD *)v11 + 4);
    v67 = v14;
    v17 = *((_QWORD *)v11 + 6);
    v18 = (void *)*((_QWORD *)v11 + 7);
    v64 = *(_QWORD *)&v13;
    v65 = v17;
    v20 = *((_QWORD *)v11 + 8);
    v19 = v11[9];
    v63 = v20;
    v21 = v20 & 1;
    v61 = (char *)v8;
    v62 = v19;
    result = sub_21C30E270(a1, v19);
    v68 = v1;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_lastQuantile) != result
      && v21 != 0)
    {
      v24 = result;
      v59 = OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_lastQuantile;
      v25 = qword_25525AB08;
      swift_bridgeObjectRetain();
      v60 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25 != -1)
        swift_once();
      v57 = __swift_project_value_buffer(v3, (uint64_t)qword_255278FF0);
      sub_21C2D1D80(v57, (uint64_t)v10);
      v26 = sub_21C3A79D4();
      v27 = *(_QWORD *)(v26 - 8);
      v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
      v28 = v56(v10, 1, v26);
      v58 = v27;
      if (v28 == 1)
      {
        sub_21C2D1DC8((uint64_t)v10);
      }
      else
      {
        v55 = v26;
        v35 = sub_21C3A79BC();
        v36 = sub_21C3A81D8();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v37 = 0;
          _os_log_impl(&dword_21C2CD000, v35, v36, "sendContentScrolled - quantile triggered", v37, 2u);
          MEMORY[0x22077AF8C](v37, -1, -1);
        }

        v26 = v55;
        (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v55);
      }
      *(_QWORD *)(v68 + v59) = v24;
      v69.eventType = ProximityReader_DiscoveryAnalyticsData_EventType_contentScrolled;
      *(_QWORD *)&v70.eventType = v24;
      swift_bridgeObjectRetain();
      v38 = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      contentScrollQuantile.value._countAndFlagsBits = sub_21C3A8628();
      contentScrollQuantile.value._object = v39;
      contentRegion._object = v18;
      contentRegion._countAndFlagsBits = v65;
      v40 = v64;
      v41._countAndFlagsBits = v64;
      v41._object = v12;
      v42._countAndFlagsBits = v67;
      v42._object = v38;
      v43._countAndFlagsBits = v66;
      v43._object = v16;
      DiscoveryAnalyticsData.init(eventType:appIdPresence:contentId:contentSessionId:contentVersion:contentRegion:contentScrollable:contentScrollQuantile:errorType:)(&v70, (ProximityReader::DiscoveryAnalyticsData::EventType)&v69, 0, v41, v42, v43, contentRegion, (Swift::Bool_optional)2, contentScrollQuantile, (Swift::String_optional)0);
      sub_21C30E154(v40, (uint64_t)v12);
      v71 = v70;
      v69 = v70;
      v44 = DiscoveryAnalyticsData.encode()();
      v46 = v45;
      sub_21C30E1E8((uint64_t)&v71);
      if (v46 >> 60 == 15)
      {
        v5 = v61;
        sub_21C2D1D80(v57, (uint64_t)v61);
        if (v56(v5, 1, v26) == 1)
          return sub_21C2D1DC8((uint64_t)v5);
        v49 = v58;
        v50 = sub_21C3A79BC();
        v51 = sub_21C3A81C0();
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v52 = 0;
          _os_log_impl(&dword_21C2CD000, v50, v51, "Discovery analytics scroll event could not be encoded", v52, 2u);
          MEMORY[0x22077AF8C](v52, -1, -1);
        }

        return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v5, v26);
      }
      else
      {
        v47 = *(void **)(v68
                       + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_discoveryService);
        if (v47)
        {
          swift_unknownObjectRetain();
          v48 = (void *)sub_21C3A7728();
          objc_msgSend(v47, sel_sendAnalyticsWithAnalyticsData_, v48);
          sub_21C2D2B34(v44, v46);

          return swift_unknownObjectRelease();
        }
        else
        {
          return sub_21C2D2B34(v44, v46);
        }
      }
    }
  }
  else
  {
    if (qword_25525AB08 != -1)
      swift_once();
    v29 = __swift_project_value_buffer(v3, (uint64_t)qword_255278FF0);
    sub_21C2D1D80(v29, (uint64_t)v5);
    v30 = sub_21C3A79D4();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v5, 1, v30) == 1)
      return sub_21C2D1DC8((uint64_t)v5);
    v32 = sub_21C3A79BC();
    v33 = sub_21C3A81C0();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_21C2CD000, v32, v33, "sendContentScrolled - session data was not found", v34, 2u);
      MEMORY[0x22077AF8C](v34, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v5, v30);
  }
  return result;
}

uint64_t sub_21C30D37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  void *v35;
  void *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  Swift::String contentRegion;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  ProximityReader::DiscoveryAnalyticsData v50;
  ProximityReader::DiscoveryAnalyticsData v51;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v44 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v44 - v9;
  if (qword_25525AB08 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v2, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v11, (uint64_t)v10);
  v12 = sub_21C3A79D4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_21C2D1DC8((uint64_t)v10);
  }
  else
  {
    sub_21C365870(v1, 0xD000000000000016, 0x800000021C3BA6B0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  v15 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData);
  v16 = *(void **)(v1 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData + 8);
  if (v16)
  {
    v44 = v11;
    v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v14;
    v46 = v8;
    v47 = v13;
    v48 = v12;
    v49 = v1;
    v17 = v15[6];
    v18 = (void *)v15[7];
    v20 = v15[4];
    v19 = (void *)v15[5];
    v21 = v15[2];
    v22 = (void *)v15[3];
    v23 = *v15;
    v50.eventType = ProximityReader_DiscoveryAnalyticsData_EventType_contentDismissed;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    contentRegion._countAndFlagsBits = v17;
    contentRegion._object = v18;
    v24._countAndFlagsBits = v23;
    v24._object = v16;
    v25._countAndFlagsBits = v21;
    v25._object = v22;
    v26._countAndFlagsBits = v20;
    v26._object = v19;
    DiscoveryAnalyticsData.init(eventType:appIdPresence:contentId:contentSessionId:contentVersion:contentRegion:contentScrollable:contentScrollQuantile:errorType:)(&v51, (ProximityReader::DiscoveryAnalyticsData::EventType)&v50, 0, v24, v25, v26, contentRegion, (Swift::Bool_optional)2, (Swift::String_optional)0, (Swift::String_optional)0);
    v50 = v51;
    v27 = DiscoveryAnalyticsData.encode()();
    v29 = v28;
    sub_21C30E1E8((uint64_t)&v51);
    if (v29 >> 60 == 15)
    {
      v30 = (uint64_t)v46;
      sub_21C2D1D80(v44, (uint64_t)v46);
      v31 = v48;
      v32 = v45(v30, 1, v48);
      v33 = v47;
      if (v32 == 1)
      {
        sub_21C2D1DC8(v30);
      }
      else
      {
        v40 = sub_21C3A79BC();
        v41 = sub_21C3A81C0();
        if (os_log_type_enabled(v40, v41))
        {
          v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v42 = 0;
          _os_log_impl(&dword_21C2CD000, v40, v41, "Discovery analytics dismiss event could not be encoded", v42, 2u);
          MEMORY[0x22077AF8C](v42, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v30, v31);
      }
    }
    else
    {
      v35 = *(void **)(v49 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_discoveryService);
      if (v35)
      {
        swift_unknownObjectRetain();
        v36 = (void *)sub_21C3A7728();
        objc_msgSend(v35, sel_sendAnalyticsWithAnalyticsData_, v36);
        sub_21C2D2B34(v27, v29);

        swift_unknownObjectRelease();
      }
      else
      {
        sub_21C2D2B34(v27, v29);
      }
    }
    return sub_21C30DC20();
  }
  else
  {
    sub_21C2D1D80(v11, (uint64_t)v5);
    if (v14(v5, 1, v12) == 1)
    {
      return sub_21C2D1DC8((uint64_t)v5);
    }
    else
    {
      v37 = sub_21C3A79BC();
      v38 = sub_21C3A81C0();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v39 = 0;
        _os_log_impl(&dword_21C2CD000, v37, v38, "sendContentDismissed - session data was not found", v39, 2u);
        MEMORY[0x22077AF8C](v39, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v5, v12);
    }
  }
}

uint64_t sub_21C30D7D4(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, ProximityReader::DiscoveryAnalyticsData::EventType *a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  ProximityReader::DiscoveryAnalyticsData::EventType v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  Swift::String contentRegion;
  Swift::String_optional contentScrollQuantile;
  Swift::String_optional errorType;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  ProximityReader::DiscoveryAnalyticsData v56;
  ProximityReader::DiscoveryAnalyticsData v57;
  char v58;

  v53 = a4;
  v54 = a5;
  v51 = a2;
  v52 = a3;
  v49 = a1;
  v8 = sub_21C3A77E8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v50 = (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v46 - v15;
  v17 = *a6;
  if (qword_25525AB08 != -1)
    swift_once();
  v48 = __swift_project_value_buffer(v12, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v48, (uint64_t)v16);
  v18 = sub_21C3A79D4();
  v19 = *(_QWORD *)(v18 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v20 = v47(v16, 1, v18);
  v55 = v6;
  v46 = v19;
  if (v20 == 1)
  {
    sub_21C2D1DC8((uint64_t)v16);
  }
  else
  {
    sub_21C365870(v6, 0xD000000000000033, 0x800000021C3BA670, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  v58 = 3;
  sub_21C3A77DC();
  v21 = sub_21C3A77C4();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_QWORD *)&v57.eventType = 0;
  v57.locale._countAndFlagsBits = 0xE000000000000000;
  v56.eventType = v17;
  sub_21C3A8490();
  *(_QWORD *)&v56.eventType = 46;
  v56.locale._countAndFlagsBits = 0xE100000000000000;
  sub_21C30E1A4();
  v24 = sub_21C3A8310();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v26 = v24 + 16 * v25;
    v28 = *(_QWORD *)(v26 + 16);
    v27 = *(void **)(v26 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v27 = (void *)0xE700000000000000;
    v28 = 0x6E776F6E6B6E75;
  }
  v29 = v52;
  swift_bridgeObjectRetain();
  v30 = v54;
  swift_bridgeObjectRetain();
  errorType.value._countAndFlagsBits = v28;
  errorType.value._object = v27;
  contentScrollQuantile.value._countAndFlagsBits = 1819047278;
  contentScrollQuantile.value._object = (void *)0xE400000000000000;
  contentRegion._object = v29;
  contentRegion._countAndFlagsBits = v51;
  v31._countAndFlagsBits = v53;
  v31._object = v30;
  v32._countAndFlagsBits = v21;
  v32._object = v23;
  v33._countAndFlagsBits = 1819047278;
  v33._object = (void *)0xE400000000000000;
  DiscoveryAnalyticsData.init(eventType:appIdPresence:contentId:contentSessionId:contentVersion:contentRegion:contentScrollable:contentScrollQuantile:errorType:)(&v57, (ProximityReader::DiscoveryAnalyticsData::EventType)&v58, 1, v31, v32, v33, contentRegion, 0, contentScrollQuantile, errorType);
  v56 = v57;
  v34 = DiscoveryAnalyticsData.encode()();
  v36 = v35;
  sub_21C30E1E8((uint64_t)&v57);
  if (v36 >> 60 == 15)
  {
    v37 = v50;
    sub_21C2D1D80(v48, v50);
    if (v47((char *)v37, 1, v18) == 1)
    {
      sub_21C2D1DC8(v37);
    }
    else
    {
      v39 = sub_21C3A79BC();
      v40 = sub_21C3A81C0();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_21C2CD000, v39, v40, "Discovery analytics error event could not be encoded", v41, 2u);
        MEMORY[0x22077AF8C](v41, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v37, v18);
    }
  }
  else
  {
    v38 = (void *)sub_21C3A7728();
    objc_msgSend(v49, sel_sendAnalyticsWithAnalyticsData_, v38);

    sub_21C2D2B34(v34, v36);
  }
  return sub_21C30DC20();
}

uint64_t sub_21C30DC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AB08 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255278FF0);
  sub_21C2D1D80(v5, (uint64_t)v4);
  v6 = sub_21C3A79D4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_21C2D1DC8((uint64_t)v4);
  }
  else
  {
    sub_21C365870(v1, 0xD000000000000013, 0x800000021C3BA650, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v8 = (_OWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_sessionData + 8);
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  sub_21C30E154(v9, v10);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_discoveryService) = 0;
  result = swift_unknownObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader40ProximityReaderDiscoveryAnalyticsManager_lastQuantile) = 0;
  return result;
}

id sub_21C30DE00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProximityReaderDiscoveryAnalyticsManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ProximityReaderDiscoveryAnalyticsManager()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for DiscoveryAnalyticsSessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DiscoveryAnalyticsSessionData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for DiscoveryAnalyticsSessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryAnalyticsSessionData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryAnalyticsSessionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryAnalyticsSessionData()
{
  return &type metadata for DiscoveryAnalyticsSessionData;
}

uint64_t sub_21C30E154(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_21C30E1A4()
{
  unint64_t result;

  result = qword_25525C998;
  if (!qword_25525C998)
  {
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25525C998);
  }
  return result;
}

uint64_t sub_21C30E1E8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C30E270(double a1, double a2)
{
  double v2;
  double v3;
  uint64_t result;

  v2 = a1 / a2 * 100.0;
  v3 = 25.0;
  if (v2 >= 25.0)
  {
    v3 = 100.0;
    if (v2 <= 100.0)
      v3 = floor(v2 / 25.0 + 0.01) * 25.0;
  }
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 < 9.22337204e18)
    return (uint64_t)v3;
LABEL_10:
  __break(1u);
  return result;
}

void static MobileDriversLicenseDisplayRequest.Element.givenName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDisplayRequest.Element.familyName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDisplayRequest.Element.age.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 3;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t static MobileDriversLicenseDisplayRequest.Element.ageAtLeast(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void MobileDriversLicenseDisplayRequest.Element.internalElement.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t MobileDriversLicenseDisplayRequest.Element.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t MobileDriversLicenseDisplayRequest.Element.hashValue.getter()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C30E3F0()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C30E440()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t sub_21C30E48C()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t _s15ProximityReader34MobileDriversLicenseDisplayRequestV7ElementV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 8);
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_21C30E50C + 4 * byte_21C3AD910[v2]))();
  if (v2 != *(_QWORD *)a2)
    v3 = 1;
  return (v3 & 1) == 0;
}

void sub_21C30E544(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

void sub_21C30E554(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

void sub_21C30E564(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

void sub_21C30E574(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

void sub_21C30E584(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

void sub_21C30E594(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

void sub_21C30E5A4(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

void sub_21C30E5B4(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

void sub_21C30E5C4(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

void sub_21C30E5D4(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xB)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

void sub_21C30E5E4(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C30E528);
  JUMPOUT(0x21C30E53CLL);
}

unint64_t sub_21C30E5F8()
{
  unint64_t result;

  result = qword_25525CA00;
  if (!qword_25525CA00)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDisplayRequest.Element, &type metadata for MobileDriversLicenseDisplayRequest.Element);
    atomic_store(result, (unint64_t *)&qword_25525CA00);
  }
  return result;
}

uint64_t _s7ElementVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDisplayRequest.Element()
{
  return &type metadata for MobileDriversLicenseDisplayRequest.Element;
}

_QWORD *sub_21C30E678(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v5 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_21C3A7A7C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_21C30E770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_21C3A7A7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_21C30E7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_21C3A7A7C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_21C30E8B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_21C2D775C((uint64_t)a1 + v7, &qword_25525C788);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_21C3A7A7C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_21C30E9A8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_21C3A7A7C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_21C30EA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_21C2D775C(a1 + v7, &qword_25525C788);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_21C3A7A7C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_21C30EB30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C30EB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25525CA08);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_21C30EBBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C30EBC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_25525CA08);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DiscoveryRotatedView()
{
  uint64_t result;

  result = qword_25525CA68;
  if (!qword_25525CA68)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21C30EC7C()
{
  unint64_t v0;

  sub_21C30ECFC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_21C30ECFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25525CA78[0])
  {
    sub_21C3A7A7C();
    v0 = sub_21C3A7A58();
    if (!v1)
      atomic_store(v0, qword_25525CA78);
  }
}

uint64_t sub_21C30ED50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C30ED60@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v23 = a1;
  v24 = sub_21C3A7C08();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21C3A7D7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CAB0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CAB8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CAC0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v12 = sub_21C3A7D88();
  v12[1] = v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CAC8);
  sub_21C30F000(v2, (uint64_t)v12 + *(int *)(v20 + 44));
  sub_21C3A7D94();
  sub_21C30FFC4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, INFINITY, 0);
  sub_21C2D775C((uint64_t)v12, &qword_25525CAB0);
  sub_21C3A7D70();
  LOBYTE(v12) = sub_21C3A7C2C();
  v21 = &v18[*(int *)(v16 + 36)];
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v21, v9, v6);
  v21[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525CAD0) + 36)] = (char)v12;
  sub_21C2F50EC((uint64_t)v15, (uint64_t)v18, &qword_25525CAB8);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_21C2D775C((uint64_t)v15, &qword_25525CAB8);
  sub_21C3A7BFC();
  sub_21C3101A4();
  sub_21C3A7CF8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  return sub_21C2D775C((uint64_t)v18, &qword_25525CAC0);
}

uint64_t sub_21C30F000@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  _BYTE v104[193];
  _OWORD v105[10];
  _OWORD v106[2];
  _OWORD v107[12];
  char v108;
  _OWORD v109[13];
  char v110;

  v100 = a1;
  v98 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CAF8);
  v94 = *(_QWORD *)(v2 - 8);
  v95 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v93 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB00);
  MEMORY[0x24BDAC7A8](v92);
  v91 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v97 = (char *)&v75 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v96 = (uint64_t)&v75 - v8;
  v9 = sub_21C3A7B3C();
  v87 = *(_QWORD *)(v9 - 8);
  v88 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v86 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_21C3A7C08();
  v80 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v79 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DiscoveryRotatedView();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB08);
  v78 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v75 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB10);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB18);
  MEMORY[0x24BDAC7A8](v77);
  v25 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB20);
  v82 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v76 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB28);
  MEMORY[0x24BDAC7A8](v85);
  v81 = (char *)&v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v83 = (char *)&v75 - v29;
  MEMORY[0x24BDAC7A8](v30);
  v90 = (char *)&v75 - v31;
  MEMORY[0x24BDAC7A8](v32);
  v89 = (uint64_t)&v75 - v33;
  *(_QWORD *)v23 = sub_21C3A7B24();
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = 1;
  v34 = &v23[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525CB30) + 44)];
  sub_21C3102AC((uint64_t)v100, (uint64_t)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v36 = swift_allocObject();
  sub_21C3103A8((uint64_t)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB38);
  sub_21C310418();
  sub_21C3A7D58();
  v37 = v78;
  v38 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  v38(v17, v20, v15);
  *(_QWORD *)v34 = 0;
  v34[8] = 1;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB78);
  v38(&v34[*(int *)(v39 + 48)], v17, v15);
  v40 = v79;
  v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v41(v20, v15);
  v42 = v17;
  v43 = v76;
  v41(v42, v15);
  v44 = v77;
  v45 = sub_21C3A7AA0();
  LOBYTE(v20) = sub_21C3A7C2C();
  sub_21C2F50EC((uint64_t)v23, (uint64_t)v25, &qword_25525CB10);
  v46 = &v25[*(int *)(v44 + 36)];
  *(_QWORD *)v46 = v45;
  v46[8] = (char)v20;
  sub_21C2D775C((uint64_t)v23, &qword_25525CB10);
  sub_21C3A7BF0();
  v47 = sub_21C31056C();
  sub_21C3A7CF8();
  v80 = *(_QWORD *)(v80 + 8);
  ((void (*)(char *, uint64_t))v80)(v40, v99);
  sub_21C2D775C((uint64_t)v25, &qword_25525CB18);
  if (qword_25525AAC0 != -1)
    swift_once();
  v48 = (void *)qword_255278F20;
  v49 = (void *)sub_21C3A7EB4();
  v50 = (void *)sub_21C3A7EB4();
  v51 = (void *)sub_21C3A7EB4();
  v52 = objc_msgSend(v48, sel_localizedStringForKey_value_table_, v49, v50, v51);

  v53 = sub_21C3A7ED8();
  v55 = v54;

  *(_QWORD *)&v109[0] = v53;
  *((_QWORD *)&v109[0] + 1) = v55;
  *(_QWORD *)&v103 = v44;
  *((_QWORD *)&v103 + 1) = v47;
  swift_getOpaqueTypeConformance2();
  v78 = sub_21C30E1A4();
  v56 = (uint64_t)v81;
  v57 = v84;
  sub_21C3A7CEC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v43, v57);
  v58 = v86;
  sub_21C3A7B30();
  v59 = (uint64_t)v83;
  sub_21C3A7A88();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v58, v88);
  sub_21C2D775C(v56, &qword_25525CB28);
  v60 = (uint64_t)v90;
  sub_21C3A7A94();
  sub_21C2D775C(v59, &qword_25525CB28);
  v61 = v89;
  sub_21C2F50A8(v60, v89, &qword_25525CB28);
  v62 = sub_21C3A7B48();
  v63 = v100;
  sub_21C30FBB0(v100, (uint64_t)v105);
  *(_OWORD *)((char *)&v107[8] + 7) = v105[8];
  *(_OWORD *)((char *)&v107[9] + 7) = v105[9];
  *(_OWORD *)((char *)&v107[10] + 7) = v106[0];
  v107[11] = *(_OWORD *)((char *)v106 + 9);
  *(_OWORD *)((char *)&v107[4] + 7) = v105[4];
  *(_OWORD *)((char *)&v107[5] + 7) = v105[5];
  *(_OWORD *)((char *)&v107[6] + 7) = v105[6];
  *(_OWORD *)((char *)&v107[7] + 7) = v105[7];
  *(_OWORD *)((char *)v107 + 7) = v105[0];
  *(_OWORD *)((char *)&v107[1] + 7) = v105[1];
  *(_OWORD *)((char *)&v107[2] + 7) = v105[2];
  *(_OWORD *)((char *)&v107[3] + 7) = v105[3];
  *(_OWORD *)&v104[129] = v107[8];
  *(_OWORD *)&v104[145] = v107[9];
  *(_OWORD *)&v104[161] = v107[10];
  *(_OWORD *)&v104[177] = *(_OWORD *)((char *)v106 + 9);
  *(_OWORD *)&v104[65] = v107[4];
  *(_OWORD *)&v104[81] = v107[5];
  *(_OWORD *)&v104[97] = v107[6];
  *(_OWORD *)&v104[113] = v107[7];
  *(_OWORD *)&v104[1] = v107[0];
  *(_OWORD *)&v104[17] = v107[1];
  *(_OWORD *)&v104[33] = v107[2];
  v108 = 1;
  v103 = (unint64_t)v62;
  v104[0] = 1;
  *(_OWORD *)&v104[49] = v107[3];
  sub_21C3A7BF0();
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CB90);
  v65 = sub_21C3105F0(&qword_25525CB98, &qword_25525CB90, MEMORY[0x24BDF4700]);
  v66 = v93;
  sub_21C3A7CF8();
  ((void (*)(char *, uint64_t))v80)(v40, v99);
  v109[10] = *(_OWORD *)&v104[144];
  v109[11] = *(_OWORD *)&v104[160];
  v109[12] = *(_OWORD *)&v104[176];
  v110 = v104[192];
  v109[6] = *(_OWORD *)&v104[80];
  v109[7] = *(_OWORD *)&v104[96];
  v109[8] = *(_OWORD *)&v104[112];
  v109[9] = *(_OWORD *)&v104[128];
  v109[2] = *(_OWORD *)&v104[16];
  v109[3] = *(_OWORD *)&v104[32];
  v109[4] = *(_OWORD *)&v104[48];
  v109[5] = *(_OWORD *)&v104[64];
  v109[0] = v103;
  v109[1] = *(_OWORD *)v104;
  sub_21C310630((uint64_t)v109);
  v67 = v63[1];
  *(_QWORD *)&v103 = *v63;
  *((_QWORD *)&v103 + 1) = v67;
  v101 = v64;
  v102 = v65;
  swift_getOpaqueTypeConformance2();
  v68 = (uint64_t)v91;
  v69 = v95;
  sub_21C3A7CEC();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v66, v69);
  v70 = (uint64_t)v97;
  sub_21C3A7A94();
  sub_21C2D775C(v68, &qword_25525CB00);
  v71 = v96;
  sub_21C2F50A8(v70, v96, &qword_25525CB00);
  sub_21C2F50EC(v61, v60, &qword_25525CB28);
  sub_21C2F50EC(v71, v70, &qword_25525CB00);
  v72 = v98;
  sub_21C2F50EC(v60, v98, &qword_25525CB28);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CBA0);
  sub_21C2F50EC(v70, v72 + *(int *)(v73 + 48), &qword_25525CB00);
  sub_21C2D775C(v71, &qword_25525CB00);
  sub_21C2D775C(v61, &qword_25525CB28);
  sub_21C2D775C(v70, &qword_25525CB00);
  return sub_21C2D775C(v60, &qword_25525CB28);
}

uint64_t sub_21C30F974(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_21C3A7A7C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DiscoveryRotatedView();
  sub_21C36C1DC((uint64_t)v5);
  sub_21C3A7A70();
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(uint64_t))(a1 + 16))(v6);
}

uint64_t sub_21C30FA14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t KeyPath;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_21C3A7D40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A7D34();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3FD0], v2);
  v22 = sub_21C3A7D4C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_21C3A7D94();
  sub_21C3A7A64();
  v6 = v23;
  v7 = v24;
  v8 = v25;
  v9 = v26;
  v11 = v27;
  v10 = v28;
  v12 = objc_msgSend((id)objc_opt_self(), sel_systemDarkGrayColor);
  v13 = MEMORY[0x220779F0C](v12);
  KeyPath = swift_getKeyPath();
  v15 = sub_21C3A7C2C();
  result = sub_21C3A7A4C();
  *(_QWORD *)a1 = v22;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = KeyPath;
  *(_QWORD *)(a1 + 64) = v13;
  *(_BYTE *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v17;
  *(_QWORD *)(a1 + 88) = v18;
  *(_QWORD *)(a1 + 96) = v19;
  *(_QWORD *)(a1 + 104) = v20;
  *(_BYTE *)(a1 + 112) = 0;
  return result;
}

uint64_t sub_21C30FBB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v48;
  uint64_t v50;
  char v51;
  uint64_t KeyPath;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[7];
  _BYTE v58[7];
  _BYTE v59[7];
  _BYTE v60[7];
  _BYTE v61[7];

  sub_21C3A7D34();
  v3 = sub_21C3A7CBC();
  v5 = v4;
  v7 = v6 & 1;
  sub_21C3A7C50();
  v8 = sub_21C3A7CA4();
  v10 = v9;
  v12 = v11;
  swift_release();
  sub_21C3106CC(v3, v5, v7);
  swift_bridgeObjectRelease();
  sub_21C3A7D10();
  v13 = sub_21C3A7C98();
  v15 = v14;
  v17 = v16;
  swift_release();
  sub_21C3106CC(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  sub_21C3A7C68();
  v18 = sub_21C3A7C8C();
  v53 = v19;
  v54 = v18;
  v55 = v20;
  v48 = v21 & 1;
  sub_21C3106CC(v13, v15, v17 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v51 = sub_21C3A7C44();
  sub_21C3A7A4C();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v56 = *a1;
  sub_21C30E1A4();
  swift_bridgeObjectRetain();
  v30 = sub_21C3A7CB0();
  v32 = v31;
  v34 = v33 & 1;
  sub_21C3A7C80();
  v35 = sub_21C3A7CA4();
  v37 = v36;
  v39 = v38;
  swift_release();
  LOBYTE(v10) = v39 & 1;
  sub_21C3106CC(v30, v32, v34);
  swift_bridgeObjectRelease();
  sub_21C3A7D1C();
  v40 = sub_21C3A7C98();
  v42 = v41;
  LOBYTE(v32) = v43;
  v50 = v44;
  swift_release();
  sub_21C3106CC(v35, v37, v10);
  swift_bridgeObjectRelease();
  v45 = swift_getKeyPath();
  v46 = swift_getKeyPath();
  *(_DWORD *)(a2 + 9) = v56;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)((char *)&v56 + 3);
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v61;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v61[3];
  *(_DWORD *)(a2 + 68) = *(_DWORD *)&v60[3];
  *(_DWORD *)(a2 + 65) = *(_DWORD *)v60;
  *(_DWORD *)(a2 + 105) = *(_DWORD *)v59;
  *(_DWORD *)(a2 + 108) = *(_DWORD *)&v59[3];
  *(_DWORD *)(a2 + 129) = *(_DWORD *)v58;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v58[3];
  *(_DWORD *)(a2 + 153) = *(_DWORD *)v57;
  *(_DWORD *)(a2 + 156) = *(_DWORD *)&v57[3];
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v54;
  *(_QWORD *)(a2 + 24) = v53;
  *(_BYTE *)(a2 + 32) = v48;
  *(_QWORD *)(a2 + 40) = v55;
  *(_QWORD *)(a2 + 48) = KeyPath;
  *(_QWORD *)(a2 + 56) = 0x3FE0000000000000;
  *(_BYTE *)(a2 + 64) = v51;
  *(_QWORD *)(a2 + 72) = v23;
  *(_QWORD *)(a2 + 80) = v25;
  *(_QWORD *)(a2 + 88) = v27;
  *(_QWORD *)(a2 + 96) = v29;
  *(_BYTE *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = v40;
  *(_QWORD *)(a2 + 120) = v42;
  *(_BYTE *)(a2 + 128) = v32 & 1;
  *(_QWORD *)(a2 + 136) = v50;
  *(_QWORD *)(a2 + 144) = v45;
  *(_BYTE *)(a2 + 152) = 1;
  *(_QWORD *)(a2 + 160) = v46;
  *(_QWORD *)(a2 + 168) = 0x3FE0000000000000;
  *(_QWORD *)(a2 + 176) = 0;
  *(_BYTE *)(a2 + 184) = 1;
  sub_21C3106EC(v54, v53, v48);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21C3106EC(v40, v42, v32 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_21C3106CC(v40, v42, v32 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_21C3106CC(v54, v53, v48);
  swift_release();
  return swift_bridgeObjectRelease();
}

__n128 sub_21C30FFC4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  _OWORD *v24;
  __n128 result;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __n128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_21C3A81CC();
    v23 = (void *)sub_21C3A7C14();
    sub_21C3A7980();

  }
  sub_21C3A7AAC();
  sub_21C2F50EC(v13, a9, &qword_25525CAB0);
  v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525CAB8) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *v24 = v26;
  v24[1] = v27;
  result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t sub_21C310188()
{
  return sub_21C3A7CE0();
}

unint64_t sub_21C3101A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25525CAD8;
  if (!qword_25525CAD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525CAC0);
    v2[0] = sub_21C310228();
    v2[1] = sub_21C3105F0(&qword_25525CAF0, &qword_25525CAD0, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x22077AECC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25525CAD8);
  }
  return result;
}

unint64_t sub_21C310228()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25525CAE0;
  if (!qword_25525CAE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525CAB8);
    v2[0] = sub_21C3105F0(&qword_25525CAE8, &qword_25525CAB0, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x22077AECC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25525CAE0);
  }
  return result;
}

uint64_t sub_21C3102AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DiscoveryRotatedView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C3102F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for DiscoveryRotatedView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C788);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_21C3A7A7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_21C3103A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DiscoveryRotatedView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C3103EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DiscoveryRotatedView() - 8) + 80);
  return sub_21C30F974(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_21C310418()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25525CB40;
  if (!qword_25525CB40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525CB38);
    v2[0] = sub_21C310484();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22077AECC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25525CB40);
  }
  return result;
}

unint64_t sub_21C310484()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25525CB48;
  if (!qword_25525CB48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525CB50);
    v2[0] = sub_21C310508();
    v2[1] = sub_21C3105F0(&qword_25525CB68, &qword_25525CB70, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22077AECC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25525CB48);
  }
  return result;
}

unint64_t sub_21C310508()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25525CB58;
  if (!qword_25525CB58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525CB60);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x22077AECC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25525CB58);
  }
  return result;
}

unint64_t sub_21C31056C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25525CB80;
  if (!qword_25525CB80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525CB18);
    v2[0] = sub_21C3105F0(&qword_25525CB88, &qword_25525CB10, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x22077AECC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25525CB80);
  }
  return result;
}

uint64_t sub_21C3105F0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22077AECC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C310630(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 136);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_BYTE *)(a1 + 152);
  sub_21C3106CC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  swift_release();
  swift_bridgeObjectRelease();
  sub_21C3106CC(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C3106CC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_21C3106EC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_21C310704()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525CAC0);
  sub_21C3101A4();
  return swift_getOpaqueTypeConformance2();
}

uint64_t PaymentCardTransactionRequest.amount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PaymentCardTransactionRequest.currencyCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void PaymentCardTransactionRequest.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

uint64_t PaymentCardTransactionRequest.preferredAIDList.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PaymentCardTransactionRequest.preferredAIDList.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*PaymentCardTransactionRequest.preferredAIDList.modify())()
{
  return nullsub_1;
}

uint64_t PaymentCardTransactionRequest.userInterfaceLanguage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PaymentCardTransactionRequest() + 32);
  return sub_21C2D9110(v3, a1);
}

uint64_t type metadata accessor for PaymentCardTransactionRequest()
{
  uint64_t result;

  result = qword_25525CC10;
  if (!qword_25525CC10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PaymentCardTransactionRequest.userInterfaceLanguage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PaymentCardTransactionRequest() + 32);
  return sub_21C2D9188(a1, v3);
}

uint64_t (*PaymentCardTransactionRequest.userInterfaceLanguage.modify())()
{
  type metadata accessor for PaymentCardTransactionRequest();
  return nullsub_1;
}

__n128 PaymentCardTransactionRequest.transactionDescription.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = v1 + *(int *)(type metadata accessor for PaymentCardTransactionRequest() + 36);
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = v4;
  return result;
}

__n128 PaymentCardTransactionRequest.transactionDescription.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 *v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for PaymentCardTransactionRequest() + 36));
  result = v7;
  *v5 = v7;
  v5[1].n128_u64[0] = v2;
  v5[1].n128_u64[1] = v3;
  v5[2].n128_u8[0] = v4;
  return result;
}

uint64_t (*PaymentCardTransactionRequest.transactionDescription.modify())()
{
  type metadata accessor for PaymentCardTransactionRequest();
  return nullsub_1;
}

double PaymentCardTransactionRequest.init(amount:currencyCode:for:)@<D0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  __int16 v7;
  __int16 v8;
  int v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  unint64_t v20;
  unsigned int v21;
  char v22;

  v7 = a3;
  v8 = a2;
  v9 = a1;
  v11 = HIDWORD(a1);
  v12 = HIWORD(a1);
  v13 = a2 >> 16;
  v20 = HIDWORD(a2);
  v14 = HIWORD(a2);
  v21 = HIWORD(a3);
  v22 = *a6;
  v15 = type metadata accessor for PaymentCardTransactionRequest();
  v16 = a7 + *(int *)(v15 + 32);
  v17 = sub_21C3A7890();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = a7 + *(int *)(v15 + 36);
  result = 0.0;
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_BYTE *)(v18 + 32) = -1;
  *(_DWORD *)a7 = v9;
  *(_WORD *)(a7 + 4) = v11;
  *(_WORD *)(a7 + 6) = v12;
  *(_WORD *)(a7 + 8) = v8;
  *(_WORD *)(a7 + 10) = v13;
  *(_WORD *)(a7 + 12) = v20;
  *(_WORD *)(a7 + 14) = v14;
  *(_WORD *)(a7 + 16) = v7;
  *(_WORD *)(a7 + 18) = v21;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 40) = v22;
  *(_QWORD *)(a7 + 48) = MEMORY[0x24BEE4AF8];
  return result;
}

BOOL static PaymentCardTransactionRequest.TransactionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PaymentCardTransactionRequest.TransactionType.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t PaymentCardTransactionRequest.TransactionType.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

BOOL static PaymentCardTransactionRequest.PaymentCycle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PaymentCardTransactionRequest.PaymentCycle.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t PaymentCardTransactionRequest.PaymentCycle.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C310B70()
{
  unint64_t result;

  result = qword_25525CBA8;
  if (!qword_25525CBA8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCardTransactionRequest.TransactionType, &type metadata for PaymentCardTransactionRequest.TransactionType);
    atomic_store(result, (unint64_t *)&qword_25525CBA8);
  }
  return result;
}

unint64_t sub_21C310BB8()
{
  unint64_t result;

  result = qword_25525CBB0;
  if (!qword_25525CBB0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCardTransactionRequest.PaymentCycle, &type metadata for PaymentCardTransactionRequest.PaymentCycle);
    atomic_store(result, (unint64_t *)&qword_25525CBB0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PaymentCardTransactionRequest(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v7 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v7;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v8 = *(int *)(a3 + 32);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    *(_QWORD *)(a1 + 48) = a2[6];
    v11 = sub_21C3A7890();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 36);
    v17 = (char *)v4 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v19;
    v17[32] = *(_BYTE *)(v18 + 32);
  }
  return v4;
}

uint64_t destroy for PaymentCardTransactionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_21C3A7890();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for PaymentCardTransactionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(int *)(a3 + 32);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = sub_21C3A7890();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 36);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
  return a1;
}

uint64_t assignWithCopy for PaymentCardTransactionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(_WORD *)(a1 + 6) = *(_WORD *)(a2 + 6);
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_WORD *)(a1 + 18) = *(_WORD *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_21C3A7890();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 36);
  v16 = a1 + v15;
  v17 = (__int128 *)(a2 + v15);
  v18 = *v17;
  v19 = v17[1];
  *(_BYTE *)(v16 + 32) = *((_BYTE *)v17 + 32);
  *(_OWORD *)v16 = v18;
  *(_OWORD *)(v16 + 16) = v19;
  return a1;
}

uint64_t initializeWithTake for PaymentCardTransactionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_21C3A7890();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 36);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  return a1;
}

uint64_t assignWithTake for PaymentCardTransactionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 32);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_21C3A7890();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 36);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaymentCardTransactionRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C311318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PaymentCardTransactionRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C3113A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_21C31141C()
{
  unint64_t v0;

  sub_21C2D9A24();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for PaymentCardTransactionRequest.TransactionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C311504 + 4 * byte_21C3ADB15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C311538 + 4 * byte_21C3ADB10[v4]))();
}

uint64_t sub_21C311538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C311540(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C311548);
  return result;
}

uint64_t sub_21C311554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C31155CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C311560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C311568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardTransactionRequest.TransactionType()
{
  return &type metadata for PaymentCardTransactionRequest.TransactionType;
}

uint64_t storeEnumTagSinglePayload for PaymentCardTransactionRequest.PaymentCycle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C3115D0 + 4 * byte_21C3ADB1F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C311604 + 4 * byte_21C3ADB1A[v4]))();
}

uint64_t sub_21C311604(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C31160C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C311614);
  return result;
}

uint64_t sub_21C311620(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C311628);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C31162C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C311634(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardTransactionRequest.PaymentCycle()
{
  return &type metadata for PaymentCardTransactionRequest.PaymentCycle;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PaymentCardTransactionRequest.TransactionAmountDescription(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaymentCardTransactionRequest.TransactionAmountDescription(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_21C3116F4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 4u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_21C31170C(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 5;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PaymentCardTransactionRequest.TransactionAmountDescription()
{
  return &type metadata for PaymentCardTransactionRequest.TransactionAmountDescription;
}

uint64_t sub_21C311738(uint64_t a1, uint64_t a2)
{
  return sub_21C311D94(a1, a2, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege, (uint64_t (*)(char *, char *))static MobileDriversLicenseDataResponseInternal.DocumentElements.DrivingPrivilege.== infix(_:_:));
}

uint64_t sub_21C31174C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t result;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  BOOL v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v4 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B948);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFD8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v67 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v22 || a1 == a2)
    return 1;
  v78 = v13;
  v79 = v11;
  v80 = v18;
  v23 = 0;
  v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v19 + 72);
  v28 = &qword_25525B948;
  v73 = v5;
  v74 = v4;
  v71 = v10;
  v72 = v7;
  v69 = v25;
  v70 = v22;
  v67 = v27;
  v68 = v26;
  v76 = (char *)&v67 - v20;
  v77 = v17;
  while (1)
  {
    v75 = v23;
    v29 = v27 * v23;
    sub_21C2ED3E0(v25 + v29, (uint64_t)v21, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
    sub_21C2ED3E0(v26 + v29, (uint64_t)v17, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
    v30 = (uint64_t)v78;
    v31 = (uint64_t)&v78[*(int *)(v79 + 48)];
    sub_21C2F50EC((uint64_t)v21, (uint64_t)v78, v28);
    sub_21C2F50EC((uint64_t)v17, v31, v28);
    v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v32(v30, 1, v4) != 1)
      break;
    if (v32(v31, 1, v4) != 1)
      goto LABEL_58;
    v33 = v30;
    v34 = v28;
    sub_21C2D775C(v33, v28);
    v21 = v76;
    v17 = v77;
LABEL_10:
    v36 = *(int *)(v80 + 20);
    v37 = *(_QWORD *)&v21[v36];
    v38 = *(_QWORD *)&v17[v36];
    v39 = *(_QWORD *)(v37 + 16);
    if (v39 != *(_QWORD *)(v38 + 16))
      goto LABEL_59;
    if (v39)
      v40 = v37 == v38;
    else
      v40 = 1;
    if (!v40)
    {
      v47 = (uint64_t *)(v38 + 56);
      v48 = (uint64_t *)(v37 + 56);
      do
      {
        v49 = *(v48 - 2);
        v50 = *(v48 - 1);
        v51 = *v48;
        v52 = *(v47 - 2);
        v53 = *(v47 - 1);
        v54 = *v47;
        if (v49)
        {
          if (!v52)
            goto LABEL_59;
          v55 = *(v48 - 3) == *(v47 - 3) && v49 == v52;
          if (!v55 && (sub_21C3A864C() & 1) == 0)
            goto LABEL_59;
        }
        else if (v52)
        {
          goto LABEL_59;
        }
        v56 = v50 == v53 && v51 == v54;
        if (!v56 && (sub_21C3A864C() & 1) == 0)
          goto LABEL_59;
        v47 += 4;
        v48 += 4;
      }
      while (--v39);
    }
    v41 = *(int *)(v80 + 24);
    v42 = *(_QWORD *)&v21[v41];
    v43 = *(_QWORD *)&v17[v41];
    v44 = *(_QWORD *)(v42 + 16);
    if (v44 != *(_QWORD *)(v43 + 16))
      goto LABEL_59;
    if (v44)
      v45 = v42 == v43;
    else
      v45 = 1;
    if (!v45)
    {
      v57 = (uint64_t *)(v43 + 56);
      v58 = (uint64_t *)(v42 + 56);
      do
      {
        v59 = *(v58 - 2);
        v60 = *(v58 - 1);
        v61 = *v58;
        v62 = *(v57 - 2);
        v63 = *(v57 - 1);
        v64 = *v57;
        if (v59)
        {
          if (!v62)
            goto LABEL_59;
          v65 = *(v58 - 3) == *(v57 - 3) && v59 == v62;
          if (!v65 && (sub_21C3A864C() & 1) == 0)
            goto LABEL_59;
        }
        else if (v62)
        {
          goto LABEL_59;
        }
        v66 = v60 == v63 && v61 == v64;
        if (!v66 && (sub_21C3A864C() & 1) == 0)
          goto LABEL_59;
        v57 += 4;
        v58 += 4;
        --v44;
      }
      while (v44);
    }
    v23 = v75 + 1;
    sub_21C2ED424((uint64_t)v17, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
    sub_21C2ED424((uint64_t)v21, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
    v28 = v34;
    result = 1;
    v10 = v71;
    v5 = v73;
    v4 = v74;
    v7 = v72;
    v26 = v68;
    v25 = v69;
    v27 = v67;
    if (v23 == v70)
      return result;
  }
  sub_21C2F50EC(v30, (uint64_t)v10, v28);
  if (v32(v31, 1, v4) != 1)
  {
    sub_21C2F5064(v31, (uint64_t)v7, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
    v35 = static MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass.== infix(_:_:)(v10, v7);
    sub_21C2ED424((uint64_t)v10, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
    sub_21C2ED424((uint64_t)v7, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
    sub_21C2D775C(v30, v28);
    v34 = v28;
    v21 = v76;
    v17 = v77;
    if ((v35 & 1) == 0)
      goto LABEL_59;
    goto LABEL_10;
  }
  sub_21C2ED424((uint64_t)v10, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
LABEL_58:
  sub_21C2D775C(v30, &qword_25525BFD8);
  v21 = v76;
  v17 = v77;
LABEL_59:
  sub_21C2ED424((uint64_t)v17, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
  sub_21C2ED424((uint64_t)v21, type metadata accessor for MobileDriversLicenseDataResponseInternal.DocumentElements.AAMVADrivingPrivilege);
  return 0;
}

uint64_t sub_21C311C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  char *i;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (_BYTE *)(a1 + 40);
  for (i = (char *)(a2 + 40); ; i += 16)
  {
    v6 = *((_QWORD *)v3 - 1);
    v5 = *i;
    if (*v3 == 1)
      break;
    if (v6 != *((_QWORD *)i - 1))
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
    v3 += 16;
    if (!--v2)
      return 1;
  }
  return ((uint64_t (*)(void))((char *)&loc_21C311CA0 + 4 * byte_21C3ADD20[v6]))();
}

uint64_t sub_21C311D80(uint64_t a1, uint64_t a2)
{
  return sub_21C311D94(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege, (uint64_t (*)(char *, char *))static MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege.== infix(_:_:));
}

uint64_t sub_21C311D94(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_21C2ED3E0(a1 + v16, (uint64_t)v14, a3);
        sub_21C2ED3E0(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_21C2ED424((uint64_t)v11, a3);
        sub_21C2ED424((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_21C311ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t result;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  BOOL v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CD30);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v67 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v22 || a1 == a2)
    return 1;
  v78 = v13;
  v79 = v11;
  v80 = v18;
  v23 = 0;
  v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v19 + 72);
  v28 = &qword_25525BFB0;
  v73 = v5;
  v74 = v4;
  v71 = v10;
  v72 = v7;
  v69 = v25;
  v70 = v22;
  v67 = v27;
  v68 = v26;
  v76 = (char *)&v67 - v20;
  v77 = v16;
  while (1)
  {
    v75 = v23;
    v29 = v27 * v23;
    sub_21C2ED3E0(v25 + v29, (uint64_t)v21, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
    sub_21C2ED3E0(v26 + v29, (uint64_t)v16, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
    v30 = (uint64_t)v78;
    v31 = (uint64_t)&v78[*(int *)(v79 + 48)];
    sub_21C2F50EC((uint64_t)v21, (uint64_t)v78, v28);
    sub_21C2F50EC((uint64_t)v16, v31, v28);
    v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v32(v30, 1, v4) != 1)
      break;
    if (v32(v31, 1, v4) != 1)
      goto LABEL_58;
    v33 = v30;
    v34 = v28;
    sub_21C2D775C(v33, v28);
    v21 = v76;
    v16 = v77;
LABEL_10:
    v36 = *(int *)(v80 + 20);
    v37 = *(_QWORD *)&v21[v36];
    v38 = *(_QWORD *)&v16[v36];
    v39 = *(_QWORD *)(v37 + 16);
    if (v39 != *(_QWORD *)(v38 + 16))
      goto LABEL_59;
    if (v39)
      v40 = v37 == v38;
    else
      v40 = 1;
    if (!v40)
    {
      v47 = (uint64_t *)(v38 + 56);
      v48 = (uint64_t *)(v37 + 56);
      do
      {
        v49 = *(v48 - 2);
        v50 = *(v48 - 1);
        v51 = *v48;
        v52 = *(v47 - 2);
        v53 = *(v47 - 1);
        v54 = *v47;
        if (v49)
        {
          if (!v52)
            goto LABEL_59;
          v55 = *(v48 - 3) == *(v47 - 3) && v49 == v52;
          if (!v55 && (sub_21C3A864C() & 1) == 0)
            goto LABEL_59;
        }
        else if (v52)
        {
          goto LABEL_59;
        }
        v56 = v50 == v53 && v51 == v54;
        if (!v56 && (sub_21C3A864C() & 1) == 0)
          goto LABEL_59;
        v47 += 4;
        v48 += 4;
      }
      while (--v39);
    }
    v41 = *(int *)(v80 + 24);
    v42 = *(_QWORD *)&v21[v41];
    v43 = *(_QWORD *)&v16[v41];
    v44 = *(_QWORD *)(v42 + 16);
    if (v44 != *(_QWORD *)(v43 + 16))
      goto LABEL_59;
    if (v44)
      v45 = v42 == v43;
    else
      v45 = 1;
    if (!v45)
    {
      v57 = (uint64_t *)(v43 + 56);
      v58 = (uint64_t *)(v42 + 56);
      do
      {
        v59 = *(v58 - 2);
        v60 = *(v58 - 1);
        v61 = *v58;
        v62 = *(v57 - 2);
        v63 = *(v57 - 1);
        v64 = *v57;
        if (v59)
        {
          if (!v62)
            goto LABEL_59;
          v65 = *(v58 - 3) == *(v57 - 3) && v59 == v62;
          if (!v65 && (sub_21C3A864C() & 1) == 0)
            goto LABEL_59;
        }
        else if (v62)
        {
          goto LABEL_59;
        }
        v66 = v60 == v63 && v61 == v64;
        if (!v66 && (sub_21C3A864C() & 1) == 0)
          goto LABEL_59;
        v57 += 4;
        v58 += 4;
        --v44;
      }
      while (v44);
    }
    v23 = v75 + 1;
    sub_21C2ED424((uint64_t)v16, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
    sub_21C2ED424((uint64_t)v21, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
    v28 = v34;
    result = 1;
    v10 = v71;
    v5 = v73;
    v4 = v74;
    v7 = v72;
    v26 = v68;
    v25 = v69;
    v27 = v67;
    if (v23 == v70)
      return result;
  }
  sub_21C2F50EC(v30, (uint64_t)v10, v28);
  if (v32(v31, 1, v4) != 1)
  {
    sub_21C2F5064(v31, (uint64_t)v7, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
    v35 = static MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.== infix(_:_:)(v10, v7);
    sub_21C2ED424((uint64_t)v10, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
    sub_21C2ED424((uint64_t)v7, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
    sub_21C2D775C(v30, v28);
    v34 = v28;
    v21 = v76;
    v16 = v77;
    if (!v35)
      goto LABEL_59;
    goto LABEL_10;
  }
  sub_21C2ED424((uint64_t)v10, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
LABEL_58:
  sub_21C2D775C(v30, &qword_25525CD30);
  v21 = v76;
  v16 = v77;
LABEL_59:
  sub_21C2ED424((uint64_t)v16, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
  sub_21C2ED424((uint64_t)v21, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
  return 0;
}

uint64_t sub_21C3123A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 56);
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 2);
      v6 = *(v4 - 1);
      v7 = *v4;
      v8 = *(v3 - 2);
      v9 = *(v3 - 1);
      v10 = *v3;
      if (v5)
      {
        if (!v8)
          return 0;
        v11 = *(v4 - 3) == *(v3 - 3) && v5 == v8;
        if (!v11 && (sub_21C3A864C() & 1) == 0)
          return 0;
      }
      else if (v8)
      {
        return 0;
      }
      v12 = v6 == v9 && v7 == v10;
      if (!v12 && (sub_21C3A864C() & 1) == 0)
        return 0;
      v3 += 4;
      v4 += 4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_21C312480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a2 + 40);
    for (i = (_QWORD *)(a1 + 40); ; i += 6)
    {
      v6 = i[1];
      v5 = i[2];
      v7 = i[4];
      v13 = i[3];
      v9 = v3[1];
      v8 = v3[2];
      v11 = v3[3];
      v10 = v3[4];
      if ((*(i - 1) != *(v3 - 1) || *i != *v3) && (sub_21C3A864C() & 1) == 0)
        break;
      if (v5)
      {
        if (!v8 || (v6 != v9 || v5 != v8) && (sub_21C3A864C() & 1) == 0)
          return 0;
      }
      else if (v8)
      {
        return 0;
      }
      if (v7)
      {
        if (!v10 || (v13 != v11 || v7 != v10) && (sub_21C3A864C() & 1) == 0)
          return 0;
      }
      else if (v10)
      {
        return 0;
      }
      v3 += 6;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t static MobileNationalIDCardDisplayRequest.isSupportedRegion(_:)()
{
  if (qword_25525AA98 != -1)
    swift_once();
  return sub_21C3A79E0();
}

uint64_t MobileNationalIDCardDisplayRequest.region.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21C3A7848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MobileNationalIDCardDisplayRequest.region.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21C3A7848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MobileNationalIDCardDisplayRequest.region.modify())()
{
  return nullsub_1;
}

uint64_t MobileNationalIDCardDisplayRequest.elements.getter()
{
  type metadata accessor for MobileNationalIDCardDisplayRequest();
  return swift_bridgeObjectRetain();
}

uint64_t MobileNationalIDCardDisplayRequest.elements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for MobileNationalIDCardDisplayRequest() + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*MobileNationalIDCardDisplayRequest.elements.modify())()
{
  type metadata accessor for MobileNationalIDCardDisplayRequest();
  return nullsub_1;
}

uint64_t MobileNationalIDCardDisplayRequest.options.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MobileNationalIDCardDisplayRequest();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t MobileNationalIDCardDisplayRequest.options.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for MobileNationalIDCardDisplayRequest();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*MobileNationalIDCardDisplayRequest.options.modify())()
{
  type metadata accessor for MobileNationalIDCardDisplayRequest();
  return nullsub_1;
}

uint64_t MobileNationalIDCardDisplayRequest.init(region:elements:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t result;

  v7 = *a3;
  v8 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for MobileNationalIDCardDisplayRequest();
  *(_QWORD *)(a4 + *(int *)(result + 20)) = a2;
  *(_BYTE *)(a4 + *(int *)(result + 24)) = v7;
  return result;
}

uint64_t MobileNationalIDCardDisplayRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  sub_21C3A7848();
  sub_21C2D1198(&qword_25525CC58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
  sub_21C3A7E60();
  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MobileNationalIDCardDisplayRequest() + 20));
  sub_21C3A870C();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_BYTE *)(v1 + 40);
    do
    {
      if ((*v3 & 1) == 0)
        sub_21C3A870C();
      v3 += 16;
      sub_21C3A870C();
      --v2;
    }
    while (v2);
  }
  return sub_21C3A870C();
}

BOOL static MobileNationalIDCardDisplayRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_21C3A783C() & 1) != 0
    && (v4 = type metadata accessor for MobileNationalIDCardDisplayRequest(),
        (sub_21C311C2C(*(_QWORD *)(a1 + *(int *)(v4 + 20)), *(_QWORD *)(a2 + *(int *)(v4 + 20))) & 1) != 0))
  {
    return *(unsigned __int8 *)(a1 + *(int *)(v4 + 24)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t MobileNationalIDCardDisplayRequest.hashValue.getter()
{
  sub_21C3A8700();
  MobileNationalIDCardDisplayRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C312980()
{
  sub_21C3A8700();
  MobileNationalIDCardDisplayRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C3129C0()
{
  sub_21C3A8700();
  MobileNationalIDCardDisplayRequest.hash(into:)();
  return sub_21C3A8724();
}

BOOL sub_21C3129F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_21C3A783C() & 1) != 0
      && (sub_21C311C2C(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20))) & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 24));
}

uint64_t static MobileDocumentRequest<>.nationalIDCard(region:_:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *a3;
  v8 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a1, v8);
  v9 = type metadata accessor for MobileNationalIDCardDisplayRequest();
  *(_QWORD *)(a4 + *(int *)(v9 + 20)) = a2;
  *(_BYTE *)(a4 + *(int *)(v9 + 24)) = v7;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MobileNationalIDCardDisplayRequest()
{
  uint64_t result;

  result = qword_25525CCF0;
  if (!qword_25525CCF0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21C312B08()
{
  unint64_t result;

  result = qword_25525CC60;
  if (!qword_25525CC60)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardDisplayRequest.Response, &type metadata for MobileNationalIDCardDisplayRequest.Response);
    atomic_store(result, (unint64_t *)&qword_25525CC60);
  }
  return result;
}

uint64_t sub_21C312B4C(uint64_t a1)
{
  uint64_t result;

  result = sub_21C2D1198(&qword_25525CC88, (uint64_t (*)(uint64_t))type metadata accessor for MobileNationalIDCardDisplayRequest, (uint64_t)&protocol conformance descriptor for MobileNationalIDCardDisplayRequest);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C312B88()
{
  return sub_21C2D1198(&qword_25525CC90, (uint64_t (*)(uint64_t))type metadata accessor for MobileNationalIDCardDisplayRequest, (uint64_t)&protocol conformance descriptor for MobileNationalIDCardDisplayRequest);
}

_QWORD *initializeBufferWithCopyOfBuffer for MobileNationalIDCardDisplayRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C3A7848();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MobileNationalIDCardDisplayRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MobileNationalIDCardDisplayRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MobileNationalIDCardDisplayRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for MobileNationalIDCardDisplayRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MobileNationalIDCardDisplayRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileNationalIDCardDisplayRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C312E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_21C3A7848();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileNationalIDCardDisplayRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C312ED4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_21C3A7848();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_21C312F4C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C3A7848();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static ProximityReaderDiscovery.Topic.Payment.== infix(_:_:)()
{
  return 1;
}

uint64_t ProximityReaderDiscovery.Topic.Payment.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t ProximityReaderDiscovery.Topic.Payment.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

BOOL static ProximityReaderDiscovery.ContentError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ProximityReaderDiscovery.ContentError.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t ProximityReaderDiscovery.ContentError.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t ProximityReaderDiscovery.Content.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProximityReaderDiscovery.Content.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProximityReaderDiscovery.contentList.getter()
{
  return swift_task_switch();
}

uint64_t sub_21C313134()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_25525AA90 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21C3131A8;
  return sub_21C301B84();
}

uint64_t sub_21C3131A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t ProximityReaderDiscovery.content(for:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21C313214()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_25525AA90 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_21C313290;
  return sub_21C300D28(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21C313290()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C3132FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ProximityReaderDiscovery.presentContent(_:from:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *(_QWORD *)(v2 + 48) = a2;
  *(_QWORD *)(v2 + 56) = v3;
  *(_OWORD *)(v2 + 64) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(v2 + 80) = a1[3];
  return swift_task_switch();
}

uint64_t sub_21C313334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_25525AA90 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  *v3 = v0;
  v3[1] = sub_21C3133C4;
  return sub_21C302990((uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 48));
}

uint64_t sub_21C3133C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C313430()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ProximityReaderDiscovery.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ProximityReaderDiscovery.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t ProximityReaderDiscovery.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ProximityReaderDiscovery.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_21C313470()
{
  unint64_t result;

  result = qword_25525CD50;
  if (!qword_25525CD50)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ProximityReaderDiscovery.Topic.Payment, &type metadata for ProximityReaderDiscovery.Topic.Payment);
    atomic_store(result, (unint64_t *)&qword_25525CD50);
  }
  return result;
}

unint64_t sub_21C3134B8()
{
  unint64_t result;

  result = qword_25525CD58;
  if (!qword_25525CD58)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ProximityReaderDiscovery.ContentError, &type metadata for ProximityReaderDiscovery.ContentError);
    atomic_store(result, (unint64_t *)&qword_25525CD58);
  }
  return result;
}

uint64_t type metadata accessor for ProximityReaderDiscovery()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProximityReaderDiscovery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProximityReaderDiscovery.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

ValueMetadata *type metadata accessor for ProximityReaderDiscovery.Topic()
{
  return &type metadata for ProximityReaderDiscovery.Topic;
}

uint64_t _s15ProximityReader24ProximityReaderDiscoveryC5TopicO7PaymentOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C313588 + 4 * byte_21C3ADE80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C3135A8 + 4 * byte_21C3ADE85[v4]))();
}

_BYTE *sub_21C313588(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C3135A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C3135B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C3135B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C3135C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C3135C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ProximityReaderDiscovery.Topic.Payment()
{
  return &type metadata for ProximityReaderDiscovery.Topic.Payment;
}

uint64_t getEnumTagSinglePayload for ProximityReaderDiscovery.ContentError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ProximityReaderDiscovery.ContentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_21C3136C0 + 4 * byte_21C3ADE8F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_21C3136F4 + 4 * byte_21C3ADE8A[v4]))();
}

uint64_t sub_21C3136F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3136FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C313704);
  return result;
}

uint64_t sub_21C313710(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C313718);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_21C31371C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C313724(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProximityReaderDiscovery.ContentError()
{
  return &type metadata for ProximityReaderDiscovery.ContentError;
}

uint64_t getEnumTagSinglePayload for ProximityReaderDiscovery.Content(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProximityReaderDiscovery.Content(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProximityReaderDiscovery.Content()
{
  return &type metadata for ProximityReaderDiscovery.Content;
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.nameComponents.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C2F50EC(v1, a1, &qword_25525BA10);
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.portraitData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements() + 20);
  v2 = *(_QWORD *)v1;
  sub_21C2D1E80(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements()
{
  uint64_t result;

  result = qword_25525CE58;
  if (!qword_25525CE58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.ageAtLeastElements.getter()
{
  type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  return swift_bridgeObjectRetain();
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.age.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + *(int *)(type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements() + 28));
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.dateOfBirth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  return sub_21C2F50EC(v1 + *(int *)(v3 + 32), a1, &qword_25525B8A0);
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.sex.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  char *v25;

  v2 = v1;
  v4 = sub_21C3A7518();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21C3A75D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2F50EC(v2, (uint64_t)v16, &qword_25525BA10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525BA18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC28]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v17 = (int *)type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  v18 = (uint64_t *)(v2 + v17[5]);
  v19 = v18[1];
  if (v19 >> 60 == 15)
  {
    sub_21C3A8718();
  }
  else
  {
    v20 = *v18;
    sub_21C3A8718();
    sub_21C2D1E94(v20, v19);
    sub_21C3A7758();
    sub_21C2D2B34(v20, v19);
  }
  v21 = *(_QWORD *)(v2 + v17[6]);
  swift_bridgeObjectRetain();
  sub_21C2EA908(a1, v21);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v2 + v17[7] + 8) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    sub_21C3A8718();
    sub_21C3A870C();
  }
  sub_21C2F50EC(v2 + v17[8], (uint64_t)v9, &qword_25525B8A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    v22 = v25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v25, v9, v4);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v4);
  }
  if (*(_BYTE *)(v2 + v17[9]) == 4)
    return sub_21C3A8718();
  sub_21C3A8718();
  return sub_21C3A870C();
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.hashValue.getter()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileNationalIDCardDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

uint64_t sub_21C313CE0()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileNationalIDCardDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

uint64_t sub_21C313D20()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileNationalIDCardDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

BOOL _s15ProximityReader31MobileNationalIDCardDataRequestV8ResponseV16DocumentElementsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t *v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  char v46;
  _QWORD *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  char *v59;
  char v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  int v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v76 = a2;
  v72 = sub_21C3A7518();
  v69 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v67 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB8);
  MEMORY[0x24BDAC7A8](v68);
  v71 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v5);
  v70 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v73 = (uint64_t)&v67 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v74 = (uint64_t)&v67 - v10;
  v11 = sub_21C3A75D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFC0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v67 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v67 - v25;
  v75 = a1;
  sub_21C2F50EC(a1, (uint64_t)&v67 - v25, &qword_25525BA10);
  sub_21C2F50EC(v76, (uint64_t)v23, &qword_25525BA10);
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_21C2F50EC((uint64_t)v26, (uint64_t)v17, &qword_25525BA10);
  sub_21C2F50EC((uint64_t)v23, v27, &qword_25525BA10);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v28((uint64_t)v17, 1, v11) == 1)
  {
    sub_21C2D775C((uint64_t)v23, &qword_25525BA10);
    sub_21C2D775C((uint64_t)v26, &qword_25525BA10);
    if (v28(v27, 1, v11) == 1)
    {
      sub_21C2D775C((uint64_t)v17, &qword_25525BA10);
      goto LABEL_9;
    }
LABEL_6:
    v29 = &qword_25525BFC0;
    v30 = (uint64_t)v17;
LABEL_7:
    sub_21C2D775C(v30, v29);
    return 0;
  }
  sub_21C2F50EC((uint64_t)v17, (uint64_t)v20, &qword_25525BA10);
  if (v28(v27, 1, v11) == 1)
  {
    sub_21C2D775C((uint64_t)v23, &qword_25525BA10);
    sub_21C2D775C((uint64_t)v26, &qword_25525BA10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, v27, v11);
  sub_21C2D1198(&qword_25525BFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCC10], MEMORY[0x24BDCCC30]);
  v31 = sub_21C3A7EA8();
  v32 = *(void (**)(char *, uint64_t))(v12 + 8);
  v32(v14, v11);
  sub_21C2D775C((uint64_t)v23, &qword_25525BA10);
  sub_21C2D775C((uint64_t)v26, &qword_25525BA10);
  v32(v20, v11);
  sub_21C2D775C((uint64_t)v17, &qword_25525BA10);
  if ((v31 & 1) == 0)
    return 0;
LABEL_9:
  v33 = (int *)type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  v34 = v33[5];
  v36 = v75;
  v35 = v76;
  v37 = *(_QWORD *)(v75 + v34);
  v38 = *(_QWORD *)(v75 + v34 + 8);
  v39 = (uint64_t *)(v76 + v34);
  v40 = *v39;
  v41 = v39[1];
  if (v38 >> 60 == 15)
  {
    if (v41 >> 60 == 15)
      goto LABEL_15;
LABEL_13:
    sub_21C2D1E80(v37, v38);
    sub_21C2D1E80(v40, v41);
    sub_21C2D2B34(v37, v38);
    sub_21C2D2B34(v40, v41);
    return 0;
  }
  if (v41 >> 60 == 15)
    goto LABEL_13;
  sub_21C2D1E80(v37, v38);
  sub_21C2D1E80(v40, v41);
  sub_21C317958(v37, v38);
  v43 = v42;
  sub_21C2D2B34(v40, v41);
  sub_21C2D2B34(v37, v38);
  if ((v43 & 1) == 0)
    return 0;
LABEL_15:
  if ((sub_21C3A3C64(*(_QWORD *)(v36 + v33[6]), *(_QWORD *)(v35 + v33[6])) & 1) == 0)
    return 0;
  v44 = v33[7];
  v45 = (_QWORD *)(v36 + v44);
  v46 = *(_BYTE *)(v36 + v44 + 8);
  v47 = (_QWORD *)(v35 + v44);
  v48 = *(unsigned __int8 *)(v35 + v44 + 8);
  if ((v46 & 1) != 0)
  {
    v50 = (uint64_t)v71;
    v49 = v72;
    v51 = (uint64_t)v70;
    v53 = v73;
    v52 = v74;
    if (!v48)
      return 0;
  }
  else
  {
    if (*v45 != *v47)
      LOBYTE(v48) = 1;
    v50 = (uint64_t)v71;
    v49 = v72;
    v51 = (uint64_t)v70;
    v53 = v73;
    v52 = v74;
    if ((v48 & 1) != 0)
      return 0;
  }
  sub_21C2F50EC(v36 + v33[8], v52, &qword_25525B8A0);
  v72 = (uint64_t)v33;
  sub_21C2F50EC(v35 + v33[8], v53, &qword_25525B8A0);
  v55 = v50 + *(int *)(v68 + 48);
  sub_21C2F50EC(v52, v50, &qword_25525B8A0);
  sub_21C2F50EC(v53, v55, &qword_25525B8A0);
  v56 = v69;
  v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  if (v57(v50, 1, v49) == 1)
  {
    sub_21C2D775C(v53, &qword_25525B8A0);
    sub_21C2D775C(v52, &qword_25525B8A0);
    if (v57(v55, 1, v49) == 1)
    {
      sub_21C2D775C(v50, &qword_25525B8A0);
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  sub_21C2F50EC(v50, v51, &qword_25525B8A0);
  if (v57(v55, 1, v49) == 1)
  {
    sub_21C2D775C(v73, &qword_25525B8A0);
    sub_21C2D775C(v74, &qword_25525B8A0);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v51, v49);
LABEL_28:
    v29 = &qword_25525BFB8;
    v30 = v50;
    goto LABEL_7;
  }
  v58 = v51;
  v59 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v67, v55, v49);
  sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
  v60 = sub_21C3A7EA8();
  v61 = v56;
  v62 = v60;
  v63 = *(void (**)(char *, uint64_t))(v61 + 8);
  v63(v59, v49);
  sub_21C2D775C(v73, &qword_25525B8A0);
  sub_21C2D775C(v74, &qword_25525B8A0);
  v63((char *)v58, v49);
  sub_21C2D775C(v50, &qword_25525B8A0);
  if ((v62 & 1) == 0)
    return 0;
LABEL_30:
  v64 = *(int *)(v72 + 36);
  v65 = *(unsigned __int8 *)(v36 + v64);
  v66 = *(unsigned __int8 *)(v35 + v64);
  if (v65 == 4)
    return v66 == 4;
  return v66 != 4 && v65 == v66;
}

uint64_t sub_21C31447C()
{
  return sub_21C2D1198(&qword_25525CDF8, (uint64_t (*)(uint64_t))type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements, (uint64_t)&protocol conformance descriptor for MobileNationalIDCardDataRequest.Response.DocumentElements);
}

uint64_t *_s16DocumentElementsVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C3A75D8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *((_QWORD *)v13 + 1);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v15 = *(_QWORD *)v13;
      sub_21C2D1E94(*(_QWORD *)v13, *((_QWORD *)v13 + 1));
      *(_QWORD *)v12 = v15;
      *((_QWORD *)v12 + 1) = v14;
    }
    v16 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = a3[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_21C3A7518();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  }
  return a1;
}

uint64_t _s16DocumentElementsVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  v7 = v6[1];
  if (v7 >> 60 != 15)
    sub_21C2D2B48(*v6, v7);
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 32);
  v9 = sub_21C3A7518();
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  return result;
}

char *_s16DocumentElementsVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)v10 = *(_OWORD *)v11;
  }
  else
  {
    v13 = *(_QWORD *)v11;
    sub_21C2D1E94(*(_QWORD *)v11, *((_QWORD *)v11 + 1));
    *(_QWORD *)v10 = v13;
    *((_QWORD *)v10 + 1) = v12;
  }
  v14 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_21C3A7518();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *_s16DocumentElementsVwca(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = (uint64_t *)&a1[v12];
  v14 = (uint64_t *)&a2[v12];
  v15 = *(_QWORD *)&a2[v12 + 8];
  if (*(_QWORD *)&a1[v12 + 8] >> 60 == 15)
  {
    if (v15 >> 60 != 15)
    {
      v16 = *v14;
      sub_21C2D1E94(v16, v15);
      *v13 = v16;
      v13[1] = v15;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v15 >> 60 == 15)
  {
    sub_21C2EF04C((uint64_t)v13);
LABEL_12:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    goto LABEL_14;
  }
  v17 = *v14;
  sub_21C2D1E94(v17, v15);
  v18 = *v13;
  v19 = v13[1];
  *v13 = v17;
  v13[1] = v15;
  sub_21C2D2B48(v18, v19);
LABEL_14:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *(_QWORD *)v21 = v23;
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_21C3A7518();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_19;
  }
  if (v31)
  {
LABEL_19:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_20:
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *_s16DocumentElementsVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[7];
  v11 = a3[8];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  v16 = sub_21C3A7518();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *_s16DocumentElementsVwta(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;

  v6 = sub_21C3A75D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = (uint64_t)&a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)&a1[v12 + 8];
  if (v15 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    goto LABEL_12;
  }
  v16 = *((_QWORD *)v14 + 1);
  if (v16 >> 60 == 15)
  {
    sub_21C2EF04C(v13);
    goto LABEL_10;
  }
  v17 = *(_QWORD *)v13;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v16;
  sub_21C2D2B48(v17, v15);
LABEL_12:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = a3[8];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = &a1[v19];
  v23 = &a2[v19];
  v24 = sub_21C3A7518();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_17;
  }
  if (v28)
  {
LABEL_17:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_18:
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t _s16DocumentElementsVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C314F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t _s16DocumentElementsVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C31503C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_21C3150E8()
{
  unint64_t v0;
  unint64_t v1;

  sub_21C2EFB08(319, &qword_25525BBE8, (void (*)(uint64_t))MEMORY[0x24BDCCC10]);
  if (v0 <= 0x3F)
  {
    sub_21C2EFB08(319, (unint64_t *)&qword_25525BBF0, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void static MobileNationalIDCardDisplayRequest.Element.givenName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardDisplayRequest.Element.familyName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardDisplayRequest.Element.age.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 3;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t static MobileNationalIDCardDisplayRequest.Element.ageAtLeast(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void MobileNationalIDCardDisplayRequest.Element.internalElement.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t MobileNationalIDCardDisplayRequest.Element.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t MobileNationalIDCardDisplayRequest.Element.hashValue.getter()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C3152A8()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t _s15ProximityReader34MobileNationalIDCardDisplayRequestV7ElementV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 8);
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_21C315328 + 4 * byte_21C3AE1B0[v2]))();
  if (v2 != *(_QWORD *)a2)
    v3 = 1;
  return (v3 & 1) == 0;
}

void sub_21C315360(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

void sub_21C315370(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

void sub_21C315380(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

void sub_21C315390(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

void sub_21C3153A0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

void sub_21C3153B0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

void sub_21C3153C0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

void sub_21C3153D0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

void sub_21C3153E0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

void sub_21C3153F0(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xB)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

void sub_21C315400(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315344);
  JUMPOUT(0x21C315358);
}

unint64_t sub_21C315414()
{
  unint64_t result;

  result = qword_25525CEA0;
  if (!qword_25525CEA0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardDisplayRequest.Element, &type metadata for MobileNationalIDCardDisplayRequest.Element);
    atomic_store(result, (unint64_t *)&qword_25525CEA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileNationalIDCardDisplayRequest.Element()
{
  return &type metadata for MobileNationalIDCardDisplayRequest.Element;
}

_BYTE *MobileNationalIDCardDisplayRequest.Options.init(validationMode:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL static MobileNationalIDCardDisplayRequest.Options.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void MobileNationalIDCardDisplayRequest.Options.validationMode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *MobileNationalIDCardDisplayRequest.Options.validationMode.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*MobileNationalIDCardDisplayRequest.Options.validationMode.modify())()
{
  return nullsub_1;
}

uint64_t MobileNationalIDCardDisplayRequest.Options.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileNationalIDCardDisplayRequest.Options.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C315520()
{
  unint64_t result;

  result = qword_25525CEA8;
  if (!qword_25525CEA8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardDisplayRequest.Options, &type metadata for MobileNationalIDCardDisplayRequest.Options);
    atomic_store(result, (unint64_t *)&qword_25525CEA8);
  }
  return result;
}

uint64_t _s7OptionsVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C3155B0 + 4 * byte_21C3AE2A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C3155E4 + 4 * byte_21C3AE2A0[v4]))();
}

uint64_t sub_21C3155E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3155EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C3155F4);
  return result;
}

uint64_t sub_21C315600(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C315608);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C31560C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C315614(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileNationalIDCardDisplayRequest.Options()
{
  return &type metadata for MobileNationalIDCardDisplayRequest.Options;
}

BOOL static MobileNationalIDCardDisplayRequest.Response.ValidationOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileNationalIDCardDisplayRequest.Response.ValidationOutcome.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileNationalIDCardDisplayRequest.Response.ValidationOutcome.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C3156B4()
{
  unint64_t result;

  result = qword_25525CEB0;
  if (!qword_25525CEB0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardDisplayRequest.Response.ValidationOutcome, &type metadata for MobileNationalIDCardDisplayRequest.Response.ValidationOutcome);
    atomic_store(result, (unint64_t *)&qword_25525CEB0);
  }
  return result;
}

uint64_t _s17ValidationOutcomeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C315744 + 4 * byte_21C3AE335[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C315778 + 4 * asc_21C3AE330[v4]))();
}

uint64_t sub_21C315778(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C315780(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C315788);
  return result;
}

uint64_t sub_21C315794(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C31579CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C3157A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3157A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileNationalIDCardDisplayRequest.Response.ValidationOutcome()
{
  return &type metadata for MobileNationalIDCardDisplayRequest.Response.ValidationOutcome;
}

void static MobileNationalIDCardDataRequest.Element.givenName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardDataRequest.Element.familyName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardDataRequest.Element.portrait.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 2;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardDataRequest.Element.age.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 3;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardDataRequest.Element.dateOfBirth.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 4;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardDataRequest.Element.sex.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 5;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t static MobileNationalIDCardDataRequest.Element.ageAtLeast(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void MobileNationalIDCardDataRequest.Element.internalElement.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t MobileNationalIDCardDataRequest.Element.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t MobileNationalIDCardDataRequest.Element.hashValue.getter()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C3158F4()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t _s15ProximityReader31MobileNationalIDCardDataRequestV7ElementV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 8);
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_21C315974 + 4 * byte_21C3AE3D0[v2]))();
  if (v2 != *(_QWORD *)a2)
    v3 = 1;
  return (v3 & 1) == 0;
}

void sub_21C3159AC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

void sub_21C3159BC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

void sub_21C3159CC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

void sub_21C3159DC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

void sub_21C3159EC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

void sub_21C3159FC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

void sub_21C315A0C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

void sub_21C315A1C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

void sub_21C315A2C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

void sub_21C315A3C(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xB)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

void sub_21C315A4C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C315990);
  JUMPOUT(0x21C3159A4);
}

unint64_t sub_21C315A60()
{
  unint64_t result;

  result = qword_25525CEB8;
  if (!qword_25525CEB8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardDataRequest.Element, &type metadata for MobileNationalIDCardDataRequest.Element);
    atomic_store(result, (unint64_t *)&qword_25525CEB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileNationalIDCardDataRequest.Element()
{
  return &type metadata for MobileNationalIDCardDataRequest.Element;
}

uint64_t static MobileNationalIDCardRawDataRequest.isSupportedRegion(_:)()
{
  if (qword_25525AA98 != -1)
    swift_once();
  return sub_21C3A79E0();
}

uint64_t MobileNationalIDCardRawDataRequest.region.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21C3A7848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MobileNationalIDCardRawDataRequest.region.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21C3A7848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MobileNationalIDCardRawDataRequest.region.modify())()
{
  return nullsub_1;
}

uint64_t MobileNationalIDCardRawDataRequest.retainedElements.getter()
{
  type metadata accessor for MobileNationalIDCardRawDataRequest();
  return swift_bridgeObjectRetain();
}

uint64_t MobileNationalIDCardRawDataRequest.retainedElements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for MobileNationalIDCardRawDataRequest() + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*MobileNationalIDCardRawDataRequest.retainedElements.modify())()
{
  type metadata accessor for MobileNationalIDCardRawDataRequest();
  return nullsub_1;
}

uint64_t MobileNationalIDCardRawDataRequest.nonRetainedElements.getter()
{
  type metadata accessor for MobileNationalIDCardRawDataRequest();
  return swift_bridgeObjectRetain();
}

uint64_t MobileNationalIDCardRawDataRequest.nonRetainedElements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for MobileNationalIDCardRawDataRequest() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*MobileNationalIDCardRawDataRequest.nonRetainedElements.modify())()
{
  type metadata accessor for MobileNationalIDCardRawDataRequest();
  return nullsub_1;
}

uint64_t MobileNationalIDCardRawDataRequest.init(region:retainedElements:nonRetainedElements:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;

  v8 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for MobileNationalIDCardRawDataRequest();
  *(_QWORD *)(a4 + *(int *)(result + 20)) = a2;
  *(_QWORD *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t MobileNationalIDCardRawDataRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE *v8;

  sub_21C3A7848();
  sub_21C2D1198(&qword_25525CC58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
  sub_21C3A7E60();
  v1 = type metadata accessor for MobileNationalIDCardRawDataRequest();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 20));
  sub_21C3A870C();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v4 & 1) == 0)
        sub_21C3A870C();
      v4 += 16;
      sub_21C3A870C();
      --v3;
    }
    while (v3);
  }
  v5 = *(_QWORD *)(v0 + *(int *)(v1 + 24));
  result = sub_21C3A870C();
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    v8 = (_BYTE *)(v5 + 40);
    do
    {
      if ((*v8 & 1) == 0)
        sub_21C3A870C();
      v8 += 16;
      result = sub_21C3A870C();
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t static MobileNationalIDCardRawDataRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_21C3A783C() & 1) != 0
    && (v4 = type metadata accessor for MobileNationalIDCardRawDataRequest(),
        (sub_21C311C28(*(_QWORD *)(a1 + *(int *)(v4 + 20)), *(_QWORD *)(a2 + *(int *)(v4 + 20))) & 1) != 0))
  {
    return sub_21C311C28(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t MobileNationalIDCardRawDataRequest.hashValue.getter()
{
  sub_21C3A8700();
  MobileNationalIDCardRawDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C315ED4()
{
  sub_21C3A8700();
  MobileNationalIDCardRawDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C315F14()
{
  sub_21C3A8700();
  MobileNationalIDCardRawDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C315F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_21C3A783C() & 1) != 0
    && (sub_21C311C28(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20))) & 1) != 0)
  {
    return sub_21C311C28(*(_QWORD *)(a1 + *(int *)(a3 + 24)), *(_QWORD *)(a2 + *(int *)(a3 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t static MobileDocumentRequest<>.nationalIDCardRawData(region:retaining:notRetaining:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a1, v8);
  v9 = type metadata accessor for MobileNationalIDCardRawDataRequest();
  *(_QWORD *)(a4 + *(int *)(v9 + 20)) = a2;
  *(_QWORD *)(a4 + *(int *)(v9 + 24)) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MobileNationalIDCardRawDataRequest()
{
  uint64_t result;

  result = qword_25525CF50;
  if (!qword_25525CF50)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21C316068()
{
  unint64_t result;

  result = qword_25525CEC0;
  if (!qword_25525CEC0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardRawDataRequest.Response, &type metadata for MobileNationalIDCardRawDataRequest.Response);
    atomic_store(result, (unint64_t *)&qword_25525CEC0);
  }
  return result;
}

uint64_t sub_21C3160AC(uint64_t a1)
{
  uint64_t result;

  result = sub_21C2D1198(&qword_25525CEE8, (uint64_t (*)(uint64_t))type metadata accessor for MobileNationalIDCardRawDataRequest, (uint64_t)&protocol conformance descriptor for MobileNationalIDCardRawDataRequest);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C3160E8()
{
  return sub_21C2D1198(&qword_25525CEF0, (uint64_t (*)(uint64_t))type metadata accessor for MobileNationalIDCardRawDataRequest, (uint64_t)&protocol conformance descriptor for MobileNationalIDCardRawDataRequest);
}

uint64_t *initializeBufferWithCopyOfBuffer for MobileNationalIDCardRawDataRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C3A7848();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MobileNationalIDCardRawDataRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MobileNationalIDCardRawDataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MobileNationalIDCardRawDataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MobileNationalIDCardRawDataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MobileNationalIDCardRawDataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileNationalIDCardRawDataRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C3163E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_21C3A7848();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileNationalIDCardRawDataRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C316468(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_21C3A7848();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_21C3164E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C3A7848();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static MobileNationalIDCardDataRequest.isSupportedRegion(_:)()
{
  if (qword_25525AA98 != -1)
    swift_once();
  return sub_21C3A79E0();
}

uint64_t MobileNationalIDCardDataRequest.region.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21C3A7848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MobileNationalIDCardDataRequest.region.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21C3A7848();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MobileNationalIDCardDataRequest.region.modify())()
{
  return nullsub_1;
}

uint64_t MobileNationalIDCardDataRequest.retainedElements.getter()
{
  type metadata accessor for MobileNationalIDCardDataRequest();
  return swift_bridgeObjectRetain();
}

uint64_t MobileNationalIDCardDataRequest.retainedElements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for MobileNationalIDCardDataRequest() + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*MobileNationalIDCardDataRequest.retainedElements.modify())()
{
  type metadata accessor for MobileNationalIDCardDataRequest();
  return nullsub_1;
}

uint64_t MobileNationalIDCardDataRequest.nonRetainedElements.getter()
{
  type metadata accessor for MobileNationalIDCardDataRequest();
  return swift_bridgeObjectRetain();
}

uint64_t MobileNationalIDCardDataRequest.nonRetainedElements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for MobileNationalIDCardDataRequest() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*MobileNationalIDCardDataRequest.nonRetainedElements.modify())()
{
  type metadata accessor for MobileNationalIDCardDataRequest();
  return nullsub_1;
}

uint64_t MobileNationalIDCardDataRequest.init(region:retainedElements:nonRetainedElements:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;

  v8 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for MobileNationalIDCardDataRequest();
  *(_QWORD *)(a4 + *(int *)(result + 20)) = a2;
  *(_QWORD *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t MobileNationalIDCardDataRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE *v8;

  sub_21C3A7848();
  sub_21C2D1198(&qword_25525CC58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], MEMORY[0x24BDCED20]);
  sub_21C3A7E60();
  v1 = type metadata accessor for MobileNationalIDCardDataRequest();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 20));
  sub_21C3A870C();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v4 & 1) == 0)
        sub_21C3A870C();
      v4 += 16;
      sub_21C3A870C();
      --v3;
    }
    while (v3);
  }
  v5 = *(_QWORD *)(v0 + *(int *)(v1 + 24));
  result = sub_21C3A870C();
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    v8 = (_BYTE *)(v5 + 40);
    do
    {
      if ((*v8 & 1) == 0)
        sub_21C3A870C();
      v8 += 16;
      result = sub_21C3A870C();
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t static MobileNationalIDCardDataRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_21C3A783C() & 1) != 0
    && (v4 = type metadata accessor for MobileNationalIDCardDataRequest(),
        (sub_21C311C28(*(_QWORD *)(a1 + *(int *)(v4 + 20)), *(_QWORD *)(a2 + *(int *)(v4 + 20))) & 1) != 0))
  {
    return sub_21C311C28(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t MobileNationalIDCardDataRequest.hashValue.getter()
{
  sub_21C3A8700();
  MobileNationalIDCardDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C316978()
{
  sub_21C3A8700();
  MobileNationalIDCardDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C3169B8()
{
  sub_21C3A8700();
  MobileNationalIDCardDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t static MobileDocumentRequest<>.nationalIDCardData(region:retaining:notRetaining:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a1, v8);
  v9 = type metadata accessor for MobileNationalIDCardDataRequest();
  *(_QWORD *)(a4 + *(int *)(v9 + 20)) = a2;
  *(_QWORD *)(a4 + *(int *)(v9 + 24)) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MobileNationalIDCardDataRequest()
{
  uint64_t result;

  result = qword_25525D020;
  if (!qword_25525D020)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C316AA0()
{
  return sub_21C2D1198(&qword_25525CF90, (uint64_t (*)(uint64_t))type metadata accessor for MobileNationalIDCardDataRequest.Response, (uint64_t)&protocol conformance descriptor for MobileNationalIDCardDataRequest.Response);
}

uint64_t sub_21C316ACC(uint64_t a1)
{
  uint64_t result;

  result = sub_21C2D1198(&qword_25525CFB8, (uint64_t (*)(uint64_t))type metadata accessor for MobileNationalIDCardDataRequest, (uint64_t)&protocol conformance descriptor for MobileNationalIDCardDataRequest);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C316B08()
{
  return sub_21C2D1198(&qword_25525CFC0, (uint64_t (*)(uint64_t))type metadata accessor for MobileNationalIDCardDataRequest, (uint64_t)&protocol conformance descriptor for MobileNationalIDCardDataRequest);
}

uint64_t getEnumTagSinglePayload for MobileNationalIDCardDataRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C316B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_21C3A7848();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileNationalIDCardDataRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C316BC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_21C3A7848();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

BOOL static MobileNationalIDCardDataRequest.Response.DocumentElements.Sex.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.Sex.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.Sex.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t MobileNationalIDCardDataRequest.Response.DocumentElements.Sex.localizedName.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_21C3A7A40();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, **((unsigned int **)&unk_24E031CD0 + *v0), v1, v3);
  v6 = sub_21C3A7A34();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v6;
}

unint64_t sub_21C316D74()
{
  unint64_t result;

  result = qword_25525D060;
  if (!qword_25525D060)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardDataRequest.Response.DocumentElements.Sex, &type metadata for MobileNationalIDCardDataRequest.Response.DocumentElements.Sex);
    atomic_store(result, (unint64_t *)&qword_25525D060);
  }
  return result;
}

uint64_t _s3SexOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21C316E04 + 4 * byte_21C3AE725[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21C316E38 + 4 * byte_21C3AE720[v4]))();
}

uint64_t sub_21C316E38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C316E40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C316E48);
  return result;
}

uint64_t sub_21C316E54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C316E5CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21C316E60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C316E68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements.Sex()
{
  return &type metadata for MobileNationalIDCardDataRequest.Response.DocumentElements.Sex;
}

void static MobileNationalIDCardRawDataRequest.Element.givenName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardRawDataRequest.Element.familyName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardRawDataRequest.Element.portrait.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 2;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardRawDataRequest.Element.age.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 3;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardRawDataRequest.Element.dateOfBirth.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 4;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardRawDataRequest.Element.sex.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 5;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileNationalIDCardRawDataRequest.Element.address.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 6;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t static MobileNationalIDCardRawDataRequest.Element.ageAtLeast(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void MobileNationalIDCardRawDataRequest.Element.internalElement.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t MobileNationalIDCardRawDataRequest.Element.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t MobileNationalIDCardRawDataRequest.Element.hashValue.getter()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C316FC8()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t _s15ProximityReader34MobileNationalIDCardRawDataRequestV7ElementV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 8);
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_21C317048 + 4 * byte_21C3AE7B0[v2]))();
  if (v2 != *(_QWORD *)a2)
    v3 = 1;
  return (v3 & 1) == 0;
}

void sub_21C317080(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

void sub_21C317090(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

void sub_21C3170A0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

void sub_21C3170B0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

void sub_21C3170C0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

void sub_21C3170D0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

void sub_21C3170E0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

void sub_21C3170F0(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

void sub_21C317100(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

void sub_21C317110(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xB)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

void sub_21C317120(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C317064);
  JUMPOUT(0x21C317078);
}

unint64_t sub_21C317134()
{
  unint64_t result;

  result = qword_25525D068;
  if (!qword_25525D068)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardRawDataRequest.Element, &type metadata for MobileNationalIDCardRawDataRequest.Element);
    atomic_store(result, (unint64_t *)&qword_25525D068);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileNationalIDCardRawDataRequest.Element()
{
  return &type metadata for MobileNationalIDCardRawDataRequest.Element;
}

uint64_t MobileNationalIDCardRawDataRequest.Response.responseData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_21C2D1E94(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t MobileNationalIDCardRawDataRequest.Response.sessionTranscript.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_21C2D1E94(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t MobileNationalIDCardRawDataRequest.Response.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_21C2D1E94(v1, v2);
  sub_21C3A7758();
  sub_21C2D2B48(v1, v2);
  sub_21C2D1E94(v4, v3);
  sub_21C3A7758();
  return sub_21C2D2B48(v4, v3);
}

void static MobileNationalIDCardRawDataRequest.Response.== infix(_:_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = a1[2];
  v2 = a1[3];
  sub_21C317958(*a1, a1[1]);
  if ((v3 & 1) != 0)
    sub_21C317958(v1, v2);
}

uint64_t MobileNationalIDCardRawDataRequest.Response.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_21C3A8700();
  sub_21C2D1E94(v1, v2);
  sub_21C3A7758();
  sub_21C2D2B48(v1, v2);
  sub_21C2D1E94(v4, v3);
  sub_21C3A7758();
  sub_21C2D2B48(v4, v3);
  return sub_21C3A8724();
}

uint64_t sub_21C317360()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_21C3A8700();
  sub_21C2D1E94(v1, v2);
  sub_21C3A7758();
  sub_21C2D2B48(v1, v2);
  sub_21C2D1E94(v4, v3);
  sub_21C3A7758();
  sub_21C2D2B48(v4, v3);
  return sub_21C3A8724();
}

uint64_t sub_21C3173F4()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_21C2D1E94(v1, v2);
  sub_21C3A7758();
  sub_21C2D2B48(v1, v2);
  sub_21C2D1E94(v4, v3);
  sub_21C3A7758();
  return sub_21C2D2B48(v4, v3);
}

uint64_t sub_21C317474()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_21C3A8700();
  sub_21C2D1E94(v1, v2);
  sub_21C3A7758();
  sub_21C2D2B48(v1, v2);
  sub_21C2D1E94(v4, v3);
  sub_21C3A7758();
  sub_21C2D2B48(v4, v3);
  return sub_21C3A8724();
}

void sub_21C317504(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = a1[2];
  v2 = a1[3];
  sub_21C317958(*a1, a1[1]);
  if ((v3 & 1) != 0)
    sub_21C317958(v1, v2);
}

void sub_21C317568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_21C3175C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x21C3177ACLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_21C3177D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_21C317568((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_21C3178A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_21C3A74C4();
  v11 = result;
  if (result)
  {
    result = sub_21C3A74E8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_21C3A74DC();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_21C317568(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_21C317958(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_21C3179A4()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_21C3179D8 + *((int *)qword_21C317BB0 + (v0 >> 62))))();
}

uint64_t sub_21C3179E8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_21C317BD4()
{
  unint64_t result;

  result = qword_25525D070;
  if (!qword_25525D070)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardRawDataRequest.Response, &type metadata for MobileNationalIDCardRawDataRequest.Response);
    atomic_store(result, (unint64_t *)&qword_25525D070);
  }
  return result;
}

uint64_t _s8ResponseVwxx(uint64_t a1)
{
  sub_21C2D2B48(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return sub_21C2D2B48(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t *_s8ResponseVwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_21C2D1E94(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v7 = a2[2];
  v6 = a2[3];
  sub_21C2D1E94(v7, v6);
  a1[2] = v7;
  a1[3] = v6;
  return a1;
}

uint64_t *_s8ResponseVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *a2;
  v5 = a2[1];
  sub_21C2D1E94(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_21C2D2B48(v6, v7);
  v9 = a2[2];
  v8 = a2[3];
  sub_21C2D1E94(v9, v8);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  sub_21C2D2B48(v10, v11);
  return a1;
}

uint64_t *_s8ResponseVwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_21C2D2B48(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_21C2D2B48(v6, v7);
  return a1;
}

uint64_t _s8ResponseVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s8ResponseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileNationalIDCardRawDataRequest.Response()
{
  return &type metadata for MobileNationalIDCardRawDataRequest.Response;
}

void MobileNationalIDCardDisplayRequest.Response.validationOutcome.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t MobileNationalIDCardDisplayRequest.Response.hash(into:)()
{
  return sub_21C3A870C();
}

BOOL static MobileNationalIDCardDisplayRequest.Response.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileNationalIDCardDisplayRequest.Response.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C317E88()
{
  unint64_t result;

  result = qword_25525D078;
  if (!qword_25525D078)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardDisplayRequest.Response, &type metadata for MobileNationalIDCardDisplayRequest.Response);
    atomic_store(result, (unint64_t *)&qword_25525D078);
  }
  return result;
}

uint64_t _s8ResponseVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C317F18 + 4 * byte_21C3AE925[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C317F4C + 4 * asc_21C3AE920[v4]))();
}

uint64_t sub_21C317F4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C317F54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C317F5CLL);
  return result;
}

uint64_t sub_21C317F68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C317F70);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C317F74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C317F7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileNationalIDCardDisplayRequest.Response()
{
  return &type metadata for MobileNationalIDCardDisplayRequest.Response;
}

uint64_t MobileNationalIDCardDataRequest.Response.documentElements.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C317FA4(v1, a1);
}

uint64_t sub_21C317FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MobileNationalIDCardDataRequest.Response.hashValue.getter()
{
  _BYTE v1[72];

  sub_21C3A8700();
  MobileNationalIDCardDataRequest.Response.DocumentElements.hash(into:)((uint64_t)v1);
  return sub_21C3A8724();
}

unint64_t sub_21C318034()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525D080;
  if (!qword_25525D080)
  {
    v1 = type metadata accessor for MobileNationalIDCardDataRequest.Response();
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardDataRequest.Response, v1);
    atomic_store(result, (unint64_t *)&qword_25525D080);
  }
  return result;
}

uint64_t type metadata accessor for MobileNationalIDCardDataRequest.Response()
{
  uint64_t result;

  result = qword_25525D0E0;
  if (!qword_25525D0E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *_s8ResponseVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;

  v4 = type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_21C3A75D8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = v6[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *((_QWORD *)v13 + 1);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v15 = *(_QWORD *)v13;
      sub_21C2D1E94(*(_QWORD *)v13, *((_QWORD *)v13 + 1));
      *(_QWORD *)v12 = v15;
      *((_QWORD *)v12 + 1) = v14;
    }
    *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
    v16 = v6[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = v6[8];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_21C3A7518();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
  }
  return a1;
}

uint64_t _s8ResponseVwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v2 = sub_21C3A75D8();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v4 = type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  v5 = (uint64_t *)(a1 + *(int *)(v4 + 20));
  v6 = v5[1];
  if (v6 >> 60 != 15)
    sub_21C2D2B48(*v5, v6);
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(v4 + 32);
  v8 = sub_21C3A7518();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

char *_s8ResponseVwcp_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  v8 = v7[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_QWORD *)v10 + 1);
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  else
  {
    v12 = *(_QWORD *)v10;
    sub_21C2D1E94(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
    *(_QWORD *)v9 = v12;
    *((_QWORD *)v9 + 1) = v11;
  }
  *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
  v13 = v7[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = v7[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_21C3A7518();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  a1[v7[9]] = a2[v7[9]];
  return a1;
}

char *_s8ResponseVwca_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  v11 = v10[5];
  v12 = (uint64_t *)&a1[v11];
  v13 = (uint64_t *)&a2[v11];
  v14 = *(_QWORD *)&a2[v11 + 8];
  if (*(_QWORD *)&a1[v11 + 8] >> 60 == 15)
  {
    if (v14 >> 60 != 15)
    {
      v15 = *v13;
      sub_21C2D1E94(v15, v14);
      *v12 = v15;
      v12[1] = v14;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v14 >> 60 == 15)
  {
    sub_21C2EF04C((uint64_t)v12);
LABEL_12:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    goto LABEL_14;
  }
  v16 = *v13;
  sub_21C2D1E94(v16, v14);
  v17 = *v12;
  v18 = v12[1];
  *v12 = v16;
  v12[1] = v14;
  sub_21C2D2B48(v17, v18);
LABEL_14:
  *(_QWORD *)&a1[v10[6]] = *(_QWORD *)&a2[v10[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v10[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *(_QWORD *)v20 = v22;
  v23 = v10[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_21C3A7518();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_19;
  }
  if (v30)
  {
LABEL_19:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_20:
  a1[v10[9]] = a2[v10[9]];
  return a1;
}

char *_s8ResponseVwtk(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = (int *)type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
  *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
  v8 = v7[7];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v9[8] = v10[8];
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v11 = v7[8];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_21C3A7518();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  a1[v7[9]] = a2[v7[9]];
  return a1;
}

char *_s8ResponseVwta_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;

  v4 = sub_21C3A75D8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BA10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
LABEL_7:
  v10 = (int *)type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  v11 = v10[5];
  v12 = (uint64_t)&a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)&a1[v11 + 8];
  if (v14 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    goto LABEL_12;
  }
  v15 = *((_QWORD *)v13 + 1);
  if (v15 >> 60 == 15)
  {
    sub_21C2EF04C(v12);
    goto LABEL_10;
  }
  v16 = *(_QWORD *)v12;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v15;
  sub_21C2D2B48(v16, v14);
LABEL_12:
  *(_QWORD *)&a1[v10[6]] = *(_QWORD *)&a2[v10[6]];
  swift_bridgeObjectRelease();
  v17 = v10[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = v10[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_21C3A7518();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_17;
  }
  if (v27)
  {
LABEL_17:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_18:
  a1[v10[9]] = a2[v10[9]];
  return a1;
}

uint64_t _s8ResponseVwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C318BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s8ResponseVwst_1()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C318C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_21C318C5C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static MobileNationalIDCardDisplayRequest.Options.ValidationMode.check.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

BOOL static MobileNationalIDCardDisplayRequest.Options.ValidationMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void static MobileNationalIDCardDisplayRequest.Options.ValidationMode.checkMultiple.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static MobileNationalIDCardDisplayRequest.Options.ValidationMode.confirm.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void MobileNationalIDCardDisplayRequest.Options.ValidationMode.internalValidationMode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t MobileNationalIDCardDisplayRequest.Options.ValidationMode.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileNationalIDCardDisplayRequest.Options.ValidationMode.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C318D74()
{
  unint64_t result;

  result = qword_25525D118;
  if (!qword_25525D118)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileNationalIDCardDisplayRequest.Options.ValidationMode, &type metadata for MobileNationalIDCardDisplayRequest.Options.ValidationMode);
    atomic_store(result, (unint64_t *)&qword_25525D118);
  }
  return result;
}

uint64_t _s14ValidationModeVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C318E04 + 4 * byte_21C3AEA2D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C318E38 + 4 * asc_21C3AEA28[v4]))();
}

uint64_t sub_21C318E38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C318E40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C318E48);
  return result;
}

uint64_t sub_21C318E54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C318E5CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C318E60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C318E68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileNationalIDCardDisplayRequest.Options.ValidationMode()
{
  return &type metadata for MobileNationalIDCardDisplayRequest.Options.ValidationMode;
}

_BYTE *static PaymentCycleInternal.internalize(_:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL static PaymentCycleInternal.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PaymentCycleInternal.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t sub_21C318ECC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x796C68746E6F6DLL;
  if (*v0 != 1)
    v1 = 0x796C72616579;
  if (*v0)
    return v1;
  else
    return 0x796C6B656577;
}

uint64_t sub_21C318F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C31C248(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C318F44()
{
  sub_21C3192E8();
  return sub_21C3A8754();
}

uint64_t sub_21C318F6C()
{
  sub_21C3192E8();
  return sub_21C3A8760();
}

uint64_t sub_21C318F94()
{
  sub_21C319370();
  return sub_21C3A8754();
}

uint64_t sub_21C318FBC()
{
  sub_21C319370();
  return sub_21C3A8760();
}

uint64_t sub_21C318FE4()
{
  sub_21C3193B4();
  return sub_21C3A8754();
}

uint64_t sub_21C31900C()
{
  sub_21C3193B4();
  return sub_21C3A8760();
}

uint64_t sub_21C319034()
{
  sub_21C31932C();
  return sub_21C3A8754();
}

uint64_t sub_21C31905C()
{
  sub_21C31932C();
  return sub_21C3A8760();
}

uint64_t PaymentCycleInternal.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D120);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D128);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D130);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D138);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C3192E8();
  sub_21C3A8748();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_21C319370();
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_21C31932C();
      v16 = v21;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_21C3193B4();
    sub_21C3A85A4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_21C3192E8()
{
  unint64_t result;

  result = qword_25525D140;
  if (!qword_25525D140)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF81C, &type metadata for PaymentCycleInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D140);
  }
  return result;
}

unint64_t sub_21C31932C()
{
  unint64_t result;

  result = qword_25525D148;
  if (!qword_25525D148)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF7CC, &type metadata for PaymentCycleInternal.YearlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D148);
  }
  return result;
}

unint64_t sub_21C319370()
{
  unint64_t result;

  result = qword_25525D150;
  if (!qword_25525D150)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF77C, &type metadata for PaymentCycleInternal.MonthlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D150);
  }
  return result;
}

unint64_t sub_21C3193B4()
{
  unint64_t result;

  result = qword_25525D158;
  if (!qword_25525D158)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF72C, &type metadata for PaymentCycleInternal.WeeklyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D158);
  }
  return result;
}

uint64_t PaymentCycleInternal.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t PaymentCycleInternal.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D160);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D168);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D170);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D178);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C3192E8();
  v13 = v41;
  sub_21C3A873C();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_21C3A8598();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_21C3A840C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
    *v25 = &type metadata for PaymentCycleInternal;
    sub_21C3A8520();
    sub_21C3A8400();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_21C319370();
      v20 = v9;
      sub_21C3A8514();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_21C31932C();
      v28 = v15;
      sub_21C3A8514();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_21C3193B4();
    sub_21C3A8514();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_21C319880@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return PaymentCycleInternal.init(from:)(a1, a2);
}

uint64_t sub_21C319894(_QWORD *a1)
{
  return PaymentCycleInternal.encode(to:)(a1);
}

uint64_t static TransactionAmountDescriptionInternal.internalize(_:)(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_21C3198D8 + 4 * byte_21C3AEAC0[*(unsigned __int8 *)(a1 + 32)]))();
}

void sub_21C3198D8(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  unsigned int v4;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = v2;
}

uint64_t sub_21C319940(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21C319978 + 4 * byte_21C3AEAC6[a1]))(0xD000000000000010, 0x800000021C3BA8B0);
}

uint64_t sub_21C319978()
{
  return 0x6772616863727573;
}

uint64_t sub_21C31999C()
{
  return 0x6D6C6C6174736E69;
}

uint64_t sub_21C3199BC()
{
  return 0x68737265626D656DLL;
}

uint64_t sub_21C3199D8(uint64_t a1)
{
  return a1 + 6;
}

uint64_t sub_21C319A0C()
{
  unsigned __int8 *v0;

  return sub_21C319940(*v0);
}

uint64_t sub_21C319A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C31C38C(a1, a2);
  *a3 = result;
  return result;
}

void sub_21C319A38(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_21C319A44()
{
  sub_21C31A538();
  return sub_21C3A8754();
}

uint64_t sub_21C319A6C()
{
  sub_21C31A538();
  return sub_21C3A8760();
}

uint64_t sub_21C319A94()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746E756F6D61;
  if (*v0 != 1)
    v1 = 0x73746E656D796170;
  if (*v0)
    return v1;
  else
    return 12383;
}

uint64_t sub_21C319AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C31C694(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C319B04()
{
  sub_21C31A6D0();
  return sub_21C3A8754();
}

uint64_t sub_21C319B2C()
{
  sub_21C31A6D0();
  return sub_21C3A8760();
}

uint64_t sub_21C319B54()
{
  sub_21C31A648();
  return sub_21C3A8754();
}

uint64_t sub_21C319B7C()
{
  sub_21C31A648();
  return sub_21C3A8760();
}

uint64_t sub_21C319BA4()
{
  sub_21C31A604();
  return sub_21C3A8754();
}

uint64_t sub_21C319BCC()
{
  sub_21C31A604();
  return sub_21C3A8760();
}

uint64_t sub_21C319BF4()
{
  sub_21C31A5C0();
  return sub_21C3A8754();
}

uint64_t sub_21C319C1C()
{
  sub_21C31A5C0();
  return sub_21C3A8760();
}

uint64_t sub_21C319C44()
{
  sub_21C31A57C();
  return sub_21C3A8754();
}

uint64_t sub_21C319C6C()
{
  sub_21C31A57C();
  return sub_21C3A8760();
}

uint64_t sub_21C319C94()
{
  sub_21C31A714();
  return sub_21C3A8754();
}

uint64_t sub_21C319CBC()
{
  sub_21C31A714();
  return sub_21C3A8760();
}

uint64_t sub_21C319CE4()
{
  sub_21C31A758();
  return sub_21C3A8754();
}

uint64_t sub_21C319D0C()
{
  sub_21C31A758();
  return sub_21C3A8760();
}

void TransactionAmountDescriptionInternal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D180);
  v17 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v16 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D188);
  v14[3] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v14[2] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D190);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v26 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D198);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v23 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D1A0);
  v19 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v28 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D1A8);
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v20 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D1B0);
  MEMORY[0x24BDAC7A8](v11);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D1B8);
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v12 = *(_QWORD *)(v1 + 16);
  v32 = *(_QWORD *)(v1 + 8);
  v33 = v12;
  v31 = *(_QWORD *)(v1 + 24);
  v13 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C31A538();
  sub_21C3A8748();
  __asm { BR              X9 }
}

uint64_t sub_21C319FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 108) = 0;
  sub_21C31A758();
  v5 = *(_QWORD *)(v4 - 120);
  sub_21C3A85A4();
  sub_21C3A85F8();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v1, v5);
}

void sub_21C31A458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(v2 - 144) | *(_QWORD *)(v2 - 152) | v0 | *(_QWORD *)(v2 - 160))
  {
    *(_BYTE *)(v2 - 108) = 6;
    sub_21C31A57C();
    v3 = *(_QWORD *)(v2 - 280);
    v4 = *(_QWORD *)(v2 - 120);
    sub_21C3A85A4();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 272) + 8))(v3, *(_QWORD *)(v2 - 264));
  }
  else
  {
    *(_BYTE *)(v2 - 108) = 5;
    sub_21C31A5C0();
    v5 = *(_QWORD *)(v2 - 304);
    v4 = *(_QWORD *)(v2 - 120);
    sub_21C3A85A4();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 296) + 8))(v5, *(_QWORD *)(v2 - 288));
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v1, v4);
  JUMPOUT(0x21C31A430);
}

unint64_t sub_21C31A538()
{
  unint64_t result;

  result = qword_25525D1C0;
  if (!qword_25525D1C0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF6DC, &type metadata for TransactionAmountDescriptionInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D1C0);
  }
  return result;
}

unint64_t sub_21C31A57C()
{
  unint64_t result;

  result = qword_25525D1C8;
  if (!qword_25525D1C8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF68C, &type metadata for TransactionAmountDescriptionInternal.PreauthorizationReleaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D1C8);
  }
  return result;
}

unint64_t sub_21C31A5C0()
{
  unint64_t result;

  result = qword_25525D1D0;
  if (!qword_25525D1D0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF63C, &type metadata for TransactionAmountDescriptionInternal.PreauthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D1D0);
  }
  return result;
}

unint64_t sub_21C31A604()
{
  unint64_t result;

  result = qword_25525D1D8;
  if (!qword_25525D1D8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF5EC, &type metadata for TransactionAmountDescriptionInternal.PreauthorizationAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D1D8);
  }
  return result;
}

unint64_t sub_21C31A648()
{
  unint64_t result;

  result = qword_25525D1E8;
  if (!qword_25525D1E8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF59C, &type metadata for TransactionAmountDescriptionInternal.MembershipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D1E8);
  }
  return result;
}

unint64_t sub_21C31A68C()
{
  unint64_t result;

  result = qword_25525D1F0;
  if (!qword_25525D1F0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCycleInternal, &type metadata for PaymentCycleInternal);
    atomic_store(result, (unint64_t *)&qword_25525D1F0);
  }
  return result;
}

unint64_t sub_21C31A6D0()
{
  unint64_t result;

  result = qword_25525D1F8;
  if (!qword_25525D1F8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF54C, &type metadata for TransactionAmountDescriptionInternal.InstallmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D1F8);
  }
  return result;
}

unint64_t sub_21C31A714()
{
  unint64_t result;

  result = qword_25525D200;
  if (!qword_25525D200)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF4FC, &type metadata for TransactionAmountDescriptionInternal.SurchargeAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D200);
  }
  return result;
}

unint64_t sub_21C31A758()
{
  unint64_t result;

  result = qword_25525D208;
  if (!qword_25525D208)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF4AC, &type metadata for TransactionAmountDescriptionInternal.SurchargePercentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D208);
  }
  return result;
}

uint64_t TransactionAmountDescriptionInternal.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[6];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v37 = a2;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D210);
  v31 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v36 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D218);
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D220);
  v26[4] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v41 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D228);
  v26[3] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v34 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D230);
  v33 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D238);
  v26[5] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v38 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D240);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D248);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_21C31A538();
  v19 = v44;
  sub_21C3A873C();
  if (!v19)
  {
    v26[2] = v13;
    v26[0] = v11;
    v26[1] = v10;
    v44 = 0;
    v20 = sub_21C3A8598();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X10 }
    v21 = v14;
    v22 = sub_21C3A840C();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
    *v24 = &type metadata for TransactionAmountDescriptionInternal;
    sub_21C3A8520();
    sub_21C3A8400();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v21);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_21C31B1E0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for Decimal(255);
    result = MEMORY[0x22077AECC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21C31B220()
{
  unint64_t result;

  result = qword_25525D258;
  if (!qword_25525D258)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCycleInternal, &type metadata for PaymentCycleInternal);
    atomic_store(result, (unint64_t *)&qword_25525D258);
  }
  return result;
}

uint64_t sub_21C31B264@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TransactionAmountDescriptionInternal.init(from:)(a1, a2);
}

void sub_21C31B278(_QWORD *a1)
{
  TransactionAmountDescriptionInternal.encode(to:)(a1);
}

void TransactionAmountDescriptionInternal.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_21C31B2CC()
{
  sub_21C3A83DC();
  sub_21C3A7F8C();
  sub_21C3A8178();
  sub_21C3A7F8C();
  return 0;
}

void sub_21C31B580()
{
  JUMPOUT(0x21C31B564);
}

unint64_t sub_21C31B5CC()
{
  unint64_t result;

  result = qword_25525D260;
  if (!qword_25525D260)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PaymentCycleInternal, &type metadata for PaymentCycleInternal);
    atomic_store(result, (unint64_t *)&qword_25525D260);
  }
  return result;
}

ValueMetadata *type metadata accessor for PaymentCycleInternal()
{
  return &type metadata for PaymentCycleInternal;
}

ValueMetadata *type metadata accessor for TransactionAmountDescriptionInternal()
{
  return &type metadata for TransactionAmountDescriptionInternal;
}

uint64_t getEnumTagSinglePayload for TransactionAmountDescriptionInternal.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionAmountDescriptionInternal.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_21C31B714 + 4 * byte_21C3AEAEC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_21C31B748 + 4 * byte_21C3AEAE7[v4]))();
}

uint64_t sub_21C31B748(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C31B750(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C31B758);
  return result;
}

uint64_t sub_21C31B764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C31B76CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_21C31B770(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C31B778(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransactionAmountDescriptionInternal.CodingKeys()
{
  return &type metadata for TransactionAmountDescriptionInternal.CodingKeys;
}

ValueMetadata *type metadata accessor for TransactionAmountDescriptionInternal.SurchargePercentCodingKeys()
{
  return &type metadata for TransactionAmountDescriptionInternal.SurchargePercentCodingKeys;
}

ValueMetadata *type metadata accessor for TransactionAmountDescriptionInternal.SurchargeAmountCodingKeys()
{
  return &type metadata for TransactionAmountDescriptionInternal.SurchargeAmountCodingKeys;
}

ValueMetadata *type metadata accessor for TransactionAmountDescriptionInternal.InstallmentCodingKeys()
{
  return &type metadata for TransactionAmountDescriptionInternal.InstallmentCodingKeys;
}

ValueMetadata *type metadata accessor for TransactionAmountDescriptionInternal.MembershipCodingKeys()
{
  return &type metadata for TransactionAmountDescriptionInternal.MembershipCodingKeys;
}

uint64_t _s15ProximityReader36TransactionAmountDescriptionInternalO26SurchargePercentCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C31B818 + 4 * byte_21C3AEAF1[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C31B838 + 4 * byte_21C3AEAF6[v4]))();
}

_BYTE *sub_21C31B818(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C31B838(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C31B840(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C31B848(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C31B850(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C31B858(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TransactionAmountDescriptionInternal.PreauthorizationAmountCodingKeys()
{
  return &type metadata for TransactionAmountDescriptionInternal.PreauthorizationAmountCodingKeys;
}

ValueMetadata *type metadata accessor for TransactionAmountDescriptionInternal.PreauthorizationCodingKeys()
{
  return &type metadata for TransactionAmountDescriptionInternal.PreauthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for TransactionAmountDescriptionInternal.PreauthorizationReleaseCodingKeys()
{
  return &type metadata for TransactionAmountDescriptionInternal.PreauthorizationReleaseCodingKeys;
}

uint64_t _s15ProximityReader20PaymentCycleInternalOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C31B8E0 + 4 * byte_21C3AEB00[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C31B914 + 4 * byte_21C3AEAFB[v4]))();
}

uint64_t sub_21C31B914(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C31B91C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C31B924);
  return result;
}

uint64_t sub_21C31B930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C31B938);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C31B93C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C31B944(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaymentCycleInternal.CodingKeys()
{
  return &type metadata for PaymentCycleInternal.CodingKeys;
}

ValueMetadata *type metadata accessor for PaymentCycleInternal.WeeklyCodingKeys()
{
  return &type metadata for PaymentCycleInternal.WeeklyCodingKeys;
}

ValueMetadata *type metadata accessor for PaymentCycleInternal.MonthlyCodingKeys()
{
  return &type metadata for PaymentCycleInternal.MonthlyCodingKeys;
}

ValueMetadata *type metadata accessor for PaymentCycleInternal.YearlyCodingKeys()
{
  return &type metadata for PaymentCycleInternal.YearlyCodingKeys;
}

unint64_t sub_21C31B994()
{
  unint64_t result;

  result = qword_25525D268;
  if (!qword_25525D268)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEF94, &type metadata for PaymentCycleInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D268);
  }
  return result;
}

unint64_t sub_21C31B9DC()
{
  unint64_t result;

  result = qword_25525D270;
  if (!qword_25525D270)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF0EC, &type metadata for TransactionAmountDescriptionInternal.PreauthorizationAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D270);
  }
  return result;
}

unint64_t sub_21C31BA24()
{
  unint64_t result;

  result = qword_25525D278;
  if (!qword_25525D278)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF1A4, &type metadata for TransactionAmountDescriptionInternal.MembershipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D278);
  }
  return result;
}

unint64_t sub_21C31BA6C()
{
  unint64_t result;

  result = qword_25525D280;
  if (!qword_25525D280)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF25C, &type metadata for TransactionAmountDescriptionInternal.InstallmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D280);
  }
  return result;
}

unint64_t sub_21C31BAB4()
{
  unint64_t result;

  result = qword_25525D288;
  if (!qword_25525D288)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF314, &type metadata for TransactionAmountDescriptionInternal.SurchargeAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D288);
  }
  return result;
}

unint64_t sub_21C31BAFC()
{
  unint64_t result;

  result = qword_25525D290;
  if (!qword_25525D290)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF3CC, &type metadata for TransactionAmountDescriptionInternal.SurchargePercentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D290);
  }
  return result;
}

unint64_t sub_21C31BB44()
{
  unint64_t result;

  result = qword_25525D298;
  if (!qword_25525D298)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF484, &type metadata for TransactionAmountDescriptionInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D298);
  }
  return result;
}

unint64_t sub_21C31BB8C()
{
  unint64_t result;

  result = qword_25525D2A0;
  if (!qword_25525D2A0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF33C, &type metadata for TransactionAmountDescriptionInternal.SurchargePercentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2A0);
  }
  return result;
}

unint64_t sub_21C31BBD4()
{
  unint64_t result;

  result = qword_25525D2A8;
  if (!qword_25525D2A8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF364, &type metadata for TransactionAmountDescriptionInternal.SurchargePercentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2A8);
  }
  return result;
}

unint64_t sub_21C31BC1C()
{
  unint64_t result;

  result = qword_25525D2B0;
  if (!qword_25525D2B0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF284, &type metadata for TransactionAmountDescriptionInternal.SurchargeAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2B0);
  }
  return result;
}

unint64_t sub_21C31BC64()
{
  unint64_t result;

  result = qword_25525D2B8;
  if (!qword_25525D2B8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF2AC, &type metadata for TransactionAmountDescriptionInternal.SurchargeAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2B8);
  }
  return result;
}

unint64_t sub_21C31BCAC()
{
  unint64_t result;

  result = qword_25525D2C0;
  if (!qword_25525D2C0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF1CC, &type metadata for TransactionAmountDescriptionInternal.InstallmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2C0);
  }
  return result;
}

unint64_t sub_21C31BCF4()
{
  unint64_t result;

  result = qword_25525D2C8;
  if (!qword_25525D2C8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF1F4, &type metadata for TransactionAmountDescriptionInternal.InstallmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2C8);
  }
  return result;
}

unint64_t sub_21C31BD3C()
{
  unint64_t result;

  result = qword_25525D2D0;
  if (!qword_25525D2D0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF114, &type metadata for TransactionAmountDescriptionInternal.MembershipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2D0);
  }
  return result;
}

unint64_t sub_21C31BD84()
{
  unint64_t result;

  result = qword_25525D2D8;
  if (!qword_25525D2D8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF13C, &type metadata for TransactionAmountDescriptionInternal.MembershipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2D8);
  }
  return result;
}

unint64_t sub_21C31BDCC()
{
  unint64_t result;

  result = qword_25525D2E0;
  if (!qword_25525D2E0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF05C, &type metadata for TransactionAmountDescriptionInternal.PreauthorizationAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2E0);
  }
  return result;
}

unint64_t sub_21C31BE14()
{
  unint64_t result;

  result = qword_25525D2E8;
  if (!qword_25525D2E8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF084, &type metadata for TransactionAmountDescriptionInternal.PreauthorizationAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2E8);
  }
  return result;
}

unint64_t sub_21C31BE5C()
{
  unint64_t result;

  result = qword_25525D2F0;
  if (!qword_25525D2F0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF00C, &type metadata for TransactionAmountDescriptionInternal.PreauthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2F0);
  }
  return result;
}

unint64_t sub_21C31BEA4()
{
  unint64_t result;

  result = qword_25525D2F8;
  if (!qword_25525D2F8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF034, &type metadata for TransactionAmountDescriptionInternal.PreauthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D2F8);
  }
  return result;
}

unint64_t sub_21C31BEEC()
{
  unint64_t result;

  result = qword_25525D300;
  if (!qword_25525D300)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEFBC, &type metadata for TransactionAmountDescriptionInternal.PreauthorizationReleaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D300);
  }
  return result;
}

unint64_t sub_21C31BF34()
{
  unint64_t result;

  result = qword_25525D308;
  if (!qword_25525D308)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEFE4, &type metadata for TransactionAmountDescriptionInternal.PreauthorizationReleaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D308);
  }
  return result;
}

unint64_t sub_21C31BF7C()
{
  unint64_t result;

  result = qword_25525D310;
  if (!qword_25525D310)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF3F4, &type metadata for TransactionAmountDescriptionInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D310);
  }
  return result;
}

unint64_t sub_21C31BFC4()
{
  unint64_t result;

  result = qword_25525D318;
  if (!qword_25525D318)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF41C, &type metadata for TransactionAmountDescriptionInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D318);
  }
  return result;
}

unint64_t sub_21C31C00C()
{
  unint64_t result;

  result = qword_25525D320;
  if (!qword_25525D320)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEEB4, &type metadata for PaymentCycleInternal.WeeklyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D320);
  }
  return result;
}

unint64_t sub_21C31C054()
{
  unint64_t result;

  result = qword_25525D328;
  if (!qword_25525D328)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEEDC, &type metadata for PaymentCycleInternal.WeeklyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D328);
  }
  return result;
}

unint64_t sub_21C31C09C()
{
  unint64_t result;

  result = qword_25525D330;
  if (!qword_25525D330)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEE64, &type metadata for PaymentCycleInternal.MonthlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D330);
  }
  return result;
}

unint64_t sub_21C31C0E4()
{
  unint64_t result;

  result = qword_25525D338;
  if (!qword_25525D338)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEE8C, &type metadata for PaymentCycleInternal.MonthlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D338);
  }
  return result;
}

unint64_t sub_21C31C12C()
{
  unint64_t result;

  result = qword_25525D340;
  if (!qword_25525D340)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEE14, &type metadata for PaymentCycleInternal.YearlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D340);
  }
  return result;
}

unint64_t sub_21C31C174()
{
  unint64_t result;

  result = qword_25525D348;
  if (!qword_25525D348)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEE3C, &type metadata for PaymentCycleInternal.YearlyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D348);
  }
  return result;
}

unint64_t sub_21C31C1BC()
{
  unint64_t result;

  result = qword_25525D350;
  if (!qword_25525D350)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEF04, &type metadata for PaymentCycleInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D350);
  }
  return result;
}

unint64_t sub_21C31C204()
{
  unint64_t result;

  result = qword_25525D358;
  if (!qword_25525D358)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AEF2C, &type metadata for PaymentCycleInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D358);
  }
  return result;
}

uint64_t sub_21C31C248(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x796C6B656577 && a2 == 0xE600000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x796C68746E6F6DLL && a2 == 0xE700000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x796C72616579 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21C31C38C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000021C3BA8B0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6772616863727573 && a2 == 0xEF746E756F6D4165 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6C6C6174736E69 && a2 == 0xEB00000000746E65 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x68737265626D656DLL && a2 == 0xEA00000000007069 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000021C3BA8D0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021C3BA810 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000021C3BA7F0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_21C31C694(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746E656D796170 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21C31C7C8(uint64_t a1)
{
  return sub_21C31C7DC(a1);
}

uint64_t sub_21C31C7DC(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_21C31E1F4(0, v2, 0);
    result = v10;
    v4 = (_BYTE *)(a1 + 40);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *v4;
      v11 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_21C31E1F4(v7 > 1, v8 + 1, 1);
        result = v11;
      }
      v4 += 16;
      *(_QWORD *)(result + 16) = v8 + 1;
      v9 = result + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_BYTE *)(v9 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t static MobileDriversLicenseReadRequestInternal.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t MobileDriversLicenseReadRequestInternal.retainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseReadRequestInternal.nonRetainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseReadRequestInternal.documentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C2FEB9C(v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_documentType, a1);
}

uint64_t MobileDriversLicenseReadRequestInternal.hostPreferredLocaleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_hostPreferredLocaleIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseReadRequestInternal.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_sessionIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseReadRequestInternal.description.getter()
{
  uint64_t v0;

  sub_21C3A83DC();
  sub_21C3A7F8C();
  swift_bridgeObjectRetain();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  swift_bridgeObjectRetain();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  sub_21C398624(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements));
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  sub_21C398624(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_nonRetainedElements));
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  return 0;
}

void MobileDriversLicenseReadRequestInternal.__allocating_init(_:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v4 = v3;
  v7 = type metadata accessor for IdentityDocumentType();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_bridgeObjectRetain();
  v11 = sub_21C31C7DC(v10);
  swift_bridgeObjectRelease();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_21C31C7DC(v12);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v14 = sub_21C3A7848();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  v15 = objc_allocWithZone(v4);
  MobileDriversLicenseReadRequestInternal.init(retainedElements:nonRetainedElements:documentType:sessionIdentifier:)(v11, v13, (uint64_t)v9, a2, a3);
}

uint64_t MobileDriversLicenseReadRequestInternal.__allocating_init(_:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = v3;
  v8 = type metadata accessor for IdentityDocumentType();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MobileNationalIDCardRawDataRequest();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_21C31C7DC(v11);
  swift_bridgeObjectRelease();
  v13 = swift_bridgeObjectRetain();
  v14 = sub_21C31C7DC(v13);
  swift_bridgeObjectRelease();
  v15 = sub_21C3A7848();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v10, a1, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
  v17 = objc_allocWithZone(v4);
  MobileDriversLicenseReadRequestInternal.init(retainedElements:nonRetainedElements:documentType:sessionIdentifier:)(v12, v14, (uint64_t)v10, a2, a3);
  v19 = v18;
  sub_21C2ED424(a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardRawDataRequest);
  return v19;
}

void MobileDriversLicenseReadRequestInternal.__allocating_init(retainedElements:nonRetainedElements:documentType:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  MobileDriversLicenseReadRequestInternal.init(retainedElements:nonRetainedElements:documentType:sessionIdentifier:)(a1, a2, a3, a4, a5);
}

void MobileDriversLicenseReadRequestInternal.init(retainedElements:nonRetainedElements:documentType:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  objc_class *ObjectType;
  void *v13;
  char *v14;
  id v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  objc_super v22;

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements] = a1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_nonRetainedElements] = a2;
  sub_21C2FEB9C(a3, (uint64_t)&v6[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_documentType]);
  v13 = (void *)objc_opt_self();
  v14 = v6;
  v15 = objc_msgSend(v13, sel_mainBundle);
  v16 = objc_msgSend(v15, sel_preferredLocalizations);

  v17 = (_QWORD *)sub_21C3A8070();
  if (v17[2])
  {
    v19 = v17[4];
    v18 = v17[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = &v14[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_hostPreferredLocaleIdentifier];
    *(_QWORD *)v20 = v19;
    *((_QWORD *)v20 + 1) = v18;
    v21 = &v14[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_sessionIdentifier];
    *(_QWORD *)v21 = a4;
    *((_QWORD *)v21 + 1) = a5;

    v22.receiver = v14;
    v22.super_class = ObjectType;
    objc_msgSendSuper2(&v22, sel_init);
    sub_21C2ED424(a3, (uint64_t (*)(_QWORD))type metadata accessor for IdentityDocumentType);
  }
  else
  {
    __break(1u);
  }
}

id MobileDriversLicenseReadRequestInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseReadRequestInternal.init(coder:)(a1);
}

id MobileDriversLicenseReadRequestInternal.init(coder:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v19;
  objc_super v20;
  char *v21;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_21C2D32C0();
  v4 = v1;
  v5 = sub_21C3A825C();
  if (!v5)
  {

LABEL_10:
    swift_deallocPartialClassInstance();
    return 0;
  }
  v6 = (void *)v5;
  v7 = sub_21C3A774C();
  v9 = v8;

  v10 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  sub_21C2D1E94(v7, v9);
  v11 = sub_21C2D3524();
  sub_21C2D2B48(v7, v9);
  if (!v11)
  {

LABEL_9:
    sub_21C2D2B48(v7, v9);
    goto LABEL_10;
  }
  sub_21C2D1198(&qword_25525D378, (uint64_t (*)(uint64_t))type metadata accessor for MobileDriversLicenseReadRequestInternal, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseReadRequestInternal);
  sub_21C3A81F0();
  v12 = v21;
  if (!v21)
  {

    objc_msgSend(v11, sel_finishDecoding);
    goto LABEL_9;
  }
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements] = *(_QWORD *)&v21[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements];
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_nonRetainedElements] = *(_QWORD *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_nonRetainedElements];
  sub_21C2FEB9C((uint64_t)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_documentType], (uint64_t)&v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_documentType]);
  v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_hostPreferredLocaleIdentifier
                      + 8];
  v14 = &v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_hostPreferredLocaleIdentifier];
  *(_QWORD *)v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_hostPreferredLocaleIdentifier];
  *((_QWORD *)v14 + 1) = v13;
  v15 = *(_QWORD *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_sessionIdentifier + 8];
  v19 = *(_QWORD *)&v12[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_sessionIdentifier];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  v16 = &v4[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_sessionIdentifier];
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v15;

  objc_msgSend(v11, sel_finishDecoding);
  sub_21C2D2B48(v7, v9);
  v20.receiver = v4;
  v20.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v20, sel_init);

  return v17;
}

Swift::Void __swiftcall MobileDriversLicenseReadRequestInternal.encode(with:)(NSCoder with)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  swift_getObjectType();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_21C2D1198(&qword_25525D380, (uint64_t (*)(uint64_t))type metadata accessor for MobileDriversLicenseReadRequestInternal, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseReadRequestInternal);
  sub_21C3A81E4();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_21C3A7EB4();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
  }
}

id MobileDriversLicenseReadRequestInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MobileDriversLicenseReadRequestInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21C31D464(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21C31D49C + 4 * byte_21C3AF870[a1]))(0xD000000000000010, 0x800000021C3BA9F0);
}

uint64_t sub_21C31D49C(uint64_t a1)
{
  return a1 + 3;
}

uint64_t sub_21C31D4F4()
{
  unsigned __int8 *v0;

  return sub_21C31D464(*v0);
}

uint64_t sub_21C31D4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C31F090(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C31D520()
{
  sub_21C31ECF4();
  return sub_21C3A8754();
}

uint64_t sub_21C31D548()
{
  sub_21C31ECF4();
  return sub_21C3A8760();
}

id MobileDriversLicenseReadRequestInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MobileDriversLicenseReadRequestInternal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D388);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C31ECF4();
  sub_21C3A8748();
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements);
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D398);
  sub_21C31ED7C(&qword_25525D3A0, (uint64_t (*)(void))sub_21C31ED38, MEMORY[0x24BEE12A0]);
  sub_21C3A8610();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_nonRetainedElements);
    HIBYTE(v10) = 1;
    sub_21C3A8610();
    LOBYTE(v11) = 2;
    type metadata accessor for IdentityDocumentType();
    sub_21C2D1198(&qword_25525D3B0, (uint64_t (*)(uint64_t))type metadata accessor for IdentityDocumentType, (uint64_t)&protocol conformance descriptor for IdentityDocumentType);
    sub_21C3A8610();
    LOBYTE(v11) = 3;
    sub_21C3A85E0();
    LOBYTE(v11) = 4;
    sub_21C3A85E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id MobileDriversLicenseReadRequestInternal.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseReadRequestInternal.init(from:)(a1);
}

id MobileDriversLicenseReadRequestInternal.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t ObjectType;
  _QWORD *v21;
  objc_super v22;
  char v23;
  uint64_t v24;

  ObjectType = swift_getObjectType();
  v17 = type metadata accessor for IdentityDocumentType();
  MEMORY[0x24BDAC7A8](v17);
  v18 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D3B8);
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v5 = (id)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v5);
  sub_21C31ECF4();
  v6 = v1;
  v7 = (uint64_t)v21;
  sub_21C3A873C();
  if (v7)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v21 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D398);
    v23 = 0;
    sub_21C31ED7C((unint64_t *)&unk_25525D3C0, (uint64_t (*)(void))sub_21C31EDE4, MEMORY[0x24BEE12D0]);
    sub_21C3A858C();
    *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements] = v24;
    v23 = 1;
    sub_21C3A858C();
    *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_nonRetainedElements] = v24;
    LOBYTE(v24) = 2;
    sub_21C2D1198(&qword_25525D3D0, (uint64_t (*)(uint64_t))type metadata accessor for IdentityDocumentType, (uint64_t)&protocol conformance descriptor for IdentityDocumentType);
    v9 = (uint64_t)v18;
    sub_21C3A858C();
    sub_21C2FF0D8(v9, (uint64_t)&v6[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_documentType]);
    LOBYTE(v24) = 3;
    v10 = sub_21C3A855C();
    v11 = (uint64_t *)&v6[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_hostPreferredLocaleIdentifier];
    *v11 = v10;
    v11[1] = v12;
    LOBYTE(v24) = 4;
    v13 = sub_21C3A855C();
    v14 = (objc_class *)ObjectType;
    v15 = (uint64_t *)&v6[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_sessionIdentifier];
    *v15 = v13;
    v15[1] = v16;

    v22.receiver = v6;
    v22.super_class = v14;
    v5 = objc_msgSendSuper2(&v22, sel_init, v17);
    (*(void (**)(_QWORD, uint64_t))(v4 + 8))(0, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  return v5;
}

id sub_21C31DCB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  id result;

  v6 = objc_allocWithZone(v2);
  result = MobileDriversLicenseReadRequestInternal.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_21C31DD04(_QWORD *a1)
{
  return MobileDriversLicenseReadRequestInternal.encode(to:)(a1);
}

BOOL MobileDriversLicenseReadRequestInternal.isEmpty.getter()
{
  uint64_t v0;

  return !*(_QWORD *)(*(_QWORD *)(v0
                                + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements)
                    + 16)
      && *(_QWORD *)(*(_QWORD *)(v0
                               + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_nonRetainedElements)
                   + 16) == 0;
}

uint64_t MobileDriversLicenseReadRequestInternal.requestedElements.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v24 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_21C31E1D8(0, v3, 0);
    v4 = v24;
    v5 = v2 + 40;
    do
    {
      v6 = sub_21C3A7F14();
      v8 = v7;
      v10 = *(_QWORD *)(v24 + 16);
      v9 = *(_QWORD *)(v24 + 24);
      if (v10 >= v9 >> 1)
        sub_21C31E1D8(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v24 + 16) = v10 + 1;
      v11 = v24 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
      v5 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_nonRetainedElements);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v23 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_21C31E1D8(0, v13, 0);
    v14 = v23;
    v15 = v12 + 40;
    do
    {
      v16 = sub_21C3A7F14();
      v18 = v17;
      v20 = *(_QWORD *)(v23 + 16);
      v19 = *(_QWORD *)(v23 + 24);
      if (v20 >= v19 >> 1)
        sub_21C31E1D8(v19 > 1, v20 + 1, 1);
      *(_QWORD *)(v23 + 16) = v20 + 1;
      v21 = v23 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
      v15 += 16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  sub_21C31EB64(v14);
  return v4;
}

uint64_t MobileDriversLicenseReadRequestInternal.storedElements.getter()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v12 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_21C31E1D8(0, v2, 0);
    v3 = v12;
    v4 = v1 + 40;
    do
    {
      v5 = sub_21C3A7F14();
      v7 = v6;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_21C31E1D8(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return v3;
}

void MobileDriversLicenseReadRequestInternal.transferType.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21C31E05C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_sessionIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21C31E098()
{
  return MobileDriversLicenseReadRequestInternal.requestedElements.getter();
}

uint64_t sub_21C31E0B8()
{
  return MobileDriversLicenseReadRequestInternal.storedElements.getter();
}

uint64_t sub_21C31E0D8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_21C2FEB9C(*v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_documentType, a1);
}

uint64_t sub_21C31E0F0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C31E268(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21C31E10C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C31E984(a1, a2, a3, (_QWORD *)*v3, &qword_25525D438, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
  *v3 = result;
  return result;
}

uint64_t sub_21C31E138(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C31E984(a1, a2, a3, (_QWORD *)*v3, &qword_25525D448, (uint64_t (*)(_QWORD))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DrivingPrivilege);
  *v3 = result;
  return result;
}

uint64_t sub_21C31E164(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C31E3D4(a1, a2, a3, *v3, &qword_25525D428);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21C31E190(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C31E3D4(a1, a2, a3, *v3, &qword_25525D430);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21C31E1BC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C31E540(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21C31E1D8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C31E6C4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21C31E1F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C31E82C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21C31E210(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C31E984(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_25525D480, (uint64_t (*)(_QWORD))type metadata accessor for AnalyticsReporter);
  *v3 = result;
  return result;
}

uint64_t sub_21C31E23C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C31E984(a1, a2, a3, (_QWORD *)*v3, &qword_25525D458, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEEA8]);
  *v3 = result;
  return result;
}

uint64_t sub_21C31E268(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525DBC0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C31E3D4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9])
      memmove(v14, v15, 32 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v9] || v14 >= &v15[32 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C31E540(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D440);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C31E6C4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525DB10);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C31E82C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D450);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C31E984(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C31EB64(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_21C3342EC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MobileDriversLicenseReadRequestInternal()
{
  uint64_t result;

  result = qword_25525D400;
  if (!qword_25525D400)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21C31ECF4()
{
  unint64_t result;

  result = qword_25525D390;
  if (!qword_25525D390)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AFA14, &type metadata for MobileDriversLicenseReadRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D390);
  }
  return result;
}

unint64_t sub_21C31ED38()
{
  unint64_t result;

  result = qword_25525D3A8;
  if (!qword_25525D3A8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDocumentElementInternal, &type metadata for MobileDocumentElementInternal);
    atomic_store(result, (unint64_t *)&qword_25525D3A8);
  }
  return result;
}

uint64_t sub_21C31ED7C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525D398);
    v8 = a2();
    result = MEMORY[0x22077AECC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21C31EDE4()
{
  unint64_t result;

  result = qword_25525DB00;
  if (!qword_25525DB00)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDocumentElementInternal, &type metadata for MobileDocumentElementInternal);
    atomic_store(result, (unint64_t *)&qword_25525DB00);
  }
  return result;
}

uint64_t sub_21C31EE28()
{
  return type metadata accessor for MobileDriversLicenseReadRequestInternal();
}

uint64_t sub_21C31EE30()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IdentityDocumentType();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MobileDriversLicenseReadRequestInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MobileDriversLicenseReadRequestInternal.__allocating_init(retainedElements:nonRetainedElements:documentType:sessionIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of MobileDriversLicenseReadRequestInternal.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of MobileDriversLicenseReadRequestInternal.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseReadRequestInternal.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21C31EF38 + 4 * byte_21C3AF87A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21C31EF6C + 4 * byte_21C3AF875[v4]))();
}

uint64_t sub_21C31EF6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C31EF74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C31EF7CLL);
  return result;
}

uint64_t sub_21C31EF88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C31EF90);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21C31EF94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C31EF9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseReadRequestInternal.CodingKeys()
{
  return &type metadata for MobileDriversLicenseReadRequestInternal.CodingKeys;
}

unint64_t sub_21C31EFBC()
{
  unint64_t result;

  result = qword_25525D410;
  if (!qword_25525D410)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF9EC, &type metadata for MobileDriversLicenseReadRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D410);
  }
  return result;
}

unint64_t sub_21C31F004()
{
  unint64_t result;

  result = qword_25525D418;
  if (!qword_25525D418)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF95C, &type metadata for MobileDriversLicenseReadRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D418);
  }
  return result;
}

unint64_t sub_21C31F04C()
{
  unint64_t result;

  result = qword_25525D420;
  if (!qword_25525D420)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AF984, &type metadata for MobileDriversLicenseReadRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D420);
  }
  return result;
}

uint64_t sub_21C31F090(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000021C3BA9F0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000021C3BAA10 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEC00000065707954 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000021C3BAA40 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021C3BAA60)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t CardReaderErrorType.init(rawValue:)(unint64_t a1)
{
  return sub_21C3208DC(a1);
}

unint64_t sub_21C31F2C4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_21C3208DC(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t CardReaderErrorType.description.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = 0x776F6C6C41746F6ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x726F707075736E75;
      break;
    case 2:
      result = 0x456B726F7774656ELL;
      break;
    case 3:
    case 6:
    case 11:
    case 18:
      result = 0xD000000000000010;
      break;
    case 4:
      result = 0xD000000000000016;
      break;
    case 5:
      result = 0x7964616552746F6ELL;
      break;
    case 7:
      result = 0x4665726170657270;
      break;
    case 8:
      v3 = 0x726170657270;
      goto LABEL_29;
    case 9:
      result = 0xD000000000000012;
      break;
    case 10:
      result = 0x6E656B6F54707370;
      break;
    case 12:
      result = 0xD000000000000015;
      break;
    case 13:
      result = 0x6F636E49706F636ALL;
      break;
    case 14:
      result = 0xD000000000000011;
      break;
    case 15:
      result = 0x6142656369766564;
      break;
    case 16:
      result = 0xD000000000000017;
      break;
    case 17:
      result = 2037609826;
      break;
    case 19:
      result = 0xD000000000000014;
      break;
    case 20:
      result = 0xD000000000000014;
      break;
    case 21:
      result = 0xD000000000000022;
      break;
    case 22:
      result = 0x746E61686372656DLL;
      break;
    case 23:
      result = 0x4D64696C61766E69;
      break;
    case 24:
      result = 0xD000000000000019;
      break;
    case 25:
      result = 0xD000000000000012;
      break;
    case 26:
      result = 0x7365534641536F6ELL;
      break;
    case 27:
      result = 0x6C41746F4E666173;
      break;
    case 28:
      v3 = 0x646F4D666173;
LABEL_29:
      result = v3 & 0xFFFFFFFFFFFFLL | 0x4565000000000000;
      break;
    case 29:
      result = 0xD000000000000012;
      break;
    case 30:
      result = 0xD000000000000015;
      break;
    case 31:
      result = 0xD000000000000019;
      break;
    case 32:
      result = 0x6E776F6E6B6E75;
      break;
    default:
      result = sub_21C3A8670();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_21C31F6BC()
{
  uint64_t *v0;

  return CardReaderErrorType.description.getter(*v0);
}

unint64_t static CardReaderErrorInternal.UserInfoBanExpiration.getter()
{
  return 0xD000000000000011;
}

unint64_t static CardReaderErrorInternal.InvalidReaderTokenDetails.getter()
{
  return 0xD000000000000019;
}

uint64_t static CardReaderErrorInternal.ErrorDetails.getter()
{
  return 0x746544726F727265;
}

unint64_t static CardReaderErrorInternal.UnknownErrorCode.getter()
{
  return 0xD000000000000010;
}

uint64_t static CardReaderErrorInternal.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t CardReaderErrorInternal.code.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_code);
}

uint64_t CardReaderErrorInternal.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

id CardReaderErrorInternal.__allocating_init(_:userInfo:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_code] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id CardReaderErrorInternal.init(_:userInfo:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_code] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for CardReaderErrorInternal();
  return objc_msgSendSuper2(&v4, sel_init);
}

id CardReaderErrorInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CardReaderErrorInternal.init(coder:)(a1);
}

id CardReaderErrorInternal.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  void *v7;
  id v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  objc_class *v23;
  objc_super v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1;
  v7 = (void *)sub_21C3A7EB4();
  v8 = objc_msgSend(a1, sel_decodeIntegerForKey_, v7);

  v9 = sub_21C3208DC((unint64_t)v8);
  if ((v10 & 1) != 0)
  {

    if (qword_25525AAC8 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F30);
    sub_21C2F50EC(v16, (uint64_t)v5, (uint64_t *)&unk_25525B0E0);
    v17 = sub_21C3A79D4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v17) == 1)
    {

      sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v19 = sub_21C3A79BC();
      v20 = sub_21C3A81C0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_21C2CD000, v19, v20, "CardReaderErrorInternal | Failed to decode object", v21, 2u);
        MEMORY[0x22077AF8C](v21, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v17);
    }
    type metadata accessor for CardReaderErrorInternal();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_code] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525B100);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_21C3ACA90;
    v12 = sub_21C2D7704(0, (unint64_t *)&qword_25525AE20);
    *(_QWORD *)(v11 + 32) = v12;
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_21C3AA490;
    *(_QWORD *)(v13 + 32) = v12;
    *(_QWORD *)(v13 + 40) = sub_21C2D7704(0, &qword_25525D4A8);
    v14 = sub_21C3A8274();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14)
    {
      v15 = sub_21C31FB58(v14);
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
    }
    *(_QWORD *)&v6[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo] = v15;

    v23 = (objc_class *)type metadata accessor for CardReaderErrorInternal();
    v25.receiver = v6;
    v25.super_class = v23;
    v22 = objc_msgSendSuper2(&v25, sel_init);

  }
  return v22;
}

unint64_t sub_21C31FB58(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D500);
    v2 = (_QWORD *)sub_21C3A84D8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v23 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v22)
      {
LABEL_33:
        sub_21C320A10();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v22)
          goto LABEL_33;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v22)
            goto LABEL_33;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v22)
              goto LABEL_33;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v22)
                goto LABEL_33;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v22)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_21C2DCEA8(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_21C2D77EC(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_21C2DCEA8((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_21C2D775C((uint64_t)v30, &qword_25525D508);
      swift_bridgeObjectRelease();
      sub_21C320A10();
      swift_release();
      return 0;
    }
    sub_21C2D77EC((uint64_t)v31 + 8, (uint64_t)v25);
    sub_21C2D775C((uint64_t)v30, &qword_25525D508);
    sub_21C2D7828(v25, v26);
    v27 = v24;
    sub_21C2D7828(v26, v28);
    v16 = v27;
    sub_21C2D7828(v28, v29);
    sub_21C2D7828(v29, &v27);
    result = sub_21C2DC178(v16, *((uint64_t *)&v16 + 1));
    v17 = result;
    if ((v18 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v16;
      v9 = (_OWORD *)(v2[7] + 32 * v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      result = (unint64_t)sub_21C2D7828(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    result = (unint64_t)sub_21C2D7828(&v27, (_OWORD *)(v2[7] + 32 * result));
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_36;
    v2[2] = v21;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

id CardReaderErrorInternal.__allocating_init(_bridgedNSError:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CardReaderErrorInternal.init(_bridgedNSError:)(a1);
}

id CardReaderErrorInternal.init(_bridgedNSError:)(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  unint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  id v16;
  objc_super v18;

  swift_getObjectType();
  v3 = v1;
  v4 = objc_msgSend(a1, sel_domain);
  v5 = sub_21C3A7ED8();
  v7 = v6;

  sub_21C3209D0(&qword_25525D4B0, v8, (uint64_t (*)(uint64_t))type metadata accessor for CardReaderErrorInternal, (uint64_t)&protocol conformance descriptor for CardReaderErrorInternal);
  if (v5 == sub_21C3A74A0() && v7 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_10;
  }
  v12 = sub_21C3208DC((unint64_t)objc_msgSend(a1, sel_code));
  if ((v13 & 1) != 0)
  {
LABEL_10:

    type metadata accessor for CardReaderErrorInternal();
    swift_deallocPartialClassInstance();
    return 0;
  }
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_code] = v12;
  v14 = objc_msgSend(a1, sel_userInfo);
  v15 = sub_21C3A7E48();

  *(_QWORD *)&v3[OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo] = v15;
  v18.receiver = v3;
  v18.super_class = (Class)type metadata accessor for CardReaderErrorInternal();
  v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

void sub_21C320130(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_code);
  v4 = (void *)sub_21C3A7EB4();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v3, v4);

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo))
  {
    swift_bridgeObjectRetain();
    v5 = (void *)sub_21C3A7E30();
    v6 = (id)sub_21C3A7EB4();
    objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_21C3202D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_code);
  switch(v1)
  {
    case 7:
      strcpy((char *)v5, "prepareFailed");
      HIWORD(v5[1]) = -4864;
      v2 = 0x746544726F727265;
      v3 = 0xEC000000736C6961;
      goto LABEL_7;
    case 9:
      v5[0] = 0xD000000000000012;
      v5[1] = 0x800000021C3B9B70;
      v2 = 0xD000000000000019;
      v3 = 0x800000021C3B9250;
      goto LABEL_7;
    case 15:
      strcpy((char *)v5, "deviceBanned");
      BYTE5(v5[1]) = 0;
      HIWORD(v5[1]) = -5120;
      sub_21C320420();
      goto LABEL_8;
    case 32:
      strcpy((char *)v5, "unknown");
      v5[1] = 0xE700000000000000;
      v3 = 0x800000021C3B91F0;
      v2 = 0xD000000000000010;
LABEL_7:
      sub_21C320580(v2, v3);
LABEL_8:
      sub_21C3A7F8C();
      swift_bridgeObjectRelease();
      result = v5[0];
      break;
    default:
      result = CardReaderErrorType.description.getter(v1);
      break;
  }
  return result;
}

uint64_t sub_21C320420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _QWORD v10[4];

  v1 = sub_21C3A77B8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo);
  if (!v5)
    return 0;
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  v6 = sub_21C2DC178(0xD000000000000011, 0x800000021C3B9230);
  if ((v7 & 1) == 0)
    return 0;
  sub_21C2D77EC(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)v10);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v10[0] = 40;
  v10[1] = 0xE100000000000000;
  sub_21C3A7788();
  sub_21C3209D0((unint64_t *)&qword_25525D4F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
  sub_21C3A8628();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_21C3A7F8C();
  return v10[0];
}

uint64_t sub_21C320580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  _OWORD v9[2];
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo);
  if (v3)
  {
    if (*(_QWORD *)(v3 + 16))
    {
      swift_bridgeObjectRetain();
      v6 = sub_21C2DC178(a1, a2);
      if ((v7 & 1) != 0)
      {
        sub_21C2D77EC(*(_QWORD *)(v3 + 56) + 32 * v6, (uint64_t)&v12);
      }
      else
      {
        v12 = 0u;
        v13 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = 0u;
      v13 = 0u;
    }
    sub_21C2F50EC((uint64_t)&v12, (uint64_t)&v10, &qword_25525B110);
    if (v11)
    {
      sub_21C2D7828(&v10, v9);
      sub_21C3A7F8C();
      sub_21C3A8490();
      sub_21C3A7F8C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      sub_21C2D775C((uint64_t)&v12, &qword_25525B110);
    }
    else
    {
      sub_21C2D775C((uint64_t)&v12, &qword_25525B110);
    }
  }
  return 0;
}

id CardReaderErrorInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CardReaderErrorInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CardReaderErrorInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardReaderErrorInternal();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_21C320780@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  id result;

  v4 = objc_allocWithZone((Class)type metadata accessor for CardReaderErrorInternal());
  result = CardReaderErrorInternal.init(_bridgedNSError:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_21C3207C0(uint64_t a1)
{
  MEMORY[0x22077AECC](&protocol conformance descriptor for CardReaderErrorInternal, a1);
  return sub_21C3A86AC();
}

uint64_t sub_21C3207F4(uint64_t a1)
{
  MEMORY[0x22077AECC](&protocol conformance descriptor for CardReaderErrorInternal, a1);
  return sub_21C3A86A0();
}

unint64_t CardReaderErrorInternal.errorUserInfo.getter()
{
  uint64_t v0;
  unint64_t v1;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo))
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo);
  else
    v1 = sub_21C2F5FE8(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21C320878()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_code);
}

unint64_t sub_21C32088C()
{
  _QWORD *v0;
  unint64_t v1;

  if (*(_QWORD *)(*v0 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo))
    v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC15ProximityReader23CardReaderErrorInternal_userInfo);
  else
    v1 = sub_21C2F5FE8(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_21C3208DC(unint64_t result)
{
  if (result > 0x20)
    return 0;
  return result;
}

uint64_t type metadata accessor for CardReaderErrorInternal()
{
  return objc_opt_self();
}

unint64_t sub_21C320910()
{
  unint64_t result;

  result = qword_25525D4B8;
  if (!qword_25525D4B8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for CardReaderErrorType, &type metadata for CardReaderErrorType);
    atomic_store(result, (unint64_t *)&qword_25525D4B8);
  }
  return result;
}

uint64_t sub_21C320954(uint64_t a1, uint64_t a2)
{
  return sub_21C3209D0(&qword_25525D4C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for CardReaderErrorInternal, (uint64_t)&protocol conformance descriptor for CardReaderErrorInternal);
}

ValueMetadata *type metadata accessor for CardReaderErrorType()
{
  return &type metadata for CardReaderErrorType;
}

uint64_t method lookup function for CardReaderErrorInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CardReaderErrorInternal.__allocating_init(_:userInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CardReaderErrorInternal.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of CardReaderErrorInternal.__allocating_init(_bridgedNSError:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of CardReaderErrorInternal.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t sub_21C3209D0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x22077AECC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C320A10()
{
  return swift_release();
}

unint64_t IdentityUIEvent.init(rawValue:)(unint64_t a1)
{
  return sub_21C320D18(a1);
}

unint64_t sub_21C320A38@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_21C320D18(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t IdentityUIEvent.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x6F4C726564616572;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000011;
      break;
    case 2:
      result = 0xD000000000000018;
      break;
    case 3:
      result = 0xD00000000000001BLL;
      break;
    case 4:
      result = 0xD000000000000016;
      break;
    case 5:
      result = 0xD000000000000013;
      break;
    case 6:
      result = 0x6954726564616572;
      break;
    case 7:
    case 15:
    case 19:
    case 21:
      result = 0xD000000000000015;
      break;
    case 8:
      result = 0xD000000000000018;
      break;
    case 9:
      result = 0xD000000000000012;
      break;
    case 10:
      result = 0xD000000000000012;
      break;
    case 11:
      result = 0x464E726564616572;
      break;
    case 12:
      result = 0xD000000000000011;
      break;
    case 13:
      result = 0xD000000000000021;
      break;
    case 14:
      result = 0xD000000000000012;
      break;
    case 16:
      result = 0x636E614364616572;
      break;
    case 17:
      result = 0x4449556563726F66;
      break;
    case 18:
      result = 0x6F4352516E616373;
      break;
    case 20:
      result = 0xD000000000000014;
      break;
    default:
      result = sub_21C3A8670();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_21C320CF4()
{
  uint64_t *v0;

  return IdentityUIEvent.description.getter(*v0);
}

unint64_t IdentityUIButton.init(rawValue:)(unint64_t a1)
{
  return sub_21C2D9004(a1);
}

unint64_t sub_21C320D18(unint64_t result)
{
  if (result > 0x15)
    return 0;
  return result;
}

unint64_t sub_21C320D2C()
{
  unint64_t result;

  result = qword_25525D510;
  if (!qword_25525D510)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityUIEvent, &type metadata for IdentityUIEvent);
    atomic_store(result, (unint64_t *)&qword_25525D510);
  }
  return result;
}

unint64_t sub_21C320D74()
{
  unint64_t result;

  result = qword_25525D518;
  if (!qword_25525D518)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityUIButton, &type metadata for IdentityUIButton);
    atomic_store(result, (unint64_t *)&qword_25525D518);
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityUIEvent()
{
  return &type metadata for IdentityUIEvent;
}

ValueMetadata *type metadata accessor for IdentityUIButton()
{
  return &type metadata for IdentityUIButton;
}

uint64_t FeatureFlagProvider.isEnabled(_:)()
{
  uint64_t v0;
  char v1;
  _QWORD v3[5];

  v3[3] = &type metadata for FeatureFlagsKey;
  v3[4] = sub_21C320E78();
  v0 = swift_allocObject();
  v3[0] = v0;
  *(_QWORD *)(v0 + 16) = "AppleAccount";
  *(_QWORD *)(v0 + 24) = 12;
  *(_BYTE *)(v0 + 32) = 2;
  *(_QWORD *)(v0 + 40) = "AABranding";
  *(_QWORD *)(v0 + 48) = 10;
  *(_BYTE *)(v0 + 56) = 2;
  v1 = sub_21C3A7950();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v1 & 1;
}

unint64_t sub_21C320E78()
{
  unint64_t result;

  result = qword_25525D520;
  if (!qword_25525D520)
  {
    result = MEMORY[0x22077AECC](&unk_21C3AFF44, &type metadata for FeatureFlagsKey);
    atomic_store(result, (unint64_t *)&qword_25525D520);
  }
  return result;
}

uint64_t sub_21C320EBC()
{
  return swift_deallocObject();
}

uint64_t sub_21C320ECC()
{
  uint64_t v0;
  char v1;
  _QWORD v3[5];

  v3[3] = &type metadata for FeatureFlagsKey;
  v3[4] = sub_21C320E78();
  v0 = swift_allocObject();
  v3[0] = v0;
  *(_QWORD *)(v0 + 16) = "AppleAccount";
  *(_QWORD *)(v0 + 24) = 12;
  *(_BYTE *)(v0 + 32) = 2;
  *(_QWORD *)(v0 + 40) = "AABranding";
  *(_QWORD *)(v0 + 48) = 10;
  *(_BYTE *)(v0 + 56) = 2;
  v1 = sub_21C3A7950();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v1 & 1;
}

uint64_t static FeatureFlag.== infix(_:_:)()
{
  return 1;
}

uint64_t FeatureFlag.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t FeatureFlag.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C320FCC()
{
  unint64_t result;

  result = qword_25525D528;
  if (!qword_25525D528)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for FeatureFlag, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_25525D528);
  }
  return result;
}

uint64_t dispatch thunk of FeatureFlagProviding.isEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for FeatureFlagProvider()
{
  return &type metadata for FeatureFlagProvider;
}

uint64_t storeEnumTagSinglePayload for FeatureFlag(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C321068 + 4 * asc_21C3AFE60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C321088 + 4 * byte_21C3AFE65[v4]))();
}

_BYTE *sub_21C321068(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C321088(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C321090(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C321098(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C3210A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C3210A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FeatureFlagsKey(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeatureFlagsKey(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlagsKey()
{
  return &type metadata for FeatureFlagsKey;
}

uint64_t sub_21C321140()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_21C32114C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

unint64_t ResponseDataType.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

unint64_t sub_21C321170()
{
  unint64_t result;

  result = qword_25525D530;
  if (!qword_25525D530)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ResponseDataType, &type metadata for ResponseDataType);
    atomic_store(result, (unint64_t *)&qword_25525D530);
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseDataType()
{
  return &type metadata for ResponseDataType;
}

uint64_t MobileDriversLicenseRawDataRequest.Response.responseData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_21C2D1E94(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t MobileDriversLicenseRawDataRequest.Response.sessionTranscript.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_21C2D1E94(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t MobileDriversLicenseRawDataRequest.Response.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_21C2D1E94(v1, v2);
  sub_21C3A7758();
  sub_21C2D2B48(v1, v2);
  sub_21C2D1E94(v4, v3);
  sub_21C3A7758();
  return sub_21C2D2B48(v4, v3);
}

void static MobileDriversLicenseRawDataRequest.Response.== infix(_:_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = a1[2];
  v2 = a1[3];
  sub_21C317958(*a1, a1[1]);
  if ((v3 & 1) != 0)
    sub_21C317958(v1, v2);
}

uint64_t MobileDriversLicenseRawDataRequest.Response.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_21C3A8700();
  sub_21C2D1E94(v1, v2);
  sub_21C3A7758();
  sub_21C2D2B48(v1, v2);
  sub_21C2D1E94(v4, v3);
  sub_21C3A7758();
  sub_21C2D2B48(v4, v3);
  return sub_21C3A8724();
}

unint64_t sub_21C3213A0()
{
  unint64_t result;

  result = qword_25525D538;
  if (!qword_25525D538)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseRawDataRequest.Response, &type metadata for MobileDriversLicenseRawDataRequest.Response);
    atomic_store(result, (unint64_t *)&qword_25525D538);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseRawDataRequest.Response()
{
  return &type metadata for MobileDriversLicenseRawDataRequest.Response;
}

uint64_t TransactionInternal.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_id);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionInternal.dataType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_dataType);
}

uint64_t TransactionInternal.transactionType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionType);
}

id TransactionInternal.amount.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_amount);
}

uint64_t TransactionInternal.currencyCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_currencyCode);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionInternal.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_countryCode;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t TransactionInternal.countryCode.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_countryCode);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*TransactionInternal.countryCode.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t TransactionInternal.preferredAIDList.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TransactionInternal.vasMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasMode);
}

uint64_t TransactionInternal.vasRequestName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasRequestName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionInternal.vasMerchants.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TransactionInternal.verificationReason.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_verificationReason);
}

uint64_t TransactionInternal.customerPreferredLocaleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_customerPreferredLocaleIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionInternal.transactionDescriptionEncoded.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionDescriptionEncoded);
  sub_21C2D1E80(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionDescriptionEncoded + 8));
  return v1;
}

id TransactionInternal.__allocating_init(_:payment:countryCode:preferredAIDList:vas:merchants:vasMode:verificationReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, int a7, unsigned __int8 *a8)
{
  objc_class *v8;
  id v17;
  id v18;

  v17 = objc_allocWithZone(v8);
  v18 = sub_21C322DE8(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_release();
  return v18;
}

id TransactionInternal.init(_:payment:countryCode:preferredAIDList:vas:merchants:vasMode:verificationReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, int a7, unsigned __int8 *a8)
{
  id v8;

  v8 = sub_21C322DE8(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_release();
  return v8;
}

uint64_t static TransactionInternal.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall TransactionInternal.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;

  v3 = (void *)sub_21C3A7EB4();
  v4 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_dataType);
  v6 = (void *)sub_21C3A7EB4();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v5, v6);

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_amount);
  v8 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);

  v9 = (void *)sub_21C3A7EB4();
  v10 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);

  v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_countryCode);
  swift_beginAccess();
  v12 = *v11;
  v13 = (void *)sub_21C3A7EB4();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v12, v13);

  v14 = (void *)sub_21C3A8064();
  v15 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v14, v15);

  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionType);
  v17 = (void *)sub_21C3A7EB4();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v16, v17);

  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_verificationReason);
  v19 = (void *)sub_21C3A7EB4();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v18, v19);

  __asm { BR              X10 }
}

void sub_21C3219F4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;

  v3 = (void *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_21C3A7EB4();
  objc_msgSend(v0, *(SEL *)(v2 + 2896), v3, v4);

  v5 = (void *)sub_21C3A7EB4();
  v6 = (void *)sub_21C3A7EB4();
  objc_msgSend(v0, *(SEL *)(v2 + 2896), v5, v6);

  sub_21C2D6C20(*(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasMerchants));
  v7 = objc_allocWithZone(MEMORY[0x24BDBCF00]);
  v8 = (void *)sub_21C3A8064();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithArray_, v8);

  v10 = (void *)sub_21C3A7EB4();
  objc_msgSend(v0, *(SEL *)(v2 + 2896), v9, v10);

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_customerPreferredLocaleIdentifier + 8))
    v11 = sub_21C3A7EB4();
  else
    v11 = 0;
  v12 = (void *)sub_21C3A7EB4();
  objc_msgSend(v0, *(SEL *)(v2 + 2896), v11, v12);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionDescriptionEncoded + 8) >> 60 == 15)
    v13 = 0;
  else
    v13 = sub_21C3A7728();
  v14 = (void *)sub_21C3A7EB4();
  objc_msgSend(v0, *(SEL *)(v2 + 2896), v13, v14);
  swift_unknownObjectRelease();

}

id TransactionInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TransactionInternal.init(coder:)(a1);
}

id TransactionInternal.init(coder:)(void *a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  id v35;
  int v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  id v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  objc_class *v58;
  uint64_t *v59;
  uint64_t v60;
  void *v61;
  __int128 v62;
  uint64_t v63;
  int v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  objc_class *v76;
  id v77;
  uint64_t v78;
  objc_super v79;
  id v80;
  __int128 v81;
  uint64_t v82;

  ObjectType = swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2D7704(0, (unint64_t *)&qword_25525AE20);
  v7 = v1;
  v8 = sub_21C3A825C();
  if (!v8)
    goto LABEL_12;
  v9 = (void *)v8;
  v78 = sub_21C3A7ED8();
  v11 = v10;

  v12 = (void *)sub_21C3A7EB4();
  v13 = objc_msgSend(a1, sel_decodeIntegerForKey_, v12);

  if ((unint64_t)v13 >= 3)
    goto LABEL_11;
  sub_21C2D7704(0, (unint64_t *)&unk_25525D5A8);
  v14 = (void *)sub_21C3A825C();
  if (!v14)
    goto LABEL_11;
  v77 = v14;
  v15 = sub_21C3A825C();
  if (!v15)
  {
    swift_bridgeObjectRelease();

    goto LABEL_12;
  }
  v16 = (void *)v15;
  v76 = (objc_class *)ObjectType;
  v71 = sub_21C3A7ED8();
  v75 = v17;

  v18 = (void *)sub_21C3A7EB4();
  v70 = objc_msgSend(a1, sel_decodeIntegerForKey_, v18);

  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B100);
  v19 = swift_allocObject();
  v73 = xmmword_21C3AA490;
  *(_OWORD *)(v19 + 16) = xmmword_21C3AA490;
  *(_QWORD *)(v19 + 32) = sub_21C2D7704(0, &qword_25525D5B8);
  v72 = sub_21C2D7704(0, (unint64_t *)&qword_25525B0F0);
  *(_QWORD *)(v19 + 40) = v72;
  sub_21C3A8268();
  swift_bridgeObjectRelease();
  if (!v82)
  {

LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21C2D775C((uint64_t)&v81, &qword_25525B110);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D5C0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v68 = v80;
  v69 = v11;
  v20 = (void *)sub_21C3A7EB4();
  v21 = objc_msgSend(a1, sel_decodeIntegerForKey_, v20);

  v67 = v21;
  if ((unint64_t)v21 >= 2)
    goto LABEL_35;
  v22 = (void *)sub_21C3A7EB4();
  v23 = objc_msgSend(a1, sel_decodeIntegerForKey_, v22);

  v24 = sub_21C2D9004((unint64_t)v23);
  v25 = v69;
  if ((v26 & 1) != 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_13;
  }
  v65 = v24;
  v27 = sub_21C3A825C();
  if (v27)
  {
    v28 = (void *)v27;
    v66 = sub_21C3A7ED8();

  }
  v37 = _s15ProximityReader7VASModeO8rawValueACSgSS_tcfC_0();
  if (v37 == 4 || (v64 = v37, (v38 = sub_21C3A825C()) == 0))
  {
LABEL_35:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:

    goto LABEL_13;
  }
  v39 = (void *)v38;
  v63 = sub_21C3A7ED8();
  v66 = v40;

  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v73;
  *(_QWORD *)(v41 + 32) = sub_21C2D7704(0, &qword_25525B108);
  *(_QWORD *)(v41 + 40) = type metadata accessor for VASMerchantInternal();
  sub_21C3A8268();
  swift_bridgeObjectRelease();
  if (!v82)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v42 = v80;
    v43 = objc_msgSend(v80, sel_array);

    v44 = sub_21C3A8070();
    v45 = sub_21C2D729C(v44);
    swift_bridgeObjectRelease();
    v46 = v75;
    if (v45)
    {
      v47 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_id];
      *v47 = v78;
      v47[1] = v25;
      *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_dataType] = v13;
      v48 = v77;
      *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_amount] = v77;
      v49 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_currencyCode];
      *v49 = v71;
      v49[1] = v46;
      *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_countryCode] = v70;
      *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_preferredAIDList] = v68;
      *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionType] = v67;
      *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_verificationReason] = v65;
      v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasMode] = v64;
      v50 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasRequestName];
      v51 = v66;
      *v50 = v63;
      v50[1] = v51;
      *(_QWORD *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasMerchants] = v45;
      v52 = v48;
      v53 = sub_21C3A825C();
      if (v53)
      {
        v54 = (void *)v53;
        v55 = sub_21C3A7ED8();
        v57 = v56;

      }
      else
      {
        v55 = 0;
        v57 = 0;
      }
      v58 = v76;
      v59 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_customerPreferredLocaleIdentifier];
      *v59 = v55;
      v59[1] = v57;
      v60 = sub_21C3A825C();
      if (v60)
      {
        v61 = (void *)v60;
        v81 = xmmword_21C3B0110;
        sub_21C3A7740();

        v62 = v81;
      }
      else
      {

        v62 = xmmword_21C3B0110;
      }
      *(_OWORD *)&v7[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionDescriptionEncoded] = v62;

      v79.receiver = v7;
      v79.super_class = v58;
      v35 = objc_msgSendSuper2(&v79, sel_init);

      return v35;
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_13:
  if (qword_25525AAC8 != -1)
    swift_once();
  v29 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F30);
  sub_21C2F50EC(v29, (uint64_t)v6, (uint64_t *)&unk_25525B0E0);
  v30 = sub_21C3A79D4();
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v6, 1, v30) == 1)
  {

    sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v32 = sub_21C3A79BC();
    v33 = sub_21C3A81C0();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_21C2CD000, v32, v33, "TransactionInternal | Failed to decode object", v34, 2u);
      MEMORY[0x22077AF8C](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v30);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t TransactionInternal.getVasIds()()
{
  return sub_21C3227E4(&OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_merchantIdentifier);
}

uint64_t sub_21C3226E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  if (a3 < 0)
  {
    result = sub_21C3A849C();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v6 = (_QWORD *)sub_21C3A80A0();
      v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return (uint64_t)v7;
  }
  return result;
}

uint64_t TransactionInternal.getVasUrls()()
{
  return sub_21C3227E4(&OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_url);
}

uint64_t sub_21C3227E4(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasMerchants);
  if (v3 >> 62)
    goto LABEL_19;
  v4 = (_QWORD *)sub_21C3226E0(0, 0xE000000000000000, *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v5)
  {
    while (v5 >= 1)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = 0;
        v8 = 0;
        while (1)
        {
          v9 = (uint64_t *)(MEMORY[0x22077A5D8](v8, v3) + *a1);
          v11 = *v9;
          v10 = v9[1];
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v4 = sub_21C322D98(v4);
          if (v8 >= v4[2])
            break;
          v12 = &v4[v7];
          ++v8;
          v12[4] = v11;
          v12[5] = v10;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          v7 += 2;
          if (v5 == v8)
            goto LABEL_20;
        }
        __break(1u);
      }
      else
      {
        v13 = 0;
        v14 = 0;
        while (1)
        {
          v15 = *(char **)(v3 + 8 * v14 + 32);
          v16 = &v15[*a1];
          v18 = *(_QWORD *)v16;
          v17 = *((_QWORD *)v16 + 1);
          v19 = v15;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v4 = sub_21C322D98(v4);
          if (v14 >= v4[2])
            break;
          v20 = &v4[v13];
          ++v14;
          v20[4] = v18;
          v20[5] = v17;

          swift_bridgeObjectRelease();
          v13 += 2;
          if (v5 == v14)
            goto LABEL_20;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      v21 = sub_21C3A84B4();
      swift_bridgeObjectRelease();
      v4 = (_QWORD *)sub_21C3226E0(0, 0xE000000000000000, v21);
      swift_bridgeObjectRetain();
      result = sub_21C3A84B4();
      v5 = result;
      if (!result)
        goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  return result;
}

uint64_t TransactionInternal.description.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t result;

  sub_21C3A83DC();
  sub_21C3A7F8C();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionType) > 1uLL)
  {
    result = sub_21C3A8670();
    __break(1u);
  }
  else
  {
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    sub_21C3A7F8C();
    v1 = *(id *)(v0 + OBJC_IVAR____TtC15ProximityReader19TransactionInternal_amount);
    v2 = objc_msgSend(v1, sel_description);
    sub_21C3A7ED8();

    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    sub_21C3A7F8C();
    swift_bridgeObjectRetain();
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    sub_21C3A7F8C();
    sub_21C3A8490();
    return 0;
  }
  return result;
}

id TransactionInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TransactionInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TransactionInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_QWORD *sub_21C322D98(_QWORD *a1)
{
  return sub_21C3342EC(0, a1[2], 0, a1);
}

_QWORD *sub_21C322DAC(_QWORD *a1)
{
  return sub_21C3343F8(0, a1[2], 0, a1);
}

char *sub_21C322DC0(uint64_t a1)
{
  return sub_21C334504(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_21C322DD4(_QWORD *a1)
{
  return sub_21C334610(0, a1[2], 0, a1);
}

id sub_21C322DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, int a7, unsigned __int8 *a8)
{
  void *v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  int v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  objc_class *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  id v69;
  uint64_t v71;
  char *v72;
  uint64_t ObjectType;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  objc_super v83;
  _OWORD v84[2];
  char v85;
  _BYTE v86[24];
  uint64_t v87;
  unsigned __int8 v88;

  v9 = v8;
  v77 = a7;
  v78 = a6;
  v74 = a5;
  v75 = a4;
  v76 = a3;
  v82 = a2;
  *(_QWORD *)&v81 = a1;
  ObjectType = swift_getObjectType();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D5F8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PaymentCardTransactionRequest();
  v15 = *(_QWORD *)(v14 - 8);
  v79 = v14;
  v80 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
  MEMORY[0x24BDAC7A8](v18);
  v72 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v71 - v21;
  v23 = sub_21C3A77E8();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *a8;
  v28 = v9;
  sub_21C3A77DC();
  sub_21C3A77C4();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  v29 = sub_21C3A7E6C();
  v31 = v30;
  swift_bridgeObjectRelease();
  v32 = (uint64_t *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_id];
  *v32 = v29;
  v32[1] = v31;
  v33 = (uint64_t)v22;
  v34 = v79;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_dataType] = v81;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_verificationReason] = v27;
  v35 = sub_21C3A7890();
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v36(v33, 1, 1, v35);
  sub_21C2F50EC(v82, (uint64_t)v13, &qword_25525D5F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v13, 1, v34) != 1)
  {
    v39 = v74;
    sub_21C323760((uint64_t)v13, (uint64_t)v17);
    v41 = *(_DWORD *)v17;
    v81 = *(_OWORD *)(v17 + 4);
    v42 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    *(_DWORD *)v86 = v41;
    *(_OWORD *)&v86[4] = v81;
    v43 = objc_msgSend(v42, sel_initWithDecimal_, v86);
    sub_21C2D775C(v33, (uint64_t *)&unk_25525D600);
    *(_QWORD *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_amount] = v43;
    v44 = v17[40];
    *(_QWORD *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionType] = v44;
    v45 = *((_QWORD *)v17 + 4);
    v46 = &v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_currencyCode];
    *v46 = *((_QWORD *)v17 + 3);
    v46[1] = v45;
    v47 = (uint64_t)&v17[*(int *)(v34 + 32)];
    *(_QWORD *)&v81 = v33;
    sub_21C2F50EC(v47, v33, (uint64_t *)&unk_25525D600);
    v48 = &v17[*(int *)(v34 + 36)];
    v49 = v48[32];
    v50 = (uint64_t)v17;
    if (v49 == 255)
    {
      swift_bridgeObjectRetain();
      v55 = 0;
      v56 = 0xF000000000000000;
      v58 = (objc_class *)ObjectType;
      v53 = v77;
      v52 = v76;
      v54 = v75;
      goto LABEL_15;
    }
    v51 = *((_OWORD *)v48 + 1);
    v84[0] = *(_OWORD *)v48;
    v84[1] = v51;
    v85 = v49;
    static TransactionAmountDescriptionInternal.internalize(_:)((uint64_t)v84);
    sub_21C3237A4((uint64_t)v86, (uint64_t)v84);
    sub_21C3237A4((uint64_t)v84, (uint64_t)v86);
    v52 = v76;
    if (v88 >= 5u && *(_QWORD *)&v86[16] | v87 | *(_QWORD *)v86 | *(_QWORD *)&v86[8])
    {
      swift_bridgeObjectRetain();
      v53 = v77;
      v54 = v75;
      if ((v44 & 1) == 0)
      {
LABEL_8:
        v55 = 0;
        v56 = 0xF000000000000000;
LABEL_11:
        v58 = (objc_class *)ObjectType;
LABEL_15:
        sub_21C2ED424(v50, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardTransactionRequest);
        v59 = v78;
        v33 = v81;
        goto LABEL_16;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v53 = v77;
      v54 = v75;
      if ((v44 & 1) != 0)
        goto LABEL_8;
    }
    v55 = sub_21C39C6C0();
    v56 = v57;
    goto LABEL_11;
  }
  v37 = (uint64_t)v72;
  sub_21C2D775C((uint64_t)v13, &qword_25525D5F8);
  sub_21C2D7704(0, (unint64_t *)&unk_25525D5A8);
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_amount] = sub_21C3A8280();
  sub_21C2D775C(v33, (uint64_t *)&unk_25525D600);
  v38 = &v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_currencyCode];
  *v38 = 0;
  v38[1] = 0xE000000000000000;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionType] = 0;
  v39 = v74;
  if (v74)
  {
    v40 = (uint64_t)v74 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage;
    swift_beginAccess();
    sub_21C2F50EC(v40, v37, (uint64_t *)&unk_25525D600);
  }
  else
  {
    v36(v37, 1, 1, v35);
  }
  v58 = (objc_class *)ObjectType;
  v59 = v78;
  v53 = v77;
  v52 = v76;
  v54 = v75;
  sub_21C323718(v37, v33);
  v55 = 0;
  v56 = 0xF000000000000000;
LABEL_16:
  v60 = (uint64_t *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_transactionDescriptionEncoded];
  *v60 = v55;
  v60[1] = v56;
  v61 = _s15ProximityReader12LocaleHelperC6encode8languageSSSg10Foundation0C0V8LanguageVSg_tFZ_0(v33);
  v62 = (uint64_t *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_customerPreferredLocaleIdentifier];
  *v62 = v61;
  v62[1] = v63;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_preferredAIDList] = v54;
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_countryCode] = v52;
  v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasMode] = v53;
  if (v39)
  {
    v64 = v39[4];
    v65 = &v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasRequestName];
    *v65 = v39[3];
    v65[1] = v64;
    v66 = v39[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v59 = v66;
  }
  else
  {
    v67 = &v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasRequestName];
    *v67 = 0;
    v67[1] = 0xE000000000000000;
  }
  v68 = _s15ProximityReader19VASMerchantInternalC11internalizeySayACGSayAA10VASRequestC8MerchantVGSgFZ_0(v59);
  swift_bridgeObjectRelease();
  sub_21C2D775C(v33, (uint64_t *)&unk_25525D600);
  *(_QWORD *)&v28[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_vasMerchants] = v68;

  v83.receiver = v28;
  v83.super_class = v58;
  v69 = objc_msgSendSuper2(&v83, sel_init);
  sub_21C2D775C(v82, &qword_25525D5F8);
  return v69;
}

id _s15ProximityReader19TransactionInternalC12verificationAcA30PaymentCardVerificationRequestV_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  __int16 v10;
  unsigned int v11;
  __int16 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D5F8);
  MEMORY[0x24BDAC7A8](v2);
  v32 = (uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PaymentCardTransactionRequest();
  v31 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21C3A82B0();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = HIDWORD(v7);
  v14 = HIWORD(v7);
  v26 = v9 >> 16;
  v27 = HIDWORD(v9);
  v30 = HIWORD(v11);
  v15 = *(_QWORD *)a1;
  v16 = *(_QWORD *)(a1 + 8);
  v28 = HIWORD(v9);
  v29 = v15;
  v17 = (uint64_t)&v6[*(int *)(v4 + 32)];
  v18 = sub_21C3A7890();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = &v6[*(int *)(v4 + 36)];
  *(_OWORD *)v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  v19[32] = -1;
  *(_DWORD *)v6 = v8;
  *((_WORD *)v6 + 2) = v13;
  *((_WORD *)v6 + 3) = v14;
  *((_WORD *)v6 + 4) = v10;
  *((_WORD *)v6 + 5) = v26;
  *((_WORD *)v6 + 6) = v27;
  *((_WORD *)v6 + 7) = v28;
  *((_WORD *)v6 + 8) = v12;
  *((_WORD *)v6 + 9) = v30;
  *((_QWORD *)v6 + 3) = v29;
  *((_QWORD *)v6 + 4) = v16;
  v6[40] = 0;
  v20 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v6 + 6) = MEMORY[0x24BEE4AF8];
  v21 = a1 + *(int *)(type metadata accessor for PaymentCardVerificationRequest() + 24);
  swift_bridgeObjectRetain();
  sub_21C32368C(v21, v17);
  v22 = v32;
  sub_21C3236D4((uint64_t)v6, v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v22, 0, 1, v4);
  v33 = *(_BYTE *)(a1 + 16);
  v23 = objc_allocWithZone((Class)type metadata accessor for TransactionInternal());
  v24 = sub_21C322DE8(0, v22, -1, v20, 0, v20, 3, &v33);
  sub_21C2ED424(a1, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardVerificationRequest);
  sub_21C2ED424((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardTransactionRequest);
  return v24;
}

uint64_t type metadata accessor for TransactionInternal()
{
  return objc_opt_self();
}

uint64_t method lookup function for TransactionInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransactionInternal.__allocating_init(_:payment:countryCode:preferredAIDList:vas:merchants:vasMode:verificationReason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of TransactionInternal.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_21C32368C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C3236D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PaymentCardTransactionRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C323718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C323760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PaymentCardTransactionRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C3237A4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_21C3237E0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for IdentityReaderActor();
  v0 = swift_allocObject();
  result = sub_21C3245C8();
  qword_255278EF8 = v0;
  return result;
}

uint64_t *sub_21C323818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t *v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47[4];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v0 = sub_21C3A7A1C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v43 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v41 - v4;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v41 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v12);
  v44 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v41 - v15;
  if (qword_25525AAD0 != -1)
    swift_once();
  v42 = __swift_project_value_buffer(v12, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v42, (uint64_t)v16);
  v17 = sub_21C3A79D4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v16, 1, v17);
  v46 = v17;
  v41 = v18;
  if (v20 == 1)
  {
    sub_21C2D775C((uint64_t)v16, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870((uint64_t)v45, 0xD000000000000014, 0x800000021C3BA3E0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  }
  sub_21C3A7A28();
  v21 = v52;
  sub_21C3A79EC();
  if (v21)
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
    v22(v11, v8, v0);
    v22(v5, v11, v0);
    v23 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v43, v5, v0);
    IdentityReaderErrorInternal.init(_:)(v23, &v48);
    v25 = v48;
    v24 = v49;
    v27 = v50;
    v26 = v51;
    v47[0] = v48;
    v47[1] = v49;
    v47[2] = v50;
    v47[3] = v51;
    sub_21C32C9B4();
    swift_willThrowTypedImpl();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
    v28 = v44;
    sub_21C2D1D80(v42, v44);
    if (v19((char *)v28, 1, v46) == 1)
    {
      sub_21C2D775C(v28, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      sub_21C32C9A0(v25, v24);
      swift_bridgeObjectRetain();
      sub_21C32C9A0(v25, v24);
      swift_bridgeObjectRetain();
      v32 = sub_21C3A79BC();
      v33 = sub_21C3A81C0();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v52 = v35;
        *(_DWORD *)v34 = 136446210;
        v47[0] = v35;
        v45 = v34 + 4;
        v48 = v25;
        v49 = v24;
        v50 = v27;
        v51 = v26;
        v36 = IdentityReaderErrorInternal.publicLogMessage.getter();
        v48 = sub_21C350398(v36, v37, v47);
        v28 = v44;
        sub_21C3A82F8();
        swift_bridgeObjectRelease();
        sub_21C32C98C(v25, v24);
        swift_bridgeObjectRelease();
        sub_21C32C98C(v25, v24);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21C2CD000, v32, v33, "An error occurred whilst performing this action: %{public}s", v34, 0xCu);
        v38 = v52;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v38, -1, -1);
        MEMORY[0x22077AF8C](v34, -1, -1);

      }
      else
      {

        sub_21C32C98C(v25, v24);
        swift_bridgeObjectRelease();
        sub_21C32C98C(v25, v24);
        swift_bridgeObjectRelease();
      }
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v28, v46);
    }
    v48 = v25;
    v49 = v24;
    v50 = v27;
    v51 = v26;
    sub_21C32C948();
    swift_allocError();
    v30 = &v48;
    IdentityReaderErrorInternal.externalize.getter(v39);
    sub_21C32C98C(v48, v49);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    v29 = (void *)*((_QWORD *)v45 + 15);
    v30 = (uint64_t *)*((id *)v45 + 14);
    v31 = v29;
  }
  return v30;
}

void sub_21C323D00(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7D0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  if (qword_25525AC88 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v7, (uint64_t)qword_25525F718);
  sub_21C2ED3E0(v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8250();
  if (qword_25525AB28 != -1)
    swift_once();
  sub_21C3A7998();
  sub_21C2ED424((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_21C32CFB0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C3245C4;
  aBlock[3] = &block_descriptor_85;
  v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v10, sel_readerConfigurationWithCompletion_, v14);
  _Block_release(v14);
}

uint64_t sub_21C323F28(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  id v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  _BYTE *v48;
  uint8_t *v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v49 - v10;
  v12 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AC88 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_25525F718);
  sub_21C2ED3E0(v15, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8244();
  if (qword_25525AB28 != -1)
    swift_once();
  sub_21C3A7998();
  sub_21C2ED424((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  if (a2)
  {
    v58 = (uint64_t)a2;
    v16 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
    if (swift_dynamicCast())
    {
      v17 = v54;
      v18 = v55;
      v19 = v56;
      v20 = v57;
      if (qword_25525AAD0 != -1)
        swift_once();
      v21 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v21, (uint64_t)v11);
      v22 = sub_21C3A79D4();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, 1, v22) == 1)
      {
        sub_21C2D775C((uint64_t)v11, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v53 = v19;
        sub_21C32C9A0(v17, v18);
        swift_bridgeObjectRetain();
        sub_21C32C9A0(v17, v18);
        swift_bridgeObjectRetain();
        v29 = sub_21C3A79BC();
        v30 = sub_21C3A81C0();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)swift_slowAlloc();
          v32 = swift_slowAlloc();
          v51 = v32;
          v52 = a3;
          *(_DWORD *)v31 = 136446210;
          v57 = v20;
          v58 = v32;
          v49 = v31 + 4;
          v50 = v31;
          v54 = v17;
          v55 = v18;
          v56 = v53;
          v33 = IdentityReaderErrorInternal.publicLogMessage.getter();
          v54 = sub_21C350398(v33, v34, &v58);
          sub_21C3A82F8();
          swift_bridgeObjectRelease();
          sub_21C32C98C(v17, v18);
          swift_bridgeObjectRelease();
          sub_21C32C98C(v17, v18);
          swift_bridgeObjectRelease();
          v35 = v50;
          _os_log_impl(&dword_21C2CD000, v29, v30, "An error occurred when retrieving the mobile document reader configuration: %{public}s", v50, 0xCu);
          v36 = v51;
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v36, -1, -1);
          MEMORY[0x22077AF8C](v35, -1, -1);

        }
        else
        {

          sub_21C32C98C(v17, v18);
          swift_bridgeObjectRelease();
          sub_21C32C98C(v17, v18);
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
        v19 = v53;
      }
      v54 = v17;
      v55 = v18;
      v56 = v19;
      v57 = v20;
      sub_21C32C948();
      v45 = swift_allocError();
      IdentityReaderErrorInternal.externalize.getter(v46);
      sub_21C32C98C(v54, v55);
      swift_bridgeObjectRelease();
      v54 = v45;
      goto LABEL_27;
    }
    if (qword_25525AAD0 != -1)
      swift_once();
    v26 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v26, (uint64_t)v8);
    v27 = sub_21C3A79D4();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v8, 1, v27) == 1)
    {
      sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v37 = a2;
      v38 = a2;
      v39 = sub_21C3A79BC();
      v40 = sub_21C3A81C0();
      if (os_log_type_enabled(v39, v40))
      {
        v52 = a3;
        v41 = (uint8_t *)swift_slowAlloc();
        v53 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v41 = 138412290;
        v42 = a2;
        v43 = _swift_stdlib_bridgeErrorToNSError();
        v54 = v43;
        sub_21C3A82F8();
        v44 = v53;
        *v53 = v43;

        _os_log_impl(&dword_21C2CD000, v39, v40, "Unknown error was returned from Identity service on read config request: [ %@ ]", v41, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v44, -1, -1);
        MEMORY[0x22077AF8C](v41, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v27);
    }
  }
  else if (a1)
  {
    v24 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15ProximityReader29IdentityConfigurationInternal_readerIdentifier + 8);
    v54 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15ProximityReader29IdentityConfigurationInternal_readerIdentifier);
    v55 = v24;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7D0);
    return sub_21C3A80E8();
  }
  sub_21C32C948();
  v47 = swift_allocError();
  *v48 = 0;
  v54 = v47;
LABEL_27:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7D0);
  return sub_21C3A80DC();
}

uint64_t sub_21C3245C8()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  id v7;
  id v8;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 128) = 0;
  v1 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v2 = (void *)sub_21C3A7EB4();
  v3 = objc_msgSend(v1, sel_initWithMachServiceName_options_, v2, 4096);

  sub_21C32C948();
  v4 = swift_allocError();
  *v5 = 0;
  *(_QWORD *)(v0 + 112) = v3;
  *(_QWORD *)(v0 + 120) = v4;
  v6 = (void *)objc_opt_self();
  v7 = v3;
  v8 = objc_msgSend(v6, sel_interfaceWithProtocol_, &unk_2552895B0);
  objc_msgSend(v7, sel_setRemoteObjectInterface_, v8);

  objc_msgSend(*(id *)(v0 + 112), sel_activate);
  return v0;
}

uint64_t sub_21C3246E0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 112);
  objc_msgSend(v1, sel_invalidate);
  v2 = *(void **)(v0 + 120);

  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for IdentityReaderActor()
{
  return objc_opt_self();
}

uint64_t sub_21C324758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_21C324774()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0[6] = sub_21C323818();
  v0[7] = v1;
  v2 = v0[3];
  v3 = v0[4];
  v4 = swift_allocObject();
  v0[8] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C324808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v2 + 32) = sub_21C32CED0;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v3;
  type metadata accessor for MobileDocumentReaderSession();
  *v3 = v0;
  v3[1] = sub_21C3248C4;
  return sub_21C3A8664();
}

uint64_t sub_21C3248C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    *(_QWORD *)(v2 + 96) = *(_QWORD *)(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_21C324950()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_21C324990()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C3249D0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C324A18(void **a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v18[1] = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7C8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  if (qword_25525AC98 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v10, (uint64_t)qword_25525F748);
  sub_21C2ED3E0(v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8250();
  if (qword_25525AB28 != -1)
    swift_once();
  sub_21C3A7998();
  sub_21C2ED424((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  if (a4)
    a4 = (void *)sub_21C3A7EB4();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  v15 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = sub_21C32CEF0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C325574;
  aBlock[3] = &block_descriptor_79;
  v17 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v13, sel_prepareUsing_completion_, a4, v17);
  _Block_release(v17);

}

uint64_t sub_21C324C64(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  _BYTE *v70;
  uint8_t *v71;
  uint8_t *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v74 = a1;
  v75 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v71 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v71 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v71 - v16;
  v18 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AC98 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v18, (uint64_t)qword_25525F748);
  sub_21C2ED3E0(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8244();
  if (qword_25525AB28 != -1)
    swift_once();
  sub_21C3A7998();
  sub_21C2ED424((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  if (a3)
  {
    v80 = (uint64_t)a3;
    v22 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
    if (!swift_dynamicCast())
    {
      if (qword_25525AAD0 != -1)
        swift_once();
      v35 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v35, (uint64_t)v14);
      v36 = sub_21C3A79D4();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v14, 1, v36) == 1)
      {
        sub_21C2D775C((uint64_t)v14, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v48 = a3;
        v49 = a3;
        v50 = sub_21C3A79BC();
        v51 = sub_21C3A81C0();
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc();
          v74 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v52 = 138412290;
          v53 = a3;
          v54 = _swift_stdlib_bridgeErrorToNSError();
          v76 = v54;
          sub_21C3A82F8();
          v55 = v74;
          *v74 = v54;

          _os_log_impl(&dword_21C2CD000, v50, v51, "Unknown error was returned from Identity service on prepare request: [ %@ ]", v52, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v55, -1, -1);
          MEMORY[0x22077AF8C](v52, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v36);
      }
      sub_21C32C948();
      v64 = swift_allocError();
      *v65 = 0;
      v76 = v64;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7C8);
      return sub_21C3A80DC();
    }
    v23 = v76;
    v24 = v77;
    v26 = v78;
    v25 = v79;
    if (qword_25525AAD0 != -1)
      swift_once();
    v27 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v27, (uint64_t)v17);
    v28 = sub_21C3A79D4();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v17, 1, v28) == 1)
    {
      sub_21C2D775C((uint64_t)v17, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      sub_21C32C9A0(v23, v24);
      swift_bridgeObjectRetain();
      sub_21C32C9A0(v23, v24);
      swift_bridgeObjectRetain();
      v38 = sub_21C3A79BC();
      v39 = sub_21C3A81C0();
      v40 = v39;
      if (os_log_type_enabled(v38, v39))
      {
        v41 = swift_slowAlloc();
        LODWORD(v74) = v40;
        v42 = (uint8_t *)v41;
        v43 = swift_slowAlloc();
        v73 = v43;
        *(_DWORD *)v42 = 136446210;
        v79 = v25;
        v80 = v43;
        v71 = v42 + 4;
        v72 = v42;
        v76 = v23;
        v77 = v24;
        v78 = v26;
        v44 = IdentityReaderErrorInternal.publicLogMessage.getter();
        v76 = sub_21C350398(v44, v45, &v80);
        sub_21C3A82F8();
        swift_bridgeObjectRelease();
        sub_21C32C98C(v23, v24);
        swift_bridgeObjectRelease();
        sub_21C32C98C(v23, v24);
        swift_bridgeObjectRelease();
        v46 = v72;
        _os_log_impl(&dword_21C2CD000, v38, (os_log_type_t)v74, "An error occurred whilst preparing the device for mobile document reading: %{public}s", v72, 0xCu);
        v47 = v73;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v47, -1, -1);
        MEMORY[0x22077AF8C](v46, -1, -1);

      }
      else
      {

        sub_21C32C98C(v23, v24);
        swift_bridgeObjectRelease();
        sub_21C32C98C(v23, v24);
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v28);
    }
    v76 = v23;
    v77 = v24;
    v78 = v26;
    v79 = v25;
    sub_21C32C948();
    v62 = swift_allocError();
    IdentityReaderErrorInternal.externalize.getter(v63);
    sub_21C32C98C(v76, v77);
    swift_bridgeObjectRelease();
    v76 = v62;
LABEL_41:
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7C8);
    return sub_21C3A80DC();
  }
  if (!a2)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v56 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v56, (uint64_t)v11);
    v57 = sub_21C3A79D4();
    v58 = *(_QWORD *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v11, 1, v57) == 1)
    {
      sub_21C2D775C((uint64_t)v11, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v66 = sub_21C3A79BC();
      v67 = sub_21C3A81C0();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v68 = 0;
        _os_log_impl(&dword_21C2CD000, v66, v67, "Invalid session was returned on prepare request", v68, 2u);
        MEMORY[0x22077AF8C](v68, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v57);
    }
    sub_21C32C948();
    v69 = swift_allocError();
    *v70 = 0;
    v76 = v69;
    goto LABEL_41;
  }
  type metadata accessor for MobileDocumentReaderSession();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v74;
  *(_QWORD *)(v30 + 24) = a2;
  v76 = v30;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7C8);
  sub_21C3A80E8();
  if (qword_25525AAD0 != -1)
    swift_once();
  v31 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v31, (uint64_t)v8);
  v32 = sub_21C3A79D4();
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v8, 1, v32) == 1)
    return sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
  v59 = sub_21C3A79BC();
  v60 = sub_21C3A81B4();
  if (os_log_type_enabled(v59, v60))
  {
    v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v61 = 0;
    _os_log_impl(&dword_21C2CD000, v59, v60, "Returning a new MobileDocumentReaderSession", v61, 2u);
    MEMORY[0x22077AF8C](v61, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v8, v32);
}

uint64_t sub_21C325574(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = sub_21C3A7ED8();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  swift_retain();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21C3255F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21C325618()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = v0[7];
  v2 = v0[8];
  v4 = v0[5];
  v3 = v0[6];
  v6 = v0[3];
  v5 = v0[4];
  v7 = (_QWORD *)swift_task_alloc();
  v0[9] = v7;
  v7[2] = v3;
  v7[3] = v1;
  v7[4] = v6;
  v7[5] = v2;
  v7[6] = v5;
  v7[7] = v4;
  sub_21C32D21C();
  v8 = (_QWORD *)swift_task_alloc();
  v0[10] = v8;
  swift_getAssociatedTypeWitness();
  *v8 = v0;
  v8[1] = sub_21C3256F4;
  return sub_21C3A8658();
}

uint64_t sub_21C3256F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C325768()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C32579C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;

  v6[34] = a5;
  v6[35] = a6;
  v6[32] = a3;
  v6[33] = a4;
  v6[30] = a1;
  v6[31] = a2;
  v6[36] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v6[37] = swift_task_alloc();
  v6[38] = type metadata accessor for MobileNationalIDCardDataRequest.Response();
  v6[39] = swift_task_alloc();
  v6[40] = type metadata accessor for MobileNationalIDCardDataRequest();
  v6[41] = swift_task_alloc();
  v6[42] = swift_task_alloc();
  v6[43] = type metadata accessor for MobileDriversLicenseDataRequest.Response();
  v6[44] = swift_task_alloc();
  v6[45] = type metadata accessor for MobileNationalIDCardRawDataRequest();
  v6[46] = swift_task_alloc();
  v6[47] = swift_task_alloc();
  v6[48] = type metadata accessor for MobileNationalIDCardDisplayRequest();
  v6[49] = swift_task_alloc();
  v6[50] = swift_task_alloc();
  v6[51] = swift_getAssociatedTypeWitness();
  v8 = sub_21C3A82EC();
  v6[52] = v8;
  v6[53] = *(_QWORD *)(v8 - 8);
  v6[54] = swift_task_alloc();
  v6[55] = swift_task_alloc();
  v6[56] = swift_task_alloc();
  v6[57] = swift_task_alloc();
  v6[58] = swift_task_alloc();
  v6[59] = swift_task_alloc();
  v6[60] = *(_QWORD *)(a6 - 8);
  v6[61] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C3259A8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  _BYTE *v29;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 16))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 280));
  if (swift_dynamicCast())
  {
    v1 = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 496) = v1;
    v2 = *(_BYTE *)(v0 + 216);
    *(_QWORD *)(v0 + 224) = v1;
    *(_BYTE *)(v0 + 232) = v2;
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 504) = v3;
    *(_QWORD *)v3 = v0;
    *(_QWORD *)(v3 + 8) = sub_21C325F34;
    v4 = *(_QWORD *)(v0 + 264);
    v5 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v3 + 32) = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v3 + 40) = v5;
    *(_QWORD *)(v3 + 16) = v0 + 219;
    *(_QWORD *)(v3 + 24) = v4;
    *(_QWORD *)(v3 + 48) = *(_QWORD *)(v0 + 224);
    *(_BYTE *)(v3 + 104) = *(_BYTE *)(v0 + 232);
    return swift_task_switch();
  }
  if (swift_dynamicCast())
  {
    sub_21C2F5064(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 392), (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDisplayRequest);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 520) = v6;
    *v6 = v0;
    v6[1] = sub_21C326268;
    return sub_21C3282C0(v0 + 217, *(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272));
  }
  if (swift_dynamicCast())
  {
    v8 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 184);
    *(_QWORD *)(v0 + 536) = v8;
    *(_QWORD *)(v0 + 544) = v9;
    *(_QWORD *)(v0 + 192) = v8;
    *(_QWORD *)(v0 + 200) = v9;
    v10 = swift_task_alloc();
    *(_QWORD *)(v0 + 552) = v10;
    *(_QWORD *)v10 = v0;
    *(_QWORD *)(v10 + 8) = sub_21C3265B4;
    v11 = *(_QWORD *)(v0 + 264);
    v12 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v10 + 40) = v12;
    *(_QWORD *)(v10 + 16) = v0 + 48;
    *(_QWORD *)(v10 + 24) = v11;
    *(_OWORD *)(v10 + 48) = *(_OWORD *)(v0 + 192);
    return swift_task_switch();
  }
  if (swift_dynamicCast())
  {
    sub_21C2F5064(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 368), (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardRawDataRequest);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 568) = v13;
    *v13 = v0;
    v13[1] = sub_21C3268FC;
    return sub_21C329920(v0 + 16, *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272));
  }
  if (swift_dynamicCast())
  {
    v14 = *(_QWORD *)(v0 + 160);
    v15 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 584) = v14;
    *(_QWORD *)(v0 + 592) = v15;
    *(_QWORD *)(v0 + 144) = v14;
    *(_QWORD *)(v0 + 152) = v15;
    v16 = swift_task_alloc();
    *(_QWORD *)(v0 + 600) = v16;
    *(_QWORD *)v16 = v0;
    *(_QWORD *)(v16 + 8) = sub_21C326C50;
    v17 = *(_QWORD *)(v0 + 352);
    v18 = *(_QWORD *)(v0 + 264);
    v19 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v16 + 32) = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v16 + 40) = v19;
    *(_QWORD *)(v16 + 16) = v17;
    *(_QWORD *)(v16 + 24) = v18;
    *(_OWORD *)(v16 + 48) = *(_OWORD *)(v0 + 144);
    return swift_task_switch();
  }
  if (swift_dynamicCast())
  {
    sub_21C2F5064(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 328), (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest);
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 616) = v20;
    *v20 = v0;
    v20[1] = sub_21C326F78;
    return sub_21C32AF04(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272));
  }
  else
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v21 = *(_QWORD *)(v0 + 296);
    v22 = __swift_project_value_buffer(*(_QWORD *)(v0 + 288), (uint64_t)qword_255278F48);
    sub_21C2D1D80(v22, v21);
    v23 = sub_21C3A79D4();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 296), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v25 = sub_21C3A79BC();
      v26 = sub_21C3A81C0();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v27 = 0;
        _os_log_impl(&dword_21C2CD000, v25, v26, "Unknown identity read request type", v27, 2u);
        MEMORY[0x22077AF8C](v27, -1, -1);
      }
      v28 = *(_QWORD *)(v0 + 296);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v28, v23);
    }
    sub_21C32C948();
    swift_allocError();
    *v29 = 9;
    swift_willThrow();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21C325F34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 512) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21C325FA8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  *(_BYTE *)(v0 + 220) = *(_BYTE *)(v0 + 219);
  v1 = *(_QWORD *)(v0 + 408);
  v2 = swift_dynamicCast();
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v5 = *(_QWORD *)(v0 + 472);
  if ((v2 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 408);
    v7 = *(_QWORD *)(v0 + 240);
    v4(*(_QWORD *)(v0 + 472), 0, 1, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v5, v6);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 416);
    v9 = *(_QWORD *)(v0 + 424);
    v4(*(_QWORD *)(v0 + 472), 1, 1, *(_QWORD *)(v0 + 408));
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v5, v8);
    sub_21C32C948();
    swift_allocError();
    *v10 = 10;
    swift_willThrow();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C326268()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 528) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C3262CC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;

  *(_BYTE *)(v0 + 218) = *(_BYTE *)(v0 + 217);
  v1 = *(_QWORD *)(v0 + 408);
  v2 = swift_dynamicCast();
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v5 = *(_QWORD *)(v0 + 464);
  if ((v2 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 408);
    v7 = *(_QWORD *)(v0 + 392);
    v8 = *(_QWORD *)(v0 + 240);
    v4(*(_QWORD *)(v0 + 464), 0, 1, v6);
    sub_21C2ED424(v7, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDisplayRequest);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v8, v5, v6);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 416);
    v10 = *(_QWORD *)(v0 + 424);
    v11 = *(_QWORD *)(v0 + 392);
    v4(*(_QWORD *)(v0 + 464), 1, 1, *(_QWORD *)(v0 + 408));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v5, v9);
    sub_21C32C948();
    swift_allocError();
    *v12 = 10;
    swift_willThrow();
    sub_21C2ED424(v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDisplayRequest);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3265B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 560) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_21C326634()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 408);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 64);
  v2 = swift_dynamicCast();
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v5 = *(_QWORD *)(v0 + 456);
  if ((v2 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 408);
    v7 = *(_QWORD *)(v0 + 240);
    v4(*(_QWORD *)(v0 + 456), 0, 1, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v5, v6);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 416);
    v9 = *(_QWORD *)(v0 + 424);
    v4(*(_QWORD *)(v0 + 456), 1, 1, *(_QWORD *)(v0 + 408));
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v5, v8);
    sub_21C32C948();
    swift_allocError();
    *v10 = 10;
    swift_willThrow();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3268FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 576) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C326960()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;

  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 408);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 32);
  v2 = swift_dynamicCast();
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v5 = *(_QWORD *)(v0 + 448);
  if ((v2 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 408);
    v7 = *(_QWORD *)(v0 + 368);
    v8 = *(_QWORD *)(v0 + 240);
    v4(*(_QWORD *)(v0 + 448), 0, 1, v6);
    sub_21C2ED424(v7, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardRawDataRequest);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v8, v5, v6);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 416);
    v10 = *(_QWORD *)(v0 + 424);
    v11 = *(_QWORD *)(v0 + 368);
    v4(*(_QWORD *)(v0 + 448), 1, 1, *(_QWORD *)(v0 + 408));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v5, v9);
    sub_21C32C948();
    swift_allocError();
    *v12 = 10;
    swift_willThrow();
    sub_21C2ED424(v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardRawDataRequest);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C326C50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 608) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_21C326CD0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = swift_dynamicCast();
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v5 = *(_QWORD *)(v0 + 440);
  if ((v2 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 408);
    v7 = *(_QWORD *)(v0 + 240);
    v4(*(_QWORD *)(v0 + 440), 0, 1, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v5, v6);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 416);
    v9 = *(_QWORD *)(v0 + 424);
    v4(*(_QWORD *)(v0 + 440), 1, 1, *(_QWORD *)(v0 + 408));
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v5, v8);
    sub_21C32C948();
    swift_allocError();
    *v10 = 10;
    swift_willThrow();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C326F78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 624) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C326FDC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = swift_dynamicCast();
  v3 = *(_QWORD *)(v1 - 8);
  v4 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v5 = *(_QWORD *)(v0 + 432);
  if ((v2 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 408);
    v7 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 240);
    v4(*(_QWORD *)(v0 + 432), 0, 1, v6);
    sub_21C2ED424(v7, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v8, v5, v6);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 416);
    v10 = *(_QWORD *)(v0 + 424);
    v11 = *(_QWORD *)(v0 + 328);
    v4(*(_QWORD *)(v0 + 432), 1, 1, *(_QWORD *)(v0 + 408));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v5, v9);
    sub_21C32C948();
    swift_allocError();
    *v12 = 10;
    swift_willThrow();
    sub_21C2ED424(v11, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3272AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3273D8()
{
  uint64_t v0;

  sub_21C2ED424(*(_QWORD *)(v0 + 392), (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDisplayRequest);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C32750C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C327644()
{
  uint64_t v0;

  sub_21C2ED424(*(_QWORD *)(v0 + 368), (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardRawDataRequest);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C327778()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3278B0()
{
  uint64_t v0;

  sub_21C2ED424(*(_QWORD *)(v0 + 328), (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3279E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C3A8118();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_21C2D775C((uint64_t)v4, &qword_25525B2E0);
  }
  else
  {
    sub_21C3A810C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_21C3A80D0();
      v11 = v10;
      swift_unknownObjectRelease();
      if (v11 | v9)
      {
        v13[0] = 0;
        v13[1] = 0;
        v13[2] = v9;
        v13[3] = v11;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_21C327BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_21C2D8DB8;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_21C327C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a3;
  *(_QWORD *)(v5 + 48) = *(_QWORD *)a2;
  *(_BYTE *)(v5 + 104) = *(_BYTE *)(a2 + 8);
  return swift_task_switch();
}

uint64_t sub_21C327C30()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 56) = sub_21C323818();
  *(_QWORD *)(v0 + 64) = v1;
  v2 = *(_BYTE *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v5;
  *(_QWORD *)(v6 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C327CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v2 + 32) = sub_21C32CE0C;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  *v3 = v0;
  v3[1] = sub_21C327D94;
  return sub_21C3A8664();
}

uint64_t sub_21C327D94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C327E10()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C327E4C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C327E8C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 64);
  v2 = *(void **)(v0 + 56);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C327ED0(id *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  char *v16;
  objc_class *v17;
  _BYTE *v18;
  id v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];
  objc_super v44;
  objc_super v45;

  v41 = a5;
  v42 = a2;
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7C0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v40 = *a1;
  v14 = (objc_class *)type metadata accessor for MobileDriversLicenseViewRequestInternal();
  v15 = objc_allocWithZone(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = (char *)v15;
  *(_QWORD *)&v16[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements] = sub_21C31C7C8(a3);
  v17 = (objc_class *)type metadata accessor for MobileDriversLicenseViewOptionsInternal();
  v18 = objc_allocWithZone(v17);
  v18[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode] = a4;
  v45.receiver = v18;
  v45.super_class = v17;
  v19 = objc_msgSendSuper2(&v45, sel_init);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_options] = v19;
  v20 = &v16[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_documentType];
  v21 = sub_21C3A7848();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = &v16[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_sessionIdentifier];
  *(_QWORD *)v22 = v41;
  *((_QWORD *)v22 + 1) = a6;

  v44.receiver = v16;
  v44.super_class = v14;
  v23 = (char *)objc_msgSendSuper2(&v44, sel_init);
  if (*(_QWORD *)(*(_QWORD *)&v23[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements]
                 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v11);
    v24 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v25 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v25 + v24, (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    aBlock[4] = sub_21C32CE34;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21C3245C4;
    aBlock[3] = &block_descriptor_68;
    v26 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v40, sel_performDisplayRequest_completion_, v23, v26);
    _Block_release(v26);
  }
  else
  {
    v28 = (uint64_t)v38;
    v27 = v39;
    if (qword_25525AAD0 != -1)
      swift_once();
    v29 = __swift_project_value_buffer(v27, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v29, v28);
    v30 = sub_21C3A79D4();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30) == 1)
    {
      sub_21C2D775C(v28, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v32 = sub_21C3A79BC();
      v33 = sub_21C3A81C0();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_21C2CD000, v32, v33, "Error Mobile document request is empty", v34, 2u);
        MEMORY[0x22077AF8C](v34, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v28, v30);
    }
    sub_21C32C948();
    v35 = swift_allocError();
    *v36 = 9;
    aBlock[0] = v35;
    sub_21C3A80DC();
  }

}

uint64_t sub_21C3282C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = *(_QWORD *)(type metadata accessor for MobileNationalIDCardDisplayRequest() - 8);
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 + 64);
  v5[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C328328()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v0[10] = (uint64_t)sub_21C323818();
  v0[11] = v1;
  v2 = v0[9];
  v4 = v0[7];
  v3 = v0[8];
  v6 = v0[4];
  v5 = v0[5];
  sub_21C2ED3E0(v0[3], v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDisplayRequest);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = (v3 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_allocObject();
  v0[12] = v9;
  sub_21C2F5064(v2, v9 + v7, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDisplayRequest);
  v10 = (uint64_t *)(v9 + v8);
  *v10 = v6;
  v10[1] = v5;
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C32842C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v2 + 32) = sub_21C32CD2C;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v3;
  *v3 = v0;
  v3[1] = sub_21C3284D8;
  return sub_21C3A8664();
}

uint64_t sub_21C3284D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C328554()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_21C328594(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  objc_class *v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  _BYTE *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  _BYTE *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[6];
  objc_super v50;
  objc_super v51;

  v46 = a4;
  v48 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v43);
  v42 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7B8);
  v9 = *(_QWORD *)(v47 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v47);
  v44 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MobileNationalIDCardDisplayRequest();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *a1;
  sub_21C2ED3E0(a3, (uint64_t)v13, v14);
  v15 = (objc_class *)type metadata accessor for MobileDriversLicenseViewRequestInternal();
  v16 = objc_allocWithZone(v15);
  swift_bridgeObjectRetain();
  v17 = (char *)v16;
  v18 = swift_bridgeObjectRetain();
  v19 = sub_21C31C7C8(v18);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements] = v19;
  LOBYTE(v11) = v13[*(int *)(v11 + 24)];
  v20 = (objc_class *)type metadata accessor for MobileDriversLicenseViewOptionsInternal();
  v21 = objc_allocWithZone(v20);
  v21[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode] = v11;
  v51.receiver = v21;
  v51.super_class = v20;
  *(_QWORD *)&v17[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_options] = objc_msgSendSuper2(&v51, sel_init);
  v22 = &v17[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_documentType];
  v23 = sub_21C3A7848();
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v22, v13, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v23);
  v25 = &v17[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_sessionIdentifier];
  *(_QWORD *)v25 = v46;
  *((_QWORD *)v25 + 1) = a5;

  v50.receiver = v17;
  v50.super_class = v15;
  v26 = (char *)objc_msgSendSuper2(&v50, sel_init);
  sub_21C2ED424((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDisplayRequest);
  if (*(_QWORD *)(*(_QWORD *)&v26[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements]
                 + 16))
  {
    v27 = v44;
    v28 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v44, v48, v47);
    v29 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v30 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v30 + v29, v27, v28);
    aBlock[4] = sub_21C32CDCC;
    aBlock[5] = v30;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21C3245C4;
    aBlock[3] = &block_descriptor_57;
    v31 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v45, sel_performDisplayRequest_completion_, v26, v31);
    _Block_release(v31);
  }
  else
  {
    v33 = (uint64_t)v42;
    v32 = v43;
    if (qword_25525AAD0 != -1)
      swift_once();
    v34 = __swift_project_value_buffer(v32, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v34, v33);
    v35 = sub_21C3A79D4();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35) == 1)
    {
      sub_21C2D775C(v33, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v37 = sub_21C3A79BC();
      v38 = sub_21C3A81C0();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v39 = 0;
        _os_log_impl(&dword_21C2CD000, v37, v38, "Error Mobile document request is empty", v39, 2u);
        MEMORY[0x22077AF8C](v39, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v33, v35);
    }
    sub_21C32C948();
    v40 = swift_allocError();
    *v41 = 9;
    aBlock[0] = v40;
    sub_21C3A80DC();
  }

}

void sub_21C328A0C(void *a1, void *a2, uint8_t *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  id v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  id v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  _BYTE *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  _BYTE *v65;
  _QWORD v66[2];
  uint8_t *v67;
  uint64_t v68;
  uint8_t *v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v66 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v66 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v66 - v18;
  if (a2)
  {
    v76 = (uint64_t)a2;
    v20 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
    if (swift_dynamicCast())
    {
      v21 = v72;
      v22 = v73;
      v23 = v74;
      v24 = v75;
      if (qword_25525AAD0 != -1)
        swift_once();
      v25 = __swift_project_value_buffer(v8, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v25, (uint64_t)v19);
      v26 = sub_21C3A79D4();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v19, 1, v26) == 1)
      {
        sub_21C2D775C((uint64_t)v19, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v70 = v23;
        v71 = a4;
        sub_21C32C9A0(v21, v22);
        swift_bridgeObjectRetain();
        sub_21C32C9A0(v21, v22);
        swift_bridgeObjectRetain();
        v36 = sub_21C3A79BC();
        v37 = sub_21C3A81C0();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc();
          v39 = swift_slowAlloc();
          v68 = v39;
          v69 = a3;
          *(_DWORD *)v38 = 136446210;
          v75 = v24;
          v76 = v39;
          v66[1] = v38 + 4;
          v67 = v38;
          v72 = v21;
          v73 = v22;
          v74 = v70;
          v40 = IdentityReaderErrorInternal.publicLogMessage.getter();
          v72 = sub_21C350398(v40, v41, &v76);
          sub_21C3A82F8();
          swift_bridgeObjectRelease();
          sub_21C32C98C(v21, v22);
          swift_bridgeObjectRelease();
          sub_21C32C98C(v21, v22);
          swift_bridgeObjectRelease();
          v42 = v37;
          v43 = v67;
          _os_log_impl(&dword_21C2CD000, v36, v42, "An error occurred during the mobile document request: %{public}s", v67, 0xCu);
          v44 = v68;
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v44, -1, -1);
          MEMORY[0x22077AF8C](v43, -1, -1);

        }
        else
        {

          sub_21C32C98C(v21, v22);
          swift_bridgeObjectRelease();
          sub_21C32C98C(v21, v22);
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v26);
        v23 = v70;
        a4 = v71;
      }
      v72 = v21;
      v73 = v22;
      v74 = v23;
      v75 = v24;
      sub_21C32C948();
      v59 = swift_allocError();
      IdentityReaderErrorInternal.externalize.getter(v60);
      sub_21C32C98C(v72, v73);
      swift_bridgeObjectRelease();
      v72 = v59;
      goto LABEL_37;
    }
    if (qword_25525AAD0 != -1)
      swift_once();
    v33 = __swift_project_value_buffer(v8, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v33, (uint64_t)v16);
    v34 = sub_21C3A79D4();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v16, 1, v34) == 1)
    {
      sub_21C2D775C((uint64_t)v16, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v45 = a2;
      v46 = a2;
      v47 = sub_21C3A79BC();
      v48 = sub_21C3A81C0();
      if (os_log_type_enabled(v47, v48))
      {
        v71 = a4;
        v49 = (uint8_t *)swift_slowAlloc();
        v70 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v49 = 138412290;
        v69 = v49 + 4;
        v50 = a2;
        v51 = _swift_stdlib_bridgeErrorToNSError();
        v72 = v51;
        sub_21C3A82F8();
        v52 = v70;
        *v70 = v51;
        a4 = v71;

        _os_log_impl(&dword_21C2CD000, v47, v48, "Unknown error was returned from Identity service on read request: [ %@ ]", v49, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v52, -1, -1);
        MEMORY[0x22077AF8C](v49, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v34);
    }
LABEL_36:
    sub_21C32C948();
    v64 = swift_allocError();
    *v65 = 0;
    v72 = v64;
LABEL_37:
    __swift_instantiateConcreteTypeFromMangledName(a4);
    sub_21C3A80DC();
    return;
  }
  if (!a1)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v53 = __swift_project_value_buffer(v8, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v53, (uint64_t)v13);
    v54 = sub_21C3A79D4();
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v13, 1, v54) == 1)
    {
      sub_21C2D775C((uint64_t)v13, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v61 = sub_21C3A79BC();
      v62 = sub_21C3A81C0();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v63 = 0;
        _os_log_impl(&dword_21C2CD000, v61, v62, "Error on completion call while reading a document", v63, 2u);
        MEMORY[0x22077AF8C](v63, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v54);
    }
    goto LABEL_36;
  }
  v28 = qword_25525AAD0;
  v29 = a1;
  if (v28 != -1)
    swift_once();
  v30 = __swift_project_value_buffer(v8, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v30, (uint64_t)v10);
  v31 = sub_21C3A79D4();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v10, 1, v31) == 1)
  {
    sub_21C2D775C((uint64_t)v10, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v56 = sub_21C3A79BC();
    v57 = sub_21C3A81D8();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_21C2CD000, v56, v57, "Document read response received", v58, 2u);
      MEMORY[0x22077AF8C](v58, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v31);
  }
  LOBYTE(v72) = v29[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseViewResponseInternal_internalValidationOutcome];
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_21C3A80E8();

}

uint64_t sub_21C3291FC(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a3;
  *(_OWORD *)(v5 + 48) = *a2;
  return swift_task_switch();
}

uint64_t sub_21C329220()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v0[8] = sub_21C323818();
  v0[9] = v1;
  v2 = v0[6];
  v3 = v0[7];
  v5 = v0[3];
  v4 = v0[4];
  v6 = (_QWORD *)swift_allocObject();
  v0[10] = v6;
  v6[2] = v2;
  v6[3] = v3;
  v6[4] = v5;
  v6[5] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C3292D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v2 + 32) = sub_21C32CC54;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v3;
  *v3 = v0;
  v3[1] = sub_21C329384;
  return sub_21C3A8664();
}

uint64_t sub_21C329384()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C329400()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_21C329440(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD aBlock[6];

  v44 = a5;
  v46 = a2;
  v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v40);
  v41 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7B0);
  v10 = *(_QWORD *)(v45 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v45);
  v43 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IdentityDocumentType();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = sub_21C31C7C8(a3);
  swift_bridgeObjectRelease();
  v19 = swift_bridgeObjectRetain();
  v20 = sub_21C31C7C8(v19);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v21 = sub_21C3A7848();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v17, 1, 1, v21);
  v22 = objc_allocWithZone((Class)type metadata accessor for MobileDriversLicenseReadRequestInternal());
  MobileDriversLicenseReadRequestInternal.init(retainedElements:nonRetainedElements:documentType:sessionIdentifier:)(v18, v20, (uint64_t)v17, v44, a6);
  v24 = v23;
  if (*(_QWORD *)(*(_QWORD *)&v23[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements]
                 + 16)
    || *(_QWORD *)(*(_QWORD *)&v23[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_nonRetainedElements]
                 + 16))
  {
    if (qword_25525ACA8 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v12, (uint64_t)qword_25525F778);
    sub_21C2ED3E0(v25, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
    sub_21C3A8250();
    if (qword_25525AB28 != -1)
      swift_once();
    sub_21C3A7998();
    sub_21C2ED424((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
    v26 = v43;
    v27 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v43, v46, v45);
    v28 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v29 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v29 + v28, v26, v27);
    aBlock[4] = sub_21C32CC78;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21C3245C4;
    aBlock[3] = &block_descriptor_46;
    v30 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v42, sel_performRawDataRequest_completion_, v24, v30, v40);
    _Block_release(v30);
  }
  else
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v31 = __swift_project_value_buffer(v40, (uint64_t)qword_255278F48);
    v32 = v41;
    sub_21C2D1D80(v31, v41);
    v33 = sub_21C3A79D4();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
    {
      sub_21C2D775C(v32, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v35 = sub_21C3A79BC();
      v36 = sub_21C3A81C0();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v37 = 0;
        _os_log_impl(&dword_21C2CD000, v35, v36, "Error Mobile document request is empty", v37, 2u);
        MEMORY[0x22077AF8C](v37, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    sub_21C32C948();
    v38 = swift_allocError();
    *v39 = 9;
    aBlock[0] = v38;
    sub_21C3A80DC();
  }

}

uint64_t sub_21C329920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = *(_QWORD *)(type metadata accessor for MobileNationalIDCardRawDataRequest() - 8);
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 + 64);
  v5[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C329988()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v0[10] = (uint64_t)sub_21C323818();
  v0[11] = v1;
  v2 = v0[9];
  v4 = v0[7];
  v3 = v0[8];
  v6 = v0[4];
  v5 = v0[5];
  sub_21C2ED3E0(v0[3], v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardRawDataRequest);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = (v3 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_allocObject();
  v0[12] = v9;
  sub_21C2F5064(v2, v9 + v7, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardRawDataRequest);
  v10 = (uint64_t *)(v9 + v8);
  *v10 = v6;
  v10[1] = v5;
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C329A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v2 + 32) = sub_21C32CBDC;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v3;
  *v3 = v0;
  v3[1] = sub_21C3284D8;
  return sub_21C3A8664();
}

void sub_21C329B38(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD aBlock[6];

  v51 = a4;
  v53 = a2;
  v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v46);
  v47 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7A8);
  v9 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v49 = v10;
  v50 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IdentityDocumentType();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MobileNationalIDCardRawDataRequest();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *a1;
  sub_21C2ED3E0(a3, (uint64_t)v19, v20);
  swift_bridgeObjectRetain();
  v21 = swift_bridgeObjectRetain();
  v22 = sub_21C31C7C8(v21);
  swift_bridgeObjectRelease();
  v23 = swift_bridgeObjectRetain();
  v24 = sub_21C31C7C8(v23);
  swift_bridgeObjectRelease();
  v25 = sub_21C3A7848();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v16, v19, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v16, 0, 1, v25);
  v27 = objc_allocWithZone((Class)type metadata accessor for MobileDriversLicenseReadRequestInternal());
  MobileDriversLicenseReadRequestInternal.init(retainedElements:nonRetainedElements:documentType:sessionIdentifier:)(v22, v24, (uint64_t)v16, v51, a5);
  v29 = v28;
  sub_21C2ED424((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardRawDataRequest);
  if (*(_QWORD *)(*(_QWORD *)&v29[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_retainedElements]
                 + 16)
    || *(_QWORD *)(*(_QWORD *)&v29[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseReadRequestInternal_nonRetainedElements]
                 + 16))
  {
    if (qword_25525ACA8 != -1)
      swift_once();
    v30 = __swift_project_value_buffer(v11, (uint64_t)qword_25525F778);
    sub_21C2ED3E0(v30, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
    sub_21C3A8250();
    if (qword_25525AB28 != -1)
      swift_once();
    sub_21C3A7998();
    sub_21C2ED424((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
    v31 = v50;
    v32 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v50, v53, v52);
    v33 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v34 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v34 + v33, v31, v32);
    aBlock[4] = sub_21C32CC08;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21C3245C4;
    aBlock[3] = &block_descriptor_35;
    v35 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v48, sel_performRawDataRequest_completion_, v29, v35);
    _Block_release(v35);
  }
  else
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v36 = __swift_project_value_buffer(v46, (uint64_t)qword_255278F48);
    v37 = v47;
    sub_21C2D1D80(v36, v47);
    v38 = sub_21C3A79D4();
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
    {
      sub_21C2D775C(v37, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v40 = sub_21C3A79BC();
      v41 = sub_21C3A81C0();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_21C2CD000, v40, v41, "Error Mobile document request is empty", v42, 2u);
        MEMORY[0x22077AF8C](v42, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    }
    sub_21C32C948();
    v43 = swift_allocError();
    *v44 = 9;
    aBlock[0] = v43;
    sub_21C3A80DC();
  }

}

void sub_21C32A080(void *a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  _QWORD v58[2];
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;

  v63 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v58 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v58 - v14;
  v16 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525ACA8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v16, (uint64_t)qword_25525F778);
  sub_21C2ED3E0(v19, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8244();
  if (qword_25525AB28 != -1)
    swift_once();
  sub_21C3A7998();
  sub_21C2ED424((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  if (a2)
  {
    v64 = (uint64_t)a2;
    v20 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v21 = v65;
      v22 = v66;
      v23 = v67;
      v24 = v68;
      if (qword_25525AAD0 != -1)
        swift_once();
      v25 = __swift_project_value_buffer(v7, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v25, (uint64_t)v15);
      v26 = sub_21C3A79D4();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v15, 1, v26) == 1)
      {
        sub_21C2D775C((uint64_t)v15, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v62 = v23;
        sub_21C32C9A0(v21, v22);
        swift_bridgeObjectRetain();
        sub_21C32C9A0(v21, v22);
        swift_bridgeObjectRetain();
        v42 = sub_21C3A79BC();
        v43 = sub_21C3A81C0();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc();
          v45 = swift_slowAlloc();
          v60 = v45;
          v61 = a3;
          *(_DWORD *)v44 = 136446210;
          v64 = v45;
          v65 = v21;
          v58[1] = v44 + 4;
          v59 = v44;
          v66 = v22;
          v67 = v62;
          v68 = v24;
          v46 = IdentityReaderErrorInternal.publicLogMessage.getter();
          v65 = sub_21C350398(v46, v47, &v64);
          sub_21C3A82F8();
          swift_bridgeObjectRelease();
          sub_21C32C98C(v21, v22);
          swift_bridgeObjectRelease();
          sub_21C32C98C(v21, v22);
          swift_bridgeObjectRelease();
          v48 = v43;
          v49 = v59;
          _os_log_impl(&dword_21C2CD000, v42, v48, "An error occurred during the mobile document request: %{public}s", v59, 0xCu);
          v50 = v60;
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v50, -1, -1);
          MEMORY[0x22077AF8C](v49, -1, -1);

        }
        else
        {

          sub_21C32C98C(v21, v22);
          swift_bridgeObjectRelease();
          sub_21C32C98C(v21, v22);
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v26);
        v23 = v62;
      }
      v65 = v21;
      v66 = v22;
      v67 = v23;
      v68 = v24;
      sub_21C32C948();
      v56 = swift_allocError();
      IdentityReaderErrorInternal.externalize.getter(v57);
      sub_21C32C98C(v65, v66);
      swift_bridgeObjectRelease();
      v65 = v56;
LABEL_33:
      __swift_instantiateConcreteTypeFromMangledName(v63);
      sub_21C3A80DC();
      return;
    }
  }
  if (!a1)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v33 = __swift_project_value_buffer(v7, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v33, (uint64_t)v12);
    v34 = sub_21C3A79D4();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v34) == 1)
    {
      sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v51 = sub_21C3A79BC();
      v52 = sub_21C3A81C0();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        _os_log_impl(&dword_21C2CD000, v51, v52, "Error on completion call while reading a document", v53, 2u);
        MEMORY[0x22077AF8C](v53, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v34);
    }
    sub_21C32C948();
    v54 = swift_allocError();
    *v55 = 0;
    v65 = v54;
    goto LABEL_33;
  }
  v28 = qword_25525AAD0;
  v29 = a1;
  if (v28 != -1)
    swift_once();
  v30 = __swift_project_value_buffer(v7, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v30, (uint64_t)v9);
  v31 = sub_21C3A79D4();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v9, 1, v31) == 1)
  {
    sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v36 = sub_21C3A79BC();
    v37 = sub_21C3A81D8();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_21C2CD000, v36, v37, "Document read response received", v38, 2u);
      MEMORY[0x22077AF8C](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v31);
  }
  v39 = *(_QWORD *)&v29[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_responseData + 8];
  v40 = *(_QWORD *)&v29[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_sessionTranscript];
  v41 = *(_QWORD *)&v29[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_sessionTranscript
                      + 8];
  v65 = *(_QWORD *)&v29[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_responseData];
  v66 = v39;
  v67 = v40;
  v68 = v41;
  sub_21C2D1E94(v65, v39);
  sub_21C2D1E94(v40, v41);
  __swift_instantiateConcreteTypeFromMangledName(v63);
  sub_21C3A80E8();

}

uint64_t sub_21C32A794(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a3;
  *(_OWORD *)(v5 + 48) = *a2;
  return swift_task_switch();
}

uint64_t sub_21C32A7B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v0[8] = sub_21C323818();
  v0[9] = v1;
  v2 = v0[6];
  v3 = v0[7];
  v5 = v0[3];
  v4 = v0[4];
  v6 = (_QWORD *)swift_allocObject();
  v0[10] = v6;
  v6[2] = v2;
  v6[3] = v3;
  v6[4] = v5;
  v6[5] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C32A870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v2 + 32) = sub_21C32CA58;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v3;
  type metadata accessor for MobileDriversLicenseDataRequest.Response();
  *v3 = v0;
  v3[1] = sub_21C32A920;
  return sub_21C3A8664();
}

uint64_t sub_21C32A920()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C32A99C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C32A9D8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C32AA18()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 72);
  v2 = *(void **)(v0 + 64);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C32AA5C(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock;
  uint64_t v40;
  uint64_t (*v41)();
  void *v42;
  void (*v43)(void *, void *);
  uint64_t v44;

  v38 = a2;
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v34);
  v35 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D7A0);
  v12 = *(_QWORD *)(v37 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v37);
  v14 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *a1;
  aBlock = a3;
  v40 = a4;
  objc_allocWithZone((Class)type metadata accessor for MobileDriversLicenseDataRequestInternal());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MobileDriversLicenseDataRequestInternal.init(_:sessionIdentifier:)((uint64_t)&aBlock, a5, a6);
  v18 = v17;
  if (*(_QWORD *)(*(_QWORD *)&v17[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements]
                 + 16)
    || *(_QWORD *)(*(_QWORD *)&v17[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements]
                 + 16))
  {
    if (qword_25525ACC0 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v14, (uint64_t)qword_25525F7C0);
    sub_21C2ED3E0(v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
    sub_21C3A8250();
    if (qword_25525AB28 != -1)
      swift_once();
    sub_21C3A7998();
    sub_21C2ED424((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
    v20 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v38, v37);
    v21 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v22 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22 + v21, (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
    v43 = sub_21C32CA7C;
    v44 = v22;
    aBlock = MEMORY[0x24BDAC760];
    v40 = 1107296256;
    v41 = sub_21C3245C4;
    v42 = &block_descriptor_24;
    v23 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v36, sel_performDataRequest_completion_, v18, v23);
    _Block_release(v23);
  }
  else
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v24 = __swift_project_value_buffer(v34, (uint64_t)qword_255278F48);
    v25 = v35;
    sub_21C2D1D80(v24, v35);
    v26 = sub_21C3A79D4();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
    {
      sub_21C2D775C(v25, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v28 = sub_21C3A79BC();
      v29 = sub_21C3A81C0();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_21C2CD000, v28, v29, "Error Mobile document request is empty", v30, 2u);
        MEMORY[0x22077AF8C](v30, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    sub_21C32C948();
    v31 = swift_allocError();
    *v32 = 9;
    aBlock = v31;
    sub_21C3A80DC();
  }

}

void sub_21C32AE90(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_21C32AF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = *(_QWORD *)(type metadata accessor for MobileNationalIDCardDataRequest() - 8);
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 + 64);
  v5[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C32AF6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v0[10] = (uint64_t)sub_21C323818();
  v0[11] = v1;
  v2 = v0[9];
  v4 = v0[7];
  v3 = v0[8];
  v6 = v0[4];
  v5 = v0[5];
  sub_21C2ED3E0(v0[3], v2, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = (v3 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_allocObject();
  v0[12] = v9;
  sub_21C2F5064(v2, v9 + v7, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest);
  v10 = (uint64_t *)(v9 + v8);
  *v10 = v6;
  v10[1] = v5;
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_21C32B070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v2 + 32) = sub_21C32CA04;
  *(_QWORD *)(v2 + 40) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v3;
  type metadata accessor for MobileNationalIDCardDataRequest.Response();
  *v3 = v0;
  v3[1] = sub_21C32B120;
  return sub_21C3A8664();
}

uint64_t sub_21C32B120()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C32B19C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C32B1E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C32B224()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 88);
  v2 = *(void **)(v0 + 80);
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C32B270(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];

  v40 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v36);
  v37 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D798);
  v10 = *(_QWORD *)(v39 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v39);
  v12 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MobileNationalIDCardDataRequest();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *a1;
  sub_21C2ED3E0(a3, (uint64_t)v17, v18);
  objc_allocWithZone((Class)type metadata accessor for MobileDriversLicenseDataRequestInternal());
  swift_bridgeObjectRetain();
  MobileDriversLicenseDataRequestInternal.init(_:sessionIdentifier:)((uint64_t)v17, a4, a5);
  v20 = v19;
  if (*(_QWORD *)(*(_QWORD *)&v19[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_retainedElements]
                 + 16)
    || *(_QWORD *)(*(_QWORD *)&v19[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseDataRequestInternal_nonRetainedElements]
                 + 16))
  {
    if (qword_25525ACC0 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v12, (uint64_t)qword_25525F7C0);
    sub_21C2ED3E0(v21, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
    sub_21C3A8250();
    if (qword_25525AB28 != -1)
      swift_once();
    sub_21C3A7998();
    sub_21C2ED424((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
    v22 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v39);
    v23 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v24 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v24 + v23, (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
    aBlock[4] = sub_21C32CA30;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21C3245C4;
    aBlock[3] = &block_descriptor_13_0;
    v25 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v38, sel_performDataRequest_completion_, v20, v25);
    _Block_release(v25);
  }
  else
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v26 = __swift_project_value_buffer(v36, (uint64_t)qword_255278F48);
    v27 = v37;
    sub_21C2D1D80(v26, v37);
    v28 = sub_21C3A79D4();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      sub_21C2D775C(v27, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v30 = sub_21C3A79BC();
      v31 = sub_21C3A81C0();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_21C2CD000, v30, v31, "Error Mobile document request is empty", v32, 2u);
        MEMORY[0x22077AF8C](v32, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    }
    sub_21C32C948();
    v33 = swift_allocError();
    *v34 = 9;
    aBlock[0] = v33;
    sub_21C3A80DC();
  }

}

void sub_21C32B6D4(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t *a5, void (*a6)(_QWORD), uint64_t (*a7)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(_QWORD);
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  _QWORD v63[2];
  void (*v64)(_QWORD);
  uint64_t (*v65)(_QWORD);
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t (*v71)(_QWORD);
  uint64_t v72;
  uint64_t v73;

  v64 = a6;
  v65 = a7;
  v67 = a5;
  v68 = a3;
  v9 = a4(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v63 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v63 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v66 = (uint64_t)v63 - v22;
  v23 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525ACC0 != -1)
    swift_once();
  v26 = __swift_project_value_buffer(v23, (uint64_t)qword_25525F7C0);
  sub_21C2ED3E0(v26, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8244();
  if (qword_25525AB28 != -1)
    swift_once();
  sub_21C3A7998();
  sub_21C2ED424((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  if (a2)
  {
    v73 = (uint64_t)a2;
    v27 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v28 = v69;
      v29 = v70;
      v30 = v71;
      v31 = v72;
      if (qword_25525AAD0 != -1)
        swift_once();
      v32 = __swift_project_value_buffer(v15, (uint64_t)qword_255278F48);
      v33 = v66;
      sub_21C2D1D80(v32, v66);
      v34 = sub_21C3A79D4();
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
      {
        sub_21C2D775C(v33, (uint64_t *)&unk_25525B0E0);
        v36 = v67;
      }
      else
      {
        v65 = v30;
        sub_21C32C9A0(v28, v29);
        swift_bridgeObjectRetain();
        sub_21C32C9A0(v28, v29);
        swift_bridgeObjectRetain();
        v49 = sub_21C3A79BC();
        v50 = sub_21C3A81C0();
        if (os_log_type_enabled(v49, v50))
        {
          v51 = (uint8_t *)swift_slowAlloc();
          v52 = swift_slowAlloc();
          v64 = (void (*)(_QWORD))v52;
          *(_DWORD *)v51 = 136446210;
          v72 = v31;
          v73 = v52;
          v63[1] = v51 + 4;
          v69 = v28;
          v70 = v29;
          v71 = v65;
          v53 = IdentityReaderErrorInternal.publicLogMessage.getter();
          v69 = sub_21C350398(v53, v54, &v73);
          sub_21C3A82F8();
          swift_bridgeObjectRelease();
          sub_21C32C98C(v28, v29);
          swift_bridgeObjectRelease();
          sub_21C32C98C(v28, v29);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21C2CD000, v49, v50, "An error occurred during the mobile document request: %{public}s", v51, 0xCu);
          v55 = v64;
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v55, -1, -1);
          MEMORY[0x22077AF8C](v51, -1, -1);

        }
        else
        {

          sub_21C32C98C(v28, v29);
          swift_bridgeObjectRelease();
          sub_21C32C98C(v28, v29);
          swift_bridgeObjectRelease();
        }
        v36 = v67;
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v66, v34);
        v30 = v65;
      }
      v69 = v28;
      v70 = v29;
      v71 = v30;
      v72 = v31;
      sub_21C32C948();
      v61 = swift_allocError();
      IdentityReaderErrorInternal.externalize.getter(v62);
      sub_21C32C98C(v69, v70);
      swift_bridgeObjectRelease();
      v69 = v61;
      __swift_instantiateConcreteTypeFromMangledName(v36);
LABEL_33:
      sub_21C3A80DC();
      return;
    }
  }
  if (!a1)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v43 = __swift_project_value_buffer(v15, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v43, (uint64_t)v20);
    v44 = sub_21C3A79D4();
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v20, 1, v44) == 1)
    {
      sub_21C2D775C((uint64_t)v20, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v56 = sub_21C3A79BC();
      v57 = sub_21C3A81C0();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v58 = 0;
        _os_log_impl(&dword_21C2CD000, v56, v57, "Error on completion call while reading a document", v58, 2u);
        MEMORY[0x22077AF8C](v58, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v44);
    }
    sub_21C32C948();
    v59 = swift_allocError();
    *v60 = 0;
    v69 = v59;
    __swift_instantiateConcreteTypeFromMangledName(v67);
    goto LABEL_33;
  }
  v37 = qword_25525AAD0;
  v38 = a1;
  if (v37 != -1)
    swift_once();
  v39 = __swift_project_value_buffer(v15, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v39, (uint64_t)v17);
  v40 = sub_21C3A79D4();
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v17, 1, v40) == 1)
  {
    v42 = sub_21C2D775C((uint64_t)v17, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v46 = sub_21C3A79BC();
    v47 = sub_21C3A81D8();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_21C2CD000, v46, v47, "Document read response received", v48, 2u);
      MEMORY[0x22077AF8C](v48, -1, -1);
    }

    v42 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v17, v40);
  }
  v64(v42);
  sub_21C2F5064((uint64_t)v11, (uint64_t)v14, v65);
  __swift_instantiateConcreteTypeFromMangledName(v67);
  sub_21C3A80E8();

}

uint64_t sub_21C32BE30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_21C32BE48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) = sub_21C323818();
  *(_QWORD *)(v0 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_21C32BEB4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 32) = sub_21C32C084;
  *(_QWORD *)(v1 + 40) = 0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_21C32BF58;
  return sub_21C3A8664();
}

uint64_t sub_21C32BF58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C32BFCC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C32C008()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C32C048()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C32C084(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v8 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v7);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_21C32C8F0;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C32C884;
  aBlock[3] = &block_descriptor_1;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v8, sel_cancelReadWithCompletion_, v11);
  _Block_release(v11);
}

uint64_t sub_21C32C1B8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD *v36;
  os_log_type_t v37;
  uint8_t *v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  _BYTE *v50;
  uint8_t *v51;
  _QWORD *v52;
  uint8_t *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  void *v60;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v51 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v51 - v11;
  if (a1)
  {
    v60 = a1;
    v13 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
    if (swift_dynamicCast())
    {
      v14 = v56;
      v15 = v57;
      v16 = v58;
      v17 = v59;
      if (qword_25525AAD0 != -1)
        swift_once();
      v18 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v18, (uint64_t)v12);
      v19 = sub_21C3A79D4();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 1, v19) == 1)
      {
        sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v55 = a2;
        sub_21C32C9A0(v14, v15);
        swift_bridgeObjectRetain();
        sub_21C32C9A0(v14, v15);
        swift_bridgeObjectRetain();
        v31 = sub_21C3A79BC();
        v32 = sub_21C3A81C0();
        if (os_log_type_enabled(v31, v32))
        {
          v54 = v16;
          v33 = (uint8_t *)swift_slowAlloc();
          v52 = (_QWORD *)swift_slowAlloc();
          v53 = v33;
          *(_DWORD *)v33 = 138412290;
          v51 = v33 + 4;
          sub_21C32C9B4();
          swift_allocError();
          *v34 = v14;
          v34[1] = v15;
          v34[2] = (uint64_t)v54;
          v34[3] = v17;
          sub_21C32C9A0(v14, v15);
          swift_bridgeObjectRetain();
          v35 = _swift_stdlib_bridgeErrorToNSError();
          v56 = v35;
          sub_21C3A82F8();
          v36 = v52;
          *v52 = v35;
          v16 = v54;
          sub_21C32C98C(v14, v15);
          swift_bridgeObjectRelease();
          sub_21C32C98C(v14, v15);
          swift_bridgeObjectRelease();
          v37 = v32;
          v38 = v53;
          _os_log_impl(&dword_21C2CD000, v31, v37, "Could not cancel read due to: [ %@ ]", v53, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v36, -1, -1);
          MEMORY[0x22077AF8C](v38, -1, -1);

        }
        else
        {

          sub_21C32C98C(v14, v15);
          swift_bridgeObjectRelease();
          sub_21C32C98C(v14, v15);
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v19);
      }
      v56 = v14;
      v57 = v15;
      v58 = v16;
      v59 = v17;
      sub_21C32C948();
      v47 = swift_allocError();
      IdentityReaderErrorInternal.externalize.getter(v48);
      sub_21C32C98C(v56, v57);
      swift_bridgeObjectRelease();
      v56 = v47;
    }
    else
    {
      if (qword_25525AAD0 != -1)
        swift_once();
      v24 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v24, (uint64_t)v9);
      v25 = sub_21C3A79D4();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v25) == 1)
      {
        sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v39 = a1;
        v40 = a1;
        v41 = sub_21C3A79BC();
        v42 = sub_21C3A81C0();
        if (os_log_type_enabled(v41, v42))
        {
          v55 = a2;
          v43 = (uint8_t *)swift_slowAlloc();
          v54 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v43 = 138412290;
          v44 = a1;
          v45 = _swift_stdlib_bridgeErrorToNSError();
          v56 = v45;
          sub_21C3A82F8();
          v46 = v54;
          *v54 = v45;

          _os_log_impl(&dword_21C2CD000, v41, v42, "Unknown error was returned from Identity service: [ %@ ]", v43, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v46, -1, -1);
          MEMORY[0x22077AF8C](v43, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
      }
      sub_21C32C948();
      v49 = swift_allocError();
      *v50 = 0;
      v56 = v49;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
    return sub_21C3A80DC();
  }
  else
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v21, (uint64_t)v6);
    v22 = sub_21C3A79D4();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v6, 1, v22) == 1)
    {
      sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v27 = sub_21C3A79BC();
      v28 = sub_21C3A81D8();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_21C2CD000, v27, v28, "Requesting to cancel current read", v29, 2u);
        MEMORY[0x22077AF8C](v29, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v22);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
    return sub_21C3A80E8();
  }
}

void sub_21C32C884(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_21C32C8D8(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B2BC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C32C8E4()
{
  return objectdestroyTm(&qword_25525C7F0);
}

uint64_t sub_21C32C8F0(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0) - 8) + 80);
  return sub_21C32C1B8(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_21C32C948()
{
  unint64_t result;

  result = qword_25525D780;
  if (!qword_25525D780)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDocumentReaderError, &type metadata for MobileDocumentReaderError);
    atomic_store(result, (unint64_t *)&qword_25525D780);
  }
  return result;
}

uint64_t sub_21C32C98C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x16)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_21C32C9A0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x16)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_21C32C9B4()
{
  unint64_t result;

  result = qword_25525D790;
  if (!qword_25525D790)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityReaderErrorInternal, &type metadata for IdentityReaderErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525D790);
  }
  return result;
}

uint64_t sub_21C32C9F8()
{
  return objectdestroy_4Tm((uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest);
}

uint64_t sub_21C32CA04(uint64_t a1, uint64_t a2)
{
  return sub_21C32CD40(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_21C32B270);
}

uint64_t sub_21C32CA18(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B2A0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C32CA24()
{
  return objectdestroyTm(&qword_25525D798);
}

void sub_21C32CA30(void *a1, void *a2)
{
  sub_21C32CAA0(a1, a2, &qword_25525D798, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest.Response, (void (*)(_QWORD))sub_21C2E0EC4, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDataRequest.Response.DocumentElements);
}

void sub_21C32CA58(id *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_21C32AA5C(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_21C32CA64(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B284(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C32CA70()
{
  return objectdestroyTm(&qword_25525D7A0);
}

void sub_21C32CA7C(void *a1, void *a2)
{
  sub_21C32CAA0(a1, a2, &qword_25525D7A0, (uint64_t (*)(_QWORD))type metadata accessor for MobileDriversLicenseDataRequest.Response, (void (*)(_QWORD))sub_21C2DFF74, (uint64_t (*)(_QWORD))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements);
}

void sub_21C32CAA0(void *a1, void *a2, uint64_t *a3, uint64_t (*a4)(_QWORD), void (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  uint64_t v6;
  uint64_t v13;

  v13 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  sub_21C32B6D4(a1, a2, v6 + ((v13 + 16) & ~v13), a4, a3, a5, a6);
}

uint64_t sub_21C32CB20()
{
  return objectdestroy_4Tm((uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardRawDataRequest);
}

uint64_t objectdestroy_4Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  v3 = v1 + ((v2 + 16) & ~v2);
  v4 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C32CBDC(uint64_t a1, uint64_t a2)
{
  return sub_21C32CD40(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardRawDataRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_21C329B38);
}

uint64_t sub_21C32CBF0(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B268(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C32CBFC()
{
  return objectdestroyTm(&qword_25525D7A8);
}

uint64_t sub_21C32CC08(uint64_t a1, uint64_t a2)
{
  return sub_21C32CE48(a1, a2, &qword_25525D7A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_21C32A080);
}

uint64_t objectdestroy_15Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21C32CC54(id *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_21C329440(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_21C32CC60(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B24C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C32CC6C()
{
  return objectdestroyTm(&qword_25525D7B0);
}

uint64_t sub_21C32CC78(uint64_t a1, uint64_t a2)
{
  return sub_21C32CE48(a1, a2, &qword_25525D7B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_21C32A080);
}

uint64_t sub_21C32CC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MobileNationalIDCardDisplayRequest() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_21C3A7848();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C32CD2C(uint64_t a1, uint64_t a2)
{
  return sub_21C32CD40(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDisplayRequest, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_21C328594);
}

uint64_t sub_21C32CD40(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v7 = *(_QWORD *)(a3(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (_QWORD *)(v4 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a4(a1, a2, v4 + v8, *v9, v9[1]);
}

uint64_t sub_21C32CDB4(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B230(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C32CDC0()
{
  return objectdestroyTm(&qword_25525D7B8);
}

uint64_t sub_21C32CDCC(uint64_t a1, uint64_t a2)
{
  return sub_21C32CE48(a1, a2, &qword_25525D7B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_21C328A0C);
}

uint64_t sub_21C32CDE0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21C32CE0C(id *a1, uint64_t a2)
{
  uint64_t v2;

  sub_21C327ED0(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_21C32CE1C(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B214(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C32CE28()
{
  return objectdestroyTm(&qword_25525D7C0);
}

uint64_t sub_21C32CE34(uint64_t a1, uint64_t a2)
{
  return sub_21C32CE48(a1, a2, &qword_25525D7C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_21C328A0C);
}

uint64_t sub_21C32CE48(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return a4(a1, a2, v4 + ((v9 + 16) & ~v9), a3);
}

uint64_t sub_21C32CEAC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21C32CED0(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_21C324A18(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_21C32CED8(uint64_t a1)
{
  uint64_t v1;

  return sub_21C37B1F8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_21C32CEE4()
{
  return objectdestroyTm(&qword_25525D7C8);
}

uint64_t sub_21C32CEF0(_QWORD *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525D7C8) - 8) + 80);
  return sub_21C324C64(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_21C32CF48()
{
  return objectdestroyTm(&qword_25525D7D0);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_21C32CFB0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525D7D0) - 8) + 80);
  return sub_21C323F28(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_21C32D000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_21C3A7A1C();
  MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  sub_21C3A7A28();
  sub_21C3A79EC();
  return 1;
}

uint64_t sub_21C32D188(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v8 = v1[6];
  v7 = v1[7];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_21C2D8DB8;
  return sub_21C32579C(a1, v5, v6, v8, v7, v4);
}

uint64_t sub_21C32D214()
{
  uint64_t v0;

  return sub_21C3279E4(v0);
}

unint64_t sub_21C32D21C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525D7E8;
  if (!qword_25525D7E8)
  {
    v1 = type metadata accessor for IdentityReaderActor();
    result = MEMORY[0x22077AECC](&unk_21C3B0160, v1);
    atomic_store(result, &qword_25525D7E8);
  }
  return result;
}

uint64_t sub_21C32D260()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C32D28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21C2DFEDC;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_21C2D8DB8;
  v4[2] = v2;
  return swift_task_switch();
}

uint64_t static VASMerchantInternal.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t VASMerchantInternal.merchantIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_merchantIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VASMerchantInternal.url.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_url);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VASMerchantInternal.sendURLOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_sendURLOnly);
}

uint64_t VASMerchantInternal.localizedName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_localizedName);
  swift_bridgeObjectRetain();
  return v1;
}

id VASMerchantInternal.__allocating_init(merchantIdentifier:url:sendURLOnly:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  _BYTE *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  objc_super v20;

  v15 = objc_allocWithZone(v7);
  v16 = &v15[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_merchantIdentifier];
  *v16 = a1;
  v16[1] = a2;
  v17 = &v15[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_url];
  *v17 = a3;
  v17[1] = a4;
  v15[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_sendURLOnly] = a5;
  v18 = &v15[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_localizedName];
  *v18 = a6;
  v18[1] = a7;
  v20.receiver = v15;
  v20.super_class = v7;
  return objc_msgSendSuper2(&v20, sel_init);
}

id VASMerchantInternal.init(merchantIdentifier:url:sendURLOnly:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  _BYTE *v7;
  objc_class *ObjectType;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v16 = &v7[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_merchantIdentifier];
  *v16 = a1;
  v16[1] = a2;
  v17 = &v7[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_url];
  *v17 = a3;
  v17[1] = a4;
  v7[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_sendURLOnly] = a5;
  v18 = &v7[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_localizedName];
  *v18 = a6;
  v18[1] = a7;
  v20.receiver = v7;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_init);
}

Swift::Void __swiftcall VASMerchantInternal.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v3 = (void *)sub_21C3A7EB4();
  v4 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  v5 = (void *)sub_21C3A7EB4();
  v6 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);

  v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_sendURLOnly);
  v8 = (void *)sub_21C3A7EB4();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v7, v8);

  v9 = (void *)sub_21C3A7EB4();
  v10 = (id)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);

}

id VASMerchantInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return VASMerchantInternal.init(coder:)(a1);
}

id VASMerchantInternal.init(coder:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned __int8 v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v35;
  uint64_t v36;
  objc_super v37;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2D1C1C();
  v7 = v1;
  v8 = sub_21C3A825C();
  if (v8)
  {
    v9 = (void *)v8;
    v10 = sub_21C3A7ED8();
    v12 = v11;

    v13 = sub_21C3A825C();
    if (v13)
    {
      v14 = (void *)v13;
      v36 = v10;
      v35 = sub_21C3A7ED8();
      v16 = v15;

      v17 = (void *)sub_21C3A7EB4();
      v18 = objc_msgSend(a1, sel_decodeBoolForKey_, v17);

      v19 = sub_21C3A825C();
      if (v19)
      {
        v20 = (void *)v19;
        v21 = sub_21C3A7ED8();
        v23 = v22;

        v24 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_merchantIdentifier];
        *v24 = v36;
        v24[1] = v12;
        v25 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_url];
        *v25 = v35;
        v25[1] = v16;
        v7[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_sendURLOnly] = v18;
        v26 = (uint64_t *)&v7[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_localizedName];
        *v26 = v21;
        v26[1] = v23;

        v37.receiver = v7;
        v37.super_class = ObjectType;
        v27 = objc_msgSendSuper2(&v37, sel_init);

        return v27;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }

  if (qword_25525AAC8 != -1)
    swift_once();
  v28 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F30);
  sub_21C2F50EC(v28, (uint64_t)v6, (uint64_t *)&unk_25525B0E0);
  v29 = sub_21C3A79D4();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v6, 1, v29) == 1)
  {

    sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v31 = sub_21C3A79BC();
    v32 = sub_21C3A81C0();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_21C2CD000, v31, v32, "VASMerchantInternal | Failed to decode object", v33, 2u);
      MEMORY[0x22077AF8C](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v29);
  }
  swift_deallocPartialClassInstance();
  return 0;
}

id VASMerchantInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void VASMerchantInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VASMerchantInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s15ProximityReader19VASMerchantInternalC11internalizeySayACGSayAA10VASRequestC8MerchantVGSgFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  objc_class *v24;
  _BYTE *v25;
  _QWORD *v26;
  uint64_t *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  char *v33;
  uint64_t v34;
  objc_super v35;
  uint64_t v36;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for VASRequest.Merchant(0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BEE4AF8];
  v36 = MEMORY[0x24BEE4AF8];
  if (a1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
    {
      v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v12 = *(_QWORD *)(v6 + 72);
      v30 = a1;
      v31 = v12;
      swift_bridgeObjectRetain();
      v32 = v5;
      v33 = v4;
      do
      {
        sub_21C2F9FB0(v11, (uint64_t)v8);
        v13 = v8[1];
        v34 = *v8;
        sub_21C2F50EC((uint64_t)v8 + v5[5], (uint64_t)v4, &qword_25525C138);
        v14 = sub_21C3A76C8();
        v15 = *(_QWORD *)(v14 - 8);
        v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14);
        swift_bridgeObjectRetain();
        if (v16 == 1)
        {
          sub_21C2D775C((uint64_t)v4, &qword_25525C138);
          v17 = 0;
          v18 = 0xE000000000000000;
        }
        else
        {
          v17 = sub_21C3A7644();
          v18 = v19;
          (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v14);
        }
        v20 = v5[7];
        v21 = *((_BYTE *)v8 + v5[6]);
        v22 = *(_QWORD *)((char *)v8 + v20);
        v23 = *(_QWORD *)((char *)v8 + v20 + 8);
        v24 = (objc_class *)type metadata accessor for VASMerchantInternal();
        v25 = objc_allocWithZone(v24);
        v26 = &v25[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_merchantIdentifier];
        *v26 = v34;
        v26[1] = v13;
        v27 = (uint64_t *)&v25[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_url];
        *v27 = v17;
        v27[1] = v18;
        v25[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_sendURLOnly] = v21;
        v28 = &v25[OBJC_IVAR____TtC15ProximityReader19VASMerchantInternal_localizedName];
        *v28 = v22;
        v28[1] = v23;
        v35.receiver = v25;
        v35.super_class = v24;
        swift_bridgeObjectRetain();
        v29 = objc_msgSendSuper2(&v35, sel_init);
        MEMORY[0x22077A23C]();
        if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_21C3A8094();
        sub_21C3A80AC();
        sub_21C3A8088();

        sub_21C2F9FF4((uint64_t)v8);
        v5 = v32;
        v11 += v31;
        --v10;
        v4 = v33;
      }
      while (v10);
      swift_bridgeObjectRelease();
      return v36;
    }
  }
  return result;
}

uint64_t type metadata accessor for VASMerchantInternal()
{
  return objc_opt_self();
}

uint64_t method lookup function for VASMerchantInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VASMerchantInternal.__allocating_init(merchantIdentifier:url:sendURLOnly:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of VASMerchantInternal.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void static MobileDriversLicenseDataRequest.Element.givenName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.familyName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.portrait.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 2;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.age.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 3;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.dateOfBirth.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 4;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.sex.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 5;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.address.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 6;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.issuingAuthority.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 7;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.drivingPrivileges.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 8;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.documentNumber.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 9;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.documentIssueDate.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 10;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.documentExpirationDate.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 11;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseDataRequest.Element.documentDHSComplianceStatus.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 12;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t static MobileDriversLicenseDataRequest.Element.ageAtLeast(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void MobileDriversLicenseDataRequest.Element.internalElement.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t MobileDriversLicenseDataRequest.Element.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t MobileDriversLicenseDataRequest.Element.hashValue.getter()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C32E054()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t _s15ProximityReader31MobileDriversLicenseDataRequestV7ElementV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 8);
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_21C32E0D4 + 4 * byte_21C3B01B8[v2]))();
  if (v2 != *(_QWORD *)a2)
    v3 = 1;
  return (v3 & 1) == 0;
}

void sub_21C32E10C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

void sub_21C32E11C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

void sub_21C32E12C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

void sub_21C32E13C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

void sub_21C32E14C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

void sub_21C32E15C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

void sub_21C32E16C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

void sub_21C32E17C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

void sub_21C32E18C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

void sub_21C32E19C(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xB)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

void sub_21C32E1AC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C32E0F0);
  JUMPOUT(0x21C32E104);
}

unint64_t sub_21C32E1C0()
{
  unint64_t result;

  result = qword_25525D848;
  if (!qword_25525D848)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest.Element, &type metadata for MobileDriversLicenseDataRequest.Element);
    atomic_store(result, (unint64_t *)&qword_25525D848);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest.Element()
{
  return &type metadata for MobileDriversLicenseDataRequest.Element;
}

void __swiftcall ContentInternal.init(id:topic:subtopic:)(ProximityReader::ContentInternal *__return_ptr retstr, Swift::String id, Swift::String topic, Swift::String subtopic)
{
  retstr->id = id;
  retstr->topic = topic;
  retstr->subtopic = subtopic;
}

uint64_t ContentInternal.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C32E2C4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6369706F74;
  if (*v0 != 1)
    v1 = 0x6369706F74627573;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_21C32E310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C32ED28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C32E334()
{
  sub_21C32EAE8();
  return sub_21C3A8754();
}

uint64_t sub_21C32E35C()
{
  sub_21C32EAE8();
  return sub_21C3A8760();
}

uint64_t ContentInternal.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D850);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C32EAE8();
  sub_21C3A8748();
  v14 = 0;
  v9 = v11[5];
  sub_21C3A85E0();
  if (!v9)
  {
    v13 = 1;
    sub_21C3A85E0();
    v12 = 2;
    sub_21C3A85E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ContentInternal.hashValue.getter()
{
  sub_21C3A8700();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t ContentInternal.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525D860);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C32EAE8();
  sub_21C3A873C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_21C3A855C();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_21C3A855C();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_21C3A855C();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C32E7D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ContentInternal.init(from:)(a1, a2);
}

uint64_t sub_21C32E7EC(_QWORD *a1)
{
  return ContentInternal.encode(to:)(a1);
}

uint64_t sub_21C32E800()
{
  sub_21C3A8700();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t sub_21C32E8B0()
{
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C32E94C()
{
  sub_21C3A8700();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

uint64_t _s15ProximityReader15ContentInternalV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_21C3A864C(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_21C3A864C(), result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
        return 1;
      else
        return sub_21C3A864C();
    }
  }
  return result;
}

unint64_t sub_21C32EAE8()
{
  unint64_t result;

  result = qword_25525D858;
  if (!qword_25525D858)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B0444, &type metadata for ContentInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D858);
  }
  return result;
}

unint64_t sub_21C32EB30()
{
  unint64_t result;

  result = qword_25525D868;
  if (!qword_25525D868)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ContentInternal, &type metadata for ContentInternal);
    atomic_store(result, (unint64_t *)&qword_25525D868);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentInternal()
{
  return &type metadata for ContentInternal;
}

uint64_t storeEnumTagSinglePayload for ContentInternal.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C32EBD0 + 4 * byte_21C3B02AD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C32EC04 + 4 * byte_21C3B02A8[v4]))();
}

uint64_t sub_21C32EC04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C32EC0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C32EC14);
  return result;
}

uint64_t sub_21C32EC20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C32EC28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C32EC2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C32EC34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentInternal.CodingKeys()
{
  return &type metadata for ContentInternal.CodingKeys;
}

unint64_t sub_21C32EC54()
{
  unint64_t result;

  result = qword_25525D870;
  if (!qword_25525D870)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B041C, &type metadata for ContentInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D870);
  }
  return result;
}

unint64_t sub_21C32EC9C()
{
  unint64_t result;

  result = qword_25525D878;
  if (!qword_25525D878)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B038C, &type metadata for ContentInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525D878);
  }
  return result;
}

unint64_t sub_21C32ECE4()
{
  unint64_t result;

  result = qword_25525D880;
  if (!qword_25525D880)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B03B4, &type metadata for ContentInternal.CodingKeys);
    atomic_store(result, &qword_25525D880);
  }
  return result;
}

uint64_t sub_21C32ED28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6369706F74 && a2 == 0xE500000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6369706F74627573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21C32EE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_21C3A8118();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_21C3A810C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_21C32F568(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21C3A80D0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_21C32EF84(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t TaskSerializer.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = 0;
  return v0;
}

uint64_t TaskSerializer.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = 0;
  return v0;
}

uint64_t sub_21C32EFEC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v5 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = v2[14];
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = *(_QWORD *)(v5 + 80);
  v11[5] = v10;
  v11[6] = a1;
  v11[7] = a2;
  swift_retain();
  swift_retain();
  v2[14] = sub_21C32EE5C((uint64_t)v8, (uint64_t)&unk_25525D890, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_21C32F0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  v7[7] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525C828);
  v7[8] = sub_21C3A8730();
  v8 = sub_21C3A82EC();
  v7[9] = v8;
  v7[10] = *(_QWORD *)(v8 - 8);
  v7[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C32F188()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t (*v8)(_QWORD);

  if (v0[3])
  {
    v1 = (_QWORD *)swift_task_alloc();
    v0[12] = v1;
    *v1 = v0;
    v1[1] = sub_21C32F280;
    return sub_21C3A816C();
  }
  else
  {
    v4 = v0[10];
    v3 = v0[11];
    v5 = v0[9];
    v6 = (int *)v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0[8] - 8) + 56))(v3, 1, 1);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v8 = (uint64_t (*)(_QWORD))((char *)v6 + *v6);
    v7 = (_QWORD *)swift_task_alloc();
    v0[13] = v7;
    *v7 = v0;
    v7[1] = sub_21C32F370;
    return v8(v0[2]);
  }
}

uint64_t sub_21C32F280()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C32F2D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD);

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  v4 = (int *)v0[4];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0[8] - 8) + 56))(v1, 0, 1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = (uint64_t (*)(_QWORD))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_21C32F370;
  return v7(v0[2]);
}

uint64_t sub_21C32F370()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t TaskSerializer.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t TaskSerializer.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t TaskSerializer.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_21C32F418()
{
  return TaskSerializer.unownedExecutor.getter();
}

uint64_t sub_21C32F430()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C32F464(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_21C2D8DB8;
  return sub_21C32F0EC(a1, v4, v5, v7, v9, v8, v6);
}

uint64_t sub_21C32F4F4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TaskSerializer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TaskSerializer);
}

uint64_t method lookup function for TaskSerializer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TaskSerializer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of TaskSerializer.dispatch(block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_21C32F568(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22077AE6C](a1, v6, a5);
}

uint64_t AutoBugCaptureDomain.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_21C32F6B0(a1);
}

uint64_t AutoBugCaptureDomain.rawValue.getter()
{
  return 0x74696D69786F7250;
}

uint64_t sub_21C32F604()
{
  return sub_21C32F738();
}

uint64_t sub_21C32F628()
{
  return sub_21C3A7F50();
}

uint64_t sub_21C32F64C()
{
  return sub_21C32F7BC();
}

uint64_t sub_21C32F670@<X0>(BOOL *a1@<X8>)
{
  return sub_21C32F810(a1);
}

void sub_21C32F67C(_QWORD *a1@<X8>)
{
  *a1 = 0x74696D69786F7250;
  a1[1] = 0xEF72656461655279;
}

uint64_t AutoBugCaptureType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_21C32F6B0(a1);
}

uint64_t sub_21C32F6B0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21C3A8508();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t AutoBugCaptureType.rawValue.getter()
{
  return 0x6F69747265737341;
}

uint64_t sub_21C32F71C()
{
  return sub_21C32F738();
}

uint64_t sub_21C32F738()
{
  sub_21C3A8700();
  sub_21C3A7F50();
  return sub_21C3A8724();
}

uint64_t sub_21C32F784()
{
  return sub_21C3A7F50();
}

uint64_t sub_21C32F7A0()
{
  return sub_21C32F7BC();
}

uint64_t sub_21C32F7BC()
{
  sub_21C3A8700();
  sub_21C3A7F50();
  return sub_21C3A8724();
}

uint64_t sub_21C32F804@<X0>(BOOL *a1@<X8>)
{
  return sub_21C32F810(a1);
}

uint64_t sub_21C32F810@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21C3A8508();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_21C32F85C(_QWORD *a1@<X8>)
{
  *a1 = 0x6F69747265737341;
  a1[1] = 0xE90000000000006ELL;
}

ProximityReader::AutoBugCaptureSubType_optional __swiftcall AutoBugCaptureSubType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ProximityReader::AutoBugCaptureSubType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_21C3A8508();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AutoBugCaptureSubType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21C32F908 + 4 * byte_21C3B0520[*v0]))(0xD000000000000010, 0x800000021C3B8190);
}

uint64_t sub_21C32F908()
{
  return 0x7665447974706D45;
}

uint64_t sub_21C32F92C(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_21C32F944()
{
  return 0x7865746E6F436F4ELL;
}

uint64_t sub_21C32F960()
{
  return 0x6167656C65446F4ELL;
}

void sub_21C32F97C(char *a1)
{
  sub_21C375C68(*a1);
}

void sub_21C32F988()
{
  char *v0;

  sub_21C376044(*v0);
}

void sub_21C32F990(uint64_t a1)
{
  char *v1;

  sub_21C37621C(a1, *v1);
}

void sub_21C32F998(uint64_t a1)
{
  char *v1;

  sub_21C3763C0(a1, *v1);
}

ProximityReader::AutoBugCaptureSubType_optional sub_21C32F9A0(Swift::String *a1)
{
  return AutoBugCaptureSubType.init(rawValue:)(*a1);
}

uint64_t sub_21C32F9AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AutoBugCaptureSubType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21C32F9D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  double v16;
  double v17;
  void (*v18)(_BYTE *, uint64_t);
  uint64_t v19;
  _BYTE v21[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v21[-v5];
  v7 = sub_21C3A77B8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v21[-v12];
  sub_21C3A77A0();
  v14 = v0
      + OBJC_IVAR____TtC15ProximityReaderP33_3716CC6506213A5054A49C8E0F33F1E322AutoBugCaptureReporter_lastReportedDate;
  swift_beginAccess();
  sub_21C2F50EC(v14, (uint64_t)v6, (uint64_t *)&unk_25525ED60);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525ED60);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v3, v13, v7);
LABEL_6:
    v19 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
    swift_beginAccess();
    sub_21C331A44((uint64_t)v3, v14);
    swift_endAccess();
    return v19;
  }
  v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
  v15(v10, v6, v7);
  sub_21C3A7770();
  v17 = v16;
  v18 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v18(v10, v7);
  if (v17 >= 86400.0)
  {
    v15(v3, v13, v7);
    goto LABEL_6;
  }
  v18(v13, v7);
  return 0;
}

uint64_t sub_21C32FBE4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  uint64_t v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t aBlock;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v21 - v5;
  v24 = *(unsigned __int8 *)a1;
  v7 = a1[2];
  v8 = a1[3];
  v9 = a1[4];
  v25 = a1[1];
  v26 = v8;
  v10 = a1[5];
  if ((sub_21C32F9D0() & 1) != 0)
  {
    v22 = v10;
    v23 = *(os_log_t *)(v1 + 16);
    sub_21C3A7EB4();
    sub_21C3A7EB4();
    __asm { BR              X9 }
  }
  if (qword_25525AAF8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v3, (uint64_t)qword_255278FC0);
  sub_21C2F50EC(v11, (uint64_t)v6, (uint64_t *)&unk_25525B0E0);
  v12 = sub_21C3A79D4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v12) == 1)
    return sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_21C3A79BC();
  v16 = sub_21C3A81B4();
  if (os_log_type_enabled(v15, v16))
  {
    v23 = v15;
    v17 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v32 = v10;
    v33 = v22;
    *(_DWORD *)v17 = 136315138;
    v21[3] = v17 + 4;
    LOBYTE(aBlock) = v24;
    v28 = v25;
    v29 = v7;
    v30 = v26;
    v31 = v9;
    AutoBugCaptureIssue.description.getter();
    aBlock = sub_21C350398(v18, v19, &v33);
    sub_21C3A82F8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v15 = v23;
    _os_log_impl(&dword_21C2CD000, v23, v16, "Not reporting to AutoBugCapture because we are rate limited: %s", v17, 0xCu);
    v20 = v22;
    swift_arrayDestroy();
    MEMORY[0x22077AF8C](v20, -1, -1);
    MEMORY[0x22077AF8C](v17, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v12);
}

uint64_t sub_21C3303E8(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_21C3A7E48();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C330460()
{
  uint64_t v0;

  sub_21C2D775C(v0 + OBJC_IVAR____TtC15ProximityReaderP33_3716CC6506213A5054A49C8E0F33F1E322AutoBugCaptureReporter_lastReportedDate, (uint64_t *)&unk_25525ED60);
  return swift_deallocClassInstance();
}

uint64_t sub_21C3304A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_21C3A8208();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21C3A81FC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_21C3A7DB8();
  MEMORY[0x24BDAC7A8](v6);
  sub_21C331A8C();
  sub_21C3A7DAC();
  v8[1] = MEMORY[0x24BEE4AF8];
  sub_21C2D1198(&qword_25525DA18, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525DA20);
  sub_21C331AC8(&qword_25525DA28, &qword_25525DA20);
  sub_21C3A834C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v0);
  result = sub_21C3A8238();
  qword_25525D918 = result;
  return result;
}

uint64_t sub_21C33065C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for AutoBugCaptureReporter();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB3470]), sel_init);
  v1 = v0
     + OBJC_IVAR____TtC15ProximityReaderP33_3716CC6506213A5054A49C8E0F33F1E322AutoBugCaptureReporter_lastReportedDate;
  v2 = sub_21C3A77B8();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_25525D920 = v0;
  return result;
}

uint64_t static AutoBugCaptureManager.sendIssue(_:)(_OWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  void *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];
  _OWORD v16[3];

  v2 = sub_21C3A7DA0();
  v14[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C3A7DB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v16[0] = *a1;
  v16[1] = v9;
  v16[2] = a1[2];
  if (qword_25525AAA0 != -1)
    swift_once();
  v10 = (_OWORD *)swift_allocObject();
  v11 = a1[1];
  v10[1] = *a1;
  v10[2] = v11;
  v10[3] = a1[2];
  aBlock[4] = sub_21C3309AC;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C3309B4;
  aBlock[3] = &block_descriptor_2;
  v12 = _Block_copy(aBlock);
  sub_21C3309F8((uint64_t)v16);
  sub_21C3A7DAC();
  v14[1] = MEMORY[0x24BEE4AF8];
  sub_21C2D1198((unint64_t *)&qword_25525D928, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D930);
  sub_21C331AC8(&qword_25525D938, &qword_25525D930);
  sub_21C3A834C();
  MEMORY[0x22077A410](0, v8, v4, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v14[0] + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_21C33090C(_OWORD *a1)
{
  __int128 v2;
  _OWORD v4[3];

  if (qword_25525AAA8 != -1)
    swift_once();
  v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  v4[2] = a1[2];
  return sub_21C32FBE4(v4);
}

uint64_t sub_21C330978()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C3309AC()
{
  uint64_t v0;

  return sub_21C33090C((_OWORD *)(v0 + 16));
}

uint64_t sub_21C3309B4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_21C3309F8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void AutoBugCaptureIssue.subType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t AutoBugCaptureIssue.subTypeContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutoBugCaptureIssue.process.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutoBugCaptureIssue.payload.getter()
{
  return swift_bridgeObjectRetain();
}

void AutoBugCaptureIssue.init(type:subType:subTypeContext:process:payload:)(_BYTE *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  *(_BYTE *)a7 = *a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
}

void AutoBugCaptureIssue.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_21C330B30()
{
  uint64_t v1;

  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  swift_bridgeObjectRetain();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_21C330C00()
{
  unint64_t result;

  result = qword_25525D940;
  if (!qword_25525D940)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for AutoBugCaptureDomain, &type metadata for AutoBugCaptureDomain);
    atomic_store(result, (unint64_t *)&qword_25525D940);
  }
  return result;
}

unint64_t sub_21C330C48()
{
  unint64_t result;

  result = qword_25525D948;
  if (!qword_25525D948)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for AutoBugCaptureType, &type metadata for AutoBugCaptureType);
    atomic_store(result, (unint64_t *)&qword_25525D948);
  }
  return result;
}

unint64_t sub_21C330C90()
{
  unint64_t result;

  result = qword_25525D950;
  if (!qword_25525D950)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for AutoBugCaptureSubType, &type metadata for AutoBugCaptureSubType);
    atomic_store(result, (unint64_t *)&qword_25525D950);
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoBugCaptureDomain()
{
  return &type metadata for AutoBugCaptureDomain;
}

uint64_t _s15ProximityReader20AutoBugCaptureDomainOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C330D2C + 4 * byte_21C3B052A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C330D4C + 4 * byte_21C3B052F[v4]))();
}

_BYTE *sub_21C330D2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C330D4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C330D54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C330D5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C330D64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C330D6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AutoBugCaptureType()
{
  return &type metadata for AutoBugCaptureType;
}

uint64_t storeEnumTagSinglePayload for AutoBugCaptureSubType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21C330DD4 + 4 * byte_21C3B0539[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21C330E08 + 4 * byte_21C3B0534[v4]))();
}

uint64_t sub_21C330E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C330E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C330E18);
  return result;
}

uint64_t sub_21C330E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C330E2CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21C330E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C330E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AutoBugCaptureSubType()
{
  return &type metadata for AutoBugCaptureSubType;
}

uint64_t sub_21C330E54()
{
  return type metadata accessor for AutoBugCaptureReporter();
}

uint64_t type metadata accessor for AutoBugCaptureReporter()
{
  uint64_t result;

  result = qword_25525D988;
  if (!qword_25525D988)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21C330E98()
{
  unint64_t v0;

  sub_21C2DC9F0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for AutoBugCaptureManager()
{
  return &type metadata for AutoBugCaptureManager;
}

uint64_t destroy for AutoBugCaptureIssue()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AutoBugCaptureIssue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AutoBugCaptureIssue(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AutoBugCaptureIssue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutoBugCaptureIssue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutoBugCaptureIssue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoBugCaptureIssue()
{
  return &type metadata for AutoBugCaptureIssue;
}

void sub_21C331140(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57[5];
  __int128 v58;
  __int128 v59;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v52 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v52 - v9;
  if (!a1)
    return;
  v55 = sub_21C3A7ED8();
  v56 = v11;
  sub_21C3A83C4();
  if (*(_QWORD *)(a1 + 16) && (v12 = sub_21C2DCA44((uint64_t)v57), (v13 & 1) != 0))
  {
    sub_21C2D77EC(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)&v58);
  }
  else
  {
    v58 = 0u;
    v59 = 0u;
  }
  sub_21C2DCEE4((uint64_t)v57);
  if (!*((_QWORD *)&v59 + 1))
  {
    sub_21C2D775C((uint64_t)&v58, &qword_25525B110);
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0 || v55 != 1)
  {
LABEL_13:
    v55 = sub_21C3A7ED8();
    v56 = v17;
    sub_21C3A83C4();
    if (*(_QWORD *)(a1 + 16) && (v18 = sub_21C2DCA44((uint64_t)v57), (v19 & 1) != 0))
    {
      sub_21C2D77EC(*(_QWORD *)(a1 + 56) + 32 * v18, (uint64_t)&v58);
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
    }
    sub_21C2DCEE4((uint64_t)v57);
    if (*((_QWORD *)&v59 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v20 = v55;
        v55 = sub_21C3A7ED8();
        v56 = v21;
        sub_21C3A83C4();
        if (*(_QWORD *)(a1 + 16) && (v22 = sub_21C2DCA44((uint64_t)v57), (v23 & 1) != 0))
        {
          sub_21C2D77EC(*(_QWORD *)(a1 + 56) + 32 * v22, (uint64_t)&v58);
        }
        else
        {
          v58 = 0u;
          v59 = 0u;
        }
        sub_21C2DCEE4((uint64_t)v57);
        if (*((_QWORD *)&v59 + 1))
        {
          if (swift_dynamicCast())
          {
            v32 = v55;
            v31 = v56;
            goto LABEL_40;
          }
        }
        else
        {
          sub_21C2D775C((uint64_t)&v58, &qword_25525B110);
        }
        v32 = 0x6E776F6E6B6E55;
        v31 = 0xE700000000000000;
LABEL_40:
        v35 = 0x6465746365707865;
        v36 = 0xE800000000000000;
        if (v20 != *MEMORY[0x24BEB34B0] && v20 != *MEMORY[0x24BEB34C8])
        {
          if (v20 == *MEMORY[0x24BEB34A8] || v20 == *MEMORY[0x24BEB34F0])
          {
            v36 = 0xE800000000000000;
          }
          else
          {
            v35 = 0x7463657078656E75;
            v36 = 0xEA00000000006465;
          }
        }
        if (qword_25525AAF8 != -1)
          swift_once();
        v38 = __swift_project_value_buffer(v2, (uint64_t)qword_255278FC0);
        sub_21C2F50EC(v38, (uint64_t)v7, (uint64_t *)&unk_25525B0E0);
        v39 = sub_21C3A79D4();
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v7, 1, v39) != 1)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v41 = sub_21C3A79BC();
          v42 = sub_21C3A81B4();
          LODWORD(v54) = v42;
          if (os_log_type_enabled(v41, v42))
          {
            v43 = swift_slowAlloc();
            v53 = swift_slowAlloc();
            v57[0] = v53;
            *(_DWORD *)v43 = 136315650;
            v52 = v32;
            swift_bridgeObjectRetain();
            *(_QWORD *)&v58 = sub_21C350398(v35, v36, v57);
            sub_21C3A82F8();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v43 + 12) = 2048;
            *(_QWORD *)&v58 = v20;
            sub_21C3A82F8();
            *(_WORD *)(v43 + 22) = 2080;
            swift_bridgeObjectRetain();
            *(_QWORD *)&v58 = sub_21C350398(v52, v31, v57);
            sub_21C3A82F8();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_21C2CD000, v41, (os_log_type_t)v54, "Diagnostic reporter snapshot rejected with %s reason: %ld (%s)", (uint8_t *)v43, 0x20u);
            v44 = v53;
            swift_arrayDestroy();
            MEMORY[0x22077AF8C](v44, -1, -1);
            MEMORY[0x22077AF8C](v43, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }

          (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v39);
          return;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = (uint64_t)v7;
        goto LABEL_62;
      }
    }
    else
    {
      sub_21C2D775C((uint64_t)&v58, &qword_25525B110);
    }
    if (qword_25525AAF8 != -1)
      swift_once();
    v24 = __swift_project_value_buffer(v2, (uint64_t)qword_255278FC0);
    sub_21C2F50EC(v24, (uint64_t)v4, (uint64_t *)&unk_25525B0E0);
    v25 = sub_21C3A79D4();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v4, 1, v25) != 1)
    {
      v28 = sub_21C3A79BC();
      v29 = sub_21C3A81B4();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_21C2CD000, v28, v29, "Diagnostic reporter snapshot rejected with unknown reason", v30, 2u);
        MEMORY[0x22077AF8C](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v25);
      return;
    }
    v27 = (uint64_t)v4;
LABEL_62:
    sub_21C2D775C(v27, (uint64_t *)&unk_25525B0E0);
    return;
  }
  v55 = sub_21C3A7ED8();
  v56 = v14;
  sub_21C3A83C4();
  if (*(_QWORD *)(a1 + 16) && (v15 = sub_21C2DCA44((uint64_t)v57), (v16 & 1) != 0))
  {
    sub_21C2D77EC(*(_QWORD *)(a1 + 56) + 32 * v15, (uint64_t)&v58);
  }
  else
  {
    v58 = 0u;
    v59 = 0u;
  }
  sub_21C2DCEE4((uint64_t)v57);
  if (!*((_QWORD *)&v59 + 1))
  {
    sub_21C2D775C((uint64_t)&v58, &qword_25525B110);
    goto LABEL_57;
  }
  if (!swift_dynamicCast())
  {
LABEL_57:
    v34 = 0x6E776F6E6B6E55;
    v33 = 0xE700000000000000;
    goto LABEL_58;
  }
  v34 = v55;
  v33 = v56;
LABEL_58:
  if (qword_25525AAF8 != -1)
    swift_once();
  v45 = __swift_project_value_buffer(v2, (uint64_t)qword_255278FC0);
  sub_21C2F50EC(v45, (uint64_t)v10, (uint64_t *)&unk_25525B0E0);
  v46 = sub_21C3A79D4();
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v10, 1, v46) == 1)
  {
    swift_bridgeObjectRelease();
    v27 = (uint64_t)v10;
    goto LABEL_62;
  }
  swift_bridgeObjectRetain();
  v48 = sub_21C3A79BC();
  v49 = sub_21C3A81B4();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc();
    v51 = swift_slowAlloc();
    v57[0] = v51;
    *(_DWORD *)v50 = 136315138;
    v54 = v50 + 4;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v58 = sub_21C350398(v34, v33, v57);
    sub_21C3A82F8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21C2CD000, v48, v49, "Diagnostic reporter snapshot accepted with sessionID [%s]", v50, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22077AF8C](v51, -1, -1);
    MEMORY[0x22077AF8C](v50, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v46);
}

uint64_t sub_21C331A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_21C331A8C()
{
  unint64_t result;

  result = qword_25525B308;
  if (!qword_25525B308)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25525B308);
  }
  return result;
}

uint64_t sub_21C331AC8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MobileDriversLicenseRawDataRequest.retainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseRawDataRequest.retainedElements.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*MobileDriversLicenseRawDataRequest.retainedElements.modify())()
{
  return nullsub_1;
}

uint64_t MobileDriversLicenseRawDataRequest.nonRetainedElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseRawDataRequest.nonRetainedElements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MobileDriversLicenseRawDataRequest.nonRetainedElements.modify())()
{
  return nullsub_1;
}

uint64_t MobileDriversLicenseRawDataRequest.init(retainedElements:nonRetainedElements:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t MobileDriversLicenseRawDataRequest.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  _BYTE *v7;

  v1 = *v0;
  v2 = v0[1];
  sub_21C3A870C();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = (_BYTE *)(v1 + 40);
    do
    {
      if ((*v4 & 1) == 0)
        sub_21C3A870C();
      v4 += 16;
      sub_21C3A870C();
      --v3;
    }
    while (v3);
  }
  result = sub_21C3A870C();
  v6 = *(_QWORD *)(v2 + 16);
  if (v6)
  {
    v7 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v7 & 1) == 0)
        sub_21C3A870C();
      v7 += 16;
      result = sub_21C3A870C();
      --v6;
    }
    while (v6);
  }
  return result;
}

uint64_t static MobileDriversLicenseRawDataRequest.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_21C311C28(*a1, *a2) & 1) != 0)
    return sub_21C311C28(v2, v3);
  else
    return 0;
}

uint64_t MobileDriversLicenseRawDataRequest.hashValue.getter()
{
  sub_21C3A8700();
  MobileDriversLicenseRawDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C331CF4()
{
  sub_21C3A8700();
  MobileDriversLicenseRawDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C331D40()
{
  sub_21C3A8700();
  MobileDriversLicenseRawDataRequest.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C331D84(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_21C311C28(*a1, *a2) & 1) != 0)
    return sub_21C311C28(v2, v3);
  else
    return 0;
}

uint64_t static MobileDocumentRequest<>.driversLicenseRawData(retaining:notRetaining:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_21C331DF8()
{
  unint64_t result;

  result = qword_25525DA30;
  if (!qword_25525DA30)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseRawDataRequest.Response, &type metadata for MobileDriversLicenseRawDataRequest.Response);
    atomic_store(result, (unint64_t *)&qword_25525DA30);
  }
  return result;
}

unint64_t sub_21C331E3C(uint64_t a1)
{
  unint64_t result;

  result = sub_21C331E60();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C331E60()
{
  unint64_t result;

  result = qword_25525DA58;
  if (!qword_25525DA58)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseRawDataRequest, &type metadata for MobileDriversLicenseRawDataRequest);
    atomic_store(result, (unint64_t *)&qword_25525DA58);
  }
  return result;
}

unint64_t sub_21C331EA8()
{
  unint64_t result;

  result = qword_25525DA60;
  if (!qword_25525DA60)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseRawDataRequest, &type metadata for MobileDriversLicenseRawDataRequest);
    atomic_store(result, (unint64_t *)&qword_25525DA60);
  }
  return result;
}

uint64_t destroy for MobileDriversLicenseRawDataRequest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s15ProximityReader34MobileDriversLicenseRawDataRequestVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MobileDriversLicenseRawDataRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for MobileDriversLicenseRawDataRequest(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileDriversLicenseRawDataRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseRawDataRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseRawDataRequest()
{
  return &type metadata for MobileDriversLicenseRawDataRequest;
}

id MobileDriversLicenseViewRequestInternal.__allocating_init(_:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return MobileDriversLicenseViewRequestInternal.init(_:sessionIdentifier:)(a1, a2, a3);
}

{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return MobileDriversLicenseViewRequestInternal.init(_:sessionIdentifier:)(a1, a2, a3);
}

BOOL MobileDriversLicenseViewRequestInternal.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements)
                   + 16) == 0;
}

uint64_t MobileDriversLicenseViewOptionsInternal.description.getter()
{
  uint64_t v0;
  __int128 v2;

  BYTE8(v2) = 0;
  sub_21C3A83DC();
  sub_21C3A7F8C();
  *(_QWORD *)&v2 = *(unsigned __int8 *)(v0
                                      + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode);
  sub_21C3A8490();
  return *(_QWORD *)((char *)&v2 + 1);
}

ProximityReader::MobileDriversLicenseViewOptionsInternal::ValidationMode_optional __swiftcall MobileDriversLicenseViewOptionsInternal.ValidationMode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (ProximityReader::MobileDriversLicenseViewOptionsInternal::ValidationMode_optional)rawValue;
}

uint64_t MobileDriversLicenseViewOptionsInternal.ValidationMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ProximityReader::MobileDriversLicenseViewOptionsInternal::ValidationMode_optional sub_21C332290(Swift::Int *a1)
{
  return MobileDriversLicenseViewOptionsInternal.ValidationMode.init(rawValue:)(*a1);
}

void sub_21C332298(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_21C3322A4()
{
  sub_21C335328();
  return sub_21C3A804C();
}

uint64_t sub_21C332300()
{
  sub_21C335328();
  return sub_21C3A8040();
}

void MobileDriversLicenseViewOptionsInternal.validationMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode);
}

id MobileDriversLicenseViewOptionsInternal.__allocating_init(_:)(_BYTE *a1)
{
  objc_class *v1;
  _BYTE *v3;
  objc_super v5;

  v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MobileDriversLicenseViewOptionsInternal.init(_:)(_BYTE *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode] = *a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id MobileDriversLicenseViewOptionsInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MobileDriversLicenseViewOptionsInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21C332478()
{
  return 0x69746164696C6176;
}

uint64_t sub_21C33249C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x69746164696C6176 && a2 == 0xEE0065646F4D6E6FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_21C3A864C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_21C332554()
{
  sub_21C332EE0();
  return sub_21C3A8754();
}

uint64_t sub_21C33257C()
{
  sub_21C332EE0();
  return sub_21C3A8760();
}

uint64_t MobileDriversLicenseViewOptionsInternal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525DA88);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C332EE0();
  sub_21C3A8748();
  v9[15] = *(_BYTE *)(v2 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode);
  sub_21C2FD5B4();
  sub_21C3A8610();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

void *MobileDriversLicenseViewOptionsInternal.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseViewOptionsInternal.init(from:)(a1);
}

void *MobileDriversLicenseViewOptionsInternal.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  objc_class *ObjectType;
  objc_super v15;
  char v16;

  v3 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525DAA0);
  v5 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C332EE0();
  v9 = v3;
  sub_21C3A873C();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v10 = v5;
    sub_21C2FD8F4();
    v11 = v13;
    sub_21C3A858C();
    *((_BYTE *)v9 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode) = v16;

    v15.receiver = v9;
    v15.super_class = ObjectType;
    v8 = objc_msgSendSuper2(&v15, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v8;
}

uint64_t sub_21C332894@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21C333C34(a1, (uint64_t (*)(uint64_t))MobileDriversLicenseViewOptionsInternal.init(from:), a2);
}

uint64_t sub_21C3328B0(_QWORD *a1)
{
  return MobileDriversLicenseViewOptionsInternal.encode(to:)(a1);
}

uint64_t static MobileDriversLicenseViewRequestInternal.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_25525DA70;
}

uint64_t static MobileDriversLicenseViewRequestInternal.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_25525DA70 = a1;
  return result;
}

uint64_t (*static MobileDriversLicenseViewRequestInternal.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MobileDriversLicenseViewRequestInternal.description.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  sub_21C3A83DC();
  sub_21C3A7F8C();
  swift_bridgeObjectRetain();
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  sub_21C398624(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements));
  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  v1 = *(id *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_options);
  v2 = objc_msgSend(v1, sel_description);
  sub_21C3A7ED8();

  sub_21C3A7F8C();
  swift_bridgeObjectRelease();
  sub_21C3A7F8C();
  return 0;
}

id MobileDriversLicenseViewRequestInternal.options.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_options);
}

uint64_t MobileDriversLicenseViewRequestInternal.elements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseViewRequestInternal.documentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C2FEB9C(v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_documentType, a1);
}

uint64_t MobileDriversLicenseViewRequestInternal.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_sessionIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id MobileDriversLicenseViewRequestInternal.init(_:sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  objc_class *ObjectType;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  _BYTE *v14;
  id v15;
  char *v16;
  uint64_t v17;
  char *v18;
  objc_super v20;
  objc_super v21;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = *(_BYTE *)(a1 + 8);
  v10 = v4;
  v11 = swift_bridgeObjectRetain();
  v12 = sub_21C31C7DC(v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements] = v12;
  v13 = (objc_class *)type metadata accessor for MobileDriversLicenseViewOptionsInternal();
  v14 = objc_allocWithZone(v13);
  v14[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode] = v9;
  v21.receiver = v14;
  v21.super_class = v13;
  v15 = objc_msgSendSuper2(&v21, sel_init);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_options] = v15;
  v16 = &v10[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_documentType];
  v17 = sub_21C3A7848();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = &v10[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_sessionIdentifier];
  *(_QWORD *)v18 = a2;
  *((_QWORD *)v18 + 1) = a3;

  v20.receiver = v10;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_init);
}

{
  void *v3;
  objc_class *ObjectType;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  _BYTE *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  objc_super v20;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = type metadata accessor for MobileNationalIDCardDisplayRequest();
  v9 = v3;
  v10 = swift_bridgeObjectRetain();
  v11 = sub_21C31C7DC(v10);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements] = v11;
  LOBYTE(v8) = *(_BYTE *)(a1 + *(int *)(v8 + 24));
  v12 = (objc_class *)type metadata accessor for MobileDriversLicenseViewOptionsInternal();
  v13 = objc_allocWithZone(v12);
  v13[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode] = v8;
  v21.receiver = v13;
  v21.super_class = v12;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_options] = objc_msgSendSuper2(&v21, sel_init);
  v14 = &v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_documentType];
  v15 = sub_21C3A7848();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v17 = &v9[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_sessionIdentifier];
  *(_QWORD *)v17 = a2;
  *((_QWORD *)v17 + 1) = a3;

  v20.receiver = v9;
  v20.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v20, sel_init);
  sub_21C2ED424(a1, (uint64_t (*)(_QWORD))type metadata accessor for MobileNationalIDCardDisplayRequest);
  return v18;
}

unint64_t sub_21C332EE0()
{
  unint64_t result;

  result = qword_25525DA90;
  if (!qword_25525DA90)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B0DCC, &type metadata for MobileDriversLicenseViewOptionsInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525DA90);
  }
  return result;
}

uint64_t type metadata accessor for MobileDriversLicenseViewOptionsInternal()
{
  return objc_opt_self();
}

Swift::Void __swiftcall MobileDriversLicenseViewRequestInternal.encode(with:)(NSCoder with)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  swift_getObjectType();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_21C3209D0((unint64_t *)&unk_25525DAB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MobileDriversLicenseViewRequestInternal, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseViewRequestInternal);
  sub_21C3A81E4();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_21C3A7EB4();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for MobileDriversLicenseViewRequestInternal()
{
  uint64_t result;

  result = qword_25525DB70;
  if (!qword_25525DB70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MobileDriversLicenseViewRequestInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseViewRequestInternal.init(coder:)(a1);
}

uint64_t MobileDriversLicenseViewRequestInternal.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;

  swift_getObjectType();
  sub_21C2D32C0();
  v3 = v1;
  v4 = sub_21C3A825C();
  if (v4)
  {
    v5 = (void *)v4;
    sub_21C3A7740();

  }
  swift_deallocPartialClassInstance();
  return 0;
}

void MobileDriversLicenseViewRequestInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21C333454()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C333484 + 4 * byte_21C3B0970[*v0]))(0x736E6F6974706FLL, 0xE700000000000000);
}

uint64_t sub_21C333484()
{
  return 0x73746E656D656C65;
}

uint64_t sub_21C33349C()
{
  return 0x746E656D75636F64;
}

unint64_t sub_21C3334BC()
{
  return 0xD000000000000011;
}

uint64_t sub_21C3334D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C33515C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21C3334FC()
{
  sub_21C33471C();
  return sub_21C3A8754();
}

uint64_t sub_21C333524()
{
  sub_21C33471C();
  return sub_21C3A8760();
}

id _s15ProximityReader39MobileDriversLicenseViewOptionsInternalCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MobileDriversLicenseViewRequestInternal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525DAD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C33471C();
  sub_21C3A8748();
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_options);
  HIBYTE(v11) = 0;
  type metadata accessor for MobileDriversLicenseViewOptionsInternal();
  sub_21C3209D0(&qword_25525DAE0, v9, (uint64_t (*)(uint64_t))type metadata accessor for MobileDriversLicenseViewOptionsInternal, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseViewOptionsInternal);
  sub_21C3A8610();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements);
    HIBYTE(v11) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D398);
    sub_21C31ED7C(&qword_25525D3A0, (uint64_t (*)(void))sub_21C31ED38, MEMORY[0x24BEE12A0]);
    sub_21C3A8610();
    LOBYTE(v12) = 2;
    type metadata accessor for IdentityDocumentType();
    sub_21C3209D0(&qword_25525D3B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for IdentityDocumentType, (uint64_t)&protocol conformance descriptor for IdentityDocumentType);
    sub_21C3A8610();
    LOBYTE(v12) = 3;
    sub_21C3A85E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id MobileDriversLicenseViewRequestInternal.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MobileDriversLicenseViewRequestInternal.init(from:)(a1);
}

id MobileDriversLicenseViewRequestInternal.init(from:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  objc_class *ObjectType;
  uint64_t v26;
  objc_super v27;
  char v28;
  uint64_t v29;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for IdentityDocumentType();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525DAE8);
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_21C33471C();
  v11 = v2;
  v22 = v9;
  v12 = v26;
  sub_21C3A873C();
  if (v12)
  {
    v21 = ObjectType;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v13 = v7;
    type metadata accessor for MobileDriversLicenseViewOptionsInternal();
    v28 = 0;
    sub_21C3209D0((unint64_t *)&unk_25525DAF0, v14, (uint64_t (*)(uint64_t))type metadata accessor for MobileDriversLicenseViewOptionsInternal, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseViewOptionsInternal);
    v15 = v22;
    v16 = v23;
    sub_21C3A858C();
    *(_QWORD *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_options] = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D398);
    v28 = 1;
    sub_21C31ED7C((unint64_t *)&unk_25525D3C0, (uint64_t (*)(void))sub_21C31EDE4, MEMORY[0x24BEE12D0]);
    sub_21C3A858C();
    *(_QWORD *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements] = v29;
    LOBYTE(v29) = 2;
    sub_21C3209D0(&qword_25525D3D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for IdentityDocumentType, (uint64_t)&protocol conformance descriptor for IdentityDocumentType);
    sub_21C3A858C();
    sub_21C2FF0D8((uint64_t)v6, (uint64_t)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_documentType]);
    LOBYTE(v29) = 3;
    v18 = sub_21C3A855C();
    v19 = (uint64_t *)&v11[OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_sessionIdentifier];
    *v19 = v18;
    v19[1] = v20;

    v27.receiver = v11;
    v27.super_class = ObjectType;
    v21 = objc_msgSendSuper2(&v27, sel_init);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  return v21;
}

uint64_t sub_21C333C18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21C333C34(a1, (uint64_t (*)(uint64_t))MobileDriversLicenseViewRequestInternal.init(from:), a2);
}

uint64_t sub_21C333C34@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  objc_class *v3;
  uint64_t v4;
  id v8;
  uint64_t result;

  v8 = objc_allocWithZone(v3);
  result = a2(a1);
  if (!v4)
    *a3 = result;
  return result;
}

uint64_t sub_21C333C8C(_QWORD *a1)
{
  return MobileDriversLicenseViewRequestInternal.encode(to:)(a1);
}

uint64_t MobileDriversLicenseViewRequestInternal.requestedElements.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25525DB10);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_21C3ACA90;
  *(_QWORD *)(v1 + 32) = sub_21C3A7F14();
  *(_QWORD *)(v1 + 40) = v2;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_elements);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v3 + 40;
    do
    {
      v6 = sub_21C3A7F14();
      v8 = v7;
      v10 = *(_QWORD *)(v1 + 16);
      v9 = *(_QWORD *)(v1 + 24);
      if (v10 >= v9 >> 1)
        v1 = (uint64_t)sub_21C3342EC((_QWORD *)(v9 > 1), v10 + 1, 1, (_QWORD *)v1);
      *(_QWORD *)(v1 + 16) = v10 + 1;
      v11 = v1 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  return v1;
}

void MobileDriversLicenseViewRequestInternal.transferType.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

BOOL MobileDriversLicenseViewRequestInternal.multiCheck.getter()
{
  uint64_t v0;

  return *(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_options)
                  + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode) == 1;
}

uint64_t sub_21C333E08()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_sessionIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21C333E44()
{
  return MobileDriversLicenseViewRequestInternal.requestedElements.getter();
}

void sub_21C333E64(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

BOOL sub_21C333E6C()
{
  _QWORD *v0;

  return *(_BYTE *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_options)
                  + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewOptionsInternal_validationMode) == 1;
}

uint64_t sub_21C333E94@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_21C2FEB9C(*v1 + OBJC_IVAR____TtC15ProximityReader39MobileDriversLicenseViewRequestInternal_documentType, a1);
}

_QWORD *sub_21C333EAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525DBE0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_21C334C8C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21C333FC8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525DBC0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21C334D80(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21C3340D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525DBB0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21C334E74(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21C3341E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525DBD8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21C334F7C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21C3342EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525DB10);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21C33506C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21C3343F8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D470);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21C33536C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_21C334504(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525D468);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_21C335454(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21C334610(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525D460);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21C33536C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_21C33471C()
{
  unint64_t result;

  result = qword_25525DAD8;
  if (!qword_25525DAD8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B0D7C, &type metadata for MobileDriversLicenseViewRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525DAD8);
  }
  return result;
}

unint64_t sub_21C334764()
{
  unint64_t result;

  result = qword_25525DB18;
  if (!qword_25525DB18)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseViewOptionsInternal.ValidationMode, &type metadata for MobileDriversLicenseViewOptionsInternal.ValidationMode);
    atomic_store(result, (unint64_t *)&qword_25525DB18);
  }
  return result;
}

uint64_t method lookup function for MobileDriversLicenseViewOptionsInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MobileDriversLicenseViewOptionsInternal.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MobileDriversLicenseViewOptionsInternal.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseViewOptionsInternal.ValidationMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C334820 + 4 * byte_21C3B0979[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C334854 + 4 * byte_21C3B0974[v4]))();
}

uint64_t sub_21C334854(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C33485C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C334864);
  return result;
}

uint64_t sub_21C334870(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C334878);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C33487C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C334884(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewOptionsInternal.ValidationMode()
{
  return &type metadata for MobileDriversLicenseViewOptionsInternal.ValidationMode;
}

uint64_t sub_21C3348A0()
{
  return type metadata accessor for MobileDriversLicenseViewRequestInternal();
}

uint64_t sub_21C3348A8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IdentityDocumentType();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MobileDriversLicenseViewRequestInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MobileDriversLicenseViewRequestInternal.__allocating_init(_:sessionIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of MobileDriversLicenseViewRequestInternal.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of MobileDriversLicenseViewRequestInternal.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseViewRequestInternal.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21C3349C0 + 4 * byte_21C3B0983[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21C3349F4 + 4 * byte_21C3B097E[v4]))();
}

uint64_t sub_21C3349F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3349FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C334A04);
  return result;
}

uint64_t sub_21C334A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C334A18);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21C334A1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C334A24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewRequestInternal.CodingKeys()
{
  return &type metadata for MobileDriversLicenseViewRequestInternal.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MobileDriversLicenseViewOptionsInternal.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C334A80 + 4 * byte_21C3B0988[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C334AA0 + 4 * byte_21C3B098D[v4]))();
}

_BYTE *sub_21C334A80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C334AA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C334AA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C334AB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C334AB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C334AC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseViewOptionsInternal.CodingKeys()
{
  return &type metadata for MobileDriversLicenseViewOptionsInternal.CodingKeys;
}

unint64_t sub_21C334AE0()
{
  unint64_t result;

  result = qword_25525DB80;
  if (!qword_25525DB80)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B0C9C, &type metadata for MobileDriversLicenseViewOptionsInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525DB80);
  }
  return result;
}

unint64_t sub_21C334B28()
{
  unint64_t result;

  result = qword_25525DB88;
  if (!qword_25525DB88)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B0D54, &type metadata for MobileDriversLicenseViewRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525DB88);
  }
  return result;
}

unint64_t sub_21C334B70()
{
  unint64_t result;

  result = qword_25525DB90;
  if (!qword_25525DB90)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B0CC4, &type metadata for MobileDriversLicenseViewRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525DB90);
  }
  return result;
}

unint64_t sub_21C334BB8()
{
  unint64_t result;

  result = qword_25525DB98;
  if (!qword_25525DB98)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B0CEC, &type metadata for MobileDriversLicenseViewRequestInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525DB98);
  }
  return result;
}

unint64_t sub_21C334C00()
{
  unint64_t result;

  result = qword_25525DBA0;
  if (!qword_25525DBA0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B0C0C, &type metadata for MobileDriversLicenseViewOptionsInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525DBA0);
  }
  return result;
}

unint64_t sub_21C334C48()
{
  unint64_t result;

  result = qword_25525DBA8;
  if (!qword_25525DBA8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B0C34, &type metadata for MobileDriversLicenseViewOptionsInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525DBA8);
  }
  return result;
}

uint64_t sub_21C334C8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C334D80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C334E74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525DBB8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C334F7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C33506C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C33515C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E656D656C65 && a2 == 0xE800000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEC00000065707954 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021C3BAA60)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_21C335328()
{
  unint64_t result;

  result = qword_25525DBC8;
  if (!qword_25525DBC8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseViewOptionsInternal.ValidationMode, &type metadata for MobileDriversLicenseViewOptionsInternal.ValidationMode);
    atomic_store(result, (unint64_t *)&qword_25525DBC8);
  }
  return result;
}

char *sub_21C33536C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_21C3A84E4();
  __break(1u);
  return result;
}

char *sub_21C335454(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority.jurisdiction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority.isoCountryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[5];
  if (v0[1])
  {
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_3;
LABEL_6:
    sub_21C3A8718();
    if (v2)
      goto LABEL_4;
    return sub_21C3A8718();
  }
  sub_21C3A8718();
  if (!v1)
    goto LABEL_6;
LABEL_3:
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_4:
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    return swift_bridgeObjectRelease();
  }
  return sub_21C3A8718();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority.hashValue.getter()
{
  sub_21C3A8700();
  MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C335718()
{
  sub_21C3A8700();
  MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C33576C()
{
  sub_21C3A8700();
  MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority.hash(into:)();
  return sub_21C3A8724();
}

unint64_t sub_21C3357BC()
{
  unint64_t result;

  result = qword_25525DBF0;
  if (!qword_25525DBF0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority, &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority);
    atomic_store(result, (unint64_t *)&qword_25525DBF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority()
{
  return &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.IssuingAuthority;
}

uint64_t MobileDriversLicenseReadResponseInternal.responseData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_responseData);
  sub_21C2D1E94(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_responseData + 8));
  return v1;
}

uint64_t MobileDriversLicenseReadResponseInternal.sessionTranscript.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_sessionTranscript);
  sub_21C2D1E94(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_sessionTranscript + 8));
  return v1;
}

uint64_t MobileDriversLicenseReadResponseInternal.issuer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_issuer);
  swift_bridgeObjectRetain();
  return v1;
}

id MobileDriversLicenseReadResponseInternal.__allocating_init(responseData:sessionTranscript:issuer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  objc_super v18;

  v13 = (char *)objc_allocWithZone(v6);
  v14 = &v13[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_responseData];
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = a2;
  v15 = &v13[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_sessionTranscript];
  *(_QWORD *)v15 = a3;
  *((_QWORD *)v15 + 1) = a4;
  v16 = &v13[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_issuer];
  *(_QWORD *)v16 = a5;
  *((_QWORD *)v16 + 1) = a6;
  v18.receiver = v13;
  v18.super_class = v6;
  return objc_msgSendSuper2(&v18, sel_init);
}

id MobileDriversLicenseReadResponseInternal.init(responseData:sessionTranscript:issuer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  char *v14;
  char *v15;
  char *v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v14 = &v6[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_responseData];
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = a2;
  v15 = &v6[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_sessionTranscript];
  *(_QWORD *)v15 = a3;
  *((_QWORD *)v15 + 1) = a4;
  v16 = &v6[OBJC_IVAR____TtC15ProximityReader40MobileDriversLicenseReadResponseInternal_issuer];
  *(_QWORD *)v16 = a5;
  *((_QWORD *)v16 + 1) = a6;
  v18.receiver = v6;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

id MobileDriversLicenseReadResponseInternal.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MobileDriversLicenseReadResponseInternal.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MobileDriversLicenseReadResponseInternal.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static MobileDriversLicenseReadResponseInternal.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_25525DC00;
}

uint64_t static MobileDriversLicenseReadResponseInternal.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_25525DC00 = a1;
  return result;
}

uint64_t (*static MobileDriversLicenseReadResponseInternal.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall MobileDriversLicenseReadResponseInternal.encode(with:)(NSCoder with)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v2 = (void *)sub_21C3A7728();
  v3 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v2, v3);

  v4 = (void *)sub_21C3A7728();
  v5 = (void *)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v4, v5);

  v6 = (void *)sub_21C3A7EB4();
  v7 = (id)sub_21C3A7EB4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v6, v7);

}

id MobileDriversLicenseReadResponseInternal.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t MobileDriversLicenseReadResponseInternal.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v8;

  v2 = v1;
  swift_getObjectType();
  sub_21C2D7704(0, (unint64_t *)&qword_25525B0F0);
  v4 = v2;
  v5 = sub_21C3A825C();
  if (v5)
  {
    v6 = (void *)v5;
    v8 = xmmword_21C3B0110;
    sub_21C3A7740();

  }
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t type metadata accessor for MobileDriversLicenseReadResponseInternal()
{
  return objc_opt_self();
}

uint64_t method lookup function for MobileDriversLicenseReadResponseInternal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MobileDriversLicenseReadResponseInternal.__allocating_init(responseData:sessionTranscript:issuer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *_s7AddressVMa()
{
  return &_s7AddressVN;
}

uint64_t sub_21C3360B4()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v8;
  _BYTE v9[16];
  _BYTE v10[16];
  _BYTE v11[16];
  _BYTE v12[16];
  _BYTE v13[16];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBAD78]), sel_init);
  sub_21C3366A8(v0, (uint64_t)v13);
  sub_21C3366A8((uint64_t)v13, (uint64_t)v14);
  if (v14[1])
  {
    v2 = (void *)sub_21C3A7EB4();
    objc_msgSend(v1, sel_setStreet_, v2);

  }
  sub_21C3366A8(v0 + 16, (uint64_t)v12);
  sub_21C3366A8((uint64_t)v12, (uint64_t)v15);
  if (v15[1])
  {
    v3 = (void *)sub_21C3A7EB4();
    objc_msgSend(v1, sel_setCity_, v3);

  }
  sub_21C3366A8(v0 + 32, (uint64_t)v11);
  sub_21C3366A8((uint64_t)v11, (uint64_t)v16);
  if (v16[1])
  {
    v4 = (void *)sub_21C3A7EB4();
    objc_msgSend(v1, sel_setState_, v4);

  }
  sub_21C3366A8(v0 + 48, (uint64_t)v10);
  sub_21C3366A8((uint64_t)v10, (uint64_t)v17);
  if (v17[1])
  {
    v5 = (void *)sub_21C3A7EB4();
    objc_msgSend(v1, sel_setPostalCode_, v5);

  }
  sub_21C3366A8(v0 + 64, (uint64_t)v9);
  sub_21C3366A8((uint64_t)v9, (uint64_t)v18);
  if (v18[1])
  {
    v6 = (void *)sub_21C3A7EB4();
    objc_msgSend(v1, sel_setISOCountryCode_, v6);

  }
  objc_msgSend(v1, sel_copy);
  sub_21C3A8340();

  swift_unknownObjectRelease();
  sub_21C3366F0();
  swift_dynamicCast();
  return v8;
}

uint64_t sub_21C3362A0()
{
  _QWORD *v0;

  if (v0[1])
  {
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
    if (v0[3])
      goto LABEL_3;
  }
  else
  {
    sub_21C3A8718();
    if (v0[3])
    {
LABEL_3:
      sub_21C3A8718();
      swift_bridgeObjectRetain();
      sub_21C3A7F50();
      swift_bridgeObjectRelease();
      if (v0[5])
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  sub_21C3A8718();
  if (v0[5])
  {
LABEL_4:
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    swift_bridgeObjectRelease();
    if (v0[7])
      goto LABEL_5;
LABEL_10:
    sub_21C3A8718();
    if (v0[9])
      goto LABEL_6;
    return sub_21C3A8718();
  }
LABEL_9:
  sub_21C3A8718();
  if (!v0[7])
    goto LABEL_10;
LABEL_5:
  sub_21C3A8718();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  if (v0[9])
  {
LABEL_6:
    sub_21C3A8718();
    swift_bridgeObjectRetain();
    sub_21C3A7F50();
    return swift_bridgeObjectRelease();
  }
  return sub_21C3A8718();
}

uint64_t sub_21C336420()
{
  sub_21C3A8700();
  sub_21C3362A0();
  return sub_21C3A8724();
}

uint64_t sub_21C336460()
{
  sub_21C3A8700();
  sub_21C3362A0();
  return sub_21C3A8724();
}

uint64_t sub_21C336498(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_21C336538(v8, v9) & 1;
}

unint64_t sub_21C3364F4()
{
  unint64_t result;

  result = qword_25525DC48;
  if (!qword_25525DC48)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B0F18, &_s7AddressVN);
    atomic_store(result, (unint64_t *)&qword_25525DC48);
  }
  return result;
}

uint64_t sub_21C336538(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = sub_21C3A864C(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = a1[3];
    v10 = a2[3];
    if (v9)
    {
      if (!v10)
        return 0;
      if (a1[2] != a2[2] || v9 != v10)
      {
        v11 = sub_21C3A864C();
        result = 0;
        if ((v11 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    v12 = a1[5];
    v13 = a2[5];
    if (v12)
    {
      if (!v13)
        return 0;
      if (a1[4] != a2[4] || v12 != v13)
      {
        v14 = sub_21C3A864C();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v13)
    {
      return 0;
    }
    v15 = a1[7];
    v16 = a2[7];
    if (v15)
    {
      if (!v16)
        return 0;
      if (a1[6] != a2[6] || v15 != v16)
      {
        v17 = sub_21C3A864C();
        result = 0;
        if ((v17 & 1) == 0)
          return result;
      }
    }
    else if (v16)
    {
      return 0;
    }
    v18 = a1[9];
    v19 = a2[9];
    if (v18)
    {
      if (v19 && (a1[8] == a2[8] && v18 == v19 || (sub_21C3A864C() & 1) != 0))
        return 1;
    }
    else if (!v19)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_21C3366A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525DC50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21C3366F0()
{
  unint64_t result;

  result = qword_25525DC58;
  if (!qword_25525DC58)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25525DC58);
  }
  return result;
}

uint64_t MobileDocumentReader.Token.tokenString.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDocumentReader.Token.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t MobileDocumentReader.Token.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  return swift_bridgeObjectRelease();
}

uint64_t static MobileDocumentReader.Token.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_21C3A864C();
}

uint64_t MobileDocumentReader.Token.hashValue.getter()
{
  sub_21C3A8700();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  return sub_21C3A8724();
}

unint64_t sub_21C336830()
{
  unint64_t result;

  result = qword_25525DC60;
  if (!qword_25525DC60)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDocumentReader.Token, &type metadata for MobileDocumentReader.Token);
    atomic_store(result, (unint64_t *)&qword_25525DC60);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReader.Token()
{
  return &type metadata for MobileDocumentReader.Token;
}

void MobileDocumentReaderError.errorDescription.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_21C3368B0()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (qword_25525AAC0 != -1)
    swift_once();
  v0 = (void *)qword_255278F20;
  v1 = (void *)sub_21C3A7EB4();
  v2 = (void *)sub_21C3A7EB4();
  v3 = (void *)sub_21C3A7EB4();
  v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

  v5 = sub_21C3A7ED8();
  return v5;
}

BOOL static MobileDocumentReaderError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDocumentReaderError.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileDocumentReaderError.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C336CE8()
{
  unint64_t result;

  result = qword_25525DC68;
  if (!qword_25525DC68)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDocumentReaderError, &type metadata for MobileDocumentReaderError);
    atomic_store(result, (unint64_t *)&qword_25525DC68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MobileDocumentReaderError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileDocumentReaderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_21C336E0C + 4 * byte_21C3B1010[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_21C336E40 + 4 * byte_21C3B100B[v4]))();
}

uint64_t sub_21C336E40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C336E48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C336E50);
  return result;
}

uint64_t sub_21C336E5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C336E64);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_21C336E68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C336E70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderError()
{
  return &type metadata for MobileDocumentReaderError;
}

uint64_t initializeWithCopy for DiscoveryErrorView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DiscoveryErrorView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for DiscoveryErrorView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryErrorView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryErrorView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryErrorView()
{
  return &type metadata for DiscoveryErrorView;
}

uint64_t sub_21C33702C()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_21C33703C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[424];
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE __src[408];
  CGRect v35;

  v26 = sub_21C3A7B48();
  sub_21C33721C((_QWORD *)v1, (uint64_t)__src);
  v3 = *(_BYTE *)(v1 + 32) & 1;
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v4, sel_bounds);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    v35.origin.x = v6;
    v35.origin.y = v8;
    v35.size.width = v10;
    v35.size.height = v12;
    CGRectGetHeight(v35);
  }
  sub_21C3A7D94();
  sub_21C3A7A64();
  v13 = v29;
  v14 = v30;
  v15 = v31;
  v24 = v32;
  v25 = v28;
  v23 = v33;
  v16 = sub_21C3A7AA0();
  v17 = sub_21C3A7C2C();
  if (v3)
    sub_21C337AEC();
  v18 = sub_21C3A7D64();
  v27[400] = 1;
  memcpy(&v27[7], __src, 0x189uLL);
  v27[416] = v29;
  v27[408] = v31;
  v19 = sub_21C3A7D94();
  v21 = v20;
  *(_QWORD *)a1 = v26;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  result = memcpy((void *)(a1 + 17), v27, 0x190uLL);
  *(_QWORD *)(a1 + 424) = v25;
  *(_BYTE *)(a1 + 432) = v13;
  *(_QWORD *)(a1 + 440) = v14;
  *(_BYTE *)(a1 + 448) = v15;
  *(_QWORD *)(a1 + 456) = v24;
  *(_QWORD *)(a1 + 464) = v23;
  *(_QWORD *)(a1 + 472) = v16;
  *(_BYTE *)(a1 + 480) = v17;
  *(_QWORD *)(a1 + 488) = v18;
  *(_QWORD *)(a1 + 496) = v19;
  *(_QWORD *)(a1 + 504) = v21;
  return result;
}

uint64_t sub_21C33721C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t KeyPath;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  _BYTE v126[25];
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  _BYTE v135[25];
  char v136;
  _OWORD v137[10];
  _BYTE v138[208];
  char v139;
  _BYTE v140[7];
  _QWORD v141[2];
  char v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  _QWORD v160[2];
  char v161;
  _BYTE v162[7];
  uint64_t v163;
  uint64_t v164;
  char v165;
  _BYTE v166[7];
  uint64_t v167;
  uint64_t v168;
  char v169;
  _BYTE v170[7];
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  _BYTE v176[7];
  char v177;
  _BYTE v178[7];
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  _BYTE v184[7];
  char v185;
  _BYTE v186[7];
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  char v192;
  char v193;
  char v194;
  char v195;
  _BYTE v196[7];
  _BYTE v197[7];
  _BYTE v198[7];
  _BYTE v199[7];
  _BYTE v200[7];
  _BYTE v201[7];
  _DWORD v202[7];

  v3 = a1[1];
  *(_QWORD *)v138 = *a1;
  *(_QWORD *)&v138[8] = v3;
  sub_21C30E1A4();
  swift_bridgeObjectRetain();
  v4 = sub_21C3A7CB0();
  v6 = v5;
  v8 = v7 & 1;
  sub_21C3A7C74();
  v9 = sub_21C3A7CA4();
  v11 = v10;
  v13 = v12;
  swift_release();
  sub_21C3106CC(v4, v6, v8);
  swift_bridgeObjectRelease();
  sub_21C3A7C5C();
  v14 = sub_21C3A7C8C();
  v100 = v15;
  v101 = v14;
  v17 = v16;
  v99 = v18;
  sub_21C3106CC(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v97 = swift_getKeyPath();
  v98 = sub_21C3A7C38();
  sub_21C3A7A4C();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v95 = sub_21C3A7C20();
  sub_21C3A7A4C();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v94 = v33;
  v194 = v17 & 1;
  v193 = 0;
  v192 = 0;
  v103 = sub_21C3A7C44();
  sub_21C3A7A4C();
  v106 = v35;
  v107 = v34;
  v104 = v37;
  v105 = v36;
  v102 = v17 & 1;
  v195 = 0;
  *(_QWORD *)v138 = a1[2];
  swift_bridgeObjectRetain();
  v38 = sub_21C3A7CB0();
  v40 = v39;
  v42 = v41 & 1;
  sub_21C3A7C80();
  v43 = sub_21C3A7CA4();
  v45 = v44;
  LOBYTE(v4) = v46;
  swift_release();
  sub_21C3106CC(v38, v40, v42);
  swift_bridgeObjectRelease();
  sub_21C3A7D04();
  v47 = sub_21C3A7C98();
  v92 = v48;
  v93 = v47;
  LOBYTE(v9) = v49;
  v90 = v50;
  swift_release();
  sub_21C3106CC(v43, v45, v4 & 1);
  swift_bridgeObjectRelease();
  v89 = swift_getKeyPath();
  v88 = swift_getKeyPath();
  v87 = sub_21C3A7C44();
  sub_21C3A7A4C();
  v85 = v52;
  v86 = v51;
  v83 = v54;
  v84 = v53;
  LOBYTE(v40) = sub_21C3A7C20();
  sub_21C3A7A4C();
  LODWORD(v114) = v202[0];
  *(_DWORD *)((char *)&v114 + 3) = *(_DWORD *)((char *)v202 + 3);
  LODWORD(v113) = *(_DWORD *)v201;
  *(_DWORD *)((char *)&v113 + 3) = *(_DWORD *)&v201[3];
  LODWORD(v112) = *(_DWORD *)v200;
  *(_DWORD *)((char *)&v112 + 3) = *(_DWORD *)&v200[3];
  *(_DWORD *)((char *)&v111 + 3) = *(_DWORD *)&v199[3];
  LODWORD(v111) = *(_DWORD *)v199;
  v55 = *(_DWORD *)v199;
  *(_DWORD *)((char *)&v110 + 3) = *(_DWORD *)&v198[3];
  LODWORD(v110) = *(_DWORD *)v198;
  *(_DWORD *)((char *)&v109 + 3) = *(_DWORD *)&v197[3];
  LODWORD(v109) = *(_DWORD *)v197;
  *(_DWORD *)((char *)&v108 + 3) = *(_DWORD *)&v196[3];
  LODWORD(v108) = *(_DWORD *)v196;
  *(_DWORD *)(a2 + 377) = *(_DWORD *)v140;
  DWORD1(v116) = *(_DWORD *)((char *)v202 + 3);
  *(_DWORD *)((char *)&v116 + 1) = v202[0];
  HIDWORD(v117) = *(_DWORD *)&v201[3];
  *(_DWORD *)((char *)&v117 + 9) = *(_DWORD *)v201;
  DWORD1(v119) = *(_DWORD *)&v200[3];
  *(_DWORD *)((char *)&v119 + 1) = *(_DWORD *)v200;
  HIDWORD(v121) = *(_DWORD *)&v199[3];
  *((_QWORD *)&v115 + 1) = v100;
  LOBYTE(v116) = v102;
  *((_QWORD *)&v116 + 1) = v99;
  *(_QWORD *)&v117 = KeyPath;
  *(_DWORD *)((char *)&v121 + 9) = v55;
  DWORD1(v122) = *(_DWORD *)&v198[3];
  *(_DWORD *)((char *)&v122 + 1) = *(_DWORD *)v198;
  HIDWORD(v124) = *(_DWORD *)&v197[3];
  *(_DWORD *)((char *)&v124 + 9) = *(_DWORD *)v197;
  DWORD1(v125) = *(_DWORD *)&v196[3];
  BYTE8(v117) = 1;
  *(_DWORD *)((char *)&v125 + 1) = *(_DWORD *)v196;
  *(_QWORD *)&v118 = v97;
  *((_QWORD *)&v118 + 1) = 0x3FE0000000000000;
  LOBYTE(v119) = v98;
  *((_QWORD *)&v119 + 1) = v20;
  *(_QWORD *)&v120 = v22;
  *((_QWORD *)&v120 + 1) = v24;
  *(_QWORD *)&v121 = v26;
  BYTE8(v121) = 0;
  LOBYTE(v122) = v95;
  *((_QWORD *)&v122 + 1) = v28;
  *(_QWORD *)&v123 = v30;
  *((_QWORD *)&v123 + 1) = v32;
  *(_QWORD *)&v124 = v94;
  BYTE8(v124) = 0;
  LOBYTE(v125) = v103;
  *((_QWORD *)&v125 + 1) = v107;
  *(_QWORD *)v126 = v106;
  *(_QWORD *)&v126[8] = v105;
  *(_QWORD *)&v126[16] = v104;
  v126[24] = 0;
  *((_QWORD *)&v128 + 1) = v90;
  *(_QWORD *)&v129 = v89;
  BYTE8(v129) = 1;
  *(_QWORD *)&v130 = v88;
  *((_QWORD *)&v130 + 1) = 0x3FE0000000000000;
  LOBYTE(v131) = v87;
  *((_QWORD *)&v131 + 1) = v86;
  *(_QWORD *)&v132 = v85;
  *((_QWORD *)&v132 + 1) = v84;
  *(_QWORD *)&v133 = v83;
  BYTE8(v133) = 0;
  LOBYTE(v134) = v40;
  *((_QWORD *)&v134 + 1) = v56;
  *(_QWORD *)v135 = v57;
  *(_QWORD *)&v135[8] = v58;
  *(_QWORD *)&v135[16] = v59;
  v135[24] = 0;
  v139 = 1;
  v60 = *(_OWORD *)&v126[9];
  *(_OWORD *)((char *)&v137[6] + 7) = v133;
  *(_OWORD *)((char *)&v137[7] + 7) = v134;
  *(_OWORD *)((char *)&v137[8] + 7) = *(_OWORD *)v135;
  v137[9] = *(_OWORD *)&v135[9];
  *(_OWORD *)((char *)&v137[2] + 7) = v129;
  *(_OWORD *)((char *)&v137[3] + 7) = v130;
  *(_OWORD *)((char *)&v137[4] + 7) = v131;
  *(_OWORD *)((char *)&v137[5] + 7) = v132;
  *(_BYTE *)(a2 + 8) = 1;
  v61 = v137[6];
  v62 = v137[8];
  v63 = v137[9];
  *(_OWORD *)(a2 + 329) = v137[7];
  *(_OWORD *)(a2 + 345) = v62;
  *(_OWORD *)(a2 + 361) = v63;
  v64 = v137[4];
  v65 = v137[5];
  *(_OWORD *)(a2 + 265) = v137[3];
  *(_OWORD *)(a2 + 281) = v64;
  *(_OWORD *)(a2 + 297) = v65;
  *(_OWORD *)(a2 + 313) = v61;
  *(_QWORD *)&v127 = v93;
  *((_QWORD *)&v127 + 1) = v92;
  LOBYTE(v128) = v9 & 1;
  *(_OWORD *)((char *)&v137[1] + 7) = v128;
  *(_OWORD *)((char *)v137 + 7) = v127;
  v66 = v137[0];
  v68 = v137[1];
  v67 = v137[2];
  *(_QWORD *)&v115 = v101;
  *(_OWORD *)&v138[151] = v124;
  *(_OWORD *)&v138[167] = v125;
  *(_OWORD *)&v138[183] = *(_OWORD *)v126;
  *(_OWORD *)&v138[192] = v60;
  *(_OWORD *)&v138[87] = v120;
  *(_OWORD *)&v138[103] = v121;
  *(_OWORD *)&v138[119] = v122;
  *(_OWORD *)&v138[135] = v123;
  *(_OWORD *)&v138[23] = v116;
  *(_OWORD *)&v138[39] = v117;
  *(_OWORD *)&v138[55] = v118;
  *(_OWORD *)&v138[71] = v119;
  *(_OWORD *)&v138[7] = v115;
  v69 = *(_OWORD *)&v138[160];
  v70 = *(_OWORD *)&v138[176];
  v71 = *(_OWORD *)&v138[192];
  v72 = *(_OWORD *)&v138[96];
  v73 = *(_OWORD *)&v138[112];
  v75 = *(_OWORD *)&v138[128];
  v74 = *(_OWORD *)&v138[144];
  v76 = *(_OWORD *)&v138[32];
  v77 = *(_OWORD *)&v138[48];
  v79 = *(_OWORD *)&v138[64];
  v78 = *(_OWORD *)&v138[80];
  v81 = *(_OWORD *)v138;
  v80 = *(_OWORD *)&v138[16];
  *(_DWORD *)(a2 + 380) = *(_DWORD *)&v140[3];
  *(_OWORD *)(a2 + 153) = v74;
  *(_OWORD *)(a2 + 169) = v69;
  *(_OWORD *)(a2 + 185) = v70;
  *(_OWORD *)(a2 + 201) = v71;
  *(_OWORD *)(a2 + 89) = v78;
  *(_OWORD *)(a2 + 105) = v72;
  *(_OWORD *)(a2 + 121) = v73;
  *(_OWORD *)(a2 + 137) = v75;
  *(_OWORD *)(a2 + 25) = v80;
  *(_OWORD *)(a2 + 41) = v76;
  *(_OWORD *)(a2 + 57) = v77;
  *(_OWORD *)(a2 + 73) = v79;
  *(_OWORD *)(a2 + 9) = v81;
  *(_OWORD *)(a2 + 249) = v67;
  *(_OWORD *)(a2 + 217) = v66;
  *(_QWORD *)a2 = 0;
  *(_OWORD *)(a2 + 233) = v68;
  *(_QWORD *)(a2 + 384) = 0;
  *(_BYTE *)(a2 + 392) = 1;
  v141[0] = v93;
  v141[1] = v92;
  v142 = v9 & 1;
  v143 = v90;
  v144 = v89;
  v148 = v87;
  v153 = 0;
  v154 = v40;
  v159 = 0;
  v146 = v88;
  v136 = 1;
  v145 = 1;
  v147 = 0x3FE0000000000000;
  v149 = v86;
  v150 = v85;
  v151 = v84;
  v152 = v83;
  v155 = v56;
  v156 = v57;
  v157 = v58;
  v158 = v59;
  sub_21C337E84((uint64_t)&v115);
  sub_21C337E84((uint64_t)&v127);
  sub_21C337EDC((uint64_t)v141);
  v160[0] = v101;
  v160[1] = v100;
  v161 = v102;
  *(_DWORD *)v162 = v114;
  *(_DWORD *)&v162[3] = *(_DWORD *)((char *)&v114 + 3);
  v163 = v99;
  v164 = KeyPath;
  v165 = 1;
  *(_DWORD *)v166 = v113;
  *(_DWORD *)&v166[3] = *(_DWORD *)((char *)&v113 + 3);
  v167 = v97;
  v168 = 0x3FE0000000000000;
  v169 = v98;
  *(_DWORD *)&v170[3] = *(_DWORD *)((char *)&v112 + 3);
  *(_DWORD *)v170 = v112;
  v171 = v20;
  v172 = v22;
  v173 = v24;
  v174 = v26;
  v175 = 0;
  *(_DWORD *)&v176[3] = *(_DWORD *)((char *)&v111 + 3);
  *(_DWORD *)v176 = v111;
  v177 = v95;
  *(_DWORD *)&v178[3] = *(_DWORD *)((char *)&v110 + 3);
  *(_DWORD *)v178 = v110;
  v179 = v28;
  v180 = v30;
  v181 = v32;
  v182 = v94;
  v183 = 0;
  *(_DWORD *)&v184[3] = *(_DWORD *)((char *)&v109 + 3);
  *(_DWORD *)v184 = v109;
  v185 = v103;
  *(_DWORD *)&v186[3] = *(_DWORD *)((char *)&v108 + 3);
  *(_DWORD *)v186 = v108;
  v187 = v107;
  v188 = v106;
  v189 = v105;
  v190 = v104;
  v191 = 0;
  return sub_21C337EDC((uint64_t)v160);
}

void *sub_21C337AB4@<X0>(uint64_t a1@<X8>)
{
  return sub_21C33703C(a1);
}

unint64_t sub_21C337AEC()
{
  unint64_t result;

  result = qword_25525DC70;
  if (!qword_25525DC70)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B12C8, &type metadata for TransparentView);
    atomic_store(result, (unint64_t *)&qword_25525DC70);
  }
  return result;
}

void sub_21C337B30(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v2 = objc_msgSend(a1, sel_superview);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_superview);

    if (v4)
    {
      v5 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      objc_msgSend(v4, sel_setBackgroundColor_, v5);

    }
  }
  v6 = objc_msgSend(a1, sel_superview);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_superview);

    if (v8)
    {
      objc_msgSend(v8, sel_setUserInteractionEnabled_, 0);

    }
  }
}

uint64_t sub_21C337C50()
{
  return sub_21C3A7B78();
}

uint64_t sub_21C337C90()
{
  sub_21C3380CC();
  return sub_21C3A7BD8();
}

uint64_t sub_21C337CE0()
{
  sub_21C3380CC();
  return sub_21C3A7B84();
}

void sub_21C337D30()
{
  sub_21C3380CC();
  sub_21C3A7BCC();
  __break(1u);
}

uint64_t sub_21C337D54@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21C3A7AD0();
  *a1 = v3;
  return result;
}

uint64_t sub_21C337D7C()
{
  return sub_21C3A7ADC();
}

uint64_t sub_21C337DA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21C3A7AE8();
  *a1 = result;
  return result;
}

uint64_t sub_21C337DC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21C3A7AE8();
  *a1 = result;
  return result;
}

uint64_t sub_21C337DF0()
{
  return sub_21C3A7AF4();
}

uint64_t sub_21C337E14()
{
  return sub_21C3A7AF4();
}

uint64_t sub_21C337E38@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21C3A7AD0();
  *a1 = v3;
  return result;
}

uint64_t sub_21C337E60()
{
  return sub_21C3A7ADC();
}

uint64_t sub_21C337E84(uint64_t a1)
{
  sub_21C3106EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_21C337EDC(uint64_t a1)
{
  sub_21C3106CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TransparentView()
{
  return &type metadata for TransparentView;
}

unint64_t sub_21C337F48()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25525DC78;
  if (!qword_25525DC78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525DC80);
    v2[0] = sub_21C337FCC();
    v2[1] = sub_21C3105F0(&qword_25525DCB8, &qword_25525DCC0, MEMORY[0x24BDEF370]);
    result = MEMORY[0x22077AECC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25525DC78);
  }
  return result;
}

unint64_t sub_21C337FCC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25525DC88;
  if (!qword_25525DC88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525DC90);
    v2[0] = sub_21C338038();
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x22077AECC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25525DC88);
  }
  return result;
}

unint64_t sub_21C338038()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25525DC98;
  if (!qword_25525DC98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525DCA0);
    v2[0] = sub_21C3105F0(&qword_25525DCA8, &qword_25525DCB0, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x22077AECC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25525DC98);
  }
  return result;
}

uint64_t sub_21C3380C0()
{
  return MEMORY[0x24BDF5560];
}

unint64_t sub_21C3380CC()
{
  unint64_t result;

  result = qword_25525DCC8;
  if (!qword_25525DCC8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B1238, &type metadata for TransparentView);
    atomic_store(result, (unint64_t *)&qword_25525DCC8);
  }
  return result;
}

id sub_21C338110()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD aBlock[6];

  v0 = sub_21C3A7DA0();
  v13 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21C3A7DB8();
  v3 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  sub_21C331A8C();
  v7 = (void *)sub_21C3A8214();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  aBlock[4] = sub_21C33833C;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C3309B4;
  aBlock[3] = &block_descriptor_3;
  v9 = _Block_copy(aBlock);
  v10 = v6;
  swift_release();
  sub_21C3A7DAC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_21C33835C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D930);
  sub_21C3105F0(&qword_25525D938, &qword_25525D930, MEMORY[0x24BEE12C8]);
  sub_21C3A834C();
  MEMORY[0x22077A410](0, v5, v2, v9);
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v12);
  return v10;
}

uint64_t sub_21C338318()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21C33833C()
{
  uint64_t v0;

  sub_21C337B30(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_21C33835C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525D928;
  if (!qword_25525D928)
  {
    v1 = sub_21C3A7DA0();
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_25525D928);
  }
  return result;
}

BOOL static MobileDriversLicenseDataRequest.Response.DocumentElements.DHSComplianceStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DHSComplianceStatus.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.DHSComplianceStatus.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

unint64_t sub_21C338430()
{
  unint64_t result;

  result = qword_25525DCD0;
  if (!qword_25525DCD0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response.DocumentElements.DHSComplianceStatus, &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.DHSComplianceStatus);
    atomic_store(result, (unint64_t *)&qword_25525DCD0);
  }
  return result;
}

uint64_t _s19DHSComplianceStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C3384C0 + 4 * byte_21C3B1325[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C3384F4 + 4 * byte_21C3B1320[v4]))();
}

uint64_t sub_21C3384F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C3384FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C338504);
  return result;
}

uint64_t sub_21C338510(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C338518);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C33851C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C338524(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.DHSComplianceStatus()
{
  return &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.DHSComplianceStatus;
}

BOOL static MobileDriversLicenseDataRequest.Response.DocumentElements.Sex.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.Sex.hash(into:)()
{
  return sub_21C3A870C();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.Sex.hashValue.getter()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.Sex.localizedName.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_21C3A7A40();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v5, **((unsigned int **)&unk_24E034328 + *v0), v1, v3);
  v6 = sub_21C3A7A34();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v6;
}

unint64_t sub_21C338674()
{
  unint64_t result;

  result = qword_25525DCD8;
  if (!qword_25525DCD8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response.DocumentElements.Sex, &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.Sex);
    atomic_store(result, (unint64_t *)&qword_25525DCD8);
  }
  return result;
}

uint64_t _s3SexOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21C338704 + 4 * byte_21C3B13C1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21C338738 + 4 * byte_21C3B13BC[v4]))();
}

uint64_t sub_21C338738(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C338740(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C338748);
  return result;
}

uint64_t sub_21C338754(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C33875CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21C338760(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C338768(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.Sex()
{
  return &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.Sex;
}

unint64_t PINSessionEvent.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t TransactionUIEvent.init(readError:)(uint64_t a1)
{
  if ((unint64_t)(a1 - 10) > 0x1B)
    return 12;
  else
    return qword_21C3B16C8[a1 - 10];
}

unint64_t TransactionUIEvent.init(rawValue:)(unint64_t a1)
{
  return sub_21C338B98(a1);
}

unint64_t sub_21C3387D8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_21C338B98(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t TransactionUIEvent.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x6F4C726564616572;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
    case 2:
    case 14:
      result = 0xD000000000000011;
      break;
    case 3:
      result = 0xD000000000000012;
      break;
    case 4:
      result = 0xD000000000000010;
      break;
    case 5:
      result = 0xD000000000000013;
      break;
    case 6:
      result = 0xD00000000000001ALL;
      break;
    case 7:
      result = 0xD000000000000016;
      break;
    case 8:
    case 9:
      result = 0x6143726564616572;
      break;
    case 10:
      result = 0x6553726564616572;
      break;
    case 11:
      result = 0x6954726564616572;
      break;
    case 12:
      result = 0x6146726564616572;
      break;
    case 13:
      result = 0xD00000000000001CLL;
      break;
    case 15:
      result = 0xD000000000000012;
      break;
    case 16:
      result = 0x6156726564616572;
      break;
    case 17:
      result = 0xD000000000000014;
      break;
    case 18:
      result = 0xD000000000000019;
      break;
    case 19:
      result = 0xD000000000000014;
      break;
    case 20:
      result = 0xD000000000000018;
      break;
    default:
      result = sub_21C3A8670();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_21C338A84()
{
  uint64_t *v0;

  return TransactionUIEvent.description.getter(*v0);
}

uint64_t AccessibilityType.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x7972746E456F6ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x796C6E4F706174;
      break;
    case 2:
      result = 0x656C626269726373;
      break;
    case 3:
      result = 0x6353646E41706174;
      break;
    default:
      result = sub_21C3A8670();
      __break(1u);
      break;
  }
  return result;
}

unint64_t AccessibilityType.init(rawValue:)(unint64_t a1)
{
  return sub_21C338BA8(a1);
}

unint64_t sub_21C338B68@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_21C338BA8(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_21C338B98(unint64_t result)
{
  if (result > 0x14)
    return 0;
  return result;
}

unint64_t sub_21C338BA8(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_21C338BBC()
{
  unint64_t result;

  result = qword_25525DCE0;
  if (!qword_25525DCE0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for PINSessionEvent, &type metadata for PINSessionEvent);
    atomic_store(result, (unint64_t *)&qword_25525DCE0);
  }
  return result;
}

unint64_t sub_21C338C04()
{
  unint64_t result;

  result = qword_25525DCE8;
  if (!qword_25525DCE8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for TransactionUIEvent, &type metadata for TransactionUIEvent);
    atomic_store(result, (unint64_t *)&qword_25525DCE8);
  }
  return result;
}

unint64_t sub_21C338C4C()
{
  unint64_t result;

  result = qword_25525DCF0;
  if (!qword_25525DCF0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for AccessibilityType, &type metadata for AccessibilityType);
    atomic_store(result, (unint64_t *)&qword_25525DCF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PINSessionEvent()
{
  return &type metadata for PINSessionEvent;
}

ValueMetadata *type metadata accessor for TransactionUIEvent()
{
  return &type metadata for TransactionUIEvent;
}

ValueMetadata *type metadata accessor for AccessibilityType()
{
  return &type metadata for AccessibilityType;
}

uint64_t sub_21C338CC0()
{
  uint64_t result;

  type metadata accessor for PaymentCardReaderActor();
  swift_allocObject();
  result = sub_21C338CF8();
  qword_255278F10 = result;
  return result;
}

uint64_t sub_21C338CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t active;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  v2 = sub_21C3A77E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 144) = sub_21C2F5A64(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 152) = 0;
  active = type metadata accessor for UIForegroundActiveArbiter();
  swift_allocObject();
  v8 = sub_21C2D7BD0();
  *(_QWORD *)(v0 + 184) = active;
  *(_QWORD *)(v0 + 192) = &off_24E02F548;
  *(_QWORD *)(v0 + 160) = v8;
  type metadata accessor for PaymentCardReaderForegroundObserver();
  v9 = swift_allocObject();
  sub_21C3A77DC();
  v10 = sub_21C3A77C4();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)(v9 + 16) = v10;
  *(_QWORD *)(v9 + 24) = v12;
  *(_QWORD *)(v1 + 200) = v9;
  *(_QWORD *)(v1 + 208) = 0;
  *(_BYTE *)(v1 + 216) = 1;
  *(_WORD *)(v1 + 217) = 0;
  *(_OWORD *)(v1 + 224) = 0u;
  *(_OWORD *)(v1 + 240) = 0u;
  *(_QWORD *)(v1 + 256) = sub_21C2F5C08(v6);
  *(_QWORD *)(v1 + 264) = sub_21C2F5C14(v6);
  *(_BYTE *)(v1 + 272) = 0;
  *(_QWORD *)(v1 + 208) = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 184))+ 32);
  *(_BYTE *)(v1 + 216) = 0;
  v13 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 184));
  v14 = swift_retain();
  sub_21C348718(v14, v13);
  swift_release();
  return v1;
}

uint64_t sub_21C338E84()
{
  uint64_t v0;
  uint64_t *v1;

  v1 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 184));
  sub_21C3488A8(*(_QWORD *)(v0 + 200), *v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_21C338F18()
{
  sub_21C338E84();
  return swift_defaultActor_deallocate();
}

uint64_t sub_21C338F30(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E260);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v14, (uint64_t)v13);
  v15 = sub_21C3A79D4();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_21C2D775C((uint64_t)v13, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v4, 0x2870757472617473, 0xED0000293A5F3A5FLL, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v10, a3, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21C3764B8((uint64_t)v10, a1, a2);
  swift_endAccess();
  return sub_21C339CF8(a1, a2);
}

uint64_t sub_21C339134(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  v3[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E260);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v3[14] = v4;
  v3[15] = *(_QWORD *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C33922C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 136), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v6 = v5(v1, 1, v3);
  v7 = *(_QWORD *)(v0 + 152);
  if (v6 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 152), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 80), 0x2870756E61656C63, 0xEB00000000293A5FLL, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v8 = *(_QWORD *)(v0 + 80) + 144;
  swift_beginAccess();
  v9 = *(_QWORD *)v8;
  if (*(_QWORD *)(*(_QWORD *)v8 + 16))
  {
    v43 = v2;
    v11 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_21C2DC178(v11, v10);
    v13 = *(_QWORD *)(v0 + 112);
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 104);
    v16 = v4;
    if ((v17 & 1) != 0)
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(v14 + 16))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v9 + 56) + *(_QWORD *)(v14 + 72) * v12, *(_QWORD *)(v0 + 112));
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v18(v15, 0, 1, v13);
    }
    else
    {
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v18(*(_QWORD *)(v0 + 104), 1, 1, v13);
    }
    v19 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 104);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19);
    v4 = v16;
    v2 = v43;
    if (v22 != 1)
    {
      v36 = *(_QWORD *)(v0 + 128);
      v37 = *(_QWORD *)(v0 + 112);
      v38 = *(_QWORD *)(v0 + 96);
      v39 = *(_QWORD *)(v0 + 72);
      v42 = *(_QWORD *)(v0 + 120);
      v40 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v42 + 32))(v36, *(_QWORD *)(v0 + 104), v37);
      sub_21C3A813C();
      v18(v38, 1, 1, v37);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_21C3764B8(v38, v40, v39);
      swift_endAccess();
      sub_21C33A024(v40, v39);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v36, v37);
      goto LABEL_19;
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 56))(*(_QWORD *)(v0 + 104), 1, 1, *(_QWORD *)(v0 + 112));
  }
  v23 = *(_QWORD *)(v0 + 144);
  sub_21C2D775C(*(_QWORD *)(v0 + 104), &qword_25525E260);
  sub_21C2D1D80(v2, v23);
  if (v5(v23, 1, v3) == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 144), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v24 = sub_21C3A79BC();
    v25 = sub_21C3A81C0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_21C2CD000, v24, v25, "reader delayed cleanup scheduled", v26, 2u);
      MEMORY[0x22077AF8C](v26, -1, -1);
    }
    v27 = *(_QWORD *)(v0 + 144);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v27, v3);
  }
  v28 = *(_QWORD *)(v0 + 80);
  v29 = *(_QWORD *)(v0 + 88);
  v31 = *(_QWORD *)(v0 + 64);
  v30 = *(_QWORD *)(v0 + 72);
  v32 = sub_21C3A8118();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v29, 1, 1, v32);
  v34 = sub_21C3209D0(&qword_25525E238, v33, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
  v35 = (_QWORD *)swift_allocObject();
  v35[2] = v28;
  v35[3] = v34;
  v35[4] = v28;
  v35[5] = v31;
  v35[6] = v30;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_21C2DDA54(v29, (uint64_t)&unk_25525E270, (uint64_t)v35);
  swift_release();
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C339690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  v6[11] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E260);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v6[16] = v7;
  v6[17] = *(_QWORD *)(v7 - 8);
  v6[18] = swift_task_alloc();
  v8 = sub_21C3A8478();
  v6[19] = v8;
  v6[20] = *(_QWORD *)(v8 - 8);
  v6[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C339790()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_21C3A846C();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_25525E278 + dword_25525E278);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v1;
  *v1 = v0;
  v1[1] = sub_21C339810;
  return v3(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_21C339810()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[20];
  v3 = v2[21];
  v5 = v2[19];
  if (v0)

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch();
}

uint64_t sub_21C3398B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 64) + 144;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 56))(*(_QWORD *)(v0 + 120), 1, 1, *(_QWORD *)(v0 + 128));
LABEL_7:
    sub_21C2D775C(*(_QWORD *)(v0 + 120), &qword_25525E260);
    if (qword_25525AAD0 != -1)
      swift_once();
    v14 = *(_QWORD *)(v0 + 104);
    v15 = __swift_project_value_buffer(*(_QWORD *)(v0 + 88), (uint64_t)qword_255278F48);
    sub_21C2D1D80(v15, v14);
    v16 = sub_21C3A79D4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v18 = sub_21C3A79BC();
      v19 = sub_21C3A81C0();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_21C2CD000, v18, v19, "reader delayed cleanup failed ", v20, 2u);
        MEMORY[0x22077AF8C](v20, -1, -1);
      }
      v21 = *(_QWORD *)(v0 + 104);

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v16);
    }
    goto LABEL_22;
  }
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_21C2DC178(v4, v3);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 120);
  if ((v9 & 1) != 0)
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(v7 + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v2 + 56) + *(_QWORD *)(v7 + 72) * v5, *(_QWORD *)(v0 + 128));
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v10(v8, 0, 1, v6);
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v10(*(_QWORD *)(v0 + 120), 1, 1, v6);
  }
  v11 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) == 1)
    goto LABEL_7;
  v37 = v10;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 32))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  if (qword_25525AAD0 != -1)
    swift_once();
  v22 = *(_QWORD *)(v0 + 96);
  v23 = __swift_project_value_buffer(*(_QWORD *)(v0 + 88), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v23, v22);
  v24 = sub_21C3A79D4();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24) == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 96), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v26 = sub_21C3A79BC();
    v27 = sub_21C3A81D8();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_21C2CD000, v26, v27, "reader delayed cleanup success", v28, 2u);
      MEMORY[0x22077AF8C](v28, -1, -1);
    }
    v29 = *(_QWORD *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29, v24);
  }
  v30 = *(_QWORD *)(v0 + 144);
  v36 = *(_QWORD *)(v0 + 136);
  v31 = *(_QWORD *)(v0 + 128);
  v32 = *(_QWORD *)(v0 + 112);
  v34 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  sub_21C3A813C();
  v37(v32, 1, 1, v31);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21C3764B8(v32, v34, v33);
  swift_endAccess();
  sub_21C33A024(v34, v33);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v30, v31);
LABEL_22:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C339CF8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  if (qword_25525AAD0 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v12, (uint64_t)v11);
  v13 = sub_21C3A79D4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v11, 1, v13) == 1)
  {
    result = sub_21C2D775C((uint64_t)v11, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v3, 0xD000000000000013, 0x800000021C3BBE00, 0, 0xE000000000000000);
    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  v17 = *(_QWORD *)(v3 + 152);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 152) = v19;
    sub_21C2D1D80(v12, (uint64_t)v9);
    if (v15(v9, 1, v13) == 1)
    {
      return sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81B4();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v26 = swift_slowAlloc();
        v28 = v26;
        *(_DWORD *)v22 = 136315394;
        swift_bridgeObjectRetain();
        v27 = sub_21C350398(a1, a2, &v28);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v22 + 12) = 2048;
        v23 = *(_QWORD *)(v3 + 152);
        swift_release();
        v27 = v23;
        sub_21C3A82F8();
        swift_release();
        _os_log_impl(&dword_21C2CD000, v20, v21, "reader [%s], [%ld]", (uint8_t *)v22, 0x16u);
        v24 = v26;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v24, -1, -1);
        MEMORY[0x22077AF8C](v22, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_release_n();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v9, v13);
    }
  }
  return result;
}

uint64_t sub_21C33A024(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v31 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v31 - v13;
  if (qword_25525AAD0 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v15, (uint64_t)v14);
  v16 = sub_21C3A79D4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v14, 1, v16) == 1)
  {
    result = sub_21C2D775C((uint64_t)v14, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v3, 0xD000000000000013, 0x800000021C3BBDE0, 0, 0xE000000000000000);
    result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  v20 = *(_QWORD *)(v3 + 152);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
    return result;
  }
  *(_QWORD *)(v3 + 152) = v22;
  if (v22 < 0)
  {
    *(_QWORD *)(v3 + 152) = 0;
  }
  else if (v22)
  {
    sub_21C2D1D80(v15, (uint64_t)v9);
    if (v18(v9, 1, v16) == 1)
      return sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v26 = sub_21C3A79BC();
    v27 = sub_21C3A81B4();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v34 = v32;
      *(_DWORD *)v28 = 136315394;
      swift_bridgeObjectRetain();
      v33 = sub_21C350398(a1, a2, &v34);
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2048;
      v29 = *(_QWORD *)(v3 + 152);
      swift_release();
      v33 = v29;
      sub_21C3A82F8();
      swift_release();
      _os_log_impl(&dword_21C2CD000, v26, v27, "reader [%s], [%ld] left", (uint8_t *)v28, 0x16u);
      v30 = v32;
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v30, -1, -1);
      MEMORY[0x22077AF8C](v28, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v9, v16);
  }
  sub_21C2D1D80(v15, (uint64_t)v12);
  if (v18(v12, 1, v16) == 1)
  {
    sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v23 = sub_21C3A79BC();
    v24 = sub_21C3A81B4();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_21C2CD000, v23, v24, "reader Last reader removed, release connection", v25, 2u);
      MEMORY[0x22077AF8C](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
  }
  return sub_21C33A440(0);
}

uint64_t sub_21C33A440(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD v27[2];
  _QWORD aBlock[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v27 - v8;
  v10 = *(void **)(v1 + 224);
  if (v10)
  {
    aBlock[4] = sub_21C33A7F4;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21C33AA34;
    aBlock[3] = &block_descriptor_171;
    v11 = _Block_copy(aBlock);
    v12 = v10;
    v13 = objc_msgSend(v12, sel_remoteObjectProxyWithErrorHandler_, v11);
    _Block_release(v11);
    sub_21C3A8340();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E240);
    if (swift_dynamicCast())
    {
      v14 = (void *)v27[1];
      if (qword_25525AAD0 != -1)
        swift_once();
      v15 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v15, (uint64_t)v9);
      v16 = sub_21C3A79D4();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
      {
        sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v21 = sub_21C3A79BC();
        v22 = sub_21C3A81D8();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v23 = 67109120;
          LODWORD(aBlock[0]) = a1 & 1;
          sub_21C3A82F8();
          _os_log_impl(&dword_21C2CD000, v21, v22, "closing session with delete=%{BOOL}d", v23, 8u);
          MEMORY[0x22077AF8C](v23, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
      }
      objc_msgSend(v14, sel_closeSession_, a1 & 1);

      return swift_unknownObjectRelease();
    }
    else
    {
      if (qword_25525AAD0 != -1)
        swift_once();
      v18 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v18, (uint64_t)v6);
      v19 = sub_21C3A79D4();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v19) == 1)
      {

        return sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v24 = sub_21C3A79BC();
        v25 = sub_21C3A81C0();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v26 = 0;
          _os_log_impl(&dword_21C2CD000, v24, v25, "closeSession | remote proxy was not of expected type", v26, 2u);
          MEMORY[0x22077AF8C](v26, -1, -1);
        }

        return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v19);
      }
    }
  }
  return result;
}

uint64_t sub_21C33A7F4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v5, (uint64_t)v4);
  v6 = sub_21C3A79D4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    return sub_21C2D775C((uint64_t)v4, (uint64_t *)&unk_25525B0E0);
  v9 = a1;
  v10 = a1;
  v11 = sub_21C3A79BC();
  v12 = sub_21C3A81D8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    v14 = a1;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    v17[1] = v15;
    sub_21C3A82F8();
    v16 = v17[0];
    *(_QWORD *)v17[0] = v15;

    _os_log_impl(&dword_21C2CD000, v11, v12, "closeSession | remote proxy error handler: %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
    swift_arrayDestroy();
    MEMORY[0x22077AF8C](v16, -1, -1);
    MEMORY[0x22077AF8C](v13, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
}

void sub_21C33AA34(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_21C33AA84()
{
  _QWORD *v0;
  _QWORD *v1;

  v1[4] = v0;
  v1[5] = *v0;
  v1[6] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C33AAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 48), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v6 = v5(v1, 1, v3);
  v7 = *(_QWORD *)(v0 + 64);
  if (v6 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 64), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 32), 0xD000000000000010, 0x800000021C3BBFC0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v8 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v8 + 136);
  if (v9)
  {
    v10 = *(_QWORD *)(v8 + 128);
    v11 = *(_QWORD *)(v0 + 56);
    sub_21C2D1D80(v2, v11);
    LODWORD(v11) = v5(v11, 1, v3);
    swift_bridgeObjectRetain();
    if ((_DWORD)v11 == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 56), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v14 = sub_21C3A79BC();
      v15 = sub_21C3A81B4();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_21C2CD000, v14, v15, "getTerminalId() - retrieve from cache", v16, 2u);
        MEMORY[0x22077AF8C](v16, -1, -1);
      }
      v17 = *(_QWORD *)(v0 + 56);

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v3);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v10, v9);
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v12;
    *v12 = v0;
    v12[1] = sub_21C33AD50;
    return sub_21C341758(0xD000000000000010, 0x800000021C3BBFC0);
  }
}

uint64_t sub_21C33AD50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 80) = v5;
    *v5 = v3;
    v5[1] = sub_21C33ADE0;
    return sub_21C345BA8(0);
  }
}

uint64_t sub_21C33ADE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21C33AE64(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = v2[11];
  v4 = v2[5];
  sub_21C3209D0(&qword_25525E238, a2, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
  v5 = swift_task_alloc();
  v2[12] = v5;
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = 0xD000000000000010;
  *(_QWORD *)(v5 + 32) = 0x800000021C3BBFC0;
  *(_BYTE *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 48) = sub_21C33B088;
  *(_QWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 64) = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v2[13] = v6;
  *v6 = v2;
  v6[1] = sub_21C33AF70;
  return sub_21C3A8664();
}

uint64_t sub_21C33AF70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C33AFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_21C33B03C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C33B088(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E350);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_21C34B5BC;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C325574;
  aBlock[3] = &block_descriptor_164;
  v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_getTerminalIdWithCompletion_, v9);
  _Block_release(v9);
}

uint64_t sub_21C33B1B8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  id v18;
  uint64_t v20;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E350);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21C3A8118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = 0;
  *((_QWORD *)v16 + 3) = 0;
  *((_QWORD *)v16 + 4) = a3;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v15], (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v17 = &v16[(v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  swift_bridgeObjectRetain();
  v18 = a3;
  sub_21C2DDA54((uint64_t)v13, (uint64_t)&unk_25525E360, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_21C33B328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[11] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v7[12] = swift_task_alloc();
  v7[13] = swift_task_alloc();
  v7[14] = swift_task_alloc();
  v7[15] = type metadata accessor for PaymentCardReaderError();
  v7[16] = swift_task_alloc();
  v7[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C33B3DC()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 56);
  if (v1)
  {
    v2 = *(uint64_t **)(v0 + 136);
    v3 = v1;
    PaymentCardReaderError.init(_:)(v3, v2);
    if (qword_25525AAD0 != -1)
      swift_once();
    v4 = *(_QWORD *)(v0 + 112);
    v5 = __swift_project_value_buffer(*(_QWORD *)(v0 + 88), (uint64_t)qword_255278F48);
    sub_21C2D1D80(v5, v4);
    v6 = sub_21C3A79D4();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 112), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v29 = v3;
      sub_21C2ED3E0(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
      v10 = sub_21C3A79BC();
      v11 = sub_21C3A81C0();
      v12 = os_log_type_enabled(v10, v11);
      v13 = *(_QWORD *)(v0 + 128);
      if (v12)
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v30 = v28;
        *(_DWORD *)v14 = 136315138;
        PaymentCardReaderError.errorName.getter();
        *(_QWORD *)(v0 + 48) = sub_21C350398(v15, v16, &v30);
        sub_21C3A82F8();
        swift_bridgeObjectRelease();
        sub_21C2ED424(v13, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
        _os_log_impl(&dword_21C2CD000, v10, v11, "Error (readerIdentifier): %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v28, -1, -1);
        MEMORY[0x22077AF8C](v14, -1, -1);

      }
      else
      {

        sub_21C2ED424(v13, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
      }
      v3 = v29;
      (*(void (**)(_QWORD, uint64_t))(v7 + 8))(*(_QWORD *)(v0 + 112), v6);
    }
    v17 = *(_QWORD *)(v0 + 136);
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    v18 = swift_allocError();
    sub_21C2ED3E0(v17, v19, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
    *(_QWORD *)(v0 + 40) = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E350);
    sub_21C3A80DC();

    sub_21C2ED424(v17, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (!*(_QWORD *)(v0 + 80))
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v20 = *(_QWORD *)(v0 + 104);
    v21 = __swift_project_value_buffer(*(_QWORD *)(v0 + 88), (uint64_t)qword_255278F48);
    sub_21C2D1D80(v21, v20);
    v22 = sub_21C3A79D4();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v24 = sub_21C3A79BC();
      v25 = sub_21C3A81C0();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_21C2CD000, v24, v25, "Error (readerIdentifier): nil", v26, 2u);
        MEMORY[0x22077AF8C](v26, -1, -1);
      }
      v27 = *(_QWORD *)(v0 + 104);

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v27, v22);
    }
    goto LABEL_15;
  }
  v8 = qword_25525AAB0;
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 144) = qword_255278F10;
  return swift_task_switch();
}

uint64_t sub_21C33B858()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[18];
  v2 = v0[10];
  *(_QWORD *)(v1 + 128) = v0[9];
  *(_QWORD *)(v1 + 136) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21C33B8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 96);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 88), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 96), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v5 = sub_21C3A79BC();
    v6 = sub_21C3A81D8();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(_QWORD *)(v0 + 80);
    if (v7)
    {
      v13 = *(_QWORD *)(v0 + 72);
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v14 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 32) = sub_21C350398(v13, v8, &v14);
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21C2CD000, v5, v6, "Result (readerIdentifier): success %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v10, -1, -1);
      MEMORY[0x22077AF8C](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, uint64_t))(v4 + 8))(*(_QWORD *)(v0 + 96), v3);
  }
  v11 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 24) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E350);
  sub_21C3A80E8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C33BB08(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = v1;
  v2[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v4 = swift_task_alloc();
  v5 = *a1;
  v6 = a1[1];
  v2[4] = v4;
  v2[5] = v5;
  v2[6] = v6;
  return swift_task_switch();
}

uint64_t sub_21C33BB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 24), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 32);
  if (v5 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 32), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 16), 0xD000000000000017, 0x800000021C3B9D10, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0)
    v8 = HIBYTE(v7) & 0xF;
  if (v8)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v9;
    *v9 = v0;
    v9[1] = sub_21C33BD58;
    return sub_21C348A34(0, 0xD000000000000017, 0x800000021C3B9D10, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  else
  {
    type metadata accessor for PaymentCardReaderError();
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21C33BD58(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

void sub_21C33BDC8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2E8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (void *)sub_21C3A7EB4();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_21C34B9DC;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C33C3D0;
  aBlock[3] = &block_descriptor_217;
  v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_isAccountLinked_completion_, v7, v10);
  _Block_release(v10);

}

uint64_t sub_21C33BF18(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v6 = type metadata accessor for PaymentCardReaderError();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (_QWORD *)((char *)v39 - v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v39 - v16;
  if (a2)
  {
    v18 = a2;
    PaymentCardReaderError.init(_:)(v18, v11);
    if (qword_25525AAD0 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v12, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v19, (uint64_t)v15);
    v20 = sub_21C3A79D4();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v20) == 1)
    {
      sub_21C2D775C((uint64_t)v15, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v43 = v18;
      sub_21C2ED3E0((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
      v25 = sub_21C3A79BC();
      v26 = sub_21C3A81C0();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        v41 = swift_slowAlloc();
        v45 = v41;
        v42 = a3;
        *(_DWORD *)v27 = 136315138;
        v39[1] = v27 + 4;
        v40 = v27;
        PaymentCardReaderError.errorName.getter();
        v44 = sub_21C350398(v28, v29, &v45);
        sub_21C3A82F8();
        swift_bridgeObjectRelease();
        sub_21C2ED424((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
        v30 = v26;
        v31 = v40;
        _os_log_impl(&dword_21C2CD000, v25, v30, "Error (isAccountLinked): %s", v40, 0xCu);
        v32 = v41;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v32, -1, -1);
        MEMORY[0x22077AF8C](v31, -1, -1);

      }
      else
      {

        sub_21C2ED424((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v20);
      v18 = v43;
    }
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    v37 = swift_allocError();
    sub_21C2ED3E0((uint64_t)v11, v38, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
    v45 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2E8);
    sub_21C3A80DC();

    return sub_21C2ED424((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
  }
  else
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v12, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v22, (uint64_t)v17);
    v23 = sub_21C3A79D4();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 1, v23) == 1)
    {
      sub_21C2D775C((uint64_t)v17, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v33 = sub_21C3A79BC();
      v34 = sub_21C3A81D8();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v35 = 67109120;
        LODWORD(v45) = a1 & 1;
        sub_21C3A82F8();
        _os_log_impl(&dword_21C2CD000, v33, v34, "Result (isAccountLinked): returned %{BOOL}d", v35, 8u);
        MEMORY[0x22077AF8C](v35, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v23);
    }
    LOBYTE(v45) = a1 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2E8);
    return sub_21C3A80E8();
  }
}

void sub_21C33C3D0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_21C33C430(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 72) = a2;
  *(_QWORD *)(v3 + 24) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5 = swift_task_alloc();
  v6 = *a1;
  v7 = a1[1];
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v6;
  *(_QWORD *)(v3 + 48) = v7;
  return swift_task_switch();
}

uint64_t sub_21C33C4A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 24), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 32);
  if (v5 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 32), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 16), 0xD00000000000001ALL, 0x800000021C3BC080, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0)
    v8 = HIBYTE(v7) & 0xF;
  if (v8)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v9;
    *v9 = v0;
    v9[1] = sub_21C33C688;
    return sub_21C341CD4((uint64_t)v9, 0, 0xD00000000000001ALL, 0x800000021C3BC080, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  else
  {
    type metadata accessor for PaymentCardReaderError();
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21C33C688()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C33C6EC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C33C720()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C33C754(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (void *)sub_21C3A7EB4();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_21C34B9B4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C33C3D0;
  aBlock[3] = &block_descriptor_207;
  v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_linkAccount_relink_completion_, v11, a5 & 1, v14);
  _Block_release(v14);

}

uint64_t sub_21C33C8B4(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v48 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v48 - v13;
  v15 = type metadata accessor for PaymentCardReaderError();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (_QWORD *)((char *)v48 - v19);
  if (a2)
  {
    v21 = a2;
    PaymentCardReaderError.init(_:)(v21, v20);
    if (qword_25525AAD0 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v22, (uint64_t)v14);
    v23 = sub_21C3A79D4();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23) == 1)
    {
      sub_21C2D775C((uint64_t)v14, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v52 = v21;
      sub_21C2ED3E0((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
      v28 = sub_21C3A79BC();
      v29 = sub_21C3A81C0();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v50 = v15;
        v31 = (uint8_t *)v30;
        v49 = swift_slowAlloc();
        v54 = v49;
        v51 = a3;
        *(_DWORD *)v31 = 136315138;
        v48[1] = v31 + 4;
        PaymentCardReaderError.errorName.getter();
        v53 = sub_21C350398(v32, v33, &v54);
        sub_21C3A82F8();
        swift_bridgeObjectRelease();
        sub_21C2ED424((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
        _os_log_impl(&dword_21C2CD000, v28, v29, "Error (linkAccount): %s", v31, 0xCu);
        v34 = v49;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v34, -1, -1);
        MEMORY[0x22077AF8C](v31, -1, -1);

      }
      else
      {

        sub_21C2ED424((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v23);
      v21 = v52;
    }
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    v38 = swift_allocError();
    sub_21C2ED3E0((uint64_t)v20, v39, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
    v54 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
    sub_21C3A80DC();

    return sub_21C2ED424((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
  }
  else if ((a1 & 1) != 0)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v25, (uint64_t)v12);
    v26 = sub_21C3A79D4();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, v26) == 1)
    {
      sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v41 = sub_21C3A79BC();
      v42 = sub_21C3A81D8();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v43 = 0;
        _os_log_impl(&dword_21C2CD000, v41, v42, "Result (linkAccount): success", v43, 2u);
        MEMORY[0x22077AF8C](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v26);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
    return sub_21C3A80E8();
  }
  else
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v35 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v35, (uint64_t)v9);
    v36 = sub_21C3A79D4();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v9, 1, v36) == 1)
    {
      sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v44 = sub_21C3A79BC();
      v45 = sub_21C3A81D8();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_21C2CD000, v44, v45, "Result (linkAccount): result is false, linkAccount cancelled", v46, 2u);
        MEMORY[0x22077AF8C](v46, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v36);
    }
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    v47 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v54 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
    return sub_21C3A80DC();
  }
}

uint64_t sub_21C33CEC0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v5 + 88) = a4;
  *(_QWORD *)(v5 + 96) = v4;
  *(_QWORD *)(v5 + 80) = a3;
  v8 = sub_21C3A77E8();
  *(_QWORD *)(v5 + 104) = v8;
  *(_QWORD *)(v5 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 120) = swift_task_alloc();
  *(_QWORD *)(v5 + 128) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v5 + 136) = swift_task_alloc();
  v9 = swift_task_alloc();
  v10 = *a1;
  v11 = a1[1];
  *(_QWORD *)(v5 + 144) = v9;
  *(_QWORD *)(v5 + 152) = v10;
  v12 = *a2;
  *(_QWORD *)(v5 + 160) = v11;
  *(_QWORD *)(v5 + 168) = v12;
  *(_BYTE *)(v5 + 66) = *((_BYTE *)a2 + 8);
  *(_BYTE *)(v5 + 67) = *((_BYTE *)a2 + 9);
  return swift_task_switch();
}

uint64_t sub_21C33CF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  char v23;
  char v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 144);
  v29 = __swift_project_value_buffer(*(_QWORD *)(v0 + 128), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v29, v1);
  v2 = sub_21C3A79D4();
  v3 = *(_QWORD *)(v2 - 8);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v4 = v28(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 144);
  if (v4 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 144), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 96), 0xD000000000000025, 0x800000021C3BBF30, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
  }
  v6 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 104);
  sub_21C3A77DC();
  v10 = sub_21C3A77C4();
  v12 = v11;
  *(_QWORD *)(v0 + 176) = v10;
  *(_QWORD *)(v0 + 184) = v11;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if (v6)
  {
    v27 = v2;
    v13 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 80);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v15;
    swift_beginAccess();
    sub_21C34B3E8(v16);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *(_QWORD *)(v14 + 264);
    *(_QWORD *)(v14 + 264) = 0x8000000000000000;
    sub_21C2F7EA0((uint64_t)sub_21C30A794, v17, v10, v12, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v14 + 264) = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_21C2D1D80(v29, v13);
    if (v28(v13, 1, v27) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_retain();
      v19 = sub_21C3A79BC();
      v20 = sub_21C3A81D8();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v21 = 134217984;
        *(_QWORD *)(v0 + 72) = *(_QWORD *)(*(_QWORD *)(v14 + 264) + 16);
        sub_21C3A82F8();
        swift_release();
        _os_log_impl(&dword_21C2CD000, v19, v20, "added updateHandlers=%ld", v21, 0xCu);
        MEMORY[0x22077AF8C](v21, -1, -1);
      }
      else
      {
        swift_release();
      }
      v22 = *(_QWORD *)(v0 + 136);

      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v22, v27);
    }
  }
  v23 = *(_BYTE *)(v0 + 67);
  v24 = *(_BYTE *)(v0 + 66);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 160);
  *(_BYTE *)(v0 + 64) = v24;
  *(_BYTE *)(v0 + 65) = v23;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v25;
  *v25 = v0;
  v25[1] = sub_21C33D2F8;
  return sub_21C33D660((uint64_t *)(v0 + 40), (uint64_t *)(v0 + 56));
}

uint64_t sub_21C33D2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 208) = a1;
  return swift_task_switch();
}

uint64_t sub_21C33D370()
{
  uint64_t v0;

  sub_21C33D44C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 208));
}

uint64_t sub_21C33D3E0()
{
  uint64_t v0;

  sub_21C33D44C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C33D44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = sub_21C2F78C8(a2, a3);
  swift_endAccess();
  if (v9)
    sub_21C2F7984(v9);
  if (qword_25525AAD0 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v10, (uint64_t)v8);
  v11 = sub_21C3A79D4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
    return sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
  swift_retain();
  v14 = sub_21C3A79BC();
  v15 = sub_21C3A81D8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 134217984;
    v17[1] = *(_QWORD *)(*(_QWORD *)(a1 + 264) + 16);
    sub_21C3A82F8();
    swift_release();
    _os_log_impl(&dword_21C2CD000, v14, v15, "removed updateHandlers=%ld", v16, 0xCu);
    MEMORY[0x22077AF8C](v16, -1, -1);
  }
  else
  {
    swift_release();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v11);
}

uint64_t sub_21C33D660(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v6 = swift_task_alloc();
  v7 = *a1;
  v8 = a1[1];
  *(_QWORD *)(v3 + 32) = v6;
  *(_QWORD *)(v3 + 40) = v7;
  v9 = *a2;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  *(_BYTE *)(v3 + 72) = *((_BYTE *)a2 + 8);
  *(_BYTE *)(v3 + 73) = *((_BYTE *)a2 + 9);
  return swift_task_switch();
}

uint64_t sub_21C33D6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 24), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 32);
  if (v5 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 32), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 16), 0xD000000000000017, 0x800000021C3BBF60, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0)
    v8 = HIBYTE(v7) & 0xF;
  if (v8)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v9;
    *v9 = v0;
    v9[1] = sub_21C33D904;
    return sub_21C348F98(0, 0xD000000000000017, 0x800000021C3BBF60, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  }
  else
  {
    type metadata accessor for PaymentCardReaderError();
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21C33D904(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

void sub_21C33D980(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  _BYTE *v14;
  char v15;
  int v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD aBlock[6];
  objc_super v28;

  v24 = a5;
  v26 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E348);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v25 = sub_21C3A7EB4();
  v13 = (objc_class *)type metadata accessor for InternalOptions();
  v14 = objc_allocWithZone(v13);
  v15 = a6 & 1;
  v14[OBJC_IVAR____TtC15ProximityReader15InternalOptions_returnReadResultImmediately] = a6 & 1;
  v16 = (a6 >> 8) & 1;
  v14[OBJC_IVAR____TtC15ProximityReader15InternalOptions_includeErrorInReadResult] = BYTE1(a6) & 1;
  v28.receiver = v14;
  v28.super_class = v13;
  v17 = objc_msgSendSuper2(&v28, sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a7;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v20 = v19 + ((v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v20 = v24;
  *(_BYTE *)(v20 + 8) = v15;
  *(_BYTE *)(v20 + 9) = v16;
  aBlock[4] = sub_21C34B4F0;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C33C3D0;
  aBlock[3] = &block_descriptor_148;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  v22 = (void *)v25;
  objc_msgSend(v26, sel_startSession_options_completion_, v25, v17, v21);
  _Block_release(v21);

}

uint64_t sub_21C33DB74(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  _QWORD *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint8_t *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;

  LODWORD(v83) = a6;
  v82 = a5;
  v88 = a4;
  v85 = a1;
  v86 = a3;
  v81 = sub_21C3A77E8();
  v79 = *(uint8_t **)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v80 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v78 = (uint64_t)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v77 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v84 = (uint64_t)&v77 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v77 - v16;
  v87 = type metadata accessor for PaymentCardReaderError();
  v18 = MEMORY[0x24BDAC7A8](v87);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v77 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (uint64_t *)((char *)&v77 - v24);
  v26 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AB50 != -1)
    swift_once();
  v29 = __swift_project_value_buffer(v26, (uint64_t)qword_25525F370);
  sub_21C2ED3E0(v29, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8244();
  if (qword_25525AB28 != -1)
    swift_once();
  sub_21C3A7998();
  sub_21C2ED424((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  if (a2)
  {
    v30 = a2;
    PaymentCardReaderError.init(_:)(v30, v25);
    if (qword_25525AAD0 != -1)
      swift_once();
    v31 = __swift_project_value_buffer(v8, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v31, (uint64_t)v17);
    v32 = sub_21C3A79D4();
    v85 = *(_QWORD *)(v32 - 8);
    v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
    if (v83(v17, 1, v32) == 1)
    {
      sub_21C2D775C((uint64_t)v17, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v82 = v31;
      sub_21C2ED3E0((uint64_t)v25, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
      v37 = sub_21C3A79BC();
      v38 = sub_21C3A81C0();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        v80 = (char *)swift_slowAlloc();
        v90 = v80;
        v81 = (uint64_t)v30;
        *(_DWORD *)v39 = 136315138;
        v79 = v39 + 4;
        PaymentCardReaderError.errorName.getter();
        v89 = sub_21C350398(v40, v41, (uint64_t *)&v90);
        v30 = (char *)v81;
        sub_21C3A82F8();
        swift_bridgeObjectRelease();
        sub_21C2ED424((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
        _os_log_impl(&dword_21C2CD000, v37, v38, "Error (prepare): %s", v39, 0xCu);
        v42 = v80;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v42, -1, -1);
        MEMORY[0x22077AF8C](v39, -1, -1);

      }
      else
      {

        sub_21C2ED424((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
      }
      (*(void (**)(char *, uint64_t))(v85 + 8))(v17, v32);
      v31 = v82;
    }
    sub_21C2ED3E0((uint64_t)v25, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_21C2ED424((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
    if (EnumCaseMultiPayload == 18)
    {
      v47 = v31;
      v48 = v84;
      sub_21C2D1D80(v47, v84);
      if (v83((char *)v48, 1, v32) == 1)
      {
        sub_21C2D775C(v48, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v50 = sub_21C3A79BC();
        v51 = sub_21C3A81D8();
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v52 = 0;
          _os_log_impl(&dword_21C2CD000, v50, v51, "busy on prepare, no clean up", v52, 2u);
          MEMORY[0x22077AF8C](v52, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v48, v32);
      }
    }
    else
    {
      v49 = v86;
      *(_QWORD *)(v86 + 240) = 0;
      *(_QWORD *)(v49 + 248) = 0;
      swift_bridgeObjectRelease();
    }
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    v53 = swift_allocError();
    sub_21C2ED3E0((uint64_t)v25, v54, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
    v90 = (char *)v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E348);
    sub_21C3A80DC();

    return sub_21C2ED424((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
  }
  else if (v85 == 2)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v33 = __swift_project_value_buffer(v8, (uint64_t)qword_255278F48);
    v34 = v78;
    sub_21C2D1D80(v33, v78);
    v35 = sub_21C3A79D4();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
    {
      sub_21C2D775C(v34, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v56 = sub_21C3A79BC();
      v57 = sub_21C3A81C0();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v58 = 0;
        _os_log_impl(&dword_21C2CD000, v56, v57, "Error (prepare): ErrorDetails.unknownSessionError", v58, 2u);
        MEMORY[0x22077AF8C](v58, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    }
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    v59 = swift_allocError();
    *v60 = 1;
    swift_storeEnumTagMultiPayload();
    v90 = (char *)v59;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E348);
    return sub_21C3A80DC();
  }
  else
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v43 = __swift_project_value_buffer(v8, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v43, (uint64_t)v13);
    v44 = sub_21C3A79D4();
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v13, 1, v44) == 1)
    {
      sub_21C2D775C((uint64_t)v13, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v61 = sub_21C3A79BC();
      v62 = sub_21C3A81D8();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v63 = 0;
        _os_log_impl(&dword_21C2CD000, v61, v62, "Result (prepare): session created", v63, 2u);
        MEMORY[0x22077AF8C](v63, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v44);
    }
    type metadata accessor for PaymentCardReaderSession();
    v64 = swift_allocObject();
    v65 = v82;
    swift_bridgeObjectRetain();
    v66 = v80;
    sub_21C3A77DC();
    v67 = sub_21C3A77C4();
    v69 = v68;
    v70 = (void (*)(char *, uint64_t))*((_QWORD *)v79 + 1);
    v71 = v81;
    v70(v66, v81);
    *(_QWORD *)(v64 + 16) = v67;
    *(_QWORD *)(v64 + 24) = v69;
    sub_21C3A77DC();
    v72 = sub_21C3A77C4();
    v74 = v73;
    v70(v66, v71);
    *(_QWORD *)(v64 + 32) = v72;
    *(_QWORD *)(v64 + 40) = v74;
    *(_QWORD *)(v64 + 64) = 0;
    *(_QWORD *)(v64 + 72) = 0;
    *(_QWORD *)(v64 + 48) = v65;
    v75 = BYTE1(v83);
    *(_BYTE *)(v64 + 56) = v83 & 1;
    *(_BYTE *)(v64 + 57) = v75 & 1;
    v76 = v86;
    *(_QWORD *)(v86 + 240) = v72;
    *(_QWORD *)(v76 + 248) = v74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v76 + 232) = v64;
    swift_retain_n();
    swift_release();
    v90 = (char *)v64;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E348);
    sub_21C3A80E8();
    return swift_release();
  }
}

void sub_21C33E510(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint8_t *v16;
  uint8_t *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2E8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v7, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v10, (uint64_t)v9);
  v11 = sub_21C3A79D4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v22 = a2;
    v13 = sub_21C3A79BC();
    v14 = sub_21C3A81D8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v21 = a1;
      v16 = v15;
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_21C2CD000, v13, v14, "cancel transaction", v15, 2u);
      v17 = v16;
      a1 = v21;
      MEMORY[0x22077AF8C](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    a2 = v22;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v18 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v19 + v18, (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_21C34B1AC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C33E960;
  aBlock[3] = &block_descriptor_92_0;
  v20 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_cancelTransactionWithCompletion_, v20);
  _Block_release(v20);
}

uint64_t sub_21C33E790(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _DWORD v12[3];
  char v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v5, (uint64_t)v4);
  v6 = sub_21C3A79D4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_21C2D775C((uint64_t)v4, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v8 = sub_21C3A79BC();
    v9 = sub_21C3A81D8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v10 = 67109120;
      v12[2] = a1 & 1;
      sub_21C3A82F8();
      _os_log_impl(&dword_21C2CD000, v8, v9, "Result (cancelRead): result = %{BOOL}d", v10, 8u);
      MEMORY[0x22077AF8C](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v13 = a1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2E8);
  return sub_21C3A80E8();
}

uint64_t sub_21C33E960(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_21C33E99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[11] = a5;
  v6[12] = v5;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  v7 = sub_21C3A77E8();
  v6[13] = v7;
  v6[14] = *(_QWORD *)(v7 - 8);
  v6[15] = swift_task_alloc();
  v6[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C33EA3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[18];
  v2 = __swift_project_value_buffer(v0[16], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v5 = v35(v1, 1, v3);
  v6 = v0[18];
  v34 = v4;
  if (v5 == 1)
  {
    sub_21C2D775C(v6, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[12], 0xD000000000000017, 0x800000021C3BBF10, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v8 = v0[14];
  v7 = v0[15];
  v9 = v0[13];
  v10 = v0[10];
  sub_21C3A77DC();
  v11 = sub_21C3A77C4();
  v13 = v12;
  v0[19] = v11;
  v0[20] = v12;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v14 = v0[11];
  v15 = v0[12];
  if (v10)
  {
    v16 = v0[10];
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v14;
    v33 = v15 + 256;
    swift_beginAccess();
    sub_21C34B3E8(v16);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *(_QWORD *)(v15 + 256);
    *(_QWORD *)(v15 + 256) = 0x8000000000000000;
    sub_21C2F7FD8((uint64_t)sub_21C30A794, v17, v11, v13, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v15 + 256) = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    sub_21C34B3E8(0);
    swift_bridgeObjectRetain();
    v33 = v15 + 256;
    v19 = sub_21C2F7A48(v11, v13);
    swift_bridgeObjectRelease();
    sub_21C2F7984(v19);
  }
  v20 = v0[17];
  swift_endAccess();
  sub_21C2D1D80(v2, v20);
  if (v35(v20, 1, v3) == 1)
  {
    sub_21C2D775C(v0[17], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    swift_retain();
    v21 = sub_21C3A79BC();
    v22 = sub_21C3A81D8();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v23 = 134217984;
      v0[6] = *(_QWORD *)(*(_QWORD *)v33 + 16);
      sub_21C3A82F8();
      swift_release();
      _os_log_impl(&dword_21C2CD000, v21, v22, "added eventHandlers=%ld", v23, 0xCu);
      MEMORY[0x22077AF8C](v23, -1, -1);
    }
    else
    {
      swift_release();
    }
    v24 = v0[17];

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v24, v3);
  }
  sub_21C349A40(v0[7], v0[8], 0x5F3A5F2864616572, 0xEA0000000000293ALL);
  v25 = (char *)v0[9];
  v26 = *(_QWORD *)&v25[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_dataType];
  switch(v26)
  {
    case 2:
      v28 = "PaymentWithVAS";
      v29 = 14;
LABEL_26:
      swift_retain();
      v30 = v25;
      v31 = (_QWORD *)swift_task_alloc();
      v0[21] = v31;
      *v31 = v0;
      v31[1] = sub_21C33EF6C;
      return sub_21C349F60(1, 0x5F3A5F2864616572, 0xEA0000000000293ALL, v0[12], (uint64_t)v28, v29, 2, v0[12]);
    case 1:
      v28 = "VAS";
      v29 = 3;
      goto LABEL_26;
    case 0:
      v27 = *(_QWORD *)&v25[OBJC_IVAR____TtC15ProximityReader19TransactionInternal_verificationReason];
      if (v27 == 4)
        v28 = "Payment";
      else
        v28 = "Verification";
      if (v27 == 4)
        v29 = 7;
      else
        v29 = 12;
      goto LABEL_26;
  }
  v0[5] = v26;
  return sub_21C3A8670();
}

uint64_t sub_21C33EF6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 176) = v1;
  swift_task_dealloc();

  if (!v1)
    *(_QWORD *)(v4 + 184) = a1;
  return swift_task_switch();
}

uint64_t sub_21C33EFEC()
{
  uint64_t v0;

  sub_21C33F0D0(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 184));
}

uint64_t sub_21C33F05C()
{
  uint64_t v0;

  sub_21C33F0D0(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C33F0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v9 = sub_21C2F7A48(a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_21C2F7984(v9);
  if (qword_25525AAD0 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v10, (uint64_t)v8);
  v11 = sub_21C3A79D4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
    return sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
  swift_retain();
  v14 = sub_21C3A79BC();
  v15 = sub_21C3A81D8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 134217984;
    v17[1] = *(_QWORD *)(*(_QWORD *)(a1 + 256) + 16);
    sub_21C3A82F8();
    swift_release();
    _os_log_impl(&dword_21C2CD000, v14, v15, "removed eventHandlers=%ld", v16, 0xCu);
    MEMORY[0x22077AF8C](v16, -1, -1);
  }
  else
  {
    swift_release();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v11);
}

void sub_21C33F2F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v19 = a3;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2D8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x24BDAC7A8](v11);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v11, v14);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a4;
  *(_QWORD *)(v16 + 24) = a5;
  *(_BYTE *)(v16 + 32) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = sub_21C34B10C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C32AE90;
  aBlock[3] = &block_descriptor_77;
  v17 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_startTransaction_completion_, v19, v17);
  _Block_release(v17);
}

uint64_t sub_21C33F444(void *a1, void *a2, uint8_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;

  v61 = a3;
  v58 = a1;
  v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v62);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v56 = (uint64_t)&v55 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v57 = (uint64_t)&v55 - v13;
  v14 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AB90 != -1)
    swift_once();
  v59 = v9;
  v60 = a6;
  v17 = __swift_project_value_buffer(v14, (uint64_t)qword_25525F430);
  sub_21C2ED3E0(v17, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8244();
  if (qword_25525AB28 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C218);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_21C3ACA90;
  *(_QWORD *)(v18 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2C0);
  *(_QWORD *)(v18 + 64) = sub_21C34B010();
  *(_QWORD *)(v18 + 32) = MEMORY[0x24BEE4AF8];
  sub_21C3A798C();
  swift_bridgeObjectRelease();
  sub_21C2ED424((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  if (a2)
  {
    v63 = (uint64_t)a2;
    v19 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
    if ((swift_dynamicCast() & 1) != 0)
    {
      ReadErrorInternal.externalize.getter(v66, (uint64_t)&v63);
      v20 = v63;
      v21 = v64;
      v22 = v65;
      if (qword_25525AAD0 != -1)
        swift_once();
      v23 = __swift_project_value_buffer(v62, (uint64_t)qword_255278F48);
      v24 = v57;
      sub_21C2D1D80(v23, v57);
      v25 = sub_21C3A79D4();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
      {
        sub_21C2D775C(v24, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        sub_21C34AFE0(v20, v21, v22);
        sub_21C34AFE0(v20, v21, v22);
        v41 = sub_21C3A79BC();
        v42 = sub_21C3A81C0();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc();
          v44 = swift_slowAlloc();
          v62 = v44;
          v63 = v20;
          *(_DWORD *)v43 = 136315138;
          v66 = v44;
          v61 = v43 + 4;
          v64 = v21;
          v65 = v22;
          v45 = PaymentCardReaderSession.ReadError.errorName.getter();
          v63 = sub_21C350398(v45, v46, &v66);
          sub_21C3A82F8();
          swift_bridgeObjectRelease();
          sub_21C34AFF8(v20, v21, v22);
          sub_21C34AFF8(v20, v21, v22);
          _os_log_impl(&dword_21C2CD000, v41, v42, "Error (read): %s", v43, 0xCu);
          v47 = v62;
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v47, -1, -1);
          v24 = v57;
          MEMORY[0x22077AF8C](v43, -1, -1);

        }
        else
        {

          sub_21C34AFF8(v20, v21, v22);
          sub_21C34AFF8(v20, v21, v22);
        }
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      }
      sub_21C2FA030();
      v53 = swift_allocError();
      *(_QWORD *)v54 = v20;
      *(_QWORD *)(v54 + 8) = v21;
      *(_BYTE *)(v54 + 16) = v22;
      v63 = v53;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2D8);
      return sub_21C3A80DC();
    }
  }
  v27 = (uint64_t)v59;
  if (!v58)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v33 = __swift_project_value_buffer(v62, (uint64_t)qword_255278F48);
    v34 = v56;
    sub_21C2D1D80(v33, v56);
    v35 = sub_21C3A79D4();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
    {
      sub_21C2D775C(v34, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v48 = sub_21C3A79BC();
      v49 = sub_21C3A81C0();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v50 = 0;
        _os_log_impl(&dword_21C2CD000, v48, v49, "Error (read): nil result", v50, 2u);
        MEMORY[0x22077AF8C](v50, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    }
    sub_21C2FA030();
    v51 = swift_allocError();
    *(_OWORD *)v52 = xmmword_21C3B17C0;
    *(_BYTE *)(v52 + 16) = 2;
    v63 = v51;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2D8);
    return sub_21C3A80DC();
  }
  v28 = qword_25525AAD0;
  v29 = v58;
  if (v28 != -1)
    swift_once();
  v30 = __swift_project_value_buffer(v62, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v30, v27);
  v31 = sub_21C3A79D4();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v27, 1, v31) == 1)
  {
    sub_21C2D775C(v27, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v37 = sub_21C3A79BC();
    v38 = sub_21C3A81D8();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_21C2CD000, v37, v38, "Result (read): success with result", v39, 2u);
      MEMORY[0x22077AF8C](v39, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v27, v31);
  }
  v63 = (uint64_t)v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2D8);
  return sub_21C3A80E8();
}

uint64_t sub_21C33FBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[6] = a6;
  v7[7] = v6;
  v7[4] = a3;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a2;
  v7[8] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v7[9] = swift_task_alloc();
  v9 = swift_task_alloc();
  v10 = *a4;
  v11 = a4[1];
  v7[10] = v9;
  v7[11] = v10;
  v7[12] = v11;
  return swift_task_switch();
}

uint64_t sub_21C33FC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 64), (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v6 = v5(v1, 1, v3);
  v7 = *(_QWORD *)(v0 + 80);
  if (v6 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 80), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 56), 0xD00000000000002CLL, 0x800000021C3BBE40, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v8 = *(_QWORD *)(v0 + 96);
  if ((v8 & 0x2000000000000000) != 0)
    v9 = HIBYTE(v8) & 0xF;
  else
    v9 = *(_QWORD *)(v0 + 88) & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    sub_21C349A40(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), 0xD00000000000002CLL, 0x800000021C3BBE40);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v10;
    *v10 = v0;
    v10[1] = sub_21C33FF18;
    return sub_21C342250(*(_QWORD *)(v0 + 16), 1, 0xD00000000000002CLL, 0x800000021C3BBE40, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 72);
    sub_21C2D1D80(v2, v12);
    if (v5(v12, 1, v3) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 72), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v13 = sub_21C3A79BC();
      v14 = sub_21C3A81D8();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_21C2CD000, v13, v14, "PIN token invalid! PIN Token empty.", v15, 2u);
        MEMORY[0x22077AF8C](v15, -1, -1);
      }
      v16 = *(_QWORD *)(v0 + 72);

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v16, v3);
    }
    sub_21C2FA030();
    swift_allocError();
    *(_OWORD *)v17 = xmmword_21C3B17D0;
    *(_BYTE *)(v17 + 16) = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21C33FF18()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C33FF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v6[8] = type metadata accessor for CRSignpost();
  v6[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C33FFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  if (qword_25525AC20 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 64), (uint64_t)qword_25525F5E0);
  sub_21C2ED3E0(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8250();
  if (qword_25525AB28 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v9 = *(_OWORD *)(v0 + 32);
  sub_21C3A7998();
  sub_21C2ED424(v3, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v6;
  *(_OWORD *)(v6 + 16) = v9;
  *(_QWORD *)(v6 + 32) = v5;
  *(_QWORD *)(v6 + 40) = v4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v7;
  *v7 = v0;
  v7[1] = sub_21C34013C;
  return sub_21C3434A8(*(_QWORD *)(v0 + 16), 0xD00000000000002CLL, 0x800000021C3BBE40, 1, 0, (uint64_t)sub_21C34AF78, v6);
}

uint64_t sub_21C34013C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C3401BC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C3401F8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2B0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (void *)sub_21C3A7EB4();
  v8 = (void *)sub_21C3A7EB4();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_21C34AFCC;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C32AE90;
  aBlock[3] = &block_descriptor_54;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_startIssuerPINEntry_transactionId_completion_, v7, v8, v11);
  _Block_release(v11);

}

void sub_21C340370(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t countAndFlagsBits;
  void *object;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _DWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  Swift::String_optional applicationTypeIdentifier;
  Swift::String_optional generalCardData;
  Swift::String_optional paymentCardData;
  uint64_t v56;
  uint64_t v57;
  ProximityReader::PaymentCardReadResult_optional v58;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&applicationTypeIdentifier - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&applicationTypeIdentifier - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&applicationTypeIdentifier - v13;
  v15 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&applicationTypeIdentifier - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AC20 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v15, (uint64_t)qword_25525F5E0);
  sub_21C2ED3E0(v18, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8244();
  if (qword_25525AB28 != -1)
    swift_once();
  sub_21C3A7998();
  sub_21C2ED424((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  if (a2)
  {
    v58.value.id._countAndFlagsBits = (uint64_t)a2;
    v19 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525C828);
    if ((swift_dynamicCast() & 1) != 0)
    {
      ReadErrorInternal.externalize.getter(v57, (uint64_t)&v58);
      countAndFlagsBits = v58.value.id._countAndFlagsBits;
      object = v58.value.id._object;
      v22 = v58.value.paymentCardData.value._countAndFlagsBits;
      if (qword_25525AAD0 != -1)
        swift_once();
      v23 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v23, (uint64_t)v14);
      v24 = sub_21C3A79D4();
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v14, 1, v24) == 1)
      {
        sub_21C2D775C((uint64_t)v14, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v56 = a3;
        sub_21C34AFE0(countAndFlagsBits, (uint64_t)object, v22);
        sub_21C34AFE0(countAndFlagsBits, (uint64_t)object, v22);
        v41 = sub_21C3A79BC();
        v42 = sub_21C3A81C0();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (_DWORD *)swift_slowAlloc();
          v44 = swift_slowAlloc();
          paymentCardData.value._countAndFlagsBits = v44;
          generalCardData.value._countAndFlagsBits = (uint64_t)v43;
          *v43 = 136315138;
          v57 = v44;
          v58.value.id._countAndFlagsBits = countAndFlagsBits;
          applicationTypeIdentifier.value._countAndFlagsBits = (uint64_t)(v43 + 1);
          v58.value.id._object = object;
          LOBYTE(v58.value.paymentCardData.value._countAndFlagsBits) = v22;
          v45 = PaymentCardReaderSession.ReadError.errorName.getter();
          v58.value.id._countAndFlagsBits = sub_21C350398(v45, v46, &v57);
          sub_21C3A82F8();
          swift_bridgeObjectRelease();
          sub_21C34AFF8(countAndFlagsBits, (uint64_t)object, v22);
          sub_21C34AFF8(countAndFlagsBits, (uint64_t)object, v22);
          v47 = generalCardData.value._countAndFlagsBits;
          _os_log_impl(&dword_21C2CD000, v41, v42, "Error (capturePIN): %s", (uint8_t *)generalCardData.value._countAndFlagsBits, 0xCu);
          v48 = paymentCardData.value._countAndFlagsBits;
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v48, -1, -1);
          MEMORY[0x22077AF8C](v47, -1, -1);

        }
        else
        {

          sub_21C34AFF8(countAndFlagsBits, (uint64_t)object, v22);
          sub_21C34AFF8(countAndFlagsBits, (uint64_t)object, v22);
        }
        (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v24);
      }
      sub_21C2FA030();
      v39 = swift_allocError();
      *(_QWORD *)v52 = countAndFlagsBits;
      *(_QWORD *)(v52 + 8) = object;
      *(_BYTE *)(v52 + 16) = v22;
LABEL_35:
      v58.value.id._countAndFlagsBits = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2B0);
      sub_21C3A80DC();
      return;
    }
  }
  if (!a1)
  {
LABEL_18:
    if (qword_25525AAD0 != -1)
      swift_once();
    v33 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v33, (uint64_t)v8);
    v34 = sub_21C3A79D4();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v8, 1, v34) == 1)
    {
      sub_21C2D775C((uint64_t)v8, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v36 = sub_21C3A79BC();
      v37 = sub_21C3A81C0();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_21C2CD000, v36, v37, "Error (capturePIN): nil result", v38, 2u);
        MEMORY[0x22077AF8C](v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v34);
    }
    sub_21C2FA030();
    v39 = swift_allocError();
    *(_OWORD *)v40 = xmmword_21C3B17C0;
    *(_BYTE *)(v40 + 16) = 2;
    goto LABEL_35;
  }
  v26 = a1;
  ReadResult.getPaymentData()(&v58);
  v27 = v58.value.id._object;
  if (!v58.value.id._object)
  {

    goto LABEL_18;
  }
  v56 = a3;
  v28 = v58.value.id._countAndFlagsBits;
  generalCardData = v58.value.generalCardData;
  paymentCardData = v58.value.paymentCardData;
  applicationTypeIdentifier = v58.value.applicationTypeIdentifier;
  v29 = *(unsigned __int16 *)&v58.value.outcome | (v58.value.isPINFallback << 16);
  if (qword_25525AAD0 != -1)
    swift_once();
  v30 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v30, (uint64_t)v11);
  v31 = sub_21C3A79D4();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v11, 1, v31) == 1)
  {
    sub_21C2D775C((uint64_t)v11, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v49 = sub_21C3A79BC();
    v50 = sub_21C3A81D8();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_21C2CD000, v49, v50, "Result (capturePIN): success", v51, 2u);
      MEMORY[0x22077AF8C](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v31);
  }
  v58.value.id._countAndFlagsBits = v28;
  v58.value.id._object = v27;
  v58.value.paymentCardData = paymentCardData;
  v58.value.generalCardData = generalCardData;
  v58.value.applicationTypeIdentifier = applicationTypeIdentifier;
  *(_WORD *)&v58.value.outcome = v29 & 0x1FF;
  v58.value.isPINFallback = BYTE2(v29) & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2B0);
  sub_21C3A80E8();

}

uint64_t sub_21C340A94(_OWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = v1;
  *(_QWORD *)(v2 + 32) = *v1;
  *(_QWORD *)(v2 + 40) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_OWORD *)(v2 + 56) = *a1;
  return swift_task_switch();
}

uint64_t sub_21C340B08()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[6];
  v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[6];
  if (v5 == 1)
  {
    sub_21C2D775C(v0[6], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[3], 0x6628737574617473, 0xEC000000293A726FLL, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = v0[7];
  v8 = v0[8];
  v9 = swift_task_alloc();
  v0[9] = v9;
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_21C340C48;
  return sub_21C341758(0x6628737574617473, 0xEC000000293A726FLL);
}

uint64_t sub_21C340C48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 128) = v0;
    return swift_task_switch();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 88) = v5;
    *v5 = v3;
    v5[1] = sub_21C340CD8;
    return sub_21C345BA8(0);
  }
}

uint64_t sub_21C340CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(*v2 + 96) = a1;
  swift_task_dealloc();
  if (v1)
    *(_QWORD *)(v3 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_21C340D4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v3 = v2[12];
  v4 = v2[9];
  v5 = v2[4];
  sub_21C3209D0(&qword_25525E238, a2, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
  v6 = swift_task_alloc();
  v2[13] = v6;
  *(_QWORD *)(v6 + 16) = v3;
  strcpy((char *)(v6 + 24), "status(for:)");
  *(_BYTE *)(v6 + 37) = 0;
  *(_WORD *)(v6 + 38) = -5120;
  *(_BYTE *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 48) = sub_21C34B774;
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v6 + 64) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v2[14] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E368);
  *v7 = v2;
  v7[1] = sub_21C340E68;
  return sub_21C3A8664();
}

uint64_t sub_21C340E68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C340EDC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21C340F38()
{
  uint64_t v0;

  swift_task_dealloc();
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 120);
  return swift_task_switch();
}

uint64_t sub_21C340F84()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C340FC4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E370);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  if (a4)
    a4 = (void *)sub_21C3A7EB4();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = sub_21C34B7C4;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C3416C4;
  aBlock[3] = &block_descriptor_187;
  v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_status_completion_, a4, v12);
  _Block_release(v12);

}

uint64_t sub_21C341118(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  _QWORD v48[2];
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v48 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v48 - v13;
  v15 = type metadata accessor for PaymentCardReaderError();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (_QWORD *)((char *)v48 - v19);
  if (a2)
  {
    v52 = a2;
    PaymentCardReaderError.init(_:)(v52, v20);
    if (qword_25525AAD0 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v21, (uint64_t)v14);
    v22 = sub_21C3A79D4();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 1, v22) == 1)
    {
      sub_21C2D775C((uint64_t)v14, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      sub_21C2ED3E0((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
      v28 = sub_21C3A79BC();
      v29 = sub_21C3A81C0();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        v54 = v50;
        v51 = a3;
        *(_DWORD *)v30 = 136315138;
        v48[1] = v30 + 4;
        v49 = v30;
        PaymentCardReaderError.errorName.getter();
        v53 = sub_21C350398(v31, v32, &v54);
        sub_21C3A82F8();
        swift_bridgeObjectRelease();
        sub_21C2ED424((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
        v33 = v29;
        v34 = v49;
        _os_log_impl(&dword_21C2CD000, v28, v33, "Error (status): %s", v49, 0xCu);
        v35 = v50;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v35, -1, -1);
        MEMORY[0x22077AF8C](v34, -1, -1);

      }
      else
      {

        sub_21C2ED424((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v22);
    }
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    v36 = swift_allocError();
    sub_21C2ED3E0((uint64_t)v20, v37, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
    v54 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E370);
    sub_21C3A80DC();

    return sub_21C2ED424((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for PaymentCardReaderError);
  }
  else if (a1)
  {
    v24 = qword_25525AAD0;
    swift_bridgeObjectRetain();
    if (v24 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v25, (uint64_t)v9);
    v26 = sub_21C3A79D4();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v9, 1, v26) == 1)
    {
      sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v42 = sub_21C3A79BC();
      v43 = sub_21C3A81D8();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v44 = 0;
        _os_log_impl(&dword_21C2CD000, v42, v43, "Result (status): success", v44, 2u);
        MEMORY[0x22077AF8C](v44, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v26);
    }
    v54 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E370);
    return sub_21C3A80E8();
  }
  else
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v39 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v39, (uint64_t)v12);
    v40 = sub_21C3A79D4();
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v12, 1, v40) == 1)
    {
      return sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v45 = sub_21C3A79BC();
      v46 = sub_21C3A81C0();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v47 = 0;
        _os_log_impl(&dword_21C2CD000, v45, v46, "Error (status): nil result", v47, 2u);
        MEMORY[0x22077AF8C](v47, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v12, v40);
    }
  }
}

uint64_t sub_21C3416C4(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_21C3A7E48();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21C341758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C3417CC()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];

  if (qword_25525AA70 != -1)
    swift_once();
  if ((byte_25525B560 & 1) == 0)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 72);
    v4 = __swift_project_value_buffer(*(_QWORD *)(v0 + 56), (uint64_t)qword_255278F48);
    sub_21C2D1D80(v4, v3);
    v5 = sub_21C3A79D4();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 72), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v7 = sub_21C3A79BC();
      v8 = sub_21C3A81D8();
      v9 = os_log_type_enabled(v7, v8);
      v10 = *(_QWORD *)(v0 + 40);
      if (v9)
      {
        v24 = *(_QWORD *)(v0 + 32);
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v26[0] = v12;
        *(_DWORD *)v11 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_21C350398(v24, v10, v26);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v7, v8, "Attempting to access %s - Not Supported", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v12, -1, -1);
        MEMORY[0x22077AF8C](v11, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(_QWORD, uint64_t))(v6 + 8))(*(_QWORD *)(v0 + 72), v5);
    }
    goto LABEL_19;
  }
  if ((unint64_t)(*(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 48) + 160), *(_QWORD *)(*(_QWORD *)(v0 + 48) + 184))+ 32)- 1) >= 2)
  {
    sub_21C331A8C();
    v1 = (void *)sub_21C3A8214();
    sub_21C3A8220();

    if ((*(_BYTE *)(v0 + 80) & 1) == 0)
    {
      if (qword_25525AAD0 != -1)
        swift_once();
      v13 = *(_QWORD *)(v0 + 64);
      v14 = __swift_project_value_buffer(*(_QWORD *)(v0 + 56), (uint64_t)qword_255278F48);
      sub_21C2D1D80(v14, v13);
      v15 = sub_21C3A79D4();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
      {
        sub_21C2D775C(*(_QWORD *)(v0 + 64), (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        swift_bridgeObjectRetain_n();
        v18 = sub_21C3A79BC();
        v19 = sub_21C3A81D8();
        v20 = os_log_type_enabled(v18, v19);
        v21 = *(_QWORD *)(v0 + 40);
        if (v20)
        {
          v25 = *(_QWORD *)(v0 + 32);
          v22 = (uint8_t *)swift_slowAlloc();
          v23 = swift_slowAlloc();
          v26[0] = v23;
          *(_DWORD *)v22 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v0 + 24) = sub_21C350398(v25, v21, v26);
          sub_21C3A82F8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_21C2CD000, v18, v19, "Application not in foreground, returning from %s", v22, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v23, -1, -1);
          MEMORY[0x22077AF8C](v22, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(_QWORD, uint64_t))(v16 + 8))(*(_QWORD *)(v0 + 64), v15);
      }
LABEL_19:
      type metadata accessor for PaymentCardReaderError();
      sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      v2 = *(uint64_t (**)(void))(v0 + 8);
      return v2();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_21C341CD4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v10;

  *(_BYTE *)(v8 + 121) = v10;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = a8;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_BYTE *)(v8 + 120) = a2;
  *(_QWORD *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 80) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v8 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C341D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_BYTE *)(v1 + 272) == 1)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 88);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 80), (uint64_t)qword_255278F48);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 88), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v7 = sub_21C3A79BC();
      v8 = sub_21C3A81C0();
      v9 = os_log_type_enabled(v7, v8);
      v10 = *(_QWORD *)(v0 + 40);
      if (v9)
      {
        v14 = *(_QWORD *)(v0 + 32);
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v15 = v12;
        *(_DWORD *)v11 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_21C350398(v14, v10, &v15);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v7, v8, "Error (%s): a previous request is running, returning busy", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v12, -1, -1);
        MEMORY[0x22077AF8C](v11, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 88), v4);
    }
    if (*(_BYTE *)(v0 + 120) == 1)
    {
      sub_21C2FA030();
      swift_allocError();
      *(_OWORD *)v13 = xmmword_21C3B17E0;
      *(_BYTE *)(v13 + 16) = 2;
    }
    else
    {
      type metadata accessor for PaymentCardReaderError();
      sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v1 + 272) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_21C34205C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_BYTE *)(v0 + 121);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *(_BYTE *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_21C342100;
  return sub_21C342ACC(*(_QWORD *)(v0 + 24), 0xD00000000000001ALL, 0x800000021C3BC080, 0, 1, (uint64_t)sub_21C34B834, v4);
}

uint64_t sub_21C342100()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C342174()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 272) = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3421C4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C342204()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 272) = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C342250(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 80) = v10;
  *(_QWORD *)(v8 + 88) = v11;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = a8;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_BYTE *)(v8 + 128) = a2;
  *(_QWORD *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 96) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v8 + 104) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C3422CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  unint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_BYTE *)(v1 + 272) == 1)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 104);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 96), (uint64_t)qword_255278F48);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v8 = sub_21C3A79BC();
      v9 = sub_21C3A81C0();
      v10 = os_log_type_enabled(v8, v9);
      v11 = *(_QWORD *)(v0 + 40);
      if (v10)
      {
        v15 = *(_QWORD *)(v0 + 32);
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v16 = v13;
        *(_DWORD *)v12 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_21C350398(v15, v11, &v16);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v8, v9, "Error (%s): a previous request is running, returning busy", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v13, -1, -1);
        MEMORY[0x22077AF8C](v12, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 104), v4);
    }
    if (*(_BYTE *)(v0 + 128) == 1)
    {
      sub_21C2FA030();
      swift_allocError();
      *(_OWORD *)v14 = xmmword_21C3B17E0;
      *(_BYTE *)(v14 + 16) = 2;
    }
    else
    {
      type metadata accessor for PaymentCardReaderError();
      sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v1 + 272) = 1;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v6;
    *v6 = v0;
    v6[1] = sub_21C342608;
    return sub_21C33FF6C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_21C342608()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C34266C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 272) = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3426D0()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 48) + 272) = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C342728(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v10;
  _QWORD *v12;

  *(_QWORD *)(v7 + 40) = a6;
  *(_QWORD *)(v7 + 48) = v6;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a5;
  *(_BYTE *)(v7 + 113) = a3;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 56) = *v6;
  if ((a4 & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v7 + 64) = v10;
    *v10 = v7;
    v10[1] = sub_21C3427E0;
    return sub_21C341758(a1, a2);
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v7 + 72) = v12;
    *v12 = v7;
    v12[1] = sub_21C342868;
    return sub_21C345BA8(*(_BYTE *)(v7 + 113));
  }
}

uint64_t sub_21C3427E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 72) = v5;
  *v5 = v3;
  v5[1] = sub_21C342868;
  return sub_21C345BA8(*(_BYTE *)(v2 + 113));
}

uint64_t sub_21C342868(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(0);
  else
    return swift_task_switch();
}

uint64_t sub_21C3428E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD *v10;

  v3 = *(_QWORD *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 56);
  v5 = *(_BYTE *)(v2 + 113);
  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  sub_21C3209D0(&qword_25525E238, a2, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
  v8 = swift_task_alloc();
  *(_QWORD *)(v2 + 88) = v8;
  v9 = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v7;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 40) = v5;
  *(_OWORD *)(v8 + 48) = v9;
  *(_QWORD *)(v8 + 64) = v4;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 96) = v10;
  *v10 = v2;
  v10[1] = sub_21C3429E0;
  return sub_21C3A8664();
}

uint64_t sub_21C3429E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C342A54()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 112));
}

uint64_t sub_21C342A8C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21C342ACC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v11;
  _QWORD *v13;

  *(_QWORD *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 56) = v7;
  *(_BYTE *)(v8 + 120) = a4;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 64) = *v7;
  if ((a5 & 1) != 0)
  {
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 + 72) = v11;
    *v11 = v8;
    v11[1] = sub_21C342B84;
    return sub_21C341758(a2, a3);
  }
  else
  {
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 + 80) = v13;
    *v13 = v8;
    v13[1] = sub_21C342C08;
    return sub_21C345BA8(*(_BYTE *)(v8 + 120));
  }
}

uint64_t sub_21C342B84()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v5;
  *v5 = v3;
  v5[1] = sub_21C342C08;
  return sub_21C345BA8(*(_BYTE *)(v2 + 120));
}

uint64_t sub_21C342C08(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21C342C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD *v10;

  v3 = *(_QWORD *)(v2 + 88);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_BYTE *)(v2 + 120);
  v7 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  sub_21C3209D0(&qword_25525E238, a2, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
  v8 = swift_task_alloc();
  *(_QWORD *)(v2 + 96) = v8;
  v9 = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v7;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 40) = v5;
  *(_OWORD *)(v8 + 48) = v9;
  *(_QWORD *)(v8 + 64) = v4;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 104) = v10;
  *v10 = v2;
  v10[1] = sub_21C342D74;
  return sub_21C3A8664();
}

uint64_t sub_21C342D74()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C342DE8(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v10;
  _QWORD *v12;

  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = v6;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a5;
  *(_BYTE *)(v7 + 120) = a3;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 64) = *v6;
  if ((a4 & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v7 + 72) = v10;
    *v10 = v7;
    v10[1] = sub_21C342EA0;
    return sub_21C341758(a1, a2);
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v7 + 80) = v12;
    *v12 = v7;
    v12[1] = sub_21C342F24;
    return sub_21C345BA8(*(_BYTE *)(v7 + 120));
  }
}

uint64_t sub_21C342EA0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v5;
  *v5 = v3;
  v5[1] = sub_21C342F24;
  return sub_21C345BA8(*(_BYTE *)(v2 + 120));
}

uint64_t sub_21C342F24(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21C342F98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD *v10;

  v3 = *(_QWORD *)(v2 + 88);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_BYTE *)(v2 + 120);
  v7 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  sub_21C3209D0(&qword_25525E238, a2, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
  v8 = swift_task_alloc();
  *(_QWORD *)(v2 + 96) = v8;
  v9 = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v7;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 40) = v5;
  *(_OWORD *)(v8 + 48) = v9;
  *(_QWORD *)(v8 + 64) = v4;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 104) = v10;
  type metadata accessor for PaymentCardReaderSession();
  *v10 = v2;
  v10[1] = sub_21C34309C;
  return sub_21C3A8664();
}

uint64_t sub_21C34309C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C343110(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v10;
  _QWORD *v12;

  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = v6;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a5;
  *(_BYTE *)(v7 + 120) = a3;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 64) = *v6;
  if ((a4 & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v7 + 72) = v10;
    *v10 = v7;
    v10[1] = sub_21C3431C8;
    return sub_21C341758(a1, a2);
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v7 + 80) = v12;
    *v12 = v7;
    v12[1] = sub_21C34324C;
    return sub_21C345BA8(*(_BYTE *)(v7 + 120));
  }
}

uint64_t sub_21C3431C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v5;
  *v5 = v3;
  v5[1] = sub_21C34324C;
  return sub_21C345BA8(*(_BYTE *)(v2 + 120));
}

uint64_t sub_21C34324C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21C3432C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD *v10;

  v3 = *(_QWORD *)(v2 + 88);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_BYTE *)(v2 + 120);
  v7 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  sub_21C3209D0(&qword_25525E238, a2, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
  v8 = swift_task_alloc();
  *(_QWORD *)(v2 + 96) = v8;
  v9 = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v7;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 40) = v5;
  *(_OWORD *)(v8 + 48) = v9;
  *(_QWORD *)(v8 + 64) = v4;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 104) = v10;
  type metadata accessor for ReadResult();
  *v10 = v2;
  v10[1] = sub_21C3433C4;
  return sub_21C3A8664();
}

uint64_t sub_21C3433C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C343438()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21C34346C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3434A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v11;
  _QWORD *v13;

  *(_QWORD *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 56) = v7;
  *(_BYTE *)(v8 + 120) = a4;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 64) = *v7;
  if ((a5 & 1) != 0)
  {
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 + 72) = v11;
    *v11 = v8;
    v11[1] = sub_21C343560;
    return sub_21C341758(a2, a3);
  }
  else
  {
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 + 80) = v13;
    *v13 = v8;
    v13[1] = sub_21C3435E4;
    return sub_21C345BA8(*(_BYTE *)(v8 + 120));
  }
}

uint64_t sub_21C343560()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v5;
  *v5 = v3;
  v5[1] = sub_21C3435E4;
  return sub_21C345BA8(*(_BYTE *)(v2 + 120));
}

uint64_t sub_21C3435E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21C343658(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD *v10;

  v3 = *(_QWORD *)(v2 + 88);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_BYTE *)(v2 + 120);
  v7 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  sub_21C3209D0(&qword_25525E238, a2, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
  v8 = swift_task_alloc();
  *(_QWORD *)(v2 + 96) = v8;
  v9 = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v7;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 40) = v5;
  *(_OWORD *)(v8 + 48) = v9;
  *(_QWORD *)(v8 + 64) = v4;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 104) = v10;
  *v10 = v2;
  v10[1] = sub_21C34374C;
  return sub_21C3A8664();
}

uint64_t sub_21C34374C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C3437C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3437F4(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, char a5, void (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(unint64_t, char *, uint64_t);
  char v27;
  unint64_t v28;
  void *v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t aBlock[7];

  v44 = a7;
  v45 = a6;
  v52 = a2;
  v50 = a8;
  v51 = a12;
  v49 = a11;
  v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v46);
  v47 = (uint64_t)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(a9);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v53 = a1;
  v21(v20, a1, v17);
  v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v23 = v22 + v19;
  v24 = swift_allocObject();
  v25 = (v23 & 0xFFFFFFFFFFFFFFF8) + v24;
  v43 = a3;
  *(_QWORD *)(v24 + 16) = a3;
  *(_QWORD *)(v24 + 24) = a4;
  v26 = *(void (**)(unint64_t, char *, uint64_t))(v18 + 32);
  v27 = a5;
  v48 = v17;
  v26(v24 + v22, v20, v17);
  *(_BYTE *)(v24 + v23) = a5;
  v28 = a4;
  *(_QWORD *)(v25 + 8) = v50;
  aBlock[4] = v49;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_21C33AA34;
  aBlock[3] = v51;
  v29 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  v30 = objc_msgSend(v52, sel_remoteObjectProxyWithErrorHandler_, v29);
  _Block_release(v29);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E240);
  if (swift_dynamicCast())
  {
    v45(v54, v53);
    return swift_unknownObjectRelease();
  }
  if (qword_25525AAD0 != -1)
    swift_once();
  v32 = __swift_project_value_buffer(v46, (uint64_t)qword_255278F48);
  v33 = v47;
  sub_21C2D1D80(v32, v47);
  v34 = sub_21C3A79D4();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) != 1)
  {
    swift_bridgeObjectRetain_n();
    v37 = sub_21C3A79BC();
    v38 = sub_21C3A81C0();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      aBlock[0] = v40;
      *(_DWORD *)v39 = 136315138;
      v52 = v39 + 4;
      swift_bridgeObjectRetain();
      v54 = sub_21C350398(v43, v28, aBlock);
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21C2CD000, v37, v38, "Error (%s): unexpected error type", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v40, -1, -1);
      MEMORY[0x22077AF8C](v39, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    if ((v27 & 1) == 0)
      goto LABEL_7;
LABEL_12:
    sub_21C2FA030();
    v36 = swift_allocError();
    *(_OWORD *)v41 = xmmword_21C3B17F0;
    *(_BYTE *)(v41 + 16) = 2;
    goto LABEL_13;
  }
  sub_21C2D775C(v33, (uint64_t *)&unk_25525B0E0);
  if ((a5 & 1) != 0)
    goto LABEL_12;
LABEL_7:
  type metadata accessor for PaymentCardReaderError();
  sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
  v36 = swift_allocError();
  swift_storeEnumTagMultiPayload();
LABEL_13:
  aBlock[0] = v36;
  return sub_21C3A80DC();
}

uint64_t sub_21C343C88(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;

  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v13, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v16, (uint64_t)v15);
  v17 = sub_21C3A79D4();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) != 1)
  {
    v20 = a2;
    v40 = a5;
    swift_bridgeObjectRetain();
    v21 = a1;
    swift_bridgeObjectRetain();
    v22 = a1;
    v23 = sub_21C3A79BC();
    v24 = sub_21C3A81C0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v38 = a7;
      v26 = v25;
      v36 = (_QWORD *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v42 = v37;
      *(_DWORD *)v26 = 136315394;
      v39 = a4;
      swift_bridgeObjectRetain();
      v41 = sub_21C350398(v20, a3, &v42);
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2112;
      v27 = a1;
      v28 = _swift_stdlib_bridgeErrorToNSError();
      v41 = v28;
      sub_21C3A82F8();
      v29 = v36;
      *v36 = v28;

      _os_log_impl(&dword_21C2CD000, v23, v24, "Error (%s): proxy error handler: %@", (uint8_t *)v26, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v29, -1, -1);
      v30 = v37;
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v30, -1, -1);
      v31 = v26;
      a7 = v38;
      MEMORY[0x22077AF8C](v31, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v32 = v40;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    if ((v32 & 1) == 0)
      goto LABEL_5;
LABEL_10:
    sub_21C2FA030();
    v19 = swift_allocError();
    *(_OWORD *)v33 = xmmword_21C3B17F0;
    *(_BYTE *)(v33 + 16) = 2;
    goto LABEL_11;
  }
  sub_21C2D775C((uint64_t)v15, (uint64_t *)&unk_25525B0E0);
  if ((a5 & 1) != 0)
    goto LABEL_10;
LABEL_5:
  type metadata accessor for PaymentCardReaderError();
  sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
  v19 = swift_allocError();
  swift_storeEnumTagMultiPayload();
LABEL_11:
  v42 = v19;
  __swift_instantiateConcreteTypeFromMangledName(a7);
  return sub_21C3A80DC();
}

uint64_t sub_21C344040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  const char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock[6];
  uint64_t v41;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v5 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v38 - v8;
  v10 = *(_QWORD *)(v2 + 208);
  if ((*(_BYTE *)(v2 + 216) & 1) != 0 || (unint64_t)(v10 - 3) < 0xFFFFFFFFFFFFFFFELL)
  {
    if ((*(_BYTE *)(v2 + 216) & 1) == 0)
      goto LABEL_15;
    goto LABEL_26;
  }
  if (a1 == 3 || !a1)
  {
    v11 = *(void **)(v2 + 224);
    if (v11)
    {
      aBlock[4] = (uint64_t)sub_21C3446CC;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_21C33AA34;
      aBlock[3] = (uint64_t)&block_descriptor_24_0;
      v12 = _Block_copy(aBlock);
      v13 = v11;
      swift_release();
      v14 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v12);
      _Block_release(v12);

      sub_21C3A8340();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525E240);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v15 = (void *)aBlock[0];
        if (qword_25525AAD0 != -1)
          swift_once();
        v16 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F48);
        sub_21C2D1D80(v16, (uint64_t)v9);
        v17 = sub_21C3A79D4();
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
        {
          sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
        }
        else
        {
          v39 = a1;
          v22 = sub_21C3A79BC();
          v23 = sub_21C3A81D8();
          if (os_log_type_enabled(v22, v23))
          {
            v24 = (uint8_t *)swift_slowAlloc();
            v38 = (uint64_t)v15;
            v25 = v24;
            *(_WORD *)v24 = 0;
            _os_log_impl(&dword_21C2CD000, v22, v23, "Going to background, disconnect", v24, 2u);
            v26 = v25;
            v15 = (void *)v38;
            MEMORY[0x22077AF8C](v26, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
          a1 = v39;
        }
        objc_msgSend(v15, sel_closeSession_, 0);
        swift_unknownObjectRelease();
      }
    }
    if ((*(_BYTE *)(v2 + 216) & 1) != 0)
      goto LABEL_26;
    goto LABEL_14;
  }
  if ((*(_BYTE *)(v2 + 216) & 1) != 0)
  {
LABEL_26:
    v19 = 0;
    v20 = 0xE000000000000000;
    goto LABEL_27;
  }
LABEL_14:
  v10 = *(_QWORD *)(v2 + 208);
LABEL_15:
  v19 = 0x756F72676B636162;
  v20 = 0xEA0000000000646ELL;
  switch(v10)
  {
    case 0:
      break;
    case 1:
      v19 = 0xD000000000000012;
      v21 = "foregroundInactive";
      goto LABEL_18;
    case 2:
      v20 = 0x800000021C3BBDA0;
      v19 = 0xD000000000000010;
      break;
    case 3:
      v19 = 0x74616E696D726574;
      v20 = 0xE900000000000065;
      break;
    case 4:
      v19 = 0xD000000000000013;
      v21 = "unexpectedTerminate";
LABEL_18:
      v20 = (unint64_t)(v21 - 32) | 0x8000000000000000;
      break;
    default:
      aBlock[0] = v10;
LABEL_44:
      sub_21C3A8670();
      __break(1u);
      JUMPOUT(0x21C3446A4);
  }
LABEL_27:
  if (qword_25525AAD0 != -1)
    swift_once();
  v27 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v27, (uint64_t)v7);
  v28 = sub_21C3A79D4();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v7, 1, v28) == 1)
  {
    swift_bridgeObjectRelease();
    result = sub_21C2D775C((uint64_t)v7, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v39 = a1;
    swift_bridgeObjectRetain();
    v31 = sub_21C3A79BC();
    v32 = sub_21C3A81D8();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      aBlock[0] = v38;
      *(_DWORD *)v33 = 136446466;
      swift_bridgeObjectRetain();
      v41 = sub_21C350398(v19, v20, aBlock);
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2082;
      v34 = 0x756F72676B636162;
      v35 = 0xEA0000000000646ELL;
      switch(v39)
      {
        case 0:
          goto LABEL_39;
        case 1:
          v34 = 0xD000000000000012;
          v36 = "foregroundInactive";
          goto LABEL_36;
        case 2:
          v35 = 0x800000021C3BBDA0;
          v34 = 0xD000000000000010;
          goto LABEL_39;
        case 3:
          v34 = 0x74616E696D726574;
          v35 = 0xE900000000000065;
          goto LABEL_39;
        case 4:
          v34 = 0xD000000000000013;
          v36 = "unexpectedTerminate";
LABEL_36:
          v35 = (unint64_t)(v36 - 32) | 0x8000000000000000;
LABEL_39:
          v41 = sub_21C350398(v34, v35, aBlock);
          sub_21C3A82F8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21C2CD000, v31, v32, "Foreground state change: [ %{public}s, %{public}s ]", (uint8_t *)v33, 0x16u);
          v37 = v38;
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v37, -1, -1);
          MEMORY[0x22077AF8C](v33, -1, -1);
          goto LABEL_40;
        default:
          v41 = v39;
          goto LABEL_44;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_40:

    result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v7, v28);
    a1 = v39;
  }
  *(_QWORD *)(v2 + 208) = a1;
  *(_BYTE *)(v2 + 216) = 0;
  return result;
}

uint64_t sub_21C3446CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8]();
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v3, (uint64_t)v2);
  v4 = sub_21C3A79D4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    return sub_21C2D775C((uint64_t)v2, (uint64_t *)&unk_25525B0E0);
  v7 = sub_21C3A79BC();
  v8 = sub_21C3A81C0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_21C2CD000, v7, v8, "Error while closing reader session", v9, 2u);
    MEMORY[0x22077AF8C](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_21C344830(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t result;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  _QWORD *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  int v62;

  v2 = v1;
  LODWORD(v57) = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E258);
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v49 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v13);
  v52 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v54 = (uint64_t)&v49 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t)&v49 - v18;
  if (qword_25525AAD0 != -1)
LABEL_44:
    swift_once();
  v55 = __swift_project_value_buffer(v13, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v55, v19);
  v20 = sub_21C3A79D4();
  v21 = *(_QWORD *)(v20 - 8);
  v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v56(v19, 1, v20) == 1)
  {
    sub_21C2D775C(v19, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v22 = sub_21C3A79BC();
    v23 = sub_21C3A81D8();
    LODWORD(v51) = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v53 = v21;
      v25 = v20;
      v26 = v24;
      *(_DWORD *)v24 = 67109120;
      v62 = v57 & 1;
      sub_21C3A82F8();
      _os_log_impl(&dword_21C2CD000, v22, (os_log_type_t)v51, "PaymentTerminalServiceDelegate.closed(), remote?=%{BOOL}d", v26, 8u);
      v27 = v26;
      v20 = v25;
      v21 = v53;
      MEMORY[0x22077AF8C](v27, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  v19 = 1;
  *(_BYTE *)(v2 + 218) = (v57 & 1) == 0;
  if (!*(_QWORD *)(v2 + 248))
  {
    v41 = v52;
    sub_21C2D1D80(v55, v52);
    if (v56(v41, 1, v20) == 1)
      return sub_21C2D775C(v41, (uint64_t *)&unk_25525B0E0);
    v46 = sub_21C3A79BC();
    v47 = sub_21C3A81D8();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_21C2CD000, v46, v47, "Cannot find active session", v48, 2u);
      MEMORY[0x22077AF8C](v48, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v41, v20);
  }
  v53 = v21;
  v50 = (_QWORD *)(v2 + 240);
  v51 = v20;
  swift_beginAccess();
  v52 = v2;
  v28 = *(_QWORD *)(v2 + 144);
  v29 = *(_QWORD *)(v28 + 64);
  v57 = v28 + 64;
  v30 = 1 << *(_BYTE *)(v28 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v13 = v31 & v29;
  v32 = (unint64_t)(v30 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v2 = 0;
  while (1)
  {
    if (v13)
    {
      v34 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v35 = v34 | (v2 << 6);
      goto LABEL_12;
    }
    v36 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v36 >= v32)
    {
LABEL_32:
      swift_release();
      swift_bridgeObjectRelease();
      v60 = 0;
      v61 = 1;
      sub_21C345880(&v60);
      v39 = v54;
      sub_21C2D1D80(v55, v54);
      v40 = v51;
      if (v56(v39, 1, v51) == 1)
      {
        sub_21C2D775C(v39, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v42 = sub_21C3A79BC();
        v43 = sub_21C3A81D8();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v44 = 0;
          _os_log_impl(&dword_21C2CD000, v42, v43, "Releasing active session", v44, 2u);
          MEMORY[0x22077AF8C](v44, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v39, v40);
      }
      v45 = v50;
      *v50 = 0;
      v45[1] = 0;
      return swift_bridgeObjectRelease();
    }
    v37 = *(_QWORD *)(v57 + 8 * v36);
    ++v2;
    if (!v37)
    {
      v2 = v36 + 1;
      if (v36 + 1 >= v32)
        goto LABEL_32;
      v37 = *(_QWORD *)(v57 + 8 * v2);
      if (!v37)
      {
        v2 = v36 + 2;
        if (v36 + 2 >= v32)
          goto LABEL_32;
        v37 = *(_QWORD *)(v57 + 8 * v2);
        if (!v37)
        {
          v2 = v36 + 3;
          if (v36 + 3 >= v32)
            goto LABEL_32;
          v37 = *(_QWORD *)(v57 + 8 * v2);
          if (!v37)
          {
            v2 = v36 + 4;
            if (v36 + 4 >= v32)
              goto LABEL_32;
            v37 = *(_QWORD *)(v57 + 8 * v2);
            if (!v37)
              break;
          }
        }
      }
    }
LABEL_31:
    v13 = (v37 - 1) & v37;
    v35 = __clz(__rbit64(v37)) + (v2 << 6);
LABEL_12:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(v28 + 56) + *(_QWORD *)(v7 + 72) * v35, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    v60 = 0;
    v61 = 1;
    v19 = (uint64_t)v9;
    sub_21C3A8130();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v5, v59);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v38 = v36 + 5;
  if (v38 >= v32)
    goto LABEL_32;
  v37 = *(_QWORD *)(v57 + 8 * v38);
  if (v37)
  {
    v2 = v38;
    goto LABEL_31;
  }
  while (1)
  {
    v2 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v2 >= v32)
      goto LABEL_32;
    v37 = *(_QWORD *)(v57 + 8 * v2);
    ++v38;
    if (v37)
      goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_21C344E7C(uint64_t a1)
{
  int64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t result;
  int64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  _QWORD v35[3];
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;

  v2 = v1;
  v40 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E258);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v35 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
LABEL_34:
    swift_once();
  v16 = __swift_project_value_buffer(v13, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v16, (uint64_t)v15);
  v17 = sub_21C3A79D4();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1)
  {
    sub_21C2D775C((uint64_t)v15, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    swift_retain();
    v19 = sub_21C3A79BC();
    v20 = sub_21C3A81D8();
    LODWORD(v37) = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v21 = 134217984;
      v35[2] = v21 + 12;
      v36 = v18;
      v35[1] = v21 + 4;
      v22 = v21;
      swift_beginAccess();
      v43 = *(_QWORD *)(*(_QWORD *)(v2 + 264) + 16);
      sub_21C3A82F8();
      swift_release();
      _os_log_impl(&dword_21C2CD000, v19, (os_log_type_t)v37, "progress updateHandlers count=%ld", v22, 0xCu);
      v23 = v22;
      v18 = v36;
      MEMORY[0x22077AF8C](v23, -1, -1);
    }
    else
    {
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
  }
  swift_beginAccess();
  v13 = *(_QWORD *)(v2 + 144);
  v24 = *(_QWORD *)(v13 + 64);
  v36 = v2;
  v37 = v13 + 64;
  v25 = 1 << *(_BYTE *)(v13 + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v24;
  v2 = (unint64_t)(v25 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v29 = 0;
  while (1)
  {
    if (v27)
    {
      v30 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      v31 = v30 | (v29 << 6);
      goto LABEL_12;
    }
    v32 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v32 >= v2)
      goto LABEL_32;
    v33 = *(_QWORD *)(v37 + 8 * v32);
    ++v29;
    if (!v33)
    {
      v29 = v32 + 1;
      if (v32 + 1 >= v2)
        goto LABEL_32;
      v33 = *(_QWORD *)(v37 + 8 * v29);
      if (!v33)
      {
        v29 = v32 + 2;
        if (v32 + 2 >= v2)
          goto LABEL_32;
        v33 = *(_QWORD *)(v37 + 8 * v29);
        if (!v33)
        {
          v29 = v32 + 3;
          if (v32 + 3 >= v2)
            goto LABEL_32;
          v33 = *(_QWORD *)(v37 + 8 * v29);
          if (!v33)
          {
            v29 = v32 + 4;
            if (v32 + 4 >= v2)
              goto LABEL_32;
            v33 = *(_QWORD *)(v37 + 8 * v29);
            if (!v33)
              break;
          }
        }
      }
    }
LABEL_31:
    v27 = (v33 - 1) & v33;
    v31 = __clz(__rbit64(v33)) + (v29 << 6);
LABEL_12:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(v13 + 56) + *(_QWORD *)(v7 + 72) * v31, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    v41 = v40;
    v42 = 0;
    v15 = v9;
    sub_21C3A8130();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v39);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v34 = v32 + 5;
  if (v34 >= v2)
  {
LABEL_32:
    swift_release();
    swift_bridgeObjectRelease();
    v41 = v40;
    v42 = 0;
    return sub_21C345880(&v41);
  }
  v33 = *(_QWORD *)(v37 + 8 * v34);
  if (v33)
  {
    v29 = v34;
    goto LABEL_31;
  }
  while (1)
  {
    v29 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v29 >= v2)
      goto LABEL_32;
    v33 = *(_QWORD *)(v37 + 8 * v29);
    ++v34;
    if (v33)
      goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_21C3452F0(unint64_t a1)
{
  int64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Feedback;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t isa;
  int64_t v37;
  uint64_t result;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  NSObject *v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51[3];

  v2 = v1;
  v47 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E258);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v39 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 == -1)
    goto LABEL_2;
LABEL_38:
  swift_once();
LABEL_2:
  v16 = __swift_project_value_buffer(v13, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v16, (uint64_t)v15);
  v17 = sub_21C3A79D4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17);
  v42 = v2;
  if (v19 == 1)
  {
    sub_21C2D775C((uint64_t)v15, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    swift_retain_n();
    v20 = sub_21C3A79BC();
    v21 = sub_21C3A81D8();
    LODWORD(v44) = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v43 = v20;
      v23 = v22;
      v40 = swift_slowAlloc();
      v51[0] = v40;
      *(_DWORD *)v23 = 136315394;
      v41 = v23 + 4;
      Feedback = ReadFeedbackInternal.description.getter(v47);
      v39[1] = v25;
      v48 = sub_21C350398(Feedback, v25, v51);
      sub_21C3A82F8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2048;
      v41 = v23 + 14;
      swift_beginAccess();
      v26 = *(_QWORD *)(*(_QWORD *)(v2 + 256) + 16);
      swift_release();
      v49 = v26;
      v2 = v42;
      sub_21C3A82F8();
      swift_release();
      v41 = v18;
      _os_log_impl(&dword_21C2CD000, v43, (os_log_type_t)v44, "readerFeedback: %s, eventHandlers count=%ld", (uint8_t *)v23, 0x16u);
      v27 = v40;
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v27, -1, -1);
      MEMORY[0x22077AF8C](v23, -1, -1);

      v18 = v41;
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
  }
  swift_beginAccess();
  v13 = *(_QWORD *)(v2 + 144);
  v28 = *(_QWORD *)(v13 + 64);
  v43 = (v13 + 64);
  v29 = 1 << *(_BYTE *)(v13 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v44 = (unint64_t)(v29 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v2 = 0;
  v32 = v47 + 1;
  if (v31)
  {
LABEL_11:
    v33 = __clz(__rbit64(v31));
    v31 &= v31 - 1;
    v34 = v33 | (v2 << 6);
    goto LABEL_30;
  }
  while (1)
  {
    v35 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v35 >= v44)
      break;
    isa = (unint64_t)v43[v35].isa;
    ++v2;
    if (isa)
      goto LABEL_29;
    v2 = v35 + 1;
    if (v35 + 1 >= v44)
      break;
    isa = (unint64_t)v43[v2].isa;
    if (isa)
      goto LABEL_29;
    v2 = v35 + 2;
    if (v35 + 2 >= v44)
      break;
    isa = (unint64_t)v43[v2].isa;
    if (isa)
      goto LABEL_29;
    v2 = v35 + 3;
    if (v35 + 3 >= v44)
      break;
    isa = (unint64_t)v43[v2].isa;
    if (isa)
      goto LABEL_29;
    v2 = v35 + 4;
    if (v35 + 4 >= v44)
      break;
    isa = (unint64_t)v43[v2].isa;
    if (isa)
      goto LABEL_29;
    v37 = v35 + 5;
    if (v37 >= v44)
      break;
    isa = (unint64_t)v43[v37].isa;
    if (!isa)
    {
      while (1)
      {
        v2 = v37 + 1;
        if (__OFADD__(v37, 1))
          break;
        if (v2 >= v44)
          goto LABEL_33;
        isa = (unint64_t)v43[v2].isa;
        ++v37;
        if (isa)
          goto LABEL_29;
      }
      __break(1u);
LABEL_40:
      v49 = v47;
      result = sub_21C3A8670();
      __break(1u);
      return result;
    }
    v2 = v37;
LABEL_29:
    v31 = (isa - 1) & isa;
    v34 = __clz(__rbit64(isa)) + (v2 << 6);
LABEL_30:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(v13 + 56) + *(_QWORD *)(v7 + 72) * v34, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    if (v47 >= 0xA)
      goto LABEL_40;
    v49 = v32;
    v50 = 1;
    v15 = v9;
    sub_21C3A8130();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v46);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v31)
      goto LABEL_11;
  }
LABEL_33:
  swift_release();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v42 + 248))
  {
    result = ReadFeedbackInternal.externalizeToReadEvent.getter(v47, (char *)&v49);
    if (v49 != 7)
      return sub_21C345A1C((char *)&v49);
  }
  return result;
}

uint64_t sub_21C345880(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t *);
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  char v19;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 264);
  v5 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v4 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v9)
      return swift_release();
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v9)
        return swift_release();
      v16 = *(_QWORD *)(v5 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v9)
          return swift_release();
        v16 = *(_QWORD *)(v5 + 8 * v11);
        if (!v16)
        {
          v11 = v15 + 3;
          if (v15 + 3 >= v9)
            return swift_release();
          v16 = *(_QWORD *)(v5 + 8 * v11);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_5:
    v14 = *(void (**)(uint64_t *))(*(_QWORD *)(v4 + 56) + 16 * v13);
    v18 = v2;
    v19 = v3;
    swift_retain();
    v14(&v18);
    result = swift_release();
  }
  v17 = v15 + 4;
  if (v17 >= v9)
    return swift_release();
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v9)
      return swift_release();
    v16 = *(_QWORD *)(v5 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21C345A1C(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  void (*v13)(char *);
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  char v17;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 256);
  v4 = v3 + 64;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      return swift_release();
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v8)
        return swift_release();
      v15 = *(_QWORD *)(v4 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v8)
          return swift_release();
        v15 = *(_QWORD *)(v4 + 8 * v10);
        if (!v15)
        {
          v10 = v14 + 3;
          if (v14 + 3 >= v8)
            return swift_release();
          v15 = *(_QWORD *)(v4 + 8 * v10);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_5:
    v13 = *(void (**)(char *))(*(_QWORD *)(v3 + 56) + 16 * v12);
    v17 = v2;
    swift_retain();
    v13(&v17);
    result = swift_release();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
    return swift_release();
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v15 = *(_QWORD *)(v4 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21C345BA8(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 72) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C345C0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v20;
  _QWORD *v21;
  uint64_t v22;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[10];
  v2 = __swift_project_value_buffer(v0[9], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[10];
  if (v5 == 1)
  {
    sub_21C2D775C(v0[10], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[8], 0xD00000000000001BLL, 0x800000021C3BBD60, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = v0[8];
  v8 = *(void **)(v7 + 224);
  if (v8)
    goto LABEL_9;
  v9 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v10 = (void *)sub_21C3A7EB4();
  v11 = objc_msgSend(v9, sel_initWithMachServiceName_options_, v10, 0);

  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_interfaceWithProtocol_, &unk_255289610);
  objc_msgSend(v11, sel_setRemoteObjectInterface_, v13);

  v14 = objc_msgSend(v12, sel_interfaceWithProtocol_, &unk_255287C10);
  objc_msgSend(v11, sel_setExportedInterface_, v14);

  type metadata accessor for PaymentCardReaderDelegate();
  objc_msgSend(v11, sel_setExportedObject_, swift_allocObject());
  swift_release();
  v15 = swift_allocObject();
  swift_weakInit();
  v0[6] = sub_21C34AE30;
  v0[7] = v15;
  v0[2] = MEMORY[0x24BDAC760];
  v0[3] = 1107296256;
  v0[4] = sub_21C3309B4;
  v0[5] = &block_descriptor_17;
  v16 = _Block_copy(v0 + 2);
  swift_release();
  objc_msgSend(v11, sel_setInterruptionHandler_, v16);
  _Block_release(v16);
  v17 = *(void **)(v7 + 224);
  *(_QWORD *)(v7 + 224) = v11;

  objc_msgSend(*(id *)(v7 + 224), sel_resume);
  v8 = *(void **)(v7 + 224);
  if (v8)
  {
    v7 = v0[8];
LABEL_9:
    v0[11] = v8;
    if ((*(_BYTE *)(v7 + 217) & 1) != 0)
    {
      v18 = v8;
      swift_task_dealloc();
      return ((uint64_t (*)(_QWORD))v0[1])(v0[11]);
    }
    else
    {
      v20 = v8;
      v21 = (_QWORD *)swift_task_alloc();
      v0[12] = v21;
      *v21 = v0;
      v21[1] = sub_21C346010;
      return sub_21C3460C4((uint64_t)v20, *((_BYTE *)v0 + 112));
    }
  }
  if (*((_BYTE *)v0 + 112) == 1)
  {
    sub_21C2FA030();
    swift_allocError();
    *(_OWORD *)v22 = xmmword_21C3B17F0;
    *(_BYTE *)(v22 + 16) = 2;
  }
  else
  {
    type metadata accessor for PaymentCardReaderError();
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
  }
  swift_willThrow();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21C346010()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 88));
}

uint64_t sub_21C346088()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3460C4(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 192) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E228);
  *(_QWORD *)(v3 + 40) = swift_task_alloc();
  *(_QWORD *)(v3 + 48) = swift_task_alloc();
  *(_QWORD *)(v3 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v3 + 64) = swift_task_alloc();
  *(_QWORD *)(v3 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C346174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 56), (uint64_t)qword_255278F48);
  *(_QWORD *)(v0 + 80) = v2;
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  *(_QWORD *)(v0 + 88) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v0 + 96) = v4;
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(_QWORD *)(v0 + 104) = v5;
  v6 = v5(v1, 1, v3);
  v7 = *(_QWORD *)(v0 + 72);
  if (v6 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 72), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(*(_QWORD *)(v0 + 24), 0xD000000000000014, 0x800000021C3BBCE0, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  if (*(_BYTE *)(v0 + 192) == 1)
  {
    sub_21C2FA030();
    swift_allocError();
    *(_QWORD *)v9 = 0;
    *(_QWORD *)(v9 + 8) = 0;
    *(_BYTE *)(v9 + 16) = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 24);
    v12 = *(_QWORD *)(v11 + 120);
    if (v12)
    {
      *(_QWORD *)(v0 + 160) = v12;
      v13 = *(_QWORD *)(v0 + 32);
      v14 = *(_QWORD *)(v0 + 16);
      v15 = *(_QWORD *)(v11 + 112);
      sub_21C3209D0(&qword_25525E238, v8, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
      v16 = swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v16;
      *(_QWORD *)(v16 + 16) = v14;
      *(_QWORD *)(v16 + 24) = v11;
      *(_BYTE *)(v16 + 32) = 0;
      *(_QWORD *)(v16 + 40) = v15;
      *(_QWORD *)(v16 + 48) = v12;
      *(_QWORD *)(v16 + 56) = v13;
      swift_bridgeObjectRetain();
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v17;
      *v17 = v0;
      v17[1] = sub_21C3468AC;
      return sub_21C3A8664();
    }
    else
    {
      *(_QWORD *)(v0 + 112) = objc_opt_self();
      *(_QWORD *)(v0 + 120) = sub_21C3A8100();
      *(_QWORD *)(v0 + 128) = sub_21C3A80F4();
      sub_21C3A80D0();
      return swift_task_switch();
    }
  }
}

uint64_t sub_21C34643C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 112);
  swift_release();
  *(_QWORD *)(v0 + 136) = objc_msgSend(v1, sel_currentDevice);
  return swift_task_switch();
}

uint64_t sub_21C34649C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = sub_21C3A80F4();
  sub_21C3A80D0();
  return swift_task_switch();
}

uint64_t sub_21C3464FC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);
  swift_release();
  *(_QWORD *)(v0 + 152) = objc_msgSend(v1, sel_identifierForVendor);

  return swift_task_switch();
}

uint64_t sub_21C34655C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    sub_21C3A77D0();

    v3 = sub_21C3A77E8();
    v4 = *(_QWORD *)(v3 - 8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  }
  else
  {
    v3 = sub_21C3A77E8();
    v4 = *(_QWORD *)(v3 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  v5 = *(_QWORD *)(v0 + 48);
  sub_21C34AC00(*(_QWORD *)(v0 + 40), v5);
  sub_21C3A77E8();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3);
  v7 = *(_QWORD *)(v0 + 48);
  if (v6 == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 48), &qword_25525E228);
    v8 = 0;
    v9 = 0;
  }
  else
  {
    v8 = sub_21C3A77C4();
    v9 = v10;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v11 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v11 + 112) = v8;
  *(_QWORD *)(v11 + 120) = v9;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v11 + 120);
  if (v13)
  {
    *(_QWORD *)(v0 + 160) = v13;
    v14 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 32);
    v16 = *(_QWORD *)(v0 + 16);
    v17 = *(_QWORD *)(v14 + 112);
    sub_21C3209D0(&qword_25525E238, v12, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
    v18 = swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v18;
    *(_QWORD *)(v18 + 16) = v16;
    *(_QWORD *)(v18 + 24) = v14;
    *(_BYTE *)(v18 + 32) = 0;
    *(_QWORD *)(v18 + 40) = v17;
    *(_QWORD *)(v18 + 48) = v13;
    *(_QWORD *)(v18 + 56) = v15;
    swift_bridgeObjectRetain();
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v19;
    *v19 = v0;
    v19[1] = sub_21C3468AC;
    return sub_21C3A8664();
  }
  else
  {
    v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 104);
    v22 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 64);
    sub_21C2D1D80(*(_QWORD *)(v0 + 80), v23);
    if (v21(v23, 1, v22) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 64), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v24 = sub_21C3A79BC();
      v25 = sub_21C3A81C0();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_21C2CD000, v24, v25, "Invalid installation identifier", v26, 2u);
        MEMORY[0x22077AF8C](v26, -1, -1);
      }
      v27 = *(_QWORD *)(v0 + 88);
      v28 = *(_QWORD *)(v0 + 96);
      v29 = *(_QWORD *)(v0 + 64);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v27);
    }
    type metadata accessor for PaymentCardReaderError();
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21C3468AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C346928()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C346980()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C3469E8(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  void *v22;
  id v23;
  void (*v24)(uint64_t, char *, uint64_t);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t aBlock;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;

  v52 = a6;
  v53 = a7;
  v51 = a5;
  v54 = a2;
  v48 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v48);
  v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v45);
  v50 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v57 = a1;
  v47 = v15;
  v15((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v16 = *(unsigned __int8 *)(v13 + 80);
  v17 = (v16 + 25) & ~v16;
  v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v46 = v16 | 7;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a3;
  v55 = a4;
  *(_BYTE *)(v19 + 24) = a4;
  v20 = v19 + v17;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v56 = v12;
  v21(v20, (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  *(_QWORD *)(v19 + v18) = v53;
  v63 = sub_21C34ACCC;
  v64 = v19;
  aBlock = MEMORY[0x24BDAC760];
  v60 = 1107296256;
  v61 = sub_21C33AA34;
  v62 = &block_descriptor_4;
  v22 = _Block_copy(&aBlock);
  v53 = a3;
  swift_retain();
  swift_release();
  v23 = objc_msgSend(v54, sel_remoteObjectProxyWithErrorHandler_, v22);
  _Block_release(v22);
  sub_21C3A8340();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E240);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v34 = v55;
    if (qword_25525AAD0 != -1)
      swift_once();
    v35 = __swift_project_value_buffer(v45, (uint64_t)qword_255278F48);
    v36 = v50;
    sub_21C2D1D80(v35, v50);
    v37 = sub_21C3A79D4();
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) == 1)
    {
      sub_21C2D775C(v36, (uint64_t *)&unk_25525B0E0);
      if ((v34 & 1) == 0)
      {
LABEL_11:
        type metadata accessor for PaymentCardReaderError();
        sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
        v39 = swift_allocError();
        swift_storeEnumTagMultiPayload();
LABEL_16:
        aBlock = v39;
        return sub_21C3A80DC();
      }
    }
    else
    {
      v40 = sub_21C3A79BC();
      v41 = sub_21C3A81C0();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_21C2CD000, v40, v41, "Error (context): Unexpected error type", v42, 2u);
        MEMORY[0x22077AF8C](v42, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
      if ((v34 & 1) == 0)
        goto LABEL_11;
    }
    sub_21C2FA030();
    v39 = swift_allocError();
    *(_OWORD *)v43 = xmmword_21C3B17F0;
    *(_BYTE *)(v43 + 16) = 2;
    goto LABEL_16;
  }
  v24 = v21;
  v55 &= 1u;
  v25 = v58;
  if (qword_25525AB30 != -1)
    swift_once();
  v26 = __swift_project_value_buffer(v48, (uint64_t)qword_25525F310);
  v27 = v49;
  sub_21C2ED3E0(v26, v49, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8250();
  if (qword_25525AB28 != -1)
    swift_once();
  sub_21C3A7998();
  sub_21C2ED424(v27, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  v28 = (void *)sub_21C3A7EB4();
  v29 = v56;
  v47((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v57, v56);
  v30 = (v16 + 24) & ~v16;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v53;
  v24(v31 + v30, (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v29);
  *(_BYTE *)(v31 + v30 + v14) = v55;
  v63 = sub_21C34ADBC;
  v64 = v31;
  aBlock = MEMORY[0x24BDAC760];
  v60 = 1107296256;
  v61 = sub_21C33E960;
  v62 = &block_descriptor_9;
  v32 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v25, sel_createContext_completion_, v28, v32);
  _Block_release(v32);

  return swift_unknownObjectRelease();
}

uint64_t sub_21C346FAC(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint8_t *v30;
  void *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v67 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v59 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v66 = (uint64_t)&v59 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v59 - v15;
  if (qword_25525AAD0 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v6, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v17, (uint64_t)v16);
  v18 = sub_21C3A79D4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v16, 1, v18) == 1)
  {
    sub_21C2D775C((uint64_t)v16, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v63 = v12;
    v64 = a3;
    v21 = a1;
    v22 = a1;
    v23 = sub_21C3A79BC();
    v24 = sub_21C3A81D8();
    if (os_log_type_enabled(v23, v24))
    {
      v62 = v18;
      v25 = swift_slowAlloc();
      v61 = v9;
      v26 = (uint8_t *)v25;
      v60 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v26 = 138412290;
      v65 = v19;
      v27 = a1;
      v28 = _swift_stdlib_bridgeErrorToNSError();
      v68 = v28;
      v19 = v65;
      sub_21C3A82F8();
      v29 = v60;
      *v60 = v28;
      v18 = v62;

      _os_log_impl(&dword_21C2CD000, v23, v24, "refreshContext | remote proxy error handler: %@", v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v29, -1, -1);
      v30 = v26;
      v9 = v61;
      MEMORY[0x22077AF8C](v30, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    LOBYTE(a3) = v64;
    v12 = v63;
  }
  v31 = (void *)sub_21C3A75F0();
  v32 = sub_21C34A670(v31);

  if ((v32 & 1) == 0)
  {
    sub_21C2D1D80(v17, (uint64_t)v9);
    if (v20(v9, 1, v18) == 1)
    {
      sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
      if ((a3 & 1) == 0)
      {
LABEL_15:
        type metadata accessor for PaymentCardReaderError();
        sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
        v34 = swift_allocError();
        swift_storeEnumTagMultiPayload();
LABEL_31:
        v68 = v34;
        goto LABEL_32;
      }
    }
    else
    {
      v65 = v19;
      v35 = a1;
      v36 = a1;
      v37 = sub_21C3A79BC();
      v38 = sub_21C3A81C0();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v40 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v39 = 67109378;
        LODWORD(v68) = a3 & 1;
        sub_21C3A82F8();
        *(_WORD *)(v39 + 8) = 2112;
        v41 = a1;
        v42 = v18;
        v43 = _swift_stdlib_bridgeErrorToNSError();
        v68 = v43;
        sub_21C3A82F8();
        *v40 = v43;
        v18 = v42;

        _os_log_impl(&dword_21C2CD000, v37, v38, "Error (context): isRead = %{BOOL}d, %@", (uint8_t *)v39, 0x12u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v40, -1, -1);
        MEMORY[0x22077AF8C](v39, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v18);
      if ((a3 & 1) == 0)
        goto LABEL_15;
    }
    sub_21C2FA030();
    v34 = swift_allocError();
    *(_OWORD *)v57 = xmmword_21C3B17F0;
    *(_BYTE *)(v57 + 16) = 2;
    goto LABEL_31;
  }
  if ((a3 & 1) != 0)
  {
    v33 = v66;
    sub_21C2D1D80(v17, v66);
    if (v20((char *)v33, 1, v18) == 1)
    {
      sub_21C2D775C(v33, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v44 = sub_21C3A79BC();
      v45 = sub_21C3A81C0();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = v18;
        v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v47 = 0;
        _os_log_impl(&dword_21C2CD000, v44, v45, "Error (context for read): error 159 - Sandbox", v47, 2u);
        v48 = v47;
        v18 = v46;
        MEMORY[0x22077AF8C](v48, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v33, v18);
    }
    sub_21C2FA030();
    v49 = swift_allocError();
    *(_QWORD *)v50 = 0;
    *(_QWORD *)(v50 + 8) = 0;
    *(_BYTE *)(v50 + 16) = 2;
    v68 = v49;
  }
  else
  {
    sub_21C2D1D80(v17, (uint64_t)v12);
    if (v20(v12, 1, v18) == 1)
    {
      sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v51 = sub_21C3A79BC();
      v52 = sub_21C3A81C0();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = v18;
        v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v54 = 0;
        _os_log_impl(&dword_21C2CD000, v51, v52, "Error (context for non-read): error 159 - Sandbox", v54, 2u);
        v55 = v54;
        v18 = v53;
        MEMORY[0x22077AF8C](v55, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v18);
    }
    type metadata accessor for PaymentCardReaderError();
    sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
    v56 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v68 = v56;
  }
LABEL_32:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  return sub_21C3A80DC();
}

uint64_t sub_21C3476F0(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  _DWORD v32[2];
  uint64_t v33;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v32 - v11;
  v13 = type metadata accessor for CRSignpost();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AB30 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v13, (uint64_t)qword_25525F310);
  sub_21C2ED3E0(v16, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8244();
  if (qword_25525AB28 != -1)
    swift_once();
  sub_21C3A7998();
  sub_21C2ED424((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  if ((a1 & 1) == 0)
  {
    *(_BYTE *)(a2 + 217) = 0;
    if (qword_25525AAD0 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v7, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v20, (uint64_t)v10);
    v21 = sub_21C3A79D4();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v10, 1, v21) == 1)
    {
      sub_21C2D775C((uint64_t)v10, (uint64_t *)&unk_25525B0E0);
      if ((a4 & 1) == 0)
      {
LABEL_14:
        type metadata accessor for PaymentCardReaderError();
        sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
        v23 = swift_allocError();
        swift_storeEnumTagMultiPayload();
LABEL_23:
        v33 = v23;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
        return sub_21C3A80DC();
      }
    }
    else
    {
      v28 = sub_21C3A79BC();
      v29 = sub_21C3A81C0();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v30 = 67109120;
        v32[1] = a4 & 1;
        sub_21C3A82F8();
        _os_log_impl(&dword_21C2CD000, v28, v29, "Error (context): isRead = %{BOOL}d, ReadError.readNotAllowed", v30, 8u);
        MEMORY[0x22077AF8C](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
      if ((a4 & 1) == 0)
        goto LABEL_14;
    }
    sub_21C2FA030();
    v23 = swift_allocError();
    *(_QWORD *)v31 = 0;
    *(_QWORD *)(v31 + 8) = 0;
    *(_BYTE *)(v31 + 16) = 2;
    goto LABEL_23;
  }
  *(_BYTE *)(a2 + 217) = 1;
  if (qword_25525AAD0 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v7, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v17, (uint64_t)v12);
  v18 = sub_21C3A79D4();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v18) == 1)
  {
    sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v24 = sub_21C3A79BC();
    v25 = sub_21C3A81D8();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_21C2CD000, v24, v25, "Result (context): context created", v26, 2u);
      MEMORY[0x22077AF8C](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v18);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  return sub_21C3A80E8();
}

uint64_t sub_21C347B80()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v6, (uint64_t)v5);
  v7 = sub_21C3A79D4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v9 = sub_21C3A79BC();
    v10 = sub_21C3A81D8();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_21C2CD000, v9, v10, "Connection to PaymentTerminalService interrupted, nullifying connection", v11, 2u);
      MEMORY[0x22077AF8C](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    v14 = sub_21C3A8118();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v2, 1, 1, v14);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v13;
    sub_21C2DDA54((uint64_t)v2, (uint64_t)&unk_25525E250, (uint64_t)v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_21C347DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_21C347DC4()
{
  uint64_t v0;

  sub_21C347DF4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C347DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  void *v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - v6;
  if (qword_25525AAD0 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v8, (uint64_t)v7);
  v9 = sub_21C3A79D4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_21C2D775C((uint64_t)v7, (uint64_t *)&unk_25525B0E0);
    v12 = *(void **)(v1 + 224);
    if (v12)
    {
LABEL_5:
      objc_msgSend(v12, sel_setExportedObject_, 0);
      v13 = *(void **)(v1 + 224);
      goto LABEL_10;
    }
  }
  else
  {
    v14 = sub_21C3A79BC();
    v15 = sub_21C3A81D8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_21C2CD000, v14, v15, "Service XPC disconnected", v16, 2u);
      MEMORY[0x22077AF8C](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    v12 = *(void **)(v1 + 224);
    if (v12)
      goto LABEL_5;
  }
  v13 = 0;
LABEL_10:
  *(_QWORD *)(v1 + 224) = 0;

  *(_BYTE *)(v1 + 217) = 0;
  if (*(_BYTE *)(v1 + 218) == 1)
  {
    *(_BYTE *)(v1 + 218) = 0;
  }
  else
  {
    sub_21C2D1D80(v8, (uint64_t)v4);
    if (v11(v4, 1, v9) == 1)
    {
      sub_21C2D775C((uint64_t)v4, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v17 = sub_21C3A79BC();
      v18 = sub_21C3A81C0();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_21C2CD000, v17, v18, "Unexpected interruption of XPC connection", v19, 2u);
        MEMORY[0x22077AF8C](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
    }
    sub_21C344830(1);
  }
}

uint64_t sub_21C34809C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_21C3480B4()
{
  uint64_t v0;

  if (qword_25525AAB0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = qword_255278F10;
  return swift_task_switch();
}

uint64_t sub_21C348118()
{
  uint64_t v0;

  sub_21C344830(*(unsigned __int8 *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C348154(uint64_t a1)
{
  return sub_21C34A990(a1, (uint64_t)&unk_24E034840, (uint64_t)&unk_24E034868, (uint64_t)&unk_25525E310);
}

uint64_t sub_21C348188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_21C3481A0()
{
  uint64_t v0;

  if (qword_25525AAB0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 24) = qword_255278F10;
  return swift_task_switch();
}

uint64_t sub_21C348204()
{
  uint64_t v0;

  sub_21C344E7C(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C34826C(uint64_t a1)
{
  return sub_21C34A990(a1, (uint64_t)&unk_24E0347F0, (uint64_t)&unk_24E034818, (uint64_t)&unk_25525E300);
}

uint64_t sub_21C3482A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_21C3482B8()
{
  uint64_t v0;

  if (qword_25525AAB0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 24) = qword_255278F10;
  return swift_task_switch();
}

uint64_t sub_21C34831C()
{
  uint64_t v0;

  sub_21C3452F0(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PaymentCardReaderDelegate.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PaymentCardReaderDelegate.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21C34839C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_21C3483B4()
{
  uint64_t v0;

  if (qword_25525AAB0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 24) = qword_255278F10;
  return swift_task_switch();
}

uint64_t sub_21C348418()
{
  uint64_t v0;

  sub_21C344040(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C348448()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21C34846C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_21C3A8460();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_21C348510()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_21C3A8478();
  sub_21C3209D0(&qword_25525E280, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_21C3A8688();
  sub_21C3209D0(&qword_25525E288, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_21C3A8484();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_21C348630;
  return sub_21C3A8694();
}

uint64_t sub_21C348630()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_21C3486DC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C348718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  id v11;
  void *v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v7, (uint64_t)v6);
  v8 = sub_21C3A79D4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(a2, 0xD00000000000001BLL, 0x800000021C3BC0E0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v10 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + 48) + 16);
  os_unfair_lock_lock(v10);
  v11 = *(id *)(a2 + 24);
  swift_bridgeObjectRetain();
  v12 = (void *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setObject_forKey_, a1, v12);

  os_unfair_lock_unlock(v10);
}

void sub_21C3488A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  id v10;
  void *v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25525AAD0 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v3, (uint64_t)qword_255278F48);
  sub_21C2D1D80(v6, (uint64_t)v5);
  v7 = sub_21C3A79D4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_21C2D775C((uint64_t)v5, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(a2, 0xD00000000000001DLL, 0x800000021C3BBE20, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + 48) + 16);
  os_unfair_lock_lock(v9);
  v10 = *(id *)(a2 + 24);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_21C3A7EB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_removeObjectForKey_, v11);

  os_unfair_lock_unlock(v9);
}

uint64_t sub_21C348A34(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = a7;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_BYTE *)(v7 + 112) = a1;
  *(_QWORD *)(v7 + 72) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v7 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C348AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 40);
  if (*(_BYTE *)(v1 + 272) == 1)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 80);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 72), (uint64_t)qword_255278F48);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 80), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v7 = sub_21C3A79BC();
      v8 = sub_21C3A81C0();
      v9 = os_log_type_enabled(v7, v8);
      v10 = *(_QWORD *)(v0 + 32);
      if (v9)
      {
        v14 = *(_QWORD *)(v0 + 24);
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v15 = v12;
        *(_DWORD *)v11 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_21C350398(v14, v10, &v15);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v7, v8, "Error (%s): a previous request is running, returning busy", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v12, -1, -1);
        MEMORY[0x22077AF8C](v11, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 80), v4);
    }
    if (*(_BYTE *)(v0 + 112) == 1)
    {
      sub_21C2FA030();
      swift_allocError();
      *(_OWORD *)v13 = xmmword_21C3B17E0;
      *(_BYTE *)(v13 + 16) = 2;
    }
    else
    {
      type metadata accessor for PaymentCardReaderError();
      sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    *(_BYTE *)(v1 + 272) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_21C348DB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[7];
  v1 = v0[8];
  v3 = swift_task_alloc();
  v0[11] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[12] = v4;
  *v4 = v0;
  v4[1] = sub_21C348E44;
  return sub_21C342728(0xD000000000000017, 0x800000021C3B9D10, 0, 1, (uint64_t)sub_21C34B9C8, v3);
}

uint64_t sub_21C348E44(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_BYTE *)(v4 + 113) = a1 & 1;
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C348ECC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 40) + 272) = 0;
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 113));
}

uint64_t sub_21C348F14()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C348F54()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 40) + 272) = 0;
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21C348F98(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 v10;

  *(_WORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = a8;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 24) = a2;
  *(_BYTE *)(v8 + 146) = a1;
  *(_QWORD *)(v8 + 80) = type metadata accessor for CRSignpost();
  *(_QWORD *)(v8 + 88) = swift_task_alloc();
  *(_QWORD *)(v8 + 96) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v8 + 104) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C349038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 40);
  if (*(_BYTE *)(v1 + 272) == 1)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 104);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 96), (uint64_t)qword_255278F48);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v7 = sub_21C3A79BC();
      v8 = sub_21C3A81C0();
      v9 = os_log_type_enabled(v7, v8);
      v10 = *(_QWORD *)(v0 + 32);
      if (v9)
      {
        v14 = *(_QWORD *)(v0 + 24);
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v15 = v12;
        *(_DWORD *)v11 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_21C350398(v14, v10, &v15);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v7, v8, "Error (%s): a previous request is running, returning busy", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v12, -1, -1);
        MEMORY[0x22077AF8C](v11, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 104), v4);
    }
    if (*(_BYTE *)(v0 + 146) == 1)
    {
      sub_21C2FA030();
      swift_allocError();
      *(_OWORD *)v13 = xmmword_21C3B17E0;
      *(_BYTE *)(v13 + 16) = 2;
    }
    else
    {
      type metadata accessor for PaymentCardReaderError();
      sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v1 + 272) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_21C34934C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  if (qword_25525AB50 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 88);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 80), (uint64_t)qword_25525F370);
  sub_21C2ED3E0(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8250();
  if (qword_25525AB28 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_WORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v10 = *(_OWORD *)(v0 + 64);
  sub_21C3A7998();
  sub_21C2ED424(v3, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v7;
  *(_QWORD *)(v7 + 16) = v5;
  *(_OWORD *)(v7 + 24) = v10;
  *(_BYTE *)(v7 + 40) = v4 & 1;
  *(_BYTE *)(v7 + 41) = HIBYTE(v4) & 1;
  *(_QWORD *)(v7 + 48) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v8;
  *v8 = v0;
  v8[1] = sub_21C3494C8;
  return sub_21C342DE8(0xD000000000000017, 0x800000021C3BBF60, 0, 1, (uint64_t)sub_21C34B3F8, v7);
}

uint64_t sub_21C3494C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v4 + 136) = a1;
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C34954C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 40) + 272) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 136));
}

uint64_t sub_21C3495A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C3495E0()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 40) + 272) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C34962C()
{
  _QWORD *v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = *v0;
  v1[4] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C349694()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_25525AAD0 != -1)
    swift_once();
  v1 = v0[5];
  v2 = __swift_project_value_buffer(v0[4], (uint64_t)qword_255278F48);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[5];
  if (v5 == 1)
  {
    sub_21C2D775C(v0[5], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    sub_21C365870(v0[2], 0x65526C65636E6163, 0xEE00293A5F286461, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_21C3497AC;
  return sub_21C345BA8(1);
}

uint64_t sub_21C3497AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 56) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(0);
}

uint64_t sub_21C34982C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = v2[7];
  v4 = v2[3];
  sub_21C3209D0(&qword_25525E238, a2, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderActor, (uint64_t)&unk_21C3B1914);
  v5 = swift_task_alloc();
  v2[8] = v5;
  *(_QWORD *)(v5 + 16) = v3;
  strcpy((char *)(v5 + 24), "cancelRead(_:)");
  *(_BYTE *)(v5 + 39) = -18;
  *(_BYTE *)(v5 + 40) = 1;
  *(_QWORD *)(v5 + 48) = sub_21C33E510;
  *(_QWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 64) = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v2[9] = v6;
  *v6 = v2;
  v6[1] = sub_21C34993C;
  return sub_21C3A8664();
}

uint64_t sub_21C34993C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C3499B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 88);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21C3499F8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

char *sub_21C349A40(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - v14;
  if ((unint64_t)(*(_QWORD *)(*__swift_project_boxed_opaque_existential_1(v5 + 20, v5[23]) + 32) - 1) >= 2)
  {
    v37 = a3;
    sub_21C331A8C();
    v16 = (void *)sub_21C3A8214();
    sub_21C3A8220();

    if ((v39 & 1) == 0)
    {
      if (qword_25525AAD0 != -1)
        swift_once();
      v25 = __swift_project_value_buffer(v10, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v25, (uint64_t)v15);
      v26 = sub_21C3A79D4();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v15, 1, v26) == 1)
      {
        sub_21C2D775C((uint64_t)v15, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        swift_bridgeObjectRetain_n();
        v30 = sub_21C3A79BC();
        v31 = sub_21C3A81C0();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          v33 = swift_slowAlloc();
          v39 = v33;
          *(_DWORD *)v32 = 136315138;
          v36 = v32 + 4;
          swift_bridgeObjectRetain();
          v38 = sub_21C350398(v37, a4, &v39);
          sub_21C3A82F8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_21C2CD000, v30, v31, "Application not in foreground, returning from [%s]", v32, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v33, -1, -1);
          MEMORY[0x22077AF8C](v32, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v26);
      }
      sub_21C2FA030();
      swift_allocError();
      v29 = 1;
      goto LABEL_28;
    }
  }
  if (!v5[31]
    || (v17 = v5[29]) == 0
    || ((v15 = (char *)v5[30], *(_QWORD *)(v17 + 32) == a1) ? (v18 = *(_QWORD *)(v17 + 40) == a2) : (v18 = 0),
        !v18 && (sub_21C3A864C() & 1) == 0))
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v10, (uint64_t)qword_255278F48);
    sub_21C2D1D80(v19, (uint64_t)v12);
    v15 = (char *)sub_21C3A79D4();
    v20 = *((_QWORD *)v15 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, char *))(v20 + 48))(v12, 1, v15) == 1)
    {
      sub_21C2D775C((uint64_t)v12, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v21 = sub_21C3A79BC();
      v22 = sub_21C3A81C0();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v39 = v37;
        *(_DWORD *)v23 = 136315138;
        v36 = v23 + 4;
        swift_bridgeObjectRetain();
        v38 = sub_21C350398(a1, a2, &v39);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v21, v22, "Session is wrong, nil or invalidated [%s]", v23, 0xCu);
        v24 = v37;
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v24, -1, -1);
        MEMORY[0x22077AF8C](v23, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, char *))(v20 + 8))(v12, v15);
    }
    sub_21C2FA030();
    swift_allocError();
    v29 = 4;
LABEL_28:
    *(_QWORD *)v28 = v29;
    *(_QWORD *)(v28 + 8) = 0;
    *(_BYTE *)(v28 + 16) = 2;
    swift_willThrow();
  }
  return v15;
}

uint64_t sub_21C349F60(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;

  *(_QWORD *)(v8 + 64) = a8;
  *(_QWORD *)(v8 + 72) = v10;
  *(_BYTE *)(v8 + 145) = a7;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 24) = a2;
  *(_BYTE *)(v8 + 144) = a1;
  *(_QWORD *)(v8 + 80) = type metadata accessor for CRSignpost();
  *(_QWORD *)(v8 + 88) = swift_task_alloc();
  *(_QWORD *)(v8 + 96) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v8 + 104) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C34A000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 40);
  if (*(_BYTE *)(v1 + 272) == 1)
  {
    if (qword_25525AAD0 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 104);
    v3 = __swift_project_value_buffer(*(_QWORD *)(v0 + 96), (uint64_t)qword_255278F48);
    sub_21C2D1D80(v3, v2);
    v4 = sub_21C3A79D4();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v7 = sub_21C3A79BC();
      v8 = sub_21C3A81C0();
      v9 = os_log_type_enabled(v7, v8);
      v10 = *(_QWORD *)(v0 + 32);
      if (v9)
      {
        v14 = *(_QWORD *)(v0 + 24);
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v15 = v12;
        *(_DWORD *)v11 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_21C350398(v14, v10, &v15);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v7, v8, "Error (%s): a previous request is running, returning busy", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v12, -1, -1);
        MEMORY[0x22077AF8C](v11, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 104), v4);
    }
    if (*(_BYTE *)(v0 + 144) == 1)
    {
      sub_21C2FA030();
      swift_allocError();
      *(_OWORD *)v13 = xmmword_21C3B17E0;
      *(_BYTE *)(v13 + 16) = 2;
    }
    else
    {
      type metadata accessor for PaymentCardReaderError();
      sub_21C3209D0(&qword_25525E230, 255, (uint64_t (*)(uint64_t))type metadata accessor for PaymentCardReaderError, (uint64_t)&protocol conformance descriptor for PaymentCardReaderError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v1 + 272) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_21C34A314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  if (qword_25525AB90 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 88);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 80), (uint64_t)qword_25525F430);
  sub_21C2ED3E0(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  sub_21C3A8250();
  if (qword_25525AB28 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 72);
  v4 = *(_BYTE *)(v0 + 145);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C218);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_21C3ACA90;
  *(_QWORD *)(v7 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2C0);
  *(_QWORD *)(v7 + 64) = sub_21C34B010();
  *(_QWORD *)(v7 + 32) = MEMORY[0x24BEE4AF8];
  sub_21C3A798C();
  swift_bridgeObjectRelease();
  sub_21C2ED424(v3, (uint64_t (*)(_QWORD))type metadata accessor for CRSignpost);
  v8 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v8;
  *(_QWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 24) = v5;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 40) = v4;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v9;
  *v9 = v0;
  v9[1] = sub_21C34A504;
  return sub_21C343110(0x5F3A5F2864616572, 0xEA0000000000293ALL, 1, 1, (uint64_t)sub_21C34B05C, v8);
}

uint64_t sub_21C34A504(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v4 + 136) = a1;
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C34A588()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 40) + 272) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 136));
}

uint64_t sub_21C34A5E0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C34A620()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 40) + 272) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C34A670(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  id v9;

  v2 = objc_msgSend(a1, sel_domain);
  v3 = sub_21C3A7ED8();
  v5 = v4;

  if (v3 == sub_21C3A7ED8() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      return 0;
  }
  if (objc_msgSend(a1, sel_code) == (id)4099)
  {
    v9 = objc_msgSend(a1, sel_debugDescription);
    sub_21C3A7ED8();

    sub_21C30E1A4();
    LOBYTE(v9) = sub_21C3A8328();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      return 1;
  }
  return 0;
}

uint64_t sub_21C34A7CC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C3A8118();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_BYTE *)(v7 + 32) = a1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_21C2D775C((uint64_t)v4, &qword_25525B2E0);
    v8 = 0;
    v9 = 0;
  }
  else
  {
    sub_21C3A810C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (*(_QWORD *)(v7 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v8 = sub_21C3A80D0();
      v9 = v10;
      swift_unknownObjectRelease();
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
  }
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = &unk_25525E328;
  *(_QWORD *)(v11 + 24) = v7;
  if (v9 | v8)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v8;
    v13[3] = v9;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_21C34A990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C3A8118();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_21C2D775C((uint64_t)v8, &qword_25525B2E0);
    v12 = 0;
    v13 = 0;
  }
  else
  {
    sub_21C3A810C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (v11[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_21C3A80D0();
      v13 = v14;
      swift_unknownObjectRelease();
    }
    else
    {
      v12 = 0;
      v13 = 0;
    }
  }
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = v11;
  if (v13 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v12;
    v17[3] = v13;
  }
  swift_task_create();
  return swift_release();
}

uint64_t type metadata accessor for PaymentCardReaderActor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PaymentCardReaderDelegate()
{
  return objc_opt_self();
}

uint64_t method lookup function for PaymentCardReaderDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PaymentCardReaderDelegate.closed(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of PaymentCardReaderDelegate.loading(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of PaymentCardReaderDelegate.readFeedback(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t type metadata accessor for PaymentCardReaderForegroundObserver()
{
  return objc_opt_self();
}

uint64_t sub_21C34ABEC(uint64_t a1)
{
  uint64_t v1;

  return sub_21C3469E8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_21C34AC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C34AC48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21C34ACCC(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0) - 8) + 80);
  return sub_21C346FAC(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), v1 + ((v3 + 25) & ~v3));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_21C34AD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21C34ADBC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525C7F0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_21C3476F0(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_BYTE *)(v1 + v4 + *(_QWORD *)(v3 + 64)));
}

uint64_t sub_21C34AE0C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21C34AE30()
{
  return sub_21C347B80();
}

uint64_t sub_21C34AE38()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C34AE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21C2DFEDC;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_21C34AEC4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C34AEF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_21C2DFEDC;
  return sub_21C339690(a1, v4, v5, v6, v7, v8);
}

void sub_21C34AF78(void *a1, uint64_t a2)
{
  sub_21C3401F8(a1, a2);
}

uint64_t sub_21C34AF84(uint64_t a1)
{
  return sub_21C34B864(a1, &qword_25525E2B0, (uint64_t)&unk_24E0345E8, (uint64_t)sub_21C34AFB4, (uint64_t)&block_descriptor_48);
}

uint64_t sub_21C34AFA8()
{
  return objectdestroy_44Tm(&qword_25525E2B0);
}

uint64_t sub_21C34AFB4(void *a1)
{
  return sub_21C34B93C(a1, &qword_25525E2B0);
}

uint64_t sub_21C34AFC0()
{
  return objectdestroyTm(&qword_25525E2B0);
}

uint64_t sub_21C34AFCC(uint64_t a1, uint64_t a2)
{
  return sub_21C34B7D8(a1, a2, &qword_25525E2B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21C340370);
}

uint64_t sub_21C34AFE0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_21C34AFF8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_21C34B010()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525E2C8;
  if (!qword_25525E2C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525E2C0);
    result = MEMORY[0x22077AECC](MEMORY[0x24BDCFBF8], v1);
    atomic_store(result, &qword_25525E2C8);
  }
  return result;
}

void sub_21C34B05C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_21C33F2F0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

uint64_t sub_21C34B06C(uint64_t a1)
{
  return sub_21C34B864(a1, &qword_25525E2D8, (uint64_t)&unk_24E0346B0, (uint64_t)sub_21C34B09C, (uint64_t)&block_descriptor_71);
}

uint64_t sub_21C34B090()
{
  return objectdestroy_44Tm(&qword_25525E2D8);
}

uint64_t sub_21C34B09C(void *a1)
{
  return sub_21C34B93C(a1, &qword_25525E2D8);
}

uint64_t sub_21C34B0A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2D8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_21C34B10C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525E2D8) - 8) + 80);
  return sub_21C33F444(a1, a2, *(uint8_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), v2 + ((v5 + 33) & ~v5));
}

uint64_t sub_21C34B164(uint64_t a1)
{
  return sub_21C34B864(a1, &qword_25525E2E8, (uint64_t)&unk_24E034750, (uint64_t)sub_21C34B194, (uint64_t)&block_descriptor_86);
}

uint64_t sub_21C34B188()
{
  return objectdestroy_44Tm(&qword_25525E2E8);
}

uint64_t sub_21C34B194(void *a1)
{
  return sub_21C34B93C(a1, &qword_25525E2E8);
}

uint64_t sub_21C34B1A0()
{
  return objectdestroyTm(&qword_25525E2E8);
}

uint64_t sub_21C34B1AC(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E2E8);
  return sub_21C33E790(a1);
}

uint64_t sub_21C34B1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21C2DFEDC;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_21C34B24C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C34B270()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C34B294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21C2DFEDC;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_21C34B2F4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C34B318()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_21C2DFEDC;
  *(_BYTE *)(v3 + 24) = v2;
  return swift_task_switch();
}

uint64_t sub_21C34B378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21C2DFEDC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25525B2E8 + dword_25525B2E8))(a1, v4);
}

uint64_t sub_21C34B3E8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

void sub_21C34B3F8(void *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  if (*(_BYTE *)(v2 + 41))
    v3 = 256;
  else
    v3 = 0;
  sub_21C33D980(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), v3 | *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_21C34B420(uint64_t a1)
{
  return sub_21C34B864(a1, &qword_25525E348, (uint64_t)&unk_24E034908, (uint64_t)sub_21C34B450, (uint64_t)&block_descriptor_142);
}

uint64_t sub_21C34B444()
{
  return objectdestroy_44Tm(&qword_25525E348);
}

uint64_t sub_21C34B450(void *a1)
{
  return sub_21C34B93C(a1, &qword_25525E348);
}

uint64_t sub_21C34B45C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E348);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C34B4F0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525E348) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + v6;
  v8 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)v8;
  v10 = *(unsigned __int8 *)(v8 + 8);
  if (*(_BYTE *)(v8 + 9))
    v11 = 256;
  else
    v11 = 0;
  return sub_21C33DB74(a1, a2, *(_QWORD *)(v2 + 16), v7, v9, v11 | v10);
}

uint64_t sub_21C34B574(uint64_t a1)
{
  return sub_21C34B864(a1, &qword_25525E350, (uint64_t)&unk_24E0349A8, (uint64_t)sub_21C34B5A4, (uint64_t)&block_descriptor_158);
}

uint64_t sub_21C34B598()
{
  return objectdestroy_44Tm(&qword_25525E350);
}

uint64_t sub_21C34B5A4(void *a1)
{
  return sub_21C34B93C(a1, &qword_25525E350);
}

uint64_t sub_21C34B5B0()
{
  return objectdestroyTm(&qword_25525E350);
}

uint64_t sub_21C34B5BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525E350) - 8) + 80);
  return sub_21C33B1B8(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_21C34B614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E350);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C34B6B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525E350) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_21C2D8DB8;
  return sub_21C33B328(a1, v6, v7, v8, v9, v11, v12);
}

void sub_21C34B774(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_21C340FC4(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_21C34B77C(uint64_t a1)
{
  return sub_21C34B864(a1, &qword_25525E370, (uint64_t)&unk_24E034A98, (uint64_t)sub_21C34B7AC, (uint64_t)&block_descriptor_181);
}

uint64_t sub_21C34B7A0()
{
  return objectdestroy_44Tm(&qword_25525E370);
}

uint64_t sub_21C34B7AC(void *a1)
{
  return sub_21C34B93C(a1, &qword_25525E370);
}

uint64_t sub_21C34B7B8()
{
  return objectdestroyTm(&qword_25525E370);
}

uint64_t sub_21C34B7C4(uint64_t a1, uint64_t a2)
{
  return sub_21C34B7D8(a1, a2, &qword_25525E370, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21C341118);
}

uint64_t sub_21C34B7D8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return a4(a1, a2, v4 + ((v7 + 16) & ~v7));
}

void sub_21C34B834(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_21C33C754(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32));
}

uint64_t sub_21C34B840(uint64_t a1)
{
  return sub_21C34B864(a1, &qword_25525C7F0, (uint64_t)&unk_24E034B38, (uint64_t)sub_21C34B930, (uint64_t)&block_descriptor_201);
}

uint64_t sub_21C34B864(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_21C3437F4(a1, *(void **)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_BYTE *)(v5 + 40), *(void (**)(uint64_t, uint64_t))(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), a2, a3, a4, a5);
}

uint64_t sub_21C34B8AC()
{
  return objectdestroy_44Tm(&qword_25525C7F0);
}

uint64_t objectdestroy_44Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_21C34B930(void *a1)
{
  return sub_21C34B93C(a1, &qword_25525C7F0);
}

uint64_t sub_21C34B93C(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_21C343C88(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(unsigned __int8 *)(v2 + v6 + *(_QWORD *)(v5 + 64)), *(_QWORD *)(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFF8) + v2 + 8), a2);
}

uint64_t sub_21C34B9A8()
{
  return objectdestroyTm(&qword_25525C7F0);
}

uint64_t sub_21C34B9B4(uint64_t a1, uint64_t a2)
{
  return sub_21C34B7D8(a1, a2, &qword_25525C7F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21C33C8B4);
}

void sub_21C34B9C8(void *a1, uint64_t a2)
{
  sub_21C33BDC8(a1, a2);
}

uint64_t sub_21C34B9D0()
{
  return objectdestroyTm(&qword_25525E2E8);
}

uint64_t sub_21C34B9DC(uint64_t a1, uint64_t a2)
{
  return sub_21C34B7D8(a1, a2, &qword_25525E2E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21C33BF18);
}

_QWORD *VASRequest.__allocating_init(vasMerchants:localizedVASType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  char *v7;
  uint64_t v8;

  v6 = (_QWORD *)swift_allocObject();
  v7 = (char *)v6 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage;
  v8 = sub_21C3A7890();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  return v6;
}

uint64_t VASRequest.vasMerchants.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VASRequest.localizedVASType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21C34BB64(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2F50EC(a1, (uint64_t)v6, (uint64_t *)&unk_25525D600);
  v7 = *a2 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage;
  swift_beginAccess();
  sub_21C2D9188((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_21C34BC18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage;
  swift_beginAccess();
  return sub_21C2F50EC(v3, a1, (uint64_t *)&unk_25525D600);
}

uint64_t sub_21C34BC70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage;
  swift_beginAccess();
  sub_21C2D9188(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_21C34BCC8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *VASRequest.init(vasMerchants:localizedVASType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  char *v7;
  uint64_t v8;

  v7 = (char *)v3 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage;
  v8 = sub_21C3A7890();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t VASRequest.Merchant.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VASRequest.Merchant.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for VASRequest.Merchant(0);
  return sub_21C2F50EC(v1 + *(int *)(v3 + 20), a1, &qword_25525C138);
}

uint64_t type metadata accessor for VASRequest.Merchant(uint64_t a1)
{
  return sub_21C2ED554(a1, (uint64_t *)&unk_25525E4C0);
}

uint64_t VASRequest.Merchant.shouldSendURLOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for VASRequest.Merchant(0) + 24));
}

uint64_t VASRequest.Merchant.localizedName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for VASRequest.Merchant(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VASRequest.Merchant.localizedName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for VASRequest.Merchant(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*VASRequest.Merchant.localizedName.modify())()
{
  type metadata accessor for VASRequest.Merchant(0);
  return nullsub_1;
}

uint64_t VASRequest.Merchant.init(id:url:shouldSendURLOnly:localizedName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  int *v12;
  uint64_t result;
  _QWORD *v14;

  v9 = a2;
  *a6 = a1;
  a6[1] = a2;
  v12 = (int *)type metadata accessor for VASRequest.Merchant(0);
  result = sub_21C34BF54(a3, (uint64_t)a6 + v12[5]);
  *((_BYTE *)a6 + v12[6]) = 0;
  if (a5)
  {
    v9 = a5;
  }
  else
  {
    result = swift_bridgeObjectRetain();
    a4 = a1;
  }
  v14 = (_QWORD *)((char *)a6 + v12[7]);
  *v14 = a4;
  v14[1] = v9;
  return result;
}

uint64_t sub_21C34BF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t VASRequest.Merchant.init(id:url:localizedName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  int *v12;
  uint64_t result;
  _QWORD *v14;

  v9 = a2;
  *a6 = a1;
  a6[1] = a2;
  v12 = (int *)type metadata accessor for VASRequest.Merchant(0);
  result = sub_21C34BF54(a3, (uint64_t)a6 + v12[5]);
  *((_BYTE *)a6 + v12[6]) = 0;
  if (a5)
  {
    v9 = a5;
  }
  else
  {
    result = swift_bridgeObjectRetain();
    a4 = a1;
  }
  v14 = (_QWORD *)((char *)a6 + v12[7]);
  *v14 = a4;
  v14[1] = v9;
  return result;
}

uint64_t VASRequest.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21C34C064(v0 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage);
  return v0;
}

uint64_t sub_21C34C064(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525D600);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t VASRequest.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21C34C064(v0 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage);
  return swift_deallocClassInstance();
}

uint64_t sub_21C34C0E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15ProximityReader10VASRequest_userInterfaceLanguage;
  swift_beginAccess();
  return sub_21C2F50EC(v3, a2, (uint64_t *)&unk_25525D600);
}

uint64_t sub_21C34C144()
{
  return type metadata accessor for VASRequest(0);
}

uint64_t type metadata accessor for VASRequest(uint64_t a1)
{
  return sub_21C2ED554(a1, qword_25525E3B8);
}

void sub_21C34C160()
{
  unint64_t v0;

  sub_21C2EFB08(319, qword_25525B388, (void (*)(uint64_t))MEMORY[0x24BDCEE28]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for VASRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VASRequest.userInterfaceLanguage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of VASRequest.userInterfaceLanguage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of VASRequest.userInterfaceLanguage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of VASRequest.__allocating_init(vasMerchants:localizedVASType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

_QWORD *initializeBufferWithCopyOfBuffer for VASRequest.Merchant(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21C3A76C8();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v17 = (_QWORD *)((char *)v4 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for VASRequest.Merchant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21C3A76C8();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VASRequest.Merchant(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21C3A76C8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VASRequest.Merchant(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C3A76C8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for VASRequest.Merchant(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C3A76C8();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  return a1;
}

_QWORD *assignWithTake for VASRequest.Merchant(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21C3A76C8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VASRequest.Merchant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C34C86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for VASRequest.Merchant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C34C8F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525C138);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_21C34C970()
{
  unint64_t v0;

  sub_21C2EFB08(319, qword_25525E4D0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void static MobileDriversLicenseRawDataRequest.Element.givenName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.familyName.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.portrait.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 2;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.age.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 3;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.dateOfBirth.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 4;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.sex.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 5;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.address.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 6;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.issuingAuthority.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 7;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.drivingPrivileges.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 8;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.documentNumber.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 9;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.documentIssueDate.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 10;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.documentExpirationDate.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 11;
  *(_BYTE *)(a1 + 8) = 1;
}

void static MobileDriversLicenseRawDataRequest.Element.documentDHSComplianceStatus.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 12;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t static MobileDriversLicenseRawDataRequest.Element.ageAtLeast(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void MobileDriversLicenseRawDataRequest.Element.internalElement.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t MobileDriversLicenseRawDataRequest.Element.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t MobileDriversLicenseRawDataRequest.Element.hashValue.getter()
{
  sub_21C3A8700();
  MobileDocumentElementInternal.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C34CBBC()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_21C3A870C();
  return sub_21C3A870C();
}

uint64_t _s15ProximityReader34MobileDriversLicenseRawDataRequestV7ElementV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 8);
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_21C34CC3C + 4 * byte_21C3B1A18[v2]))();
  if (v2 != *(_QWORD *)a2)
    v3 = 1;
  return (v3 & 1) == 0;
}

void sub_21C34CC74(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

void sub_21C34CC84(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

void sub_21C34CC94(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

void sub_21C34CCA4(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

void sub_21C34CCB4(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

void sub_21C34CCC4(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

void sub_21C34CCD4(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

void sub_21C34CCE4(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

void sub_21C34CCF4(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

void sub_21C34CD04(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xB)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

void sub_21C34CD14(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x21C34CC58);
  JUMPOUT(0x21C34CC6CLL);
}

unint64_t sub_21C34CD28()
{
  unint64_t result;

  result = qword_25525E508;
  if (!qword_25525E508)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseRawDataRequest.Element, &type metadata for MobileDriversLicenseRawDataRequest.Element);
    atomic_store(result, (unint64_t *)&qword_25525E508);
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseRawDataRequest.Element()
{
  return &type metadata for MobileDriversLicenseRawDataRequest.Element;
}

uint64_t sub_21C34CD7C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[3];
  __int128 v30;
  _OWORD v31[2];
  _QWORD v32[2];
  _BYTE v33[40];
  uint64_t v34;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v3 = a1;
  v34 = MEMORY[0x24BEE4AF8];
  sub_21C31E1D8(0, v1, 0);
  result = sub_21C352EC8(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v27 = v3 + 64;
  v24 = v3 + 80;
  v25 = v1;
  v26 = v5;
  v28 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_26;
    v12 = *(_QWORD *)(v3 + 56);
    v13 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
    v15 = *v13;
    v14 = v13[1];
    sub_21C2D77EC(v12 + 32 * v6, (uint64_t)v33);
    v32[0] = v15;
    v32[1] = v14;
    *(_QWORD *)&v30 = v15;
    *((_QWORD *)&v30 + 1) = v14;
    sub_21C2D77EC((uint64_t)v33, (uint64_t)v31);
    v29[0] = v30;
    v29[1] = v31[0];
    v29[2] = v31[1];
    swift_bridgeObjectRetain_n();
    sub_21C2D775C((uint64_t)v32, &qword_25525E6D8);
    sub_21C3A7F8C();
    sub_21C3A7F8C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E6E0);
    sub_21C3A8490();
    sub_21C2D775C((uint64_t)v29, &qword_25525E6D8);
    v2 = v34;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_21C31E1D8(0, *(_QWORD *)(v2 + 16) + 1, 1);
      v2 = v34;
    }
    v17 = *(_QWORD *)(v2 + 16);
    v16 = *(_QWORD *)(v2 + 24);
    if (v17 >= v16 >> 1)
    {
      result = sub_21C31E1D8(v16 > 1, v17 + 1, 1);
      v2 = v34;
    }
    *(_QWORD *)(v2 + 16) = v17 + 1;
    v18 = v2 + 16 * v17;
    *(_QWORD *)(v18 + 32) = 0;
    *(_QWORD *)(v18 + 40) = 0xE000000000000000;
    v3 = v28;
    v9 = 1 << *(_BYTE *)(v28 + 32);
    if (v6 >= v9)
      goto LABEL_27;
    v8 = v27;
    v19 = *(_QWORD *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0)
      goto LABEL_28;
    v5 = v26;
    if (*(_DWORD *)(v28 + 36) != v26)
      goto LABEL_29;
    v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v25;
    }
    else
    {
      v21 = v11 + 1;
      v22 = (unint64_t)(v9 + 63) >> 6;
      v10 = v25;
      if (v11 + 1 < v22)
      {
        v23 = *(_QWORD *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_22:
          v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            v23 = *(_QWORD *)(v24 + 8 * v11++);
            if (v23)
            {
              v21 = v11 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_21C34D078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_21C3A7410();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A7440();
  swift_allocObject();
  sub_21C3A7434();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_21C3A741C();
  sub_21C35482C();
  sub_21C3A7428();
  return swift_release();
}

uint64_t sub_21C34D404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[6];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_21C3A7410();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E700);
  sub_21C3A7440();
  swift_allocObject();
  sub_21C3A7434();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_21C3A741C();
  sub_21C354870();
  sub_21C3A7428();
  swift_release();
  return v6[5];
}

uint64_t sub_21C34D788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_21C3A7410();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnalyticsReporter();
  sub_21C3A7440();
  swift_allocObject();
  sub_21C3A7434();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCB1D8], v3);
  sub_21C3A741C();
  sub_21C354730();
  sub_21C3A7428();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 0, 1, v7);
  return swift_release();
}

uint64_t sub_21C34DB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  v5[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E540);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  v6 = type metadata accessor for AnalyticsReporter();
  v5[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 + 64);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C34DC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AnalyticsReporter.init(serviceName:hierarchyToken:)(v7, v6, v5, v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 96), &qword_25525E540);
    v8 = 0;
    v9 = 0;
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 88);
    sub_21C2F83F0(*(_QWORD *)(v0 + 96), v10);
    v16 = sub_21C3A8118();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
    sub_21C3535E4(v10, v11);
    v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = 0;
    *(_QWORD *)(v18 + 24) = 0;
    sub_21C2F83F0(v11, v18 + v17);
    sub_21C2DDBA0(v15, (uint64_t)&unk_25525E6F0, v18);
    swift_release();
    v8 = *(_QWORD *)(v10 + 24);
    v9 = *(_QWORD *)(v10 + 32);
    sub_21C3535E4(v10, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v13);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21C376704(v14, v8, v9);
    swift_endAccess();
    swift_bridgeObjectRetain();
    sub_21C3546F4(v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v8, v9);
}

uint64_t sub_21C34DE24(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 144) = a4;
  *(_QWORD *)(v5 + 80) = a3;
  *(_QWORD *)(v5 + 88) = v4;
  *(_QWORD *)(v5 + 64) = a1;
  *(_QWORD *)(v5 + 72) = a2;
  *(_QWORD *)(v5 + 96) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  *(_QWORD *)(v5 + 104) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E540);
  *(_QWORD *)(v5 + 112) = swift_task_alloc();
  v6 = type metadata accessor for AnalyticsReporter();
  *(_QWORD *)(v5 + 120) = v6;
  *(_QWORD *)(v5 + 128) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C34DED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 88);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = *(_QWORD *)(v0 + 64);
    v3 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_21C2DC178(v4, v3);
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    if ((v9 & 1) != 0)
    {
      sub_21C3535E4(*(_QWORD *)(v2 + 56) + *(_QWORD *)(v7 + 72) * v5, *(_QWORD *)(v0 + 112));
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v8, 0, 1, v6);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v7 + 56))(*(_QWORD *)(v0 + 112), 1, 1, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 56))(*(_QWORD *)(v0 + 112), 1, 1, *(_QWORD *)(v0 + 120));
  }
  v10 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 48))(v10, 1, *(_QWORD *)(v0 + 120)) == 1)
  {
    v11 = *(_QWORD *)(v0 + 80);
    sub_21C2D775C(v10, &qword_25525E540);
    *(_QWORD *)(v0 + 48) = sub_21C34CD7C(v11);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ECD0);
    sub_21C2FA074();
    v12 = sub_21C3A7E84();
    v14 = v13;
    swift_bridgeObjectRelease();
    if (qword_25525AB00 != -1)
      swift_once();
    v15 = *(_QWORD *)(v0 + 104);
    v16 = __swift_project_value_buffer(*(_QWORD *)(v0 + 96), (uint64_t)qword_255278FD8);
    sub_21C2D1D80(v16, v15);
    v17 = sub_21C3A79D4();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17);
    v20 = *(_QWORD *)(v0 + 104);
    if (v19 == 1)
    {
      swift_bridgeObjectRelease();
      sub_21C2D775C(v20, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      swift_bridgeObjectRetain();
      v26 = sub_21C3A79BC();
      v27 = sub_21C3A81C0();
      if (os_log_type_enabled(v26, v27))
      {
        v31 = v12;
        v28 = (uint8_t *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v32 = v29;
        *(_DWORD *)v28 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 56) = sub_21C350398(v31, v14, &v32);
        sub_21C3A82F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v26, v27, "Could not send session event: [%s]", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v29, -1, -1);
        MEMORY[0x22077AF8C](v28, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(_QWORD, uint64_t))(v18 + 8))(*(_QWORD *)(v0 + 104), v17);
    }
  }
  else
  {
    v21 = *(_QWORD **)(v0 + 136);
    v22 = *(unsigned __int8 *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 80);
    sub_21C2F83F0(v10, (uint64_t)v21);
    v24 = sub_21C376C28(v23);
    v25 = sub_21C353628(v21, v24);
    swift_bridgeObjectRelease();
    sub_21C377CEC(v25);
    swift_bridgeObjectRelease();
    if (v22 == 1)
      sub_21C34E2B0(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
    sub_21C3546F4(*(_QWORD *)(v0 + 136));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C34E2B0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E540);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AnalyticsReporter();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21C376704((uint64_t)v9, a1, a2);
  swift_endAccess();
  if (qword_25525AB00 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v4, (uint64_t)qword_255278FD8);
  sub_21C2D1D80(v11, (uint64_t)v6);
  v12 = sub_21C3A79D4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v12) == 1)
    return sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
  swift_bridgeObjectRetain_n();
  v15 = sub_21C3A79BC();
  v16 = sub_21C3A81B4();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v20[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v19[1] = v17 + 4;
    swift_bridgeObjectRetain();
    v19[2] = sub_21C350398(a1, a2, v20);
    sub_21C3A82F8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21C2CD000, v15, v16, "Session [%s] released", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22077AF8C](v18, -1, -1);
    MEMORY[0x22077AF8C](v17, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v12);
}

uint64_t sub_21C34E578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[10] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v4[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E540);
  v4[12] = swift_task_alloc();
  v5 = type metadata accessor for AnalyticsReporter();
  v4[13] = v5;
  v4[14] = *(_QWORD *)(v5 - 8);
  v4[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C34E628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v1 = *(_QWORD *)(v0 + 72);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  if (!*(_QWORD *)(v2 + 16))
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 96), 1, 1, *(_QWORD *)(v0 + 104));
LABEL_7:
    sub_21C2D775C(*(_QWORD *)(v0 + 96), &qword_25525E540);
    goto LABEL_8;
  }
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_21C2DC178(v3, v4);
  if ((v6 & 1) != 0)
  {
    sub_21C3535E4(*(_QWORD *)(v2 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 112) + 72) * v5, *(_QWORD *)(v0 + 96));
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, v7, 1, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
    goto LABEL_7;
  sub_21C2F83F0(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
  v12 = sub_21C39CA08();
  if (v13 >> 60 == 15)
  {
    sub_21C3546F4(*(_QWORD *)(v0 + 120));
  }
  else
  {
    v14 = v12;
    v15 = v13;
    SecureStorage.save(at:data:)();
    sub_21C3546F4(*(_QWORD *)(v0 + 120));
    sub_21C2D2B34(v14, v15);
  }
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C34EA04()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  unint64_t v30;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v3);
  v30 = (unint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E540);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - v9;
  v11 = type metadata accessor for AnalyticsReporter();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v28 - v16;
  v18 = sub_21C3A76EC();
  v29 = v7;
  v19 = v18;
  v30 = v20;
  sub_21C34D788((uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_21C2D2B48(v19, v30);
    sub_21C2D775C((uint64_t)v10, &qword_25525E540);
    return 0;
  }
  else
  {
    sub_21C2F83F0((uint64_t)v10, (uint64_t)v17);
    v21 = sub_21C3A8118();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v2, 1, 1, v21);
    sub_21C3535E4((uint64_t)v17, (uint64_t)v14);
    v22 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v23 + 24) = 0;
    sub_21C2F83F0((uint64_t)v14, v23 + v22);
    sub_21C2DDBA0((uint64_t)v2, (uint64_t)&unk_25525E6B8, v23);
    swift_release();
    v26 = *((_QWORD *)v17 + 3);
    v24 = *((_QWORD *)v17 + 4);
    v25 = (uint64_t)v29;
    sub_21C3535E4((uint64_t)v17, (uint64_t)v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21C376704(v25, v26, v24);
    swift_endAccess();
    sub_21C2D2B48(v19, v30);
    swift_bridgeObjectRetain();
    sub_21C3546F4((uint64_t)v17);
  }
  return v26;
}

uint64_t sub_21C34EECC()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_21C34EEF0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for AnalyticsCache();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE4B00];
  qword_25525E510 = v0;
  return result;
}

uint64_t static AnalyticsManager.shared.getter@<X0>(_QWORD *a1@<X8>)
{
  if (qword_25525AAB8 != -1)
    swift_once();
  *a1 = qword_25525E510;
  return swift_retain();
}

uint64_t AnalyticsManager.createSession(serviceName:hierarchyToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_21C34EFFC;
  return sub_21C34DB48(a1, a2, a3, a4);
}

uint64_t sub_21C34EFFC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t AnalyticsManager.createSubSession(serviceName:parentSessionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_25525E530 + dword_25525E530);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_21C3548DC;
  return v9(a3, a4);
}

uint64_t AnalyticsManager.sessionExists(sessionID:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[5] = a1;
  v3[6] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E540);
  v4 = swift_task_alloc();
  v5 = *v2;
  v3[7] = v4;
  v3[8] = v5;
  return swift_task_switch();
}

uint64_t sub_21C34F124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;

  v1 = *(_QWORD *)(v0 + 64);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_21C2DC178(v4, v3);
    v6 = *(_QWORD *)(v0 + 56);
    if ((v7 & 1) != 0)
    {
      v8 = v5;
      v9 = *(_QWORD *)(v2 + 56);
      v10 = type metadata accessor for AnalyticsReporter();
      v11 = *(_QWORD *)(v10 - 8);
      sub_21C3535E4(v9 + *(_QWORD *)(v11 + 72) * v8, v6);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    else
    {
      v10 = type metadata accessor for AnalyticsReporter();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 56);
    v10 = type metadata accessor for AnalyticsReporter();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v12, 1, 1, v10);
  }
  v13 = *(_QWORD *)(v0 + 56);
  type metadata accessor for AnalyticsReporter();
  v14 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v13, 1, v10) != 1;
  sub_21C2D775C(v13, &qword_25525E540);
  swift_task_dealloc();
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v14);
}

uint64_t AnalyticsManager.sendSessionEvent(sessionID:message:releaseSession:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_21C2D8DB8;
  return sub_21C34DE24(a1, a2, a3, a4);
}

uint64_t AnalyticsManager.releaseSession(sessionID:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a1;
  v3[4] = a2;
  v3[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v4 = swift_task_alloc();
  v5 = *v2;
  v3[6] = v4;
  v3[7] = v5;
  return swift_task_switch();
}

uint64_t sub_21C34F378()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  if (qword_25525AB00 != -1)
    swift_once();
  v1 = v0[6];
  v2 = __swift_project_value_buffer(v0[5], (uint64_t)qword_255278FD8);
  sub_21C2D1D80(v2, v1);
  v3 = sub_21C3A79D4();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    sub_21C2D775C(v0[6], (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v5 = sub_21C3A79BC();
    v6 = sub_21C3A81B4();
    v7 = os_log_type_enabled(v5, v6);
    v8 = v0[4];
    if (v7)
    {
      v12 = v0[3];
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v13 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      v0[2] = sub_21C350398(v12, v8, &v13);
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21C2CD000, v5, v6, "Releasing session: [%s]", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v10, -1, -1);
      MEMORY[0x22077AF8C](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, uint64_t))(v4 + 8))(v0[6], v3);
  }
  return swift_task_switch();
}

uint64_t sub_21C34F590()
{
  uint64_t v0;

  sub_21C34E2B0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnalyticsManager.releaseAllSessions(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[8] = a1;
  v3[9] = a2;
  v3[10] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3[11] = swift_task_alloc();
  v4 = type metadata accessor for AnalyticsReporter();
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E540);
  v3[15] = swift_task_alloc();
  v5 = swift_task_alloc();
  v6 = *v2;
  v3[16] = v5;
  v3[17] = v6;
  return swift_task_switch();
}

uint64_t sub_21C34F688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t result;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t *v51;
  _QWORD *v52;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v51 = (uint64_t *)(*(_QWORD *)(v0 + 136) + 112);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v3 = swift_bridgeObjectRetain();
  sub_21C3539C8(v3, v2, v1);
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(_QWORD *)(v0 + 104);
  v48 = v7;
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v50 = *(_QWORD *)(v7 + 72);
  v8 = (unint64_t *)(((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
                          + v5
                          + 32);
  while (1)
  {
    v9 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 96);
    v11 = *(v8 - 1);
    v12 = *v8;
    v49(v9, 1, 1, v10);
    swift_beginAccess();
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v9, 1, v10);
    v14 = *(_QWORD *)(v0 + 128);
    if (v13 == 1)
    {
      swift_bridgeObjectRetain();
      sub_21C2D775C(v14, &qword_25525E540);
      swift_bridgeObjectRetain();
      v15 = sub_21C2DC178(v11, v12);
      v17 = v16;
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v19 = *v51;
        v52 = (_QWORD *)*v51;
        *v51 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_21C352A7C();
          v19 = (uint64_t)v52;
        }
        v20 = *(_QWORD *)(v0 + 120);
        swift_bridgeObjectRelease();
        sub_21C2F83F0(*(_QWORD *)(v19 + 56) + v15 * v50, v20);
        sub_21C3520C0(v15, v19);
        *v51 = v19;
        swift_bridgeObjectRelease();
        v21 = 0;
      }
      else
      {
        v21 = 1;
      }
      v34 = *(_QWORD *)(v0 + 120);
      v49(v34, v21, 1, *(_QWORD *)(v0 + 96));
      swift_bridgeObjectRelease();
      sub_21C2D775C(v34, &qword_25525E540);
      goto LABEL_24;
    }
    sub_21C2F83F0(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    swift_bridgeObjectRetain();
    v22 = swift_isUniquelyReferenced_nonNull_native();
    v52 = (_QWORD *)*v51;
    v23 = v52;
    *v51 = 0x8000000000000000;
    v24 = v11;
    v26 = sub_21C2DC178(v11, v12);
    v27 = v23[2];
    v28 = (v25 & 1) == 0;
    result = v27 + v28;
    if (__OFADD__(v27, v28))
      break;
    v30 = v25;
    if (v23[3] >= result)
    {
      if ((v22 & 1) != 0)
      {
        v33 = *(_QWORD *)(v0 + 112);
        if ((v25 & 1) == 0)
          goto LABEL_21;
      }
      else
      {
        sub_21C352A7C();
        v23 = v52;
        v33 = *(_QWORD *)(v0 + 112);
        if ((v30 & 1) == 0)
          goto LABEL_21;
      }
    }
    else
    {
      sub_21C35160C(result, v22);
      v23 = v52;
      v31 = sub_21C2DC178(v24, v12);
      if ((v30 & 1) != (v32 & 1))
        return sub_21C3A867C();
      v26 = v31;
      v33 = *(_QWORD *)(v0 + 112);
      if ((v30 & 1) == 0)
      {
LABEL_21:
        v23[(v26 >> 6) + 8] |= 1 << v26;
        v35 = (uint64_t *)(v23[6] + 16 * v26);
        v11 = v24;
        *v35 = v24;
        v35[1] = v12;
        result = sub_21C2F83F0(v33, v23[7] + v26 * v50);
        v36 = v23[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_34;
        v23[2] = v38;
        swift_bridgeObjectRetain();
        goto LABEL_23;
      }
    }
    sub_21C2F8434(v33, v23[7] + v26 * v50);
    v11 = v24;
LABEL_23:
    *v51 = (uint64_t)v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_24:
    swift_endAccess();
    if (qword_25525AB00 != -1)
      swift_once();
    v39 = *(_QWORD *)(v0 + 88);
    v40 = __swift_project_value_buffer(*(_QWORD *)(v0 + 80), (uint64_t)qword_255278FD8);
    sub_21C2D1D80(v40, v39);
    v41 = sub_21C3A79D4();
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v39, 1, v41) == 1)
    {
      sub_21C2D775C(*(_QWORD *)(v0 + 88), (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v47 = v11;
      swift_bridgeObjectRetain_n();
      v43 = sub_21C3A79BC();
      v44 = sub_21C3A81B4();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc();
        v46 = swift_slowAlloc();
        v52 = (_QWORD *)v46;
        *(_DWORD *)v45 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v45 + 4) = sub_21C350398(v47, v12, (uint64_t *)&v52);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21C2CD000, v43, v44, "Session [%s] released", (uint8_t *)v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v46, -1, -1);
        MEMORY[0x22077AF8C](v45, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(_QWORD, uint64_t))(v42 + 8))(*(_QWORD *)(v0 + 88), v41);
    }
    v8 = (unint64_t *)((char *)v8 + v50);
    if (!--v6)
      goto LABEL_31;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t AnalyticsManager.storeSession(sessionID:fileName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[4] = a3;
  v5[5] = a4;
  v5[2] = a1;
  v5[3] = a2;
  v6 = sub_21C3A76C8();
  v5[6] = v6;
  v5[7] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v8 = *v4;
  v5[8] = v7;
  v5[9] = v8;
  return swift_task_switch();
}

uint64_t sub_21C34FC94()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_21C393770();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7650();
  swift_bridgeObjectRelease();
  v1 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21C34FD78;
  return sub_21C34E578(v0[2], v0[3], v0[8]);
}

uint64_t sub_21C34FD78()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C34FDCC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnalyticsManager.storeSubSession(sessionID:fileName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[4] = a3;
  v5[5] = a4;
  v5[2] = a1;
  v5[3] = a2;
  v6 = sub_21C3A76C8();
  v5[6] = v6;
  v5[7] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v8 = *v4;
  v5[8] = v7;
  v5[9] = v8;
  return swift_task_switch();
}

uint64_t sub_21C34FE78()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_21C393770();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7650();
  swift_bridgeObjectRelease();
  v1 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21C34FF5C;
  return sub_21C34E578(v0[2], v0[3], v0[8]);
}

uint64_t sub_21C34FF5C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t AnalyticsManager.loadSession(fileName:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[2] = a1;
  v3[3] = a2;
  v4 = sub_21C3A76C8();
  v3[4] = v4;
  v3[5] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v6 = *v2;
  v3[6] = v5;
  v3[7] = v6;
  return swift_task_switch();
}

uint64_t sub_21C350014()
{
  sub_21C393770();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7650();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21C3500DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 64) = sub_21C34EA04();
  *(_QWORD *)(v0 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_21C35011C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t AnalyticsManager.loadSubSession(fileName:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[2] = a1;
  v3[3] = a2;
  v4 = sub_21C3A76C8();
  v3[4] = v4;
  v3[5] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v6 = *v2;
  v3[6] = v5;
  v3[7] = v6;
  return swift_task_switch();
}

uint64_t sub_21C3501C8()
{
  sub_21C393770();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7F8C();
  sub_21C3A7650();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21C350290()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 64) = sub_21C34EA04();
  *(_QWORD *)(v0 + 72) = v1;
  return swift_task_switch();
}

uint64_t AnalyticsManager.deleteAllSubSessions()()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_21C3502EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_21C393770();
  v4 = v1;
  sub_21C3A7F8C();
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 32) = v4;
  return swift_task_switch();
}

uint64_t sub_21C35035C()
{
  uint64_t v0;

  sub_21C354348(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C350398(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_21C350468(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_21C2D77EC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_21C2D77EC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_21C350468(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21C3A8304();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_21C350620(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_21C3A8418();
  if (!v8)
  {
    sub_21C3A849C();
    __break(1u);
LABEL_17:
    result = sub_21C3A84E4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_21C350620(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_21C3506B4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21C35088C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_21C35088C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21C3506B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_21C350828(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_21C3A83E8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_21C3A849C();
      __break(1u);
LABEL_10:
      v2 = sub_21C3A7FB0();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_21C3A84E4();
    __break(1u);
LABEL_14:
    result = sub_21C3A849C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_21C350828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E6D0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_21C35088C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525E6D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21C3A84E4();
  __break(1u);
  return result;
}

uint64_t sub_21C3509D8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C170);
  v43 = a2;
  v8 = sub_21C3A84CC();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v5 + 72);
      v30 = v24 + v29 * v20;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v30, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v30, v45);
        swift_bridgeObjectRetain();
      }
      sub_21C3A8700();
      sub_21C3A7F50();
      result = sub_21C3A8724();
      v31 = -1 << *(_BYTE *)(v9 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v28;
      v18[1] = v27;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v29 * v17, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_21C350D44(uint64_t a1, char a2)
{
  return sub_21C35100C(a1, a2, &qword_25525C158);
}

uint64_t sub_21C350D50(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  __int128 v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C150);
  result = sub_21C3A84CC();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v29 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v30 = 1 << *(_BYTE *)(v5 + 32);
    v31 = v3;
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_40;
              }
              if (v30 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v29;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v32 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_21C3A86F4();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_21C351000(uint64_t a1, char a2)
{
  return sub_21C35100C(a1, a2, &qword_25525C160);
}

uint64_t sub_21C35100C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  __int128 v38;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = a2;
  v8 = sub_21C3A84CC();
  v9 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = 1 << *(_BYTE *)(v6 + 32);
    v37 = (_QWORD *)(v6 + 64);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v36 = (unint64_t)(v10 + 63) >> 6;
    v13 = v8 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v23 = v22 | (v15 << 6);
      }
      else
      {
        v24 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v24 >= v36)
          goto LABEL_33;
        v25 = v37[v24];
        ++v15;
        if (!v25)
        {
          v15 = v24 + 1;
          if (v24 + 1 >= v36)
            goto LABEL_33;
          v25 = v37[v15];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v36)
            {
LABEL_33:
              swift_release();
              v4 = v3;
              if ((v7 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v6 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v25 = v37[v26];
            if (!v25)
            {
              while (1)
              {
                v15 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_40;
                if (v15 >= v36)
                  goto LABEL_33;
                v25 = v37[v15];
                ++v26;
                if (v25)
                  goto LABEL_30;
              }
            }
            v15 = v26;
          }
        }
LABEL_30:
        v12 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v15 << 6);
      }
      v31 = 16 * v23;
      v32 = (uint64_t *)(*(_QWORD *)(v6 + 48) + v31);
      v34 = *v32;
      v33 = v32[1];
      v38 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v31);
      if ((v7 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_21C3A8700();
      sub_21C3A7F50();
      result = sub_21C3A8724();
      v16 = -1 << *(_BYTE *)(v9 + 32);
      v17 = result & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v29 = v18 == v28;
          if (v18 == v28)
            v18 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v18);
        }
        while (v30 == -1);
        v19 = __clz(__rbit64(~v30)) + (v18 << 6);
      }
      *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 16 * v19;
      v21 = (_QWORD *)(*(_QWORD *)(v9 + 48) + v20);
      *v21 = v34;
      v21[1] = v33;
      *(_OWORD *)(*(_QWORD *)(v9 + 56) + v20) = v38;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v4 = v9;
  return result;
}

uint64_t sub_21C351310(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D500);
  v6 = sub_21C3A84CC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_21C2D7828(v24, v35);
      }
      else
      {
        sub_21C2D77EC((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_21C3A8700();
      sub_21C3A7F50();
      result = sub_21C3A8724();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_21C2D7828(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21C35160C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for AnalyticsReporter();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E6C8);
  v43 = a2;
  v9 = sub_21C3A84CC();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_21C2F83F0(v30, (uint64_t)v7);
    }
    else
    {
      sub_21C3535E4(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_21C3A8700();
    sub_21C3A7F50();
    result = sub_21C3A8724();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_21C2F83F0((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

unint64_t sub_21C351974(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21C3A8358();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_21C3A8700();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        v9 = sub_21C3A8724();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525B758) - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21C351B84(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21C3A8358();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_21C3A86F4();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_OWORD *)(v15 + 16 * v3);
            v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21C351D18(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21C3A8358();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_21C3A8700();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        v9 = sub_21C3A8724();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21C351EEC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21C3A8358();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_21C3A8700();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        v10 = sub_21C3A8724();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21C3520C0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21C3A8358();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_21C3A8700();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        v9 = sub_21C3A8724();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for AnalyticsReporter() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_21C3522BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  v1 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C170);
  v30 = v0;
  v4 = *v0;
  v5 = sub_21C3A84C0();
  v6 = *(_QWORD *)(v4 + 16);
  v34 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v28 = v34;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v34;
  }
  v31 = v4 + 64;
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v11 = 1 << *(_BYTE *)(v4 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v4 + 64);
  v32 = (unint64_t)(v11 + 63) >> 6;
  v14 = v33;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v10);
      if (!v25)
        break;
    }
LABEL_22:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v21, v14);
    v22 = v34;
    v23 = (_QWORD *)(*(_QWORD *)(v34 + 48) + v17);
    *v23 = v20;
    v23[1] = v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v22 + 56) + v21, v3, v14);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v34;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_21C352520()
{
  return sub_21C3526E0(&qword_25525C158);
}

void *sub_21C35252C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525C150);
  v2 = *v0;
  v3 = sub_21C3A84C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21C3526D4()
{
  return sub_21C3526E0(&qword_25525C160);
}

void *sub_21C3526E0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_21C3A84C0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v17);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_OWORD *)(*(_QWORD *)(v3 + 56) + v17);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = v20;
    v22[1] = v19;
    *(_OWORD *)(*(_QWORD *)(v5 + 56) + v17) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21C352898()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525D500);
  v2 = *v0;
  v3 = sub_21C3A84C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_21C2D77EC(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_21C2D7828(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21C352A7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for AnalyticsReporter();
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E6C8);
  v5 = *v0;
  v6 = sub_21C3A84C0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v28 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_21C3535E4(*(_QWORD *)(v5 + 56) + v22, (uint64_t)v4);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v21;
    v23[1] = v20;
    sub_21C2F83F0((uint64_t)v4, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21C352CA8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B758);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

unint64_t sub_21C352D40(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_21C352D88(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

_OWORD *sub_21C352DD8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_21C2D7828(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_21C352E40(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for AnalyticsReporter();
  result = sub_21C2F83F0(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_21C352EC8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_21C352F50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v3[12] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  v3[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525B2E0);
  v3[14] = swift_task_alloc();
  v4 = sub_21C3A77E8();
  v3[15] = v4;
  v3[16] = *(_QWORD *)(v4 - 8);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525E540);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v5 = type metadata accessor for AnalyticsReporter();
  v3[21] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[22] = v6;
  v3[23] = *(_QWORD *)(v6 + 64);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C353088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[2];

  v1 = *(_QWORD *)(v0 + 88) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v4 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_21C2DC178(v4, v3);
    v7 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 160);
    if ((v9 & 1) != 0)
    {
      sub_21C3535E4(*(_QWORD *)(v2 + 56) + *(_QWORD *)(v6 + 72) * v5, *(_QWORD *)(v0 + 160));
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v10(v8, 0, 1, v7);
    }
    else
    {
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v10(*(_QWORD *)(v0 + 160), 1, 1, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 56);
    v10(*(_QWORD *)(v0 + 160), 1, 1, *(_QWORD *)(v0 + 168));
  }
  v11 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 48);
  if (v13(v12, 1, v11) != 1)
  {
    v45 = v10;
    v14 = *(_QWORD **)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 136);
    v46 = *(_QWORD *)(v0 + 120);
    sub_21C2F83F0(v12, (uint64_t)v14);
    v18 = v14[2];
    v19 = v14[6];
    v48 = v14[1];
    v50[0] = v14[5];
    v50[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21C3A7F8C();
    sub_21C3A77DC();
    sub_21C3A77C4();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v46);
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    AnalyticsReporter.init(serviceName:hierarchyToken:)(v48, v18, v50[0], v19, v15);
    v20 = v13(v15, 1, v11);
    v21 = *(_QWORD *)(v0 + 208);
    if (v20 != 1)
    {
      v32 = *(_QWORD *)(v0 + 192);
      v33 = *(_QWORD *)(v0 + 200);
      v34 = *(_QWORD *)(v0 + 176);
      v35 = *(_QWORD *)(v0 + 168);
      v36 = *(_QWORD *)(v0 + 144);
      v37 = *(_QWORD *)(v0 + 112);
      sub_21C2F83F0(*(_QWORD *)(v0 + 152), v33);
      v38 = sub_21C3A8118();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
      sub_21C3535E4(v33, v32);
      v39 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = 0;
      *(_QWORD *)(v40 + 24) = 0;
      sub_21C2F83F0(v32, v40 + v39);
      sub_21C2DDBA0(v37, (uint64_t)&unk_25525E6E8, v40);
      swift_release();
      v41 = *(_QWORD *)(v33 + 24);
      v42 = *(_QWORD *)(v33 + 32);
      sub_21C3535E4(v33, v36);
      v45(v36, 0, 1, v35);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_21C376704(v36, v41, v42);
      swift_endAccess();
      sub_21C3546F4(v21);
      v43 = *(_QWORD *)(v33 + 32);
      v49 = *(_QWORD *)(v33 + 24);
      swift_bridgeObjectRetain();
      sub_21C3546F4(v33);
      goto LABEL_20;
    }
    sub_21C3546F4(*(_QWORD *)(v0 + 208));
    v12 = *(_QWORD *)(v0 + 152);
  }
  sub_21C2D775C(v12, &qword_25525E540);
  if (qword_25525AB00 != -1)
    swift_once();
  v22 = *(_QWORD *)(v0 + 104);
  v23 = __swift_project_value_buffer(*(_QWORD *)(v0 + 96), (uint64_t)qword_255278FD8);
  sub_21C2D1D80(v23, v22);
  v24 = sub_21C3A79D4();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24) == 1)
  {
    sub_21C2D775C(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v26 = sub_21C3A79BC();
    v27 = sub_21C3A81C0();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(_QWORD *)(v0 + 80);
    if (v28)
    {
      v47 = *(_QWORD *)(v0 + 72);
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v50[0] = v31;
      *(_DWORD *)v30 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 64) = sub_21C350398(v47, v29, v50);
      sub_21C3A82F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21C2CD000, v26, v27, "Could not find parent session with ID: [%s]", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v31, -1, -1);
      MEMORY[0x22077AF8C](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, uint64_t))(v25 + 8))(*(_QWORD *)(v0 + 104), v24);
  }
  v49 = 0;
  v43 = 0;
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v49, v43);
}

uint64_t sub_21C3535E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AnalyticsReporter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C353628(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;

  v4 = sub_21C3A77B8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525ED60);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - v12;
  if (a1[1] == 0x7265566F54706174 && a1[2] == 0xEB00000000796669 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_21C3A77AC();
    sub_21C35E710((uint64_t)v13);
    v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
    {
      sub_21C2D775C((uint64_t)v13, (uint64_t *)&unk_25525ED60);
      goto LABEL_11;
    }
    sub_21C3A7794();
    v16 = v15;
    v14(v13, v4);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_21C3A77AC();
    sub_21C35E994((uint64_t)v10);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v7, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    {
      sub_21C2D775C((uint64_t)v10, (uint64_t *)&unk_25525ED60);
      goto LABEL_11;
    }
    sub_21C3A7794();
    v16 = v18;
    v17(v10, v4);
  }
  v31 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v30 = v16;
  sub_21C2D7828(&v30, v29);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v28 = a2;
  sub_21C2F814C(v29, 0x546465646E756F72, 0xE900000000000053, isUniquelyReferenced_nonNull_native);
  a2 = v28;
  swift_bridgeObjectRelease();
LABEL_11:
  v20 = AnalyticsReporter.sessionDuration.getter();
  if ((v21 & 1) == 0)
  {
    v31 = MEMORY[0x24BEE1768];
    *(_QWORD *)&v30 = v20;
    sub_21C2D7828(&v30, v29);
    v22 = swift_isUniquelyReferenced_nonNull_native();
    v28 = a2;
    sub_21C2F814C(v29, 0x446E6F6973736573, 0xEF6E6F6974617275, v22);
    a2 = v28;
    swift_bridgeObjectRelease();
  }
  if (a1[1] == 0x7961506F54706174 && a1[2] == 0xE800000000000000 || (sub_21C3A864C() & 1) != 0)
  {
    v23 = a1[5];
    v24 = a1[6];
    v31 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v30 = v23;
    *((_QWORD *)&v30 + 1) = v24;
    sub_21C2D7828(&v30, v29);
    swift_bridgeObjectRetain();
    v25 = swift_isUniquelyReferenced_nonNull_native();
    v28 = a2;
    sub_21C2F814C(v29, 0x6863726172656968, 0xEE006E656B6F5479, v25);
    a2 = v28;
    swift_bridgeObjectRelease();
  }
  return a2;
}

void sub_21C3539C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for AnalyticsReporter();
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v33 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - v12;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 64);
  v34 = a1 + 64;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = MEMORY[0x24BEE4AF8];
  v37 = MEMORY[0x24BEE4AF8];
  v19 = v17 & v15;
  v35 = (unint64_t)(v16 + 63) >> 6;
  v32 = a1;
  if ((v17 & v15) != 0)
    goto LABEL_6;
LABEL_7:
  v22 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v22 < v35)
    {
      v23 = *(_QWORD *)(v34 + 8 * v22);
      ++v14;
      if (v23)
        goto LABEL_22;
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_34;
      v23 = *(_QWORD *)(v34 + 8 * v14);
      if (v23)
        goto LABEL_22;
      v14 = v22 + 2;
      if (v22 + 2 >= v35)
        goto LABEL_34;
      v23 = *(_QWORD *)(v34 + 8 * v14);
      if (v23)
        goto LABEL_22;
      v14 = v22 + 3;
      if (v22 + 3 >= v35)
        goto LABEL_34;
      v23 = *(_QWORD *)(v34 + 8 * v14);
      if (v23)
      {
LABEL_22:
        v19 = (v23 - 1) & v23;
        for (i = __clz(__rbit64(v23)) + (v14 << 6); ; i = v20 | (v14 << 6))
        {
          v25 = *(_QWORD *)(v36 + 72);
          sub_21C3535E4(*(_QWORD *)(a1 + 56) + v25 * i, (uint64_t)v10);
          sub_21C2F83F0((uint64_t)v10, (uint64_t)v13);
          v26 = *((_QWORD *)v13 + 1) == a2 && *((_QWORD *)v13 + 2) == a3;
          if (v26 || (sub_21C3A864C() & 1) != 0)
          {
            sub_21C2F83F0((uint64_t)v13, v33);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              sub_21C31E210(0, *(_QWORD *)(v18 + 16) + 1, 1);
            v18 = v37;
            v28 = *(_QWORD *)(v37 + 16);
            v27 = *(_QWORD *)(v37 + 24);
            v29 = v28 + 1;
            if (v28 >= v27 >> 1)
            {
              v31 = v28 + 1;
              sub_21C31E210(v27 > 1, v28 + 1, 1);
              v29 = v31;
              v18 = v37;
            }
            *(_QWORD *)(v18 + 16) = v29;
            sub_21C2F83F0(v33, v18+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ v28 * v25);
            a1 = v32;
            if (!v19)
              goto LABEL_7;
          }
          else
          {
            sub_21C3546F4((uint64_t)v13);
            if (!v19)
              goto LABEL_7;
          }
LABEL_6:
          v20 = __clz(__rbit64(v19));
          v19 &= v19 - 1;
        }
      }
      v24 = v22 + 4;
      if (v24 < v35)
      {
        v23 = *(_QWORD *)(v34 + 8 * v24);
        if (v23)
        {
          v14 = v24;
          goto LABEL_22;
        }
        while (1)
        {
          v14 = v24 + 1;
          if (__OFADD__(v24, 1))
            goto LABEL_36;
          if (v14 >= v35)
            break;
          v23 = *(_QWORD *)(v34 + 8 * v14);
          ++v24;
          if (v23)
            goto LABEL_22;
        }
      }
    }
LABEL_34:
    swift_release();
    return;
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_21C353CD4()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  return SecureStorage.delete(at:)() & 1;
}

uint64_t sub_21C353F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char v18;
  void (*v19)(char *, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char *v26;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint8_t *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  os_log_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v40 = (os_log_t)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (uint64_t)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_21C3A76C8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v41 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v36 - v12;
  sub_21C3A7650();
  v14 = sub_21C3A7620();
  v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v15(v10, v13, v2);
  if ((v14 & 1) != 0)
  {
    if (sub_21C3A7638() == 6452595 && v16 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      v18 = 1;
    }
    else
    {
      v18 = sub_21C3A864C();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v18 = 0;
  }
  v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v10, v2);
  v15(v7, v13, v2);
  if ((v18 & 1) == 0)
  {
    v19(v7, v2);
    return ((uint64_t (*)(char *, uint64_t))v19)(v13, v2);
  }
  v20 = sub_21C353CD4();
  v19(v7, v2);
  if ((v20 & 1) != 0)
    return ((uint64_t (*)(char *, uint64_t))v19)(v13, v2);
  v39 = v0;
  if (qword_25525AB00 != -1)
    swift_once();
  v21 = __swift_project_value_buffer((uint64_t)v40, (uint64_t)qword_255278FD8);
  v22 = v42;
  sub_21C2D1D80(v21, v42);
  v23 = sub_21C3A79D4();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23);
  v26 = v41;
  if (v25 == 1)
  {
    v19(v13, v2);
    return sub_21C2D775C(v22, (uint64_t *)&unk_25525B0E0);
  }
  else
  {
    v15(v41, v13, v2);
    v28 = v26;
    v29 = sub_21C3A79BC();
    v30 = sub_21C3A81C0();
    if (os_log_type_enabled(v29, v30))
    {
      v40 = v29;
      v31 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v44 = v38;
      v37 = v31;
      *(_DWORD *)v31 = 136315138;
      v36 = v31 + 4;
      v32 = sub_21C3A765C();
      v43 = sub_21C350398(v32, v33, &v44);
      v22 = v42;
      sub_21C3A82F8();
      swift_bridgeObjectRelease();
      v19(v28, v2);
      v29 = v40;
      v34 = v37;
      _os_log_impl(&dword_21C2CD000, v40, v30, "Could not delete Analytics session: [%s]", v37, 0xCu);
      v35 = v38;
      swift_arrayDestroy();
      MEMORY[0x22077AF8C](v35, -1, -1);
      MEMORY[0x22077AF8C](v34, -1, -1);
    }
    else
    {
      v19(v28, v2);
    }

    v19(v13, v2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
}

unint64_t sub_21C354348(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  unint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  result = (unint64_t)SecureStorage.getDirectoryContent(at:)(v7);
  if (v9)
  {
    if (qword_25525AB00 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v4, (uint64_t)qword_255278FD8);
    sub_21C2D1D80(v10, (uint64_t)v6);
    v11 = sub_21C3A79D4();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
    {

      return sub_21C2D775C((uint64_t)v6, (uint64_t *)&unk_25525B0E0);
    }
    else
    {
      v18 = v9;
      v19 = v9;
      v20 = sub_21C3A79BC();
      v21 = sub_21C3A81C0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v27 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v22 = 138412290;
        v23 = v9;
        v24 = _swift_stdlib_bridgeErrorToNSError();
        v28 = v24;
        sub_21C3A82F8();
        v25 = v27;
        *v27 = v24;

        _os_log_impl(&dword_21C2CD000, v20, v21, "Could not load Analytics sessions: [%@]", v22, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
        swift_arrayDestroy();
        MEMORY[0x22077AF8C](v25, -1, -1);
        MEMORY[0x22077AF8C](v22, -1, -1);

      }
      else
      {

      }
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v11);
    }
  }
  else
  {
    v13 = result;
    if (result)
    {
      swift_bridgeObjectRetain();
      v14 = sub_21C3736B0(v13, a1, (uint64_t)a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain();
        v16 = (uint64_t *)(v14 + 40);
        do
        {
          v17 = *v16;
          v28 = *(v16 - 1);
          v29 = v17;
          sub_21C353F44();
          v16 += 2;
          --v15;
        }
        while (v15);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for AnalyticsCache()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for AnalyticsManager()
{
  return &type metadata for AnalyticsManager;
}

uint64_t sub_21C354670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnalyticsReporter() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_21C2DFEDC;
  return sub_21C379098(a1, v5, v6, v7);
}

uint64_t sub_21C3546F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AnalyticsReporter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21C354730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525E6C0;
  if (!qword_25525E6C0)
  {
    v1 = type metadata accessor for AnalyticsReporter();
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for AnalyticsReporter, v1);
    atomic_store(result, (unint64_t *)&qword_25525E6C0);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for AnalyticsReporter();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  v4 = (id *)(v0 + v3);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (char *)v4 + *(int *)(v1 + 32);
  v6 = sub_21C3A77B8();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocObject();
}

unint64_t sub_21C35482C()
{
  unint64_t result;

  result = qword_25525E6F8;
  if (!qword_25525E6F8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for ContentInternal, &type metadata for ContentInternal);
    atomic_store(result, (unint64_t *)&qword_25525E6F8);
  }
  return result;
}

unint64_t sub_21C354870()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25525E708;
  if (!qword_25525E708)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25525E700);
    v2 = sub_21C35482C();
    result = MEMORY[0x22077AECC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25525E708);
  }
  return result;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.vehicleClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C2F50EC(v1, a1, &qword_25525BFB0);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.vehicleRestrictions.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(uint64_t a1)
{
  return sub_21C2ED554(a1, (uint64_t *)&unk_25525E788);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.vehicleEndorsements.getter()
{
  type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);
  return swift_bridgeObjectRetain();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_21C2E9A18(a1);
  v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 20));
  swift_bridgeObjectRetain();
  sub_21C2EA2C0(a1, v4);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_21C2EA2C0(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_21C3A8700();
  sub_21C2E9A18((uint64_t)v3);
  v1 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);
  sub_21C2EA2C0(v3, *(_QWORD *)(v0 + *(int *)(v1 + 20)));
  sub_21C2EA2C0(v3, *(_QWORD *)(v0 + *(int *)(v1 + 24)));
  return sub_21C3A8724();
}

uint64_t sub_21C354A3C(uint64_t a1)
{
  uint64_t v1;
  _BYTE v4[72];

  sub_21C3A8700();
  sub_21C2E9A18((uint64_t)v4);
  sub_21C2EA2C0(v4, *(_QWORD *)(v1 + *(int *)(a1 + 20)));
  sub_21C2EA2C0(v4, *(_QWORD *)(v1 + *(int *)(a1 + 24)));
  return sub_21C3A8724();
}

uint64_t sub_21C354A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_21C2E9A18(a1);
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 20));
  v5 = *(_QWORD *)(v4 + 16);
  sub_21C3A870C();
  if (v5)
  {
    v6 = v4 + 56;
    do
    {
      if (*(_QWORD *)(v6 - 16))
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain();
      }
      v6 += 32;
      sub_21C3A7F50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v5;
    }
    while (v5);
  }
  v7 = *(_QWORD *)(v2 + *(int *)(a2 + 24));
  v8 = *(_QWORD *)(v7 + 16);
  result = sub_21C3A870C();
  if (v8)
  {
    v10 = v7 + 56;
    do
    {
      if (*(_QWORD *)(v10 - 16))
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_21C3A7F50();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21C3A8718();
        swift_bridgeObjectRetain();
      }
      v10 += 32;
      sub_21C3A7F50();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_21C354C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v5[72];

  sub_21C3A8700();
  sub_21C2E9A18((uint64_t)v5);
  sub_21C2EA2C0(v5, *(_QWORD *)(v2 + *(int *)(a2 + 20)));
  sub_21C2EA2C0(v5, *(_QWORD *)(v2 + *(int *)(a2 + 24)));
  return sub_21C3A8724();
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.code.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.issueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  return sub_21C2F50EC(v1 + *(int *)(v3 + 24), a1, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  return sub_21C2F50EC(v1 + *(int *)(v3 + 28), a1, &qword_25525B8A0);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v1 = sub_21C3A7518();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - v9;
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C3A7F50();
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_21C2F50EC(v0 + *(int *)(v11 + 24), (uint64_t)v10, &qword_25525B8A0);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  if (v12(v10, 1, v1) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v10, v1);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_21C2F50EC(v0 + *(int *)(v11 + 28), (uint64_t)v7, &qword_25525B8A0);
  if (v12(v7, 1, v1) == 1)
    return sub_21C3A8718();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_21C3A8718();
  sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
  sub_21C3A7E60();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v1 = v0;
  v2 = sub_21C3A7518();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - v10;
  sub_21C3A8700();
  sub_21C3A7F50();
  sub_21C3A7F50();
  v12 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  sub_21C2F50EC(v1 + *(int *)(v12 + 24), (uint64_t)v11, &qword_25525B8A0);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v13(v11, 1, v2) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_21C2F50EC(v1 + *(int *)(v12 + 28), (uint64_t)v8, &qword_25525B8A0);
  if (v13(v8, 1, v2) == 1)
  {
    sub_21C3A8718();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_21C3A8718();
    sub_21C2D1198(&qword_25525B8A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE08]);
    sub_21C3A7E60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_21C3A8724();
}

uint64_t static MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_21C2EAC8C(a1, a2) & 1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.code.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_21C2EAC8C(a1, a2) & 1;
}

uint64_t _s15ProximityReader31MobileDriversLicenseDataRequestV8ResponseV16DocumentElementsV21AAMVADrivingPrivilegeV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525CD30);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v28 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v28 - v17;
  v30 = a1;
  sub_21C2F50EC(a1, (uint64_t)&v28 - v17, &qword_25525BFB0);
  v31 = a2;
  sub_21C2F50EC(a2, (uint64_t)v15, &qword_25525BFB0);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_21C2F50EC((uint64_t)v18, (uint64_t)v9, &qword_25525BFB0);
  sub_21C2F50EC((uint64_t)v15, v19, &qword_25525BFB0);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_21C2D775C((uint64_t)v15, &qword_25525BFB0);
    sub_21C2D775C((uint64_t)v18, &qword_25525BFB0);
    if (v20(v19, 1, v4) == 1)
    {
      sub_21C2D775C((uint64_t)v9, &qword_25525BFB0);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_21C2F50EC((uint64_t)v9, (uint64_t)v12, &qword_25525BFB0);
  if (v20(v19, 1, v4) == 1)
  {
    sub_21C2D775C((uint64_t)v15, &qword_25525BFB0);
    sub_21C2D775C((uint64_t)v18, &qword_25525BFB0);
    sub_21C3565A8((uint64_t)v12);
LABEL_6:
    sub_21C2D775C((uint64_t)v9, &qword_25525CD30);
LABEL_10:
    v26 = 0;
    return v26 & 1;
  }
  v21 = v29;
  sub_21C356E7C(v19, (uint64_t)v29);
  v22 = _s15ProximityReader31MobileDriversLicenseDataRequestV8ResponseV16DocumentElementsV21AAMVADrivingPrivilegeV12VehicleClassV2eeoiySbAK_AKtFZ_0(v12, v21);
  sub_21C3565A8((uint64_t)v21);
  sub_21C2D775C((uint64_t)v15, &qword_25525BFB0);
  sub_21C2D775C((uint64_t)v18, &qword_25525BFB0);
  sub_21C3565A8((uint64_t)v12);
  sub_21C2D775C((uint64_t)v9, &qword_25525BFB0);
  if (!v22)
    goto LABEL_10;
LABEL_8:
  v23 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege(0);
  v25 = v30;
  v24 = v31;
  if ((sub_21C311C20(*(_QWORD *)(v30 + *(int *)(v23 + 20)), *(_QWORD *)(v31 + *(int *)(v23 + 20))) & 1) == 0)
    goto LABEL_10;
  v26 = sub_21C311C20(*(_QWORD *)(v25 + *(int *)(v23 + 24)), *(_QWORD *)(v24 + *(int *)(v23 + 24)));
  return v26 & 1;
}

uint64_t type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(uint64_t a1)
{
  return sub_21C2ED554(a1, qword_25525E828);
}

BOOL _s15ProximityReader31MobileDriversLicenseDataRequestV8ResponseV16DocumentElementsV21AAMVADrivingPrivilegeV12VehicleClassV2eeoiySbAK_AKtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  char v28;
  _BOOL8 result;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  _BYTE *v35;
  void (*v36)(_BYTE *, uint64_t);
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  char v46;
  void (*v47)(_BYTE *, uint64_t);
  _BYTE v48[12];
  int v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;

  v4 = sub_21C3A7518();
  v57 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB8);
  MEMORY[0x24BDAC7A8](v56);
  v8 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v48[-v10];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v54 = &v48[-v16];
  MEMORY[0x24BDAC7A8](v17);
  v55 = &v48[-v18];
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v48[-v20];
  MEMORY[0x24BDAC7A8](v22);
  v24 = &v48[-v23];
  MEMORY[0x24BDAC7A8](v25);
  v27 = &v48[-v26];
  if (*a1 == *a2 && a1[1] == a2[1] || (v28 = sub_21C3A864C(), result = 0, (v28 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v30 = sub_21C3A864C(), result = 0, (v30 & 1) != 0))
    {
      v51 = v14;
      v52 = v6;
      v53 = v8;
      v31 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
      sub_21C2F50EC((uint64_t)a1 + *(int *)(v31 + 24), (uint64_t)v27, &qword_25525B8A0);
      sub_21C2F50EC((uint64_t)a2 + *(int *)(v31 + 24), (uint64_t)v24, &qword_25525B8A0);
      v32 = (uint64_t)&v11[*(int *)(v56 + 48)];
      sub_21C2F50EC((uint64_t)v27, (uint64_t)v11, &qword_25525B8A0);
      sub_21C2F50EC((uint64_t)v24, v32, &qword_25525B8A0);
      v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
      if (v33((uint64_t)v11, 1, v4) == 1)
      {
        sub_21C2D775C((uint64_t)v24, &qword_25525B8A0);
        sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
        if (v33(v32, 1, v4) == 1)
        {
          v50 = v33;
          sub_21C2D775C((uint64_t)v11, &qword_25525B8A0);
LABEL_14:
          v37 = (uint64_t)a1 + *(int *)(v31 + 28);
          v38 = v55;
          sub_21C2F50EC(v37, (uint64_t)v55, &qword_25525B8A0);
          v39 = v54;
          sub_21C2F50EC((uint64_t)a2 + *(int *)(v31 + 28), (uint64_t)v54, &qword_25525B8A0);
          v40 = (uint64_t)v53;
          v41 = (uint64_t)&v53[*(int *)(v56 + 48)];
          sub_21C2F50EC((uint64_t)v38, (uint64_t)v53, &qword_25525B8A0);
          sub_21C2F50EC((uint64_t)v39, v41, &qword_25525B8A0);
          v42 = v50;
          if (v50(v40, 1, v4) == 1)
          {
            sub_21C2D775C((uint64_t)v39, &qword_25525B8A0);
            sub_21C2D775C((uint64_t)v38, &qword_25525B8A0);
            if (v42(v41, 1, v4) == 1)
            {
              sub_21C2D775C(v40, &qword_25525B8A0);
              return 1;
            }
          }
          else
          {
            v43 = (uint64_t)v51;
            sub_21C2F50EC(v40, (uint64_t)v51, &qword_25525B8A0);
            if (v42(v41, 1, v4) != 1)
            {
              v44 = v57;
              v45 = v52;
              (*(void (**)(_BYTE *, uint64_t, uint64_t))(v57 + 32))(v52, v41, v4);
              sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
              v46 = sub_21C3A7EA8();
              v47 = *(void (**)(_BYTE *, uint64_t))(v44 + 8);
              v47(v45, v4);
              sub_21C2D775C((uint64_t)v39, &qword_25525B8A0);
              sub_21C2D775C((uint64_t)v38, &qword_25525B8A0);
              v47((_BYTE *)v43, v4);
              sub_21C2D775C(v40, &qword_25525B8A0);
              return (v46 & 1) != 0;
            }
            sub_21C2D775C((uint64_t)v39, &qword_25525B8A0);
            sub_21C2D775C((uint64_t)v38, &qword_25525B8A0);
            (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v43, v4);
          }
          v34 = v40;
          goto LABEL_20;
        }
      }
      else
      {
        sub_21C2F50EC((uint64_t)v11, (uint64_t)v21, &qword_25525B8A0);
        if (v33(v32, 1, v4) != 1)
        {
          v50 = v33;
          v35 = v52;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v57 + 32))(v52, v32, v4);
          sub_21C2D1198(&qword_25525BFC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE18]);
          v49 = sub_21C3A7EA8();
          v36 = *(void (**)(_BYTE *, uint64_t))(v57 + 8);
          v36(v35, v4);
          sub_21C2D775C((uint64_t)v24, &qword_25525B8A0);
          sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
          v36(v21, v4);
          sub_21C2D775C((uint64_t)v11, &qword_25525B8A0);
          if ((v49 & 1) == 0)
            return 0;
          goto LABEL_14;
        }
        sub_21C2D775C((uint64_t)v24, &qword_25525B8A0);
        sub_21C2D775C((uint64_t)v27, &qword_25525B8A0);
        (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v21, v4);
      }
      v34 = (uint64_t)v11;
LABEL_20:
      sub_21C2D775C(v34, &qword_25525BFB8);
      return 0;
    }
  }
  return result;
}

uint64_t sub_21C355BA8()
{
  return sub_21C2D1198(&qword_25525E710, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege);
}

uint64_t sub_21C355BD4()
{
  return sub_21C2D1198(&qword_25525E718, type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass, (uint64_t)&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
}

unint64_t sub_21C355C04()
{
  unint64_t result;

  result = qword_25525E720;
  if (!qword_25525E720)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction, &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction);
    atomic_store(result, (unint64_t *)&qword_25525E720);
  }
  return result;
}

unint64_t sub_21C355C4C()
{
  unint64_t result;

  result = qword_25525E728;
  if (!qword_25525E728)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement, &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement);
    atomic_store(result, (unint64_t *)&qword_25525E728);
  }
  return result;
}

uint64_t *_s21AAMVADrivingPrivilegeVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *__dst;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = *(int *)(v7 + 24);
      __dst = (char *)a1 + v13;
      v27 = v8;
      v14 = (char *)a2 + v13;
      v15 = sub_21C3A7518();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      v19 = v16;
      v20 = *(int *)(v7 + 28);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v17((char *)a2 + v20, 1, v15))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v22, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v7);
    }
    v24 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v24) = *(uint64_t *)((char *)a2 + v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s21AAMVADrivingPrivilegeVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v2 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(v2 + 24);
    v4 = sub_21C3A7518();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v7 = a1 + *(int *)(v2 + 28);
    if (!v6(v7, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s21AAMVADrivingPrivilegeVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *__dst;
  uint64_t v25;

  v6 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = *(int *)(v6 + 24);
    __dst = (char *)a1 + v11;
    v25 = v7;
    v12 = (char *)a2 + v11;
    v13 = sub_21C3A7518();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v17 = v14;
    v18 = *(int *)(v6 + 28);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    if (v15((char *)a2 + v18, 1, v13))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v20, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v13);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v6);
  }
  v22 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *_s21AAMVADrivingPrivilegeVwca(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;
  char *__dst;
  uint64_t v41;

  v6 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_21C3565A8((uint64_t)a1);
      goto LABEL_7;
    }
    v18 = a3;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = *(int *)(v6 + 24);
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = sub_21C3A7518();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
    v25 = v24(v20, 1, v22);
    v26 = v24(v21, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
LABEL_19:
        v33 = *(int *)(v6 + 28);
        v34 = &a1[v33];
        v35 = &a2[v33];
        v36 = v24(&a1[v33], 1, v22);
        v37 = v24(v35, 1, v22);
        if (v36)
        {
          if (!v37)
          {
            (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v34, v35, v22);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v34, 0, 1, v22);
LABEL_25:
            a3 = v18;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v37)
          {
            (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v34, v35, v22);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v23 + 8))(v34, v22);
        }
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    }
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_26;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  v11 = *(int *)(v6 + 24);
  __dst = &a1[v11];
  v41 = a3;
  v12 = &a2[v11];
  v13 = sub_21C3A7518();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  v27 = v14;
  v28 = *(int *)(v6 + 28);
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v15(&a2[v28], 1, v13))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v29, v30, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v13);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  a3 = v41;
LABEL_26:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C3565A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *_s21AAMVADrivingPrivilegeVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_21C3A7518();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v17 = *(int *)(v6 + 28);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    if (v15((char *)a2 + v17, 1, v13))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v19, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v21 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  return a1;
}

char *_s21AAMVADrivingPrivilegeVwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  size_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  int v42;

  v6 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_21C3565A8((uint64_t)a1);
      goto LABEL_7;
    }
    v22 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v22;
    swift_bridgeObjectRelease();
    v23 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v23;
    swift_bridgeObjectRelease();
    v24 = *(int *)(v6 + 24);
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = sub_21C3A7518();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
    v30 = v29(v25, 1, v27);
    v31 = v29(v26, 1, v27);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_21:
        v38 = *(int *)(v6 + 28);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = v29(&a1[v38], 1, v27);
        v42 = v29(v40, 1, v27);
        if (v41)
        {
          if (!v42)
          {
            (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v39, v40, v27);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v39, 0, 1, v27);
            goto LABEL_17;
          }
        }
        else
        {
          if (!v42)
          {
            (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v39, v40, v27);
            goto LABEL_17;
          }
          (*(void (**)(char *, uint64_t))(v28 + 8))(v39, v27);
        }
        v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0) - 8) + 64);
        v20 = v39;
        v21 = v40;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB0) - 8) + 64);
    v20 = a1;
    v21 = a2;
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_17;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  v12 = *(int *)(v6 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_21C3A7518();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v32 = *(int *)(v6 + 28);
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (v17(&a2[v32], 1, v15))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v33, v34, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v15);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21AAMVADrivingPrivilegeVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C356B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s21AAMVADrivingPrivilegeVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C356BC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25525BFB0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_21C356C40()
{
  unint64_t v0;

  sub_21C2EFB08(319, qword_25525E798, (void (*)(uint64_t))type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s21AAMVADrivingPrivilegeV12VehicleClassVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C356CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t _s21AAMVADrivingPrivilegeV12VehicleClassVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C356D60(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525B8A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_21C356DD8()
{
  unint64_t v0;

  sub_21C2EFB08(319, (unint64_t *)&qword_25525BBF0, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction()
{
  return &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleRestriction;
}

ValueMetadata *type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement()
{
  return &type metadata for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleEndorsement;
}

uint64_t sub_21C356E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MobileDriversLicenseDataRequest.Response.DocumentElements.AAMVADrivingPrivilege.VehicleClass(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t IdentityReaderErrorInternal.publicLogMessage.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD v5[2];
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_QWORD *)v0 + 3);
  v6 = *v0;
  v7 = v1;
  v8 = v2;
  IdentityReaderErrorInternal.externalize.getter(v5);
  result = sub_21C3A7F2C();
  *(_QWORD *)&v6 = result;
  *((_QWORD *)&v6 + 1) = v4;
  if (v2)
  {
    v5[0] = 10272;
    v5[1] = 0xE200000000000000;
    sub_21C3A7F8C();
    sub_21C3A7F8C();
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

void IdentityReaderErrorInternal.externalize.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  if (v2 > 0x15)
    *a1 = 3;
  else
    *a1 = byte_21C3B33CA[v2];
}

uint64_t IdentityReaderErrorInternal.init(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char *v26;
  uint64_t v27;
  uint8_t *v28;
  _QWORD *v29;
  _QWORD v30[2];
  uint8_t *v31;
  _QWORD *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  int v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = sub_21C3A7A1C();
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21C3A7A04();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (_QWORD *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21C3A7A10();
  v14 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == *MEMORY[0x24BE1C000])
  {
    (*(void (**)(uint64_t *, uint64_t))(v11 + 96))(v13, v10);
    v16 = *v13;
    v15 = v13[1];
  }
  else
  {
    if (v14 != *MEMORY[0x24BE1C008])
    {
      if (v14 == *MEMORY[0x24BE1BF80])
      {
        v16 = 0;
        v15 = 1;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFA0])
      {
        v16 = 0;
        v15 = 4;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFF8])
      {
        v16 = 0;
        v15 = 7;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1C010])
      {
        v16 = 0;
        v15 = 2;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFC8])
      {
        v16 = 0;
        v15 = 11;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BF78])
      {
        v16 = 0;
        v15 = 8;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BF68])
      {
        v16 = 0;
        v15 = 16;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BF90])
      {
        v16 = 0;
        v15 = 6;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFC0])
      {
        v16 = 0;
        v15 = 5;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFB0])
      {
        v16 = 0;
        v15 = 15;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BF88])
      {
        v16 = 0;
        v15 = 12;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFD8])
      {
        v16 = 0;
        v15 = 17;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFF0])
      {
        v16 = 0;
        v15 = 9;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFB8])
      {
        v16 = 0;
        v15 = 18;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFD0])
      {
        v16 = 0;
        v15 = 19;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BF70])
      {
        v16 = 0;
        v15 = 3;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFE0])
      {
        v16 = 0;
        v15 = 13;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BF98])
      {
        v16 = 0;
        v15 = 14;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFA8])
      {
        v16 = 0;
        v15 = 20;
        goto LABEL_45;
      }
      if (v14 == *MEMORY[0x24BE1BFE8])
      {
        v16 = 0;
        v15 = 10;
        goto LABEL_45;
      }
      if (qword_25525AAD0 != -1)
        swift_once();
      v21 = __swift_project_value_buffer(v7, (uint64_t)qword_255278F48);
      sub_21C2D1D80(v21, (uint64_t)v9);
      v22 = sub_21C3A79D4();
      v36 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v9, 1, v22) == 1)
      {
        sub_21C2D775C((uint64_t)v9, (uint64_t *)&unk_25525B0E0);
      }
      else
      {
        v33 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
        v33(v6, a1, v4);
        v23 = sub_21C3A79BC();
        v24 = sub_21C3A81C0();
        v35 = v23;
        v34 = v24;
        if (os_log_type_enabled(v23, v24))
        {
          v25 = (uint8_t *)swift_slowAlloc();
          v32 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v25 = 138412290;
          v30[1] = v25 + 12;
          v31 = v25;
          v30[0] = v25 + 4;
          sub_21C35B0AC();
          swift_allocError();
          v33(v26, (uint64_t)v6, v4);
          v27 = _swift_stdlib_bridgeErrorToNSError();
          v38 = v27;
          sub_21C3A82F8();
          *v32 = v27;
          (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v4);
          v28 = v31;
          _os_log_impl(&dword_21C2CD000, v35, (os_log_type_t)v34, "Could not parse identity session error: [ %@ ]", v31, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25525D788);
          v29 = v32;
          swift_arrayDestroy();
          MEMORY[0x22077AF8C](v29, -1, -1);
          MEMORY[0x22077AF8C](v28, -1, -1);

        }
        else
        {

          (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v4);
        }
        (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v22);
      }
      (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
    }
    v16 = 0;
    v15 = 0;
  }
LABEL_45:
  v17 = sub_21C3A79F8();
  v19 = v18;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(a1, v4);
  *a2 = v16;
  a2[1] = v15;
  a2[2] = v17;
  a2[3] = v19;
  return result;
}

uint64_t IdentityReaderErrorInternal.Code.hash(into:)()
{
  uint64_t v0;
  uint64_t result;

  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xALL:
    case 0xBLL:
    case 0xCLL:
    case 0xDLL:
    case 0xELL:
    case 0xFLL:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
      result = sub_21C3A870C();
      break;
    default:
      sub_21C3A870C();
      result = sub_21C3A7F50();
      break;
  }
  return result;
}

uint64_t sub_21C3576FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21C357730 + 4 * byte_21C3B1DF6[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_21C357730()
{
  return 0x776F6C6C41746F6ELL;
}

uint64_t sub_21C35774C()
{
  return 0x656C6C65636E6163;
}

uint64_t sub_21C357768()
{
  return 0x456B726F7774656ELL;
}

uint64_t sub_21C357788()
{
  return 0x5264696C61766E69;
}

uint64_t sub_21C3577C0()
{
  return 0x5464696C61766E69;
}

uint64_t sub_21C3577E0()
{
  return 0x75426D6574737973;
}

uint64_t sub_21C3577FC()
{
  return 0x626173694463666ELL;
}

uint64_t sub_21C35781C()
{
  return 0x687265764F63666ELL;
}

unint64_t sub_21C35783C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_21C357980()
{
  return 0x456E6F6973736573;
}

uint64_t sub_21C3579A4()
{
  sub_21C35B614();
  return sub_21C3A8754();
}

uint64_t sub_21C3579CC()
{
  sub_21C35B614();
  return sub_21C3A8760();
}

uint64_t sub_21C3579F4()
{
  sub_21C35B658();
  return sub_21C3A8754();
}

uint64_t sub_21C357A1C()
{
  sub_21C35B658();
  return sub_21C3A8760();
}

uint64_t sub_21C357A44()
{
  sub_21C35B69C();
  return sub_21C3A8754();
}

uint64_t sub_21C357A6C()
{
  sub_21C35B69C();
  return sub_21C3A8760();
}

uint64_t sub_21C357A94()
{
  sub_21C35B900();
  return sub_21C3A8754();
}

uint64_t sub_21C357ABC()
{
  sub_21C35B900();
  return sub_21C3A8760();
}

uint64_t sub_21C357AE4()
{
  unsigned __int8 *v0;

  return sub_21C3576FC(*v0);
}

uint64_t sub_21C357AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21C35D114(a1, a2);
  *a3 = result;
  return result;
}

void sub_21C357B10(_BYTE *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_21C357B1C()
{
  sub_21C35B36C();
  return sub_21C3A8754();
}

uint64_t sub_21C357B44()
{
  sub_21C35B36C();
  return sub_21C3A8760();
}

uint64_t sub_21C357B6C()
{
  sub_21C35B3B0();
  return sub_21C3A8754();
}

uint64_t sub_21C357B94()
{
  sub_21C35B3B0();
  return sub_21C3A8760();
}

uint64_t sub_21C357BBC()
{
  sub_21C35B878();
  return sub_21C3A8754();
}

uint64_t sub_21C357BE4()
{
  sub_21C35B878();
  return sub_21C3A8760();
}

uint64_t sub_21C357C0C()
{
  sub_21C35B834();
  return sub_21C3A8754();
}

uint64_t sub_21C357C34()
{
  sub_21C35B834();
  return sub_21C3A8760();
}

uint64_t sub_21C357C5C()
{
  sub_21C35B7F0();
  return sub_21C3A8754();
}

uint64_t sub_21C357C84()
{
  sub_21C35B7F0();
  return sub_21C3A8760();
}

uint64_t sub_21C357CAC()
{
  sub_21C35B8BC();
  return sub_21C3A8754();
}

uint64_t sub_21C357CD4()
{
  sub_21C35B8BC();
  return sub_21C3A8760();
}

uint64_t sub_21C357CFC()
{
  sub_21C35B768();
  return sub_21C3A8754();
}

uint64_t sub_21C357D24()
{
  sub_21C35B768();
  return sub_21C3A8760();
}

uint64_t sub_21C357D4C()
{
  sub_21C35B6E0();
  return sub_21C3A8754();
}

uint64_t sub_21C357D74()
{
  sub_21C35B6E0();
  return sub_21C3A8760();
}

uint64_t sub_21C357D9C()
{
  sub_21C35B724();
  return sub_21C3A8754();
}

uint64_t sub_21C357DC4()
{
  sub_21C35B724();
  return sub_21C3A8760();
}

uint64_t sub_21C357DEC()
{
  sub_21C35B944();
  return sub_21C3A8754();
}

uint64_t sub_21C357E14()
{
  sub_21C35B944();
  return sub_21C3A8760();
}

uint64_t sub_21C357E3C()
{
  sub_21C35B5D0();
  return sub_21C3A8754();
}

uint64_t sub_21C357E64()
{
  sub_21C35B5D0();
  return sub_21C3A8760();
}

uint64_t sub_21C357E8C()
{
  sub_21C35B3F4();
  return sub_21C3A8754();
}

uint64_t sub_21C357EB4()
{
  sub_21C35B3F4();
  return sub_21C3A8760();
}

uint64_t sub_21C357EDC()
{
  sub_21C35B58C();
  return sub_21C3A8754();
}

uint64_t sub_21C357F04()
{
  sub_21C35B58C();
  return sub_21C3A8760();
}

uint64_t sub_21C357F2C()
{
  sub_21C35B548();
  return sub_21C3A8754();
}

uint64_t sub_21C357F54()
{
  sub_21C35B548();
  return sub_21C3A8760();
}

uint64_t sub_21C357F7C()
{
  sub_21C35B504();
  return sub_21C3A8754();
}

uint64_t sub_21C357FA4()
{
  sub_21C35B504();
  return sub_21C3A8760();
}

uint64_t sub_21C357FCC()
{
  sub_21C35B438();
  return sub_21C3A8754();
}

uint64_t sub_21C357FF4()
{
  sub_21C35B438();
  return sub_21C3A8760();
}

uint64_t sub_21C35801C()
{
  sub_21C35B47C();
  return sub_21C3A8754();
}

uint64_t sub_21C358044()
{
  sub_21C35B47C();
  return sub_21C3A8760();
}

uint64_t sub_21C35806C()
{
  sub_21C35B7AC();
  return sub_21C3A8754();
}

uint64_t sub_21C358094()
{
  sub_21C35B7AC();
  return sub_21C3A8760();
}

uint64_t sub_21C3580BC()
{
  return 0x657A696C61636F6CLL;
}

uint64_t sub_21C3580E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x657A696C61636F6CLL && a2 == 0xEF676E6972745364)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_21C3A864C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_21C358198()
{
  sub_21C35B4C0();
  return sub_21C3A8754();
}

uint64_t sub_21C3581C0()
{
  sub_21C35B4C0();
  return sub_21C3A8760();
}

uint64_t sub_21C3581E8()
{
  sub_21C35B988();
  return sub_21C3A8754();
}

uint64_t sub_21C358210()
{
  sub_21C35B988();
  return sub_21C3A8760();
}

uint64_t IdentityReaderErrorInternal.Code.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t result;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char v135;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E870);
  v130 = *(_QWORD *)(v3 - 8);
  v131 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v129 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E878);
  v127 = *(_QWORD *)(v5 - 8);
  v128 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v126 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E880);
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v66 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E888);
  v124 = *(_QWORD *)(v8 - 8);
  v125 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v122 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E890);
  v121 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v120 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E898);
  v118 = *(_QWORD *)(v11 - 8);
  v119 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v117 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8A0);
  v115 = *(_QWORD *)(v13 - 8);
  v116 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v114 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8A8);
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v111 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8B0);
  v109 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v108 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8B8);
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v105 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8C0);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v102 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8C8);
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v99 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8D0);
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v96 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8D8);
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v93 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8E0);
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v90 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8E8);
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v87 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8F0);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E8F8);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E900);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v78 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E908);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v75 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E910);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v72 = (char *)&v65 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E918);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v30 = (char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E920);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v65 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E928);
  v132 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v36 = (char *)&v65 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v1[1];
  v69 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21C35B36C();
  v133 = v36;
  sub_21C3A8748();
  switch(v37)
  {
    case 0:
      v135 = 0;
      sub_21C35B988();
      v38 = v133;
      v39 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v132 + 8))(v38, v39);
    case 1:
      v135 = 1;
      sub_21C35B944();
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v30, v71);
      goto LABEL_27;
    case 2:
      v135 = 2;
      sub_21C35B900();
      v47 = v72;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v47, v74);
      goto LABEL_27;
    case 3:
      v135 = 3;
      sub_21C35B8BC();
      v48 = v75;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v48, v77);
      goto LABEL_27;
    case 4:
      v135 = 4;
      sub_21C35B878();
      v49 = v78;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v49, v80);
      goto LABEL_27;
    case 5:
      v135 = 5;
      sub_21C35B834();
      v50 = v81;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v50, v83);
      goto LABEL_27;
    case 6:
      v135 = 6;
      sub_21C35B7F0();
      v51 = v84;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v51, v86);
      goto LABEL_27;
    case 7:
      v135 = 7;
      sub_21C35B7AC();
      v52 = v87;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v52, v89);
      goto LABEL_27;
    case 8:
      v135 = 8;
      sub_21C35B768();
      v53 = v90;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v53, v92);
      goto LABEL_27;
    case 9:
      v135 = 9;
      sub_21C35B724();
      v54 = v93;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v54, v95);
      goto LABEL_27;
    case 10:
      v135 = 10;
      sub_21C35B6E0();
      v55 = v96;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v55, v98);
      goto LABEL_27;
    case 11:
      v135 = 11;
      sub_21C35B69C();
      v56 = v99;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v56, v101);
      goto LABEL_27;
    case 12:
      v135 = 12;
      sub_21C35B658();
      v57 = v102;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v103 + 8))(v57, v104);
      goto LABEL_27;
    case 13:
      v135 = 13;
      sub_21C35B614();
      v58 = v105;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v58, v107);
      goto LABEL_27;
    case 14:
      v135 = 14;
      sub_21C35B5D0();
      v59 = v108;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v59, v110);
      goto LABEL_27;
    case 15:
      v135 = 15;
      sub_21C35B58C();
      v60 = v111;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v60, v113);
      goto LABEL_27;
    case 16:
      v135 = 16;
      sub_21C35B548();
      v61 = v114;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      v63 = v115;
      v62 = v116;
      goto LABEL_24;
    case 17:
      v135 = 17;
      sub_21C35B504();
      v61 = v117;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      v63 = v118;
      v62 = v119;
      goto LABEL_24;
    case 18:
      v135 = 19;
      sub_21C35B47C();
      v61 = v122;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      v63 = v124;
      v62 = v125;
      goto LABEL_24;
    case 19:
      v135 = 20;
      sub_21C35B438();
      v64 = v66;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v68);
      goto LABEL_27;
    case 20:
      v135 = 21;
      sub_21C35B3F4();
      v61 = v126;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      v63 = v127;
      v62 = v128;
      goto LABEL_24;
    case 21:
      v135 = 22;
      sub_21C35B3B0();
      v61 = v129;
      v46 = v133;
      v45 = v134;
      sub_21C3A85A4();
      v63 = v130;
      v62 = v131;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v62);
LABEL_27:
      result = (*(uint64_t (**)(char *, uint64_t))(v132 + 8))(v46, v45);
      break;
    default:
      v135 = 18;
      sub_21C35B4C0();
      v41 = v120;
      v43 = v133;
      v42 = v134;
      sub_21C3A85A4();
      v44 = v123;
      sub_21C3A85E0();
      (*(void (**)(char *, uint64_t))(v121 + 8))(v41, v44);
      result = (*(uint64_t (**)(char *, uint64_t))(v132 + 8))(v43, v42);
      break;
  }
  return result;
}

uint64_t IdentityReaderErrorInternal.Code.hashValue.getter()
{
  sub_21C3A8700();
  IdentityReaderErrorInternal.Code.hash(into:)();
  return sub_21C3A8724();
}

uint64_t IdentityReaderErrorInternal.Code.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD v41[7];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;

  v101 = a2;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E9F0);
  v107 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v100 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525E9F8);
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v106 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA00);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v99 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA08);
  v75 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v97 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA10);
  v76 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v98 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA18);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v96 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA20);
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v95 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA28);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v94 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA30);
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v93 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA38);
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v92 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA40);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v91 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA48);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v90 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA50);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v89 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA58);
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v105 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA60);
  v53 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v87 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA68);
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v104 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA70);
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v88 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA78);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v102 = (char *)v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA80);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v86 = (char *)v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA88);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v85 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA90);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v84 = (char *)v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EA98);
  v41[6] = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v25 = (char *)v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EAA0);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EAA8);
  v30 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v32 = (char *)v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1[3];
  v108 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v33);
  sub_21C35B36C();
  v34 = v109;
  sub_21C3A873C();
  if (!v34)
  {
    v41[3] = v29;
    v41[1] = v27;
    v41[2] = v26;
    v41[4] = v25;
    v41[5] = 0;
    v109 = v30;
    v35 = v103;
    v36 = sub_21C3A8598();
    if (*(_QWORD *)(v36 + 16) == 1)
      __asm { BR              X10 }
    v37 = sub_21C3A840C();
    swift_allocError();
    v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25525FF00);
    *v39 = &type metadata for IdentityReaderErrorInternal.Code;
    sub_21C3A8520();
    sub_21C3A8400();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x24BEE26D0], v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v32, v35);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
}

void sub_21C359A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 1;
  sub_21C35B944();
  v3 = *(_QWORD *)(v2 - 656);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 640) + 8))(v3, *(_QWORD *)(v2 - 632));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 1;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C359B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 2;
  sub_21C35B900();
  v3 = *(_QWORD *)(v2 - 296);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 624) + 8))(v3, *(_QWORD *)(v2 - 616));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 2;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C359B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 3;
  sub_21C35B8BC();
  v3 = *(_QWORD *)(v2 - 288);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 608) + 8))(v3, *(_QWORD *)(v2 - 600));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 3;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C359C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 4;
  sub_21C35B878();
  v3 = *(_QWORD *)(v2 - 280);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 592) + 8))(v3, *(_QWORD *)(v2 - 584));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 4;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C359CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v3 - 65) = 5;
  sub_21C35B834();
  v4 = *(_QWORD *)(v3 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 576) + 8))(v0, *(_QWORD *)(v3 - 568));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v2, v1);
    v5 = *(_QWORD **)(v3 - 160);
    *v5 = 0;
    v5[1] = 5;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C359D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 6;
  sub_21C35B7F0();
  v3 = *(_QWORD *)(v2 - 264);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 560) + 8))(v3, *(_QWORD *)(v2 - 552));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 6;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C359DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v3 - 65) = 7;
  sub_21C35B7AC();
  v4 = *(_QWORD *)(v3 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 536) + 8))(v0, *(_QWORD *)(v3 - 528));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v2, v1);
    v5 = *(_QWORD **)(v3 - 160);
    *v5 = 0;
    v5[1] = 7;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C359E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 8;
  sub_21C35B768();
  v3 = *(_QWORD *)(v2 - 272);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 544) + 8))(v3, *(_QWORD *)(v2 - 512));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 8;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C359ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v3 - 65) = 9;
  sub_21C35B724();
  v4 = *(_QWORD *)(v3 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 520) + 8))(v0, *(_QWORD *)(v3 - 504));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v2, v1);
    v5 = *(_QWORD **)(v3 - 160);
    *v5 = 0;
    v5[1] = 9;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C359F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 10;
  sub_21C35B6E0();
  v3 = *(_QWORD *)(v2 - 256);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 496) + 8))(v3, *(_QWORD *)(v2 - 488));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 10;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C359FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 11;
  sub_21C35B69C();
  v3 = *(_QWORD *)(v2 - 248);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 480) + 8))(v3, *(_QWORD *)(v2 - 472));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 11;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C35A068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 12;
  sub_21C35B658();
  v3 = *(_QWORD *)(v2 - 240);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 464) + 8))(v3, *(_QWORD *)(v2 - 456));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 12;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C35A0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 13;
  sub_21C35B614();
  v3 = *(_QWORD *)(v2 - 232);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 448) + 8))(v3, *(_QWORD *)(v2 - 440));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 13;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C35A178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 14;
  sub_21C35B5D0();
  v3 = *(_QWORD *)(v2 - 224);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 432) + 8))(v3, *(_QWORD *)(v2 - 424));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 14;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C35A200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 15;
  sub_21C35B58C();
  v3 = *(_QWORD *)(v2 - 216);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 416) + 8))(v3, *(_QWORD *)(v2 - 408));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 15;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C35A288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 16;
  sub_21C35B548();
  v3 = *(_QWORD *)(v2 - 208);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 400) + 8))(v3, *(_QWORD *)(v2 - 392));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 16;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C35A310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 17;
  sub_21C35B504();
  v3 = *(_QWORD *)(v2 - 200);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 384) + 8))(v3, *(_QWORD *)(v2 - 376));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 17;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C35A398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 65) = 18;
  sub_21C35B4C0();
  v3 = *(_QWORD *)(v2 - 184);
  v4 = v0;
  v5 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (v5)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x21C359A54);
  }
  v6 = *(_QWORD *)(v2 - 344);
  sub_21C3A855C();
  v7 = *(_QWORD *)(v2 - 96);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 360) + 8))(v3, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v4);
  JUMPOUT(0x21C35A710);
}

void sub_21C35A3F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 19;
  sub_21C35B47C();
  v3 = *(_QWORD *)(v2 - 192);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 368) + 8))(v3, *(_QWORD *)(v2 - 352));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 18;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C35A47C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v2 - 65) = 20;
  sub_21C35B438();
  v3 = *(_QWORD *)(v2 - 176);
  v4 = *(_QWORD *)(v2 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 336) + 8))(v3, *(_QWORD *)(v2 - 328));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
    v5 = *(_QWORD **)(v2 - 160);
    *v5 = 0;
    v5[1] = 19;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C35A504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v3 - 65) = 21;
  sub_21C35B3F4();
  v4 = *(_QWORD *)(v3 - 648);
  sub_21C3A8514();
  if (!v4)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 320) + 8))(v0, *(_QWORD *)(v3 - 312));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v2, v1);
    v5 = *(_QWORD **)(v3 - 160);
    *v5 = 0;
    v5[1] = 20;
    JUMPOUT(0x21C359A5CLL);
  }
  JUMPOUT(0x21C359A3CLL);
}

void sub_21C35A588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 65) = 22;
  sub_21C35B3B0();
  v4 = *(_QWORD *)(v3 - 168);
  v5 = *(_QWORD *)(v3 - 648);
  sub_21C3A8514();
  if (v5)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v2, v0);
    JUMPOUT(0x21C359A5CLL);
  }
  (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v4, *(_QWORD *)(v3 - 304));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v2, v0);
  JUMPOUT(0x21C35A718);
}

uint64_t sub_21C35A720@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IdentityReaderErrorInternal.Code.init(from:)(a1, a2);
}

uint64_t sub_21C35A734(_QWORD *a1)
{
  return IdentityReaderErrorInternal.Code.encode(to:)(a1);
}

uint64_t sub_21C35A748()
{
  sub_21C3A8700();
  IdentityReaderErrorInternal.Code.hash(into:)();
  return sub_21C3A8724();
}

uint64_t sub_21C35A794()
{
  sub_21C3A8700();
  IdentityReaderErrorInternal.Code.hash(into:)();
  return sub_21C3A8724();
}

uint64_t IdentityReaderErrorInternal.code.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_21C32C9A0(v2, v3);
}

uint64_t IdentityReaderErrorInternal.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 IdentityReaderErrorInternal.init(code:debugDescription:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result;

  result = *a1;
  *a4 = *a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  return result;
}

uint64_t IdentityReaderErrorInternal.init(_bridgedNSError:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t result;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  __int128 v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;

  v4 = objc_msgSend(a1, sel_domain);
  v5 = sub_21C3A7ED8();
  v7 = v6;

  sub_21C35B9CC();
  if (v5 == sub_21C3A74A0() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      goto LABEL_15;
  }
  v12 = objc_msgSend(a1, sel_userInfo);
  v13 = sub_21C3A7E48();

  if (!*(_QWORD *)(v13 + 16) || (v14 = sub_21C2DC178(0xD000000000000032, 0x800000021C3BC420), (v15 & 1) == 0))
  {
    v27 = 0u;
    v28 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_21C2D77EC(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)&v27);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v28 + 1))
  {
LABEL_14:
    result = sub_21C2D775C((uint64_t)&v27, &qword_25525B110);
    goto LABEL_15;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_15:
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    a2[3] = 1;
    return result;
  }
  sub_21C3A75A8();
  swift_allocObject();
  sub_21C3A759C();
  sub_21C35BA10();
  sub_21C3A7590();
  swift_release();
  v16 = v27;
  v17 = objc_msgSend(a1, sel_code);
  if (*((_QWORD *)&v16 + 1) > 0x15uLL)
    v18 = 14;
  else
    v18 = qword_21C3B33E0[*((_QWORD *)&v16 + 1)];
  if (v17 != (id)v18)
  {
    sub_21C32C98C(v16, *((unint64_t *)&v16 + 1));
    result = sub_21C2D2B48(v25, v26);
    goto LABEL_15;
  }
  v19 = objc_msgSend(a1, sel_userInfo);
  v20 = sub_21C3A7E48();

  if (*(_QWORD *)(v20 + 16) && (v21 = sub_21C2DC178(0xD00000000000003ELL, 0x800000021C3BC460), (v22 & 1) != 0))
  {
    sub_21C2D77EC(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_21C2D2B48(v25, v26);
  if (*((_QWORD *)&v28 + 1))
  {
    result = swift_dynamicCast();
    v23 = v25;
    v24 = v26;
    if (!(_DWORD)result)
    {
      v23 = 0;
      v24 = 0;
    }
  }
  else
  {
    result = sub_21C2D775C((uint64_t)&v27, &qword_25525B110);
    v23 = 0;
    v24 = 0;
  }
  *(_OWORD *)a2 = v16;
  a2[2] = v23;
  a2[3] = v24;
  return result;
}

uint64_t sub_21C35AB94()
{
  sub_21C35B9CC();
  return sub_21C3A86AC();
}

uint64_t sub_21C35ABBC()
{
  sub_21C35B9CC();
  return sub_21C3A86A0();
}

uint64_t IdentityReaderErrorInternal.errorCode.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 > 0x15)
    return 14;
  else
    return qword_21C3B33E0[v1];
}

uint64_t IdentityReaderErrorInternal.errorUserInfo.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = MEMORY[0x24BEE4B00];
  v16 = MEMORY[0x24BEE4B00];
  sub_21C3A75CC();
  swift_allocObject();
  sub_21C3A75C0();
  sub_21C32C9A0(v1, v2);
  sub_21C35BA54();
  v8 = sub_21C3A75B4();
  v10 = v9;
  sub_21C32C98C(v1, v2);
  swift_release();
  v15 = MEMORY[0x24BDCDDE8];
  *(_QWORD *)&v14 = v8;
  *((_QWORD *)&v14 + 1) = v10;
  sub_21C2D7828(&v14, v13);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21C2F814C(v13, 0xD000000000000032, 0x800000021C3BC420, isUniquelyReferenced_nonNull_native);
  v16 = v5;
  swift_bridgeObjectRelease();
  if (v3)
  {
    v15 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v14 = v4;
    *((_QWORD *)&v14 + 1) = v3;
    sub_21C2D7828(&v14, v13);
    swift_bridgeObjectRetain();
    v6 = v16;
    v7 = swift_isUniquelyReferenced_nonNull_native();
    sub_21C2F814C(v13, 0xD00000000000003ELL, 0x800000021C3BC460, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21C2F7B48(0xD00000000000003ELL, 0x800000021C3BC460, &v14);
    sub_21C2D775C((uint64_t)&v14, &qword_25525B110);
    return v16;
  }
  return v6;
}

uint64_t sub_21C35AE28()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 > 0x15)
    return 14;
  else
    return qword_21C3B33E0[v1];
}

unint64_t IdentityReaderErrorInternal.description.getter()
{
  uint64_t v0;
  unint64_t result;

  result = 0xD000000000000010;
  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
      result = 0x6E776F6E6B6E75;
      break;
    case 1:
      result = 0x776F6C6C41746F6ELL;
      break;
    case 2:
      result = 0x656C6C65636E6163;
      break;
    case 3:
      result = 0x456B726F7774656ELL;
      break;
    case 4:
    case 5:
      result = 0x5264696C61766E69;
      break;
    case 6:
      result = 0x5464696C61766E69;
      break;
    case 7:
      result = 0x75426D6574737973;
      break;
    case 8:
      result = 0x626173694463666ELL;
      break;
    case 9:
      result = 0x687265764F63666ELL;
      break;
    case 0xALL:
      result = 0xD00000000000001BLL;
      break;
    case 0xBLL:
      result = 0xD000000000000011;
      break;
    case 0xCLL:
      result = 0xD00000000000001CLL;
      break;
    case 0xDLL:
    case 0xFLL:
      return result;
    case 0xELL:
      result = 0x6F70707553746F6ELL;
      break;
    case 0x10:
      result = 0xD000000000000015;
      break;
    case 0x11:
      result = 0x6954726564616572;
      break;
    case 0x12:
      result = 0x456E6F6973736573;
      break;
    case 0x13:
      result = 0xD000000000000012;
      break;
    case 0x14:
      result = 0xD000000000000015;
      break;
    case 0x15:
      result = 0xD00000000000001BLL;
      break;
    default:
      result = 0xD000000000000024;
      break;
  }
  return result;
}

unint64_t sub_21C35B0AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25525E868;
  if (!qword_25525E868)
  {
    v1 = sub_21C3A7A1C();
    result = MEMORY[0x22077AECC](MEMORY[0x24BE1C038], v1);
    atomic_store(result, (unint64_t *)&qword_25525E868);
  }
  return result;
}

uint64_t _s15ProximityReader08IdentityB13ErrorInternalV4CodeO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5)
        goto LABEL_52;
      v3 = 0;
      v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1)
        goto LABEL_52;
      v3 = 1;
      v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2)
        goto LABEL_52;
      v6 = 1;
      v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3)
        goto LABEL_52;
      v6 = 1;
      v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4)
        goto LABEL_52;
      v6 = 1;
      v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5)
        goto LABEL_52;
      v6 = 1;
      v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6)
        goto LABEL_52;
      v6 = 1;
      v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7)
        goto LABEL_52;
      v6 = 1;
      v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8)
        goto LABEL_52;
      v6 = 1;
      v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9)
        goto LABEL_52;
      v6 = 1;
      v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10)
        goto LABEL_52;
      v6 = 1;
      v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11)
        goto LABEL_52;
      v6 = 1;
      v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12)
        goto LABEL_52;
      v6 = 1;
      v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13)
        goto LABEL_52;
      v6 = 1;
      v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14)
        goto LABEL_52;
      v6 = 1;
      v3 = 14;
      break;
    case 0xFuLL:
      if (v5 != 15)
        goto LABEL_52;
      v6 = 1;
      v3 = 15;
      break;
    case 0x10uLL:
      if (v5 != 16)
        goto LABEL_52;
      v6 = 1;
      v3 = 16;
      break;
    case 0x11uLL:
      if (v5 != 17)
        goto LABEL_52;
      v6 = 1;
      v3 = 17;
      break;
    case 0x12uLL:
      if (v5 != 18)
        goto LABEL_52;
      v6 = 1;
      v3 = 18;
      break;
    case 0x13uLL:
      if (v5 != 19)
        goto LABEL_52;
      v6 = 1;
      v3 = 19;
      break;
    case 0x14uLL:
      if (v5 != 20)
        goto LABEL_52;
      v6 = 1;
      v3 = 20;
      break;
    case 0x15uLL:
      if (v5 != 21)
        goto LABEL_52;
      v6 = 1;
      v3 = 21;
      break;
    default:
      if (v5 < 0x16)
      {
LABEL_52:
        v6 = 0;
      }
      else if (v2 == v4 && v3 == v5)
      {
        v6 = 1;
      }
      else
      {
        v6 = sub_21C3A864C();
      }
      sub_21C32C9A0(v4, v5);
      sub_21C32C9A0(v2, v3);
      break;
  }
  sub_21C32C98C(v2, v3);
  sub_21C32C98C(v4, v5);
  return v6 & 1;
}

unint64_t sub_21C35B36C()
{
  unint64_t result;

  result = qword_25525E930;
  if (!qword_25525E930)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B3378, &type metadata for IdentityReaderErrorInternal.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E930);
  }
  return result;
}

unint64_t sub_21C35B3B0()
{
  unint64_t result;

  result = qword_25525E938;
  if (!qword_25525E938)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B3328, &type metadata for IdentityReaderErrorInternal.Code.ContinuityDisplayNotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E938);
  }
  return result;
}

unint64_t sub_21C35B3F4()
{
  unint64_t result;

  result = qword_25525E940;
  if (!qword_25525E940)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B32D8, &type metadata for IdentityReaderErrorInternal.Code.OsVersionNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E940);
  }
  return result;
}

unint64_t sub_21C35B438()
{
  unint64_t result;

  result = qword_25525E948;
  if (!qword_25525E948)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B3288, &type metadata for IdentityReaderErrorInternal.Code.ServiceUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E948);
  }
  return result;
}

unint64_t sub_21C35B47C()
{
  unint64_t result;

  result = qword_25525E950;
  if (!qword_25525E950)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B3238, &type metadata for IdentityReaderErrorInternal.Code.SessionExpiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E950);
  }
  return result;
}

unint64_t sub_21C35B4C0()
{
  unint64_t result;

  result = qword_25525E958;
  if (!qword_25525E958)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B31E8, &type metadata for IdentityReaderErrorInternal.Code.TermsAndConditionsAcceptanceRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E958);
  }
  return result;
}

unint64_t sub_21C35B504()
{
  unint64_t result;

  result = qword_25525E960;
  if (!qword_25525E960)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B3198, &type metadata for IdentityReaderErrorInternal.Code.ReaderTimeoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E960);
  }
  return result;
}

unint64_t sub_21C35B548()
{
  unint64_t result;

  result = qword_25525E968;
  if (!qword_25525E968)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B3148, &type metadata for IdentityReaderErrorInternal.Code.ReaderConnectionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E968);
  }
  return result;
}

unint64_t sub_21C35B58C()
{
  unint64_t result;

  result = qword_25525E970;
  if (!qword_25525E970)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B30F8, &type metadata for IdentityReaderErrorInternal.Code.PasscodeDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E970);
  }
  return result;
}

unint64_t sub_21C35B5D0()
{
  unint64_t result;

  result = qword_25525E978;
  if (!qword_25525E978)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B30A8, &type metadata for IdentityReaderErrorInternal.Code.NotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E978);
  }
  return result;
}

unint64_t sub_21C35B614()
{
  unint64_t result;

  result = qword_25525E980;
  if (!qword_25525E980)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B3058, &type metadata for IdentityReaderErrorInternal.Code.AccountSignedOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E980);
  }
  return result;
}

unint64_t sub_21C35B658()
{
  unint64_t result;

  result = qword_25525E988;
  if (!qword_25525E988)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B3008, &type metadata for IdentityReaderErrorInternal.Code.AccountTwoFactorAuthRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E988);
  }
  return result;
}

unint64_t sub_21C35B69C()
{
  unint64_t result;

  result = qword_25525E990;
  if (!qword_25525E990)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2FB8, &type metadata for IdentityReaderErrorInternal.Code.BluetoothDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E990);
  }
  return result;
}

unint64_t sub_21C35B6E0()
{
  unint64_t result;

  result = qword_25525E998;
  if (!qword_25525E998)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2F68, &type metadata for IdentityReaderErrorInternal.Code.NfcNegotiatedHandoverFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E998);
  }
  return result;
}

unint64_t sub_21C35B724()
{
  unint64_t result;

  result = qword_25525E9A0;
  if (!qword_25525E9A0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2F18, &type metadata for IdentityReaderErrorInternal.Code.NfcOverheatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E9A0);
  }
  return result;
}

unint64_t sub_21C35B768()
{
  unint64_t result;

  result = qword_25525E9A8;
  if (!qword_25525E9A8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2EC8, &type metadata for IdentityReaderErrorInternal.Code.NfcDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E9A8);
  }
  return result;
}

unint64_t sub_21C35B7AC()
{
  unint64_t result;

  result = qword_25525E9B0;
  if (!qword_25525E9B0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2E78, &type metadata for IdentityReaderErrorInternal.Code.SystemBusyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E9B0);
  }
  return result;
}

unint64_t sub_21C35B7F0()
{
  unint64_t result;

  result = qword_25525E9B8;
  if (!qword_25525E9B8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2E28, &type metadata for IdentityReaderErrorInternal.Code.InvalidTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E9B8);
  }
  return result;
}

unint64_t sub_21C35B834()
{
  unint64_t result;

  result = qword_25525E9C0;
  if (!qword_25525E9C0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2DD8, &type metadata for IdentityReaderErrorInternal.Code.InvalidResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E9C0);
  }
  return result;
}

unint64_t sub_21C35B878()
{
  unint64_t result;

  result = qword_25525E9C8;
  if (!qword_25525E9C8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2D88, &type metadata for IdentityReaderErrorInternal.Code.InvalidRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E9C8);
  }
  return result;
}

unint64_t sub_21C35B8BC()
{
  unint64_t result;

  result = qword_25525E9D0;
  if (!qword_25525E9D0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2D38, &type metadata for IdentityReaderErrorInternal.Code.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E9D0);
  }
  return result;
}

unint64_t sub_21C35B900()
{
  unint64_t result;

  result = qword_25525E9D8;
  if (!qword_25525E9D8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2CE8, &type metadata for IdentityReaderErrorInternal.Code.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E9D8);
  }
  return result;
}

unint64_t sub_21C35B944()
{
  unint64_t result;

  result = qword_25525E9E0;
  if (!qword_25525E9E0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2C98, &type metadata for IdentityReaderErrorInternal.Code.NotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E9E0);
  }
  return result;
}

unint64_t sub_21C35B988()
{
  unint64_t result;

  result = qword_25525E9E8;
  if (!qword_25525E9E8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2C48, &type metadata for IdentityReaderErrorInternal.Code.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525E9E8);
  }
  return result;
}

unint64_t sub_21C35B9CC()
{
  unint64_t result;

  result = qword_25525EAB0;
  if (!qword_25525EAB0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityReaderErrorInternal, &type metadata for IdentityReaderErrorInternal);
    atomic_store(result, (unint64_t *)&qword_25525EAB0);
  }
  return result;
}

unint64_t sub_21C35BA10()
{
  unint64_t result;

  result = qword_25525EAB8;
  if (!qword_25525EAB8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityReaderErrorInternal.Code, &type metadata for IdentityReaderErrorInternal.Code);
    atomic_store(result, (unint64_t *)&qword_25525EAB8);
  }
  return result;
}

unint64_t sub_21C35BA54()
{
  unint64_t result;

  result = qword_25525EAC0;
  if (!qword_25525EAC0)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityReaderErrorInternal.Code, &type metadata for IdentityReaderErrorInternal.Code);
    atomic_store(result, (unint64_t *)&qword_25525EAC0);
  }
  return result;
}

unint64_t sub_21C35BA9C()
{
  unint64_t result;

  result = qword_25525EAC8;
  if (!qword_25525EAC8)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for IdentityReaderErrorInternal.Code, &type metadata for IdentityReaderErrorInternal.Code);
    atomic_store(result, (unint64_t *)&qword_25525EAC8);
  }
  return result;
}

uint64_t destroy for IdentityReaderErrorInternal(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) >= 0x16uLL)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for IdentityReaderErrorInternal(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  if (v4 >= 0x16)
  {
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IdentityReaderErrorInternal(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] >= 0x16uLL)
  {
    if (v4 >= 0x16)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_21C2D775C((uint64_t)a1, &qword_25525EAD0);
    goto LABEL_6;
  }
  if (v4 < 0x16)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for IdentityReaderErrorInternal(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;

  if (a1[1] >= 0x16uLL)
  {
    v4 = a2[1];
    if (v4 >= 0x16)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_21C2D775C((uint64_t)a1, &qword_25525EAD0);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityReaderErrorInternal(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityReaderErrorInternal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal()
{
  return &type metadata for IdentityReaderErrorInternal;
}

unint64_t destroy for IdentityReaderErrorInternal.Code(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s15ProximityReader27IdentityReaderErrorInternalV4CodeOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for IdentityReaderErrorInternal.Code(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IdentityReaderErrorInternal.Code(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityReaderErrorInternal.Code(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFE9 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483626);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 21;
  if (v4 >= 0x17)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for IdentityReaderErrorInternal.Code(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEA)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483626;
    if (a3 >= 0x7FFFFFEA)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFEA)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 21;
  }
  return result;
}

uint64_t sub_21C35BF64(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_21C35BF7C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code()
{
  return &type metadata for IdentityReaderErrorInternal.Code;
}

uint64_t getEnumTagSinglePayload for IdentityReaderErrorInternal.Code.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 22;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 22;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 22;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityReaderErrorInternal.Code.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_21C35C088 + 4 * byte_21C3B1E99[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_21C35C0BC + 4 * byte_21C3B1E94[v4]))();
}

uint64_t sub_21C35C0BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C35C0C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C35C0CCLL);
  return result;
}

uint64_t sub_21C35C0D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C35C0E0);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_21C35C0E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C35C0EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.CodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.CodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.UnknownCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NotAllowedCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NotAllowedCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.CancelledCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.CancelledCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NetworkErrorCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NetworkErrorCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.InvalidRequestCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.InvalidRequestCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.InvalidResponseCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.InvalidResponseCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.InvalidTokenCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.InvalidTokenCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.SystemBusyCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.SystemBusyCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NfcDisabledCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NfcDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NfcOverheatCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NfcOverheatCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NfcNegotiatedHandoverFailedCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NfcNegotiatedHandoverFailedCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.BluetoothDisabledCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.BluetoothDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.AccountTwoFactorAuthRequiredCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.AccountTwoFactorAuthRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.AccountSignedOutCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.AccountSignedOutCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.NotSupportedCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.NotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.PasscodeDisabledCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.PasscodeDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.ReaderConnectionErrorCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.ReaderConnectionErrorCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.ReaderTimeoutCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.ReaderTimeoutCodingKeys;
}

uint64_t storeEnumTagSinglePayload for IdentityReaderErrorInternal.Code.TermsAndConditionsAcceptanceRequiredCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21C35C268 + 4 * byte_21C3B1E9E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21C35C288 + 4 * byte_21C3B1EA3[v4]))();
}

_BYTE *sub_21C35C268(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21C35C288(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C35C290(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C35C298(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21C35C2A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21C35C2A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.TermsAndConditionsAcceptanceRequiredCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.TermsAndConditionsAcceptanceRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.SessionExpiredCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.SessionExpiredCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.ServiceUnavailableCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.ServiceUnavailableCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.OsVersionNotSupportedCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.OsVersionNotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for IdentityReaderErrorInternal.Code.ContinuityDisplayNotAllowedCodingKeys()
{
  return &type metadata for IdentityReaderErrorInternal.Code.ContinuityDisplayNotAllowedCodingKeys;
}

unint64_t sub_21C35C308()
{
  unint64_t result;

  result = qword_25525EAD8;
  if (!qword_25525EAD8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B25C8, &type metadata for IdentityReaderErrorInternal.Code.TermsAndConditionsAcceptanceRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EAD8);
  }
  return result;
}

unint64_t sub_21C35C350()
{
  unint64_t result;

  result = qword_25525EAE0;
  if (!qword_25525EAE0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2C20, &type metadata for IdentityReaderErrorInternal.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EAE0);
  }
  return result;
}

unint64_t sub_21C35C398()
{
  unint64_t result;

  result = qword_25525EAE8;
  if (!qword_25525EAE8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2B40, &type metadata for IdentityReaderErrorInternal.Code.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EAE8);
  }
  return result;
}

unint64_t sub_21C35C3E0()
{
  unint64_t result;

  result = qword_25525EAF0;
  if (!qword_25525EAF0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2B68, &type metadata for IdentityReaderErrorInternal.Code.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EAF0);
  }
  return result;
}

unint64_t sub_21C35C428()
{
  unint64_t result;

  result = qword_25525EAF8;
  if (!qword_25525EAF8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2AF0, &type metadata for IdentityReaderErrorInternal.Code.NotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EAF8);
  }
  return result;
}

unint64_t sub_21C35C470()
{
  unint64_t result;

  result = qword_25525EB00;
  if (!qword_25525EB00)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2B18, &type metadata for IdentityReaderErrorInternal.Code.NotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB00);
  }
  return result;
}

unint64_t sub_21C35C4B8()
{
  unint64_t result;

  result = qword_25525EB08;
  if (!qword_25525EB08)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2AA0, &type metadata for IdentityReaderErrorInternal.Code.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB08);
  }
  return result;
}

unint64_t sub_21C35C500()
{
  unint64_t result;

  result = qword_25525EB10;
  if (!qword_25525EB10)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2AC8, &type metadata for IdentityReaderErrorInternal.Code.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB10);
  }
  return result;
}

unint64_t sub_21C35C548()
{
  unint64_t result;

  result = qword_25525EB18;
  if (!qword_25525EB18)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2A50, &type metadata for IdentityReaderErrorInternal.Code.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB18);
  }
  return result;
}

unint64_t sub_21C35C590()
{
  unint64_t result;

  result = qword_25525EB20;
  if (!qword_25525EB20)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2A78, &type metadata for IdentityReaderErrorInternal.Code.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB20);
  }
  return result;
}

unint64_t sub_21C35C5D8()
{
  unint64_t result;

  result = qword_25525EB28;
  if (!qword_25525EB28)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2A00, &type metadata for IdentityReaderErrorInternal.Code.InvalidRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB28);
  }
  return result;
}

unint64_t sub_21C35C620()
{
  unint64_t result;

  result = qword_25525EB30;
  if (!qword_25525EB30)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2A28, &type metadata for IdentityReaderErrorInternal.Code.InvalidRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB30);
  }
  return result;
}

unint64_t sub_21C35C668()
{
  unint64_t result;

  result = qword_25525EB38;
  if (!qword_25525EB38)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B29B0, &type metadata for IdentityReaderErrorInternal.Code.InvalidResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB38);
  }
  return result;
}

unint64_t sub_21C35C6B0()
{
  unint64_t result;

  result = qword_25525EB40;
  if (!qword_25525EB40)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B29D8, &type metadata for IdentityReaderErrorInternal.Code.InvalidResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB40);
  }
  return result;
}

unint64_t sub_21C35C6F8()
{
  unint64_t result;

  result = qword_25525EB48;
  if (!qword_25525EB48)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2960, &type metadata for IdentityReaderErrorInternal.Code.InvalidTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB48);
  }
  return result;
}

unint64_t sub_21C35C740()
{
  unint64_t result;

  result = qword_25525EB50;
  if (!qword_25525EB50)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2988, &type metadata for IdentityReaderErrorInternal.Code.InvalidTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB50);
  }
  return result;
}

unint64_t sub_21C35C788()
{
  unint64_t result;

  result = qword_25525EB58;
  if (!qword_25525EB58)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2910, &type metadata for IdentityReaderErrorInternal.Code.SystemBusyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB58);
  }
  return result;
}

unint64_t sub_21C35C7D0()
{
  unint64_t result;

  result = qword_25525EB60;
  if (!qword_25525EB60)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2938, &type metadata for IdentityReaderErrorInternal.Code.SystemBusyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB60);
  }
  return result;
}

unint64_t sub_21C35C818()
{
  unint64_t result;

  result = qword_25525EB68;
  if (!qword_25525EB68)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B28C0, &type metadata for IdentityReaderErrorInternal.Code.NfcDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB68);
  }
  return result;
}

unint64_t sub_21C35C860()
{
  unint64_t result;

  result = qword_25525EB70;
  if (!qword_25525EB70)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B28E8, &type metadata for IdentityReaderErrorInternal.Code.NfcDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB70);
  }
  return result;
}

unint64_t sub_21C35C8A8()
{
  unint64_t result;

  result = qword_25525EB78;
  if (!qword_25525EB78)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2870, &type metadata for IdentityReaderErrorInternal.Code.NfcOverheatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB78);
  }
  return result;
}

unint64_t sub_21C35C8F0()
{
  unint64_t result;

  result = qword_25525EB80;
  if (!qword_25525EB80)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2898, &type metadata for IdentityReaderErrorInternal.Code.NfcOverheatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB80);
  }
  return result;
}

unint64_t sub_21C35C938()
{
  unint64_t result;

  result = qword_25525EB88;
  if (!qword_25525EB88)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2820, &type metadata for IdentityReaderErrorInternal.Code.NfcNegotiatedHandoverFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB88);
  }
  return result;
}

unint64_t sub_21C35C980()
{
  unint64_t result;

  result = qword_25525EB90;
  if (!qword_25525EB90)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2848, &type metadata for IdentityReaderErrorInternal.Code.NfcNegotiatedHandoverFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB90);
  }
  return result;
}

unint64_t sub_21C35C9C8()
{
  unint64_t result;

  result = qword_25525EB98;
  if (!qword_25525EB98)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B27D0, &type metadata for IdentityReaderErrorInternal.Code.BluetoothDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EB98);
  }
  return result;
}

unint64_t sub_21C35CA10()
{
  unint64_t result;

  result = qword_25525EBA0;
  if (!qword_25525EBA0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B27F8, &type metadata for IdentityReaderErrorInternal.Code.BluetoothDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBA0);
  }
  return result;
}

unint64_t sub_21C35CA58()
{
  unint64_t result;

  result = qword_25525EBA8;
  if (!qword_25525EBA8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2780, &type metadata for IdentityReaderErrorInternal.Code.AccountTwoFactorAuthRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBA8);
  }
  return result;
}

unint64_t sub_21C35CAA0()
{
  unint64_t result;

  result = qword_25525EBB0;
  if (!qword_25525EBB0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B27A8, &type metadata for IdentityReaderErrorInternal.Code.AccountTwoFactorAuthRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBB0);
  }
  return result;
}

unint64_t sub_21C35CAE8()
{
  unint64_t result;

  result = qword_25525EBB8;
  if (!qword_25525EBB8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2730, &type metadata for IdentityReaderErrorInternal.Code.AccountSignedOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBB8);
  }
  return result;
}

unint64_t sub_21C35CB30()
{
  unint64_t result;

  result = qword_25525EBC0;
  if (!qword_25525EBC0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2758, &type metadata for IdentityReaderErrorInternal.Code.AccountSignedOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBC0);
  }
  return result;
}

unint64_t sub_21C35CB78()
{
  unint64_t result;

  result = qword_25525EBC8;
  if (!qword_25525EBC8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B26E0, &type metadata for IdentityReaderErrorInternal.Code.NotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBC8);
  }
  return result;
}

unint64_t sub_21C35CBC0()
{
  unint64_t result;

  result = qword_25525EBD0;
  if (!qword_25525EBD0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2708, &type metadata for IdentityReaderErrorInternal.Code.NotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBD0);
  }
  return result;
}

unint64_t sub_21C35CC08()
{
  unint64_t result;

  result = qword_25525EBD8;
  if (!qword_25525EBD8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2690, &type metadata for IdentityReaderErrorInternal.Code.PasscodeDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBD8);
  }
  return result;
}

unint64_t sub_21C35CC50()
{
  unint64_t result;

  result = qword_25525EBE0;
  if (!qword_25525EBE0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B26B8, &type metadata for IdentityReaderErrorInternal.Code.PasscodeDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBE0);
  }
  return result;
}

unint64_t sub_21C35CC98()
{
  unint64_t result;

  result = qword_25525EBE8;
  if (!qword_25525EBE8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2640, &type metadata for IdentityReaderErrorInternal.Code.ReaderConnectionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBE8);
  }
  return result;
}

unint64_t sub_21C35CCE0()
{
  unint64_t result;

  result = qword_25525EBF0;
  if (!qword_25525EBF0)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2668, &type metadata for IdentityReaderErrorInternal.Code.ReaderConnectionErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBF0);
  }
  return result;
}

unint64_t sub_21C35CD28()
{
  unint64_t result;

  result = qword_25525EBF8;
  if (!qword_25525EBF8)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B25F0, &type metadata for IdentityReaderErrorInternal.Code.ReaderTimeoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EBF8);
  }
  return result;
}

unint64_t sub_21C35CD70()
{
  unint64_t result;

  result = qword_25525EC00;
  if (!qword_25525EC00)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2618, &type metadata for IdentityReaderErrorInternal.Code.ReaderTimeoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC00);
  }
  return result;
}

unint64_t sub_21C35CDB8()
{
  unint64_t result;

  result = qword_25525EC08;
  if (!qword_25525EC08)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2538, &type metadata for IdentityReaderErrorInternal.Code.TermsAndConditionsAcceptanceRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC08);
  }
  return result;
}

unint64_t sub_21C35CE00()
{
  unint64_t result;

  result = qword_25525EC10;
  if (!qword_25525EC10)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2560, &type metadata for IdentityReaderErrorInternal.Code.TermsAndConditionsAcceptanceRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC10);
  }
  return result;
}

unint64_t sub_21C35CE48()
{
  unint64_t result;

  result = qword_25525EC18;
  if (!qword_25525EC18)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B24E8, &type metadata for IdentityReaderErrorInternal.Code.SessionExpiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC18);
  }
  return result;
}

unint64_t sub_21C35CE90()
{
  unint64_t result;

  result = qword_25525EC20;
  if (!qword_25525EC20)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2510, &type metadata for IdentityReaderErrorInternal.Code.SessionExpiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC20);
  }
  return result;
}

unint64_t sub_21C35CED8()
{
  unint64_t result;

  result = qword_25525EC28;
  if (!qword_25525EC28)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2498, &type metadata for IdentityReaderErrorInternal.Code.ServiceUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC28);
  }
  return result;
}

unint64_t sub_21C35CF20()
{
  unint64_t result;

  result = qword_25525EC30;
  if (!qword_25525EC30)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B24C0, &type metadata for IdentityReaderErrorInternal.Code.ServiceUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC30);
  }
  return result;
}

unint64_t sub_21C35CF68()
{
  unint64_t result;

  result = qword_25525EC38;
  if (!qword_25525EC38)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2448, &type metadata for IdentityReaderErrorInternal.Code.OsVersionNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC38);
  }
  return result;
}

unint64_t sub_21C35CFB0()
{
  unint64_t result;

  result = qword_25525EC40;
  if (!qword_25525EC40)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2470, &type metadata for IdentityReaderErrorInternal.Code.OsVersionNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC40);
  }
  return result;
}

unint64_t sub_21C35CFF8()
{
  unint64_t result;

  result = qword_25525EC48;
  if (!qword_25525EC48)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B23F8, &type metadata for IdentityReaderErrorInternal.Code.ContinuityDisplayNotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC48);
  }
  return result;
}

unint64_t sub_21C35D040()
{
  unint64_t result;

  result = qword_25525EC50;
  if (!qword_25525EC50)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2420, &type metadata for IdentityReaderErrorInternal.Code.ContinuityDisplayNotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC50);
  }
  return result;
}

unint64_t sub_21C35D088()
{
  unint64_t result;

  result = qword_25525EC58;
  if (!qword_25525EC58)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2B90, &type metadata for IdentityReaderErrorInternal.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC58);
  }
  return result;
}

unint64_t sub_21C35D0D0()
{
  unint64_t result;

  result = qword_25525EC60;
  if (!qword_25525EC60)
  {
    result = MEMORY[0x22077AECC](&unk_21C3B2BB8, &type metadata for IdentityReaderErrorInternal.Code.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25525EC60);
  }
  return result;
}

uint64_t sub_21C35D114(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x776F6C6C41746F6ELL && a2 == 0xEA00000000006465 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x456B726F7774656ELL && a2 == 0xEC000000726F7272 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5264696C61766E69 && a2 == 0xEE00747365757165 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5264696C61766E69 && a2 == 0xEF65736E6F707365 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5464696C61766E69 && a2 == 0xEC0000006E656B6FLL || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x75426D6574737973 && a2 == 0xEA00000000007973 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x626173694463666ELL && a2 == 0xEB0000000064656CLL || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x687265764F63666ELL && a2 == 0xEB00000000746165 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000021C3BC4C0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021C3BC570 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000021C3BC520 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021C3BC500 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6F70707553746F6ELL && a2 == 0xEC00000064657472 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021C3B9C10 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000021C3BACA0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6954726564616572 && a2 == 0xED000074756F656DLL || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x800000021C3BC540 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x456E6F6973736573 && a2 == 0xEE00646572697078 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000021C3BC4E0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000021C3B9BF0 || (sub_21C3A864C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000021C3BC4A0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else
  {
    v6 = sub_21C3A864C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 22;
    else
      return 23;
  }
}

ProximityReader::VASReadResult::ReadEntry::Status_optional __swiftcall VASReadResult.ReadEntry.Status.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;

  if (rawValue > 27263)
  {
    if (rawValue > 27391)
    {
      if (rawValue == 27392)
      {
        *v1 = 3;
        return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
      }
      if (rawValue == 36864)
      {
        *v1 = 0;
        return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
      }
    }
    else
    {
      if (rawValue == 27264)
      {
        *v1 = 6;
        return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
      }
      if (rawValue == 27267)
      {
        *v1 = 1;
        return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
      }
    }
LABEL_20:
    *v1 = 8;
    return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
  }
  if (rawValue > 26367)
  {
    if (rawValue == 26368)
    {
      *v1 = 4;
      return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
    }
    if (rawValue == 27012)
    {
      *v1 = 5;
      return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
    }
    goto LABEL_20;
  }
  if (rawValue == 25223)
  {
    *v1 = 2;
    return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
  }
  if (rawValue != 25408)
    goto LABEL_20;
  *v1 = 7;
  return (ProximityReader::VASReadResult::ReadEntry::Status_optional)rawValue;
}

uint64_t VASReadResult.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VASReadResult.entries.getter()
{
  return swift_bridgeObjectRetain();
}

ProximityReader::VASReadResult __swiftcall VASReadResult.init(id:entries:)(Swift::String id, Swift::OpaquePointer entries)
{
  uint64_t v2;
  ProximityReader::VASReadResult result;

  *(Swift::String *)v2 = id;
  *(Swift::OpaquePointer *)(v2 + 16) = entries;
  result.id = id;
  result.entries = entries;
  return result;
}

uint64_t VASReadResult.ReadEntry.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VASReadResult.ReadEntry.customerVASData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_21C2D1E80(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

void VASReadResult.ReadEntry.status.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t VASReadResult.ReadEntry.Status.rawValue.getter()
{
  char *v0;

  return qword_21C3B3608[*v0];
}

BOOL sub_21C35DC80(char *a1, char *a2)
{
  return qword_21C3B3608[*a1] == qword_21C3B3608[*a2];
}

unint64_t sub_21C35DCA8()
{
  unint64_t result;

  result = qword_25525EC68;
  if (!qword_25525EC68)
  {
    result = MEMORY[0x22077AECC](&protocol conformance descriptor for VASReadResult.ReadEntry.Status, &type metadata for VASReadResult.ReadEntry.Status);
    atomic_store(result, (unint64_t *)&qword_25525EC68);
  }
  return result;
}

uint64_t sub_21C35DCEC()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

uint64_t sub_21C35DD38()
{
  return sub_21C3A870C();
}

uint64_t sub_21C35DD6C()
{
  sub_21C3A8700();
  sub_21C3A870C();
  return sub_21C3A8724();
}

ProximityReader::VASReadResult::ReadEntry::Status_optional sub_21C35DDB4(Swift::Int *a1)
{
  return VASReadResult.ReadEntry.Status.init(rawValue:)(*a1);
}

void sub_21C35DDBC(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_21C3B3608[*v1];
}

uint64_t destroy for VASReadResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s15ProximityReader13VASReadResultVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VASReadResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for VASReadResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VASReadResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VASReadResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VASReadResult()
{
  return &type metadata for VASReadResult;
}

uint64_t destroy for VASReadResult.ReadEntry(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >> 60 != 15)
    return sub_21C2D2B48(*(_QWORD *)(a1 + 16), v3);
  return result;
}

uint64_t initializeWithCopy for VASReadResult.ReadEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_21C2D1E94(v7, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
  }
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for VASReadResult.ReadEntry(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_21C2D1E94(*v4, *(_QWORD *)(a2 + 24));
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 24) = v5;
      sub_21C2D2B48(v8, v9);
      goto LABEL_8;
    }
    sub_21C2EF04C(a1 + 16);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v6 = *v4;
  sub_21C2D1E94(*v4, *(_QWORD *)(a2 + 24));
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
LABEL_8:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for VASReadResult.ReadEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      v8 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = *v5;
      *(_QWORD *)(a1 + 24) = v7;
      sub_21C2D2B48(v8, v6);
      goto LABEL_6;
    }
    sub_21C2EF04C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
LABEL_6:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for VASReadResult.ReadEntry()
{
  return &type metadata for VASReadResult.ReadEntry;
}

uint64_t getEnumTagSinglePayload for VASReadResult.ReadEntry.Status(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VASReadResult.ReadEntry.Status(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_21C35E2A0 + 4 * byte_21C3B3495[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_21C35E2D4 + 4 * byte_21C3B3490[v4]))();
}

uint64_t sub_21C35E2D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C35E2DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C35E2E4);
  return result;
}

uint64_t sub_21C35E2F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C35E2F8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_21C35E2FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C35E304(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VASReadResult.ReadEntry.Status()
{
  return &type metadata for VASReadResult.ReadEntry.Status;
}

unint64_t static XPCServices.PaymentTerminalService.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static XPCServices.InternalClientService.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static XPCServices.IdentityService.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static XPCServices.DiscoveryService.getter()
{
  return 0xD00000000000001DLL;
}

ValueMetadata *type metadata accessor for XPCServices()
{
  return &type metadata for XPCServices;
}

uint64_t sub_21C35E3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](v0);
  v9[2] = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_21C3A744C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A747C();
  swift_allocObject();
  sub_21C3A7470();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCB358], v3);
  sub_21C3A7458();
  v7 = sub_21C3A7464();
  swift_release();
  return v7;
}

uint64_t sub_21C35E710@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, _QWORD, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25525EC88);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_21C3A7518();
  v18 = *(_QWORD *)(v2 - 8);
  v19 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C3A78F0();
  v16 = *(_QWORD *)(v5 - 8);
  v17 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A78D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525EC90);
  v8 = sub_21C3A78E4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21C3B3660;
  v13 = v12 + v11;
  v14 = *(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104);
  v14(v13, *MEMORY[0x24BDCF228], v8);
  v14(v13 + v10, *MEMORY[0x24BDCF240], v8);
  v14(v13 + 2 * v10, *MEMORY[0x24BDCF268], v8);
  v14(v13 + 3 * v10, *MEMORY[0x24BDCF250], v8);
  v14(v13 + 4 * v10, *MEMORY[0x24BDCF220], v8);
  sub_21C3794C8(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_21C3A78C0();
  swift_bridgeObjectRelease();
  sub_21C3A78FC();
  sub_21C3A750C();
  sub_21C3A78CC();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v7, v17);
}

uint64_t sub_21C35E994@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(unint64_t, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a1;
  v18 = sub_21C3A7518();
  v16 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21C3A78F0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C3A78D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525EC90);
  v7 = sub_21C3A78E4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_21C3B3670;
  v12 = v11 + v10;
  v13 = *(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104);
  v13(v12, *MEMORY[0x24BDCF228], v7);
  v13(v12 + v9, *MEMORY[0x24BDCF240], v7);
  v13(v12 + 2 * v9, *MEMORY[0x24BDCF268], v7);
  v13(v12 + 3 * v9, *MEMORY[0x24BDCF250], v7);
  v13(v12 + 4 * v9, *MEMORY[0x24BDCF220], v7);
  v13(v12 + 5 * v9, *MEMORY[0x24BDCF230], v7);
  sub_21C3794C8(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_21C3A78C0();
  swift_bridgeObjectRelease();
  sub_21C3A78CC();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_21C35EBD0(char a1)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  __int128 *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  __int128 *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t result;
  uint64_t v62[2];
  uint64_t v63;
  int64_t v64;
  int64_t v65;
  _QWORD v66[2];
  _OWORD v67[2];
  __int128 v68;
  uint64_t ObjectType;
  uint64_t v70;

  v70 = *MEMORY[0x24BDAC8D0];
  isUniquelyReferenced_nonNull_native = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25525B0E0);
  MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
  v4 = (__int128 *)((char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_21C3A7728();
  *(_QWORD *)&v68 = 0;
  v7 = objc_msgSend(v5, sel_JSONObjectWithData_options_error_, v6, 1, &v68);

  if (!v7)
  {
    v10 = (id)v68;
    v11 = sub_21C3A75FC();

    swift_willThrow();
    if (qword_25525AAE8 != -1)
LABEL_74:
      swift_once();
    v12 = __swift_project_value_buffer(isUniquelyReferenced_nonNull_native, (uint64_t)qword_255278F90);
    sub_21C2D1D80(v12, (uint64_t)v4);
    v13 = sub_21C3A79D4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
    {
      sub_21C2D1DC8((uint64_t)v4);
    }
    else
    {
      v58 = sub_21C3A79BC();
      v59 = sub_21C3A81D8();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v60 = 0;
        _os_log_impl(&dword_21C2CD000, v58, v59, "Error json->dictionary", v60, 2u);
        MEMORY[0x22077AF8C](v60, -1, -1);
      }

      (*(void (**)(__int128 *, uint64_t))(v14 + 8))(v4, v13);
    }
    v9 = (__int128 *)sub_21C2F5FE8(MEMORY[0x24BEE4AF8]);

    return (uint64_t)v9;
  }
  v8 = (id)v68;
  sub_21C3A8340();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25525EC70);
  if (swift_dynamicCast())
  {
    v62[0] = *(_QWORD *)&v67[0];
    if ((a1 & 1) == 0)
    {
LABEL_4:
      v9 = (__int128 *)sub_21C376FD0(v62[0]);
      swift_bridgeObjectRelease();
      return (uint64_t)v9;
    }
  }
  else
  {
    v62[0] = sub_21C2F6248(MEMORY[0x24BEE4AF8]);
    if ((a1 & 1) == 0)
      goto LABEL_4;
  }
  v9 = (__int128 *)sub_21C2F5FE8(MEMORY[0x24BEE4AF8]);
  v15 = 0;
  v16 = v62[0];
  v17 = *(_QWORD *)(v62[0] + 64);
  v63 = v62[0] + 64;
  v18 = 1 << *(_BYTE *)(v62[0] + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v11 = v19 & v17;
  v64 = (unint64_t)(v18 + 63) >> 6;
  v62[1] = MEMORY[0x24BEE4AD0] + 8;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v65 = v15;
      v21 = v20 | (v15 << 6);
    }
    else
    {
      v22 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_67;
      if (v22 >= v64)
      {
LABEL_60:
        swift_release();
        return (uint64_t)v9;
      }
      v23 = *(_QWORD *)(v63 + 8 * v22);
      v24 = v15 + 1;
      if (!v23)
      {
        v24 = v15 + 2;
        if (v15 + 2 >= v64)
          goto LABEL_60;
        v23 = *(_QWORD *)(v63 + 8 * v24);
        if (!v23)
        {
          v24 = v15 + 3;
          if (v15 + 3 >= v64)
            goto LABEL_60;
          v23 = *(_QWORD *)(v63 + 8 * v24);
          if (!v23)
          {
            v25 = v15 + 4;
            if (v15 + 4 >= v64)
              goto LABEL_60;
            v23 = *(_QWORD *)(v63 + 8 * v25);
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_73;
                if (v24 >= v64)
                  goto LABEL_60;
                v23 = *(_QWORD *)(v63 + 8 * v24);
                ++v25;
                if (v23)
                  goto LABEL_29;
              }
            }
            v24 = v15 + 4;
          }
        }
      }
LABEL_29:
      v11 = (v23 - 1) & v23;
      v65 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v21);
    v30 = sub_21C3A7E6C();
    isUniquelyReferenced_nonNull_native = v31;
    *(_QWORD *)&v68 = v30;
    *((_QWORD *)&v68 + 1) = v31;
    *(_QWORD *)&v67[0] = 0x6E656B6F74;
    *((_QWORD *)&v67[0] + 1) = 0xE500000000000000;
    sub_21C30E1A4();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v32 = sub_21C3A8328();
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
    {
      *(_QWORD *)&v67[0] = v29;
      swift_unknownObjectRetain();
      if ((swift_dynamicCast() & 1) != 0)
        break;
    }
    ObjectType = swift_getObjectType();
    *(_QWORD *)&v68 = v29;
    sub_21C2D7828(&v68, v67);
    swift_unknownObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v66[0] = v9;
    v4 = v9;
    v38 = sub_21C2DC178(v28, v27);
    v39 = *((_QWORD *)v9 + 2);
    v40 = (v37 & 1) == 0;
    v41 = v39 + v40;
    if (__OFADD__(v39, v40))
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v42 = v37;
    if (*((_QWORD *)v9 + 3) >= v41)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v9 = (__int128 *)v66[0];
        if ((v37 & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        v4 = (__int128 *)v66;
        sub_21C352898();
        v9 = (__int128 *)v66[0];
        if ((v42 & 1) != 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_21C351310(v41, isUniquelyReferenced_nonNull_native);
      v4 = (__int128 *)v66[0];
      v43 = sub_21C2DC178(v28, v27);
      if ((v42 & 1) != (v44 & 1))
        goto LABEL_75;
      v38 = v43;
      v9 = (__int128 *)v66[0];
      if ((v42 & 1) != 0)
      {
LABEL_12:
        v4 = (__int128 *)(*((_QWORD *)v9 + 7) + 32 * v38);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
        sub_21C2D7828(v67, v4);
        goto LABEL_13;
      }
    }
    *((_QWORD *)v9 + (v38 >> 6) + 8) |= 1 << v38;
    v45 = (uint64_t *)(*((_QWORD *)v9 + 6) + 16 * v38);
    *v45 = v28;
    v45[1] = v27;
    sub_21C2D7828(v67, (_OWORD *)(*((_QWORD *)v9 + 7) + 32 * v38));
    v46 = *((_QWORD *)v9 + 2);
    v47 = __OFADD__(v46, 1);
    v48 = v46 + 1;
    if (v47)
      goto LABEL_68;
LABEL_55:
    *((_QWORD *)v9 + 2) = v48;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v65;
  }
  v34 = *((_QWORD *)&v68 + 1);
  v33 = v68;
  *(_QWORD *)&v67[0] = 46;
  *((_QWORD *)&v67[0] + 1) = 0xE100000000000000;
  v4 = &v68;
  v35 = (_QWORD *)sub_21C3A8310();
  if (v35[2] < 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v68 = 0;
    *((_QWORD *)&v68 + 1) = 0xE000000000000000;
    sub_21C3A83DC();
    if (!v35[2])
      goto LABEL_70;
    v36 = v35[4];
    isUniquelyReferenced_nonNull_native = v35[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v68 = v36;
    *((_QWORD *)&v68 + 1) = isUniquelyReferenced_nonNull_native;
    v4 = &v68;
    sub_21C3A7F8C();
    if (v35[2] < 2uLL)
      goto LABEL_71;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    sub_21C3A7F8C();
    swift_bridgeObjectRelease();
    v34 = *((_QWORD *)&v68 + 1);
    v33 = v68;
  }
  ObjectType = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v68 = v33;
  *((_QWORD *)&v68 + 1) = v34;
  sub_21C2D7828(&v68, v67);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v66[0] = v9;
  v4 = v9;
  v38 = sub_21C2DC178(v28, v27);
  v50 = *((_QWORD *)v9 + 2);
  v51 = (v49 & 1) == 0;
  v52 = v50 + v51;
  if (__OFADD__(v50, v51))
    goto LABEL_69;
  v53 = v49;
  if (*((_QWORD *)v9 + 3) >= v52)
  {
    v16 = v62[0];
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v9 = (__int128 *)v66[0];
      if ((v49 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      v4 = (__int128 *)v66;
      sub_21C352898();
      v9 = (__int128 *)v66[0];
      if ((v53 & 1) != 0)
        goto LABEL_12;
    }
    goto LABEL_54;
  }
  sub_21C351310(v52, isUniquelyReferenced_nonNull_native);
  v4 = (__int128 *)v66[0];
  v54 = sub_21C2DC178(v28, v27);
  v16 = v62[0];
  if ((v53 & 1) == (v55 & 1))
  {
    v38 = v54;
    v9 = (__int128 *)v66[0];
    if ((v53 & 1) != 0)
      goto LABEL_12;
LABEL_54:
    *((_QWORD *)v9 + (v38 >> 6) + 8) |= 1 << v38;
    v56 = (uint64_t *)(*((_QWORD *)v9 + 6) + 16 * v38);
    *v56 = v28;
    v56[1] = v27;
    sub_21C2D7828(v67, (_OWORD *)(*((_QWORD *)v9 + 7) + 32 * v38));
    v57 = *((_QWORD *)v9 + 2);
    v47 = __OFADD__(v57, 1);
    v48 = v57 + 1;
    if (v47)
      goto LABEL_72;
    goto LABEL_55;
  }
LABEL_75:
  result = sub_21C3A867C();
  __break(1u);
  return result;
}

